; ModuleID = '../bcout/drivers/tty/synclink.llvm.bc'
source_filename = "drivers/tty/synclink.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_synclink_init6:\09\09\09"
module asm ".long\09synclink_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon.2, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.2 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.86, %struct.list_head, %struct.list_head, %union.anon.87 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.3, i8* }
%union.anon.3 = type { i64 }
%struct.lockref = type { %union.anon.84 }
%union.anon.84 = type { %struct.anon.85 }
%struct.anon.85 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.4, %union.anon.76, %struct.atomic_t, [8 x i8] }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.76 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.77, i32 }
%union.anon.77 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.69, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.20, [0 x i64] }
%struct.anon.20 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.21, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.21 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.22 }
%union.anon.22 = type { %struct.anon.23 }
%struct.anon.23 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.kmem_cache = type opaque
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.29, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.30, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.31, %union.anon.35, %struct.key_restriction* }
%union.anon.29 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.30 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.31 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.32, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.32 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.35 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.37, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.37 = type { %struct.anon.38 }
%struct.anon.38 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.89, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.129, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.89 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.42, %union.anon.45, %union.anon.46, [48 x i8], %union.anon.47, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.49, i32, i32, i32, i16, i16, %union.anon.51, %union.anon.52, %union.anon.53, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.44 }
%union.anon.44 = type { %struct.net_device* }
%union.anon.45 = type { %struct.sock* }
%union.anon.46 = type { i64 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, void (%struct.sk_buff*)* }
%union.anon.49 = type { i32 }
%union.anon.51 = type { i32 }
%union.anon.52 = type { i32 }
%union.anon.53 = type { i16 }
%struct.ifreq = type { %union.anon.90, %union.anon.91 }
%union.anon.90 = type { [16 x i8] }
%union.anon.91 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.93 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.93 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.94 }
%union.anon.94 = type { %struct.anon.95 }
%struct.anon.95 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.126 }
%union.anon.126 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.127, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.127 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.128 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.128 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.129 = type { i8* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.40, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.40 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.41 }
%union.anon.41 = type { [4 x i32] }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.54 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.54 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.sock = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.poll_table_struct = type opaque
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.tty_buffer = type { %union.anon.0, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.0 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.55, %union.anon.56, i32 }
%struct.request_queue = type opaque
%union.anon.55 = type { %struct.list_head }
%union.anon.56 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.57 }
%struct.anon.57 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.61 }
%struct.anon.61 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.68, i32, [12 x i8] }
%union.anon.68 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.69 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.70, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.73 }
%union.anon.70 = type { %struct.anon.71 }
%struct.anon.71 = type { i64, i64 }
%union.anon.73 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.27 }
%union.anon.27 = type { %struct.anon.28, [48 x i8] }
%struct.anon.28 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.86 = type { %struct.list_head }
%union.anon.87 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.78, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.79, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.80, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.83, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.78 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.79 = type { %struct.callback_head }
%union.anon.80 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.6 }
%union.anon.6 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.7, %union.anon.8 }
%union.anon.7 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.8 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.83 = type { %struct.pipe_inode_info* }
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.39 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.39 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.88, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.88 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.81 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.81 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.serial_icounter_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x i32] }
%struct.serial_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, [1 x i8], i32, i16, i16, i8*, i16, i32, i64 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.mgsl_struct = type { i32, %struct.tty_port, i32, i32, %struct.mgsl_icount, i32, i32, i16, i16, i8*, i32, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, %struct.timer_list, %struct.mgsl_struct*, %struct.spinlock, %struct.work_struct, i32, i32, i32, i32, i8, i32, i8, i32, i32, i32, i32, i8*, i32, i64, i32, %struct._DMABUFFERENTRY*, i32, i32, i32, i32, %struct._DMABUFFERENTRY*, i32, i32, i8*, i32, i32, i32, i32, [5 x %struct.tx_holding_buffer], i8, i8, i8, i8, i8, i32, i16, i16, [25 x i8], i8, i8, i32, i32, i8, i32, i64, i8, i32, i8, i16, i16, i16, %struct._MGSL_PARAMS, i8, i8, i32, i32, i32, i8*, i32, i8, i8*, i32, i32, i8, i32, i8*, i8, i8, i8, %struct._input_signal_events, i32, %struct.spinlock, %struct.net_device* }
%struct.mgsl_icount = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._DMABUFFERENTRY = type { i32, i16, i16, i16, i16, i32, i8*, i32, i64 }
%struct.tx_holding_buffer = type { i32, i8* }
%struct._MGSL_PARAMS = type { i64, i8, i16, i8, i64, i8, i16, i8, i8, i64, i8, i8, i8 }
%struct._input_signal_events = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.130, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.130 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.hdlc_device = type { i32 (%struct.net_device*, i16, i16)*, i32 (%struct.sk_buff*, %struct.net_device*)*, %struct.hdlc_proto*, i32, i32, %struct.spinlock, i8*, i8* }
%struct.hdlc_proto = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, void (%struct.net_device*)*, void (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*)*, i16 (%struct.sk_buff*, %struct.net_device*)*, i32 (%struct.sk_buff*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, %struct.module*, %struct.hdlc_proto* }
%struct.sync_serial_settings = type { i32, i32, i16 }
%struct.if_settings = type { i32, i32, %union.anon.92 }
%union.anon.92 = type { %struct.raw_hdlc_proto* }
%struct.raw_hdlc_proto = type { i16, i16 }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }

@__param_str_break_on_load = internal constant [23 x i8] c"synclink.break_on_load\00", align 16, !dbg !0
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@break_on_load = internal global i8 0, align 1, !dbg !7822
@__param_break_on_load = internal constant %struct.kernel_param { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__param_str_break_on_load, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @break_on_load } }, section "__param", align 8, !dbg !7705
@__UNIQUE_ID_break_on_loadtype319 = internal constant [37 x i8] c"synclink.parmtype=break_on_load:bool\00", section ".modinfo", align 1, !dbg !7755
@__param_str_ttymajor = internal constant [18 x i8] c"synclink.ttymajor\00", align 16, !dbg !7828
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@ttymajor = internal global i32 0, align 4, !dbg !7824
@__param_ttymajor = internal constant %struct.kernel_param { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__param_str_ttymajor, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @ttymajor to i8*) } }, section "__param", align 8, !dbg !7758
@__UNIQUE_ID_ttymajortype320 = internal constant [31 x i8] c"synclink.parmtype=ttymajor:int\00", section ".modinfo", align 1, !dbg !7760
@__param_str_io = internal constant [12 x i8] c"synclink.io\00", align 1, !dbg !7833
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 8
@__param_arr_io = internal constant %struct.kparam_array { i32 10, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([10 x i32]* @io to i8*) }, align 8, !dbg !7836
@__param_io = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__param_str_io, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 2, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_io } }, section "__param", align 8, !dbg !7765
@__UNIQUE_ID_iotype321 = internal constant [34 x i8] c"synclink.parmtype=io:array of int\00", section ".modinfo", align 1, !dbg !7767
@__param_str_irq = internal constant [13 x i8] c"synclink.irq\00", align 1, !dbg !7840
@__param_arr_irq = internal constant %struct.kparam_array { i32 10, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([10 x i32]* @irq to i8*) }, align 8, !dbg !7845
@__param_irq = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__param_str_irq, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 2, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_irq } }, section "__param", align 8, !dbg !7772
@__UNIQUE_ID_irqtype322 = internal constant [35 x i8] c"synclink.parmtype=irq:array of int\00", section ".modinfo", align 1, !dbg !7774
@__param_str_dma = internal constant [13 x i8] c"synclink.dma\00", align 1, !dbg !7849
@__param_arr_dma = internal constant %struct.kparam_array { i32 10, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([10 x i32]* @dma to i8*) }, align 8, !dbg !7851
@__param_dma = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__param_str_dma, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 2, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_dma } }, section "__param", align 8, !dbg !7779
@__UNIQUE_ID_dmatype323 = internal constant [35 x i8] c"synclink.parmtype=dma:array of int\00", section ".modinfo", align 1, !dbg !7781
@__param_str_debug_level = internal constant [21 x i8] c"synclink.debug_level\00", align 16, !dbg !7855
@debug_level = internal global i32 0, align 4, !dbg !7826
@__param_debug_level = internal constant %struct.kernel_param { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__param_str_debug_level, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @debug_level to i8*) } }, section "__param", align 8, !dbg !7783
@__UNIQUE_ID_debug_leveltype324 = internal constant [34 x i8] c"synclink.parmtype=debug_level:int\00", section ".modinfo", align 1, !dbg !7785
@__param_str_maxframe = internal constant [18 x i8] c"synclink.maxframe\00", align 16, !dbg !7857
@__param_arr_maxframe = internal constant %struct.kparam_array { i32 20, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([20 x i32]* @maxframe to i8*) }, align 8, !dbg !7859
@__param_maxframe = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__param_str_maxframe, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_maxframe } }, section "__param", align 8, !dbg !7787
@__UNIQUE_ID_maxframetype325 = internal constant [40 x i8] c"synclink.parmtype=maxframe:array of int\00", section ".modinfo", align 1, !dbg !7789
@__param_str_txdmabufs = internal constant [19 x i8] c"synclink.txdmabufs\00", align 16, !dbg !7864
@__param_arr_txdmabufs = internal constant %struct.kparam_array { i32 20, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([20 x i32]* @txdmabufs to i8*) }, align 8, !dbg !7867
@__param_txdmabufs = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__param_str_txdmabufs, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_txdmabufs } }, section "__param", align 8, !dbg !7794
@__UNIQUE_ID_txdmabufstype326 = internal constant [41 x i8] c"synclink.parmtype=txdmabufs:array of int\00", section ".modinfo", align 1, !dbg !7796
@__param_str_txholdbufs = internal constant [20 x i8] c"synclink.txholdbufs\00", align 16, !dbg !7871
@__param_arr_txholdbufs = internal constant %struct.kparam_array { i32 20, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([20 x i32]* @txholdbufs to i8*) }, align 8, !dbg !7874
@__param_txholdbufs = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_txholdbufs, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_txholdbufs } }, section "__param", align 8, !dbg !7801
@__UNIQUE_ID_txholdbufstype327 = internal constant [42 x i8] c"synclink.parmtype=txholdbufs:array of int\00", section ".modinfo", align 1, !dbg !7803
@__UNIQUE_ID_file328 = internal constant [35 x i8] c"synclink.file=drivers/tty/synclink\00", section ".modinfo", align 1, !dbg !7808
@__UNIQUE_ID_license329 = internal constant [21 x i8] c"synclink.license=GPL\00", section ".modinfo", align 1, !dbg !7810
@__UNIQUE_ID___addressable_synclink_init347 = internal global i8* bitcast (i32 ()* @synclink_init to i8*), section ".discard.addressable", align 8, !dbg !7815
@__exitcall_synclink_exit = internal global void ()* @synclink_exit, section ".exitcall.exit", align 8, !dbg !7817
@io = internal global [10 x i32] zeroinitializer, align 16, !dbg !7838
@irq = internal global [10 x i32] zeroinitializer, align 16, !dbg !7847
@dma = internal global [10 x i32] zeroinitializer, align 16, !dbg !7853
@maxframe = internal global [20 x i32] zeroinitializer, align 16, !dbg !7861
@txdmabufs = internal global [20 x i32] zeroinitializer, align 16, !dbg !7869
@txholdbufs = internal global [20 x i32] zeroinitializer, align 16, !dbg !7876
@.str = private unnamed_addr constant [18 x i8] c"Unloading %s: %s\0A\00", align 1
@driver_name = internal global i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), align 8, !dbg !7878
@driver_version = internal global i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0), align 8, !dbg !7880
@serial_driver = internal global %struct.tty_driver* null, align 8, !dbg !7882
@.str.1 = private unnamed_addr constant [47 x i8] c"%s(%d) failed to unregister tty driver err=%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"drivers/tty/synclink.c\00", align 1
@mgsl_device_list = internal global %struct.mgsl_struct* null, align 8, !dbg !7884
@pci_registered = internal global i8 0, align 1, !dbg !7886
@synclink_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([3 x %struct.pci_device_id], [3 x %struct.pci_device_id]* @synclink_pci_tbl, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @synclink_init_one, void (%struct.pci_dev*)* @synclink_remove_one, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !7888
@.str.3 = private unnamed_addr constant [23 x i8] c"SyncLink serial driver\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"$Revision: 4.38 $\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"%s(%d):mgsl_release_resources(%s) entry\0A\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@iomem_resource = external dso_local global %struct.resource, align 8
@.str.6 = private unnamed_addr constant [40 x i8] c"%s(%d):mgsl_release_resources(%s) exit\0A\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"synclink\00", align 1
@synclink_pci_tbl = internal constant [3 x %struct.pci_device_id] [%struct.pci_device_id { i32 5056, i32 16, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 5056, i32 528, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !8162
@.str.8 = private unnamed_addr constant [30 x i8] c"error enabling pci device %p\0A\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"can't allocate device instance data.\0A\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"Error can't allocate device instance data\0A\00", align 1
@mgsl_port_ops = internal constant %struct.tty_port_operations { i32 (%struct.tty_port*)* @carrier_raised, void (%struct.tty_port*, i32)* @dtr_rts, void (%struct.tty_port*)* null, i32 (%struct.tty_port*, %struct.tty_struct*)* null, void (%struct.tty_port*)* null }, align 8, !dbg !8172
@mgsl_allocate_device.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8165
@.str.11 = private unnamed_addr constant [27 x i8] c"&info->status_event_wait_q\00", align 1
@mgsl_allocate_device.__key.12 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8170
@.str.13 = private unnamed_addr constant [20 x i8] c"&info->event_wait_q\00", align 1
@default_params = internal global %struct._MGSL_PARAMS { i64 2, i8 0, i16 1, i8 3, i64 0, i8 -1, i16 1, i8 0, i8 0, i64 9600, i8 8, i8 1, i8 0 }, align 8, !dbg !8174
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.14 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.15 = private unnamed_addr constant [34 x i8] c"%s(%d):mgsl_bh_handler(%s) entry\0A\00", align 1
@.str.16 = private unnamed_addr constant [46 x i8] c"%s(%d):mgsl_bh_handler() work item action=%d\0A\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"Unknown work item ID=%08X!\0A\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"%s(%d):mgsl_bh_handler(%s) exit\0A\00", align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"%s(%d):mgsl_bh_receive(%s)\0A\00", align 1
@.str.20 = private unnamed_addr constant [50 x i8] c"%s(%d):mgsl_get_rx_frame(%s) status=%04X size=%d\0A\00", align 1
@.str.21 = private unnamed_addr constant [49 x i8] c"%s(%d):mgsl_get_rx_frame(%s) rx frame status=%d\0A\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"%s tx data:\0A\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"%s rx data:\0A\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"hdlcdev_rx(%s)\0A\00", align 1
@.str.30 = private unnamed_addr constant [40 x i8] c"\015%s: can't alloc skb, dropping packet\0A\00", align 1
@.str.31 = private unnamed_addr constant [54 x i8] c"%s(%d):mgsl_get_raw_rx_frame(%s) status=%04X size=%d\0A\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"%s(%d):usc_start_receiver(%s)\0A\00", align 1
@.str.33 = private unnamed_addr constant [30 x i8] c"%s(%d):usc_stop_receiver(%s)\0A\00", align 1
@.str.34 = private unnamed_addr constant [39 x i8] c"%s(%d):mgsl_bh_transmit() entry on %s\0A\00", align 1
@.str.35 = private unnamed_addr constant [37 x i8] c"%s(%d):mgsl_bh_status() entry on %s\0A\00", align 1
@mgsl_device_count = internal global i32 0, align 4, !dbg !8176
@.str.36 = private unnamed_addr constant [8 x i8] c"ttySL%d\00", align 1
@.str.37 = private unnamed_addr constant [67 x i8] c"SyncLink PCI v%d %s: IO=%04X IRQ=%d Mem=%08X,%08X MaxFrameSize=%u\0A\00", align 1
@.str.38 = private unnamed_addr constant [37 x i8] c"\013%s:hdlc device allocation failure\0A\00", align 1
@hdlcdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @hdlcdev_open, i32 (%struct.net_device*)* @hdlcdev_close, i32 (%struct.sk_buff*, %struct.net_device*)* @hdlc_start_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*, i8*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ifreq*, i32)* @hdlcdev_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @hdlcdev_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !8178
@.str.39 = private unnamed_addr constant [37 x i8] c"\014%s:unable to register hdlc device\0A\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"%s:hdlcdev_open(%s)\0A\00", align 1
@.str.41 = private unnamed_addr constant [32 x i8] c"\014%s: hdlc_open returning busy\0A\00", align 1
@.str.42 = private unnamed_addr constant [25 x i8] c"%s(%d):mgsl_startup(%s)\0A\00", align 1
@.str.43 = private unnamed_addr constant [44 x i8] c"\013%s(%d):%s can't allocate transmit buffer\0A\00", align 1
@.str.44 = private unnamed_addr constant [28 x i8] c"%s(%d):mgsl_tx_timeout(%s)\0A\00", align 1
@.str.45 = private unnamed_addr constant [52 x i8] c"%s(%d):I/O address conflict on device %s Addr=%08X\0A\00", align 1
@.str.46 = private unnamed_addr constant [52 x i8] c"%s(%d):Can't request interrupt on device %s IRQ=%d\0A\00", align 1
@.str.47 = private unnamed_addr constant [46 x i8] c"%s(%d):mem addr conflict device %s Addr=%08X\0A\00", align 1
@.str.48 = private unnamed_addr constant [50 x i8] c"%s(%d):lcr mem addr conflict device %s Addr=%08X\0A\00", align 1
@.str.49 = private unnamed_addr constant [58 x i8] c"%s(%d):Can't map shared memory on device %s MemAddr=%08X\0A\00", align 1
@.str.50 = private unnamed_addr constant [50 x i8] c"%s(%d):Failed shared memory test %s MemAddr=%08X\0A\00", align 1
@.str.51 = private unnamed_addr constant [55 x i8] c"%s(%d):Can't map LCR memory on device %s MemAddr=%08X\0A\00", align 1
@.str.52 = private unnamed_addr constant [55 x i8] c"%s(%d):Can't allocate DMA buffers on device %s DMA=%d\0A\00", align 1
@.str.53 = private unnamed_addr constant [35 x i8] c"\017%s(%d):mgsl_interrupt(%d)entry.\0A\00", align 1
@.str.54 = private unnamed_addr constant [41 x i8] c"%s(%d):%s UscVector=%08X DmaVector=%08X\0A\00", align 1
@UscIsrTable = internal global [7 x void (%struct.mgsl_struct*)*] [void (%struct.mgsl_struct*)* @mgsl_isr_null, void (%struct.mgsl_struct*)* @mgsl_isr_misc, void (%struct.mgsl_struct*)* @mgsl_isr_io_pin, void (%struct.mgsl_struct*)* @mgsl_isr_transmit_data, void (%struct.mgsl_struct*)* @mgsl_isr_transmit_status, void (%struct.mgsl_struct*)* @mgsl_isr_receive_data, void (%struct.mgsl_struct*)* @mgsl_isr_receive_status], align 16, !dbg !8180
@.str.55 = private unnamed_addr constant [33 x i8] c"\013%s(%d):%s isr overflow irq=%d\0A\00", align 1
@.str.56 = private unnamed_addr constant [29 x i8] c"%s(%d):%s queueing bh task.\0A\00", align 1
@.str.57 = private unnamed_addr constant [34 x i8] c"\017%s(%d):mgsl_interrupt(%d)exit.\0A\00", align 1
@.str.58 = private unnamed_addr constant [34 x i8] c"%s(%d):mgsl_isr_misc status=%04X\0A\00", align 1
@.str.59 = private unnamed_addr constant [36 x i8] c"%s(%d):mgsl_isr_io_pin status=%04X\0A\00", align 1
@.str.60 = private unnamed_addr constant [16 x i8] c"%s CD now %s...\00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.62 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.63 = private unnamed_addr constant [23 x i8] c"doing serial hangup...\00", align 1
@.str.64 = private unnamed_addr constant [16 x i8] c"CTS tx start...\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"CTS tx stop...\00", align 1
@.str.66 = private unnamed_addr constant [34 x i8] c"%s(%d):usc_start_transmitter(%s)\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.67 = private unnamed_addr constant [33 x i8] c"%s(%d):usc_stop_transmitter(%s)\0A\00", align 1
@.str.68 = private unnamed_addr constant [43 x i8] c"%s(%d):mgsl_isr_transmit_data xmit_cnt=%d\0A\00", align 1
@.str.69 = private unnamed_addr constant [45 x i8] c"%s(%d):mgsl_isr_transmit_status status=%04X\0A\00", align 1
@.str.70 = private unnamed_addr constant [30 x i8] c"%s(%d):mgsl_isr_receive_data\0A\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"rxerr=%04X\0A\00", align 1
@.str.72 = private unnamed_addr constant [51 x i8] c"%s(%d):rx=%d brk=%d parity=%d frame=%d overrun=%d\0A\00", align 1
@.str.73 = private unnamed_addr constant [44 x i8] c"%s(%d):mgsl_isr_receive_status status=%04X\0A\00", align 1
@.str.74 = private unnamed_addr constant [46 x i8] c"%s(%d):mgsl_isr_transmit_dma(%s) status=%04X\0A\00", align 1
@.str.75 = private unnamed_addr constant [45 x i8] c"%s(%d):mgsl_isr_receive_dma(%s) status=%04X\0A\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@mgsl_memory_test.BitPatterns = internal global [7 x i64] [i64 0, i64 1431655765, i64 2863311530, i64 1717986918, i64 2576980377, i64 4294967295, i64 305419896], align 16, !dbg !8187
@.str.76 = private unnamed_addr constant [48 x i8] c"%s(%d):Allocating %d TX and %d RX DMA buffers.\0A\00", align 1
@.str.77 = private unnamed_addr constant [41 x i8] c"%s(%d):Can't allocate DMA buffer memory\0A\00", align 1
@.str.78 = private unnamed_addr constant [45 x i8] c"%s %s(%d)  allocating %d tx holding buffers\0A\00", align 1
@.str.79 = private unnamed_addr constant [26 x i8] c"%s(%d):Testing device %s\0A\00", align 1
@.str.80 = private unnamed_addr constant [54 x i8] c"%s(%d):Register test failure for device %s Addr=%04X\0A\00", align 1
@.str.81 = private unnamed_addr constant [52 x i8] c"%s(%d):Interrupt test failure for device %s IRQ=%d\0A\00", align 1
@.str.82 = private unnamed_addr constant [46 x i8] c"%s(%d):DMA test failure for device %s DMA=%d\0A\00", align 1
@.str.83 = private unnamed_addr constant [37 x i8] c"%s(%d):device %s passed diagnostics\0A\00", align 1
@mgsl_register_test.BitPatterns = internal global [8 x i16] [i16 0, i16 -1, i16 -21846, i16 21845, i16 4660, i16 26985, i16 -26986, i16 3855], align 16, !dbg !8193
@mgsl_register_test.Patterncount = internal global i32 8, align 4, !dbg !8197
@.str.84 = private unnamed_addr constant [31 x i8] c"%s(%d):mgsl_change_params(%s)\0A\00", align 1
@.str.85 = private unnamed_addr constant [22 x i8] c"%s:hdlcdev_close(%s)\0A\00", align 1
@.str.86 = private unnamed_addr constant [26 x i8] c"%s(%d):mgsl_shutdown(%s)\0A\00", align 1
@.str.87 = private unnamed_addr constant [22 x i8] c"%s:hdlcdev_ioctl(%s)\0A\00", align 1
@.str.88 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.89 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"hdlcdev_tx_timeout(%s)\0A\00", align 1
@.str.91 = private unnamed_addr constant [20 x i8] c"\016%s:hdlc_xmit(%s)\0A\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.93 = private unnamed_addr constant [44 x i8] c"%s:failed to register PCI driver, error=%d\0A\00", align 1
@.str.94 = private unnamed_addr constant [6 x i8] c"ttySL\00", align 1
@tty_std_termios = external dso_local global %struct.ktermios, align 4
@mgsl_ops = internal constant %struct.tty_operations { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)* null, i32 (%struct.tty_driver*, %struct.tty_struct*)* @mgsl_install, void (%struct.tty_driver*, %struct.tty_struct*)* null, i32 (%struct.tty_struct*, %struct.file*)* @mgsl_open, void (%struct.tty_struct*, %struct.file*)* @mgsl_close, void (%struct.tty_struct*)* null, void (%struct.tty_struct*)* null, i32 (%struct.tty_struct*, i8*, i32)* @mgsl_write, i32 (%struct.tty_struct*, i8)* @mgsl_put_char, void (%struct.tty_struct*)* @mgsl_flush_chars, i32 (%struct.tty_struct*)* @mgsl_write_room, i32 (%struct.tty_struct*)* @mgsl_chars_in_buffer, i32 (%struct.tty_struct*, i32, i64)* @mgsl_ioctl, i64 (%struct.tty_struct*, i32, i64)* null, void (%struct.tty_struct*, %struct.ktermios*)* @mgsl_set_termios, void (%struct.tty_struct*)* @mgsl_throttle, void (%struct.tty_struct*)* @mgsl_unthrottle, void (%struct.tty_struct*)* @mgsl_stop, void (%struct.tty_struct*)* @mgsl_start, void (%struct.tty_struct*)* @mgsl_hangup, i32 (%struct.tty_struct*, i32)* @mgsl_break, void (%struct.tty_struct*)* @mgsl_flush_buffer, void (%struct.tty_struct*)* null, void (%struct.tty_struct*, i32)* @mgsl_wait_until_sent, void (%struct.tty_struct*, i8)* @mgsl_send_xchar, i32 (%struct.tty_struct*)* @tiocmget, i32 (%struct.tty_struct*, i32, i32)* @tiocmset, i32 (%struct.tty_struct*, %struct.winsize*)* null, i32 (%struct.tty_struct*, %struct.termiox*)* null, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)* @msgl_get_icount, i32 (%struct.tty_struct*, %struct.serial_struct*)* null, i32 (%struct.tty_struct*, %struct.serial_struct*)* null, void (%struct.tty_struct*, %struct.seq_file*)* null, i32 (%struct.seq_file*, i8*)* @mgsl_proc_show }, align 8, !dbg !8199
@.str.95 = private unnamed_addr constant [40 x i8] c"%s(%d):Couldn't register serial driver\0A\00", align 1
@.str.96 = private unnamed_addr constant [21 x i8] c"%s %s, tty major#%d\0A\00", align 1
@.str.97 = private unnamed_addr constant [41 x i8] c"%s(%d):mgsl_open with invalid line #%d.\0A\00", align 1
@.str.98 = private unnamed_addr constant [10 x i8] c"mgsl_open\00", align 1
@.str.99 = private unnamed_addr constant [42 x i8] c"%s(%d):mgsl_open(%s), old ref count = %d\0A\00", align 1
@.str.100 = private unnamed_addr constant [40 x i8] c"%s(%d):block_til_ready(%s) returned %d\0A\00", align 1
@.str.101 = private unnamed_addr constant [30 x i8] c"%s(%d):mgsl_open(%s) success\0A\00", align 1
@.str.102 = private unnamed_addr constant [30 x i8] c"%s(%d):block_til_ready on %s\0A\00", align 1
@.str.103 = private unnamed_addr constant [52 x i8] c"%s(%d):block_til_ready before block on %s count=%d\0A\00", align 1
@.str.104 = private unnamed_addr constant [48 x i8] c"%s(%d):block_til_ready blocking on %s count=%d\0A\00", align 1
@.str.105 = private unnamed_addr constant [54 x i8] c"%s(%d):block_til_ready after blocking on %s count=%d\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.106 = private unnamed_addr constant [11 x i8] c"mgsl_close\00", align 1
@.str.107 = private unnamed_addr constant [39 x i8] c"%s(%d):mgsl_close(%s) entry, count=%d\0A\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"%s(%d):mgsl_close(%s) exit, count=%d\0A\00", align 1
@.str.109 = private unnamed_addr constant [32 x i8] c"%s(%d):mgsl_write(%s) count=%d\0A\00", align 1
@.str.110 = private unnamed_addr constant [11 x i8] c"mgsl_write\00", align 1
@.str.111 = private unnamed_addr constant [46 x i8] c"%s(%d):mgsl_write(%s) sync xmit_cnt flushing\0A\00", align 1
@.str.112 = private unnamed_addr constant [46 x i8] c"%s(%d):mgsl_write(%s) sync transmit accepted\0A\00", align 1
@.str.113 = private unnamed_addr constant [36 x i8] c"%s(%d):mgsl_write(%s) returning=%d\0A\00", align 1
@.str.114 = private unnamed_addr constant [34 x i8] c"\017%s(%d):mgsl_put_char(%d) on %s\0A\00", align 1
@.str.115 = private unnamed_addr constant [14 x i8] c"mgsl_put_char\00", align 1
@.str.116 = private unnamed_addr constant [51 x i8] c"%s(%d):mgsl_flush_chars() entry on %s xmit_cnt=%d\0A\00", align 1
@.str.117 = private unnamed_addr constant [17 x i8] c"mgsl_flush_chars\00", align 1
@.str.118 = private unnamed_addr constant [60 x i8] c"%s(%d):mgsl_flush_chars() entry on %s starting transmitter\0A\00", align 1
@.str.119 = private unnamed_addr constant [16 x i8] c"mgsl_write_room\00", align 1
@.str.120 = private unnamed_addr constant [31 x i8] c"%s(%d):mgsl_write_room(%s)=%d\0A\00", align 1
@.str.121 = private unnamed_addr constant [33 x i8] c"%s(%d):mgsl_chars_in_buffer(%s)\0A\00", align 1
@.str.122 = private unnamed_addr constant [21 x i8] c"mgsl_chars_in_buffer\00", align 1
@.str.123 = private unnamed_addr constant [36 x i8] c"%s(%d):mgsl_chars_in_buffer(%s)=%d\0A\00", align 1
@.str.124 = private unnamed_addr constant [31 x i8] c"%s(%d):mgsl_ioctl %s cmd=%08X\0A\00", align 1
@.str.125 = private unnamed_addr constant [11 x i8] c"mgsl_ioctl\00", align 1
@.str.126 = private unnamed_addr constant [28 x i8] c"%s(%d):mgsl_get_params(%s)\0A\00", align 1
@.str.127 = private unnamed_addr constant [52 x i8] c"%s(%d):mgsl_get_params(%s) user buffer copy failed\0A\00", align 1
@.str.128 = private unnamed_addr constant [27 x i8] c"%s(%d):mgsl_set_params %s\0A\00", align 1
@.str.129 = private unnamed_addr constant [52 x i8] c"%s(%d):mgsl_set_params(%s) user buffer copy failed\0A\00", align 1
@.str.130 = private unnamed_addr constant [31 x i8] c"%s(%d):mgsl_get_txidle(%s)=%d\0A\00", align 1
@.str.131 = private unnamed_addr constant [52 x i8] c"%s(%d):mgsl_get_txidle(%s) user buffer copy failed\0A\00", align 1
@.str.132 = private unnamed_addr constant [31 x i8] c"%s(%d):mgsl_set_txidle(%s,%d)\0A\00", align 1
@.str.133 = private unnamed_addr constant [29 x i8] c"%s(%d):mgsl_txenable(%s,%d)\0A\00", align 1
@.str.134 = private unnamed_addr constant [29 x i8] c"%s(%d):mgsl_rxenable(%s,%d)\0A\00", align 1
@.str.135 = private unnamed_addr constant [25 x i8] c"%s(%d):mgsl_txabort(%s)\0A\00", align 1
@.str.136 = private unnamed_addr constant [31 x i8] c"%s(%d):mgsl_wait_event(%s,%d)\0A\00", align 1
@.str.137 = private unnamed_addr constant [28 x i8] c"%s(%d):mgsl_set_termios %s\0A\00", align 1
@.str.138 = private unnamed_addr constant [32 x i8] c"%s(%d):mgsl_throttle(%s) entry\0A\00", align 1
@.str.139 = private unnamed_addr constant [14 x i8] c"mgsl_throttle\00", align 1
@.str.140 = private unnamed_addr constant [34 x i8] c"%s(%d):mgsl_unthrottle(%s) entry\0A\00", align 1
@.str.141 = private unnamed_addr constant [16 x i8] c"mgsl_unthrottle\00", align 1
@.str.142 = private unnamed_addr constant [10 x i8] c"mgsl_stop\00", align 1
@.str.143 = private unnamed_addr constant [15 x i8] c"mgsl_stop(%s)\0A\00", align 1
@.str.144 = private unnamed_addr constant [11 x i8] c"mgsl_start\00", align 1
@.str.145 = private unnamed_addr constant [16 x i8] c"mgsl_start(%s)\0A\00", align 1
@.str.146 = private unnamed_addr constant [24 x i8] c"%s(%d):mgsl_hangup(%s)\0A\00", align 1
@.str.147 = private unnamed_addr constant [12 x i8] c"mgsl_hangup\00", align 1
@.str.148 = private unnamed_addr constant [26 x i8] c"%s(%d):mgsl_break(%s,%d)\0A\00", align 1
@.str.149 = private unnamed_addr constant [11 x i8] c"mgsl_break\00", align 1
@.str.150 = private unnamed_addr constant [36 x i8] c"%s(%d):mgsl_flush_buffer(%s) entry\0A\00", align 1
@.str.151 = private unnamed_addr constant [18 x i8] c"mgsl_flush_buffer\00", align 1
@.str.152 = private unnamed_addr constant [39 x i8] c"%s(%d):mgsl_wait_until_sent(%s) entry\0A\00", align 1
@.str.153 = private unnamed_addr constant [21 x i8] c"mgsl_wait_until_sent\00", align 1
@.str.154 = private unnamed_addr constant [38 x i8] c"%s(%d):mgsl_wait_until_sent(%s) exit\0A\00", align 1
@.str.155 = private unnamed_addr constant [31 x i8] c"%s(%d):mgsl_send_xchar(%s,%d)\0A\00", align 1
@.str.156 = private unnamed_addr constant [16 x i8] c"mgsl_send_xchar\00", align 1
@.str.157 = private unnamed_addr constant [33 x i8] c"%s(%d):%s tiocmget() value=%08X\0A\00", align 1
@.str.158 = private unnamed_addr constant [27 x i8] c"%s(%d):%s tiocmset(%x,%x)\0A\00", align 1
@.str.159 = private unnamed_addr constant [20 x i8] c"synclink driver:%s\0A\00", align 1
@.str.160 = private unnamed_addr constant [40 x i8] c"%s:PCI io:%04X irq:%d mem:%08X lcr:%08X\00", align 1
@.str.161 = private unnamed_addr constant [5 x i8] c"|RTS\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"|CTS\00", align 1
@.str.163 = private unnamed_addr constant [5 x i8] c"|DTR\00", align 1
@.str.164 = private unnamed_addr constant [5 x i8] c"|DSR\00", align 1
@.str.165 = private unnamed_addr constant [4 x i8] c"|CD\00", align 1
@.str.166 = private unnamed_addr constant [4 x i8] c"|RI\00", align 1
@.str.167 = private unnamed_addr constant [22 x i8] c" HDLC txok:%d rxok:%d\00", align 1
@.str.168 = private unnamed_addr constant [12 x i8] c" txunder:%d\00", align 1
@.str.169 = private unnamed_addr constant [12 x i8] c" txabort:%d\00", align 1
@.str.170 = private unnamed_addr constant [12 x i8] c" rxshort:%d\00", align 1
@.str.171 = private unnamed_addr constant [11 x i8] c" rxlong:%d\00", align 1
@.str.172 = private unnamed_addr constant [11 x i8] c" rxover:%d\00", align 1
@.str.173 = private unnamed_addr constant [10 x i8] c" rxcrc:%d\00", align 1
@.str.174 = private unnamed_addr constant [19 x i8] c" ASYNC tx:%d rx:%d\00", align 1
@.str.175 = private unnamed_addr constant [7 x i8] c" fe:%d\00", align 1
@.str.176 = private unnamed_addr constant [7 x i8] c" pe:%d\00", align 1
@.str.177 = private unnamed_addr constant [8 x i8] c" brk:%d\00", align 1
@.str.178 = private unnamed_addr constant [7 x i8] c" oe:%d\00", align 1
@.str.179 = private unnamed_addr constant [5 x i8] c" %s\0A\00", align 1
@.str.180 = private unnamed_addr constant [47 x i8] c"txactive=%d bh_req=%d bh_run=%d pending_bh=%x\0A\00", align 1
@.str.181 = private unnamed_addr constant [110 x i8] c"tcsr=%04X tdmr=%04X ticr=%04X rcsr=%04X rdmr=%04X\0Aricr=%04X icr =%04X dccr=%04X tmr=%04X tccr=%04X ccar=%04X\0A\00", align 1
@llvm.used = appending global [23 x i8*] [i8* bitcast (%struct.kernel_param* @__param_break_on_load to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_break_on_loadtype319, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ttymajor to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_ttymajortype320, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_io to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_iotype321, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_irq to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_irqtype322, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_dma to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_dmatype323, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_debug_level to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_debug_leveltype324, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_maxframe to i8*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_maxframetype325, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_txdmabufs to i8*), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_txdmabufstype326, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_txholdbufs to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_txholdbufstype327, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_file328, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license329, i32 0, i32 0), i8* bitcast (void ()* @synclink_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_synclink_init347 to i8*), i8* bitcast (void ()** @__exitcall_synclink_exit to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @synclink_exit() #0 section ".exit.text" !dbg !8210 {
entry:
  call void @synclink_cleanup() #11, !dbg !8211
  ret void, !dbg !8212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @synclink_cleanup() #1 !dbg !8213 {
entry:
  %rc = alloca i32, align 4
  %info = alloca %struct.mgsl_struct*, align 8
  %tmp = alloca %struct.mgsl_struct*, align 8
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8214, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !8216, metadata !DIExpression()), !dbg !8217
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %tmp, metadata !8218, metadata !DIExpression()), !dbg !8219
  %0 = load i8*, i8** @driver_name, align 8, !dbg !8220
  %1 = load i8*, i8** @driver_version, align 8, !dbg !8221
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %0, i8* %1) #12, !dbg !8222
  %2 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8223
  %tobool = icmp ne %struct.tty_driver* %2, null, !dbg !8223
  br i1 %tobool, label %if.then, label %if.end5, !dbg !8225

if.then:                                          ; preds = %entry
  %3 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8226
  %call1 = call i32 @tty_unregister_driver(%struct.tty_driver* %3) #11, !dbg !8228
  store i32 %call1, i32* %rc, align 4, !dbg !8229
  %4 = load i32, i32* %rc, align 4, !dbg !8230
  %tobool2 = icmp ne i32 %4, 0, !dbg !8230
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8232

if.then3:                                         ; preds = %if.then
  %5 = load i32, i32* %rc, align 4, !dbg !8233
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 4253, i32 %5) #12, !dbg !8234
  br label %if.end, !dbg !8234

if.end:                                           ; preds = %if.then3, %if.then
  %6 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8235
  call void @put_tty_driver(%struct.tty_driver* %6) #11, !dbg !8236
  br label %if.end5, !dbg !8237

if.end5:                                          ; preds = %if.end, %entry
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** @mgsl_device_list, align 8, !dbg !8238
  store %struct.mgsl_struct* %7, %struct.mgsl_struct** %info, align 8, !dbg !8239
  br label %while.cond, !dbg !8240

while.cond:                                       ; preds = %while.body, %if.end5
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8241
  %tobool6 = icmp ne %struct.mgsl_struct* %8, null, !dbg !8240
  br i1 %tobool6, label %while.body, label %while.end, !dbg !8240

while.body:                                       ; preds = %while.cond
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8242
  call void @hdlcdev_exit(%struct.mgsl_struct* %9) #11, !dbg !8244
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8245
  call void @mgsl_release_resources(%struct.mgsl_struct* %10) #11, !dbg !8246
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8247
  store %struct.mgsl_struct* %11, %struct.mgsl_struct** %tmp, align 8, !dbg !8248
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8249
  %next_device = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 16, !dbg !8250
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %next_device, align 8, !dbg !8250
  store %struct.mgsl_struct* %13, %struct.mgsl_struct** %info, align 8, !dbg !8251
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %tmp, align 8, !dbg !8252
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 1, !dbg !8253
  call void @tty_port_destroy(%struct.tty_port* %port) #11, !dbg !8254
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %tmp, align 8, !dbg !8255
  %16 = bitcast %struct.mgsl_struct* %15 to i8*, !dbg !8255
  call void @kfree(i8* %16) #11, !dbg !8256
  br label %while.cond, !dbg !8240, !llvm.loop !8257

while.end:                                        ; preds = %while.cond
  %17 = load i8, i8* @pci_registered, align 1, !dbg !8259
  %tobool7 = trunc i8 %17 to i1, !dbg !8259
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8261

if.then8:                                         ; preds = %while.end
  call void @pci_unregister_driver(%struct.pci_driver* @synclink_pci_driver) #11, !dbg !8262
  br label %if.end9, !dbg !8262

if.end9:                                          ; preds = %if.then8, %while.end
  ret void, !dbg !8263
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @synclink_init() #0 section ".init.text" !dbg !8264 {
entry:
  %retval = alloca i32, align 4
  %rc = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8267, metadata !DIExpression()), !dbg !8268
  %0 = load i8, i8* @break_on_load, align 1, !dbg !8269
  %tobool = trunc i8 %0 to i1, !dbg !8269
  br i1 %tobool, label %if.then, label %if.end, !dbg !8271

if.then:                                          ; preds = %entry
  %call = call i8* @mgsl_get_text_ptr() #11, !dbg !8272
  br label %if.end, !dbg !8274

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** @driver_name, align 8, !dbg !8275
  %2 = load i8*, i8** @driver_version, align 8, !dbg !8276
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i64 0, i64 0), i8* %1, i8* %2) #12, !dbg !8277
  %call2 = call i32 @__pci_register_driver(%struct.pci_driver* @synclink_pci_driver, %struct.module* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)) #11, !dbg !8278
  store i32 %call2, i32* %rc, align 4, !dbg !8280
  %cmp = icmp slt i32 %call2, 0, !dbg !8281
  br i1 %cmp, label %if.then3, label %if.else, !dbg !8282

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %rc, align 4, !dbg !8283
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 %3) #12, !dbg !8284
  br label %if.end5, !dbg !8284

if.else:                                          ; preds = %if.end
  store i8 1, i8* @pci_registered, align 1, !dbg !8285
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  %call6 = call i32 @mgsl_init_tty() #11, !dbg !8286
  store i32 %call6, i32* %rc, align 4, !dbg !8288
  %cmp7 = icmp slt i32 %call6, 0, !dbg !8289
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !8290

if.then8:                                         ; preds = %if.end5
  br label %error, !dbg !8291

if.end9:                                          ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !8292
  br label %return, !dbg !8292

error:                                            ; preds = %if.then8
  call void @llvm.dbg.label(metadata !8293), !dbg !8294
  call void @synclink_cleanup() #11, !dbg !8295
  %4 = load i32, i32* %rc, align 4, !dbg !8296
  store i32 %4, i32* %retval, align 4, !dbg !8297
  br label %return, !dbg !8297

return:                                           ; preds = %error, %if.end9
  %5 = load i32, i32* %retval, align 4, !dbg !8298
  ret i32 %5, !dbg !8298
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @tty_unregister_driver(%struct.tty_driver*) #4

; Function Attrs: noredzone
declare dso_local void @put_tty_driver(%struct.tty_driver*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hdlcdev_exit(%struct.mgsl_struct* %info) #1 !dbg !8299 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !8300, metadata !DIExpression()), !dbg !8301
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8302
  %netdev = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 91, !dbg !8303
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !8303
  call void @unregister_hdlc_device(%struct.net_device* %1) #11, !dbg !8304
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8305
  %netdev1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 91, !dbg !8306
  %3 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !8306
  call void @free_netdev(%struct.net_device* %3) #11, !dbg !8307
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8308
  %netdev2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 91, !dbg !8309
  store %struct.net_device* null, %struct.net_device** %netdev2, align 8, !dbg !8310
  ret void, !dbg !8311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_release_resources(%struct.mgsl_struct* %info) #1 !dbg !8312 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  %0 = load i32, i32* @debug_level, align 4, !dbg !8315
  %cmp = icmp sge i32 %0, 3, !dbg !8317
  br i1 %cmp, label %if.then, label %if.end, !dbg !8318

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8319
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !8320
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !8319
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 4031, i8* %arraydecay) #12, !dbg !8321
  br label %if.end, !dbg !8321

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8322
  %irq_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 64, !dbg !8324
  %3 = load i8, i8* %irq_requested, align 8, !dbg !8324
  %tobool = trunc i8 %3 to i1, !dbg !8324
  br i1 %tobool, label %if.then1, label %if.end4, !dbg !8325

if.then1:                                         ; preds = %if.end
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8326
  %irq_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 62, !dbg !8328
  %5 = load i32, i32* %irq_level, align 8, !dbg !8328
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8329
  %7 = bitcast %struct.mgsl_struct* %6 to i8*, !dbg !8329
  %call2 = call i8* @free_irq(i32 %5, i8* %7) #11, !dbg !8330
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8331
  %irq_requested3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 64, !dbg !8332
  store i8 0, i8* %irq_requested3, align 8, !dbg !8333
  br label %if.end4, !dbg !8334

if.end4:                                          ; preds = %if.then1, %if.end
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8335
  %dma_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 66, !dbg !8337
  %10 = load i8, i8* %dma_requested, align 8, !dbg !8337
  %tobool5 = trunc i8 %10 to i1, !dbg !8337
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !8338

if.then6:                                         ; preds = %if.end4
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8339
  %dma_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 65, !dbg !8341
  %12 = load i32, i32* %dma_level, align 4, !dbg !8341
  call void @disable_dma(i32 %12) #11, !dbg !8342
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8343
  %dma_level7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 65, !dbg !8344
  %14 = load i32, i32* %dma_level7, align 4, !dbg !8344
  call void @free_dma(i32 %14) #11, !dbg !8345
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8346
  %dma_requested8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 66, !dbg !8347
  store i8 0, i8* %dma_requested8, align 8, !dbg !8348
  br label %if.end9, !dbg !8349

if.end9:                                          ; preds = %if.then6, %if.end4
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8350
  call void @mgsl_free_dma_buffers(%struct.mgsl_struct* %16) #11, !dbg !8351
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8352
  call void @mgsl_free_intermediate_rxbuffer_memory(%struct.mgsl_struct* %17) #11, !dbg !8353
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8354
  call void @mgsl_free_intermediate_txbuffer_memory(%struct.mgsl_struct* %18) #11, !dbg !8355
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8356
  %io_addr_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 61, !dbg !8358
  %20 = load i8, i8* %io_addr_requested, align 4, !dbg !8358
  %tobool10 = trunc i8 %20 to i1, !dbg !8358
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !8359

if.then11:                                        ; preds = %if.end9
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8360
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 59, !dbg !8360
  %22 = load i32, i32* %io_base, align 4, !dbg !8360
  %conv = zext i32 %22 to i64, !dbg !8360
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8360
  %io_addr_size = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 60, !dbg !8360
  %24 = load i32, i32* %io_addr_size, align 8, !dbg !8360
  %conv12 = zext i32 %24 to i64, !dbg !8360
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv, i64 %conv12) #11, !dbg !8360
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8362
  %io_addr_requested13 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 61, !dbg !8363
  store i8 0, i8* %io_addr_requested13, align 4, !dbg !8364
  br label %if.end14, !dbg !8365

if.end14:                                         ; preds = %if.then11, %if.end9
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8366
  %shared_mem_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 78, !dbg !8368
  %27 = load i8, i8* %shared_mem_requested, align 4, !dbg !8368
  %tobool15 = trunc i8 %27 to i1, !dbg !8368
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !8369

if.then16:                                        ; preds = %if.end14
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8370
  %phys_memory_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 77, !dbg !8370
  %29 = load i32, i32* %phys_memory_base, align 8, !dbg !8370
  %conv17 = zext i32 %29 to i64, !dbg !8370
  call void @__release_region(%struct.resource* @iomem_resource, i64 %conv17, i64 262144) #11, !dbg !8370
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8372
  %shared_mem_requested18 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 78, !dbg !8373
  store i8 0, i8* %shared_mem_requested18, align 4, !dbg !8374
  br label %if.end19, !dbg !8375

if.end19:                                         ; preds = %if.then16, %if.end14
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8376
  %lcr_mem_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 82, !dbg !8378
  %32 = load i8, i8* %lcr_mem_requested, align 8, !dbg !8378
  %tobool20 = trunc i8 %32 to i1, !dbg !8378
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !8379

if.then21:                                        ; preds = %if.end19
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8380
  %phys_lcr_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %33, i32 0, i32 80, !dbg !8380
  %34 = load i32, i32* %phys_lcr_base, align 8, !dbg !8380
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8380
  %lcr_offset = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 81, !dbg !8380
  %36 = load i32, i32* %lcr_offset, align 4, !dbg !8380
  %add = add i32 %34, %36, !dbg !8380
  %conv22 = zext i32 %add to i64, !dbg !8380
  call void @__release_region(%struct.resource* @iomem_resource, i64 %conv22, i64 128) #11, !dbg !8380
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8382
  %lcr_mem_requested23 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 82, !dbg !8383
  store i8 0, i8* %lcr_mem_requested23, align 8, !dbg !8384
  br label %if.end24, !dbg !8385

if.end24:                                         ; preds = %if.then21, %if.end19
  %38 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8386
  %memory_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %38, i32 0, i32 76, !dbg !8388
  %39 = load i8*, i8** %memory_base, align 8, !dbg !8388
  %tobool25 = icmp ne i8* %39, null, !dbg !8386
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !8389

if.then26:                                        ; preds = %if.end24
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8390
  %memory_base27 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 76, !dbg !8392
  %41 = load i8*, i8** %memory_base27, align 8, !dbg !8392
  call void @iounmap(i8* %41) #11, !dbg !8393
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8394
  %memory_base28 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 76, !dbg !8395
  store i8* null, i8** %memory_base28, align 8, !dbg !8396
  br label %if.end29, !dbg !8397

if.end29:                                         ; preds = %if.then26, %if.end24
  %43 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8398
  %lcr_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %43, i32 0, i32 79, !dbg !8400
  %44 = load i8*, i8** %lcr_base, align 8, !dbg !8400
  %tobool30 = icmp ne i8* %44, null, !dbg !8398
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !8401

if.then31:                                        ; preds = %if.end29
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8402
  %lcr_base32 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %45, i32 0, i32 79, !dbg !8404
  %46 = load i8*, i8** %lcr_base32, align 8, !dbg !8404
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8405
  %lcr_offset33 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 81, !dbg !8406
  %48 = load i32, i32* %lcr_offset33, align 4, !dbg !8406
  %idx.ext = zext i32 %48 to i64, !dbg !8407
  %idx.neg = sub i64 0, %idx.ext, !dbg !8407
  %add.ptr = getelementptr i8, i8* %46, i64 %idx.neg, !dbg !8407
  call void @iounmap(i8* %add.ptr) #11, !dbg !8408
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8409
  %lcr_base34 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %49, i32 0, i32 79, !dbg !8410
  store i8* null, i8** %lcr_base34, align 8, !dbg !8411
  br label %if.end35, !dbg !8412

if.end35:                                         ; preds = %if.then31, %if.end29
  %50 = load i32, i32* @debug_level, align 4, !dbg !8413
  %cmp36 = icmp sge i32 %50, 3, !dbg !8415
  br i1 %cmp36, label %if.then38, label %if.end42, !dbg !8416

if.then38:                                        ; preds = %if.end35
  %51 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8417
  %device_name39 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %51, i32 0, i32 56, !dbg !8418
  %arraydecay40 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name39, i64 0, i64 0, !dbg !8417
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 4069, i8* %arraydecay40) #12, !dbg !8419
  br label %if.end42, !dbg !8419

if.end42:                                         ; preds = %if.then38, %if.end35
  ret void, !dbg !8420
}

; Function Attrs: noredzone
declare dso_local void @tty_port_destroy(%struct.tty_port*) #4

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #4

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #4

; Function Attrs: noredzone
declare dso_local void @unregister_hdlc_device(%struct.net_device*) #4

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #4

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_dma(i32 %dmanr) #1 !dbg !8421 {
entry:
  %dmanr.addr = alloca i32, align 4
  store i32 %dmanr, i32* %dmanr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dmanr.addr, metadata !8425, metadata !DIExpression()), !dbg !8426
  %0 = load i32, i32* %dmanr.addr, align 4, !dbg !8427
  %cmp = icmp ule i32 %0, 3, !dbg !8429
  br i1 %cmp, label %if.then, label %if.else, !dbg !8430

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %dmanr.addr, align 4, !dbg !8431
  %or = or i32 %1, 4, !dbg !8432
  %conv = trunc i32 %or to i8, !dbg !8431
  call void @outb(i8 zeroext %conv, i32 10) #11, !dbg !8433
  br label %if.end, !dbg !8433

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %dmanr.addr, align 4, !dbg !8434
  %and = and i32 %2, 3, !dbg !8435
  %or1 = or i32 %and, 4, !dbg !8436
  %conv2 = trunc i32 %or1 to i8, !dbg !8437
  call void @outb(i8 zeroext %conv2, i32 212) #11, !dbg !8438
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8439
}

; Function Attrs: noredzone
declare dso_local void @free_dma(i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_free_dma_buffers(%struct.mgsl_struct* %info) #1 !dbg !8440 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !8441, metadata !DIExpression()), !dbg !8442
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8443
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8444
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 34, !dbg !8445
  %2 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !8445
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8446
  %rx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 33, !dbg !8447
  %4 = load i32, i32* %rx_buffer_count, align 8, !dbg !8447
  call void @mgsl_free_frame_memory(%struct.mgsl_struct* %0, %struct._DMABUFFERENTRY* %2, i32 %4) #11, !dbg !8448
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8449
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8450
  %tx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 39, !dbg !8451
  %7 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list, align 8, !dbg !8451
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8452
  %tx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 38, !dbg !8453
  %9 = load i32, i32* %tx_buffer_count, align 4, !dbg !8453
  call void @mgsl_free_frame_memory(%struct.mgsl_struct* %5, %struct._DMABUFFERENTRY* %7, i32 %9) #11, !dbg !8454
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8455
  call void @mgsl_free_buffer_list_memory(%struct.mgsl_struct* %10) #11, !dbg !8456
  ret void, !dbg !8457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_free_intermediate_rxbuffer_memory(%struct.mgsl_struct* %info) #1 !dbg !8458 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !8459, metadata !DIExpression()), !dbg !8460
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8461
  %intermediate_rxbuffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 42, !dbg !8462
  %1 = load i8*, i8** %intermediate_rxbuffer, align 8, !dbg !8462
  call void @kfree(i8* %1) #11, !dbg !8463
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8464
  %intermediate_rxbuffer1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 42, !dbg !8465
  store i8* null, i8** %intermediate_rxbuffer1, align 8, !dbg !8466
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8467
  %flag_buf = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 84, !dbg !8468
  %4 = load i8*, i8** %flag_buf, align 8, !dbg !8468
  call void @kfree(i8* %4) #11, !dbg !8469
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8470
  %flag_buf2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 84, !dbg !8471
  store i8* null, i8** %flag_buf2, align 8, !dbg !8472
  ret void, !dbg !8473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_free_intermediate_txbuffer_memory(%struct.mgsl_struct* %info) #1 !dbg !8474 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %i = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !8475, metadata !DIExpression()), !dbg !8476
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8477, metadata !DIExpression()), !dbg !8478
  store i32 0, i32* %i, align 4, !dbg !8479
  br label %for.cond, !dbg !8481

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8482
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8484
  %num_tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 43, !dbg !8485
  %2 = load i32, i32* %num_tx_holding_buffers, align 8, !dbg !8485
  %cmp = icmp slt i32 %0, %2, !dbg !8486
  br i1 %cmp, label %for.body, label %for.end, !dbg !8487

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8488
  %tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 47, !dbg !8490
  %4 = load i32, i32* %i, align 4, !dbg !8491
  %idxprom = sext i32 %4 to i64, !dbg !8488
  %arrayidx = getelementptr [5 x %struct.tx_holding_buffer], [5 x %struct.tx_holding_buffer]* %tx_holding_buffers, i64 0, i64 %idxprom, !dbg !8488
  %buffer = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %arrayidx, i32 0, i32 1, !dbg !8492
  %5 = load i8*, i8** %buffer, align 8, !dbg !8492
  call void @kfree(i8* %5) #11, !dbg !8493
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8494
  %tx_holding_buffers1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 47, !dbg !8495
  %7 = load i32, i32* %i, align 4, !dbg !8496
  %idxprom2 = sext i32 %7 to i64, !dbg !8494
  %arrayidx3 = getelementptr [5 x %struct.tx_holding_buffer], [5 x %struct.tx_holding_buffer]* %tx_holding_buffers1, i64 0, i64 %idxprom2, !dbg !8494
  %buffer4 = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %arrayidx3, i32 0, i32 1, !dbg !8497
  store i8* null, i8** %buffer4, align 8, !dbg !8498
  br label %for.inc, !dbg !8499

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !8500
  %inc = add i32 %8, 1, !dbg !8500
  store i32 %inc, i32* %i, align 4, !dbg !8500
  br label %for.cond, !dbg !8501, !llvm.loop !8502

for.end:                                          ; preds = %for.cond
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8504
  %get_tx_holding_index = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 44, !dbg !8505
  store i32 0, i32* %get_tx_holding_index, align 4, !dbg !8506
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8507
  %put_tx_holding_index = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 45, !dbg !8508
  store i32 0, i32* %put_tx_holding_index, align 8, !dbg !8509
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8510
  %tx_holding_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 46, !dbg !8511
  store i32 0, i32* %tx_holding_count, align 4, !dbg !8512
  ret void, !dbg !8513
}

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #4

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #1 !dbg !8514 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !8518, metadata !DIExpression()), !dbg !8519
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !8520, metadata !DIExpression()), !dbg !8519
  %0 = load i8, i8* %value.addr, align 1, !dbg !8519
  %1 = load i32, i32* %port.addr, align 4, !dbg !8519
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #10, !dbg !8519, !srcloc !8521
  ret void, !dbg !8519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_free_frame_memory(%struct.mgsl_struct* %info, %struct._DMABUFFERENTRY* %BufferList, i32 %Buffercount) #1 !dbg !8522 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %BufferList.addr = alloca %struct._DMABUFFERENTRY*, align 8
  %Buffercount.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !8525, metadata !DIExpression()), !dbg !8526
  store %struct._DMABUFFERENTRY* %BufferList, %struct._DMABUFFERENTRY** %BufferList.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DMABUFFERENTRY** %BufferList.addr, metadata !8527, metadata !DIExpression()), !dbg !8528
  store i32 %Buffercount, i32* %Buffercount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Buffercount.addr, metadata !8529, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8531, metadata !DIExpression()), !dbg !8532
  %0 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %BufferList.addr, align 8, !dbg !8533
  %tobool = icmp ne %struct._DMABUFFERENTRY* %0, null, !dbg !8533
  br i1 %tobool, label %if.then, label %if.end6, !dbg !8535

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8536
  br label %for.cond, !dbg !8539

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %i, align 4, !dbg !8540
  %2 = load i32, i32* %Buffercount.addr, align 4, !dbg !8542
  %cmp = icmp slt i32 %1, %2, !dbg !8543
  br i1 %cmp, label %for.body, label %for.end, !dbg !8544

for.body:                                         ; preds = %for.cond
  %3 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %BufferList.addr, align 8, !dbg !8545
  %4 = load i32, i32* %i, align 4, !dbg !8548
  %idxprom = sext i32 %4 to i64, !dbg !8545
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %3, i64 %idxprom, !dbg !8545
  %virt_addr = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 6, !dbg !8549
  %5 = load i8*, i8** %virt_addr, align 8, !dbg !8549
  %tobool1 = icmp ne i8* %5, null, !dbg !8545
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8550

if.then2:                                         ; preds = %for.body
  %6 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %BufferList.addr, align 8, !dbg !8551
  %7 = load i32, i32* %i, align 4, !dbg !8553
  %idxprom3 = sext i32 %7 to i64, !dbg !8551
  %arrayidx4 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %6, i64 %idxprom3, !dbg !8551
  %virt_addr5 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx4, i32 0, i32 6, !dbg !8554
  store i8* null, i8** %virt_addr5, align 8, !dbg !8555
  br label %if.end, !dbg !8556

if.end:                                           ; preds = %if.then2, %for.body
  br label %for.inc, !dbg !8557

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !8558
  %inc = add i32 %8, 1, !dbg !8558
  store i32 %inc, i32* %i, align 4, !dbg !8558
  br label %for.cond, !dbg !8559, !llvm.loop !8560

for.end:                                          ; preds = %for.cond
  br label %if.end6, !dbg !8562

if.end6:                                          ; preds = %for.end, %entry
  ret void, !dbg !8563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_free_buffer_list_memory(%struct.mgsl_struct* %info) #1 !dbg !8564 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !8565, metadata !DIExpression()), !dbg !8566
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8567
  %buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 30, !dbg !8568
  store i8* null, i8** %buffer_list, align 8, !dbg !8569
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8570
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 34, !dbg !8571
  store %struct._DMABUFFERENTRY* null, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !8572
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8573
  %tx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 39, !dbg !8574
  store %struct._DMABUFFERENTRY* null, %struct._DMABUFFERENTRY** %tx_buffer_list, align 8, !dbg !8575
  ret void, !dbg !8576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @synclink_init_one(%struct.pci_dev* %dev, %struct.pci_device_id* %ent) #1 !dbg !8577 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8578, metadata !DIExpression()), !dbg !8579
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !8580, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !8582, metadata !DIExpression()), !dbg !8583
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8584
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #11, !dbg !8586
  %tobool = icmp ne i32 %call, 0, !dbg !8586
  br i1 %tobool, label %if.then, label %if.end, !dbg !8587

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8588
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0), %struct.pci_dev* %1) #12, !dbg !8590
  store i32 -5, i32* %retval, align 4, !dbg !8591
  br label %return, !dbg !8591

if.end:                                           ; preds = %entry
  %call2 = call %struct.mgsl_struct* @mgsl_allocate_device() #11, !dbg !8592
  store %struct.mgsl_struct* %call2, %struct.mgsl_struct** %info, align 8, !dbg !8593
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8594
  %tobool3 = icmp ne %struct.mgsl_struct* %2, null, !dbg !8594
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !8596

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !8597
  store i32 -5, i32* %retval, align 4, !dbg !8599
  br label %return, !dbg !8599

if.end6:                                          ; preds = %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8600
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 44, !dbg !8600
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 2, !dbg !8600
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !8600
  %4 = load i64, i64* %start, align 8, !dbg !8600
  %conv = trunc i64 %4 to i32, !dbg !8600
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8601
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 59, !dbg !8602
  store i32 %conv, i32* %io_base, align 4, !dbg !8603
  %6 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8604
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 43, !dbg !8605
  %7 = load i32, i32* %irq, align 4, !dbg !8605
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8606
  %irq_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 62, !dbg !8607
  store i32 %7, i32* %irq_level, align 8, !dbg !8608
  %9 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8609
  %resource7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 44, !dbg !8609
  %arrayidx8 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource7, i64 0, i64 3, !dbg !8609
  %start9 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx8, i32 0, i32 0, !dbg !8609
  %10 = load i64, i64* %start9, align 8, !dbg !8609
  %conv10 = trunc i64 %10 to i32, !dbg !8609
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8610
  %phys_memory_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 77, !dbg !8611
  store i32 %conv10, i32* %phys_memory_base, align 8, !dbg !8612
  %12 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8613
  %resource11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 44, !dbg !8613
  %arrayidx12 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource11, i64 0, i64 0, !dbg !8613
  %start13 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx12, i32 0, i32 0, !dbg !8613
  %13 = load i64, i64* %start13, align 8, !dbg !8613
  %conv14 = trunc i64 %13 to i32, !dbg !8613
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8614
  %phys_lcr_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 80, !dbg !8615
  store i32 %conv14, i32* %phys_lcr_base, align 8, !dbg !8616
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8617
  %phys_lcr_base15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 80, !dbg !8618
  %16 = load i32, i32* %phys_lcr_base15, align 8, !dbg !8618
  %conv16 = zext i32 %16 to i64, !dbg !8617
  %and = and i64 %conv16, 4095, !dbg !8619
  %conv17 = trunc i64 %and to i32, !dbg !8617
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8620
  %lcr_offset = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 81, !dbg !8621
  store i32 %conv17, i32* %lcr_offset, align 4, !dbg !8622
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8623
  %phys_lcr_base18 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 80, !dbg !8624
  %19 = load i32, i32* %phys_lcr_base18, align 8, !dbg !8625
  %conv19 = zext i32 %19 to i64, !dbg !8625
  %and20 = and i64 %conv19, -4096, !dbg !8625
  %conv21 = trunc i64 %and20 to i32, !dbg !8625
  store i32 %conv21, i32* %phys_lcr_base18, align 8, !dbg !8625
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8626
  %io_addr_size = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 60, !dbg !8627
  store i32 8, i32* %io_addr_size, align 8, !dbg !8628
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8629
  %irq_flags = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 63, !dbg !8630
  store i64 128, i64* %irq_flags, align 8, !dbg !8631
  %22 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8632
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %22, i32 0, i32 8, !dbg !8634
  %23 = load i16, i16* %device, align 2, !dbg !8634
  %conv22 = zext i16 %23 to i32, !dbg !8632
  %cmp = icmp eq i32 %conv22, 528, !dbg !8635
  br i1 %cmp, label %if.then24, label %if.else, !dbg !8636

if.then24:                                        ; preds = %if.end6
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8637
  %misc_ctrl_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 83, !dbg !8639
  store i32 8142976, i32* %misc_ctrl_value, align 4, !dbg !8640
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8641
  %hw_version = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 3, !dbg !8642
  store i32 1, i32* %hw_version, align 4, !dbg !8643
  br label %if.end27, !dbg !8644

if.else:                                          ; preds = %if.end6
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8645
  %misc_ctrl_value25 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 83, !dbg !8647
  store i32 142492998, i32* %misc_ctrl_value25, align 4, !dbg !8648
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8649
  %hw_version26 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 3, !dbg !8650
  store i32 0, i32* %hw_version26, align 4, !dbg !8651
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then24
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8652
  call void @mgsl_add_device(%struct.mgsl_struct* %28) #11, !dbg !8653
  store i32 0, i32* %retval, align 4, !dbg !8654
  br label %return, !dbg !8654

return:                                           ; preds = %if.end27, %if.then4, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !8655
  ret i32 %29, !dbg !8655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @synclink_remove_one(%struct.pci_dev* %dev) #1 !dbg !8656 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8657, metadata !DIExpression()), !dbg !8658
  ret void, !dbg !8659
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mgsl_struct* @mgsl_allocate_device() #1 !dbg !8167 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !8660, metadata !DIExpression()), !dbg !8666
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !8671
  %info = alloca %struct.mgsl_struct*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral16 = alloca %struct.spinlock, align 1
  %.compoundliteral21 = alloca %struct.spinlock, align 1
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !8674, metadata !DIExpression()), !dbg !8675
  %call = call i8* @kzalloc(i64 1032, i32 3264) #11, !dbg !8676
  %0 = bitcast i8* %call to %struct.mgsl_struct*, !dbg !8676
  store %struct.mgsl_struct* %0, %struct.mgsl_struct** %info, align 8, !dbg !8677
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8678
  %tobool = icmp ne %struct.mgsl_struct* %1, null, !dbg !8678
  br i1 %tobool, label %if.else, label %if.then, !dbg !8679

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !8680
  br label %if.end, !dbg !8682

if.else:                                          ; preds = %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8683
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 1, !dbg !8684
  call void @tty_port_init(%struct.tty_port* %port) #11, !dbg !8685
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8686
  %port2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 1, !dbg !8687
  %ops = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port2, i32 0, i32 3, !dbg !8688
  store %struct.tty_port_operations* @mgsl_port_ops, %struct.tty_port_operations** %ops, align 8, !dbg !8689
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8690
  %magic = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 0, !dbg !8691
  store i32 21505, i32* %magic, align 8, !dbg !8692
  br label %do.body, !dbg !8693

do.body:                                          ; preds = %if.else
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8694
  %task = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 18, !dbg !8694
  call void @__init_work(%struct.work_struct* %task, i32 0) #11, !dbg !8694
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8694
  %task3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 18, !dbg !8694
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %task3, i32 0, i32 0, !dbg !8694
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !8694
  store i64 68719476704, i64* %counter, align 8, !dbg !8694
  %7 = bitcast %struct.atomic64_t* %data to i8*, !dbg !8694
  %8 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !8694
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 8, i1 false), !dbg !8694
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8694
  %task4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 18, !dbg !8694
  %entry5 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %task4, i32 0, i32 1, !dbg !8694
  call void @INIT_LIST_HEAD(%struct.list_head* %entry5) #11, !dbg !8694
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8694
  %task6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 18, !dbg !8694
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %task6, i32 0, i32 2, !dbg !8694
  store void (%struct.work_struct*)* @mgsl_bh_handler, void (%struct.work_struct*)** %func, align 8, !dbg !8694
  br label %do.end, !dbg !8694

do.end:                                           ; preds = %do.body
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8696
  %max_frame_size = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 21, !dbg !8697
  store i32 4096, i32* %max_frame_size, align 8, !dbg !8698
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8699
  %port7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 1, !dbg !8700
  %close_delay = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port7, i32 0, i32 16, !dbg !8701
  store i32 125, i32* %close_delay, align 8, !dbg !8702
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8703
  %port8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 1, !dbg !8704
  %closing_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port8, i32 0, i32 17, !dbg !8705
  store i32 7500, i32* %closing_wait, align 4, !dbg !8706
  br label %do.body9, !dbg !8707

do.body9:                                         ; preds = %do.end
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8708
  %status_event_wait_q = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 13, !dbg !8708
  call void @__init_waitqueue_head(%struct.wait_queue_head* %status_event_wait_q, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), %struct.lock_class_key* @mgsl_allocate_device.__key) #11, !dbg !8708
  br label %do.end10, !dbg !8708

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !8710

do.body11:                                        ; preds = %do.end10
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8711
  %event_wait_q = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 14, !dbg !8711
  call void @__init_waitqueue_head(%struct.wait_queue_head* %event_wait_q, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), %struct.lock_class_key* @mgsl_allocate_device.__key.12) #11, !dbg !8711
  br label %do.end12, !dbg !8711

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !8713

do.body13:                                        ; preds = %do.end12
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8714
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 17, !dbg !8714
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8715
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !8716
  %rlock.i = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !8716
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8714
  %irq_spinlock15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 17, !dbg !8714
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral16, i32 0, i32 0, !dbg !8714
  %rlock = bitcast %union.anon.1* %20 to %struct.raw_spinlock*, !dbg !8714
  %21 = bitcast %struct.spinlock* %irq_spinlock15 to i8*, !dbg !8714
  %22 = bitcast %struct.spinlock* %.compoundliteral16 to i8*, !dbg !8714
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 1 %22, i64 0, i1 false), !dbg !8714
  br label %do.end17, !dbg !8714

do.end17:                                         ; preds = %do.body13
  br label %do.body18, !dbg !8717

do.body18:                                        ; preds = %do.end17
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8718
  %netlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 90, !dbg !8718
  store %struct.spinlock* %netlock, %struct.spinlock** %lock.addr.i24, align 8
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !8719
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !8720
  %rlock.i25 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !8720
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8718
  %netlock20 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 90, !dbg !8718
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral21, i32 0, i32 0, !dbg !8718
  %rlock22 = bitcast %union.anon.1* %27 to %struct.raw_spinlock*, !dbg !8718
  %28 = bitcast %struct.spinlock* %netlock20 to i8*, !dbg !8718
  %29 = bitcast %struct.spinlock* %.compoundliteral21 to i8*, !dbg !8718
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 1 %29, i64 0, i1 false), !dbg !8718
  br label %do.end23, !dbg !8718

do.end23:                                         ; preds = %do.body18
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8721
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 70, !dbg !8722
  %31 = bitcast %struct._MGSL_PARAMS* %params to i8*, !dbg !8723
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 bitcast (%struct._MGSL_PARAMS* @default_params to i8*), i64 48, i1 false), !dbg !8723
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8724
  %idle_mode = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 53, !dbg !8725
  store i32 0, i32* %idle_mode, align 8, !dbg !8726
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8727
  %num_tx_dma_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %33, i32 0, i32 36, !dbg !8728
  store i32 1, i32* %num_tx_dma_buffers, align 4, !dbg !8729
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8730
  %num_tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 43, !dbg !8731
  store i32 0, i32* %num_tx_holding_buffers, align 8, !dbg !8732
  br label %if.end

if.end:                                           ; preds = %do.end23, %if.then
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !8733
  ret %struct.mgsl_struct* %35, !dbg !8734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_add_device(%struct.mgsl_struct* %info) #1 !dbg !8735 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %current_dev = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !8736, metadata !DIExpression()), !dbg !8737
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8738
  %next_device = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 16, !dbg !8739
  store %struct.mgsl_struct* null, %struct.mgsl_struct** %next_device, align 8, !dbg !8740
  %1 = load i32, i32* @mgsl_device_count, align 4, !dbg !8741
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8742
  %line = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 2, !dbg !8743
  store i32 %1, i32* %line, align 8, !dbg !8744
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8745
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 56, !dbg !8746
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !8745
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8747
  %line1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 2, !dbg !8748
  %5 = load i32, i32* %line1, align 8, !dbg !8748
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), i32 %5) #11, !dbg !8749
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8750
  %line2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 2, !dbg !8752
  %7 = load i32, i32* %line2, align 8, !dbg !8752
  %cmp = icmp slt i32 %7, 20, !dbg !8753
  br i1 %cmp, label %if.then, label %if.end41, !dbg !8754

if.then:                                          ; preds = %entry
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8755
  %line3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 2, !dbg !8758
  %9 = load i32, i32* %line3, align 8, !dbg !8758
  %idxprom = sext i32 %9 to i64, !dbg !8759
  %arrayidx = getelementptr [20 x i32], [20 x i32]* @maxframe, i64 0, i64 %idxprom, !dbg !8759
  %10 = load i32, i32* %arrayidx, align 4, !dbg !8759
  %tobool = icmp ne i32 %10, 0, !dbg !8759
  br i1 %tobool, label %if.then4, label %if.end, !dbg !8760

if.then4:                                         ; preds = %if.then
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8761
  %line5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 2, !dbg !8762
  %12 = load i32, i32* %line5, align 8, !dbg !8762
  %idxprom6 = sext i32 %12 to i64, !dbg !8763
  %arrayidx7 = getelementptr [20 x i32], [20 x i32]* @maxframe, i64 0, i64 %idxprom6, !dbg !8763
  %13 = load i32, i32* %arrayidx7, align 4, !dbg !8763
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8764
  %max_frame_size = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 21, !dbg !8765
  store i32 %13, i32* %max_frame_size, align 8, !dbg !8766
  br label %if.end, !dbg !8764

if.end:                                           ; preds = %if.then4, %if.then
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8767
  %line8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 2, !dbg !8769
  %16 = load i32, i32* %line8, align 8, !dbg !8769
  %idxprom9 = sext i32 %16 to i64, !dbg !8770
  %arrayidx10 = getelementptr [20 x i32], [20 x i32]* @txdmabufs, i64 0, i64 %idxprom9, !dbg !8770
  %17 = load i32, i32* %arrayidx10, align 4, !dbg !8770
  %tobool11 = icmp ne i32 %17, 0, !dbg !8770
  br i1 %tobool11, label %if.then12, label %if.end21, !dbg !8771

if.then12:                                        ; preds = %if.end
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8772
  %line13 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 2, !dbg !8774
  %19 = load i32, i32* %line13, align 8, !dbg !8774
  %idxprom14 = sext i32 %19 to i64, !dbg !8775
  %arrayidx15 = getelementptr [20 x i32], [20 x i32]* @txdmabufs, i64 0, i64 %idxprom14, !dbg !8775
  %20 = load i32, i32* %arrayidx15, align 4, !dbg !8775
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8776
  %num_tx_dma_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 36, !dbg !8777
  store i32 %20, i32* %num_tx_dma_buffers, align 4, !dbg !8778
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8779
  %num_tx_dma_buffers16 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 36, !dbg !8781
  %23 = load i32, i32* %num_tx_dma_buffers16, align 4, !dbg !8781
  %cmp17 = icmp slt i32 %23, 1, !dbg !8782
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !8783

if.then18:                                        ; preds = %if.then12
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8784
  %num_tx_dma_buffers19 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 36, !dbg !8785
  store i32 1, i32* %num_tx_dma_buffers19, align 4, !dbg !8786
  br label %if.end20, !dbg !8784

if.end20:                                         ; preds = %if.then18, %if.then12
  br label %if.end21, !dbg !8787

if.end21:                                         ; preds = %if.end20, %if.end
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8788
  %line22 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 2, !dbg !8790
  %26 = load i32, i32* %line22, align 8, !dbg !8790
  %idxprom23 = sext i32 %26 to i64, !dbg !8791
  %arrayidx24 = getelementptr [20 x i32], [20 x i32]* @txholdbufs, i64 0, i64 %idxprom23, !dbg !8791
  %27 = load i32, i32* %arrayidx24, align 4, !dbg !8791
  %tobool25 = icmp ne i32 %27, 0, !dbg !8791
  br i1 %tobool25, label %if.then26, label %if.end40, !dbg !8792

if.then26:                                        ; preds = %if.end21
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8793
  %line27 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 2, !dbg !8795
  %29 = load i32, i32* %line27, align 8, !dbg !8795
  %idxprom28 = sext i32 %29 to i64, !dbg !8796
  %arrayidx29 = getelementptr [20 x i32], [20 x i32]* @txholdbufs, i64 0, i64 %idxprom28, !dbg !8796
  %30 = load i32, i32* %arrayidx29, align 4, !dbg !8796
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8797
  %num_tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 43, !dbg !8798
  store i32 %30, i32* %num_tx_holding_buffers, align 8, !dbg !8799
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8800
  %num_tx_holding_buffers30 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 43, !dbg !8802
  %33 = load i32, i32* %num_tx_holding_buffers30, align 8, !dbg !8802
  %cmp31 = icmp slt i32 %33, 1, !dbg !8803
  br i1 %cmp31, label %if.then32, label %if.else, !dbg !8804

if.then32:                                        ; preds = %if.then26
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8805
  %num_tx_holding_buffers33 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 43, !dbg !8806
  store i32 1, i32* %num_tx_holding_buffers33, align 8, !dbg !8807
  br label %if.end39, !dbg !8805

if.else:                                          ; preds = %if.then26
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8808
  %num_tx_holding_buffers34 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 43, !dbg !8810
  %36 = load i32, i32* %num_tx_holding_buffers34, align 8, !dbg !8810
  %cmp35 = icmp sgt i32 %36, 5, !dbg !8811
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !8812

if.then36:                                        ; preds = %if.else
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8813
  %num_tx_holding_buffers37 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 43, !dbg !8814
  store i32 5, i32* %num_tx_holding_buffers37, align 8, !dbg !8815
  br label %if.end38, !dbg !8813

if.end38:                                         ; preds = %if.then36, %if.else
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then32
  br label %if.end40, !dbg !8816

if.end40:                                         ; preds = %if.end39, %if.end21
  br label %if.end41, !dbg !8817

if.end41:                                         ; preds = %if.end40, %entry
  %38 = load i32, i32* @mgsl_device_count, align 4, !dbg !8818
  %inc = add i32 %38, 1, !dbg !8818
  store i32 %inc, i32* @mgsl_device_count, align 4, !dbg !8818
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** @mgsl_device_list, align 8, !dbg !8819
  %tobool42 = icmp ne %struct.mgsl_struct* %39, null, !dbg !8819
  br i1 %tobool42, label %if.else44, label %if.then43, !dbg !8821

if.then43:                                        ; preds = %if.end41
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8822
  store %struct.mgsl_struct* %40, %struct.mgsl_struct** @mgsl_device_list, align 8, !dbg !8823
  br label %if.end49, !dbg !8824

if.else44:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %current_dev, metadata !8825, metadata !DIExpression()), !dbg !8827
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** @mgsl_device_list, align 8, !dbg !8828
  store %struct.mgsl_struct* %41, %struct.mgsl_struct** %current_dev, align 8, !dbg !8827
  br label %while.cond, !dbg !8829

while.cond:                                       ; preds = %while.body, %if.else44
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %current_dev, align 8, !dbg !8830
  %next_device45 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 16, !dbg !8831
  %43 = load %struct.mgsl_struct*, %struct.mgsl_struct** %next_device45, align 8, !dbg !8831
  %tobool46 = icmp ne %struct.mgsl_struct* %43, null, !dbg !8829
  br i1 %tobool46, label %while.body, label %while.end, !dbg !8829

while.body:                                       ; preds = %while.cond
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %current_dev, align 8, !dbg !8832
  %next_device47 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %44, i32 0, i32 16, !dbg !8833
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %next_device47, align 8, !dbg !8833
  store %struct.mgsl_struct* %45, %struct.mgsl_struct** %current_dev, align 8, !dbg !8834
  br label %while.cond, !dbg !8829, !llvm.loop !8835

while.end:                                        ; preds = %while.cond
  %46 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8836
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %current_dev, align 8, !dbg !8837
  %next_device48 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 16, !dbg !8838
  store %struct.mgsl_struct* %46, %struct.mgsl_struct** %next_device48, align 8, !dbg !8839
  br label %if.end49

if.end49:                                         ; preds = %while.end, %if.then43
  %48 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8840
  %max_frame_size50 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %48, i32 0, i32 21, !dbg !8842
  %49 = load i32, i32* %max_frame_size50, align 8, !dbg !8842
  %cmp51 = icmp ult i32 %49, 4096, !dbg !8843
  br i1 %cmp51, label %if.then52, label %if.else54, !dbg !8844

if.then52:                                        ; preds = %if.end49
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8845
  %max_frame_size53 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %50, i32 0, i32 21, !dbg !8846
  store i32 4096, i32* %max_frame_size53, align 8, !dbg !8847
  br label %if.end60, !dbg !8845

if.else54:                                        ; preds = %if.end49
  %51 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8848
  %max_frame_size55 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %51, i32 0, i32 21, !dbg !8850
  %52 = load i32, i32* %max_frame_size55, align 8, !dbg !8850
  %cmp56 = icmp ugt i32 %52, 65535, !dbg !8851
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !8852

if.then57:                                        ; preds = %if.else54
  %53 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8853
  %max_frame_size58 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %53, i32 0, i32 21, !dbg !8854
  store i32 65535, i32* %max_frame_size58, align 8, !dbg !8855
  br label %if.end59, !dbg !8853

if.end59:                                         ; preds = %if.then57, %if.else54
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then52
  %54 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8856
  %hw_version = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %54, i32 0, i32 3, !dbg !8857
  %55 = load i32, i32* %hw_version, align 4, !dbg !8857
  %add = add i32 %55, 1, !dbg !8858
  %56 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8859
  %device_name61 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %56, i32 0, i32 56, !dbg !8860
  %arraydecay62 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name61, i64 0, i64 0, !dbg !8859
  %57 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8861
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %57, i32 0, i32 59, !dbg !8862
  %58 = load i32, i32* %io_base, align 4, !dbg !8862
  %59 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8863
  %irq_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %59, i32 0, i32 62, !dbg !8864
  %60 = load i32, i32* %irq_level, align 8, !dbg !8864
  %61 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8865
  %phys_memory_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %61, i32 0, i32 77, !dbg !8866
  %62 = load i32, i32* %phys_memory_base, align 8, !dbg !8866
  %63 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8867
  %phys_lcr_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %63, i32 0, i32 80, !dbg !8868
  %64 = load i32, i32* %phys_lcr_base, align 8, !dbg !8868
  %65 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8869
  %max_frame_size63 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %65, i32 0, i32 21, !dbg !8870
  %66 = load i32, i32* %max_frame_size63, align 8, !dbg !8870
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.37, i64 0, i64 0), i32 %add, i8* %arraydecay62, i32 %58, i32 %60, i32 %62, i32 %64, i32 %66) #12, !dbg !8871
  %67 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !8872
  %call65 = call i32 @hdlcdev_init(%struct.mgsl_struct* %67) #11, !dbg !8873
  ret void, !dbg !8874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #1 !dbg !8875 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8878, metadata !DIExpression()), !dbg !8882
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8888, metadata !DIExpression()), !dbg !8889
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8890, metadata !DIExpression()), !dbg !8891
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8892, metadata !DIExpression()), !dbg !8893
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8894, metadata !DIExpression()), !dbg !8898
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8900, metadata !DIExpression()), !dbg !8904
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8906, metadata !DIExpression()), !dbg !8910
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8915, metadata !DIExpression()), !dbg !8916
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8917, metadata !DIExpression()), !dbg !8918
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8919, metadata !DIExpression()), !dbg !8920
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8921, metadata !DIExpression()), !dbg !8922
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8923, metadata !DIExpression()), !dbg !8924
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8925, metadata !DIExpression()), !dbg !8926
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8927, metadata !DIExpression()), !dbg !8928
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8929, metadata !DIExpression()), !dbg !8930
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8931, metadata !DIExpression()), !dbg !8932
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8933, metadata !DIExpression()), !dbg !8934
  %0 = load i64, i64* %size.addr, align 8, !dbg !8935
  %1 = load i32, i32* %flags.addr, align 4, !dbg !8936
  %or = or i32 %1, 256, !dbg !8937
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !8938
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !8939
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !8940

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8941
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !8942
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8943

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !8944
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !8945
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8946
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !8947
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8924
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8948
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8949
  %10 = load i32, i32* %order.i.i, align 4, !dbg !8950
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8951
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8952
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8953
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !8954
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8954
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8954
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8954
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !8954
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8955
  br label %kmalloc.exit, !dbg !8955

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !8956
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8957
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !8957
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8959

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8960
  br label %kmalloc_index.exit.i, !dbg !8960

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8961
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !8963
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8964

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8965
  br label %kmalloc_index.exit.i, !dbg !8965

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8966
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !8968
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8969

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8970
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !8971
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8972

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8973
  br label %kmalloc_index.exit.i, !dbg !8973

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8974
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !8976
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8977

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8978
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !8979
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8980

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8981
  br label %kmalloc_index.exit.i, !dbg !8981

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8982
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !8984
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8985

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8986
  br label %kmalloc_index.exit.i, !dbg !8986

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8987
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !8989
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8990

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8991
  br label %kmalloc_index.exit.i, !dbg !8991

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8992
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !8994
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8995

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8996
  br label %kmalloc_index.exit.i, !dbg !8996

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8997
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !8999
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9000

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9001
  br label %kmalloc_index.exit.i, !dbg !9001

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9002
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !9004
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9005

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9006
  br label %kmalloc_index.exit.i, !dbg !9006

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9007
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !9009
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9010

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9011
  br label %kmalloc_index.exit.i, !dbg !9011

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9012
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !9014
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9015

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9016
  br label %kmalloc_index.exit.i, !dbg !9016

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9017
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !9019
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9020

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9021
  br label %kmalloc_index.exit.i, !dbg !9021

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9022
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !9024
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9025

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9026
  br label %kmalloc_index.exit.i, !dbg !9026

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9027
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !9029
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9030

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9031
  br label %kmalloc_index.exit.i, !dbg !9031

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9032
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !9034
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9035

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9036
  br label %kmalloc_index.exit.i, !dbg !9036

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9037
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !9039
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9040

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9041
  br label %kmalloc_index.exit.i, !dbg !9041

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9042
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !9044
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9045

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9046
  br label %kmalloc_index.exit.i, !dbg !9046

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9047
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !9049
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9050

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9051
  br label %kmalloc_index.exit.i, !dbg !9051

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9052
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !9054
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9055

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9056
  br label %kmalloc_index.exit.i, !dbg !9056

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9057
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !9059
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9060

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9061
  br label %kmalloc_index.exit.i, !dbg !9061

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9062
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !9064
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9065

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9066
  br label %kmalloc_index.exit.i, !dbg !9066

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9067
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !9069
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9070

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9071
  br label %kmalloc_index.exit.i, !dbg !9071

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9072
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !9074
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9075

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9076
  br label %kmalloc_index.exit.i, !dbg !9076

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9077
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !9079
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9080

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9081
  br label %kmalloc_index.exit.i, !dbg !9081

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9082
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !9084
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9085

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9086
  br label %kmalloc_index.exit.i, !dbg !9086

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9087
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !9089
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9090

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9091
  br label %kmalloc_index.exit.i, !dbg !9091

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9092
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !9094
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9095

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9096
  br label %kmalloc_index.exit.i, !dbg !9096

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9097
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !9099
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9100

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9101
  br label %kmalloc_index.exit.i, !dbg !9101

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !9102, !srcloc !9105
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 165) #10, !dbg !9106, !srcloc !9109
  unreachable, !dbg !9110

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !9111
  store i32 %45, i32* %index.i, align 4, !dbg !9112
  %46 = load i32, i32* %index.i, align 4, !dbg !9113
  %tobool.i = icmp ne i32 %46, 0, !dbg !9113
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9115

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9116
  br label %kmalloc.exit, !dbg !9116

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !9117
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9118
  %and.i.i = and i32 %48, 17, !dbg !9118
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9118
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9118
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9118
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9118
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9120

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9121
  br label %kmalloc_type.exit.i, !dbg !9121

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9122
  %and2.i.i = and i32 %49, 1, !dbg !9123
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9122
  %50 = zext i1 %tobool3.i.i to i64, !dbg !9122
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9122
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9124
  br label %kmalloc_type.exit.i, !dbg !9124

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !9125
  %idxprom.i = zext i32 %51 to i64, !dbg !9126
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9126
  %52 = load i32, i32* %index.i, align 4, !dbg !9127
  %idxprom6.i = zext i32 %52 to i64, !dbg !9126
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9126
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9126
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !9128
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !9129
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9130
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9131
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !9132
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9132
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9132
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9132
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !9132
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8893
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9133
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !9134
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9135
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9136
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !9137
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9138
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !9139
  store i8* %62, i8** %retval.i, align 8, !dbg !9140
  br label %kmalloc.exit, !dbg !9140

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !9141
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !9142
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !9143
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9143
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9143
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9143
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !9143
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9144
  br label %kmalloc.exit, !dbg !9144

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !9145
  ret i8* %65, !dbg !9146
}

; Function Attrs: noredzone
declare dso_local void @tty_port_init(%struct.tty_port*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #1 !dbg !9147 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9150, metadata !DIExpression()), !dbg !9151
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !9152, metadata !DIExpression()), !dbg !9153
  ret void, !dbg !9154
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #1 !dbg !9155 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9159, metadata !DIExpression()), !dbg !9160
  br label %do.body, !dbg !9161

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9162

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !9164

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !9162

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9166
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9166
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9166
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !9166
  br label %do.end3, !dbg !9166

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !9162

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9168
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9169
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !9170
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !9171
  ret void, !dbg !9172
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_bh_handler(%struct.work_struct* %work) #1 !dbg !9173 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mgsl_struct*, align 8
  %action = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9174, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !9176, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9178, metadata !DIExpression()), !dbg !9180
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !9180
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !9180
  store i8* %1, i8** %__mptr, align 8, !dbg !9180
  br label %do.body, !dbg !9180

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9181

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9180
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !9180
  %3 = bitcast i8* %add.ptr to %struct.mgsl_struct*, !dbg !9180
  store %struct.mgsl_struct* %3, %struct.mgsl_struct** %tmp, align 8, !dbg !9181
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %tmp, align 8, !dbg !9180
  store %struct.mgsl_struct* %4, %struct.mgsl_struct** %info, align 8, !dbg !9177
  call void @llvm.dbg.declare(metadata i32* %action, metadata !9183, metadata !DIExpression()), !dbg !9184
  %5 = load i32, i32* @debug_level, align 4, !dbg !9185
  %cmp = icmp sge i32 %5, 4, !dbg !9187
  br i1 %cmp, label %if.then, label %if.end, !dbg !9188

if.then:                                          ; preds = %do.end
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9189
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 56, !dbg !9190
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !9189
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1061, i8* %arraydecay) #12, !dbg !9191
  br label %if.end, !dbg !9191

if.end:                                           ; preds = %if.then, %do.end
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9192
  %bh_running = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 23, !dbg !9193
  store i8 1, i8* %bh_running, align 8, !dbg !9194
  br label %while.cond, !dbg !9195

while.cond:                                       ; preds = %sw.epilog, %if.end
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9196
  %call1 = call i32 @mgsl_bh_action(%struct.mgsl_struct* %8) #11, !dbg !9197
  store i32 %call1, i32* %action, align 4, !dbg !9198
  %cmp2 = icmp ne i32 %call1, 0, !dbg !9199
  br i1 %cmp2, label %while.body, label %while.end, !dbg !9195

while.body:                                       ; preds = %while.cond
  %9 = load i32, i32* @debug_level, align 4, !dbg !9200
  %cmp3 = icmp sge i32 %9, 4, !dbg !9203
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !9204

if.then4:                                         ; preds = %while.body
  %10 = load i32, i32* %action, align 4, !dbg !9205
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1070, i32 %10) #12, !dbg !9206
  br label %if.end6, !dbg !9206

if.end6:                                          ; preds = %if.then4, %while.body
  %11 = load i32, i32* %action, align 4, !dbg !9207
  switch i32 %11, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb7
    i32 4, label %sw.bb8
  ], !dbg !9208

sw.bb:                                            ; preds = %if.end6
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9209
  call void @mgsl_bh_receive(%struct.mgsl_struct* %12) #11, !dbg !9211
  br label %sw.epilog, !dbg !9212

sw.bb7:                                           ; preds = %if.end6
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9213
  call void @mgsl_bh_transmit(%struct.mgsl_struct* %13) #11, !dbg !9214
  br label %sw.epilog, !dbg !9215

sw.bb8:                                           ; preds = %if.end6
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9216
  call void @mgsl_bh_status(%struct.mgsl_struct* %14) #11, !dbg !9217
  br label %sw.epilog, !dbg !9218

sw.default:                                       ; preds = %if.end6
  %15 = load i32, i32* %action, align 4, !dbg !9219
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i32 %15) #12, !dbg !9220
  br label %sw.epilog, !dbg !9221

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb7, %sw.bb
  br label %while.cond, !dbg !9195, !llvm.loop !9222

while.end:                                        ; preds = %while.cond
  %16 = load i32, i32* @debug_level, align 4, !dbg !9224
  %cmp10 = icmp sge i32 %16, 4, !dbg !9226
  br i1 %cmp10, label %if.then11, label %if.end15, !dbg !9227

if.then11:                                        ; preds = %while.end
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9228
  %device_name12 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 56, !dbg !9229
  %arraydecay13 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name12, i64 0, i64 0, !dbg !9228
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1092, i8* %arraydecay13) #12, !dbg !9230
  br label %if.end15, !dbg !9230

if.end15:                                         ; preds = %if.then11, %while.end
  ret void, !dbg !9231
}

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #4

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #4

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !9232 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9236, metadata !DIExpression()), !dbg !9241
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9243, metadata !DIExpression()), !dbg !9244
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9245, metadata !DIExpression()), !dbg !9246
  %0 = load i64, i64* %size.addr, align 8, !dbg !9247
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9249
  br i1 %1, label %if.then, label %if.end447, !dbg !9250

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9251
  %tobool = icmp ne i64 %2, 0, !dbg !9251
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9254

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9255
  br label %return, !dbg !9255

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9256
  %cmp = icmp ult i64 %3, 4096, !dbg !9258
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9259

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9260
  br label %return, !dbg !9260

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub = sub i64 %4, 1, !dbg !9261
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9261
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9261

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub4 = sub i64 %6, 1, !dbg !9261
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9261
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9261

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub6 = sub i64 %8, 1, !dbg !9261
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9261
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9261

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9261

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub9 = sub i64 %9, 1, !dbg !9261
  %and = and i64 %sub9, -9223372036854775808, !dbg !9261
  %tobool10 = icmp ne i64 %and, 0, !dbg !9261
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9261

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9261

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub13 = sub i64 %10, 1, !dbg !9261
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9261
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9261
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9261

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9261

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub18 = sub i64 %11, 1, !dbg !9261
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9261
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9261
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9261

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9261

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub23 = sub i64 %12, 1, !dbg !9261
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9261
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9261
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9261

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9261

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub28 = sub i64 %13, 1, !dbg !9261
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9261
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9261
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9261

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9261

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub33 = sub i64 %14, 1, !dbg !9261
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9261
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9261
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9261

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9261

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub38 = sub i64 %15, 1, !dbg !9261
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9261
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9261
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9261

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9261

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub43 = sub i64 %16, 1, !dbg !9261
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9261
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9261
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9261

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9261

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub48 = sub i64 %17, 1, !dbg !9261
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9261
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9261
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9261

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9261

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub53 = sub i64 %18, 1, !dbg !9261
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9261
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9261
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9261

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9261

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub58 = sub i64 %19, 1, !dbg !9261
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9261
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9261
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9261

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9261

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub63 = sub i64 %20, 1, !dbg !9261
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9261
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9261
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9261

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9261

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub68 = sub i64 %21, 1, !dbg !9261
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9261
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9261
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9261

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9261

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub73 = sub i64 %22, 1, !dbg !9261
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9261
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9261
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9261

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9261

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub78 = sub i64 %23, 1, !dbg !9261
  %and79 = and i64 %sub78, 562949953421312, !dbg !9261
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9261
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9261

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9261

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub83 = sub i64 %24, 1, !dbg !9261
  %and84 = and i64 %sub83, 281474976710656, !dbg !9261
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9261
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9261

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9261

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub88 = sub i64 %25, 1, !dbg !9261
  %and89 = and i64 %sub88, 140737488355328, !dbg !9261
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9261
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9261

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9261

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub93 = sub i64 %26, 1, !dbg !9261
  %and94 = and i64 %sub93, 70368744177664, !dbg !9261
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9261
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9261

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9261

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub98 = sub i64 %27, 1, !dbg !9261
  %and99 = and i64 %sub98, 35184372088832, !dbg !9261
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9261
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9261

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9261

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub103 = sub i64 %28, 1, !dbg !9261
  %and104 = and i64 %sub103, 17592186044416, !dbg !9261
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9261
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9261

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9261

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub108 = sub i64 %29, 1, !dbg !9261
  %and109 = and i64 %sub108, 8796093022208, !dbg !9261
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9261
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9261

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9261

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub113 = sub i64 %30, 1, !dbg !9261
  %and114 = and i64 %sub113, 4398046511104, !dbg !9261
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9261
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9261

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9261

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub118 = sub i64 %31, 1, !dbg !9261
  %and119 = and i64 %sub118, 2199023255552, !dbg !9261
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9261
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9261

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9261

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub123 = sub i64 %32, 1, !dbg !9261
  %and124 = and i64 %sub123, 1099511627776, !dbg !9261
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9261
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9261

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9261

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub128 = sub i64 %33, 1, !dbg !9261
  %and129 = and i64 %sub128, 549755813888, !dbg !9261
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9261
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9261

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9261

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub133 = sub i64 %34, 1, !dbg !9261
  %and134 = and i64 %sub133, 274877906944, !dbg !9261
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9261
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9261

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9261

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub138 = sub i64 %35, 1, !dbg !9261
  %and139 = and i64 %sub138, 137438953472, !dbg !9261
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9261
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9261

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9261

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub143 = sub i64 %36, 1, !dbg !9261
  %and144 = and i64 %sub143, 68719476736, !dbg !9261
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9261
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9261

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9261

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub148 = sub i64 %37, 1, !dbg !9261
  %and149 = and i64 %sub148, 34359738368, !dbg !9261
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9261
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9261

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9261

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub153 = sub i64 %38, 1, !dbg !9261
  %and154 = and i64 %sub153, 17179869184, !dbg !9261
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9261
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9261

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9261

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub158 = sub i64 %39, 1, !dbg !9261
  %and159 = and i64 %sub158, 8589934592, !dbg !9261
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9261
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9261

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9261

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub163 = sub i64 %40, 1, !dbg !9261
  %and164 = and i64 %sub163, 4294967296, !dbg !9261
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9261
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9261

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9261

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub168 = sub i64 %41, 1, !dbg !9261
  %and169 = and i64 %sub168, 2147483648, !dbg !9261
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9261
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9261

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9261

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub173 = sub i64 %42, 1, !dbg !9261
  %and174 = and i64 %sub173, 1073741824, !dbg !9261
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9261
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9261

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9261

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub178 = sub i64 %43, 1, !dbg !9261
  %and179 = and i64 %sub178, 536870912, !dbg !9261
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9261
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9261

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9261

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub183 = sub i64 %44, 1, !dbg !9261
  %and184 = and i64 %sub183, 268435456, !dbg !9261
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9261
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9261

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9261

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub188 = sub i64 %45, 1, !dbg !9261
  %and189 = and i64 %sub188, 134217728, !dbg !9261
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9261
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9261

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9261

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub193 = sub i64 %46, 1, !dbg !9261
  %and194 = and i64 %sub193, 67108864, !dbg !9261
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9261
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9261

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9261

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub198 = sub i64 %47, 1, !dbg !9261
  %and199 = and i64 %sub198, 33554432, !dbg !9261
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9261
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9261

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9261

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub203 = sub i64 %48, 1, !dbg !9261
  %and204 = and i64 %sub203, 16777216, !dbg !9261
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9261
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9261

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9261

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub208 = sub i64 %49, 1, !dbg !9261
  %and209 = and i64 %sub208, 8388608, !dbg !9261
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9261
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9261

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9261

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub213 = sub i64 %50, 1, !dbg !9261
  %and214 = and i64 %sub213, 4194304, !dbg !9261
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9261
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9261

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9261

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub218 = sub i64 %51, 1, !dbg !9261
  %and219 = and i64 %sub218, 2097152, !dbg !9261
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9261
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9261

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9261

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub223 = sub i64 %52, 1, !dbg !9261
  %and224 = and i64 %sub223, 1048576, !dbg !9261
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9261
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9261

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9261

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub228 = sub i64 %53, 1, !dbg !9261
  %and229 = and i64 %sub228, 524288, !dbg !9261
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9261
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9261

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9261

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub233 = sub i64 %54, 1, !dbg !9261
  %and234 = and i64 %sub233, 262144, !dbg !9261
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9261
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9261

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9261

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub238 = sub i64 %55, 1, !dbg !9261
  %and239 = and i64 %sub238, 131072, !dbg !9261
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9261
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9261

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9261

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub243 = sub i64 %56, 1, !dbg !9261
  %and244 = and i64 %sub243, 65536, !dbg !9261
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9261
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9261

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9261

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub248 = sub i64 %57, 1, !dbg !9261
  %and249 = and i64 %sub248, 32768, !dbg !9261
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9261
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9261

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9261

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub253 = sub i64 %58, 1, !dbg !9261
  %and254 = and i64 %sub253, 16384, !dbg !9261
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9261
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9261

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9261

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub258 = sub i64 %59, 1, !dbg !9261
  %and259 = and i64 %sub258, 8192, !dbg !9261
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9261
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9261

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9261

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub263 = sub i64 %60, 1, !dbg !9261
  %and264 = and i64 %sub263, 4096, !dbg !9261
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9261
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9261

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9261

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub268 = sub i64 %61, 1, !dbg !9261
  %and269 = and i64 %sub268, 2048, !dbg !9261
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9261
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9261

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9261

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub273 = sub i64 %62, 1, !dbg !9261
  %and274 = and i64 %sub273, 1024, !dbg !9261
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9261
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9261

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9261

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub278 = sub i64 %63, 1, !dbg !9261
  %and279 = and i64 %sub278, 512, !dbg !9261
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9261
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9261

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9261

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub283 = sub i64 %64, 1, !dbg !9261
  %and284 = and i64 %sub283, 256, !dbg !9261
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9261
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9261

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9261

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub288 = sub i64 %65, 1, !dbg !9261
  %and289 = and i64 %sub288, 128, !dbg !9261
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9261
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9261

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9261

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub293 = sub i64 %66, 1, !dbg !9261
  %and294 = and i64 %sub293, 64, !dbg !9261
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9261
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9261

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9261

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub298 = sub i64 %67, 1, !dbg !9261
  %and299 = and i64 %sub298, 32, !dbg !9261
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9261
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9261

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9261

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub303 = sub i64 %68, 1, !dbg !9261
  %and304 = and i64 %sub303, 16, !dbg !9261
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9261
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9261

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9261

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub308 = sub i64 %69, 1, !dbg !9261
  %and309 = and i64 %sub308, 8, !dbg !9261
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9261
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9261

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9261

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub313 = sub i64 %70, 1, !dbg !9261
  %and314 = and i64 %sub313, 4, !dbg !9261
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9261
  %71 = zext i1 %tobool315 to i64, !dbg !9261
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9261
  br label %cond.end, !dbg !9261

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9261
  br label %cond.end317, !dbg !9261

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9261
  br label %cond.end319, !dbg !9261

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9261
  br label %cond.end321, !dbg !9261

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9261
  br label %cond.end323, !dbg !9261

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9261
  br label %cond.end325, !dbg !9261

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9261
  br label %cond.end327, !dbg !9261

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9261
  br label %cond.end329, !dbg !9261

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9261
  br label %cond.end331, !dbg !9261

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9261
  br label %cond.end333, !dbg !9261

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9261
  br label %cond.end335, !dbg !9261

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9261
  br label %cond.end337, !dbg !9261

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9261
  br label %cond.end339, !dbg !9261

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9261
  br label %cond.end341, !dbg !9261

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9261
  br label %cond.end343, !dbg !9261

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9261
  br label %cond.end345, !dbg !9261

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9261
  br label %cond.end347, !dbg !9261

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9261
  br label %cond.end349, !dbg !9261

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9261
  br label %cond.end351, !dbg !9261

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9261
  br label %cond.end353, !dbg !9261

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9261
  br label %cond.end355, !dbg !9261

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9261
  br label %cond.end357, !dbg !9261

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9261
  br label %cond.end359, !dbg !9261

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9261
  br label %cond.end361, !dbg !9261

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9261
  br label %cond.end363, !dbg !9261

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9261
  br label %cond.end365, !dbg !9261

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9261
  br label %cond.end367, !dbg !9261

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9261
  br label %cond.end369, !dbg !9261

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9261
  br label %cond.end371, !dbg !9261

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9261
  br label %cond.end373, !dbg !9261

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9261
  br label %cond.end375, !dbg !9261

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9261
  br label %cond.end377, !dbg !9261

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9261
  br label %cond.end379, !dbg !9261

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9261
  br label %cond.end381, !dbg !9261

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9261
  br label %cond.end383, !dbg !9261

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9261
  br label %cond.end385, !dbg !9261

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9261
  br label %cond.end387, !dbg !9261

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9261
  br label %cond.end389, !dbg !9261

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9261
  br label %cond.end391, !dbg !9261

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9261
  br label %cond.end393, !dbg !9261

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9261
  br label %cond.end395, !dbg !9261

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9261
  br label %cond.end397, !dbg !9261

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9261
  br label %cond.end399, !dbg !9261

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9261
  br label %cond.end401, !dbg !9261

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9261
  br label %cond.end403, !dbg !9261

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9261
  br label %cond.end405, !dbg !9261

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9261
  br label %cond.end407, !dbg !9261

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9261
  br label %cond.end409, !dbg !9261

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9261
  br label %cond.end411, !dbg !9261

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9261
  br label %cond.end413, !dbg !9261

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9261
  br label %cond.end415, !dbg !9261

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9261
  br label %cond.end417, !dbg !9261

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9261
  br label %cond.end419, !dbg !9261

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9261
  br label %cond.end421, !dbg !9261

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9261
  br label %cond.end423, !dbg !9261

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9261
  br label %cond.end425, !dbg !9261

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9261
  br label %cond.end427, !dbg !9261

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9261
  br label %cond.end429, !dbg !9261

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9261
  br label %cond.end431, !dbg !9261

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9261
  br label %cond.end433, !dbg !9261

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9261
  br label %cond.end435, !dbg !9261

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9261
  br label %cond.end437, !dbg !9261

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9261
  br label %cond.end440, !dbg !9261

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9261

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9261
  br label %cond.end444, !dbg !9261

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9261
  %sub443 = sub i64 %72, 1, !dbg !9261
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !9261
  br label %cond.end444, !dbg !9261

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9261
  %sub446 = sub i32 %cond445, 12, !dbg !9262
  %add = add i32 %sub446, 1, !dbg !9263
  store i32 %add, i32* %retval, align 4, !dbg !9264
  br label %return, !dbg !9264

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9265
  %dec = add i64 %73, -1, !dbg !9265
  store i64 %dec, i64* %size.addr, align 8, !dbg !9265
  %74 = load i64, i64* %size.addr, align 8, !dbg !9266
  %shr = lshr i64 %74, 12, !dbg !9266
  store i64 %shr, i64* %size.addr, align 8, !dbg !9266
  %75 = load i64, i64* %size.addr, align 8, !dbg !9267
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9244
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9268
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9269
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !9268, !srcloc !9270
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9268
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9271
  %add.i = add i32 %79, 1, !dbg !9272
  store i32 %add.i, i32* %retval, align 4, !dbg !9273
  br label %return, !dbg !9273

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9274
  ret i32 %80, !dbg !9274
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !9275 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9236, metadata !DIExpression()), !dbg !9279
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9243, metadata !DIExpression()), !dbg !9281
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9282, metadata !DIExpression()), !dbg !9283
  %0 = load i64, i64* %n.addr, align 8, !dbg !9284
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9281
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9285
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9286
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !9285, !srcloc !9270
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9285
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9287
  %add.i = add i32 %4, 1, !dbg !9288
  %sub = sub i32 %add.i, 1, !dbg !9289
  ret i32 %sub, !dbg !9290
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #1 !dbg !9291 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !9295, metadata !DIExpression()), !dbg !9296
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !9297, metadata !DIExpression()), !dbg !9298
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9299, metadata !DIExpression()), !dbg !9300
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9301, metadata !DIExpression()), !dbg !9302
  %0 = load i8*, i8** %object.addr, align 8, !dbg !9303
  ret i8* %0, !dbg !9304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @carrier_raised(%struct.tty_port* %port) #1 !dbg !9305 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !9306, metadata !DIExpression()), !dbg !9310
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !9313
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !9314
  %port.addr = alloca %struct.tty_port*, align 8
  %flags = alloca i64, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mgsl_struct*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !9321, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9323, metadata !DIExpression()), !dbg !9324
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !9325, metadata !DIExpression()), !dbg !9326
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9327, metadata !DIExpression()), !dbg !9329
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9329
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !9329
  store i8* %1, i8** %__mptr, align 8, !dbg !9329
  br label %do.body, !dbg !9329

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9330

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9329
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !9329
  %3 = bitcast i8* %add.ptr to %struct.mgsl_struct*, !dbg !9329
  store %struct.mgsl_struct* %3, %struct.mgsl_struct** %tmp, align 8, !dbg !9330
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %tmp, align 8, !dbg !9329
  store %struct.mgsl_struct* %4, %struct.mgsl_struct** %info, align 8, !dbg !9326
  br label %do.body1, !dbg !9332

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !9333

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9334, metadata !DIExpression()), !dbg !9336
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9337, metadata !DIExpression()), !dbg !9336
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9336
  %conv = zext i1 %cmp to i32, !dbg !9336
  store i32 1, i32* %tmp3, align 4, !dbg !9336
  %5 = load i32, i32* %tmp3, align 4, !dbg !9336
  br label %do.body4, !dbg !9338

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !9339

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !9340

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !9342, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !9346, metadata !DIExpression()), !dbg !9345
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !9345
  %conv10 = zext i1 %cmp9 to i32, !dbg !9345
  store i32 1, i32* %tmp11, align 4, !dbg !9345
  %6 = load i32, i32* %tmp11, align 4, !dbg !9345
  %call = call i64 @arch_local_irq_save() #11, !dbg !9347
  store i64 %call, i64* %flags, align 8, !dbg !9347
  br label %do.end12, !dbg !9347

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !9340

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !9339

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9348, !srcloc !9349
  br label %do.body15, !dbg !9348

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9350
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 17, !dbg !9350
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9351
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !9352
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !9352
  br label %do.end17, !dbg !9350

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !9348

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9339

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9338

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9333

do.end21:                                         ; preds = %do.end20
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9353
  call void @usc_get_serial_signals(%struct.mgsl_struct* %10) #11, !dbg !9354
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9355
  %irq_spinlock22 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 17, !dbg !9356
  %12 = load i64, i64* %flags, align 8, !dbg !9357
  store %struct.spinlock* %irq_spinlock22, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !9361
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !9361
  store i32 1, i32* %tmp.i, align 4, !dbg !9361
  %13 = load i32, i32* %tmp.i, align 4, !dbg !9361
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !9368
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !9368
  store i32 1, i32* %tmp8.i, align 4, !dbg !9368
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !9368
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !9370
  call void @arch_local_irq_restore(i64 %15) #14, !dbg !9370
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9371, !srcloc !9373
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !9374
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !9374
  %rlock.i25 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !9374
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9376
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 71, !dbg !9377
  %19 = load i8, i8* %serial_signals, align 8, !dbg !9377
  %conv23 = zext i8 %19 to i32, !dbg !9376
  %and = and i32 %conv23, 1, !dbg !9378
  %tobool = icmp ne i32 %and, 0, !dbg !9379
  %20 = zext i1 %tobool to i64, !dbg !9379
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !9379
  ret i32 %cond, !dbg !9380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dtr_rts(%struct.tty_port* %port, i32 %on) #1 !dbg !9381 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !9306, metadata !DIExpression()), !dbg !9382
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !9384
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !9385
  %port.addr = alloca %struct.tty_port*, align 8
  %on.addr = alloca i32, align 4
  %info = alloca %struct.mgsl_struct*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !9392, metadata !DIExpression()), !dbg !9393
  store i32 %on, i32* %on.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %on.addr, metadata !9394, metadata !DIExpression()), !dbg !9395
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !9396, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9398, metadata !DIExpression()), !dbg !9400
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9400
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !9400
  store i8* %1, i8** %__mptr, align 8, !dbg !9400
  br label %do.body, !dbg !9400

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9401

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9400
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !9400
  %3 = bitcast i8* %add.ptr to %struct.mgsl_struct*, !dbg !9400
  store %struct.mgsl_struct* %3, %struct.mgsl_struct** %tmp, align 8, !dbg !9401
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %tmp, align 8, !dbg !9400
  store %struct.mgsl_struct* %4, %struct.mgsl_struct** %info, align 8, !dbg !9397
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9403, metadata !DIExpression()), !dbg !9404
  br label %do.body1, !dbg !9405

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !9406

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9407, metadata !DIExpression()), !dbg !9409
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9410, metadata !DIExpression()), !dbg !9409
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9409
  %conv = zext i1 %cmp to i32, !dbg !9409
  store i32 1, i32* %tmp3, align 4, !dbg !9409
  %5 = load i32, i32* %tmp3, align 4, !dbg !9409
  br label %do.body4, !dbg !9411

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !9412

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !9413

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !9415, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !9419, metadata !DIExpression()), !dbg !9418
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !9418
  %conv10 = zext i1 %cmp9 to i32, !dbg !9418
  store i32 1, i32* %tmp11, align 4, !dbg !9418
  %6 = load i32, i32* %tmp11, align 4, !dbg !9418
  %call = call i64 @arch_local_irq_save() #11, !dbg !9420
  store i64 %call, i64* %flags, align 8, !dbg !9420
  br label %do.end12, !dbg !9420

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !9413

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !9412

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9421, !srcloc !9422
  br label %do.body15, !dbg !9421

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9423
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 17, !dbg !9423
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9424
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !9425
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !9425
  br label %do.end17, !dbg !9423

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !9421

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9412

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9411

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9406

do.end21:                                         ; preds = %do.end20
  %10 = load i32, i32* %on.addr, align 4, !dbg !9426
  %tobool = icmp ne i32 %10, 0, !dbg !9426
  br i1 %tobool, label %if.then, label %if.else, !dbg !9428

if.then:                                          ; preds = %do.end21
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9429
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 71, !dbg !9430
  %12 = load i8, i8* %serial_signals, align 8, !dbg !9431
  %conv22 = zext i8 %12 to i32, !dbg !9431
  %or = or i32 %conv22, 160, !dbg !9431
  %conv23 = trunc i32 %or to i8, !dbg !9431
  store i8 %conv23, i8* %serial_signals, align 8, !dbg !9431
  br label %if.end, !dbg !9429

if.else:                                          ; preds = %do.end21
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9432
  %serial_signals24 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 71, !dbg !9433
  %14 = load i8, i8* %serial_signals24, align 8, !dbg !9434
  %conv25 = zext i8 %14 to i32, !dbg !9434
  %and = and i32 %conv25, -161, !dbg !9434
  %conv26 = trunc i32 %and to i8, !dbg !9434
  store i8 %conv26, i8* %serial_signals24, align 8, !dbg !9434
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9435
  call void @usc_set_serial_signals(%struct.mgsl_struct* %15) #11, !dbg !9436
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !9437
  %irq_spinlock27 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 17, !dbg !9438
  %17 = load i64, i64* %flags, align 8, !dbg !9439
  store %struct.spinlock* %irq_spinlock27, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %17, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !9440
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !9440
  store i32 1, i32* %tmp.i, align 4, !dbg !9440
  %18 = load i32, i32* %tmp.i, align 4, !dbg !9440
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !9441
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !9441
  store i32 1, i32* %tmp8.i, align 4, !dbg !9441
  %19 = load i32, i32* %tmp8.i, align 4, !dbg !9441
  %20 = load i64, i64* %flags.addr.i, align 8, !dbg !9442
  call void @arch_local_irq_restore(i64 %20) #14, !dbg !9442
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9443, !srcloc !9373
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !9444
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !9444
  %rlock.i29 = bitcast %union.anon.1* %22 to %struct.raw_spinlock*, !dbg !9444
  ret void, !dbg !9445
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #1 !dbg !9446 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !9450, metadata !DIExpression()), !dbg !9451
  %call = call i64 @arch_local_save_flags() #11, !dbg !9452
  store i64 %call, i64* %f, align 8, !dbg !9453
  call void @arch_local_irq_disable() #11, !dbg !9454
  %0 = load i64, i64* %f, align 8, !dbg !9455
  ret i64 %0, !dbg !9456
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_get_serial_signals(%struct.mgsl_struct* %info) #1 !dbg !9457 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %status = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !9458, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.declare(metadata i16* %status, metadata !9460, metadata !DIExpression()), !dbg !9461
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9462
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 71, !dbg !9463
  %1 = load i8, i8* %serial_signals, align 8, !dbg !9464
  %conv = zext i8 %1 to i32, !dbg !9464
  %and = and i32 %conv, 160, !dbg !9464
  %conv1 = trunc i32 %and to i8, !dbg !9464
  store i8 %conv1, i8* %serial_signals, align 8, !dbg !9464
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9465
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %2, i16 zeroext 28) #11, !dbg !9466
  store i16 %call, i16* %status, align 2, !dbg !9467
  %3 = load i16, i16* %status, align 2, !dbg !9468
  %conv2 = zext i16 %3 to i32, !dbg !9468
  %and3 = and i32 %conv2, 16, !dbg !9470
  %tobool = icmp ne i32 %and3, 0, !dbg !9470
  br i1 %tobool, label %if.then, label %if.end, !dbg !9471

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9472
  %serial_signals4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 71, !dbg !9473
  %5 = load i8, i8* %serial_signals4, align 8, !dbg !9474
  %conv5 = zext i8 %5 to i32, !dbg !9474
  %or = or i32 %conv5, 16, !dbg !9474
  %conv6 = trunc i32 %or to i8, !dbg !9474
  store i8 %conv6, i8* %serial_signals4, align 8, !dbg !9474
  br label %if.end, !dbg !9472

if.end:                                           ; preds = %if.then, %entry
  %6 = load i16, i16* %status, align 2, !dbg !9475
  %conv7 = zext i16 %6 to i32, !dbg !9475
  %and8 = and i32 %conv7, 64, !dbg !9477
  %tobool9 = icmp ne i32 %and8, 0, !dbg !9477
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !9478

if.then10:                                        ; preds = %if.end
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9479
  %serial_signals11 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 71, !dbg !9480
  %8 = load i8, i8* %serial_signals11, align 8, !dbg !9481
  %conv12 = zext i8 %8 to i32, !dbg !9481
  %or13 = or i32 %conv12, 1, !dbg !9481
  %conv14 = trunc i32 %or13 to i8, !dbg !9481
  store i8 %conv14, i8* %serial_signals11, align 8, !dbg !9481
  br label %if.end15, !dbg !9479

if.end15:                                         ; preds = %if.then10, %if.end
  %9 = load i16, i16* %status, align 2, !dbg !9482
  %conv16 = zext i16 %9 to i32, !dbg !9482
  %and17 = and i32 %conv16, 1024, !dbg !9484
  %tobool18 = icmp ne i32 %and17, 0, !dbg !9484
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !9485

if.then19:                                        ; preds = %if.end15
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9486
  %serial_signals20 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 71, !dbg !9487
  %11 = load i8, i8* %serial_signals20, align 8, !dbg !9488
  %conv21 = zext i8 %11 to i32, !dbg !9488
  %or22 = or i32 %conv21, 4, !dbg !9488
  %conv23 = trunc i32 %or22 to i8, !dbg !9488
  store i8 %conv23, i8* %serial_signals20, align 8, !dbg !9488
  br label %if.end24, !dbg !9486

if.end24:                                         ; preds = %if.then19, %if.end15
  %12 = load i16, i16* %status, align 2, !dbg !9489
  %conv25 = zext i16 %12 to i32, !dbg !9489
  %and26 = and i32 %conv25, 256, !dbg !9491
  %tobool27 = icmp ne i32 %and26, 0, !dbg !9491
  br i1 %tobool27, label %if.then28, label %if.end33, !dbg !9492

if.then28:                                        ; preds = %if.end24
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9493
  %serial_signals29 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 71, !dbg !9494
  %14 = load i8, i8* %serial_signals29, align 8, !dbg !9495
  %conv30 = zext i8 %14 to i32, !dbg !9495
  %or31 = or i32 %conv30, 64, !dbg !9495
  %conv32 = trunc i32 %or31 to i8, !dbg !9495
  store i8 %conv32, i8* %serial_signals29, align 8, !dbg !9495
  br label %if.end33, !dbg !9493

if.end33:                                         ; preds = %if.then28, %if.end24
  ret void, !dbg !9496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #1 !dbg !9497 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9501, metadata !DIExpression()), !dbg !9500
  %0 = load i64, i64* %__edi, align 8, !dbg !9500
  store i64 %0, i64* %__edi, align 8, !dbg !9500
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9502, metadata !DIExpression()), !dbg !9500
  %1 = load i64, i64* %__esi, align 8, !dbg !9500
  store i64 %1, i64* %__esi, align 8, !dbg !9500
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9503, metadata !DIExpression()), !dbg !9500
  %2 = load i64, i64* %__edx, align 8, !dbg !9500
  store i64 %2, i64* %__edx, align 8, !dbg !9500
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9504, metadata !DIExpression()), !dbg !9500
  %3 = load i64, i64* %__ecx, align 8, !dbg !9500
  store i64 %3, i64* %__ecx, align 8, !dbg !9500
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9505, metadata !DIExpression()), !dbg !9500
  %4 = load i64, i64* %__eax, align 8, !dbg !9500
  store i64 %4, i64* %__eax, align 8, !dbg !9500
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !9500
  %6 = call i64 @llvm.read_register.i64(metadata !8204), !dbg !9506
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !9506, !srcloc !9509
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9506
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9506
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9506
  call void @llvm.write_register.i64(metadata !8204, i64 %asmresult1), !dbg !9506
  %8 = load i64, i64* %__eax, align 8, !dbg !9506
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !9510, metadata !DIExpression()), !dbg !9512
  store i64 -1, i64* %__mask, align 8, !dbg !9512
  %9 = load i64, i64* %__mask, align 8, !dbg !9512
  store i64 %9, i64* %tmp, align 8, !dbg !9512
  %10 = load i64, i64* %tmp, align 8, !dbg !9512
  %and = and i64 %8, %10, !dbg !9506
  store i64 %and, i64* %__ret, align 8, !dbg !9506
  %11 = load i64, i64* %__ret, align 8, !dbg !9500
  store i64 %11, i64* %tmp2, align 8, !dbg !9513
  %12 = load i64, i64* %tmp2, align 8, !dbg !9500
  ret i64 %12, !dbg !9514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #1 !dbg !9515 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9516, metadata !DIExpression()), !dbg !9518
  %0 = load i64, i64* %__edi, align 8, !dbg !9518
  store i64 %0, i64* %__edi, align 8, !dbg !9518
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9519, metadata !DIExpression()), !dbg !9518
  %1 = load i64, i64* %__esi, align 8, !dbg !9518
  store i64 %1, i64* %__esi, align 8, !dbg !9518
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9520, metadata !DIExpression()), !dbg !9518
  %2 = load i64, i64* %__edx, align 8, !dbg !9518
  store i64 %2, i64* %__edx, align 8, !dbg !9518
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9521, metadata !DIExpression()), !dbg !9518
  %3 = load i64, i64* %__ecx, align 8, !dbg !9518
  store i64 %3, i64* %__ecx, align 8, !dbg !9518
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9522, metadata !DIExpression()), !dbg !9518
  %4 = load i64, i64* %__eax, align 8, !dbg !9518
  store i64 %4, i64* %__eax, align 8, !dbg !9518
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !9518
  %6 = call i64 @llvm.read_register.i64(metadata !8204), !dbg !9518
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !9518, !srcloc !9523
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9518
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9518
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9518
  call void @llvm.write_register.i64(metadata !8204, i64 %asmresult1), !dbg !9518
  ret void, !dbg !9524
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @usc_InReg(%struct.mgsl_struct* %info, i16 zeroext %RegAddr) #1 !dbg !9525 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %RegAddr.addr = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !9528, metadata !DIExpression()), !dbg !9529
  store i16 %RegAddr, i16* %RegAddr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %RegAddr.addr, metadata !9530, metadata !DIExpression()), !dbg !9531
  %0 = load i16, i16* %RegAddr.addr, align 2, !dbg !9532
  %conv = zext i16 %0 to i32, !dbg !9532
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9533
  %loopback_bits = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 68, !dbg !9534
  %2 = load i16, i16* %loopback_bits, align 4, !dbg !9534
  %conv1 = zext i16 %2 to i32, !dbg !9533
  %add = add i32 %conv, %conv1, !dbg !9535
  %conv2 = trunc i32 %add to i16, !dbg !9532
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9536
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 59, !dbg !9537
  %4 = load i32, i32* %io_base, align 4, !dbg !9537
  %add3 = add i32 %4, 4, !dbg !9538
  call void @outw(i16 zeroext %conv2, i32 %add3) #11, !dbg !9539
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9540
  %io_base4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 59, !dbg !9541
  %6 = load i32, i32* %io_base4, align 4, !dbg !9541
  %add5 = add i32 %6, 4, !dbg !9542
  %call = call zeroext i16 @inw(i32 %add5) #11, !dbg !9543
  ret i16 %call, !dbg !9544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outw(i16 zeroext %value, i32 %port) #1 !dbg !9545 {
entry:
  %value.addr = alloca i16, align 2
  %port.addr = alloca i32, align 4
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !9548, metadata !DIExpression()), !dbg !9549
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9550, metadata !DIExpression()), !dbg !9549
  %0 = load i16, i16* %value.addr, align 2, !dbg !9549
  %1 = load i32, i32* %port.addr, align 4, !dbg !9549
  call void asm sideeffect "outw ${0:w}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 %1) #10, !dbg !9549, !srcloc !9551
  ret void, !dbg !9549
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @inw(i32 %port) #1 !dbg !9552 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i16, align 2
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9555, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.declare(metadata i16* %value, metadata !9557, metadata !DIExpression()), !dbg !9556
  %0 = load i32, i32* %port.addr, align 4, !dbg !9556
  %1 = call i16 asm sideeffect "inw ${1:w}, ${0:w}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #10, !dbg !9556, !srcloc !9558
  store i16 %1, i16* %value, align 2, !dbg !9556
  %2 = load i16, i16* %value, align 2, !dbg !9556
  ret i16 %2, !dbg !9556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #1 !dbg !9559 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !9562, metadata !DIExpression()), !dbg !9563
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9564, metadata !DIExpression()), !dbg !9566
  %0 = load i64, i64* %__edi, align 8, !dbg !9566
  store i64 %0, i64* %__edi, align 8, !dbg !9566
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9567, metadata !DIExpression()), !dbg !9566
  %1 = load i64, i64* %__esi, align 8, !dbg !9566
  store i64 %1, i64* %__esi, align 8, !dbg !9566
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9568, metadata !DIExpression()), !dbg !9566
  %2 = load i64, i64* %__edx, align 8, !dbg !9566
  store i64 %2, i64* %__edx, align 8, !dbg !9566
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9569, metadata !DIExpression()), !dbg !9566
  %3 = load i64, i64* %__ecx, align 8, !dbg !9566
  store i64 %3, i64* %__ecx, align 8, !dbg !9566
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9570, metadata !DIExpression()), !dbg !9566
  %4 = load i64, i64* %__eax, align 8, !dbg !9566
  store i64 %4, i64* %__eax, align 8, !dbg !9566
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !9566
  %6 = call i64 @llvm.read_register.i64(metadata !8204), !dbg !9566
  %7 = load i64, i64* %f.addr, align 8, !dbg !9566
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !9566, !srcloc !9571
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !9566
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !9566
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9566
  call void @llvm.write_register.i64(metadata !8204, i64 %asmresult1), !dbg !9566
  ret void, !dbg !9572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_set_serial_signals(%struct.mgsl_struct* %info) #1 !dbg !9573 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %Control = alloca i16, align 2
  %V24Out = alloca i8, align 1
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !9574, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.declare(metadata i16* %Control, metadata !9576, metadata !DIExpression()), !dbg !9577
  call void @llvm.dbg.declare(metadata i8* %V24Out, metadata !9578, metadata !DIExpression()), !dbg !9579
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9580
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 71, !dbg !9581
  %1 = load i8, i8* %serial_signals, align 8, !dbg !9581
  store i8 %1, i8* %V24Out, align 1, !dbg !9579
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9582
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %2, i16 zeroext 10) #11, !dbg !9583
  store i16 %call, i16* %Control, align 2, !dbg !9584
  %3 = load i8, i8* %V24Out, align 1, !dbg !9585
  %conv = zext i8 %3 to i32, !dbg !9585
  %and = and i32 %conv, 32, !dbg !9587
  %tobool = icmp ne i32 %and, 0, !dbg !9587
  br i1 %tobool, label %if.then, label %if.else, !dbg !9588

if.then:                                          ; preds = %entry
  %4 = load i16, i16* %Control, align 2, !dbg !9589
  %conv1 = zext i16 %4 to i32, !dbg !9589
  %and2 = and i32 %conv1, -65, !dbg !9589
  %conv3 = trunc i32 %and2 to i16, !dbg !9589
  store i16 %conv3, i16* %Control, align 2, !dbg !9589
  br label %if.end, !dbg !9590

if.else:                                          ; preds = %entry
  %5 = load i16, i16* %Control, align 2, !dbg !9591
  %conv4 = zext i16 %5 to i32, !dbg !9591
  %or = or i32 %conv4, 64, !dbg !9591
  %conv5 = trunc i32 %or to i16, !dbg !9591
  store i16 %conv5, i16* %Control, align 2, !dbg !9591
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i8, i8* %V24Out, align 1, !dbg !9592
  %conv6 = zext i8 %6 to i32, !dbg !9592
  %and7 = and i32 %conv6, 128, !dbg !9594
  %tobool8 = icmp ne i32 %and7, 0, !dbg !9594
  br i1 %tobool8, label %if.then9, label %if.else13, !dbg !9595

if.then9:                                         ; preds = %if.end
  %7 = load i16, i16* %Control, align 2, !dbg !9596
  %conv10 = zext i16 %7 to i32, !dbg !9596
  %and11 = and i32 %conv10, -17, !dbg !9596
  %conv12 = trunc i32 %and11 to i16, !dbg !9596
  store i16 %conv12, i16* %Control, align 2, !dbg !9596
  br label %if.end17, !dbg !9597

if.else13:                                        ; preds = %if.end
  %8 = load i16, i16* %Control, align 2, !dbg !9598
  %conv14 = zext i16 %8 to i32, !dbg !9598
  %or15 = or i32 %conv14, 16, !dbg !9598
  %conv16 = trunc i32 %or15 to i16, !dbg !9598
  store i16 %conv16, i16* %Control, align 2, !dbg !9598
  br label %if.end17

if.end17:                                         ; preds = %if.else13, %if.then9
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9599
  %10 = load i16, i16* %Control, align 2, !dbg !9600
  call void @usc_OutReg(%struct.mgsl_struct* %9, i16 zeroext 10, i16 zeroext %10) #11, !dbg !9601
  ret void, !dbg !9602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_OutReg(%struct.mgsl_struct* %info, i16 zeroext %RegAddr, i16 zeroext %RegValue) #1 !dbg !9603 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %RegAddr.addr = alloca i16, align 2
  %RegValue.addr = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !9606, metadata !DIExpression()), !dbg !9607
  store i16 %RegAddr, i16* %RegAddr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %RegAddr.addr, metadata !9608, metadata !DIExpression()), !dbg !9609
  store i16 %RegValue, i16* %RegValue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %RegValue.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  %0 = load i16, i16* %RegAddr.addr, align 2, !dbg !9612
  %conv = zext i16 %0 to i32, !dbg !9612
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9613
  %loopback_bits = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 68, !dbg !9614
  %2 = load i16, i16* %loopback_bits, align 4, !dbg !9614
  %conv1 = zext i16 %2 to i32, !dbg !9613
  %add = add i32 %conv, %conv1, !dbg !9615
  %conv2 = trunc i32 %add to i16, !dbg !9612
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9616
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 59, !dbg !9617
  %4 = load i32, i32* %io_base, align 4, !dbg !9617
  %add3 = add i32 %4, 4, !dbg !9618
  call void @outw(i16 zeroext %conv2, i32 %add3) #11, !dbg !9619
  %5 = load i16, i16* %RegValue.addr, align 2, !dbg !9620
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9621
  %io_base4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 59, !dbg !9622
  %7 = load i32, i32* %io_base4, align 4, !dbg !9622
  %add5 = add i32 %7, 4, !dbg !9623
  call void @outw(i16 zeroext %5, i32 %add5) #11, !dbg !9624
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9625
  %io_base6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 59, !dbg !9626
  %9 = load i32, i32* %io_base6, align 4, !dbg !9626
  %add7 = add i32 %9, 4, !dbg !9627
  %call = call zeroext i16 @inw(i32 %add7) #11, !dbg !9628
  ret void, !dbg !9629
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_bh_action(%struct.mgsl_struct* %info) #1 !dbg !9630 {
entry:
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !9306, metadata !DIExpression()), !dbg !9633
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !9635
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !9636
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !9643, metadata !DIExpression()), !dbg !9644
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9645, metadata !DIExpression()), !dbg !9646
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9647, metadata !DIExpression()), !dbg !9648
  store i32 0, i32* %rc, align 4, !dbg !9648
  br label %do.body, !dbg !9649

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9650

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9651, metadata !DIExpression()), !dbg !9653
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9654, metadata !DIExpression()), !dbg !9653
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9653
  %conv = zext i1 %cmp to i32, !dbg !9653
  store i32 1, i32* %tmp, align 4, !dbg !9653
  %0 = load i32, i32* %tmp, align 4, !dbg !9653
  br label %do.body2, !dbg !9655

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9656

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9657

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9659, metadata !DIExpression()), !dbg !9662
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9663, metadata !DIExpression()), !dbg !9662
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9662
  %conv8 = zext i1 %cmp7 to i32, !dbg !9662
  store i32 1, i32* %tmp9, align 4, !dbg !9662
  %1 = load i32, i32* %tmp9, align 4, !dbg !9662
  %call = call i64 @arch_local_irq_save() #11, !dbg !9664
  store i64 %call, i64* %flags, align 8, !dbg !9664
  br label %do.end, !dbg !9664

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9657

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9656

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9665, !srcloc !9666
  br label %do.body12, !dbg !9665

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9667
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 17, !dbg !9667
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9668
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !9669
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !9669
  br label %do.end14, !dbg !9667

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9665

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9656

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9655

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9650

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9670
  %pending_bh = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 22, !dbg !9672
  %6 = load i32, i32* %pending_bh, align 4, !dbg !9672
  %and = and i32 %6, 1, !dbg !9673
  %tobool = icmp ne i32 %and, 0, !dbg !9673
  br i1 %tobool, label %if.then, label %if.else, !dbg !9674

if.then:                                          ; preds = %do.end18
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9675
  %pending_bh19 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 22, !dbg !9677
  %8 = load i32, i32* %pending_bh19, align 4, !dbg !9678
  %and20 = and i32 %8, -2, !dbg !9678
  store i32 %and20, i32* %pending_bh19, align 4, !dbg !9678
  store i32 1, i32* %rc, align 4, !dbg !9679
  br label %if.end35, !dbg !9680

if.else:                                          ; preds = %do.end18
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9681
  %pending_bh21 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 22, !dbg !9683
  %10 = load i32, i32* %pending_bh21, align 4, !dbg !9683
  %and22 = and i32 %10, 2, !dbg !9684
  %tobool23 = icmp ne i32 %and22, 0, !dbg !9684
  br i1 %tobool23, label %if.then24, label %if.else27, !dbg !9685

if.then24:                                        ; preds = %if.else
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9686
  %pending_bh25 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 22, !dbg !9688
  %12 = load i32, i32* %pending_bh25, align 4, !dbg !9689
  %and26 = and i32 %12, -3, !dbg !9689
  store i32 %and26, i32* %pending_bh25, align 4, !dbg !9689
  store i32 2, i32* %rc, align 4, !dbg !9690
  br label %if.end34, !dbg !9691

if.else27:                                        ; preds = %if.else
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9692
  %pending_bh28 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 22, !dbg !9694
  %14 = load i32, i32* %pending_bh28, align 4, !dbg !9694
  %and29 = and i32 %14, 4, !dbg !9695
  %tobool30 = icmp ne i32 %and29, 0, !dbg !9695
  br i1 %tobool30, label %if.then31, label %if.end, !dbg !9696

if.then31:                                        ; preds = %if.else27
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9697
  %pending_bh32 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 22, !dbg !9699
  %16 = load i32, i32* %pending_bh32, align 4, !dbg !9700
  %and33 = and i32 %16, -5, !dbg !9700
  store i32 %and33, i32* %pending_bh32, align 4, !dbg !9700
  store i32 4, i32* %rc, align 4, !dbg !9701
  br label %if.end, !dbg !9702

if.end:                                           ; preds = %if.then31, %if.else27
  br label %if.end34

if.end34:                                         ; preds = %if.end, %if.then24
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then
  %17 = load i32, i32* %rc, align 4, !dbg !9703
  %tobool36 = icmp ne i32 %17, 0, !dbg !9703
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !9705

if.then37:                                        ; preds = %if.end35
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9706
  %bh_running = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 23, !dbg !9708
  store i8 0, i8* %bh_running, align 8, !dbg !9709
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9710
  %bh_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 25, !dbg !9711
  store i8 0, i8* %bh_requested, align 8, !dbg !9712
  br label %if.end38, !dbg !9713

if.end38:                                         ; preds = %if.then37, %if.end35
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9714
  %irq_spinlock39 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 17, !dbg !9715
  %21 = load i64, i64* %flags, align 8, !dbg !9716
  store %struct.spinlock* %irq_spinlock39, %struct.spinlock** %lock.addr.i40, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !9717
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !9717
  store i32 1, i32* %tmp.i, align 4, !dbg !9717
  %22 = load i32, i32* %tmp.i, align 4, !dbg !9717
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !9718
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !9718
  store i32 1, i32* %tmp8.i, align 4, !dbg !9718
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !9718
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !9719
  call void @arch_local_irq_restore(i64 %24) #14, !dbg !9719
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9720, !srcloc !9373
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !9721
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !9721
  %rlock.i41 = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !9721
  %27 = load i32, i32* %rc, align 4, !dbg !9722
  ret i32 %27, !dbg !9723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_bh_receive(%struct.mgsl_struct* %info) #1 !dbg !9724 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !9306, metadata !DIExpression()), !dbg !9725
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !9730
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !9731
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %get_rx_frame = alloca i1 (%struct.mgsl_struct*)*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  call void @llvm.dbg.declare(metadata i1 (%struct.mgsl_struct*)** %get_rx_frame, metadata !9740, metadata !DIExpression()), !dbg !9742
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9743
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 70, !dbg !9744
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !9745
  %1 = load i64, i64* %mode, align 8, !dbg !9745
  %cmp = icmp eq i64 %1, 2, !dbg !9746
  %2 = zext i1 %cmp to i64, !dbg !9743
  %cond = select i1 %cmp, i1 (%struct.mgsl_struct*)* @mgsl_get_rx_frame, i1 (%struct.mgsl_struct*)* @mgsl_get_raw_rx_frame, !dbg !9743
  store i1 (%struct.mgsl_struct*)* %cond, i1 (%struct.mgsl_struct*)** %get_rx_frame, align 8, !dbg !9742
  %3 = load i32, i32* @debug_level, align 4, !dbg !9747
  %cmp1 = icmp sge i32 %3, 4, !dbg !9749
  br i1 %cmp1, label %if.then, label %if.end, !dbg !9750

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9751
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !9752
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !9751
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1102, i8* %arraydecay) #12, !dbg !9753
  br label %if.end, !dbg !9753

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !9754

do.body:                                          ; preds = %do.cond, %if.end
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9755
  %rx_rcc_underrun = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 50, !dbg !9756
  %6 = load i8, i8* %rx_rcc_underrun, align 2, !dbg !9756
  %tobool = trunc i8 %6 to i1, !dbg !9756
  br i1 %tobool, label %if.then2, label %if.end25, !dbg !9757

if.then2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9758, metadata !DIExpression()), !dbg !9759
  br label %do.body3, !dbg !9760

do.body3:                                         ; preds = %if.then2
  br label %do.body4, !dbg !9761

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9762, metadata !DIExpression()), !dbg !9764
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9765, metadata !DIExpression()), !dbg !9764
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !9764
  %conv = zext i1 %cmp5 to i32, !dbg !9764
  store i32 1, i32* %tmp, align 4, !dbg !9764
  %7 = load i32, i32* %tmp, align 4, !dbg !9764
  br label %do.body6, !dbg !9766

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !9767

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !9768

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !9770, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !9774, metadata !DIExpression()), !dbg !9773
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !9773
  %conv12 = zext i1 %cmp11 to i32, !dbg !9773
  store i32 1, i32* %tmp13, align 4, !dbg !9773
  %8 = load i32, i32* %tmp13, align 4, !dbg !9773
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !9775
  store i64 %call14, i64* %flags, align 8, !dbg !9775
  br label %do.end, !dbg !9775

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !9768

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !9767

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9776, !srcloc !9777
  br label %do.body17, !dbg !9776

do.body17:                                        ; preds = %do.body16
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9778
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 17, !dbg !9778
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9779
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !9780
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !9780
  br label %do.end19, !dbg !9778

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !9776

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9767

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9766

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !9761

do.end23:                                         ; preds = %do.end22
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9781
  call void @usc_start_receiver(%struct.mgsl_struct* %12) #11, !dbg !9782
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9783
  %irq_spinlock24 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 17, !dbg !9784
  %14 = load i64, i64* %flags, align 8, !dbg !9785
  store %struct.spinlock* %irq_spinlock24, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !9786
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !9786
  store i32 1, i32* %tmp.i, align 4, !dbg !9786
  %15 = load i32, i32* %tmp.i, align 4, !dbg !9786
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !9787
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !9787
  store i32 1, i32* %tmp8.i, align 4, !dbg !9787
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !9787
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !9788
  call void @arch_local_irq_restore(i64 %17) #14, !dbg !9788
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9789, !srcloc !9373
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !9790
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !9790
  %rlock.i29 = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !9790
  br label %do.end27, !dbg !9791

if.end25:                                         ; preds = %do.body
  br label %do.cond, !dbg !9792

do.cond:                                          ; preds = %if.end25
  %20 = load i1 (%struct.mgsl_struct*)*, i1 (%struct.mgsl_struct*)** %get_rx_frame, align 8, !dbg !9793
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9794
  %call26 = call zeroext i1 %20(%struct.mgsl_struct* %21) #11, !dbg !9793
  br i1 %call26, label %do.body, label %do.end27, !dbg !9792, !llvm.loop !9795

do.end27:                                         ; preds = %do.end23, %do.cond
  ret void, !dbg !9797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_bh_transmit(%struct.mgsl_struct* %info) #1 !dbg !9798 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !9306, metadata !DIExpression()), !dbg !9799
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !9801
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !9802
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !9809, metadata !DIExpression()), !dbg !9810
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !9811, metadata !DIExpression()), !dbg !9812
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9813
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 1, !dbg !9814
  %tty1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !9815
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty1, align 8, !dbg !9815
  store %struct.tty_struct* %1, %struct.tty_struct** %tty, align 8, !dbg !9812
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9816, metadata !DIExpression()), !dbg !9817
  %2 = load i32, i32* @debug_level, align 4, !dbg !9818
  %cmp = icmp sge i32 %2, 4, !dbg !9820
  br i1 %cmp, label %if.then, label %if.end, !dbg !9821

if.then:                                          ; preds = %entry
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9822
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 56, !dbg !9823
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !9822
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1123, i8* %arraydecay) #12, !dbg !9824
  br label %if.end, !dbg !9824

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !9825
  %tobool = icmp ne %struct.tty_struct* %4, null, !dbg !9825
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !9827

if.then2:                                         ; preds = %if.end
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !9828
  call void @tty_wakeup(%struct.tty_struct* %5) #11, !dbg !9829
  br label %if.end3, !dbg !9829

if.end3:                                          ; preds = %if.then2, %if.end
  br label %do.body, !dbg !9830

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !9831

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9832, metadata !DIExpression()), !dbg !9834
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9835, metadata !DIExpression()), !dbg !9834
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !9834
  %conv = zext i1 %cmp5 to i32, !dbg !9834
  store i32 1, i32* %tmp, align 4, !dbg !9834
  %6 = load i32, i32* %tmp, align 4, !dbg !9834
  br label %do.body6, !dbg !9836

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !9837

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !9838

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !9840, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !9844, metadata !DIExpression()), !dbg !9843
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !9843
  %conv12 = zext i1 %cmp11 to i32, !dbg !9843
  store i32 1, i32* %tmp13, align 4, !dbg !9843
  %7 = load i32, i32* %tmp13, align 4, !dbg !9843
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !9845
  store i64 %call14, i64* %flags, align 8, !dbg !9845
  br label %do.end, !dbg !9845

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !9838

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !9837

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9846, !srcloc !9847
  br label %do.body17, !dbg !9846

do.body17:                                        ; preds = %do.body16
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9848
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 17, !dbg !9848
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9849
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !9850
  %rlock.i = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !9850
  br label %do.end19, !dbg !9848

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !9846

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9837

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9836

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !9831

do.end23:                                         ; preds = %do.end22
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9851
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 52, !dbg !9853
  %12 = load i8, i8* %tx_active, align 4, !dbg !9853
  %tobool24 = trunc i8 %12 to i1, !dbg !9853
  br i1 %tobool24, label %if.end28, label %land.lhs.true, !dbg !9854

land.lhs.true:                                    ; preds = %do.end23
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9855
  %loopmode_send_done_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 87, !dbg !9856
  %14 = load i8, i8* %loopmode_send_done_requested, align 2, !dbg !9856
  %tobool25 = trunc i8 %14 to i1, !dbg !9856
  br i1 %tobool25, label %if.then27, label %if.end28, !dbg !9857

if.then27:                                        ; preds = %land.lhs.true
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9858
  call void @usc_loopmode_send_done(%struct.mgsl_struct* %15) #11, !dbg !9859
  br label %if.end28, !dbg !9859

if.end28:                                         ; preds = %if.then27, %land.lhs.true, %do.end23
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9860
  %irq_spinlock29 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 17, !dbg !9861
  %17 = load i64, i64* %flags, align 8, !dbg !9862
  store %struct.spinlock* %irq_spinlock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %17, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !9863
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !9863
  store i32 1, i32* %tmp.i, align 4, !dbg !9863
  %18 = load i32, i32* %tmp.i, align 4, !dbg !9863
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !9864
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !9864
  store i32 1, i32* %tmp8.i, align 4, !dbg !9864
  %19 = load i32, i32* %tmp8.i, align 4, !dbg !9864
  %20 = load i64, i64* %flags.addr.i, align 8, !dbg !9865
  call void @arch_local_irq_restore(i64 %20) #14, !dbg !9865
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9866, !srcloc !9373
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !9867
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !9867
  %rlock.i31 = bitcast %union.anon.1* %22 to %struct.raw_spinlock*, !dbg !9867
  ret void, !dbg !9868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_bh_status(%struct.mgsl_struct* %info) #1 !dbg !9869 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !9870, metadata !DIExpression()), !dbg !9871
  %0 = load i32, i32* @debug_level, align 4, !dbg !9872
  %cmp = icmp sge i32 %0, 4, !dbg !9874
  br i1 %cmp, label %if.then, label %if.end, !dbg !9875

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9876
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !9877
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !9876
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1141, i8* %arraydecay) #12, !dbg !9878
  br label %if.end, !dbg !9878

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9879
  %ri_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 29, !dbg !9880
  store i32 0, i32* %ri_chkcount, align 8, !dbg !9881
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9882
  %dsr_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 28, !dbg !9883
  store i32 0, i32* %dsr_chkcount, align 4, !dbg !9884
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9885
  %dcd_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 26, !dbg !9886
  store i32 0, i32* %dcd_chkcount, align 4, !dbg !9887
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9888
  %cts_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 27, !dbg !9889
  store i32 0, i32* %cts_chkcount, align 8, !dbg !9890
  ret void, !dbg !9891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mgsl_get_rx_frame(%struct.mgsl_struct* %info) #1 !dbg !9892 {
entry:
  %lock.addr.i248 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i248, metadata !8660, metadata !DIExpression()), !dbg !9893
  %lock.addr.i243 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i243, metadata !9306, metadata !DIExpression()), !dbg !9904
  %flags.addr.i244 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i244, metadata !9312, metadata !DIExpression()), !dbg !9911
  %tmp.i245 = alloca i32, align 4
  %tmp8.i246 = alloca i32, align 4
  %lock.addr.i241 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i241, metadata !9306, metadata !DIExpression()), !dbg !9912
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !9914
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !9915
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %StartIndex = alloca i32, align 4
  %EndIndex = alloca i32, align 4
  %status = alloca i16, align 2
  %pBufEntry = alloca %struct._DMABUFFERENTRY*, align 8
  %framesize = alloca i32, align 4
  %ReturnCode = alloca i8, align 1
  %flags = alloca i64, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %return_frame = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__UNIQUE_ID___x348 = alloca i32, align 4
  %__UNIQUE_ID___y349 = alloca i32, align 4
  %tmp113 = alloca i32, align 4
  %copy_count = alloca i32, align 4
  %index = alloca i32, align 4
  %ptmp = alloca i8*, align 8
  %partial_count = alloca i32, align 4
  %__dummy212 = alloca i64, align 8
  %__dummy2213 = alloca i64, align 8
  %tmp216 = alloca i32, align 4
  %__dummy220 = alloca i64, align 8
  %__dummy2221 = alloca i64, align 8
  %tmp224 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !9922, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.declare(metadata i32* %StartIndex, metadata !9924, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.declare(metadata i32* %EndIndex, metadata !9926, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.declare(metadata i16* %status, metadata !9928, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.declare(metadata %struct._DMABUFFERENTRY** %pBufEntry, metadata !9930, metadata !DIExpression()), !dbg !9931
  call void @llvm.dbg.declare(metadata i32* %framesize, metadata !9932, metadata !DIExpression()), !dbg !9933
  store i32 0, i32* %framesize, align 4, !dbg !9933
  call void @llvm.dbg.declare(metadata i8* %ReturnCode, metadata !9934, metadata !DIExpression()), !dbg !9935
  store i8 0, i8* %ReturnCode, align 1, !dbg !9935
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9936, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !9938, metadata !DIExpression()), !dbg !9939
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9940
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 1, !dbg !9941
  %tty1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !9942
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty1, align 8, !dbg !9942
  store %struct.tty_struct* %1, %struct.tty_struct** %tty, align 8, !dbg !9939
  call void @llvm.dbg.declare(metadata i8* %return_frame, metadata !9943, metadata !DIExpression()), !dbg !9944
  store i8 0, i8* %return_frame, align 1, !dbg !9944
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9945
  %current_rx_buffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 35, !dbg !9946
  %3 = load i32, i32* %current_rx_buffer, align 8, !dbg !9946
  store i32 %3, i32* %EndIndex, align 4, !dbg !9947
  store i32 %3, i32* %StartIndex, align 4, !dbg !9948
  br label %while.cond, !dbg !9949

while.cond:                                       ; preds = %if.end34, %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9950
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 34, !dbg !9951
  %5 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !9951
  %6 = load i32, i32* %EndIndex, align 4, !dbg !9952
  %idxprom = zext i32 %6 to i64, !dbg !9950
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %5, i64 %idxprom, !dbg !9950
  %status2 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 2, !dbg !9953
  %7 = load volatile i16, i16* %status2, align 2, !dbg !9953
  %tobool = icmp ne i16 %7, 0, !dbg !9954
  %lnot = xor i1 %tobool, true, !dbg !9954
  br i1 %lnot, label %while.body, label %while.end, !dbg !9949

while.body:                                       ; preds = %while.cond
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9955
  %rx_buffer_list3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 34, !dbg !9957
  %9 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list3, align 8, !dbg !9957
  %10 = load i32, i32* %EndIndex, align 4, !dbg !9958
  %idxprom4 = zext i32 %10 to i64, !dbg !9955
  %arrayidx5 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %9, i64 %idxprom4, !dbg !9955
  %count = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx5, i32 0, i32 1, !dbg !9959
  %11 = load volatile i16, i16* %count, align 4, !dbg !9959
  %tobool6 = icmp ne i16 %11, 0, !dbg !9955
  br i1 %tobool6, label %if.then, label %if.end, !dbg !9960

if.then:                                          ; preds = %while.body
  br label %Cleanup, !dbg !9961

if.end:                                           ; preds = %while.body
  %12 = load i32, i32* %EndIndex, align 4, !dbg !9962
  %inc = add i32 %12, 1, !dbg !9962
  store i32 %inc, i32* %EndIndex, align 4, !dbg !9962
  %13 = load i32, i32* %EndIndex, align 4, !dbg !9963
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9965
  %rx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 33, !dbg !9966
  %15 = load i32, i32* %rx_buffer_count, align 8, !dbg !9966
  %cmp = icmp eq i32 %13, %15, !dbg !9967
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !9968

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %EndIndex, align 4, !dbg !9969
  br label %if.end8, !dbg !9970

if.end8:                                          ; preds = %if.then7, %if.end
  %16 = load i32, i32* %EndIndex, align 4, !dbg !9971
  %17 = load i32, i32* %StartIndex, align 4, !dbg !9972
  %cmp9 = icmp eq i32 %16, %17, !dbg !9973
  br i1 %cmp9, label %if.then10, label %if.end34, !dbg !9974

if.then10:                                        ; preds = %if.end8
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9975
  %rx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 48, !dbg !9976
  %19 = load i8, i8* %rx_enabled, align 8, !dbg !9976
  %tobool11 = trunc i8 %19 to i1, !dbg !9976
  br i1 %tobool11, label %if.then12, label %if.end33, !dbg !9977

if.then12:                                        ; preds = %if.then10
  br label %do.body, !dbg !9978

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !9979

do.body13:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9980, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9983, metadata !DIExpression()), !dbg !9982
  %cmp14 = icmp eq i64* %__dummy, %__dummy2, !dbg !9982
  %conv = zext i1 %cmp14 to i32, !dbg !9982
  store i32 1, i32* %tmp, align 4, !dbg !9982
  %20 = load i32, i32* %tmp, align 4, !dbg !9982
  br label %do.body15, !dbg !9984

do.body15:                                        ; preds = %do.body13
  br label %do.body16, !dbg !9985

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !9986

do.body17:                                        ; preds = %do.body16
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !9988, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !9992, metadata !DIExpression()), !dbg !9991
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !9991
  %conv21 = zext i1 %cmp20 to i32, !dbg !9991
  store i32 1, i32* %tmp22, align 4, !dbg !9991
  %21 = load i32, i32* %tmp22, align 4, !dbg !9991
  %call = call i64 @arch_local_irq_save() #11, !dbg !9993
  store i64 %call, i64* %flags, align 8, !dbg !9993
  br label %do.end, !dbg !9993

do.end:                                           ; preds = %do.body17
  br label %do.end23, !dbg !9986

do.end23:                                         ; preds = %do.end
  br label %do.body24, !dbg !9985

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9994, !srcloc !9995
  br label %do.body25, !dbg !9994

do.body25:                                        ; preds = %do.body24
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9996
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 17, !dbg !9996
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9997
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !9998
  %rlock.i = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !9998
  br label %do.end27, !dbg !9996

do.end27:                                         ; preds = %do.body25
  br label %do.end28, !dbg !9994

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !9985

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !9984

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !9979

do.end31:                                         ; preds = %do.end30
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !9999
  call void @usc_start_receiver(%struct.mgsl_struct* %25) #11, !dbg !10000
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10001
  %irq_spinlock32 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 17, !dbg !10002
  %27 = load i64, i64* %flags, align 8, !dbg !10003
  store %struct.spinlock* %irq_spinlock32, %struct.spinlock** %lock.addr.i243, align 8
  store i64 %27, i64* %flags.addr.i244, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !10004
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !10004
  store i32 1, i32* %tmp.i245, align 4, !dbg !10004
  %28 = load i32, i32* %tmp.i245, align 4, !dbg !10004
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !10005
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !10005
  store i32 1, i32* %tmp8.i246, align 4, !dbg !10005
  %29 = load i32, i32* %tmp8.i246, align 4, !dbg !10005
  %30 = load i64, i64* %flags.addr.i244, align 8, !dbg !10006
  call void @arch_local_irq_restore(i64 %30) #14, !dbg !10006
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10007, !srcloc !9373
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i243, align 8, !dbg !10008
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !10008
  %rlock.i247 = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !10008
  br label %if.end33, !dbg !10009

if.end33:                                         ; preds = %do.end31, %if.then10
  br label %Cleanup, !dbg !10010

if.end34:                                         ; preds = %if.end8
  br label %while.cond, !dbg !9949, !llvm.loop !10011

while.end:                                        ; preds = %while.cond
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10013
  %rx_buffer_list35 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %33, i32 0, i32 34, !dbg !10014
  %34 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list35, align 8, !dbg !10014
  %35 = load i32, i32* %EndIndex, align 4, !dbg !10015
  %idxprom36 = zext i32 %35 to i64, !dbg !10013
  %arrayidx37 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %34, i64 %idxprom36, !dbg !10013
  %status38 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx37, i32 0, i32 2, !dbg !10016
  %36 = load volatile i16, i16* %status38, align 2, !dbg !10016
  store i16 %36, i16* %status, align 2, !dbg !10017
  %37 = load i16, i16* %status, align 2, !dbg !10018
  %conv39 = zext i16 %37 to i32, !dbg !10018
  %and = and i32 %conv39, 270, !dbg !10020
  %tobool40 = icmp ne i32 %and, 0, !dbg !10020
  br i1 %tobool40, label %if.then41, label %if.else75, !dbg !10021

if.then41:                                        ; preds = %while.end
  %38 = load i16, i16* %status, align 2, !dbg !10022
  %conv42 = zext i16 %38 to i32, !dbg !10022
  %and43 = and i32 %conv42, 256, !dbg !10025
  %tobool44 = icmp ne i32 %and43, 0, !dbg !10025
  br i1 %tobool44, label %if.then45, label %if.else, !dbg !10026

if.then45:                                        ; preds = %if.then41
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10027
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %39, i32 0, i32 4, !dbg !10028
  %rxshort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 15, !dbg !10029
  %40 = load i32, i32* %rxshort, align 4, !dbg !10030
  %inc46 = add i32 %40, 1, !dbg !10030
  store i32 %inc46, i32* %rxshort, align 4, !dbg !10030
  br label %if.end70, !dbg !10027

if.else:                                          ; preds = %if.then41
  %41 = load i16, i16* %status, align 2, !dbg !10031
  %conv47 = zext i16 %41 to i32, !dbg !10031
  %and48 = and i32 %conv47, 4, !dbg !10033
  %tobool49 = icmp ne i32 %and48, 0, !dbg !10033
  br i1 %tobool49, label %if.then50, label %if.else53, !dbg !10034

if.then50:                                        ; preds = %if.else
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10035
  %icount51 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 4, !dbg !10036
  %rxabort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount51, i32 0, i32 17, !dbg !10037
  %43 = load i32, i32* %rxabort, align 4, !dbg !10038
  %inc52 = add i32 %43, 1, !dbg !10038
  store i32 %inc52, i32* %rxabort, align 4, !dbg !10038
  br label %if.end69, !dbg !10035

if.else53:                                        ; preds = %if.else
  %44 = load i16, i16* %status, align 2, !dbg !10039
  %conv54 = zext i16 %44 to i32, !dbg !10039
  %and55 = and i32 %conv54, 2, !dbg !10041
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10041
  br i1 %tobool56, label %if.then57, label %if.else60, !dbg !10042

if.then57:                                        ; preds = %if.else53
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10043
  %icount58 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %45, i32 0, i32 4, !dbg !10044
  %rxover = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount58, i32 0, i32 18, !dbg !10045
  %46 = load i32, i32* %rxover, align 8, !dbg !10046
  %inc59 = add i32 %46, 1, !dbg !10046
  store i32 %inc59, i32* %rxover, align 8, !dbg !10046
  br label %if.end68, !dbg !10043

if.else60:                                        ; preds = %if.else53
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10047
  %icount61 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 4, !dbg !10049
  %rxcrc = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount61, i32 0, i32 19, !dbg !10050
  %48 = load i32, i32* %rxcrc, align 4, !dbg !10051
  %inc62 = add i32 %48, 1, !dbg !10051
  store i32 %inc62, i32* %rxcrc, align 4, !dbg !10051
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10052
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %49, i32 0, i32 70, !dbg !10054
  %crc_type = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 6, !dbg !10055
  %50 = load i16, i16* %crc_type, align 2, !dbg !10055
  %conv63 = zext i16 %50 to i32, !dbg !10052
  %and64 = and i32 %conv63, 32768, !dbg !10056
  %tobool65 = icmp ne i32 %and64, 0, !dbg !10056
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !10057

if.then66:                                        ; preds = %if.else60
  store i8 1, i8* %return_frame, align 1, !dbg !10058
  br label %if.end67, !dbg !10059

if.end67:                                         ; preds = %if.then66, %if.else60
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then57
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then50
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then45
  store i32 0, i32* %framesize, align 4, !dbg !10060
  %51 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10061
  %netdev = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %51, i32 0, i32 91, !dbg !10063
  %52 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10063
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %52, i32 0, i32 24, !dbg !10064
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 4, !dbg !10065
  %53 = load i64, i64* %rx_errors, align 8, !dbg !10066
  %inc71 = add i64 %53, 1, !dbg !10066
  store i64 %inc71, i64* %rx_errors, align 8, !dbg !10066
  %54 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10067
  %netdev72 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %54, i32 0, i32 91, !dbg !10068
  %55 = load %struct.net_device*, %struct.net_device** %netdev72, align 8, !dbg !10068
  %stats73 = getelementptr inbounds %struct.net_device, %struct.net_device* %55, i32 0, i32 24, !dbg !10069
  %rx_frame_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats73, i32 0, i32 13, !dbg !10070
  %56 = load i64, i64* %rx_frame_errors, align 8, !dbg !10071
  %inc74 = add i64 %56, 1, !dbg !10071
  store i64 %inc74, i64* %rx_frame_errors, align 8, !dbg !10071
  br label %if.end76, !dbg !10072

if.else75:                                        ; preds = %while.end
  store i8 1, i8* %return_frame, align 1, !dbg !10073
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.end70
  %57 = load i8, i8* %return_frame, align 1, !dbg !10074
  %tobool77 = trunc i8 %57 to i1, !dbg !10074
  br i1 %tobool77, label %if.then78, label %if.end100, !dbg !10076

if.then78:                                        ; preds = %if.end76
  %58 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10077
  %rx_buffer_list79 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %58, i32 0, i32 34, !dbg !10079
  %59 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list79, align 8, !dbg !10079
  %60 = load i32, i32* %EndIndex, align 4, !dbg !10080
  %idxprom80 = zext i32 %60 to i64, !dbg !10077
  %arrayidx81 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %59, i64 %idxprom80, !dbg !10077
  %rcc = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx81, i32 0, i32 3, !dbg !10081
  %61 = load volatile i16, i16* %rcc, align 8, !dbg !10081
  %conv82 = zext i16 %61 to i32, !dbg !10077
  %sub = sub i32 65535, %conv82, !dbg !10082
  store i32 %sub, i32* %framesize, align 4, !dbg !10083
  %62 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10084
  %params83 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %62, i32 0, i32 70, !dbg !10086
  %crc_type84 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params83, i32 0, i32 6, !dbg !10087
  %63 = load i16, i16* %crc_type84, align 2, !dbg !10087
  %conv85 = zext i16 %63 to i32, !dbg !10084
  %cmp86 = icmp eq i32 %conv85, 1, !dbg !10088
  br i1 %cmp86, label %if.then88, label %if.else90, !dbg !10089

if.then88:                                        ; preds = %if.then78
  %64 = load i32, i32* %framesize, align 4, !dbg !10090
  %sub89 = sub i32 %64, 2, !dbg !10090
  store i32 %sub89, i32* %framesize, align 4, !dbg !10090
  br label %if.end99, !dbg !10091

if.else90:                                        ; preds = %if.then78
  %65 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10092
  %params91 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %65, i32 0, i32 70, !dbg !10094
  %crc_type92 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params91, i32 0, i32 6, !dbg !10095
  %66 = load i16, i16* %crc_type92, align 2, !dbg !10095
  %conv93 = zext i16 %66 to i32, !dbg !10092
  %cmp94 = icmp eq i32 %conv93, 2, !dbg !10096
  br i1 %cmp94, label %if.then96, label %if.end98, !dbg !10097

if.then96:                                        ; preds = %if.else90
  %67 = load i32, i32* %framesize, align 4, !dbg !10098
  %sub97 = sub i32 %67, 4, !dbg !10098
  store i32 %sub97, i32* %framesize, align 4, !dbg !10098
  br label %if.end98, !dbg !10099

if.end98:                                         ; preds = %if.then96, %if.else90
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then88
  br label %if.end100, !dbg !10100

if.end100:                                        ; preds = %if.end99, %if.end76
  %68 = load i32, i32* @debug_level, align 4, !dbg !10101
  %cmp101 = icmp sge i32 %68, 4, !dbg !10103
  br i1 %cmp101, label %if.then103, label %if.end106, !dbg !10104

if.then103:                                       ; preds = %if.end100
  %69 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10105
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %69, i32 0, i32 56, !dbg !10106
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !10105
  %70 = load i16, i16* %status, align 2, !dbg !10107
  %conv104 = zext i16 %70 to i32, !dbg !10107
  %71 = load i32, i32* %framesize, align 4, !dbg !10108
  %call105 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 6400, i8* %arraydecay, i32 %conv104, i32 %71) #12, !dbg !10109
  br label %if.end106, !dbg !10109

if.end106:                                        ; preds = %if.then103, %if.end100
  %72 = load i32, i32* @debug_level, align 4, !dbg !10110
  %cmp107 = icmp sge i32 %72, 1, !dbg !10112
  br i1 %cmp107, label %if.then109, label %if.end116, !dbg !10113

if.then109:                                       ; preds = %if.end106
  %73 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10114
  %74 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10115
  %rx_buffer_list110 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %74, i32 0, i32 34, !dbg !10116
  %75 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list110, align 8, !dbg !10116
  %76 = load i32, i32* %StartIndex, align 4, !dbg !10117
  %idxprom111 = zext i32 %76 to i64, !dbg !10115
  %arrayidx112 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %75, i64 %idxprom111, !dbg !10115
  %virt_addr = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx112, i32 0, i32 6, !dbg !10118
  %77 = load i8*, i8** %virt_addr, align 8, !dbg !10118
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x348, metadata !10119, metadata !DIExpression()), !dbg !10121
  %78 = load i32, i32* %framesize, align 4, !dbg !10121
  store i32 %78, i32* %__UNIQUE_ID___x348, align 4, !dbg !10121
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y349, metadata !10122, metadata !DIExpression()), !dbg !10121
  store i32 4096, i32* %__UNIQUE_ID___y349, align 4, !dbg !10121
  %79 = load i32, i32* %__UNIQUE_ID___x348, align 4, !dbg !10121
  %80 = load i32, i32* %__UNIQUE_ID___y349, align 4, !dbg !10121
  %cmp114 = icmp slt i32 %79, %80, !dbg !10121
  br i1 %cmp114, label %cond.true, label %cond.false, !dbg !10121

cond.true:                                        ; preds = %if.then109
  %81 = load i32, i32* %__UNIQUE_ID___x348, align 4, !dbg !10121
  br label %cond.end, !dbg !10121

cond.false:                                       ; preds = %if.then109
  %82 = load i32, i32* %__UNIQUE_ID___y349, align 4, !dbg !10121
  br label %cond.end, !dbg !10121

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %81, %cond.true ], [ %82, %cond.false ], !dbg !10121
  store i32 %cond, i32* %tmp113, align 4, !dbg !10121
  %83 = load i32, i32* %tmp113, align 4, !dbg !10121
  call void @mgsl_trace_block(%struct.mgsl_struct* %73, i8* %77, i32 %83, i32 0) #11, !dbg !10123
  br label %if.end116, !dbg !10123

if.end116:                                        ; preds = %cond.end, %if.end106
  %84 = load i32, i32* %framesize, align 4, !dbg !10124
  %tobool117 = icmp ne i32 %84, 0, !dbg !10124
  br i1 %tobool117, label %if.then118, label %if.end189, !dbg !10126

if.then118:                                       ; preds = %if.end116
  %85 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10127
  %params119 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %85, i32 0, i32 70, !dbg !10130
  %crc_type120 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params119, i32 0, i32 6, !dbg !10131
  %86 = load i16, i16* %crc_type120, align 2, !dbg !10131
  %conv121 = zext i16 %86 to i32, !dbg !10127
  %and122 = and i32 %conv121, 32768, !dbg !10132
  %tobool123 = icmp ne i32 %and122, 0, !dbg !10132
  br i1 %tobool123, label %land.lhs.true, label %lor.lhs.false, !dbg !10133

land.lhs.true:                                    ; preds = %if.then118
  %87 = load i32, i32* %framesize, align 4, !dbg !10134
  %add = add i32 %87, 1, !dbg !10135
  %88 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10136
  %max_frame_size = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %88, i32 0, i32 21, !dbg !10137
  %89 = load i32, i32* %max_frame_size, align 8, !dbg !10137
  %cmp124 = icmp ugt i32 %add, %89, !dbg !10138
  br i1 %cmp124, label %if.then129, label %lor.lhs.false, !dbg !10139

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then118
  %90 = load i32, i32* %framesize, align 4, !dbg !10140
  %91 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10141
  %max_frame_size126 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %91, i32 0, i32 21, !dbg !10142
  %92 = load i32, i32* %max_frame_size126, align 8, !dbg !10142
  %cmp127 = icmp ugt i32 %90, %92, !dbg !10143
  br i1 %cmp127, label %if.then129, label %if.else132, !dbg !10144

if.then129:                                       ; preds = %lor.lhs.false, %land.lhs.true
  %93 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10145
  %icount130 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %93, i32 0, i32 4, !dbg !10146
  %rxlong = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount130, i32 0, i32 16, !dbg !10147
  %94 = load i32, i32* %rxlong, align 8, !dbg !10148
  %inc131 = add i32 %94, 1, !dbg !10148
  store i32 %inc131, i32* %rxlong, align 8, !dbg !10148
  br label %if.end188, !dbg !10145

if.else132:                                       ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %copy_count, metadata !10149, metadata !DIExpression()), !dbg !10151
  %95 = load i32, i32* %framesize, align 4, !dbg !10152
  store i32 %95, i32* %copy_count, align 4, !dbg !10151
  call void @llvm.dbg.declare(metadata i32* %index, metadata !10153, metadata !DIExpression()), !dbg !10154
  %96 = load i32, i32* %StartIndex, align 4, !dbg !10155
  store i32 %96, i32* %index, align 4, !dbg !10154
  call void @llvm.dbg.declare(metadata i8** %ptmp, metadata !10156, metadata !DIExpression()), !dbg !10157
  %97 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10158
  %intermediate_rxbuffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %97, i32 0, i32 42, !dbg !10159
  %98 = load i8*, i8** %intermediate_rxbuffer, align 8, !dbg !10159
  store i8* %98, i8** %ptmp, align 8, !dbg !10157
  %99 = load i16, i16* %status, align 2, !dbg !10160
  %conv133 = zext i16 %99 to i32, !dbg !10160
  %and134 = and i32 %conv133, 8, !dbg !10162
  %tobool135 = icmp ne i32 %and134, 0, !dbg !10162
  br i1 %tobool135, label %if.end139, label %if.then136, !dbg !10163

if.then136:                                       ; preds = %if.else132
  %100 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10164
  %icount137 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %100, i32 0, i32 4, !dbg !10165
  %rxok = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount137, i32 0, i32 20, !dbg !10166
  %101 = load i32, i32* %rxok, align 8, !dbg !10167
  %inc138 = add i32 %101, 1, !dbg !10167
  store i32 %inc138, i32* %rxok, align 8, !dbg !10167
  br label %if.end139, !dbg !10164

if.end139:                                        ; preds = %if.then136, %if.else132
  br label %while.cond140, !dbg !10168

while.cond140:                                    ; preds = %if.end159, %if.end139
  %102 = load i32, i32* %copy_count, align 4, !dbg !10169
  %tobool141 = icmp ne i32 %102, 0, !dbg !10168
  br i1 %tobool141, label %while.body142, label %while.end160, !dbg !10168

while.body142:                                    ; preds = %while.cond140
  call void @llvm.dbg.declare(metadata i32* %partial_count, metadata !10170, metadata !DIExpression()), !dbg !10172
  %103 = load i32, i32* %copy_count, align 4, !dbg !10173
  %cmp143 = icmp sgt i32 %103, 4096, !dbg !10175
  br i1 %cmp143, label %if.then145, label %if.else146, !dbg !10176

if.then145:                                       ; preds = %while.body142
  store i32 4096, i32* %partial_count, align 4, !dbg !10177
  br label %if.end147, !dbg !10178

if.else146:                                       ; preds = %while.body142
  %104 = load i32, i32* %copy_count, align 4, !dbg !10179
  store i32 %104, i32* %partial_count, align 4, !dbg !10180
  br label %if.end147

if.end147:                                        ; preds = %if.else146, %if.then145
  %105 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10181
  %rx_buffer_list148 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %105, i32 0, i32 34, !dbg !10182
  %106 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list148, align 8, !dbg !10182
  %107 = load i32, i32* %index, align 4, !dbg !10183
  %idxprom149 = sext i32 %107 to i64, !dbg !10181
  %arrayidx150 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %106, i64 %idxprom149, !dbg !10181
  store %struct._DMABUFFERENTRY* %arrayidx150, %struct._DMABUFFERENTRY** %pBufEntry, align 8, !dbg !10184
  %108 = load i8*, i8** %ptmp, align 8, !dbg !10185
  %109 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %pBufEntry, align 8, !dbg !10186
  %virt_addr151 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %109, i32 0, i32 6, !dbg !10187
  %110 = load i8*, i8** %virt_addr151, align 8, !dbg !10187
  %111 = load i32, i32* %partial_count, align 4, !dbg !10188
  %conv152 = sext i32 %111 to i64, !dbg !10188
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %108, i8* align 1 %110, i64 %conv152, i1 false), !dbg !10189
  %112 = load i32, i32* %partial_count, align 4, !dbg !10190
  %113 = load i8*, i8** %ptmp, align 8, !dbg !10191
  %idx.ext = sext i32 %112 to i64, !dbg !10191
  %add.ptr = getelementptr i8, i8* %113, i64 %idx.ext, !dbg !10191
  store i8* %add.ptr, i8** %ptmp, align 8, !dbg !10191
  %114 = load i32, i32* %partial_count, align 4, !dbg !10192
  %115 = load i32, i32* %copy_count, align 4, !dbg !10193
  %sub153 = sub i32 %115, %114, !dbg !10193
  store i32 %sub153, i32* %copy_count, align 4, !dbg !10193
  %116 = load i32, i32* %index, align 4, !dbg !10194
  %inc154 = add i32 %116, 1, !dbg !10194
  store i32 %inc154, i32* %index, align 4, !dbg !10194
  %117 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10196
  %rx_buffer_count155 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %117, i32 0, i32 33, !dbg !10197
  %118 = load i32, i32* %rx_buffer_count155, align 8, !dbg !10197
  %cmp156 = icmp eq i32 %inc154, %118, !dbg !10198
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !10199

if.then158:                                       ; preds = %if.end147
  store i32 0, i32* %index, align 4, !dbg !10200
  br label %if.end159, !dbg !10201

if.end159:                                        ; preds = %if.then158, %if.end147
  br label %while.cond140, !dbg !10168, !llvm.loop !10202

while.end160:                                     ; preds = %while.cond140
  %119 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10204
  %params161 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %119, i32 0, i32 70, !dbg !10206
  %crc_type162 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params161, i32 0, i32 6, !dbg !10207
  %120 = load i16, i16* %crc_type162, align 2, !dbg !10207
  %conv163 = zext i16 %120 to i32, !dbg !10204
  %and164 = and i32 %conv163, 32768, !dbg !10208
  %tobool165 = icmp ne i32 %and164, 0, !dbg !10208
  br i1 %tobool165, label %if.then166, label %if.end181, !dbg !10209

if.then166:                                       ; preds = %while.end160
  %121 = load i32, i32* %framesize, align 4, !dbg !10210
  %inc167 = add i32 %121, 1, !dbg !10210
  store i32 %inc167, i32* %framesize, align 4, !dbg !10210
  %122 = load i16, i16* %status, align 2, !dbg !10212
  %conv168 = zext i16 %122 to i32, !dbg !10212
  %and169 = and i32 %conv168, 8, !dbg !10213
  %tobool170 = icmp ne i32 %and169, 0, !dbg !10212
  %123 = zext i1 %tobool170 to i64, !dbg !10212
  %cond171 = select i1 %tobool170, i32 1, i32 0, !dbg !10212
  %conv172 = trunc i32 %cond171 to i8, !dbg !10214
  %124 = load i8*, i8** %ptmp, align 8, !dbg !10215
  store i8 %conv172, i8* %124, align 1, !dbg !10216
  %125 = load i32, i32* @debug_level, align 4, !dbg !10217
  %cmp173 = icmp sge i32 %125, 1, !dbg !10219
  br i1 %cmp173, label %if.then175, label %if.end180, !dbg !10220

if.then175:                                       ; preds = %if.then166
  %126 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10221
  %device_name176 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %126, i32 0, i32 56, !dbg !10222
  %arraydecay177 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name176, i64 0, i64 0, !dbg !10221
  %127 = load i8*, i8** %ptmp, align 8, !dbg !10223
  %128 = load i8, i8* %127, align 1, !dbg !10224
  %conv178 = zext i8 %128 to i32, !dbg !10224
  %call179 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 6444, i8* %arraydecay177, i32 %conv178) #12, !dbg !10225
  br label %if.end180, !dbg !10225

if.end180:                                        ; preds = %if.then175, %if.then166
  br label %if.end181, !dbg !10226

if.end181:                                        ; preds = %if.end180, %while.end160
  %129 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10227
  %netcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %129, i32 0, i32 89, !dbg !10229
  %130 = load i32, i32* %netcount, align 4, !dbg !10229
  %tobool182 = icmp ne i32 %130, 0, !dbg !10227
  br i1 %tobool182, label %if.then183, label %if.else185, !dbg !10230

if.then183:                                       ; preds = %if.end181
  %131 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10231
  %132 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10232
  %intermediate_rxbuffer184 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %132, i32 0, i32 42, !dbg !10233
  %133 = load i8*, i8** %intermediate_rxbuffer184, align 8, !dbg !10233
  %134 = load i32, i32* %framesize, align 4, !dbg !10234
  call void @hdlcdev_rx(%struct.mgsl_struct* %131, i8* %133, i32 %134) #11, !dbg !10235
  br label %if.end187, !dbg !10235

if.else185:                                       ; preds = %if.end181
  %135 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !10236
  %136 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10237
  %intermediate_rxbuffer186 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %136, i32 0, i32 42, !dbg !10238
  %137 = load i8*, i8** %intermediate_rxbuffer186, align 8, !dbg !10238
  %138 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10239
  %flag_buf = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %138, i32 0, i32 84, !dbg !10240
  %139 = load i8*, i8** %flag_buf, align 8, !dbg !10240
  %140 = load i32, i32* %framesize, align 4, !dbg !10241
  call void @ldisc_receive_buf(%struct.tty_struct* %135, i8* %137, i8* %139, i32 %140) #11, !dbg !10242
  br label %if.end187

if.end187:                                        ; preds = %if.else185, %if.then183
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then129
  br label %if.end189, !dbg !10243

if.end189:                                        ; preds = %if.end188, %if.end116
  %141 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10244
  %142 = load i32, i32* %StartIndex, align 4, !dbg !10245
  %143 = load i32, i32* %EndIndex, align 4, !dbg !10246
  call void @mgsl_free_rx_frame_buffers(%struct.mgsl_struct* %141, i32 %142, i32 %143) #11, !dbg !10247
  store i8 1, i8* %ReturnCode, align 1, !dbg !10248
  br label %Cleanup, !dbg !10249

Cleanup:                                          ; preds = %if.end189, %if.end33, %if.then
  call void @llvm.dbg.label(metadata !10250), !dbg !10251
  %144 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10252
  %rx_enabled190 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %144, i32 0, i32 48, !dbg !10253
  %145 = load i8, i8* %rx_enabled190, align 8, !dbg !10253
  %tobool191 = trunc i8 %145 to i1, !dbg !10253
  br i1 %tobool191, label %land.lhs.true193, label %if.end239, !dbg !10254

land.lhs.true193:                                 ; preds = %Cleanup
  %146 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10255
  %rx_overflow = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %146, i32 0, i32 49, !dbg !10256
  %147 = load i8, i8* %rx_overflow, align 1, !dbg !10256
  %tobool194 = trunc i8 %147 to i1, !dbg !10256
  br i1 %tobool194, label %if.then196, label %if.end239, !dbg !10257

if.then196:                                       ; preds = %land.lhs.true193
  %148 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10258
  %rx_buffer_list197 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %148, i32 0, i32 34, !dbg !10259
  %149 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list197, align 8, !dbg !10259
  %150 = load i32, i32* %EndIndex, align 4, !dbg !10260
  %idxprom198 = zext i32 %150 to i64, !dbg !10258
  %arrayidx199 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %149, i64 %idxprom198, !dbg !10258
  %status200 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx199, i32 0, i32 2, !dbg !10261
  %151 = load volatile i16, i16* %status200, align 2, !dbg !10261
  %tobool201 = icmp ne i16 %151, 0, !dbg !10258
  br i1 %tobool201, label %if.end238, label %land.lhs.true202, !dbg !10262

land.lhs.true202:                                 ; preds = %if.then196
  %152 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10263
  %rx_buffer_list203 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %152, i32 0, i32 34, !dbg !10264
  %153 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list203, align 8, !dbg !10264
  %154 = load i32, i32* %EndIndex, align 4, !dbg !10265
  %idxprom204 = zext i32 %154 to i64, !dbg !10263
  %arrayidx205 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %153, i64 %idxprom204, !dbg !10263
  %count206 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx205, i32 0, i32 1, !dbg !10266
  %155 = load volatile i16, i16* %count206, align 4, !dbg !10266
  %conv207 = zext i16 %155 to i32, !dbg !10263
  %tobool208 = icmp ne i32 %conv207, 0, !dbg !10263
  br i1 %tobool208, label %if.then209, label %if.end238, !dbg !10267

if.then209:                                       ; preds = %land.lhs.true202
  br label %do.body210, !dbg !10268

do.body210:                                       ; preds = %if.then209
  br label %do.body211, !dbg !10269

do.body211:                                       ; preds = %do.body210
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !10270, metadata !DIExpression()), !dbg !10272
  call void @llvm.dbg.declare(metadata i64* %__dummy2213, metadata !10273, metadata !DIExpression()), !dbg !10272
  %cmp214 = icmp eq i64* %__dummy212, %__dummy2213, !dbg !10272
  %conv215 = zext i1 %cmp214 to i32, !dbg !10272
  store i32 1, i32* %tmp216, align 4, !dbg !10272
  %156 = load i32, i32* %tmp216, align 4, !dbg !10272
  br label %do.body217, !dbg !10274

do.body217:                                       ; preds = %do.body211
  br label %do.body218, !dbg !10275

do.body218:                                       ; preds = %do.body217
  br label %do.body219, !dbg !10276

do.body219:                                       ; preds = %do.body218
  call void @llvm.dbg.declare(metadata i64* %__dummy220, metadata !10278, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.declare(metadata i64* %__dummy2221, metadata !10282, metadata !DIExpression()), !dbg !10281
  %cmp222 = icmp eq i64* %__dummy220, %__dummy2221, !dbg !10281
  %conv223 = zext i1 %cmp222 to i32, !dbg !10281
  store i32 1, i32* %tmp224, align 4, !dbg !10281
  %157 = load i32, i32* %tmp224, align 4, !dbg !10281
  %call225 = call i64 @arch_local_irq_save() #11, !dbg !10283
  store i64 %call225, i64* %flags, align 8, !dbg !10283
  br label %do.end226, !dbg !10283

do.end226:                                        ; preds = %do.body219
  br label %do.end227, !dbg !10276

do.end227:                                        ; preds = %do.end226
  br label %do.body228, !dbg !10275

do.body228:                                       ; preds = %do.end227
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10284, !srcloc !10285
  br label %do.body229, !dbg !10284

do.body229:                                       ; preds = %do.body228
  %158 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10286
  %irq_spinlock230 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %158, i32 0, i32 17, !dbg !10286
  store %struct.spinlock* %irq_spinlock230, %struct.spinlock** %lock.addr.i248, align 8
  %159 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i248, align 8, !dbg !10287
  %160 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %159, i32 0, i32 0, !dbg !10288
  %rlock.i249 = bitcast %union.anon.1* %160 to %struct.raw_spinlock*, !dbg !10288
  br label %do.end232, !dbg !10286

do.end232:                                        ; preds = %do.body229
  br label %do.end233, !dbg !10284

do.end233:                                        ; preds = %do.end232
  br label %do.end234, !dbg !10275

do.end234:                                        ; preds = %do.end233
  br label %do.end235, !dbg !10274

do.end235:                                        ; preds = %do.end234
  br label %do.end236, !dbg !10269

do.end236:                                        ; preds = %do.end235
  %161 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10289
  call void @usc_start_receiver(%struct.mgsl_struct* %161) #11, !dbg !10290
  %162 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10291
  %irq_spinlock237 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %162, i32 0, i32 17, !dbg !10292
  %163 = load i64, i64* %flags, align 8, !dbg !10293
  store %struct.spinlock* %irq_spinlock237, %struct.spinlock** %lock.addr.i241, align 8
  store i64 %163, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !10294
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !10294
  store i32 1, i32* %tmp.i, align 4, !dbg !10294
  %164 = load i32, i32* %tmp.i, align 4, !dbg !10294
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !10295
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !10295
  store i32 1, i32* %tmp8.i, align 4, !dbg !10295
  %165 = load i32, i32* %tmp8.i, align 4, !dbg !10295
  %166 = load i64, i64* %flags.addr.i, align 8, !dbg !10296
  call void @arch_local_irq_restore(i64 %166) #14, !dbg !10296
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10297, !srcloc !9373
  %167 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i241, align 8, !dbg !10298
  %168 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %167, i32 0, i32 0, !dbg !10298
  %rlock.i242 = bitcast %union.anon.1* %168 to %struct.raw_spinlock*, !dbg !10298
  br label %if.end238, !dbg !10299

if.end238:                                        ; preds = %do.end236, %land.lhs.true202, %if.then196
  br label %if.end239, !dbg !10300

if.end239:                                        ; preds = %if.end238, %land.lhs.true193, %Cleanup
  %169 = load i8, i8* %ReturnCode, align 1, !dbg !10301
  %tobool240 = trunc i8 %169 to i1, !dbg !10301
  ret i1 %tobool240, !dbg !10302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mgsl_get_raw_rx_frame(%struct.mgsl_struct* %info) #1 !dbg !10303 {
entry:
  %lock.addr.i142 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i142, metadata !9306, metadata !DIExpression()), !dbg !10304
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !10310
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !10311
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %CurrentIndex = alloca i32, align 4
  %NextIndex = alloca i32, align 4
  %status = alloca i16, align 2
  %pBufEntry = alloca %struct._DMABUFFERENTRY*, align 8
  %framesize = alloca i32, align 4
  %ReturnCode = alloca i8, align 1
  %flags = alloca i64, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %__UNIQUE_ID___x350 = alloca i32, align 4
  %__UNIQUE_ID___y351 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp119 = alloca i32, align 4
  %__dummy123 = alloca i64, align 8
  %__dummy2124 = alloca i64, align 8
  %tmp127 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !10318, metadata !DIExpression()), !dbg !10319
  call void @llvm.dbg.declare(metadata i32* %CurrentIndex, metadata !10320, metadata !DIExpression()), !dbg !10321
  call void @llvm.dbg.declare(metadata i32* %NextIndex, metadata !10322, metadata !DIExpression()), !dbg !10323
  call void @llvm.dbg.declare(metadata i16* %status, metadata !10324, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.declare(metadata %struct._DMABUFFERENTRY** %pBufEntry, metadata !10326, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.declare(metadata i32* %framesize, metadata !10328, metadata !DIExpression()), !dbg !10329
  store i32 0, i32* %framesize, align 4, !dbg !10329
  call void @llvm.dbg.declare(metadata i8* %ReturnCode, metadata !10330, metadata !DIExpression()), !dbg !10331
  store i8 0, i8* %ReturnCode, align 1, !dbg !10331
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10332, metadata !DIExpression()), !dbg !10333
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !10334, metadata !DIExpression()), !dbg !10335
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10336
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 1, !dbg !10337
  %tty1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !10338
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty1, align 8, !dbg !10338
  store %struct.tty_struct* %1, %struct.tty_struct** %tty, align 8, !dbg !10335
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10339
  %current_rx_buffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 35, !dbg !10340
  %3 = load i32, i32* %current_rx_buffer, align 8, !dbg !10340
  store i32 %3, i32* %NextIndex, align 4, !dbg !10341
  store i32 %3, i32* %CurrentIndex, align 4, !dbg !10342
  %4 = load i32, i32* %NextIndex, align 4, !dbg !10343
  %inc = add i32 %4, 1, !dbg !10343
  store i32 %inc, i32* %NextIndex, align 4, !dbg !10343
  %5 = load i32, i32* %NextIndex, align 4, !dbg !10344
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10346
  %rx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 33, !dbg !10347
  %7 = load i32, i32* %rx_buffer_count, align 8, !dbg !10347
  %cmp = icmp eq i32 %5, %7, !dbg !10348
  br i1 %cmp, label %if.then, label %if.end, !dbg !10349

if.then:                                          ; preds = %entry
  store i32 0, i32* %NextIndex, align 4, !dbg !10350
  br label %if.end, !dbg !10351

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10352
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 34, !dbg !10354
  %9 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !10354
  %10 = load i32, i32* %CurrentIndex, align 4, !dbg !10355
  %idxprom = zext i32 %10 to i64, !dbg !10352
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %9, i64 %idxprom, !dbg !10352
  %status2 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 2, !dbg !10356
  %11 = load volatile i16, i16* %status2, align 2, !dbg !10356
  %conv = zext i16 %11 to i32, !dbg !10352
  %cmp3 = icmp ne i32 %conv, 0, !dbg !10357
  br i1 %cmp3, label %if.then18, label %lor.lhs.false, !dbg !10358

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10359
  %rx_buffer_list5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 34, !dbg !10360
  %13 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list5, align 8, !dbg !10360
  %14 = load i32, i32* %CurrentIndex, align 4, !dbg !10361
  %idxprom6 = zext i32 %14 to i64, !dbg !10359
  %arrayidx7 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %13, i64 %idxprom6, !dbg !10359
  %count = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx7, i32 0, i32 1, !dbg !10362
  %15 = load volatile i16, i16* %count, align 4, !dbg !10362
  %conv8 = zext i16 %15 to i32, !dbg !10359
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !10363
  br i1 %cmp9, label %land.lhs.true, label %if.end96, !dbg !10364

land.lhs.true:                                    ; preds = %lor.lhs.false
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10365
  %rx_buffer_list11 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 34, !dbg !10366
  %17 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list11, align 8, !dbg !10366
  %18 = load i32, i32* %NextIndex, align 4, !dbg !10367
  %idxprom12 = zext i32 %18 to i64, !dbg !10365
  %arrayidx13 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %17, i64 %idxprom12, !dbg !10365
  %count14 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx13, i32 0, i32 1, !dbg !10368
  %19 = load volatile i16, i16* %count14, align 4, !dbg !10368
  %conv15 = zext i16 %19 to i32, !dbg !10365
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !10369
  br i1 %cmp16, label %if.then18, label %if.end96, !dbg !10370

if.then18:                                        ; preds = %land.lhs.true, %if.end
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10371
  %rx_buffer_list19 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 34, !dbg !10373
  %21 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list19, align 8, !dbg !10373
  %22 = load i32, i32* %CurrentIndex, align 4, !dbg !10374
  %idxprom20 = zext i32 %22 to i64, !dbg !10371
  %arrayidx21 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %21, i64 %idxprom20, !dbg !10371
  %status22 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx21, i32 0, i32 2, !dbg !10375
  %23 = load volatile i16, i16* %status22, align 2, !dbg !10375
  store i16 %23, i16* %status, align 2, !dbg !10376
  %24 = load i16, i16* %status, align 2, !dbg !10377
  %conv23 = zext i16 %24 to i32, !dbg !10377
  %and = and i32 %conv23, 270, !dbg !10379
  %tobool = icmp ne i32 %and, 0, !dbg !10379
  br i1 %tobool, label %if.then24, label %if.else49, !dbg !10380

if.then24:                                        ; preds = %if.then18
  %25 = load i16, i16* %status, align 2, !dbg !10381
  %conv25 = zext i16 %25 to i32, !dbg !10381
  %and26 = and i32 %conv25, 256, !dbg !10384
  %tobool27 = icmp ne i32 %and26, 0, !dbg !10384
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !10385

if.then28:                                        ; preds = %if.then24
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10386
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 4, !dbg !10387
  %rxshort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 15, !dbg !10388
  %27 = load i32, i32* %rxshort, align 4, !dbg !10389
  %inc29 = add i32 %27, 1, !dbg !10389
  store i32 %inc29, i32* %rxshort, align 4, !dbg !10389
  br label %if.end48, !dbg !10386

if.else:                                          ; preds = %if.then24
  %28 = load i16, i16* %status, align 2, !dbg !10390
  %conv30 = zext i16 %28 to i32, !dbg !10390
  %and31 = and i32 %conv30, 4, !dbg !10392
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10392
  br i1 %tobool32, label %if.then33, label %if.else36, !dbg !10393

if.then33:                                        ; preds = %if.else
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10394
  %icount34 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 4, !dbg !10395
  %rxabort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount34, i32 0, i32 17, !dbg !10396
  %30 = load i32, i32* %rxabort, align 4, !dbg !10397
  %inc35 = add i32 %30, 1, !dbg !10397
  store i32 %inc35, i32* %rxabort, align 4, !dbg !10397
  br label %if.end47, !dbg !10394

if.else36:                                        ; preds = %if.else
  %31 = load i16, i16* %status, align 2, !dbg !10398
  %conv37 = zext i16 %31 to i32, !dbg !10398
  %and38 = and i32 %conv37, 2, !dbg !10400
  %tobool39 = icmp ne i32 %and38, 0, !dbg !10400
  br i1 %tobool39, label %if.then40, label %if.else43, !dbg !10401

if.then40:                                        ; preds = %if.else36
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10402
  %icount41 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 4, !dbg !10403
  %rxover = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount41, i32 0, i32 18, !dbg !10404
  %33 = load i32, i32* %rxover, align 8, !dbg !10405
  %inc42 = add i32 %33, 1, !dbg !10405
  store i32 %inc42, i32* %rxover, align 8, !dbg !10405
  br label %if.end46, !dbg !10402

if.else43:                                        ; preds = %if.else36
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10406
  %icount44 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 4, !dbg !10407
  %rxcrc = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount44, i32 0, i32 19, !dbg !10408
  %35 = load i32, i32* %rxcrc, align 4, !dbg !10409
  %inc45 = add i32 %35, 1, !dbg !10409
  store i32 %inc45, i32* %rxcrc, align 4, !dbg !10409
  br label %if.end46

if.end46:                                         ; preds = %if.else43, %if.then40
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then33
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then28
  store i32 0, i32* %framesize, align 4, !dbg !10410
  br label %if.end66, !dbg !10411

if.else49:                                        ; preds = %if.then18
  %36 = load i16, i16* %status, align 2, !dbg !10412
  %tobool50 = icmp ne i16 %36, 0, !dbg !10412
  br i1 %tobool50, label %if.then51, label %if.else64, !dbg !10415

if.then51:                                        ; preds = %if.else49
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10416
  %rx_buffer_list52 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 34, !dbg !10419
  %38 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list52, align 8, !dbg !10419
  %39 = load i32, i32* %CurrentIndex, align 4, !dbg !10420
  %idxprom53 = zext i32 %39 to i64, !dbg !10416
  %arrayidx54 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %38, i64 %idxprom53, !dbg !10416
  %rcc = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx54, i32 0, i32 3, !dbg !10421
  %40 = load volatile i16, i16* %rcc, align 8, !dbg !10421
  %tobool55 = icmp ne i16 %40, 0, !dbg !10416
  br i1 %tobool55, label %if.then56, label %if.else62, !dbg !10422

if.then56:                                        ; preds = %if.then51
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10423
  %rx_buffer_list57 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %41, i32 0, i32 34, !dbg !10424
  %42 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list57, align 8, !dbg !10424
  %43 = load i32, i32* %CurrentIndex, align 4, !dbg !10425
  %idxprom58 = zext i32 %43 to i64, !dbg !10423
  %arrayidx59 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %42, i64 %idxprom58, !dbg !10423
  %rcc60 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx59, i32 0, i32 3, !dbg !10426
  %44 = load volatile i16, i16* %rcc60, align 8, !dbg !10426
  %conv61 = zext i16 %44 to i32, !dbg !10423
  %sub = sub i32 65535, %conv61, !dbg !10427
  store i32 %sub, i32* %framesize, align 4, !dbg !10428
  br label %if.end63, !dbg !10429

if.else62:                                        ; preds = %if.then51
  store i32 4096, i32* %framesize, align 4, !dbg !10430
  br label %if.end63

if.end63:                                         ; preds = %if.else62, %if.then56
  br label %if.end65, !dbg !10431

if.else64:                                        ; preds = %if.else49
  store i32 4096, i32* %framesize, align 4, !dbg !10432
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.end63
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end48
  %45 = load i32, i32* %framesize, align 4, !dbg !10433
  %cmp67 = icmp ugt i32 %45, 4096, !dbg !10435
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !10436

if.then69:                                        ; preds = %if.end66
  %46 = load i32, i32* %framesize, align 4, !dbg !10437
  %rem = urem i32 %46, 4096, !dbg !10439
  store i32 %rem, i32* %framesize, align 4, !dbg !10440
  br label %if.end70, !dbg !10441

if.end70:                                         ; preds = %if.then69, %if.end66
  %47 = load i32, i32* @debug_level, align 4, !dbg !10442
  %cmp71 = icmp sge i32 %47, 4, !dbg !10444
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !10445

if.then73:                                        ; preds = %if.end70
  %48 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10446
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %48, i32 0, i32 56, !dbg !10447
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !10446
  %49 = load i16, i16* %status, align 2, !dbg !10448
  %conv74 = zext i16 %49 to i32, !dbg !10448
  %50 = load i32, i32* %framesize, align 4, !dbg !10449
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 6611, i8* %arraydecay, i32 %conv74, i32 %50) #12, !dbg !10450
  br label %if.end75, !dbg !10450

if.end75:                                         ; preds = %if.then73, %if.end70
  %51 = load i32, i32* @debug_level, align 4, !dbg !10451
  %cmp76 = icmp sge i32 %51, 1, !dbg !10453
  br i1 %cmp76, label %if.then78, label %if.end84, !dbg !10454

if.then78:                                        ; preds = %if.end75
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10455
  %53 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10456
  %rx_buffer_list79 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %53, i32 0, i32 34, !dbg !10457
  %54 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list79, align 8, !dbg !10457
  %55 = load i32, i32* %CurrentIndex, align 4, !dbg !10458
  %idxprom80 = zext i32 %55 to i64, !dbg !10456
  %arrayidx81 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %54, i64 %idxprom80, !dbg !10456
  %virt_addr = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx81, i32 0, i32 6, !dbg !10459
  %56 = load i8*, i8** %virt_addr, align 8, !dbg !10459
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x350, metadata !10460, metadata !DIExpression()), !dbg !10462
  %57 = load i32, i32* %framesize, align 4, !dbg !10462
  store i32 %57, i32* %__UNIQUE_ID___x350, align 4, !dbg !10462
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y351, metadata !10463, metadata !DIExpression()), !dbg !10462
  store i32 4096, i32* %__UNIQUE_ID___y351, align 4, !dbg !10462
  %58 = load i32, i32* %__UNIQUE_ID___x350, align 4, !dbg !10462
  %59 = load i32, i32* %__UNIQUE_ID___y351, align 4, !dbg !10462
  %cmp82 = icmp slt i32 %58, %59, !dbg !10462
  br i1 %cmp82, label %cond.true, label %cond.false, !dbg !10462

cond.true:                                        ; preds = %if.then78
  %60 = load i32, i32* %__UNIQUE_ID___x350, align 4, !dbg !10462
  br label %cond.end, !dbg !10462

cond.false:                                       ; preds = %if.then78
  %61 = load i32, i32* %__UNIQUE_ID___y351, align 4, !dbg !10462
  br label %cond.end, !dbg !10462

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %60, %cond.true ], [ %61, %cond.false ], !dbg !10462
  store i32 %cond, i32* %tmp, align 4, !dbg !10462
  %62 = load i32, i32* %tmp, align 4, !dbg !10462
  call void @mgsl_trace_block(%struct.mgsl_struct* %52, i8* %56, i32 %62, i32 0) #11, !dbg !10464
  br label %if.end84, !dbg !10464

if.end84:                                         ; preds = %cond.end, %if.end75
  %63 = load i32, i32* %framesize, align 4, !dbg !10465
  %tobool85 = icmp ne i32 %63, 0, !dbg !10465
  br i1 %tobool85, label %if.then86, label %if.end95, !dbg !10467

if.then86:                                        ; preds = %if.end84
  %64 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10468
  %rx_buffer_list87 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %64, i32 0, i32 34, !dbg !10470
  %65 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list87, align 8, !dbg !10470
  %66 = load i32, i32* %CurrentIndex, align 4, !dbg !10471
  %idxprom88 = zext i32 %66 to i64, !dbg !10468
  %arrayidx89 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %65, i64 %idxprom88, !dbg !10468
  store %struct._DMABUFFERENTRY* %arrayidx89, %struct._DMABUFFERENTRY** %pBufEntry, align 8, !dbg !10472
  %67 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10473
  %intermediate_rxbuffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %67, i32 0, i32 42, !dbg !10474
  %68 = load i8*, i8** %intermediate_rxbuffer, align 8, !dbg !10474
  %69 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %pBufEntry, align 8, !dbg !10475
  %virt_addr90 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %69, i32 0, i32 6, !dbg !10476
  %70 = load i8*, i8** %virt_addr90, align 8, !dbg !10476
  %71 = load i32, i32* %framesize, align 4, !dbg !10477
  %conv91 = zext i32 %71 to i64, !dbg !10477
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %68, i8* align 1 %70, i64 %conv91, i1 false), !dbg !10478
  %72 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10479
  %icount92 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %72, i32 0, i32 4, !dbg !10480
  %rxok = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount92, i32 0, i32 20, !dbg !10481
  %73 = load i32, i32* %rxok, align 8, !dbg !10482
  %inc93 = add i32 %73, 1, !dbg !10482
  store i32 %inc93, i32* %rxok, align 8, !dbg !10482
  %74 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !10483
  %75 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10484
  %intermediate_rxbuffer94 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %75, i32 0, i32 42, !dbg !10485
  %76 = load i8*, i8** %intermediate_rxbuffer94, align 8, !dbg !10485
  %77 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10486
  %flag_buf = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %77, i32 0, i32 84, !dbg !10487
  %78 = load i8*, i8** %flag_buf, align 8, !dbg !10487
  %79 = load i32, i32* %framesize, align 4, !dbg !10488
  call void @ldisc_receive_buf(%struct.tty_struct* %74, i8* %76, i8* %78, i32 %79) #11, !dbg !10489
  br label %if.end95, !dbg !10490

if.end95:                                         ; preds = %if.then86, %if.end84
  %80 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10491
  %81 = load i32, i32* %CurrentIndex, align 4, !dbg !10492
  %82 = load i32, i32* %CurrentIndex, align 4, !dbg !10493
  call void @mgsl_free_rx_frame_buffers(%struct.mgsl_struct* %80, i32 %81, i32 %82) #11, !dbg !10494
  store i8 1, i8* %ReturnCode, align 1, !dbg !10495
  br label %if.end96, !dbg !10496

if.end96:                                         ; preds = %if.end95, %land.lhs.true, %lor.lhs.false
  %83 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10497
  %rx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %83, i32 0, i32 48, !dbg !10498
  %84 = load i8, i8* %rx_enabled, align 8, !dbg !10498
  %tobool97 = trunc i8 %84 to i1, !dbg !10498
  br i1 %tobool97, label %land.lhs.true99, label %if.end140, !dbg !10499

land.lhs.true99:                                  ; preds = %if.end96
  %85 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10500
  %rx_overflow = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %85, i32 0, i32 49, !dbg !10501
  %86 = load i8, i8* %rx_overflow, align 1, !dbg !10501
  %tobool100 = trunc i8 %86 to i1, !dbg !10501
  br i1 %tobool100, label %if.then102, label %if.end140, !dbg !10502

if.then102:                                       ; preds = %land.lhs.true99
  %87 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10503
  %rx_buffer_list103 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %87, i32 0, i32 34, !dbg !10504
  %88 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list103, align 8, !dbg !10504
  %89 = load i32, i32* %CurrentIndex, align 4, !dbg !10505
  %idxprom104 = zext i32 %89 to i64, !dbg !10503
  %arrayidx105 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %88, i64 %idxprom104, !dbg !10503
  %status106 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx105, i32 0, i32 2, !dbg !10506
  %90 = load volatile i16, i16* %status106, align 2, !dbg !10506
  %tobool107 = icmp ne i16 %90, 0, !dbg !10503
  br i1 %tobool107, label %if.end139, label %land.lhs.true108, !dbg !10507

land.lhs.true108:                                 ; preds = %if.then102
  %91 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10508
  %rx_buffer_list109 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %91, i32 0, i32 34, !dbg !10509
  %92 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list109, align 8, !dbg !10509
  %93 = load i32, i32* %CurrentIndex, align 4, !dbg !10510
  %idxprom110 = zext i32 %93 to i64, !dbg !10508
  %arrayidx111 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %92, i64 %idxprom110, !dbg !10508
  %count112 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx111, i32 0, i32 1, !dbg !10511
  %94 = load volatile i16, i16* %count112, align 4, !dbg !10511
  %conv113 = zext i16 %94 to i32, !dbg !10508
  %tobool114 = icmp ne i32 %conv113, 0, !dbg !10508
  br i1 %tobool114, label %if.then115, label %if.end139, !dbg !10512

if.then115:                                       ; preds = %land.lhs.true108
  br label %do.body, !dbg !10513

do.body:                                          ; preds = %if.then115
  br label %do.body116, !dbg !10514

do.body116:                                       ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10515, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10518, metadata !DIExpression()), !dbg !10517
  %cmp117 = icmp eq i64* %__dummy, %__dummy2, !dbg !10517
  %conv118 = zext i1 %cmp117 to i32, !dbg !10517
  store i32 1, i32* %tmp119, align 4, !dbg !10517
  %95 = load i32, i32* %tmp119, align 4, !dbg !10517
  br label %do.body120, !dbg !10519

do.body120:                                       ; preds = %do.body116
  br label %do.body121, !dbg !10520

do.body121:                                       ; preds = %do.body120
  br label %do.body122, !dbg !10521

do.body122:                                       ; preds = %do.body121
  call void @llvm.dbg.declare(metadata i64* %__dummy123, metadata !10523, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.declare(metadata i64* %__dummy2124, metadata !10527, metadata !DIExpression()), !dbg !10526
  %cmp125 = icmp eq i64* %__dummy123, %__dummy2124, !dbg !10526
  %conv126 = zext i1 %cmp125 to i32, !dbg !10526
  store i32 1, i32* %tmp127, align 4, !dbg !10526
  %96 = load i32, i32* %tmp127, align 4, !dbg !10526
  %call128 = call i64 @arch_local_irq_save() #11, !dbg !10528
  store i64 %call128, i64* %flags, align 8, !dbg !10528
  br label %do.end, !dbg !10528

do.end:                                           ; preds = %do.body122
  br label %do.end129, !dbg !10521

do.end129:                                        ; preds = %do.end
  br label %do.body130, !dbg !10520

do.body130:                                       ; preds = %do.end129
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10529, !srcloc !10530
  br label %do.body131, !dbg !10529

do.body131:                                       ; preds = %do.body130
  %97 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10531
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %97, i32 0, i32 17, !dbg !10531
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %98 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10532
  %99 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %98, i32 0, i32 0, !dbg !10533
  %rlock.i = bitcast %union.anon.1* %99 to %struct.raw_spinlock*, !dbg !10533
  br label %do.end133, !dbg !10531

do.end133:                                        ; preds = %do.body131
  br label %do.end134, !dbg !10529

do.end134:                                        ; preds = %do.end133
  br label %do.end135, !dbg !10520

do.end135:                                        ; preds = %do.end134
  br label %do.end136, !dbg !10519

do.end136:                                        ; preds = %do.end135
  br label %do.end137, !dbg !10514

do.end137:                                        ; preds = %do.end136
  %100 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10534
  call void @usc_start_receiver(%struct.mgsl_struct* %100) #11, !dbg !10535
  %101 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10536
  %irq_spinlock138 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %101, i32 0, i32 17, !dbg !10537
  %102 = load i64, i64* %flags, align 8, !dbg !10538
  store %struct.spinlock* %irq_spinlock138, %struct.spinlock** %lock.addr.i142, align 8
  store i64 %102, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !10539
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !10539
  store i32 1, i32* %tmp.i, align 4, !dbg !10539
  %103 = load i32, i32* %tmp.i, align 4, !dbg !10539
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !10540
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !10540
  store i32 1, i32* %tmp8.i, align 4, !dbg !10540
  %104 = load i32, i32* %tmp8.i, align 4, !dbg !10540
  %105 = load i64, i64* %flags.addr.i, align 8, !dbg !10541
  call void @arch_local_irq_restore(i64 %105) #14, !dbg !10541
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10542, !srcloc !9373
  %106 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i142, align 8, !dbg !10543
  %107 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %106, i32 0, i32 0, !dbg !10543
  %rlock.i143 = bitcast %union.anon.1* %107 to %struct.raw_spinlock*, !dbg !10543
  br label %if.end139, !dbg !10544

if.end139:                                        ; preds = %do.end137, %land.lhs.true108, %if.then102
  br label %if.end140, !dbg !10545

if.end140:                                        ; preds = %if.end139, %land.lhs.true99, %if.end96
  %108 = load i8, i8* %ReturnCode, align 1, !dbg !10546
  %tobool141 = trunc i8 %108 to i1, !dbg !10546
  ret i1 %tobool141, !dbg !10547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_start_receiver(%struct.mgsl_struct* %info) #1 !dbg !10548 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %phys_addr = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !10549, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.declare(metadata i32* %phys_addr, metadata !10551, metadata !DIExpression()), !dbg !10552
  %0 = load i32, i32* @debug_level, align 4, !dbg !10553
  %cmp = icmp sge i32 %0, 5, !dbg !10555
  br i1 %cmp, label %if.then, label %if.end, !dbg !10556

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10557
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !10558
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !10557
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 5318, i8* %arraydecay) #12, !dbg !10559
  br label %if.end, !dbg !10559

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10560
  call void @mgsl_reset_rx_dma_buffers(%struct.mgsl_struct* %2) #11, !dbg !10561
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10562
  call void @usc_stop_receiver(%struct.mgsl_struct* %3) #11, !dbg !10563
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10564
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10565
  %call1 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %5, i16 zeroext 4) #11, !dbg !10566
  %conv = zext i16 %call1 to i32, !dbg !10566
  %or = or i32 %conv, 8192, !dbg !10567
  %conv2 = trunc i32 %or to i16, !dbg !10568
  call void @usc_OutReg(%struct.mgsl_struct* %4, i16 zeroext 4, i16 zeroext %conv2) #11, !dbg !10569
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10570
  call void @usc_RTCmd(%struct.mgsl_struct* %6, i16 zeroext 18432) #11, !dbg !10571
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10572
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 70, !dbg !10574
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !10575
  %8 = load i64, i64* %mode, align 8, !dbg !10575
  %cmp3 = icmp eq i64 %8, 2, !dbg !10576
  br i1 %cmp3, label %if.then9, label %lor.lhs.false, !dbg !10577

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10578
  %params5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 70, !dbg !10579
  %mode6 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params5, i32 0, i32 0, !dbg !10580
  %10 = load i64, i64* %mode6, align 8, !dbg !10580
  %cmp7 = icmp eq i64 %10, 6, !dbg !10581
  br i1 %cmp7, label %if.then9, label %if.else35, !dbg !10582

if.then9:                                         ; preds = %lor.lhs.false, %if.end
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10583
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 34, !dbg !10585
  %12 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !10585
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %12, i64 0, !dbg !10583
  %phys_entry = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 7, !dbg !10586
  %13 = load i32, i32* %phys_entry, align 8, !dbg !10586
  store i32 %13, i32* %phys_addr, align 4, !dbg !10587
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10588
  %15 = load i32, i32* %phys_addr, align 4, !dbg !10589
  %conv10 = trunc i32 %15 to i16, !dbg !10590
  call void @usc_OutDmaReg(%struct.mgsl_struct* %14, i16 zeroext 188, i16 zeroext %conv10) #11, !dbg !10591
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10592
  %17 = load i32, i32* %phys_addr, align 4, !dbg !10593
  %shr = lshr i32 %17, 16, !dbg !10594
  %conv11 = trunc i32 %shr to i16, !dbg !10595
  call void @usc_OutDmaReg(%struct.mgsl_struct* %16, i16 zeroext 190, i16 zeroext %conv11) #11, !dbg !10596
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10597
  call void @usc_OutReg(%struct.mgsl_struct* %18, i16 zeroext 36, i16 zeroext 502) #11, !dbg !10597
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10598
  call void @usc_OutReg(%struct.mgsl_struct* %19, i16 zeroext 26, i16 zeroext 112) #11, !dbg !10598
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10599
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10599
  %call12 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %21, i16 zeroext 24) #11, !dbg !10599
  %conv13 = zext i16 %call12 to i32, !dbg !10599
  %and = and i32 %conv13, 65280, !dbg !10599
  %add = add i32 %and, 192, !dbg !10599
  %add14 = add i32 %add, 32, !dbg !10599
  %conv15 = trunc i32 %add14 to i16, !dbg !10599
  call void @usc_OutReg(%struct.mgsl_struct* %20, i16 zeroext 24, i16 zeroext %conv15) #11, !dbg !10599
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10600
  call void @usc_OutDmaReg(%struct.mgsl_struct* %22, i16 zeroext 158, i16 zeroext 12) #11, !dbg !10601
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10602
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10603
  %call16 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %24, i16 zeroext 24) #11, !dbg !10604
  %conv17 = zext i16 %call16 to i32, !dbg !10604
  %or18 = or i32 %conv17, 2, !dbg !10605
  %conv19 = trunc i32 %or18 to i16, !dbg !10606
  call void @usc_OutDmaReg(%struct.mgsl_struct* %23, i16 zeroext 24, i16 zeroext %conv19) #11, !dbg !10607
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10608
  call void @usc_DmaCmd(%struct.mgsl_struct* %25, i16 zeroext 29184) #11, !dbg !10609
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10610
  %params20 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 70, !dbg !10612
  %flags = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params20, i32 0, i32 2, !dbg !10613
  %27 = load i16, i16* %flags, align 2, !dbg !10613
  %conv21 = zext i16 %27 to i32, !dbg !10610
  %and22 = and i32 %conv21, 64, !dbg !10614
  %tobool = icmp ne i32 %and22, 0, !dbg !10614
  br i1 %tobool, label %if.then23, label %if.else, !dbg !10615

if.then23:                                        ; preds = %if.then9
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10616
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10616
  %call24 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %29, i16 zeroext 34) #11, !dbg !10616
  %conv25 = zext i16 %call24 to i32, !dbg !10616
  %and26 = and i32 %conv25, 65532, !dbg !10616
  %or27 = or i32 %and26, 3, !dbg !10616
  %conv28 = trunc i32 %or27 to i16, !dbg !10616
  call void @usc_OutReg(%struct.mgsl_struct* %28, i16 zeroext 34, i16 zeroext %conv28) #11, !dbg !10616
  br label %if.end34, !dbg !10616

if.else:                                          ; preds = %if.then9
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10617
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10617
  %call29 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %31, i16 zeroext 34) #11, !dbg !10617
  %conv30 = zext i16 %call29 to i32, !dbg !10617
  %and31 = and i32 %conv30, 65532, !dbg !10617
  %or32 = or i32 %and31, 2, !dbg !10617
  %conv33 = trunc i32 %or32 to i16, !dbg !10617
  call void @usc_OutReg(%struct.mgsl_struct* %30, i16 zeroext 34, i16 zeroext %conv33) #11, !dbg !10617
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then23
  br label %if.end47, !dbg !10618

if.else35:                                        ; preds = %lor.lhs.false
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10619
  call void @usc_OutReg(%struct.mgsl_struct* %32, i16 zeroext 36, i16 zeroext 502) #11, !dbg !10619
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10621
  call void @usc_OutReg(%struct.mgsl_struct* %33, i16 zeroext 26, i16 zeroext 112) #11, !dbg !10621
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10622
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10622
  %call36 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %35, i16 zeroext 24) #11, !dbg !10622
  %conv37 = zext i16 %call36 to i32, !dbg !10622
  %and38 = and i32 %conv37, 65280, !dbg !10622
  %add39 = add i32 %and38, 192, !dbg !10622
  %add40 = add i32 %add39, 16, !dbg !10622
  %conv41 = trunc i32 %add40 to i16, !dbg !10622
  call void @usc_OutReg(%struct.mgsl_struct* %34, i16 zeroext 24, i16 zeroext %conv41) #11, !dbg !10622
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10623
  call void @usc_RTCmd(%struct.mgsl_struct* %36, i16 zeroext 18432) #11, !dbg !10624
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10625
  call void @usc_OutReg(%struct.mgsl_struct* %37, i16 zeroext 36, i16 zeroext 12288) #11, !dbg !10625
  %38 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10626
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10626
  %call42 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %39, i16 zeroext 34) #11, !dbg !10626
  %conv43 = zext i16 %call42 to i32, !dbg !10626
  %and44 = and i32 %conv43, 65532, !dbg !10626
  %or45 = or i32 %and44, 2, !dbg !10626
  %conv46 = trunc i32 %or45 to i16, !dbg !10626
  call void @usc_OutReg(%struct.mgsl_struct* %38, i16 zeroext 34, i16 zeroext %conv46) #11, !dbg !10626
  br label %if.end47

if.end47:                                         ; preds = %if.else35, %if.end34
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10627
  call void @usc_OutReg(%struct.mgsl_struct* %40, i16 zeroext 4, i16 zeroext 4128) #11, !dbg !10628
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10629
  %rx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %41, i32 0, i32 48, !dbg !10630
  store i8 1, i8* %rx_enabled, align 8, !dbg !10631
  ret void, !dbg !10632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_trace_block(%struct.mgsl_struct* %info, i8* %data, i32 %count, i32 %xmit) #1 !dbg !10633 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %data.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %xmit.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %linecount = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !10636, metadata !DIExpression()), !dbg !10637
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10638, metadata !DIExpression()), !dbg !10639
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  store i32 %xmit, i32* %xmit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xmit.addr, metadata !10642, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10644, metadata !DIExpression()), !dbg !10645
  call void @llvm.dbg.declare(metadata i32* %linecount, metadata !10646, metadata !DIExpression()), !dbg !10647
  %0 = load i32, i32* %xmit.addr, align 4, !dbg !10648
  %tobool = icmp ne i32 %0, 0, !dbg !10648
  br i1 %tobool, label %if.then, label %if.else, !dbg !10650

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10651
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !10652
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !10651
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay) #12, !dbg !10653
  br label %if.end, !dbg !10653

if.else:                                          ; preds = %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10654
  %device_name1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 56, !dbg !10655
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name1, i64 0, i64 0, !dbg !10654
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8* %arraydecay2) #12, !dbg !10656
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !10657

while.cond:                                       ; preds = %for.end42, %if.end
  %3 = load i32, i32* %count.addr, align 4, !dbg !10658
  %tobool4 = icmp ne i32 %3, 0, !dbg !10657
  br i1 %tobool4, label %while.body, label %while.end, !dbg !10657

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %count.addr, align 4, !dbg !10659
  %cmp = icmp sgt i32 %4, 16, !dbg !10662
  br i1 %cmp, label %if.then5, label %if.else6, !dbg !10663

if.then5:                                         ; preds = %while.body
  store i32 16, i32* %linecount, align 4, !dbg !10664
  br label %if.end7, !dbg !10665

if.else6:                                         ; preds = %while.body
  %5 = load i32, i32* %count.addr, align 4, !dbg !10666
  store i32 %5, i32* %linecount, align 4, !dbg !10667
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.then5
  store i32 0, i32* %i, align 4, !dbg !10668
  br label %for.cond, !dbg !10670

for.cond:                                         ; preds = %for.inc, %if.end7
  %6 = load i32, i32* %i, align 4, !dbg !10671
  %7 = load i32, i32* %linecount, align 4, !dbg !10673
  %cmp8 = icmp slt i32 %6, %7, !dbg !10674
  br i1 %cmp8, label %for.body, label %for.end, !dbg !10675

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %data.addr, align 8, !dbg !10676
  %9 = load i32, i32* %i, align 4, !dbg !10677
  %idxprom = sext i32 %9 to i64, !dbg !10676
  %arrayidx = getelementptr i8, i8* %8, i64 %idxprom, !dbg !10676
  %10 = load i8, i8* %arrayidx, align 1, !dbg !10676
  %conv = zext i8 %10 to i32, !dbg !10678
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 %conv) #12, !dbg !10679
  br label %for.inc, !dbg !10679

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !10680
  %inc = add i32 %11, 1, !dbg !10680
  store i32 %inc, i32* %i, align 4, !dbg !10680
  br label %for.cond, !dbg !10681, !llvm.loop !10682

for.end:                                          ; preds = %for.cond
  br label %for.cond10, !dbg !10684

for.cond10:                                       ; preds = %for.inc15, %for.end
  %12 = load i32, i32* %i, align 4, !dbg !10685
  %cmp11 = icmp slt i32 %12, 17, !dbg !10688
  br i1 %cmp11, label %for.body13, label %for.end17, !dbg !10689

for.body13:                                       ; preds = %for.cond10
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !10690
  br label %for.inc15, !dbg !10690

for.inc15:                                        ; preds = %for.body13
  %13 = load i32, i32* %i, align 4, !dbg !10691
  %inc16 = add i32 %13, 1, !dbg !10691
  store i32 %inc16, i32* %i, align 4, !dbg !10691
  br label %for.cond10, !dbg !10692, !llvm.loop !10693

for.end17:                                        ; preds = %for.cond10
  store i32 0, i32* %i, align 4, !dbg !10695
  br label %for.cond18, !dbg !10697

for.cond18:                                       ; preds = %for.inc40, %for.end17
  %14 = load i32, i32* %i, align 4, !dbg !10698
  %15 = load i32, i32* %linecount, align 4, !dbg !10700
  %cmp19 = icmp slt i32 %14, %15, !dbg !10701
  br i1 %cmp19, label %for.body21, label %for.end42, !dbg !10702

for.body21:                                       ; preds = %for.cond18
  %16 = load i8*, i8** %data.addr, align 8, !dbg !10703
  %17 = load i32, i32* %i, align 4, !dbg !10706
  %idxprom22 = sext i32 %17 to i64, !dbg !10703
  %arrayidx23 = getelementptr i8, i8* %16, i64 %idxprom22, !dbg !10703
  %18 = load i8, i8* %arrayidx23, align 1, !dbg !10703
  %conv24 = sext i8 %18 to i32, !dbg !10703
  %cmp25 = icmp sge i32 %conv24, 32, !dbg !10707
  br i1 %cmp25, label %land.lhs.true, label %if.else37, !dbg !10708

land.lhs.true:                                    ; preds = %for.body21
  %19 = load i8*, i8** %data.addr, align 8, !dbg !10709
  %20 = load i32, i32* %i, align 4, !dbg !10710
  %idxprom27 = sext i32 %20 to i64, !dbg !10709
  %arrayidx28 = getelementptr i8, i8* %19, i64 %idxprom27, !dbg !10709
  %21 = load i8, i8* %arrayidx28, align 1, !dbg !10709
  %conv29 = sext i8 %21 to i32, !dbg !10709
  %cmp30 = icmp sle i32 %conv29, 126, !dbg !10711
  br i1 %cmp30, label %if.then32, label %if.else37, !dbg !10712

if.then32:                                        ; preds = %land.lhs.true
  %22 = load i8*, i8** %data.addr, align 8, !dbg !10713
  %23 = load i32, i32* %i, align 4, !dbg !10714
  %idxprom33 = sext i32 %23 to i64, !dbg !10713
  %arrayidx34 = getelementptr i8, i8* %22, i64 %idxprom33, !dbg !10713
  %24 = load i8, i8* %arrayidx34, align 1, !dbg !10713
  %conv35 = sext i8 %24 to i32, !dbg !10713
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0), i32 %conv35) #12, !dbg !10715
  br label %if.end39, !dbg !10715

if.else37:                                        ; preds = %land.lhs.true, %for.body21
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0)) #12, !dbg !10716
  br label %if.end39

if.end39:                                         ; preds = %if.else37, %if.then32
  br label %for.inc40, !dbg !10717

for.inc40:                                        ; preds = %if.end39
  %25 = load i32, i32* %i, align 4, !dbg !10718
  %inc41 = add i32 %25, 1, !dbg !10718
  store i32 %inc41, i32* %i, align 4, !dbg !10718
  br label %for.cond18, !dbg !10719, !llvm.loop !10720

for.end42:                                        ; preds = %for.cond18
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !10722
  %26 = load i32, i32* %linecount, align 4, !dbg !10723
  %27 = load i8*, i8** %data.addr, align 8, !dbg !10724
  %idx.ext = sext i32 %26 to i64, !dbg !10724
  %add.ptr = getelementptr i8, i8* %27, i64 %idx.ext, !dbg !10724
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !10724
  %28 = load i32, i32* %linecount, align 4, !dbg !10725
  %29 = load i32, i32* %count.addr, align 4, !dbg !10726
  %sub = sub i32 %29, %28, !dbg !10726
  store i32 %sub, i32* %count.addr, align 4, !dbg !10726
  br label %while.cond, !dbg !10657, !llvm.loop !10727

while.end:                                        ; preds = %while.cond
  ret void, !dbg !10729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hdlcdev_rx(%struct.mgsl_struct* %info, i8* %buf, i32 %size) #1 !dbg !10730 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %dev = alloca %struct.net_device*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !10733, metadata !DIExpression()), !dbg !10734
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10735, metadata !DIExpression()), !dbg !10736
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10737, metadata !DIExpression()), !dbg !10738
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !10739, metadata !DIExpression()), !dbg !10740
  %0 = load i32, i32* %size.addr, align 4, !dbg !10741
  %call = call %struct.sk_buff* @dev_alloc_skb(i32 %0) #11, !dbg !10742
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !10740
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !10743, metadata !DIExpression()), !dbg !10744
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10745
  %netdev = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 91, !dbg !10746
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10746
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !10744
  %3 = load i32, i32* @debug_level, align 4, !dbg !10747
  %cmp = icmp sge i32 %3, 3, !dbg !10749
  br i1 %cmp, label %if.then, label %if.end, !dbg !10750

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10751
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 0, !dbg !10752
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !10751
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i64 0, i64 0), i8* %arraydecay) #12, !dbg !10753
  br label %if.end, !dbg !10753

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10754
  %cmp2 = icmp eq %struct.sk_buff* %5, null, !dbg !10756
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !10757

if.then3:                                         ; preds = %if.end
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10758
  %name4 = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 0, !dbg !10760
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %name4, i64 0, i64 0, !dbg !10758
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.30, i64 0, i64 0), i8* %arraydecay5) #12, !dbg !10761
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10762
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 24, !dbg !10763
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 6, !dbg !10764
  %8 = load i64, i64* %rx_dropped, align 8, !dbg !10765
  %inc = add i64 %8, 1, !dbg !10765
  store i64 %inc, i64* %rx_dropped, align 8, !dbg !10765
  br label %return, !dbg !10766

if.end7:                                          ; preds = %if.end
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10767
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !10768
  %11 = load i32, i32* %size.addr, align 4, !dbg !10769
  %call8 = call i8* @skb_put_data(%struct.sk_buff* %9, i8* %10, i32 %11) #11, !dbg !10770
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10771
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10772
  %call9 = call zeroext i16 @hdlc_type_trans(%struct.sk_buff* %12, %struct.net_device* %13) #11, !dbg !10773
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10774
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 29, !dbg !10775
  store i16 %call9, i16* %protocol, align 8, !dbg !10776
  %15 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10777
  %stats10 = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 24, !dbg !10778
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats10, i32 0, i32 0, !dbg !10779
  %16 = load i64, i64* %rx_packets, align 8, !dbg !10780
  %inc11 = add i64 %16, 1, !dbg !10780
  store i64 %inc11, i64* %rx_packets, align 8, !dbg !10780
  %17 = load i32, i32* %size.addr, align 4, !dbg !10781
  %conv = sext i32 %17 to i64, !dbg !10781
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !10782
  %stats12 = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 24, !dbg !10783
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats12, i32 0, i32 2, !dbg !10784
  %19 = load i64, i64* %rx_bytes, align 8, !dbg !10785
  %add = add i64 %19, %conv, !dbg !10785
  store i64 %add, i64* %rx_bytes, align 8, !dbg !10785
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !10786
  %call13 = call i32 @netif_rx(%struct.sk_buff* %20) #11, !dbg !10787
  br label %return, !dbg !10788

return:                                           ; preds = %if.end7, %if.then3
  ret void, !dbg !10788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ldisc_receive_buf(%struct.tty_struct* %tty, i8* %data, i8* %flags, i32 %count) #1 !dbg !10789 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %data.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %ld = alloca %struct.tty_ldisc*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10794, metadata !DIExpression()), !dbg !10795
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10796, metadata !DIExpression()), !dbg !10797
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !10798, metadata !DIExpression()), !dbg !10799
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !10800, metadata !DIExpression()), !dbg !10801
  call void @llvm.dbg.declare(metadata %struct.tty_ldisc** %ld, metadata !10802, metadata !DIExpression()), !dbg !10803
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10804
  %tobool = icmp ne %struct.tty_struct* %0, null, !dbg !10804
  br i1 %tobool, label %if.end, label %if.then, !dbg !10806

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !10807

if.end:                                           ; preds = %entry
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10808
  %call = call %struct.tty_ldisc* @tty_ldisc_ref(%struct.tty_struct* %1) #11, !dbg !10809
  store %struct.tty_ldisc* %call, %struct.tty_ldisc** %ld, align 8, !dbg !10810
  %2 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !10811
  %tobool1 = icmp ne %struct.tty_ldisc* %2, null, !dbg !10811
  br i1 %tobool1, label %if.then2, label %if.end8, !dbg !10813

if.then2:                                         ; preds = %if.end
  %3 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !10814
  %ops = getelementptr inbounds %struct.tty_ldisc, %struct.tty_ldisc* %3, i32 0, i32 0, !dbg !10817
  %4 = load %struct.tty_ldisc_ops*, %struct.tty_ldisc_ops** %ops, align 8, !dbg !10817
  %receive_buf = getelementptr inbounds %struct.tty_ldisc_ops, %struct.tty_ldisc_ops* %4, i32 0, i32 14, !dbg !10818
  %5 = load void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*, i8*, i8*, i32)** %receive_buf, align 8, !dbg !10818
  %tobool3 = icmp ne void (%struct.tty_struct*, i8*, i8*, i32)* %5, null, !dbg !10814
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !10819

if.then4:                                         ; preds = %if.then2
  %6 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !10820
  %ops5 = getelementptr inbounds %struct.tty_ldisc, %struct.tty_ldisc* %6, i32 0, i32 0, !dbg !10821
  %7 = load %struct.tty_ldisc_ops*, %struct.tty_ldisc_ops** %ops5, align 8, !dbg !10821
  %receive_buf6 = getelementptr inbounds %struct.tty_ldisc_ops, %struct.tty_ldisc_ops* %7, i32 0, i32 14, !dbg !10822
  %8 = load void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*, i8*, i8*, i32)** %receive_buf6, align 8, !dbg !10822
  %9 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10823
  %10 = load i8*, i8** %data.addr, align 8, !dbg !10824
  %11 = load i8*, i8** %flags.addr, align 8, !dbg !10825
  %12 = load i32, i32* %count.addr, align 4, !dbg !10826
  call void %8(%struct.tty_struct* %9, i8* %10, i8* %11, i32 %12) #11, !dbg !10820
  br label %if.end7, !dbg !10820

if.end7:                                          ; preds = %if.then4, %if.then2
  %13 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !10827
  call void @tty_ldisc_deref(%struct.tty_ldisc* %13) #11, !dbg !10828
  br label %if.end8, !dbg !10829

if.end8:                                          ; preds = %if.then, %if.end7, %if.end
  ret void, !dbg !10830
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_free_rx_frame_buffers(%struct.mgsl_struct* %info, i32 %StartIndex, i32 %EndIndex) #1 !dbg !10831 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %StartIndex.addr = alloca i32, align 4
  %EndIndex.addr = alloca i32, align 4
  %Done = alloca i8, align 1
  %pBufEntry = alloca %struct._DMABUFFERENTRY*, align 8
  %Index = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !10834, metadata !DIExpression()), !dbg !10835
  store i32 %StartIndex, i32* %StartIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %StartIndex.addr, metadata !10836, metadata !DIExpression()), !dbg !10837
  store i32 %EndIndex, i32* %EndIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %EndIndex.addr, metadata !10838, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.declare(metadata i8* %Done, metadata !10840, metadata !DIExpression()), !dbg !10841
  store i8 0, i8* %Done, align 1, !dbg !10841
  call void @llvm.dbg.declare(metadata %struct._DMABUFFERENTRY** %pBufEntry, metadata !10842, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.declare(metadata i32* %Index, metadata !10844, metadata !DIExpression()), !dbg !10845
  %0 = load i32, i32* %StartIndex.addr, align 4, !dbg !10846
  store i32 %0, i32* %Index, align 4, !dbg !10847
  br label %while.cond, !dbg !10848

while.cond:                                       ; preds = %if.end3, %entry
  %1 = load i8, i8* %Done, align 1, !dbg !10849
  %tobool = trunc i8 %1 to i1, !dbg !10849
  %lnot = xor i1 %tobool, true, !dbg !10850
  br i1 %lnot, label %while.body, label %while.end, !dbg !10848

while.body:                                       ; preds = %while.cond
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10851
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 34, !dbg !10853
  %3 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !10853
  %4 = load i32, i32* %Index, align 4, !dbg !10854
  %idxprom = zext i32 %4 to i64, !dbg !10851
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %3, i64 %idxprom, !dbg !10851
  store %struct._DMABUFFERENTRY* %arrayidx, %struct._DMABUFFERENTRY** %pBufEntry, align 8, !dbg !10855
  %5 = load i32, i32* %Index, align 4, !dbg !10856
  %6 = load i32, i32* %EndIndex.addr, align 4, !dbg !10858
  %cmp = icmp eq i32 %5, %6, !dbg !10859
  br i1 %cmp, label %if.then, label %if.end, !dbg !10860

if.then:                                          ; preds = %while.body
  store i8 1, i8* %Done, align 1, !dbg !10861
  br label %if.end, !dbg !10863

if.end:                                           ; preds = %if.then, %while.body
  %7 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %pBufEntry, align 8, !dbg !10864
  %count = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %7, i32 0, i32 1, !dbg !10865
  %8 = bitcast i16* %count to i64*, !dbg !10866
  store i64 4096, i64* %8, align 4, !dbg !10867
  %9 = load i32, i32* %Index, align 4, !dbg !10868
  %inc = add i32 %9, 1, !dbg !10868
  store i32 %inc, i32* %Index, align 4, !dbg !10868
  %10 = load i32, i32* %Index, align 4, !dbg !10869
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10871
  %rx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 33, !dbg !10872
  %12 = load i32, i32* %rx_buffer_count, align 8, !dbg !10872
  %cmp1 = icmp eq i32 %10, %12, !dbg !10873
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10874

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %Index, align 4, !dbg !10875
  br label %if.end3, !dbg !10876

if.end3:                                          ; preds = %if.then2, %if.end
  br label %while.cond, !dbg !10848, !llvm.loop !10877

while.end:                                        ; preds = %while.cond
  %13 = load i32, i32* %Index, align 4, !dbg !10879
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !10880
  %current_rx_buffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 35, !dbg !10881
  store i32 %13, i32* %current_rx_buffer, align 8, !dbg !10882
  ret void, !dbg !10883
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @dev_alloc_skb(i32 %length) #1 !dbg !10884 {
entry:
  %length.addr = alloca i32, align 4
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !10887, metadata !DIExpression()), !dbg !10888
  %0 = load i32, i32* %length.addr, align 4, !dbg !10889
  %call = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* null, i32 %0) #11, !dbg !10890
  ret %struct.sk_buff* %call, !dbg !10891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_put_data(%struct.sk_buff* %skb, i8* %data, i32 %len) #1 !dbg !10892 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !10895, metadata !DIExpression()), !dbg !10896
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10897, metadata !DIExpression()), !dbg !10898
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !10899, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !10901, metadata !DIExpression()), !dbg !10902
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10903
  %1 = load i32, i32* %len.addr, align 4, !dbg !10904
  %call = call i8* @skb_put(%struct.sk_buff* %0, i32 %1) #11, !dbg !10905
  store i8* %call, i8** %tmp, align 8, !dbg !10902
  %2 = load i8*, i8** %tmp, align 8, !dbg !10906
  %3 = load i8*, i8** %data.addr, align 8, !dbg !10907
  %4 = load i32, i32* %len.addr, align 4, !dbg !10908
  %conv = zext i32 %4 to i64, !dbg !10908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 %conv, i1 false), !dbg !10909
  %5 = load i8*, i8** %tmp, align 8, !dbg !10910
  ret i8* %5, !dbg !10911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @hdlc_type_trans(%struct.sk_buff* %skb, %struct.net_device* %dev) #1 !dbg !10912 {
entry:
  %retval = alloca i16, align 2
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %hdlc = alloca %struct.hdlc_device*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !10916, metadata !DIExpression()), !dbg !10917
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10918, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.declare(metadata %struct.hdlc_device** %hdlc, metadata !10920, metadata !DIExpression()), !dbg !10959
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10960
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !10961
  store %struct.hdlc_device* %call, %struct.hdlc_device** %hdlc, align 8, !dbg !10959
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10962
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10963
  %3 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 0, !dbg !10964
  %4 = bitcast %union.anon.42* %3 to %struct.anon.43*, !dbg !10964
  %5 = getelementptr inbounds %struct.anon.43, %struct.anon.43* %4, i32 0, i32 2, !dbg !10964
  %dev1 = bitcast %union.anon.44* %5 to %struct.net_device**, !dbg !10964
  store %struct.net_device* %1, %struct.net_device** %dev1, align 8, !dbg !10965
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10966
  call void @skb_reset_mac_header(%struct.sk_buff* %6) #11, !dbg !10967
  %7 = load %struct.hdlc_device*, %struct.hdlc_device** %hdlc, align 8, !dbg !10968
  %proto = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %7, i32 0, i32 2, !dbg !10970
  %8 = load %struct.hdlc_proto*, %struct.hdlc_proto** %proto, align 8, !dbg !10970
  %type_trans = getelementptr inbounds %struct.hdlc_proto, %struct.hdlc_proto* %8, i32 0, i32 6, !dbg !10971
  %9 = load i16 (%struct.sk_buff*, %struct.net_device*)*, i16 (%struct.sk_buff*, %struct.net_device*)** %type_trans, align 8, !dbg !10971
  %tobool = icmp ne i16 (%struct.sk_buff*, %struct.net_device*)* %9, null, !dbg !10968
  br i1 %tobool, label %if.then, label %if.else, !dbg !10972

if.then:                                          ; preds = %entry
  %10 = load %struct.hdlc_device*, %struct.hdlc_device** %hdlc, align 8, !dbg !10973
  %proto2 = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %10, i32 0, i32 2, !dbg !10974
  %11 = load %struct.hdlc_proto*, %struct.hdlc_proto** %proto2, align 8, !dbg !10974
  %type_trans3 = getelementptr inbounds %struct.hdlc_proto, %struct.hdlc_proto* %11, i32 0, i32 6, !dbg !10975
  %12 = load i16 (%struct.sk_buff*, %struct.net_device*)*, i16 (%struct.sk_buff*, %struct.net_device*)** %type_trans3, align 8, !dbg !10975
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !10976
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10977
  %call4 = call zeroext i16 %12(%struct.sk_buff* %13, %struct.net_device* %14) #11, !dbg !10973
  store i16 %call4, i16* %retval, align 2, !dbg !10978
  br label %return, !dbg !10978

if.else:                                          ; preds = %entry
  store i16 6400, i16* %retval, align 2, !dbg !10979
  br label %return, !dbg !10979

return:                                           ; preds = %if.else, %if.then
  %15 = load i16, i16* %retval, align 2, !dbg !10980
  ret i16 %15, !dbg !10980
}

; Function Attrs: noredzone
declare dso_local i32 @netif_rx(%struct.sk_buff*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %dev, i32 %length) #1 !dbg !10981 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10984, metadata !DIExpression()), !dbg !10985
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !10986, metadata !DIExpression()), !dbg !10987
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10988
  %1 = load i32, i32* %length.addr, align 4, !dbg !10989
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %1, i32 2592) #11, !dbg !10990
  ret %struct.sk_buff* %call, !dbg !10991
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #4

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %dev) #1 !dbg !10992 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10996, metadata !DIExpression()), !dbg !10997
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10998
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !10999
  %1 = bitcast i8* %call to %struct.hdlc_device*, !dbg !10999
  ret %struct.hdlc_device* %1, !dbg !11000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reset_mac_header(%struct.sk_buff* %skb) #1 !dbg !11001 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11002, metadata !DIExpression()), !dbg !11003
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11004
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !11005
  %1 = load i8*, i8** %data, align 8, !dbg !11005
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11006
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !11007
  %3 = load i8*, i8** %head, align 8, !dbg !11007
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !11008
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11008
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11008
  %conv = trunc i64 %sub.ptr.sub to i16, !dbg !11004
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11009
  %mac_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 32, !dbg !11010
  store i16 %conv, i16* %mac_header, align 2, !dbg !11011
  ret void, !dbg !11012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #1 !dbg !11013 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11016, metadata !DIExpression()), !dbg !11017
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11018
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !11019
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !11020
  ret i8* %add.ptr, !dbg !11021
}

; Function Attrs: noredzone
declare dso_local %struct.tty_ldisc* @tty_ldisc_ref(%struct.tty_struct*) #4

; Function Attrs: noredzone
declare dso_local void @tty_ldisc_deref(%struct.tty_ldisc*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_reset_rx_dma_buffers(%struct.mgsl_struct* %info) #1 !dbg !11022 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %i = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !11023, metadata !DIExpression()), !dbg !11024
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11025, metadata !DIExpression()), !dbg !11026
  store i32 0, i32* %i, align 4, !dbg !11027
  br label %for.cond, !dbg !11029

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11030
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11032
  %rx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 33, !dbg !11033
  %2 = load i32, i32* %rx_buffer_count, align 8, !dbg !11033
  %cmp = icmp ult i32 %0, %2, !dbg !11034
  br i1 %cmp, label %for.body, label %for.end, !dbg !11035

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11036
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 34, !dbg !11038
  %4 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !11038
  %5 = load i32, i32* %i, align 4, !dbg !11039
  %idxprom = zext i32 %5 to i64, !dbg !11036
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %4, i64 %idxprom, !dbg !11036
  %count = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 1, !dbg !11040
  %6 = bitcast i16* %count to i64*, !dbg !11041
  store i64 4096, i64* %6, align 4, !dbg !11042
  br label %for.inc, !dbg !11043

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !11044
  %inc = add i32 %7, 1, !dbg !11044
  store i32 %inc, i32* %i, align 4, !dbg !11044
  br label %for.cond, !dbg !11045, !llvm.loop !11046

for.end:                                          ; preds = %for.cond
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11048
  %current_rx_buffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 35, !dbg !11049
  store i32 0, i32* %current_rx_buffer, align 8, !dbg !11050
  ret void, !dbg !11051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_stop_receiver(%struct.mgsl_struct* %info) #1 !dbg !11052 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !11053, metadata !DIExpression()), !dbg !11054
  %0 = load i32, i32* @debug_level, align 4, !dbg !11055
  %cmp = icmp sge i32 %0, 5, !dbg !11057
  br i1 %cmp, label %if.then, label %if.end, !dbg !11058

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11059
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !11060
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !11059
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 5283, i8* %arraydecay) #12, !dbg !11061
  br label %if.end, !dbg !11061

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11062
  call void @usc_DmaCmd(%struct.mgsl_struct* %2, i16 zeroext 4608) #11, !dbg !11063
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11064
  call void @usc_OutReg(%struct.mgsl_struct* %3, i16 zeroext 36, i16 zeroext 502) #11, !dbg !11064
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11065
  call void @usc_OutReg(%struct.mgsl_struct* %4, i16 zeroext 26, i16 zeroext 112) #11, !dbg !11065
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11066
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11066
  %call1 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %6, i16 zeroext 24) #11, !dbg !11066
  %conv = zext i16 %call1 to i32, !dbg !11066
  %and = and i32 %conv, 65280, !dbg !11066
  %add = add i32 %and, 128, !dbg !11066
  %add2 = add i32 %add, 48, !dbg !11066
  %conv3 = trunc i32 %add2 to i16, !dbg !11066
  call void @usc_OutReg(%struct.mgsl_struct* %5, i16 zeroext 24, i16 zeroext %conv3) #11, !dbg !11066
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11067
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11067
  %call4 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %8, i16 zeroext 34) #11, !dbg !11067
  %conv5 = zext i16 %call4 to i32, !dbg !11067
  %and6 = and i32 %conv5, 65532, !dbg !11067
  %conv7 = trunc i32 %and6 to i16, !dbg !11067
  call void @usc_OutReg(%struct.mgsl_struct* %7, i16 zeroext 34, i16 zeroext %conv7) #11, !dbg !11067
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11068
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11069
  %call8 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %10, i16 zeroext 4) #11, !dbg !11070
  %conv9 = zext i16 %call8 to i32, !dbg !11070
  %or = or i32 %conv9, 8192, !dbg !11071
  %conv10 = trunc i32 %or to i16, !dbg !11072
  call void @usc_OutReg(%struct.mgsl_struct* %9, i16 zeroext 4, i16 zeroext %conv10) #11, !dbg !11073
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11074
  call void @usc_RTCmd(%struct.mgsl_struct* %11, i16 zeroext 18432) #11, !dbg !11075
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11076
  %rx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 48, !dbg !11077
  store i8 0, i8* %rx_enabled, align 8, !dbg !11078
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11079
  %rx_overflow = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 49, !dbg !11080
  store i8 0, i8* %rx_overflow, align 1, !dbg !11081
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11082
  %rx_rcc_underrun = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 50, !dbg !11083
  store i8 0, i8* %rx_rcc_underrun, align 2, !dbg !11084
  ret void, !dbg !11085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_RTCmd(%struct.mgsl_struct* %info, i16 zeroext %Cmd) #1 !dbg !11086 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %Cmd.addr = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !11089, metadata !DIExpression()), !dbg !11090
  store i16 %Cmd, i16* %Cmd.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %Cmd.addr, metadata !11091, metadata !DIExpression()), !dbg !11092
  %0 = load i16, i16* %Cmd.addr, align 2, !dbg !11093
  %conv = zext i16 %0 to i32, !dbg !11093
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11094
  %loopback_bits = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 68, !dbg !11095
  %2 = load i16, i16* %loopback_bits, align 4, !dbg !11095
  %conv1 = zext i16 %2 to i32, !dbg !11094
  %add = add i32 %conv, %conv1, !dbg !11096
  %conv2 = trunc i32 %add to i16, !dbg !11093
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11097
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 59, !dbg !11098
  %4 = load i32, i32* %io_base, align 4, !dbg !11098
  %add3 = add i32 %4, 4, !dbg !11099
  call void @outw(i16 zeroext %conv2, i32 %add3) #11, !dbg !11100
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11101
  %io_base4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 59, !dbg !11102
  %6 = load i32, i32* %io_base4, align 4, !dbg !11102
  %add5 = add i32 %6, 4, !dbg !11103
  %call = call zeroext i16 @inw(i32 %add5) #11, !dbg !11104
  ret void, !dbg !11105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_OutDmaReg(%struct.mgsl_struct* %info, i16 zeroext %RegAddr, i16 zeroext %RegValue) #1 !dbg !11106 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %RegAddr.addr = alloca i16, align 2
  %RegValue.addr = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !11107, metadata !DIExpression()), !dbg !11108
  store i16 %RegAddr, i16* %RegAddr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %RegAddr.addr, metadata !11109, metadata !DIExpression()), !dbg !11110
  store i16 %RegValue, i16* %RegValue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %RegValue.addr, metadata !11111, metadata !DIExpression()), !dbg !11112
  %0 = load i16, i16* %RegAddr.addr, align 2, !dbg !11113
  %conv = zext i16 %0 to i32, !dbg !11113
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11114
  %mbre_bit = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 67, !dbg !11115
  %2 = load i16, i16* %mbre_bit, align 2, !dbg !11115
  %conv1 = zext i16 %2 to i32, !dbg !11114
  %add = add i32 %conv, %conv1, !dbg !11116
  %conv2 = trunc i32 %add to i16, !dbg !11113
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11117
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 59, !dbg !11118
  %4 = load i32, i32* %io_base, align 4, !dbg !11118
  call void @outw(i16 zeroext %conv2, i32 %4) #11, !dbg !11119
  %5 = load i16, i16* %RegValue.addr, align 2, !dbg !11120
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11121
  %io_base3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 59, !dbg !11122
  %7 = load i32, i32* %io_base3, align 4, !dbg !11122
  call void @outw(i16 zeroext %5, i32 %7) #11, !dbg !11123
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11124
  %io_base4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 59, !dbg !11125
  %9 = load i32, i32* %io_base4, align 4, !dbg !11125
  %call = call zeroext i16 @inw(i32 %9) #11, !dbg !11126
  ret void, !dbg !11127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %info, i16 zeroext %RegAddr) #1 !dbg !11128 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %RegAddr.addr = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !11129, metadata !DIExpression()), !dbg !11130
  store i16 %RegAddr, i16* %RegAddr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %RegAddr.addr, metadata !11131, metadata !DIExpression()), !dbg !11132
  %0 = load i16, i16* %RegAddr.addr, align 2, !dbg !11133
  %conv = zext i16 %0 to i32, !dbg !11133
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11134
  %mbre_bit = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 67, !dbg !11135
  %2 = load i16, i16* %mbre_bit, align 2, !dbg !11135
  %conv1 = zext i16 %2 to i32, !dbg !11134
  %add = add i32 %conv, %conv1, !dbg !11136
  %conv2 = trunc i32 %add to i16, !dbg !11133
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11137
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 59, !dbg !11138
  %4 = load i32, i32* %io_base, align 4, !dbg !11138
  call void @outw(i16 zeroext %conv2, i32 %4) #11, !dbg !11139
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11140
  %io_base3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 59, !dbg !11141
  %6 = load i32, i32* %io_base3, align 4, !dbg !11141
  %call = call zeroext i16 @inw(i32 %6) #11, !dbg !11142
  ret i16 %call, !dbg !11143
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_DmaCmd(%struct.mgsl_struct* %info, i16 zeroext %Cmd) #1 !dbg !11144 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %Cmd.addr = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !11145, metadata !DIExpression()), !dbg !11146
  store i16 %Cmd, i16* %Cmd.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %Cmd.addr, metadata !11147, metadata !DIExpression()), !dbg !11148
  %0 = load i16, i16* %Cmd.addr, align 2, !dbg !11149
  %conv = zext i16 %0 to i32, !dbg !11149
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11150
  %mbre_bit = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 67, !dbg !11151
  %2 = load i16, i16* %mbre_bit, align 2, !dbg !11151
  %conv1 = zext i16 %2 to i32, !dbg !11150
  %add = add i32 %conv, %conv1, !dbg !11152
  %conv2 = trunc i32 %add to i16, !dbg !11149
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11153
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 59, !dbg !11154
  %4 = load i32, i32* %io_base, align 4, !dbg !11154
  call void @outw(i16 zeroext %conv2, i32 %4) #11, !dbg !11155
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11156
  %io_base3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 59, !dbg !11157
  %6 = load i32, i32* %io_base3, align 4, !dbg !11157
  %call = call zeroext i16 @inw(i32 %6) #11, !dbg !11158
  ret void, !dbg !11159
}

; Function Attrs: noredzone
declare dso_local void @tty_wakeup(%struct.tty_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_loopmode_send_done(%struct.mgsl_struct* %info) #1 !dbg !11160 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !11161, metadata !DIExpression()), !dbg !11162
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11163
  %loopmode_send_done_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 87, !dbg !11164
  store i8 0, i8* %loopmode_send_done_requested, align 2, !dbg !11165
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11166
  %cmr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 54, !dbg !11167
  %2 = load i16, i16* %cmr_value, align 4, !dbg !11168
  %conv = zext i16 %2 to i32, !dbg !11168
  %and = and i32 %conv, -8193, !dbg !11168
  %conv1 = trunc i32 %and to i16, !dbg !11168
  store i16 %conv1, i16* %cmr_value, align 4, !dbg !11168
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11169
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11170
  %cmr_value2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 54, !dbg !11171
  %5 = load i16, i16* %cmr_value2, align 4, !dbg !11171
  call void @usc_OutReg(%struct.mgsl_struct* %3, i16 zeroext 2, i16 zeroext %5) #11, !dbg !11172
  ret void, !dbg !11173
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_init(%struct.mgsl_struct* %info) #1 !dbg !11174 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %rc = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %hdlc = alloca %struct.hdlc_device*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !11175, metadata !DIExpression()), !dbg !11176
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11177, metadata !DIExpression()), !dbg !11178
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !11179, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.declare(metadata %struct.hdlc_device** %hdlc, metadata !11181, metadata !DIExpression()), !dbg !11182
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11183
  %1 = bitcast %struct.mgsl_struct* %0 to i8*, !dbg !11183
  %call = call %struct.net_device* @alloc_hdlcdev(i8* %1) #11, !dbg !11184
  store %struct.net_device* %call, %struct.net_device** %dev, align 8, !dbg !11185
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11186
  %tobool = icmp ne %struct.net_device* %2, null, !dbg !11186
  br i1 %tobool, label %if.end, label %if.then, !dbg !11188

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !11189
  store i32 -12, i32* %retval, align 4, !dbg !11191
  br label %return, !dbg !11191

if.end:                                           ; preds = %entry
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11192
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 59, !dbg !11193
  %4 = load i32, i32* %io_base, align 4, !dbg !11193
  %conv = zext i32 %4 to i64, !dbg !11192
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11194
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 5, !dbg !11195
  store i64 %conv, i64* %base_addr, align 8, !dbg !11196
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11197
  %irq_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 62, !dbg !11198
  %7 = load i32, i32* %irq_level, align 8, !dbg !11198
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11199
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 6, !dbg !11200
  store i32 %7, i32* %irq, align 8, !dbg !11201
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11202
  %dma_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 65, !dbg !11203
  %10 = load i32, i32* %dma_level, align 4, !dbg !11203
  %conv2 = trunc i32 %10 to i8, !dbg !11202
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11204
  %dma = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 43, !dbg !11205
  store i8 %conv2, i8* %dma, align 1, !dbg !11206
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11207
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 32, !dbg !11208
  store %struct.net_device_ops* @hdlcdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !11209
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11210
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 94, !dbg !11211
  store i32 2500, i32* %watchdog_timeo, align 8, !dbg !11212
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11213
  %tx_queue_len = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 90, !dbg !11214
  store i32 50, i32* %tx_queue_len, align 8, !dbg !11215
  %15 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11216
  %call3 = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %15) #11, !dbg !11217
  store %struct.hdlc_device* %call3, %struct.hdlc_device** %hdlc, align 8, !dbg !11218
  %16 = load %struct.hdlc_device*, %struct.hdlc_device** %hdlc, align 8, !dbg !11219
  %attach = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %16, i32 0, i32 0, !dbg !11220
  store i32 (%struct.net_device*, i16, i16)* @hdlcdev_attach, i32 (%struct.net_device*, i16, i16)** %attach, align 8, !dbg !11221
  %17 = load %struct.hdlc_device*, %struct.hdlc_device** %hdlc, align 8, !dbg !11222
  %xmit = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %17, i32 0, i32 1, !dbg !11223
  store i32 (%struct.sk_buff*, %struct.net_device*)* @hdlcdev_xmit, i32 (%struct.sk_buff*, %struct.net_device*)** %xmit, align 8, !dbg !11224
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11225
  %call4 = call i32 @register_netdev(%struct.net_device* %18) #11, !dbg !11225
  store i32 %call4, i32* %rc, align 4, !dbg !11226
  %19 = load i32, i32* %rc, align 4, !dbg !11227
  %tobool5 = icmp ne i32 %19, 0, !dbg !11227
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !11229

if.then6:                                         ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !11230
  %20 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11232
  call void @free_netdev(%struct.net_device* %20) #11, !dbg !11233
  %21 = load i32, i32* %rc, align 4, !dbg !11234
  store i32 %21, i32* %retval, align 4, !dbg !11235
  br label %return, !dbg !11235

if.end8:                                          ; preds = %if.end
  %22 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11236
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !11237
  %netdev = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 91, !dbg !11238
  store %struct.net_device* %22, %struct.net_device** %netdev, align 8, !dbg !11239
  store i32 0, i32* %retval, align 4, !dbg !11240
  br label %return, !dbg !11240

return:                                           ; preds = %if.end8, %if.then6, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !11241
  ret i32 %24, !dbg !11241
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_hdlcdev(i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_attach(%struct.net_device* %dev, i16 zeroext %encoding, i16 zeroext %parity) #1 !dbg !11242 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %encoding.addr = alloca i16, align 2
  %parity.addr = alloca i16, align 2
  %info = alloca %struct.mgsl_struct*, align 8
  %new_encoding = alloca i8, align 1
  %new_crctype = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11243, metadata !DIExpression()), !dbg !11244
  store i16 %encoding, i16* %encoding.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %encoding.addr, metadata !11245, metadata !DIExpression()), !dbg !11246
  store i16 %parity, i16* %parity.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %parity.addr, metadata !11247, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !11249, metadata !DIExpression()), !dbg !11250
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11251
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !11251
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !11251
  %1 = load i8*, i8** %priv, align 8, !dbg !11251
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !11251
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !11250
  call void @llvm.dbg.declare(metadata i8* %new_encoding, metadata !11252, metadata !DIExpression()), !dbg !11253
  call void @llvm.dbg.declare(metadata i16* %new_crctype, metadata !11254, metadata !DIExpression()), !dbg !11255
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11256
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 1, !dbg !11258
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !11259
  %4 = load i32, i32* %count, align 4, !dbg !11259
  %tobool = icmp ne i32 %4, 0, !dbg !11256
  br i1 %tobool, label %if.then, label %if.end, !dbg !11260

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !11261
  br label %return, !dbg !11261

if.end:                                           ; preds = %entry
  %5 = load i16, i16* %encoding.addr, align 2, !dbg !11262
  %conv = zext i16 %5 to i32, !dbg !11262
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 5, label %sw.bb4
  ], !dbg !11263

sw.bb:                                            ; preds = %if.end
  store i8 0, i8* %new_encoding, align 1, !dbg !11264
  br label %sw.epilog, !dbg !11266

sw.bb1:                                           ; preds = %if.end
  store i8 3, i8* %new_encoding, align 1, !dbg !11267
  br label %sw.epilog, !dbg !11268

sw.bb2:                                           ; preds = %if.end
  store i8 4, i8* %new_encoding, align 1, !dbg !11269
  br label %sw.epilog, !dbg !11270

sw.bb3:                                           ; preds = %if.end
  store i8 5, i8* %new_encoding, align 1, !dbg !11271
  br label %sw.epilog, !dbg !11272

sw.bb4:                                           ; preds = %if.end
  store i8 6, i8* %new_encoding, align 1, !dbg !11273
  br label %sw.epilog, !dbg !11274

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11275
  br label %return, !dbg !11275

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %6 = load i16, i16* %parity.addr, align 2, !dbg !11276
  %conv5 = zext i16 %6 to i32, !dbg !11276
  switch i32 %conv5, label %sw.default9 [
    i32 1, label %sw.bb6
    i32 5, label %sw.bb7
    i32 7, label %sw.bb8
  ], !dbg !11277

sw.bb6:                                           ; preds = %sw.epilog
  store i16 0, i16* %new_crctype, align 2, !dbg !11278
  br label %sw.epilog10, !dbg !11280

sw.bb7:                                           ; preds = %sw.epilog
  store i16 1, i16* %new_crctype, align 2, !dbg !11281
  br label %sw.epilog10, !dbg !11282

sw.bb8:                                           ; preds = %sw.epilog
  store i16 2, i16* %new_crctype, align 2, !dbg !11283
  br label %sw.epilog10, !dbg !11284

sw.default9:                                      ; preds = %sw.epilog
  store i32 -22, i32* %retval, align 4, !dbg !11285
  br label %return, !dbg !11285

sw.epilog10:                                      ; preds = %sw.bb8, %sw.bb7, %sw.bb6
  %7 = load i8, i8* %new_encoding, align 1, !dbg !11286
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11287
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 70, !dbg !11288
  %encoding11 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 3, !dbg !11289
  store i8 %7, i8* %encoding11, align 4, !dbg !11290
  %9 = load i16, i16* %new_crctype, align 2, !dbg !11291
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11292
  %params12 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 70, !dbg !11293
  %crc_type = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params12, i32 0, i32 6, !dbg !11294
  store i16 %9, i16* %crc_type, align 2, !dbg !11295
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11296
  %netcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 89, !dbg !11298
  %12 = load i32, i32* %netcount, align 4, !dbg !11298
  %tobool13 = icmp ne i32 %12, 0, !dbg !11296
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11299

if.then14:                                        ; preds = %sw.epilog10
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11300
  call void @mgsl_program_hw(%struct.mgsl_struct* %13) #11, !dbg !11301
  br label %if.end15, !dbg !11301

if.end15:                                         ; preds = %if.then14, %sw.epilog10
  store i32 0, i32* %retval, align 4, !dbg !11302
  br label %return, !dbg !11302

return:                                           ; preds = %if.end15, %sw.default9, %sw.default, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !11303
  ret i32 %14, !dbg !11303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #1 !dbg !11304 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !9306, metadata !DIExpression()), !dbg !11305
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !11307
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !11308
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11315, metadata !DIExpression()), !dbg !11316
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11317, metadata !DIExpression()), !dbg !11318
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !11319, metadata !DIExpression()), !dbg !11320
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11321
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !11321
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !11321
  %1 = load i8*, i8** %priv, align 8, !dbg !11321
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !11321
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !11320
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11322, metadata !DIExpression()), !dbg !11323
  %3 = load i32, i32* @debug_level, align 4, !dbg !11324
  %cmp = icmp sge i32 %3, 3, !dbg !11326
  br i1 %cmp, label %if.then, label %if.end, !dbg !11327

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11328
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 0, !dbg !11329
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11328
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11330
  br label %if.end, !dbg !11330

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11331
  call void @netif_stop_queue(%struct.net_device* %5) #11, !dbg !11332
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11333
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %6, i32 0, i32 5, !dbg !11334
  %7 = load i32, i32* %len, align 8, !dbg !11334
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11335
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 12, !dbg !11336
  store i32 %7, i32* %xmit_cnt, align 8, !dbg !11337
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11338
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11339
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %10, i32 0, i32 37, !dbg !11340
  %11 = load i8*, i8** %data, align 8, !dbg !11340
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11341
  %len2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %12, i32 0, i32 5, !dbg !11342
  %13 = load i32, i32* %len2, align 8, !dbg !11342
  call void @mgsl_load_tx_dma_buffer(%struct.mgsl_struct* %9, i8* %11, i32 %13) #11, !dbg !11343
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11344
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 24, !dbg !11345
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 1, !dbg !11346
  %15 = load i64, i64* %tx_packets, align 8, !dbg !11347
  %inc = add i64 %15, 1, !dbg !11347
  store i64 %inc, i64* %tx_packets, align 8, !dbg !11347
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11348
  %len3 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %16, i32 0, i32 5, !dbg !11349
  %17 = load i32, i32* %len3, align 8, !dbg !11349
  %conv = zext i32 %17 to i64, !dbg !11348
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11350
  %stats4 = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 24, !dbg !11351
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats4, i32 0, i32 3, !dbg !11352
  %19 = load i64, i64* %tx_bytes, align 8, !dbg !11353
  %add = add i64 %19, %conv, !dbg !11353
  store i64 %add, i64* %tx_bytes, align 8, !dbg !11353
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11354
  call void @consume_skb(%struct.sk_buff* %20) #11, !dbg !11354
  %21 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11355
  call void @netif_trans_update(%struct.net_device* %21) #11, !dbg !11356
  br label %do.body, !dbg !11357

do.body:                                          ; preds = %if.end
  br label %do.body5, !dbg !11358

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11359, metadata !DIExpression()), !dbg !11361
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11362, metadata !DIExpression()), !dbg !11361
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !11361
  %conv7 = zext i1 %cmp6 to i32, !dbg !11361
  store i32 1, i32* %tmp, align 4, !dbg !11361
  %22 = load i32, i32* %tmp, align 4, !dbg !11361
  br label %do.body8, !dbg !11363

do.body8:                                         ; preds = %do.body5
  br label %do.body9, !dbg !11364

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !11365

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !11367, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !11371, metadata !DIExpression()), !dbg !11370
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !11370
  %conv14 = zext i1 %cmp13 to i32, !dbg !11370
  store i32 1, i32* %tmp15, align 4, !dbg !11370
  %23 = load i32, i32* %tmp15, align 4, !dbg !11370
  %call16 = call i64 @arch_local_irq_save() #11, !dbg !11372
  store i64 %call16, i64* %flags, align 8, !dbg !11372
  br label %do.end, !dbg !11372

do.end:                                           ; preds = %do.body10
  br label %do.end17, !dbg !11365

do.end17:                                         ; preds = %do.end
  br label %do.body18, !dbg !11364

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11373, !srcloc !11374
  br label %do.body19, !dbg !11373

do.body19:                                        ; preds = %do.body18
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11375
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 17, !dbg !11375
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11376
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !11377
  %rlock.i = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !11377
  br label %do.end21, !dbg !11375

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !11373

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !11364

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !11363

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !11358

do.end25:                                         ; preds = %do.end24
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11378
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 52, !dbg !11380
  %28 = load i8, i8* %tx_active, align 4, !dbg !11380
  %tobool = trunc i8 %28 to i1, !dbg !11380
  br i1 %tobool, label %if.end27, label %if.then26, !dbg !11381

if.then26:                                        ; preds = %do.end25
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11382
  call void @usc_start_transmitter(%struct.mgsl_struct* %29) #11, !dbg !11383
  br label %if.end27, !dbg !11383

if.end27:                                         ; preds = %if.then26, %do.end25
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11384
  %irq_spinlock28 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 17, !dbg !11385
  %31 = load i64, i64* %flags, align 8, !dbg !11386
  store %struct.spinlock* %irq_spinlock28, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %31, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !11387
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !11387
  store i32 1, i32* %tmp.i, align 4, !dbg !11387
  %32 = load i32, i32* %tmp.i, align 4, !dbg !11387
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !11388
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !11388
  store i32 1, i32* %tmp8.i, align 4, !dbg !11388
  %33 = load i32, i32* %tmp8.i, align 4, !dbg !11388
  %34 = load i64, i64* %flags.addr.i, align 8, !dbg !11389
  call void @arch_local_irq_restore(i64 %34) #14, !dbg !11389
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11390, !srcloc !9373
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !11391
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !11391
  %rlock.i30 = bitcast %union.anon.1* %36 to %struct.raw_spinlock*, !dbg !11391
  ret i32 0, !dbg !11392
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_open(%struct.net_device* %dev) #1 !dbg !11393 {
entry:
  %lock.addr.i124 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i124, metadata !8660, metadata !DIExpression()), !dbg !11394
  %lock.addr.i119 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i119, metadata !9306, metadata !DIExpression()), !dbg !11401
  %flags.addr.i120 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i120, metadata !9312, metadata !DIExpression()), !dbg !11405
  %tmp.i121 = alloca i32, align 4
  %tmp8.i122 = alloca i32, align 4
  %lock.addr.i117 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i117, metadata !8660, metadata !DIExpression()), !dbg !11406
  %lock.addr.i112 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i112, metadata !9306, metadata !DIExpression()), !dbg !11413
  %flags.addr.i113 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i113, metadata !9312, metadata !DIExpression()), !dbg !11415
  %tmp.i114 = alloca i32, align 4
  %tmp8.i115 = alloca i32, align 4
  %lock.addr.i107 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i107, metadata !9306, metadata !DIExpression()), !dbg !11416
  %flags.addr.i108 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i108, metadata !9312, metadata !DIExpression()), !dbg !11420
  %tmp.i109 = alloca i32, align 4
  %tmp8.i110 = alloca i32, align 4
  %lock.addr.i105 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i105, metadata !9306, metadata !DIExpression()), !dbg !11421
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !11423
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !11424
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %rc = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  %__dummy43 = alloca i64, align 8
  %__dummy244 = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  %__dummy51 = alloca i64, align 8
  %__dummy252 = alloca i64, align 8
  %tmp55 = alloca i32, align 4
  %__dummy75 = alloca i64, align 8
  %__dummy276 = alloca i64, align 8
  %tmp79 = alloca i32, align 4
  %__dummy83 = alloca i64, align 8
  %__dummy284 = alloca i64, align 8
  %tmp87 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11431, metadata !DIExpression()), !dbg !11432
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !11433, metadata !DIExpression()), !dbg !11434
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11435
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !11435
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !11435
  %1 = load i8*, i8** %priv, align 8, !dbg !11435
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !11435
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !11434
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11436, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11438, metadata !DIExpression()), !dbg !11439
  %3 = load i32, i32* @debug_level, align 4, !dbg !11440
  %cmp = icmp sge i32 %3, 3, !dbg !11442
  br i1 %cmp, label %if.then, label %if.end, !dbg !11443

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11444
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 0, !dbg !11445
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11444
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11446
  br label %if.end, !dbg !11446

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11447
  %call2 = call i32 @hdlc_open(%struct.net_device* %5) #11, !dbg !11448
  store i32 %call2, i32* %rc, align 4, !dbg !11449
  %6 = load i32, i32* %rc, align 4, !dbg !11450
  %tobool = icmp ne i32 %6, 0, !dbg !11450
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !11452

if.then3:                                         ; preds = %if.end
  %7 = load i32, i32* %rc, align 4, !dbg !11453
  store i32 %7, i32* %retval, align 4, !dbg !11454
  br label %return, !dbg !11454

if.end4:                                          ; preds = %if.end
  br label %do.body, !dbg !11455

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !11456

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11457, metadata !DIExpression()), !dbg !11459
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11460, metadata !DIExpression()), !dbg !11459
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !11459
  %conv = zext i1 %cmp6 to i32, !dbg !11459
  store i32 1, i32* %tmp, align 4, !dbg !11459
  %8 = load i32, i32* %tmp, align 4, !dbg !11459
  br label %do.body7, !dbg !11461

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !11462

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !11463

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !11465, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !11469, metadata !DIExpression()), !dbg !11468
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !11468
  %conv13 = zext i1 %cmp12 to i32, !dbg !11468
  store i32 1, i32* %tmp14, align 4, !dbg !11468
  %9 = load i32, i32* %tmp14, align 4, !dbg !11468
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !11470
  store i64 %call15, i64* %flags, align 8, !dbg !11470
  br label %do.end, !dbg !11470

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !11463

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !11462

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11471, !srcloc !11472
  br label %do.body18, !dbg !11471

do.body18:                                        ; preds = %do.body17
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11473
  %netlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 90, !dbg !11473
  store %struct.spinlock* %netlock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11474
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !11475
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !11475
  br label %do.end20, !dbg !11473

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !11471

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !11462

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !11461

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !11456

do.end24:                                         ; preds = %do.end23
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11476
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 1, !dbg !11477
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !11478
  %14 = load i32, i32* %count, align 4, !dbg !11478
  %cmp25 = icmp ne i32 %14, 0, !dbg !11479
  br i1 %cmp25, label %if.then29, label %lor.lhs.false, !dbg !11480

lor.lhs.false:                                    ; preds = %do.end24
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11481
  %netcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 89, !dbg !11482
  %16 = load i32, i32* %netcount, align 4, !dbg !11482
  %cmp27 = icmp ne i32 %16, 0, !dbg !11483
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !11484

if.then29:                                        ; preds = %lor.lhs.false, %do.end24
  %17 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11485
  %name30 = getelementptr inbounds %struct.net_device, %struct.net_device* %17, i32 0, i32 0, !dbg !11486
  %arraydecay31 = getelementptr inbounds [16 x i8], [16 x i8]* %name30, i64 0, i64 0, !dbg !11485
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.41, i64 0, i64 0), i8* %arraydecay31) #12, !dbg !11487
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11488
  %netlock33 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 90, !dbg !11489
  %19 = load i64, i64* %flags, align 8, !dbg !11490
  store %struct.spinlock* %netlock33, %struct.spinlock** %lock.addr.i107, align 8
  store i64 %19, i64* %flags.addr.i108, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !11491
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !11491
  store i32 1, i32* %tmp.i109, align 4, !dbg !11491
  %20 = load i32, i32* %tmp.i109, align 4, !dbg !11491
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !11492
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !11492
  store i32 1, i32* %tmp8.i110, align 4, !dbg !11492
  %21 = load i32, i32* %tmp8.i110, align 4, !dbg !11492
  %22 = load i64, i64* %flags.addr.i108, align 8, !dbg !11493
  call void @arch_local_irq_restore(i64 %22) #14, !dbg !11493
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11494, !srcloc !9373
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i107, align 8, !dbg !11495
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !11495
  %rlock.i111 = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !11495
  store i32 -16, i32* %retval, align 4, !dbg !11496
  br label %return, !dbg !11496

if.end34:                                         ; preds = %lor.lhs.false
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11497
  %netcount35 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 89, !dbg !11498
  store i32 1, i32* %netcount35, align 4, !dbg !11499
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11500
  %netlock36 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 90, !dbg !11501
  %27 = load i64, i64* %flags, align 8, !dbg !11502
  store %struct.spinlock* %netlock36, %struct.spinlock** %lock.addr.i112, align 8
  store i64 %27, i64* %flags.addr.i113, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !11503
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !11503
  store i32 1, i32* %tmp.i114, align 4, !dbg !11503
  %28 = load i32, i32* %tmp.i114, align 4, !dbg !11503
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !11504
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !11504
  store i32 1, i32* %tmp8.i115, align 4, !dbg !11504
  %29 = load i32, i32* %tmp8.i115, align 4, !dbg !11504
  %30 = load i64, i64* %flags.addr.i113, align 8, !dbg !11505
  call void @arch_local_irq_restore(i64 %30) #14, !dbg !11505
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11506, !srcloc !9373
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i112, align 8, !dbg !11507
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !11507
  %rlock.i116 = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !11507
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11508
  %call37 = call i32 @startup(%struct.mgsl_struct* %33) #11, !dbg !11509
  store i32 %call37, i32* %rc, align 4, !dbg !11510
  %cmp38 = icmp ne i32 %call37, 0, !dbg !11511
  br i1 %cmp38, label %if.then40, label %if.end70, !dbg !11512

if.then40:                                        ; preds = %if.end34
  br label %do.body41, !dbg !11513

do.body41:                                        ; preds = %if.then40
  br label %do.body42, !dbg !11514

do.body42:                                        ; preds = %do.body41
  call void @llvm.dbg.declare(metadata i64* %__dummy43, metadata !11515, metadata !DIExpression()), !dbg !11517
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !11518, metadata !DIExpression()), !dbg !11517
  %cmp45 = icmp eq i64* %__dummy43, %__dummy244, !dbg !11517
  %conv46 = zext i1 %cmp45 to i32, !dbg !11517
  store i32 1, i32* %tmp47, align 4, !dbg !11517
  %34 = load i32, i32* %tmp47, align 4, !dbg !11517
  br label %do.body48, !dbg !11519

do.body48:                                        ; preds = %do.body42
  br label %do.body49, !dbg !11520

do.body49:                                        ; preds = %do.body48
  br label %do.body50, !dbg !11521

do.body50:                                        ; preds = %do.body49
  call void @llvm.dbg.declare(metadata i64* %__dummy51, metadata !11523, metadata !DIExpression()), !dbg !11526
  call void @llvm.dbg.declare(metadata i64* %__dummy252, metadata !11527, metadata !DIExpression()), !dbg !11526
  %cmp53 = icmp eq i64* %__dummy51, %__dummy252, !dbg !11526
  %conv54 = zext i1 %cmp53 to i32, !dbg !11526
  store i32 1, i32* %tmp55, align 4, !dbg !11526
  %35 = load i32, i32* %tmp55, align 4, !dbg !11526
  %call56 = call i64 @arch_local_irq_save() #11, !dbg !11528
  store i64 %call56, i64* %flags, align 8, !dbg !11528
  br label %do.end57, !dbg !11528

do.end57:                                         ; preds = %do.body50
  br label %do.end58, !dbg !11521

do.end58:                                         ; preds = %do.end57
  br label %do.body59, !dbg !11520

do.body59:                                        ; preds = %do.end58
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11529, !srcloc !11530
  br label %do.body60, !dbg !11529

do.body60:                                        ; preds = %do.body59
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11531
  %netlock61 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %36, i32 0, i32 90, !dbg !11531
  store %struct.spinlock* %netlock61, %struct.spinlock** %lock.addr.i117, align 8
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i117, align 8, !dbg !11532
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !11533
  %rlock.i118 = bitcast %union.anon.1* %38 to %struct.raw_spinlock*, !dbg !11533
  br label %do.end63, !dbg !11531

do.end63:                                         ; preds = %do.body60
  br label %do.end64, !dbg !11529

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !11520

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !11519

do.end66:                                         ; preds = %do.end65
  br label %do.end67, !dbg !11514

do.end67:                                         ; preds = %do.end66
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11534
  %netcount68 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %39, i32 0, i32 89, !dbg !11535
  store i32 0, i32* %netcount68, align 4, !dbg !11536
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11537
  %netlock69 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 90, !dbg !11538
  %41 = load i64, i64* %flags, align 8, !dbg !11539
  store %struct.spinlock* %netlock69, %struct.spinlock** %lock.addr.i119, align 8
  store i64 %41, i64* %flags.addr.i120, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !11540
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !11540
  store i32 1, i32* %tmp.i121, align 4, !dbg !11540
  %42 = load i32, i32* %tmp.i121, align 4, !dbg !11540
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !11541
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !11541
  store i32 1, i32* %tmp8.i122, align 4, !dbg !11541
  %43 = load i32, i32* %tmp8.i122, align 4, !dbg !11541
  %44 = load i64, i64* %flags.addr.i120, align 8, !dbg !11542
  call void @arch_local_irq_restore(i64 %44) #14, !dbg !11542
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11543, !srcloc !9373
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i119, align 8, !dbg !11544
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !11544
  %rlock.i123 = bitcast %union.anon.1* %46 to %struct.raw_spinlock*, !dbg !11544
  %47 = load i32, i32* %rc, align 4, !dbg !11545
  store i32 %47, i32* %retval, align 4, !dbg !11546
  br label %return, !dbg !11546

if.end70:                                         ; preds = %if.end34
  %48 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11547
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %48, i32 0, i32 71, !dbg !11548
  %49 = load i8, i8* %serial_signals, align 8, !dbg !11549
  %conv71 = zext i8 %49 to i32, !dbg !11549
  %or = or i32 %conv71, 160, !dbg !11549
  %conv72 = trunc i32 %or to i8, !dbg !11549
  store i8 %conv72, i8* %serial_signals, align 8, !dbg !11549
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11550
  call void @mgsl_program_hw(%struct.mgsl_struct* %50) #11, !dbg !11551
  %51 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11552
  call void @netif_trans_update(%struct.net_device* %51) #11, !dbg !11553
  %52 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11554
  call void @netif_start_queue(%struct.net_device* %52) #11, !dbg !11555
  br label %do.body73, !dbg !11556

do.body73:                                        ; preds = %if.end70
  br label %do.body74, !dbg !11557

do.body74:                                        ; preds = %do.body73
  call void @llvm.dbg.declare(metadata i64* %__dummy75, metadata !11558, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.declare(metadata i64* %__dummy276, metadata !11561, metadata !DIExpression()), !dbg !11560
  %cmp77 = icmp eq i64* %__dummy75, %__dummy276, !dbg !11560
  %conv78 = zext i1 %cmp77 to i32, !dbg !11560
  store i32 1, i32* %tmp79, align 4, !dbg !11560
  %53 = load i32, i32* %tmp79, align 4, !dbg !11560
  br label %do.body80, !dbg !11562

do.body80:                                        ; preds = %do.body74
  br label %do.body81, !dbg !11563

do.body81:                                        ; preds = %do.body80
  br label %do.body82, !dbg !11564

do.body82:                                        ; preds = %do.body81
  call void @llvm.dbg.declare(metadata i64* %__dummy83, metadata !11566, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.declare(metadata i64* %__dummy284, metadata !11570, metadata !DIExpression()), !dbg !11569
  %cmp85 = icmp eq i64* %__dummy83, %__dummy284, !dbg !11569
  %conv86 = zext i1 %cmp85 to i32, !dbg !11569
  store i32 1, i32* %tmp87, align 4, !dbg !11569
  %54 = load i32, i32* %tmp87, align 4, !dbg !11569
  %call88 = call i64 @arch_local_irq_save() #11, !dbg !11571
  store i64 %call88, i64* %flags, align 8, !dbg !11571
  br label %do.end89, !dbg !11571

do.end89:                                         ; preds = %do.body82
  br label %do.end90, !dbg !11564

do.end90:                                         ; preds = %do.end89
  br label %do.body91, !dbg !11563

do.body91:                                        ; preds = %do.end90
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11572, !srcloc !11573
  br label %do.body92, !dbg !11572

do.body92:                                        ; preds = %do.body91
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11574
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %55, i32 0, i32 17, !dbg !11574
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i124, align 8
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i124, align 8, !dbg !11575
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !11576
  %rlock.i125 = bitcast %union.anon.1* %57 to %struct.raw_spinlock*, !dbg !11576
  br label %do.end94, !dbg !11574

do.end94:                                         ; preds = %do.body92
  br label %do.end95, !dbg !11572

do.end95:                                         ; preds = %do.end94
  br label %do.end96, !dbg !11563

do.end96:                                         ; preds = %do.end95
  br label %do.end97, !dbg !11562

do.end97:                                         ; preds = %do.end96
  br label %do.end98, !dbg !11557

do.end98:                                         ; preds = %do.end97
  %58 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11577
  call void @usc_get_serial_signals(%struct.mgsl_struct* %58) #11, !dbg !11578
  %59 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11579
  %irq_spinlock99 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %59, i32 0, i32 17, !dbg !11580
  %60 = load i64, i64* %flags, align 8, !dbg !11581
  store %struct.spinlock* %irq_spinlock99, %struct.spinlock** %lock.addr.i105, align 8
  store i64 %60, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !11582
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !11582
  store i32 1, i32* %tmp.i, align 4, !dbg !11582
  %61 = load i32, i32* %tmp.i, align 4, !dbg !11582
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !11583
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !11583
  store i32 1, i32* %tmp8.i, align 4, !dbg !11583
  %62 = load i32, i32* %tmp8.i, align 4, !dbg !11583
  %63 = load i64, i64* %flags.addr.i, align 8, !dbg !11584
  call void @arch_local_irq_restore(i64 %63) #14, !dbg !11584
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11585, !srcloc !9373
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i105, align 8, !dbg !11586
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !11586
  %rlock.i106 = bitcast %union.anon.1* %65 to %struct.raw_spinlock*, !dbg !11586
  %66 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11587
  %serial_signals100 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %66, i32 0, i32 71, !dbg !11589
  %67 = load i8, i8* %serial_signals100, align 8, !dbg !11589
  %conv101 = zext i8 %67 to i32, !dbg !11587
  %and = and i32 %conv101, 1, !dbg !11590
  %tobool102 = icmp ne i32 %and, 0, !dbg !11590
  br i1 %tobool102, label %if.then103, label %if.else, !dbg !11591

if.then103:                                       ; preds = %do.end98
  %68 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11592
  call void @netif_carrier_on(%struct.net_device* %68) #11, !dbg !11593
  br label %if.end104, !dbg !11593

if.else:                                          ; preds = %do.end98
  %69 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11594
  call void @netif_carrier_off(%struct.net_device* %69) #11, !dbg !11595
  br label %if.end104

if.end104:                                        ; preds = %if.else, %if.then103
  store i32 0, i32* %retval, align 4, !dbg !11596
  br label %return, !dbg !11596

return:                                           ; preds = %if.end104, %do.end67, %if.then29, %if.then3
  %70 = load i32, i32* %retval, align 4, !dbg !11597
  ret i32 %70, !dbg !11597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_close(%struct.net_device* %dev) #1 !dbg !11598 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !9306, metadata !DIExpression()), !dbg !11599
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !11601
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !11602
  %dev.addr = alloca %struct.net_device*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11609, metadata !DIExpression()), !dbg !11610
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !11611, metadata !DIExpression()), !dbg !11612
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11613
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !11613
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !11613
  %1 = load i8*, i8** %priv, align 8, !dbg !11613
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !11613
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !11612
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11614, metadata !DIExpression()), !dbg !11615
  %3 = load i32, i32* @debug_level, align 4, !dbg !11616
  %cmp = icmp sge i32 %3, 3, !dbg !11618
  br i1 %cmp, label %if.then, label %if.end, !dbg !11619

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11620
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 0, !dbg !11621
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11620
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11622
  br label %if.end, !dbg !11622

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11623
  call void @netif_stop_queue(%struct.net_device* %5) #11, !dbg !11624
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11625
  call void @shutdown(%struct.mgsl_struct* %6) #11, !dbg !11626
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11627
  call void @hdlc_close(%struct.net_device* %7) #11, !dbg !11628
  br label %do.body, !dbg !11629

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !11630

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11631, metadata !DIExpression()), !dbg !11633
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11634, metadata !DIExpression()), !dbg !11633
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !11633
  %conv = zext i1 %cmp3 to i32, !dbg !11633
  store i32 1, i32* %tmp, align 4, !dbg !11633
  %8 = load i32, i32* %tmp, align 4, !dbg !11633
  br label %do.body4, !dbg !11635

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !11636

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !11637

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !11639, metadata !DIExpression()), !dbg !11642
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !11643, metadata !DIExpression()), !dbg !11642
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !11642
  %conv10 = zext i1 %cmp9 to i32, !dbg !11642
  store i32 1, i32* %tmp11, align 4, !dbg !11642
  %9 = load i32, i32* %tmp11, align 4, !dbg !11642
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !11644
  store i64 %call12, i64* %flags, align 8, !dbg !11644
  br label %do.end, !dbg !11644

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !11637

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !11636

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11645, !srcloc !11646
  br label %do.body15, !dbg !11645

do.body15:                                        ; preds = %do.body14
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11647
  %netlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 90, !dbg !11647
  store %struct.spinlock* %netlock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11648
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !11649
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !11649
  br label %do.end17, !dbg !11647

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !11645

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11636

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11635

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11630

do.end21:                                         ; preds = %do.end20
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11650
  %netcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 89, !dbg !11651
  store i32 0, i32* %netcount, align 4, !dbg !11652
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11653
  %netlock22 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 90, !dbg !11654
  %15 = load i64, i64* %flags, align 8, !dbg !11655
  store %struct.spinlock* %netlock22, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !11656
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !11656
  store i32 1, i32* %tmp.i, align 4, !dbg !11656
  %16 = load i32, i32* %tmp.i, align 4, !dbg !11656
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !11657
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !11657
  store i32 1, i32* %tmp8.i, align 4, !dbg !11657
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !11657
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !11658
  call void @arch_local_irq_restore(i64 %18) #14, !dbg !11658
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !11659, !srcloc !9373
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !11660
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !11660
  %rlock.i24 = bitcast %union.anon.1* %20 to %struct.raw_spinlock*, !dbg !11660
  ret i32 0, !dbg !11661
}

; Function Attrs: noredzone
declare dso_local i32 @hdlc_start_xmit(%struct.sk_buff*, %struct.net_device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_ioctl(%struct.net_device* %dev, %struct.ifreq* %ifr, i32 %cmd) #1 !dbg !11662 {
entry:
  %retval.i.i102 = alloca i1, align 1
  %addr.addr.i.i103 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i103, metadata !11663, metadata !DIExpression()), !dbg !11668
  %bytes.addr.i.i104 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i104, metadata !11678, metadata !DIExpression()), !dbg !11679
  %is_source.addr.i.i105 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i105, metadata !11680, metadata !DIExpression()), !dbg !11681
  %sz.i.i106 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i106, metadata !11682, metadata !DIExpression()), !dbg !11683
  %__ret_warn_on.i.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i107, metadata !11684, metadata !DIExpression()), !dbg !11687
  %tmp.i.i108 = alloca i64, align 8
  %to.addr.i109 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i109, metadata !11688, metadata !DIExpression()), !dbg !11689
  %from.addr.i110 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i110, metadata !11690, metadata !DIExpression()), !dbg !11691
  %n.addr.i111 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i111, metadata !11692, metadata !DIExpression()), !dbg !11693
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !11663, metadata !DIExpression()), !dbg !11694
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !11678, metadata !DIExpression()), !dbg !11700
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !11680, metadata !DIExpression()), !dbg !11701
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !11682, metadata !DIExpression()), !dbg !11702
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !11684, metadata !DIExpression()), !dbg !11703
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !11704, metadata !DIExpression()), !dbg !11705
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !11706, metadata !DIExpression()), !dbg !11707
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !11708, metadata !DIExpression()), !dbg !11709
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ifr.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %size = alloca i64, align 8
  %new_line = alloca %struct.sync_serial_settings, align 4
  %line = alloca %struct.sync_serial_settings*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11710, metadata !DIExpression()), !dbg !11711
  store %struct.ifreq* %ifr, %struct.ifreq** %ifr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr.addr, metadata !11712, metadata !DIExpression()), !dbg !11713
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !11714, metadata !DIExpression()), !dbg !11715
  call void @llvm.dbg.declare(metadata i64* %size, metadata !11716, metadata !DIExpression()), !dbg !11718
  store i64 12, i64* %size, align 8, !dbg !11718
  call void @llvm.dbg.declare(metadata %struct.sync_serial_settings* %new_line, metadata !11719, metadata !DIExpression()), !dbg !11720
  call void @llvm.dbg.declare(metadata %struct.sync_serial_settings** %line, metadata !11721, metadata !DIExpression()), !dbg !11722
  %0 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !11723
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %0, i32 0, i32 1, !dbg !11724
  %ifru_settings = bitcast %union.anon.91* %ifr_ifru to %struct.if_settings*, !dbg !11724
  %ifs_ifsu = getelementptr inbounds %struct.if_settings, %struct.if_settings* %ifru_settings, i32 0, i32 2, !dbg !11725
  %sync = bitcast %union.anon.92* %ifs_ifsu to %struct.sync_serial_settings**, !dbg !11726
  %1 = load %struct.sync_serial_settings*, %struct.sync_serial_settings** %sync, align 8, !dbg !11726
  store %struct.sync_serial_settings* %1, %struct.sync_serial_settings** %line, align 8, !dbg !11722
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !11727, metadata !DIExpression()), !dbg !11728
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11729
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %2) #11, !dbg !11729
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !11729
  %3 = load i8*, i8** %priv, align 8, !dbg !11729
  %4 = bitcast i8* %3 to %struct.mgsl_struct*, !dbg !11729
  store %struct.mgsl_struct* %4, %struct.mgsl_struct** %info, align 8, !dbg !11728
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !11730, metadata !DIExpression()), !dbg !11731
  %5 = load i32, i32* @debug_level, align 4, !dbg !11732
  %cmp = icmp sge i32 %5, 3, !dbg !11734
  br i1 %cmp, label %if.then, label %if.end, !dbg !11735

if.then:                                          ; preds = %entry
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11736
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 0, !dbg !11737
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11736
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11738
  br label %if.end, !dbg !11738

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11739
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 1, !dbg !11741
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !11742
  %8 = load i32, i32* %count, align 4, !dbg !11742
  %tobool = icmp ne i32 %8, 0, !dbg !11739
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !11743

if.then2:                                         ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !11744
  br label %return, !dbg !11744

if.end3:                                          ; preds = %if.end
  %9 = load i32, i32* %cmd.addr, align 4, !dbg !11745
  %cmp4 = icmp ne i32 %9, 35146, !dbg !11747
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !11748

if.then5:                                         ; preds = %if.end3
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11749
  %11 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !11750
  %12 = load i32, i32* %cmd.addr, align 4, !dbg !11751
  %call6 = call i32 @hdlc_ioctl(%struct.net_device* %10, %struct.ifreq* %11, i32 %12) #11, !dbg !11752
  store i32 %call6, i32* %retval, align 4, !dbg !11753
  br label %return, !dbg !11753

if.end7:                                          ; preds = %if.end3
  %13 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !11754
  %ifr_ifru8 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %13, i32 0, i32 1, !dbg !11755
  %ifru_settings9 = bitcast %union.anon.91* %ifr_ifru8 to %struct.if_settings*, !dbg !11755
  %type = getelementptr inbounds %struct.if_settings, %struct.if_settings* %ifru_settings9, i32 0, i32 0, !dbg !11756
  %14 = load i32, i32* %type, align 8, !dbg !11756
  switch i32 %14, label %sw.default100 [
    i32 1, label %sw.bb
    i32 4101, label %sw.bb44
  ], !dbg !11757

sw.bb:                                            ; preds = %if.end7
  %15 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !11758
  %ifr_ifru10 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %15, i32 0, i32 1, !dbg !11759
  %ifru_settings11 = bitcast %union.anon.91* %ifr_ifru10 to %struct.if_settings*, !dbg !11759
  %type12 = getelementptr inbounds %struct.if_settings, %struct.if_settings* %ifru_settings11, i32 0, i32 0, !dbg !11760
  store i32 4101, i32* %type12, align 8, !dbg !11761
  %16 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !11762
  %ifr_ifru13 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %16, i32 0, i32 1, !dbg !11764
  %ifru_settings14 = bitcast %union.anon.91* %ifr_ifru13 to %struct.if_settings*, !dbg !11764
  %size15 = getelementptr inbounds %struct.if_settings, %struct.if_settings* %ifru_settings14, i32 0, i32 1, !dbg !11765
  %17 = load i32, i32* %size15, align 4, !dbg !11765
  %conv = zext i32 %17 to i64, !dbg !11762
  %cmp16 = icmp ult i64 %conv, 12, !dbg !11766
  br i1 %cmp16, label %if.then18, label %if.end22, !dbg !11767

if.then18:                                        ; preds = %sw.bb
  %18 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !11768
  %ifr_ifru19 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %18, i32 0, i32 1, !dbg !11770
  %ifru_settings20 = bitcast %union.anon.91* %ifr_ifru19 to %struct.if_settings*, !dbg !11770
  %size21 = getelementptr inbounds %struct.if_settings, %struct.if_settings* %ifru_settings20, i32 0, i32 1, !dbg !11771
  store i32 12, i32* %size21, align 4, !dbg !11772
  store i32 -105, i32* %retval, align 4, !dbg !11773
  br label %return, !dbg !11773

if.end22:                                         ; preds = %sw.bb
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11774
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 70, !dbg !11775
  %flags23 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 2, !dbg !11776
  %20 = load i16, i16* %flags23, align 2, !dbg !11776
  %conv24 = zext i16 %20 to i32, !dbg !11774
  %and = and i32 %conv24, 36616, !dbg !11777
  store i32 %and, i32* %flags, align 4, !dbg !11778
  %21 = bitcast %struct.sync_serial_settings* %new_line to i8*, !dbg !11779
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 12, i1 false), !dbg !11779
  %22 = load i32, i32* %flags, align 4, !dbg !11780
  switch i32 %22, label %sw.default [
    i32 0, label %sw.bb25
    i32 2560, label %sw.bb26
    i32 2048, label %sw.bb28
    i32 8, label %sw.bb30
  ], !dbg !11781

sw.bb25:                                          ; preds = %if.end22
  %clock_type = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !11782
  store i32 1, i32* %clock_type, align 4, !dbg !11784
  br label %sw.epilog, !dbg !11785

sw.bb26:                                          ; preds = %if.end22
  %clock_type27 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !11786
  store i32 2, i32* %clock_type27, align 4, !dbg !11787
  br label %sw.epilog, !dbg !11788

sw.bb28:                                          ; preds = %if.end22
  %clock_type29 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !11789
  store i32 3, i32* %clock_type29, align 4, !dbg !11790
  br label %sw.epilog, !dbg !11791

sw.bb30:                                          ; preds = %if.end22
  %clock_type31 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !11792
  store i32 4, i32* %clock_type31, align 4, !dbg !11793
  br label %sw.epilog, !dbg !11794

sw.default:                                       ; preds = %if.end22
  %clock_type32 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !11795
  store i32 0, i32* %clock_type32, align 4, !dbg !11796
  br label %sw.epilog, !dbg !11797

sw.epilog:                                        ; preds = %sw.default, %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb25
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11798
  %params33 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 70, !dbg !11799
  %clock_speed = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params33, i32 0, i32 4, !dbg !11800
  %24 = load i64, i64* %clock_speed, align 8, !dbg !11800
  %conv34 = trunc i64 %24 to i32, !dbg !11798
  %clock_rate = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 0, !dbg !11801
  store i32 %conv34, i32* %clock_rate, align 4, !dbg !11802
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11803
  %params35 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 70, !dbg !11804
  %loopback = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params35, i32 0, i32 1, !dbg !11805
  %26 = load i8, i8* %loopback, align 8, !dbg !11805
  %conv36 = zext i8 %26 to i32, !dbg !11803
  %tobool37 = icmp ne i32 %conv36, 0, !dbg !11803
  %27 = zext i1 %tobool37 to i64, !dbg !11803
  %cond = select i1 %tobool37, i32 1, i32 0, !dbg !11803
  %conv38 = trunc i32 %cond to i16, !dbg !11803
  %loopback39 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 2, !dbg !11806
  store i16 %conv38, i16* %loopback39, align 4, !dbg !11807
  %28 = load %struct.sync_serial_settings*, %struct.sync_serial_settings** %line, align 8, !dbg !11808
  %29 = bitcast %struct.sync_serial_settings* %28 to i8*, !dbg !11808
  %30 = bitcast %struct.sync_serial_settings* %new_line to i8*, !dbg !11809
  store i8* %29, i8** %to.addr.i, align 8
  store i8* %30, i8** %from.addr.i, align 8
  store i64 12, i64* %n.addr.i, align 8
  %31 = load i8*, i8** %from.addr.i, align 8, !dbg !11810
  %32 = load i64, i64* %n.addr.i, align 8, !dbg !11810
  store i8* %31, i8** %addr.addr.i.i, align 8
  store i64 %32, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11702
  %33 = load i32, i32* %sz.i.i, align 4, !dbg !11811
  %cmp.i.i = icmp sge i32 %33, 0, !dbg !11811
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !11811

land.rhs.i.i:                                     ; preds = %sw.epilog
  %34 = load i32, i32* %sz.i.i, align 4, !dbg !11811
  %conv.i.i = sext i32 %34 to i64, !dbg !11811
  %35 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11811
  %cmp1.i.i = icmp ult i64 %conv.i.i, %35, !dbg !11811
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %sw.epilog
  %36 = phi i1 [ false, %sw.epilog ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !11813
  %lnot.i.i = xor i1 %36, true, !dbg !11811
  %lnot.ext.i.i = zext i1 %36 to i32, !dbg !11811
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11811
  br i1 %36, label %if.then.i.i, label %if.end10.i.i, !dbg !11814

if.then.i.i:                                      ; preds = %land.end.i.i
  %37 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11815
  %38 = call i1 @llvm.is.constant.i64(i64 %37) #10, !dbg !11818
  br i1 %38, label %if.else.i.i, label %if.then5.i.i, !dbg !11819

if.then5.i.i:                                     ; preds = %if.then.i.i
  %39 = load i32, i32* %sz.i.i, align 4, !dbg !11820
  %40 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11821
  call void @copy_overflow(i32 %39, i64 %40) #14, !dbg !11822
  br label %if.end9.i.i, !dbg !11822

if.else.i.i:                                      ; preds = %if.then.i.i
  %41 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11823
  %tobool6.i.i = trunc i8 %41 to i1, !dbg !11823
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !11825

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !11826
  br label %if.end.i.i, !dbg !11826

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !11827
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11828
  br label %check_copy_size.exit.i, !dbg !11828

if.end10.i.i:                                     ; preds = %land.end.i.i
  %42 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11703
  %cmp11.i.i = icmp ugt i64 %42, 2147483647, !dbg !11703
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11703
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11703
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11703
  %43 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11829
  %tobool17.i.i = icmp ne i32 %43, 0, !dbg !11829
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !11829
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !11829
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !11829
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11703

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !11831, !srcloc !11834
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !11835, !srcloc !11837
  br label %if.end31.i.i, !dbg !11838

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %44 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11703
  %tobool32.i.i = icmp ne i32 %44, 0, !dbg !11703
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11703
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11703
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11703
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !11829
  %45 = load i64, i64* %tmp.i.i, align 8, !dbg !11703
  %tobool38.i.i = icmp ne i64 %45, 0, !dbg !11839
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !11840

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11841
  br label %check_copy_size.exit.i, !dbg !11841

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %46 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !11842
  %47 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11843
  %48 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11844
  %tobool41.i.i = trunc i8 %48 to i1, !dbg !11844
  call void @check_object_size(i8* %46, i64 %47, i1 zeroext %tobool41.i.i) #14, !dbg !11845
  store i1 true, i1* %retval.i.i, align 1, !dbg !11846
  br label %check_copy_size.exit.i, !dbg !11846

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %49 = load i1, i1* %retval.i.i, align 1, !dbg !11847
  %lnot.i = xor i1 %49, true, !dbg !11810
  %lnot.ext.i = zext i1 %49 to i32, !dbg !11810
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !11810
  br i1 %49, label %if.then.i, label %copy_to_user.exit, !dbg !11848

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %50 = load i8*, i8** %to.addr.i, align 8, !dbg !11849
  %51 = load i8*, i8** %from.addr.i, align 8, !dbg !11850
  %52 = load i64, i64* %n.addr.i, align 8, !dbg !11851
  %call2.i = call i64 @_copy_to_user(i8* %50, i8* %51, i64 %52) #14, !dbg !11852
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !11853
  br label %copy_to_user.exit, !dbg !11854

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %53 = load i64, i64* %n.addr.i, align 8, !dbg !11855
  %tobool41 = icmp ne i64 %53, 0, !dbg !11856
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !11857

if.then42:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !11858
  br label %return, !dbg !11858

if.end43:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !11859
  br label %return, !dbg !11859

sw.bb44:                                          ; preds = %if.end7
  %call45 = call zeroext i1 @capable(i32 12) #11, !dbg !11860
  br i1 %call45, label %if.end47, label %if.then46, !dbg !11862

if.then46:                                        ; preds = %sw.bb44
  store i32 -1, i32* %retval, align 4, !dbg !11863
  br label %return, !dbg !11863

if.end47:                                         ; preds = %sw.bb44
  %54 = bitcast %struct.sync_serial_settings* %new_line to i8*, !dbg !11864
  %55 = load %struct.sync_serial_settings*, %struct.sync_serial_settings** %line, align 8, !dbg !11865
  %56 = bitcast %struct.sync_serial_settings* %55 to i8*, !dbg !11865
  store i8* %54, i8** %to.addr.i109, align 8
  store i8* %56, i8** %from.addr.i110, align 8
  store i64 12, i64* %n.addr.i111, align 8
  %57 = load i8*, i8** %to.addr.i109, align 8, !dbg !11866
  %58 = load i64, i64* %n.addr.i111, align 8, !dbg !11866
  store i8* %57, i8** %addr.addr.i.i103, align 8
  store i64 %58, i64* %bytes.addr.i.i104, align 8
  store i8 0, i8* %is_source.addr.i.i105, align 1
  store i32 -1, i32* %sz.i.i106, align 4, !dbg !11683
  %59 = load i32, i32* %sz.i.i106, align 4, !dbg !11867
  %cmp.i.i112 = icmp sge i32 %59, 0, !dbg !11867
  br i1 %cmp.i.i112, label %land.rhs.i.i115, label %land.end.i.i119, !dbg !11867

land.rhs.i.i115:                                  ; preds = %if.end47
  %60 = load i32, i32* %sz.i.i106, align 4, !dbg !11867
  %conv.i.i113 = sext i32 %60 to i64, !dbg !11867
  %61 = load i64, i64* %bytes.addr.i.i104, align 8, !dbg !11867
  %cmp1.i.i114 = icmp ult i64 %conv.i.i113, %61, !dbg !11867
  br label %land.end.i.i119

land.end.i.i119:                                  ; preds = %land.rhs.i.i115, %if.end47
  %62 = phi i1 [ false, %if.end47 ], [ %cmp1.i.i114, %land.rhs.i.i115 ], !dbg !11868
  %lnot.i.i116 = xor i1 %62, true, !dbg !11867
  %lnot.ext.i.i117 = zext i1 %62 to i32, !dbg !11867
  %conv4.i.i118 = sext i32 %lnot.ext.i.i117 to i64, !dbg !11867
  br i1 %62, label %if.then.i.i120, label %if.end10.i.i135, !dbg !11869

if.then.i.i120:                                   ; preds = %land.end.i.i119
  %63 = load i64, i64* %bytes.addr.i.i104, align 8, !dbg !11870
  %64 = call i1 @llvm.is.constant.i64(i64 %63) #10, !dbg !11871
  br i1 %64, label %if.else.i.i123, label %if.then5.i.i121, !dbg !11872

if.then5.i.i121:                                  ; preds = %if.then.i.i120
  %65 = load i32, i32* %sz.i.i106, align 4, !dbg !11873
  %66 = load i64, i64* %bytes.addr.i.i104, align 8, !dbg !11874
  call void @copy_overflow(i32 %65, i64 %66) #14, !dbg !11875
  br label %if.end9.i.i127, !dbg !11875

if.else.i.i123:                                   ; preds = %if.then.i.i120
  %67 = load i8, i8* %is_source.addr.i.i105, align 1, !dbg !11876
  %tobool6.i.i122 = trunc i8 %67 to i1, !dbg !11876
  br i1 %tobool6.i.i122, label %if.then7.i.i124, label %if.else8.i.i125, !dbg !11877

if.then7.i.i124:                                  ; preds = %if.else.i.i123
  call void @__bad_copy_from() #14, !dbg !11878
  br label %if.end.i.i126, !dbg !11878

if.else8.i.i125:                                  ; preds = %if.else.i.i123
  call void @__bad_copy_to() #14, !dbg !11879
  br label %if.end.i.i126

if.end.i.i126:                                    ; preds = %if.else8.i.i125, %if.then7.i.i124
  br label %if.end9.i.i127

if.end9.i.i127:                                   ; preds = %if.end.i.i126, %if.then5.i.i121
  store i1 false, i1* %retval.i.i102, align 1, !dbg !11880
  br label %check_copy_size.exit.i149, !dbg !11880

if.end10.i.i135:                                  ; preds = %land.end.i.i119
  %68 = load i64, i64* %bytes.addr.i.i104, align 8, !dbg !11687
  %cmp11.i.i128 = icmp ugt i64 %68, 2147483647, !dbg !11687
  %lnot13.i.i129 = xor i1 %cmp11.i.i128, true, !dbg !11687
  %lnot.ext16.i.i130 = zext i1 %cmp11.i.i128 to i32, !dbg !11687
  store i32 %lnot.ext16.i.i130, i32* %__ret_warn_on.i.i107, align 4, !dbg !11687
  %69 = load i32, i32* %__ret_warn_on.i.i107, align 4, !dbg !11881
  %tobool17.i.i131 = icmp ne i32 %69, 0, !dbg !11881
  %lnot18.i.i132 = xor i1 %tobool17.i.i131, true, !dbg !11881
  %lnot.ext21.i.i133 = zext i1 %tobool17.i.i131 to i32, !dbg !11881
  %conv22.i.i134 = sext i32 %lnot.ext21.i.i133 to i64, !dbg !11881
  br i1 %tobool17.i.i131, label %if.then24.i.i136, label %if.end31.i.i142, !dbg !11687

if.then24.i.i136:                                 ; preds = %if.end10.i.i135
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !11882, !srcloc !11834
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !11883, !srcloc !11837
  br label %if.end31.i.i142, !dbg !11884

if.end31.i.i142:                                  ; preds = %if.then24.i.i136, %if.end10.i.i135
  %70 = load i32, i32* %__ret_warn_on.i.i107, align 4, !dbg !11687
  %tobool32.i.i137 = icmp ne i32 %70, 0, !dbg !11687
  %lnot33.i.i138 = xor i1 %tobool32.i.i137, true, !dbg !11687
  %lnot.ext36.i.i139 = zext i1 %tobool32.i.i137 to i32, !dbg !11687
  %conv37.i.i140 = sext i32 %lnot.ext36.i.i139 to i64, !dbg !11687
  store i64 %conv37.i.i140, i64* %tmp.i.i108, align 8, !dbg !11881
  %71 = load i64, i64* %tmp.i.i108, align 8, !dbg !11687
  %tobool38.i.i141 = icmp ne i64 %71, 0, !dbg !11885
  br i1 %tobool38.i.i141, label %if.then39.i.i143, label %if.end40.i.i145, !dbg !11886

if.then39.i.i143:                                 ; preds = %if.end31.i.i142
  store i1 false, i1* %retval.i.i102, align 1, !dbg !11887
  br label %check_copy_size.exit.i149, !dbg !11887

if.end40.i.i145:                                  ; preds = %if.end31.i.i142
  %72 = load i8*, i8** %addr.addr.i.i103, align 8, !dbg !11888
  %73 = load i64, i64* %bytes.addr.i.i104, align 8, !dbg !11889
  %74 = load i8, i8* %is_source.addr.i.i105, align 1, !dbg !11890
  %tobool41.i.i144 = trunc i8 %74 to i1, !dbg !11890
  call void @check_object_size(i8* %72, i64 %73, i1 zeroext %tobool41.i.i144) #14, !dbg !11891
  store i1 true, i1* %retval.i.i102, align 1, !dbg !11892
  br label %check_copy_size.exit.i149, !dbg !11892

check_copy_size.exit.i149:                        ; preds = %if.end40.i.i145, %if.then39.i.i143, %if.end9.i.i127
  %75 = load i1, i1* %retval.i.i102, align 1, !dbg !11893
  %lnot.i146 = xor i1 %75, true, !dbg !11866
  %lnot.ext.i147 = zext i1 %75 to i32, !dbg !11866
  %conv.i148 = sext i32 %lnot.ext.i147 to i64, !dbg !11866
  br i1 %75, label %if.then.i151, label %copy_from_user.exit, !dbg !11894

if.then.i151:                                     ; preds = %check_copy_size.exit.i149
  %76 = load i8*, i8** %to.addr.i109, align 8, !dbg !11895
  %77 = load i8*, i8** %from.addr.i110, align 8, !dbg !11896
  %78 = load i64, i64* %n.addr.i111, align 8, !dbg !11897
  %call2.i150 = call i64 @_copy_from_user(i8* %76, i8* %77, i64 %78) #14, !dbg !11898
  store i64 %call2.i150, i64* %n.addr.i111, align 8, !dbg !11899
  br label %copy_from_user.exit, !dbg !11900

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i149, %if.then.i151
  %79 = load i64, i64* %n.addr.i111, align 8, !dbg !11901
  %tobool49 = icmp ne i64 %79, 0, !dbg !11902
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !11903

if.then50:                                        ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !11904
  br label %return, !dbg !11904

if.end51:                                         ; preds = %copy_from_user.exit
  %clock_type52 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !11905
  %80 = load i32, i32* %clock_type52, align 4, !dbg !11905
  switch i32 %80, label %sw.default62 [
    i32 1, label %sw.bb53
    i32 4, label %sw.bb54
    i32 2, label %sw.bb55
    i32 3, label %sw.bb56
    i32 0, label %sw.bb57
  ], !dbg !11906

sw.bb53:                                          ; preds = %if.end51
  store i32 0, i32* %flags, align 4, !dbg !11907
  br label %sw.epilog63, !dbg !11909

sw.bb54:                                          ; preds = %if.end51
  store i32 8, i32* %flags, align 4, !dbg !11910
  br label %sw.epilog63, !dbg !11911

sw.bb55:                                          ; preds = %if.end51
  store i32 2560, i32* %flags, align 4, !dbg !11912
  br label %sw.epilog63, !dbg !11913

sw.bb56:                                          ; preds = %if.end51
  store i32 2048, i32* %flags, align 4, !dbg !11914
  br label %sw.epilog63, !dbg !11915

sw.bb57:                                          ; preds = %if.end51
  %81 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11916
  %params58 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %81, i32 0, i32 70, !dbg !11917
  %flags59 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params58, i32 0, i32 2, !dbg !11918
  %82 = load i16, i16* %flags59, align 2, !dbg !11918
  %conv60 = zext i16 %82 to i32, !dbg !11916
  %and61 = and i32 %conv60, 36616, !dbg !11919
  store i32 %and61, i32* %flags, align 4, !dbg !11920
  br label %sw.epilog63, !dbg !11921

sw.default62:                                     ; preds = %if.end51
  store i32 -22, i32* %retval, align 4, !dbg !11922
  br label %return, !dbg !11922

sw.epilog63:                                      ; preds = %sw.bb57, %sw.bb56, %sw.bb55, %sw.bb54, %sw.bb53
  %loopback64 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 2, !dbg !11923
  %83 = load i16, i16* %loopback64, align 4, !dbg !11923
  %conv65 = zext i16 %83 to i32, !dbg !11925
  %cmp66 = icmp ne i32 %conv65, 0, !dbg !11926
  br i1 %cmp66, label %land.lhs.true, label %if.end73, !dbg !11927

land.lhs.true:                                    ; preds = %sw.epilog63
  %loopback68 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 2, !dbg !11928
  %84 = load i16, i16* %loopback68, align 4, !dbg !11928
  %conv69 = zext i16 %84 to i32, !dbg !11929
  %cmp70 = icmp ne i32 %conv69, 1, !dbg !11930
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !11931

if.then72:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !11932
  br label %return, !dbg !11932

if.end73:                                         ; preds = %land.lhs.true, %sw.epilog63
  %85 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11933
  %params74 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %85, i32 0, i32 70, !dbg !11934
  %flags75 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params74, i32 0, i32 2, !dbg !11935
  %86 = load i16, i16* %flags75, align 2, !dbg !11936
  %conv76 = zext i16 %86 to i32, !dbg !11936
  %and77 = and i32 %conv76, -36617, !dbg !11936
  %conv78 = trunc i32 %and77 to i16, !dbg !11936
  store i16 %conv78, i16* %flags75, align 2, !dbg !11936
  %87 = load i32, i32* %flags, align 4, !dbg !11937
  %88 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11938
  %params79 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %88, i32 0, i32 70, !dbg !11939
  %flags80 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params79, i32 0, i32 2, !dbg !11940
  %89 = load i16, i16* %flags80, align 2, !dbg !11941
  %conv81 = zext i16 %89 to i32, !dbg !11941
  %or = or i32 %conv81, %87, !dbg !11941
  %conv82 = trunc i32 %or to i16, !dbg !11941
  store i16 %conv82, i16* %flags80, align 2, !dbg !11941
  %loopback83 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 2, !dbg !11942
  %90 = load i16, i16* %loopback83, align 4, !dbg !11942
  %conv84 = trunc i16 %90 to i8, !dbg !11943
  %91 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11944
  %params85 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %91, i32 0, i32 70, !dbg !11945
  %loopback86 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params85, i32 0, i32 1, !dbg !11946
  store i8 %conv84, i8* %loopback86, align 8, !dbg !11947
  %92 = load i32, i32* %flags, align 4, !dbg !11948
  %and87 = and i32 %92, 2560, !dbg !11950
  %tobool88 = icmp ne i32 %and87, 0, !dbg !11950
  br i1 %tobool88, label %if.then89, label %if.else, !dbg !11951

if.then89:                                        ; preds = %if.end73
  %clock_rate90 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 0, !dbg !11952
  %93 = load i32, i32* %clock_rate90, align 4, !dbg !11952
  %conv91 = zext i32 %93 to i64, !dbg !11953
  %94 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11954
  %params92 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %94, i32 0, i32 70, !dbg !11955
  %clock_speed93 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params92, i32 0, i32 4, !dbg !11956
  store i64 %conv91, i64* %clock_speed93, align 8, !dbg !11957
  br label %if.end96, !dbg !11954

if.else:                                          ; preds = %if.end73
  %95 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11958
  %params94 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %95, i32 0, i32 70, !dbg !11959
  %clock_speed95 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params94, i32 0, i32 4, !dbg !11960
  store i64 0, i64* %clock_speed95, align 8, !dbg !11961
  br label %if.end96

if.end96:                                         ; preds = %if.else, %if.then89
  %96 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11962
  %netcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %96, i32 0, i32 89, !dbg !11964
  %97 = load i32, i32* %netcount, align 4, !dbg !11964
  %tobool97 = icmp ne i32 %97, 0, !dbg !11962
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !11965

if.then98:                                        ; preds = %if.end96
  %98 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !11966
  call void @mgsl_program_hw(%struct.mgsl_struct* %98) #11, !dbg !11967
  br label %if.end99, !dbg !11967

if.end99:                                         ; preds = %if.then98, %if.end96
  store i32 0, i32* %retval, align 4, !dbg !11968
  br label %return, !dbg !11968

sw.default100:                                    ; preds = %if.end7
  %99 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11969
  %100 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !11970
  %101 = load i32, i32* %cmd.addr, align 4, !dbg !11971
  %call101 = call i32 @hdlc_ioctl(%struct.net_device* %99, %struct.ifreq* %100, i32 %101) #11, !dbg !11972
  store i32 %call101, i32* %retval, align 4, !dbg !11973
  br label %return, !dbg !11973

return:                                           ; preds = %sw.default100, %if.end99, %if.then72, %sw.default62, %if.then50, %if.then46, %if.end43, %if.then42, %if.then18, %if.then5, %if.then2
  %102 = load i32, i32* %retval, align 4, !dbg !11974
  ret i32 %102, !dbg !11974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hdlcdev_tx_timeout(%struct.net_device* %dev, i32 %txqueue) #1 !dbg !11975 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !9306, metadata !DIExpression()), !dbg !11976
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !11978
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !11979
  %dev.addr = alloca %struct.net_device*, align 8
  %txqueue.addr = alloca i32, align 4
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11986, metadata !DIExpression()), !dbg !11987
  store i32 %txqueue, i32* %txqueue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txqueue.addr, metadata !11988, metadata !DIExpression()), !dbg !11989
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !11990, metadata !DIExpression()), !dbg !11991
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11992
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !11992
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !11992
  %1 = load i8*, i8** %priv, align 8, !dbg !11992
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !11992
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !11991
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11993, metadata !DIExpression()), !dbg !11994
  %3 = load i32, i32* @debug_level, align 4, !dbg !11995
  %cmp = icmp sge i32 %3, 3, !dbg !11997
  br i1 %cmp, label %if.then, label %if.end, !dbg !11998

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11999
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 0, !dbg !12000
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11999
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i8* %arraydecay) #12, !dbg !12001
  br label %if.end, !dbg !12001

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12002
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 24, !dbg !12003
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 5, !dbg !12004
  %6 = load i64, i64* %tx_errors, align 8, !dbg !12005
  %inc = add i64 %6, 1, !dbg !12005
  store i64 %inc, i64* %tx_errors, align 8, !dbg !12005
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12006
  %stats2 = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 24, !dbg !12007
  %tx_aborted_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats2, i32 0, i32 16, !dbg !12008
  %8 = load i64, i64* %tx_aborted_errors, align 8, !dbg !12009
  %inc3 = add i64 %8, 1, !dbg !12009
  store i64 %inc3, i64* %tx_aborted_errors, align 8, !dbg !12009
  br label %do.body, !dbg !12010

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !12011

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12012, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12015, metadata !DIExpression()), !dbg !12014
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !12014
  %conv = zext i1 %cmp5 to i32, !dbg !12014
  store i32 1, i32* %tmp, align 4, !dbg !12014
  %9 = load i32, i32* %tmp, align 4, !dbg !12014
  br label %do.body6, !dbg !12016

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !12017

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !12018

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !12020, metadata !DIExpression()), !dbg !12023
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !12024, metadata !DIExpression()), !dbg !12023
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !12023
  %conv12 = zext i1 %cmp11 to i32, !dbg !12023
  store i32 1, i32* %tmp13, align 4, !dbg !12023
  %10 = load i32, i32* %tmp13, align 4, !dbg !12023
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !12025
  store i64 %call14, i64* %flags, align 8, !dbg !12025
  br label %do.end, !dbg !12025

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !12018

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !12017

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12026, !srcloc !12027
  br label %do.body17, !dbg !12026

do.body17:                                        ; preds = %do.body16
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12028
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 17, !dbg !12028
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12029
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !12030
  %rlock.i = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !12030
  br label %do.end19, !dbg !12028

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !12026

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !12017

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !12016

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !12011

do.end23:                                         ; preds = %do.end22
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12031
  call void @usc_stop_transmitter(%struct.mgsl_struct* %14) #11, !dbg !12032
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12033
  %irq_spinlock24 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 17, !dbg !12034
  %16 = load i64, i64* %flags, align 8, !dbg !12035
  store %struct.spinlock* %irq_spinlock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !12036
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !12036
  store i32 1, i32* %tmp.i, align 4, !dbg !12036
  %17 = load i32, i32* %tmp.i, align 4, !dbg !12036
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !12037
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !12037
  store i32 1, i32* %tmp8.i, align 4, !dbg !12037
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !12037
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !12038
  call void @arch_local_irq_restore(i64 %19) #14, !dbg !12038
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12039, !srcloc !9373
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !12040
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !12040
  %rlock.i26 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !12040
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12041
  call void @netif_wake_queue(%struct.net_device* %22) #11, !dbg !12042
  ret void, !dbg !12043
}

; Function Attrs: noredzone
declare dso_local i32 @hdlc_open(%struct.net_device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @startup(%struct.mgsl_struct* %info) #1 !dbg !12044 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %retval1 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !12045, metadata !DIExpression()), !dbg !12046
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !12047, metadata !DIExpression()), !dbg !12048
  store i32 0, i32* %retval1, align 4, !dbg !12048
  %0 = load i32, i32* @debug_level, align 4, !dbg !12049
  %cmp = icmp sge i32 %0, 3, !dbg !12051
  br i1 %cmp, label %if.then, label %if.end, !dbg !12052

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12053
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !12054
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !12053
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1751, i8* %arraydecay) #12, !dbg !12055
  br label %if.end, !dbg !12055

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12056
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 1, !dbg !12058
  %call2 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #11, !dbg !12059
  br i1 %call2, label %if.then3, label %if.end4, !dbg !12060

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12061
  br label %return, !dbg !12061

if.end4:                                          ; preds = %if.end
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12062
  %xmit_buf = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 9, !dbg !12064
  %4 = load i8*, i8** %xmit_buf, align 8, !dbg !12064
  %tobool = icmp ne i8* %4, null, !dbg !12062
  br i1 %tobool, label %if.end15, label %if.then5, !dbg !12065

if.then5:                                         ; preds = %if.end4
  %call6 = call i64 @get_zeroed_page(i32 3264) #11, !dbg !12066
  %5 = inttoptr i64 %call6 to i8*, !dbg !12068
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12069
  %xmit_buf7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 9, !dbg !12070
  store i8* %5, i8** %xmit_buf7, align 8, !dbg !12071
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12072
  %xmit_buf8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 9, !dbg !12074
  %8 = load i8*, i8** %xmit_buf8, align 8, !dbg !12074
  %tobool9 = icmp ne i8* %8, null, !dbg !12072
  br i1 %tobool9, label %if.end14, label %if.then10, !dbg !12075

if.then10:                                        ; preds = %if.then5
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12076
  %device_name11 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 56, !dbg !12078
  %arraydecay12 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name11, i64 0, i64 0, !dbg !12076
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1761, i8* %arraydecay12) #12, !dbg !12079
  store i32 -12, i32* %retval, align 4, !dbg !12080
  br label %return, !dbg !12080

if.end14:                                         ; preds = %if.then5
  br label %if.end15, !dbg !12081

if.end15:                                         ; preds = %if.end14, %if.end4
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12082
  %pending_bh = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 22, !dbg !12083
  store i32 0, i32* %pending_bh, align 4, !dbg !12084
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12085
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 4, !dbg !12086
  %12 = bitcast %struct.mgsl_icount* %icount to i8*, !dbg !12087
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 92, i1 false), !dbg !12087
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12088
  %tx_timer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 15, !dbg !12088
  call void @init_timer_key(%struct.timer_list* %tx_timer, void (%struct.timer_list*)* @mgsl_tx_timeout, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !12088
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12089
  %call16 = call i32 @mgsl_claim_resources(%struct.mgsl_struct* %14) #11, !dbg !12090
  store i32 %call16, i32* %retval1, align 4, !dbg !12091
  %15 = load i32, i32* %retval1, align 4, !dbg !12092
  %tobool17 = icmp ne i32 %15, 0, !dbg !12092
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !12094

if.then18:                                        ; preds = %if.end15
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12095
  %call19 = call i32 @mgsl_adapter_test(%struct.mgsl_struct* %16) #11, !dbg !12096
  store i32 %call19, i32* %retval1, align 4, !dbg !12097
  br label %if.end20, !dbg !12098

if.end20:                                         ; preds = %if.then18, %if.end15
  %17 = load i32, i32* %retval1, align 4, !dbg !12099
  %tobool21 = icmp ne i32 %17, 0, !dbg !12099
  br i1 %tobool21, label %if.then22, label %if.end30, !dbg !12101

if.then22:                                        ; preds = %if.end20
  %call23 = call zeroext i1 @capable(i32 21) #11, !dbg !12102
  br i1 %call23, label %land.lhs.true, label %if.end29, !dbg !12105

land.lhs.true:                                    ; preds = %if.then22
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12106
  %port24 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 1, !dbg !12107
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port24, i32 0, i32 1, !dbg !12108
  %19 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !12108
  %tobool25 = icmp ne %struct.tty_struct* %19, null, !dbg !12106
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !12109

if.then26:                                        ; preds = %land.lhs.true
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12110
  %port27 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 1, !dbg !12111
  %tty28 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port27, i32 0, i32 1, !dbg !12112
  %21 = load %struct.tty_struct*, %struct.tty_struct** %tty28, align 8, !dbg !12112
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %21, i32 0, i32 21, !dbg !12113
  call void @set_bit(i64 1, i64* %flags) #11, !dbg !12114
  br label %if.end29, !dbg !12114

if.end29:                                         ; preds = %if.then26, %land.lhs.true, %if.then22
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12115
  call void @mgsl_release_resources(%struct.mgsl_struct* %22) #11, !dbg !12116
  %23 = load i32, i32* %retval1, align 4, !dbg !12117
  store i32 %23, i32* %retval, align 4, !dbg !12118
  br label %return, !dbg !12118

if.end30:                                         ; preds = %if.end20
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12119
  call void @mgsl_change_params(%struct.mgsl_struct* %24) #11, !dbg !12120
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12121
  %port31 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 1, !dbg !12123
  %tty32 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port31, i32 0, i32 1, !dbg !12124
  %26 = load %struct.tty_struct*, %struct.tty_struct** %tty32, align 8, !dbg !12124
  %tobool33 = icmp ne %struct.tty_struct* %26, null, !dbg !12121
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !12125

if.then34:                                        ; preds = %if.end30
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12126
  %port35 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 1, !dbg !12127
  %tty36 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port35, i32 0, i32 1, !dbg !12128
  %28 = load %struct.tty_struct*, %struct.tty_struct** %tty36, align 8, !dbg !12128
  %flags37 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %28, i32 0, i32 21, !dbg !12129
  call void @clear_bit(i64 1, i64* %flags37) #11, !dbg !12130
  br label %if.end38, !dbg !12130

if.end38:                                         ; preds = %if.then34, %if.end30
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12131
  %port39 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 1, !dbg !12132
  call void @tty_port_set_initialized(%struct.tty_port* %port39, i1 zeroext true) #11, !dbg !12133
  store i32 0, i32* %retval, align 4, !dbg !12134
  br label %return, !dbg !12134

return:                                           ; preds = %if.end38, %if.end29, %if.then10, %if.then3
  %30 = load i32, i32* %retval, align 4, !dbg !12135
  ret i32 %30, !dbg !12135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_program_hw(%struct.mgsl_struct* %info) #1 !dbg !12136 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !9306, metadata !DIExpression()), !dbg !12137
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !12139
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !12140
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !12147, metadata !DIExpression()), !dbg !12148
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12149, metadata !DIExpression()), !dbg !12150
  br label %do.body, !dbg !12151

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12152

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12153, metadata !DIExpression()), !dbg !12155
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12156, metadata !DIExpression()), !dbg !12155
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12155
  %conv = zext i1 %cmp to i32, !dbg !12155
  store i32 1, i32* %tmp, align 4, !dbg !12155
  %0 = load i32, i32* %tmp, align 4, !dbg !12155
  br label %do.body2, !dbg !12157

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12158

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12159

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12161, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12165, metadata !DIExpression()), !dbg !12164
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12164
  %conv8 = zext i1 %cmp7 to i32, !dbg !12164
  store i32 1, i32* %tmp9, align 4, !dbg !12164
  %1 = load i32, i32* %tmp9, align 4, !dbg !12164
  %call = call i64 @arch_local_irq_save() #11, !dbg !12166
  store i64 %call, i64* %flags, align 8, !dbg !12166
  br label %do.end, !dbg !12166

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12159

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12158

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12167, !srcloc !12168
  br label %do.body12, !dbg !12167

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12169
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 17, !dbg !12169
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12170
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12171
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !12171
  br label %do.end14, !dbg !12169

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12167

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12158

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12157

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12152

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12172
  call void @usc_stop_receiver(%struct.mgsl_struct* %5) #11, !dbg !12173
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12174
  call void @usc_stop_transmitter(%struct.mgsl_struct* %6) #11, !dbg !12175
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12176
  %xmit_tail = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 11, !dbg !12177
  store i32 0, i32* %xmit_tail, align 4, !dbg !12178
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12179
  %xmit_head = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 10, !dbg !12180
  store i32 0, i32* %xmit_head, align 8, !dbg !12181
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12182
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 12, !dbg !12183
  store i32 0, i32* %xmit_cnt, align 8, !dbg !12184
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12185
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 70, !dbg !12187
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !12188
  %11 = load i64, i64* %mode, align 8, !dbg !12188
  %cmp19 = icmp eq i64 %11, 2, !dbg !12189
  br i1 %cmp19, label %if.then, label %lor.lhs.false, !dbg !12190

lor.lhs.false:                                    ; preds = %do.end18
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12191
  %params21 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 70, !dbg !12192
  %mode22 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params21, i32 0, i32 0, !dbg !12193
  %13 = load i64, i64* %mode22, align 8, !dbg !12193
  %cmp23 = icmp eq i64 %13, 6, !dbg !12194
  br i1 %cmp23, label %if.then, label %lor.lhs.false25, !dbg !12195

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12196
  %netcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 89, !dbg !12197
  %15 = load i32, i32* %netcount, align 4, !dbg !12197
  %tobool = icmp ne i32 %15, 0, !dbg !12196
  br i1 %tobool, label %if.then, label %if.else, !dbg !12198

if.then:                                          ; preds = %lor.lhs.false25, %lor.lhs.false, %do.end18
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12199
  call void @usc_set_sync_mode(%struct.mgsl_struct* %16) #11, !dbg !12200
  br label %if.end, !dbg !12200

if.else:                                          ; preds = %lor.lhs.false25
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12201
  call void @usc_set_async_mode(%struct.mgsl_struct* %17) #11, !dbg !12202
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12203
  call void @usc_set_serial_signals(%struct.mgsl_struct* %18) #11, !dbg !12204
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12205
  %dcd_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 26, !dbg !12206
  store i32 0, i32* %dcd_chkcount, align 4, !dbg !12207
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12208
  %cts_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 27, !dbg !12209
  store i32 0, i32* %cts_chkcount, align 8, !dbg !12210
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12211
  %ri_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 29, !dbg !12212
  store i32 0, i32* %ri_chkcount, align 8, !dbg !12213
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12214
  %dsr_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 28, !dbg !12215
  store i32 0, i32* %dsr_chkcount, align 4, !dbg !12216
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12217
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12217
  %call26 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %24, i16 zeroext 30) #11, !dbg !12217
  %conv27 = zext i16 %call26 to i32, !dbg !12217
  %or = or i32 %conv27, 4080, !dbg !12217
  %conv28 = trunc i32 %or to i16, !dbg !12217
  call void @usc_OutReg(%struct.mgsl_struct* %23, i16 zeroext 30, i16 zeroext %conv28) #11, !dbg !12217
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12218
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12218
  %call29 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %26, i16 zeroext 24) #11, !dbg !12218
  %conv30 = zext i16 %call29 to i32, !dbg !12218
  %and = and i32 %conv30, 65280, !dbg !12218
  %add = add i32 %and, 192, !dbg !12218
  %add31 = add i32 %add, 2, !dbg !12218
  %conv32 = trunc i32 %add31 to i16, !dbg !12218
  call void @usc_OutReg(%struct.mgsl_struct* %25, i16 zeroext 24, i16 zeroext %conv32) #11, !dbg !12218
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12219
  call void @usc_get_serial_signals(%struct.mgsl_struct* %27) #11, !dbg !12220
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12221
  %netcount33 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 89, !dbg !12223
  %29 = load i32, i32* %netcount33, align 4, !dbg !12223
  %tobool34 = icmp ne i32 %29, 0, !dbg !12221
  br i1 %tobool34, label %if.then38, label %lor.lhs.false35, !dbg !12224

lor.lhs.false35:                                  ; preds = %if.end
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12225
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 1, !dbg !12226
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !12227
  %31 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !12227
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %31, i32 0, i32 15, !dbg !12228
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !12229
  %32 = load i32, i32* %c_cflag, align 8, !dbg !12229
  %and36 = and i32 %32, 128, !dbg !12230
  %tobool37 = icmp ne i32 %and36, 0, !dbg !12230
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !12231

if.then38:                                        ; preds = %lor.lhs.false35, %if.end
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12232
  call void @usc_start_receiver(%struct.mgsl_struct* %33) #11, !dbg !12233
  br label %if.end39, !dbg !12233

if.end39:                                         ; preds = %if.then38, %lor.lhs.false35
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12234
  %irq_spinlock40 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 17, !dbg !12235
  %35 = load i64, i64* %flags, align 8, !dbg !12236
  store %struct.spinlock* %irq_spinlock40, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %35, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !12237
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !12237
  store i32 1, i32* %tmp.i, align 4, !dbg !12237
  %36 = load i32, i32* %tmp.i, align 4, !dbg !12237
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !12238
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !12238
  store i32 1, i32* %tmp8.i, align 4, !dbg !12238
  %37 = load i32, i32* %tmp8.i, align 4, !dbg !12238
  %38 = load i64, i64* %flags.addr.i, align 8, !dbg !12239
  call void @arch_local_irq_restore(i64 %38) #14, !dbg !12239
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12240, !srcloc !9373
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !12241
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !12241
  %rlock.i42 = bitcast %union.anon.1* %40 to %struct.raw_spinlock*, !dbg !12241
  ret void, !dbg !12242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_trans_update(%struct.net_device* %dev) #1 !dbg !12243 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12244, metadata !DIExpression()), !dbg !12245
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !12246, metadata !DIExpression()), !dbg !12247
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12248
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !12249
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !12247
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !12250
  %trans_start = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 9, !dbg !12252
  %2 = load i64, i64* %trans_start, align 8, !dbg !12252
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !12253
  %cmp = icmp ne i64 %2, %3, !dbg !12254
  br i1 %cmp, label %if.then, label %if.end, !dbg !12255

if.then:                                          ; preds = %entry
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !12256
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !12257
  %trans_start1 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 9, !dbg !12258
  store i64 %4, i64* %trans_start1, align 8, !dbg !12259
  br label %if.end, !dbg !12257

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12260
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_start_queue(%struct.net_device* %dev) #1 !dbg !12261 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !12262, metadata !DIExpression()), !dbg !12266
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12268, metadata !DIExpression()), !dbg !12269
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12270
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !12271
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !12272
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !12273
  call void @clear_bit(i64 0, i64* %state.i) #14, !dbg !12274
  ret void, !dbg !12275
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #4

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #1 !dbg !12276 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !12279, metadata !DIExpression()), !dbg !12280
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12281
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !12282
  %call = call zeroext i1 @test_bit(i64 0, i64* %iflags) #11, !dbg !12283
  ret i1 %call, !dbg !12284
}

; Function Attrs: noredzone
declare dso_local i64 @get_zeroed_page(i32) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_tx_timeout(%struct.timer_list* %t) #1 !dbg !12285 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !9306, metadata !DIExpression()), !dbg !12286
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !12288
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !12289
  %t.addr = alloca %struct.timer_list*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !12296, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !12298, metadata !DIExpression()), !dbg !12299
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12300, metadata !DIExpression()), !dbg !12302
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !12302
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !12302
  store i8* %1, i8** %__mptr, align 8, !dbg !12302
  br label %do.body, !dbg !12302

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12303

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12302
  %add.ptr = getelementptr i8, i8* %2, i64 -480, !dbg !12302
  %3 = bitcast i8* %add.ptr to %struct.mgsl_struct*, !dbg !12302
  store %struct.mgsl_struct* %3, %struct.mgsl_struct** %tmp, align 8, !dbg !12303
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %tmp, align 8, !dbg !12302
  store %struct.mgsl_struct* %4, %struct.mgsl_struct** %info, align 8, !dbg !12299
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12305, metadata !DIExpression()), !dbg !12306
  %5 = load i32, i32* @debug_level, align 4, !dbg !12307
  %cmp = icmp sge i32 %5, 3, !dbg !12309
  br i1 %cmp, label %if.then, label %if.end, !dbg !12310

if.then:                                          ; preds = %do.end
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12311
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 56, !dbg !12312
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !12311
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 7328, i8* %arraydecay) #12, !dbg !12313
  br label %if.end, !dbg !12313

if.end:                                           ; preds = %if.then, %do.end
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12314
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 52, !dbg !12316
  %8 = load i8, i8* %tx_active, align 4, !dbg !12316
  %tobool = trunc i8 %8 to i1, !dbg !12316
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !12317

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12318
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 70, !dbg !12319
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !12320
  %10 = load i64, i64* %mode, align 8, !dbg !12320
  %cmp1 = icmp eq i64 %10, 2, !dbg !12321
  br i1 %cmp1, label %if.then5, label %lor.lhs.false, !dbg !12322

lor.lhs.false:                                    ; preds = %land.lhs.true
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12323
  %params2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 70, !dbg !12324
  %mode3 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params2, i32 0, i32 0, !dbg !12325
  %12 = load i64, i64* %mode3, align 8, !dbg !12325
  %cmp4 = icmp eq i64 %12, 6, !dbg !12326
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12327

if.then5:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12328
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 4, !dbg !12330
  %txtimeout = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 14, !dbg !12331
  %14 = load i32, i32* %txtimeout, align 8, !dbg !12332
  %inc = add i32 %14, 1, !dbg !12332
  store i32 %inc, i32* %txtimeout, align 8, !dbg !12332
  br label %if.end6, !dbg !12333

if.end6:                                          ; preds = %if.then5, %lor.lhs.false, %if.end
  br label %do.body7, !dbg !12334

do.body7:                                         ; preds = %if.end6
  br label %do.body8, !dbg !12335

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12336, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12339, metadata !DIExpression()), !dbg !12338
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !12338
  %conv = zext i1 %cmp9 to i32, !dbg !12338
  store i32 1, i32* %tmp10, align 4, !dbg !12338
  %15 = load i32, i32* %tmp10, align 4, !dbg !12338
  br label %do.body11, !dbg !12340

do.body11:                                        ; preds = %do.body8
  br label %do.body12, !dbg !12341

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !12342

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !12344, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !12348, metadata !DIExpression()), !dbg !12347
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !12347
  %conv17 = zext i1 %cmp16 to i32, !dbg !12347
  store i32 1, i32* %tmp18, align 4, !dbg !12347
  %16 = load i32, i32* %tmp18, align 4, !dbg !12347
  %call19 = call i64 @arch_local_irq_save() #11, !dbg !12349
  store i64 %call19, i64* %flags, align 8, !dbg !12349
  br label %do.end20, !dbg !12349

do.end20:                                         ; preds = %do.body13
  br label %do.end21, !dbg !12342

do.end21:                                         ; preds = %do.end20
  br label %do.body22, !dbg !12341

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12350, !srcloc !12351
  br label %do.body23, !dbg !12350

do.body23:                                        ; preds = %do.body22
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12352
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 17, !dbg !12352
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12353
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !12354
  %rlock.i = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !12354
  br label %do.end25, !dbg !12352

do.end25:                                         ; preds = %do.body23
  br label %do.end26, !dbg !12350

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !12341

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !12340

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !12335

do.end29:                                         ; preds = %do.end28
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12355
  %tx_active30 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 52, !dbg !12356
  store i8 0, i8* %tx_active30, align 4, !dbg !12357
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12358
  %xmit_tail = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 11, !dbg !12359
  store i32 0, i32* %xmit_tail, align 4, !dbg !12360
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12361
  %xmit_head = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 10, !dbg !12362
  store i32 0, i32* %xmit_head, align 8, !dbg !12363
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12364
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 12, !dbg !12365
  store i32 0, i32* %xmit_cnt, align 8, !dbg !12366
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12367
  %params31 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 70, !dbg !12369
  %flags32 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params31, i32 0, i32 2, !dbg !12370
  %25 = load i16, i16* %flags32, align 2, !dbg !12370
  %conv33 = zext i16 %25 to i32, !dbg !12367
  %and = and i32 %conv33, 16384, !dbg !12371
  %tobool34 = icmp ne i32 %and, 0, !dbg !12371
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !12372

if.then35:                                        ; preds = %do.end29
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12373
  call void @usc_loopmode_cancel_transmit(%struct.mgsl_struct* %26) #11, !dbg !12374
  br label %if.end36, !dbg !12374

if.end36:                                         ; preds = %if.then35, %do.end29
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12375
  %irq_spinlock37 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 17, !dbg !12376
  %28 = load i64, i64* %flags, align 8, !dbg !12377
  store %struct.spinlock* %irq_spinlock37, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !12378
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !12378
  store i32 1, i32* %tmp.i, align 4, !dbg !12378
  %29 = load i32, i32* %tmp.i, align 4, !dbg !12378
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !12379
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !12379
  store i32 1, i32* %tmp8.i, align 4, !dbg !12379
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !12379
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !12380
  call void @arch_local_irq_restore(i64 %31) #14, !dbg !12380
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12381, !srcloc !9373
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !12382
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !12382
  %rlock.i42 = bitcast %union.anon.1* %33 to %struct.raw_spinlock*, !dbg !12382
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12383
  %netcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 89, !dbg !12385
  %35 = load i32, i32* %netcount, align 4, !dbg !12385
  %tobool38 = icmp ne i32 %35, 0, !dbg !12383
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !12386

if.then39:                                        ; preds = %if.end36
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12387
  call void @hdlcdev_tx_done(%struct.mgsl_struct* %36) #11, !dbg !12388
  br label %if.end40, !dbg !12388

if.else:                                          ; preds = %if.end36
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !12389
  call void @mgsl_bh_transmit(%struct.mgsl_struct* %37) #11, !dbg !12390
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then39
  ret void, !dbg !12391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_claim_resources(%struct.mgsl_struct* %info) #1 !dbg !12392 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !12393, metadata !DIExpression()), !dbg !12394
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12395
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 59, !dbg !12395
  %1 = load i32, i32* %io_base, align 4, !dbg !12395
  %conv = zext i32 %1 to i64, !dbg !12395
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12395
  %io_addr_size = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 60, !dbg !12395
  %3 = load i32, i32* %io_addr_size, align 8, !dbg !12395
  %conv1 = zext i32 %3 to i64, !dbg !12395
  %call = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %conv, i64 %conv1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 0) #11, !dbg !12395
  %cmp = icmp eq %struct.resource* %call, null, !dbg !12397
  br i1 %cmp, label %if.then, label %if.end, !dbg !12398

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12399
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !12401
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !12399
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12402
  %io_base3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 59, !dbg !12403
  %6 = load i32, i32* %io_base3, align 4, !dbg !12403
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3967, i8* %arraydecay, i32 %6) #12, !dbg !12404
  store i32 -19, i32* %retval, align 4, !dbg !12405
  br label %return, !dbg !12405

if.end:                                           ; preds = %entry
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12406
  %io_addr_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 61, !dbg !12407
  store i8 1, i8* %io_addr_requested, align 4, !dbg !12408
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12409
  %irq_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 62, !dbg !12411
  %9 = load i32, i32* %irq_level, align 8, !dbg !12411
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12412
  %irq_flags = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 63, !dbg !12413
  %11 = load i64, i64* %irq_flags, align 8, !dbg !12413
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12414
  %device_name5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 56, !dbg !12415
  %arraydecay6 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name5, i64 0, i64 0, !dbg !12414
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12416
  %14 = bitcast %struct.mgsl_struct* %13 to i8*, !dbg !12416
  %call7 = call i32 @request_irq(i32 %9, i32 (i32, i8*)* @mgsl_interrupt, i64 %11, i8* %arraydecay6, i8* %14) #11, !dbg !12417
  %cmp8 = icmp slt i32 %call7, 0, !dbg !12418
  br i1 %cmp8, label %if.then10, label %if.end15, !dbg !12419

if.then10:                                        ; preds = %if.end
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12420
  %device_name11 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 56, !dbg !12422
  %arraydecay12 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name11, i64 0, i64 0, !dbg !12420
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12423
  %irq_level13 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 62, !dbg !12424
  %17 = load i32, i32* %irq_level13, align 8, !dbg !12424
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3975, i8* %arraydecay12, i32 %17) #12, !dbg !12425
  br label %errout, !dbg !12426

if.end15:                                         ; preds = %if.end
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12427
  %irq_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 64, !dbg !12428
  store i8 1, i8* %irq_requested, align 8, !dbg !12429
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12430
  %phys_memory_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 77, !dbg !12430
  %20 = load i32, i32* %phys_memory_base, align 8, !dbg !12430
  %conv16 = zext i32 %20 to i64, !dbg !12430
  %call17 = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %conv16, i64 262144, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 0) #11, !dbg !12430
  %cmp18 = icmp eq %struct.resource* %call17, null, !dbg !12432
  br i1 %cmp18, label %if.then20, label %if.end25, !dbg !12433

if.then20:                                        ; preds = %if.end15
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12434
  %device_name21 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 56, !dbg !12436
  %arraydecay22 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name21, i64 0, i64 0, !dbg !12434
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12437
  %phys_memory_base23 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 77, !dbg !12438
  %23 = load i32, i32* %phys_memory_base23, align 8, !dbg !12438
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3982, i8* %arraydecay22, i32 %23) #12, !dbg !12439
  br label %errout, !dbg !12440

if.end25:                                         ; preds = %if.end15
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12441
  %shared_mem_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 78, !dbg !12442
  store i8 1, i8* %shared_mem_requested, align 4, !dbg !12443
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12444
  %phys_lcr_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 80, !dbg !12444
  %26 = load i32, i32* %phys_lcr_base, align 8, !dbg !12444
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12444
  %lcr_offset = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 81, !dbg !12444
  %28 = load i32, i32* %lcr_offset, align 4, !dbg !12444
  %add = add i32 %26, %28, !dbg !12444
  %conv26 = zext i32 %add to i64, !dbg !12444
  %call27 = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %conv26, i64 128, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 0) #11, !dbg !12444
  %cmp28 = icmp eq %struct.resource* %call27, null, !dbg !12446
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !12447

if.then30:                                        ; preds = %if.end25
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12448
  %device_name31 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 56, !dbg !12450
  %arraydecay32 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name31, i64 0, i64 0, !dbg !12448
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12451
  %phys_lcr_base33 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 80, !dbg !12452
  %31 = load i32, i32* %phys_lcr_base33, align 8, !dbg !12452
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12453
  %lcr_offset34 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 81, !dbg !12454
  %33 = load i32, i32* %lcr_offset34, align 4, !dbg !12454
  %add35 = add i32 %31, %33, !dbg !12455
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3988, i8* %arraydecay32, i32 %add35) #12, !dbg !12456
  br label %errout, !dbg !12457

if.end37:                                         ; preds = %if.end25
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12458
  %lcr_mem_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 82, !dbg !12459
  store i8 1, i8* %lcr_mem_requested, align 8, !dbg !12460
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12461
  %phys_memory_base38 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 77, !dbg !12462
  %36 = load i32, i32* %phys_memory_base38, align 8, !dbg !12462
  %conv39 = zext i32 %36 to i64, !dbg !12461
  %call40 = call i8* @ioremap(i64 %conv39, i64 262144) #11, !dbg !12463
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12464
  %memory_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 76, !dbg !12465
  store i8* %call40, i8** %memory_base, align 8, !dbg !12466
  %38 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12467
  %memory_base41 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %38, i32 0, i32 76, !dbg !12469
  %39 = load i8*, i8** %memory_base41, align 8, !dbg !12469
  %tobool = icmp ne i8* %39, null, !dbg !12467
  br i1 %tobool, label %if.end47, label %if.then42, !dbg !12470

if.then42:                                        ; preds = %if.end37
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12471
  %device_name43 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 56, !dbg !12473
  %arraydecay44 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name43, i64 0, i64 0, !dbg !12471
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12474
  %phys_memory_base45 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %41, i32 0, i32 77, !dbg !12475
  %42 = load i32, i32* %phys_memory_base45, align 8, !dbg !12475
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3996, i8* %arraydecay44, i32 %42) #12, !dbg !12476
  br label %errout, !dbg !12477

if.end47:                                         ; preds = %if.end37
  %43 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12478
  %call48 = call zeroext i1 @mgsl_memory_test(%struct.mgsl_struct* %43) #11, !dbg !12480
  br i1 %call48, label %if.end54, label %if.then49, !dbg !12481

if.then49:                                        ; preds = %if.end47
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12482
  %device_name50 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %44, i32 0, i32 56, !dbg !12484
  %arraydecay51 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name50, i64 0, i64 0, !dbg !12482
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12485
  %phys_memory_base52 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %45, i32 0, i32 77, !dbg !12486
  %46 = load i32, i32* %phys_memory_base52, align 8, !dbg !12486
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 4002, i8* %arraydecay51, i32 %46) #12, !dbg !12487
  br label %errout, !dbg !12488

if.end54:                                         ; preds = %if.end47
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12489
  %phys_lcr_base55 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 80, !dbg !12490
  %48 = load i32, i32* %phys_lcr_base55, align 8, !dbg !12490
  %conv56 = zext i32 %48 to i64, !dbg !12489
  %call57 = call i8* @ioremap(i64 %conv56, i64 4096) #11, !dbg !12491
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12492
  %lcr_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %49, i32 0, i32 79, !dbg !12493
  store i8* %call57, i8** %lcr_base, align 8, !dbg !12494
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12495
  %lcr_base58 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %50, i32 0, i32 79, !dbg !12497
  %51 = load i8*, i8** %lcr_base58, align 8, !dbg !12497
  %tobool59 = icmp ne i8* %51, null, !dbg !12495
  br i1 %tobool59, label %if.end65, label %if.then60, !dbg !12498

if.then60:                                        ; preds = %if.end54
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12499
  %device_name61 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %52, i32 0, i32 56, !dbg !12501
  %arraydecay62 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name61, i64 0, i64 0, !dbg !12499
  %53 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12502
  %phys_lcr_base63 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %53, i32 0, i32 80, !dbg !12503
  %54 = load i32, i32* %phys_lcr_base63, align 8, !dbg !12503
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 4009, i8* %arraydecay62, i32 %54) #12, !dbg !12504
  br label %errout, !dbg !12505

if.end65:                                         ; preds = %if.end54
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12506
  %lcr_offset66 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %55, i32 0, i32 81, !dbg !12507
  %56 = load i32, i32* %lcr_offset66, align 4, !dbg !12507
  %57 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12508
  %lcr_base67 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %57, i32 0, i32 79, !dbg !12509
  %58 = load i8*, i8** %lcr_base67, align 8, !dbg !12510
  %idx.ext = zext i32 %56 to i64, !dbg !12510
  %add.ptr = getelementptr i8, i8* %58, i64 %idx.ext, !dbg !12510
  store i8* %add.ptr, i8** %lcr_base67, align 8, !dbg !12510
  %59 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12511
  %call68 = call i32 @mgsl_allocate_dma_buffers(%struct.mgsl_struct* %59) #11, !dbg !12513
  %cmp69 = icmp slt i32 %call68, 0, !dbg !12514
  br i1 %cmp69, label %if.then71, label %if.end75, !dbg !12515

if.then71:                                        ; preds = %if.end65
  %60 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12516
  %device_name72 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %60, i32 0, i32 56, !dbg !12518
  %arraydecay73 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name72, i64 0, i64 0, !dbg !12516
  %61 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12519
  %dma_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %61, i32 0, i32 65, !dbg !12520
  %62 = load i32, i32* %dma_level, align 4, !dbg !12520
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 4016, i8* %arraydecay73, i32 %62) #12, !dbg !12521
  br label %errout, !dbg !12522

if.end75:                                         ; preds = %if.end65
  store i32 0, i32* %retval, align 4, !dbg !12523
  br label %return, !dbg !12523

errout:                                           ; preds = %if.then71, %if.then60, %if.then49, %if.then42, %if.then30, %if.then20, %if.then10
  call void @llvm.dbg.label(metadata !12524), !dbg !12525
  %63 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12526
  call void @mgsl_release_resources(%struct.mgsl_struct* %63) #11, !dbg !12527
  store i32 -19, i32* %retval, align 4, !dbg !12528
  br label %return, !dbg !12528

return:                                           ; preds = %errout, %if.end75, %if.then
  %64 = load i32, i32* %retval, align 4, !dbg !12529
  ret i32 %64, !dbg !12529
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_adapter_test(%struct.mgsl_struct* %info) #1 !dbg !12530 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !12531, metadata !DIExpression()), !dbg !12532
  %0 = load i32, i32* @debug_level, align 4, !dbg !12533
  %cmp = icmp sge i32 %0, 3, !dbg !12535
  br i1 %cmp, label %if.then, label %if.end, !dbg !12536

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12537
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !12538
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !12537
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 7143, i8* %arraydecay) #12, !dbg !12539
  br label %if.end, !dbg !12539

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12540
  %call1 = call zeroext i1 @mgsl_register_test(%struct.mgsl_struct* %2) #11, !dbg !12542
  br i1 %call1, label %if.end7, label %if.then2, !dbg !12543

if.then2:                                         ; preds = %if.end
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12544
  %init_error = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 73, !dbg !12546
  store i32 1, i32* %init_error, align 4, !dbg !12547
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12548
  %device_name3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !12549
  %arraydecay4 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name3, i64 0, i64 0, !dbg !12548
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12550
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 59, !dbg !12551
  %6 = load i32, i32* %io_base, align 4, !dbg !12551
  %conv = trunc i32 %6 to i16, !dbg !12552
  %conv5 = zext i16 %conv to i32, !dbg !12552
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 7148, i8* %arraydecay4, i32 %conv5) #12, !dbg !12553
  store i32 -19, i32* %retval, align 4, !dbg !12554
  br label %return, !dbg !12554

if.end7:                                          ; preds = %if.end
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12555
  %call8 = call zeroext i1 @mgsl_irq_test(%struct.mgsl_struct* %7) #11, !dbg !12557
  br i1 %call8, label %if.end16, label %if.then9, !dbg !12558

if.then9:                                         ; preds = %if.end7
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12559
  %init_error10 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 73, !dbg !12561
  store i32 3, i32* %init_error10, align 4, !dbg !12562
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12563
  %device_name11 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 56, !dbg !12564
  %arraydecay12 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name11, i64 0, i64 0, !dbg !12563
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12565
  %irq_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 62, !dbg !12566
  %11 = load i32, i32* %irq_level, align 8, !dbg !12566
  %conv13 = trunc i32 %11 to i16, !dbg !12567
  %conv14 = zext i16 %conv13 to i32, !dbg !12567
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 7155, i8* %arraydecay12, i32 %conv14) #12, !dbg !12568
  store i32 -19, i32* %retval, align 4, !dbg !12569
  br label %return, !dbg !12569

if.end16:                                         ; preds = %if.end7
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12570
  %call17 = call zeroext i1 @mgsl_dma_test(%struct.mgsl_struct* %12) #11, !dbg !12572
  br i1 %call17, label %if.end25, label %if.then18, !dbg !12573

if.then18:                                        ; preds = %if.end16
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12574
  %init_error19 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 73, !dbg !12576
  store i32 5, i32* %init_error19, align 4, !dbg !12577
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12578
  %device_name20 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 56, !dbg !12579
  %arraydecay21 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name20, i64 0, i64 0, !dbg !12578
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12580
  %dma_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 65, !dbg !12581
  %16 = load i32, i32* %dma_level, align 4, !dbg !12581
  %conv22 = trunc i32 %16 to i16, !dbg !12582
  %conv23 = zext i16 %conv22 to i32, !dbg !12582
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 7162, i8* %arraydecay21, i32 %conv23) #12, !dbg !12583
  store i32 -19, i32* %retval, align 4, !dbg !12584
  br label %return, !dbg !12584

if.end25:                                         ; preds = %if.end16
  %17 = load i32, i32* @debug_level, align 4, !dbg !12585
  %cmp26 = icmp sge i32 %17, 3, !dbg !12587
  br i1 %cmp26, label %if.then28, label %if.end32, !dbg !12588

if.then28:                                        ; preds = %if.end25
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12589
  %device_name29 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 56, !dbg !12590
  %arraydecay30 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name29, i64 0, i64 0, !dbg !12589
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 7168, i8* %arraydecay30) #12, !dbg !12591
  br label %if.end32, !dbg !12591

if.end32:                                         ; preds = %if.then28, %if.end25
  store i32 0, i32* %retval, align 4, !dbg !12592
  br label %return, !dbg !12592

return:                                           ; preds = %if.end32, %if.then18, %if.then9, %if.then2
  %19 = load i32, i32* %retval, align 4, !dbg !12593
  ret i32 %19, !dbg !12593
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #1 !dbg !12594 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12598, metadata !DIExpression()), !dbg !12600
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12602, metadata !DIExpression()), !dbg !12603
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12604, metadata !DIExpression()), !dbg !12612
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12614, metadata !DIExpression()), !dbg !12615
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12616, metadata !DIExpression()), !dbg !12617
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12618, metadata !DIExpression()), !dbg !12619
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12620
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12621
  %div = sdiv i64 %1, 64, !dbg !12621
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12622
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12620
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12623
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12624
  %conv.i = trunc i64 %4 to i32, !dbg !12624
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !12625
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12626
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12626
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !12626
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12627
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12628
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !12629
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !12631
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !12632

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !12633
  %12 = bitcast i64* %11 to i8*, !dbg !12633
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12633
  %shr.i = ashr i64 %13, 3, !dbg !12633
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !12633
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !12635
  %and.i = and i64 %14, 7, !dbg !12635
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !12635
  %shl.i = shl i32 1, %sh_prom.i, !dbg !12635
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !12636, !srcloc !12637
  br label %arch_set_bit.exit, !dbg !12638

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !12639
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !12641
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !12642, !srcloc !12643
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !12644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_change_params(%struct.mgsl_struct* %info) #1 !dbg !12645 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %cflag = alloca i32, align 4
  %bits_per_char = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !12646, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.declare(metadata i32* %cflag, metadata !12648, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.declare(metadata i32* %bits_per_char, metadata !12650, metadata !DIExpression()), !dbg !12651
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12652
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 1, !dbg !12654
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !12655
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !12655
  %tobool = icmp ne %struct.tty_struct* %1, null, !dbg !12652
  br i1 %tobool, label %if.end, label %if.then, !dbg !12656

if.then:                                          ; preds = %entry
  br label %return, !dbg !12657

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @debug_level, align 4, !dbg !12658
  %cmp = icmp sge i32 %2, 3, !dbg !12660
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12661

if.then1:                                         ; preds = %if.end
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12662
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 56, !dbg !12663
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !12662
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1906, i8* %arraydecay) #12, !dbg !12664
  br label %if.end2, !dbg !12664

if.end2:                                          ; preds = %if.then1, %if.end
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12665
  %port3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 1, !dbg !12666
  %tty4 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port3, i32 0, i32 1, !dbg !12667
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty4, align 8, !dbg !12667
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 15, !dbg !12668
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !12669
  %6 = load i32, i32* %c_cflag, align 8, !dbg !12669
  store i32 %6, i32* %cflag, align 4, !dbg !12670
  %7 = load i32, i32* %cflag, align 4, !dbg !12671
  %and = and i32 %7, 4111, !dbg !12673
  %tobool5 = icmp ne i32 %and, 0, !dbg !12673
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !12674

if.then6:                                         ; preds = %if.end2
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12675
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 71, !dbg !12676
  %9 = load i8, i8* %serial_signals, align 8, !dbg !12677
  %conv = zext i8 %9 to i32, !dbg !12677
  %or = or i32 %conv, 160, !dbg !12677
  %conv7 = trunc i32 %or to i8, !dbg !12677
  store i8 %conv7, i8* %serial_signals, align 8, !dbg !12677
  br label %if.end12, !dbg !12675

if.else:                                          ; preds = %if.end2
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12678
  %serial_signals8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 71, !dbg !12679
  %11 = load i8, i8* %serial_signals8, align 8, !dbg !12680
  %conv9 = zext i8 %11 to i32, !dbg !12680
  %and10 = and i32 %conv9, -161, !dbg !12680
  %conv11 = trunc i32 %and10 to i8, !dbg !12680
  store i8 %conv11, i8* %serial_signals8, align 8, !dbg !12680
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then6
  %12 = load i32, i32* %cflag, align 4, !dbg !12681
  %and13 = and i32 %12, 48, !dbg !12682
  switch i32 %and13, label %sw.default [
    i32 0, label %sw.bb
    i32 16, label %sw.bb14
    i32 32, label %sw.bb17
    i32 48, label %sw.bb20
  ], !dbg !12683

sw.bb:                                            ; preds = %if.end12
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12684
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 70, !dbg !12686
  %data_bits = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 10, !dbg !12687
  store i8 5, i8* %data_bits, align 8, !dbg !12688
  br label %sw.epilog, !dbg !12689

sw.bb14:                                          ; preds = %if.end12
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12690
  %params15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 70, !dbg !12691
  %data_bits16 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params15, i32 0, i32 10, !dbg !12692
  store i8 6, i8* %data_bits16, align 8, !dbg !12693
  br label %sw.epilog, !dbg !12694

sw.bb17:                                          ; preds = %if.end12
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12695
  %params18 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 70, !dbg !12696
  %data_bits19 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params18, i32 0, i32 10, !dbg !12697
  store i8 7, i8* %data_bits19, align 8, !dbg !12698
  br label %sw.epilog, !dbg !12699

sw.bb20:                                          ; preds = %if.end12
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12700
  %params21 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 70, !dbg !12701
  %data_bits22 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params21, i32 0, i32 10, !dbg !12702
  store i8 8, i8* %data_bits22, align 8, !dbg !12703
  br label %sw.epilog, !dbg !12704

sw.default:                                       ; preds = %if.end12
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12705
  %params23 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 70, !dbg !12706
  %data_bits24 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params23, i32 0, i32 10, !dbg !12707
  store i8 7, i8* %data_bits24, align 8, !dbg !12708
  br label %sw.epilog, !dbg !12709

sw.epilog:                                        ; preds = %sw.default, %sw.bb20, %sw.bb17, %sw.bb14, %sw.bb
  %18 = load i32, i32* %cflag, align 4, !dbg !12710
  %and25 = and i32 %18, 64, !dbg !12712
  %tobool26 = icmp ne i32 %and25, 0, !dbg !12712
  br i1 %tobool26, label %if.then27, label %if.else29, !dbg !12713

if.then27:                                        ; preds = %sw.epilog
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12714
  %params28 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 70, !dbg !12715
  %stop_bits = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params28, i32 0, i32 11, !dbg !12716
  store i8 2, i8* %stop_bits, align 1, !dbg !12717
  br label %if.end32, !dbg !12714

if.else29:                                        ; preds = %sw.epilog
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12718
  %params30 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 70, !dbg !12719
  %stop_bits31 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params30, i32 0, i32 11, !dbg !12720
  store i8 1, i8* %stop_bits31, align 1, !dbg !12721
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then27
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12722
  %params33 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 70, !dbg !12723
  %parity = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params33, i32 0, i32 12, !dbg !12724
  store i8 0, i8* %parity, align 2, !dbg !12725
  %22 = load i32, i32* %cflag, align 4, !dbg !12726
  %and34 = and i32 %22, 256, !dbg !12728
  %tobool35 = icmp ne i32 %and34, 0, !dbg !12728
  br i1 %tobool35, label %if.then36, label %if.end52, !dbg !12729

if.then36:                                        ; preds = %if.end32
  %23 = load i32, i32* %cflag, align 4, !dbg !12730
  %and37 = and i32 %23, 512, !dbg !12733
  %tobool38 = icmp ne i32 %and37, 0, !dbg !12733
  br i1 %tobool38, label %if.then39, label %if.else42, !dbg !12734

if.then39:                                        ; preds = %if.then36
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12735
  %params40 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 70, !dbg !12736
  %parity41 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params40, i32 0, i32 12, !dbg !12737
  store i8 2, i8* %parity41, align 2, !dbg !12738
  br label %if.end45, !dbg !12735

if.else42:                                        ; preds = %if.then36
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12739
  %params43 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 70, !dbg !12740
  %parity44 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params43, i32 0, i32 12, !dbg !12741
  store i8 1, i8* %parity44, align 2, !dbg !12742
  br label %if.end45

if.end45:                                         ; preds = %if.else42, %if.then39
  %26 = load i32, i32* %cflag, align 4, !dbg !12743
  %and46 = and i32 %26, 1073741824, !dbg !12745
  %tobool47 = icmp ne i32 %and46, 0, !dbg !12745
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !12746

if.then48:                                        ; preds = %if.end45
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12747
  %params49 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 70, !dbg !12748
  %parity50 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params49, i32 0, i32 12, !dbg !12749
  store i8 3, i8* %parity50, align 2, !dbg !12750
  br label %if.end51, !dbg !12747

if.end51:                                         ; preds = %if.then48, %if.end45
  br label %if.end52, !dbg !12751

if.end52:                                         ; preds = %if.end51, %if.end32
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12752
  %params53 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 70, !dbg !12753
  %data_bits54 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params53, i32 0, i32 10, !dbg !12754
  %29 = load i8, i8* %data_bits54, align 8, !dbg !12754
  %conv55 = zext i8 %29 to i32, !dbg !12752
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12755
  %params56 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 70, !dbg !12756
  %stop_bits57 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params56, i32 0, i32 11, !dbg !12757
  %31 = load i8, i8* %stop_bits57, align 1, !dbg !12757
  %conv58 = zext i8 %31 to i32, !dbg !12755
  %add = add i32 %conv55, %conv58, !dbg !12758
  %add59 = add i32 %add, 1, !dbg !12759
  store i32 %add59, i32* %bits_per_char, align 4, !dbg !12760
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12761
  %params60 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 70, !dbg !12763
  %data_rate = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params60, i32 0, i32 9, !dbg !12764
  %33 = load i64, i64* %data_rate, align 8, !dbg !12764
  %cmp61 = icmp ule i64 %33, 460800, !dbg !12765
  br i1 %cmp61, label %if.then63, label %if.end70, !dbg !12766

if.then63:                                        ; preds = %if.end52
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12767
  %port64 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 1, !dbg !12768
  %tty65 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port64, i32 0, i32 1, !dbg !12769
  %35 = load %struct.tty_struct*, %struct.tty_struct** %tty65, align 8, !dbg !12769
  %call66 = call i32 @tty_get_baud_rate(%struct.tty_struct* %35) #11, !dbg !12770
  %conv67 = zext i32 %call66 to i64, !dbg !12770
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12771
  %params68 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %36, i32 0, i32 70, !dbg !12772
  %data_rate69 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params68, i32 0, i32 9, !dbg !12773
  store i64 %conv67, i64* %data_rate69, align 8, !dbg !12774
  br label %if.end70, !dbg !12771

if.end70:                                         ; preds = %if.then63, %if.end52
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12775
  %params71 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 70, !dbg !12777
  %data_rate72 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params71, i32 0, i32 9, !dbg !12778
  %38 = load i64, i64* %data_rate72, align 8, !dbg !12778
  %tobool73 = icmp ne i64 %38, 0, !dbg !12775
  br i1 %tobool73, label %if.then74, label %if.end79, !dbg !12779

if.then74:                                        ; preds = %if.end70
  %39 = load i32, i32* %bits_per_char, align 4, !dbg !12780
  %mul = mul i32 8000, %39, !dbg !12782
  %conv75 = sext i32 %mul to i64, !dbg !12783
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12784
  %params76 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 70, !dbg !12785
  %data_rate77 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params76, i32 0, i32 9, !dbg !12786
  %41 = load i64, i64* %data_rate77, align 8, !dbg !12786
  %div = udiv i64 %conv75, %41, !dbg !12787
  %conv78 = trunc i64 %div to i32, !dbg !12783
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12788
  %timeout = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 5, !dbg !12789
  store i32 %conv78, i32* %timeout, align 4, !dbg !12790
  br label %if.end79, !dbg !12791

if.end79:                                         ; preds = %if.then74, %if.end70
  %43 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12792
  %timeout80 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %43, i32 0, i32 5, !dbg !12793
  %44 = load i32, i32* %timeout80, align 4, !dbg !12794
  %add81 = add i32 %44, 5, !dbg !12794
  store i32 %add81, i32* %timeout80, align 4, !dbg !12794
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12795
  %port82 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %45, i32 0, i32 1, !dbg !12796
  %46 = load i32, i32* %cflag, align 4, !dbg !12797
  %and83 = and i32 %46, -2147483648, !dbg !12798
  %tobool84 = icmp ne i32 %and83, 0, !dbg !12797
  call void @tty_port_set_cts_flow(%struct.tty_port* %port82, i1 zeroext %tobool84) #11, !dbg !12799
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12800
  %port85 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 1, !dbg !12801
  %48 = load i32, i32* %cflag, align 4, !dbg !12802
  %neg = xor i32 %48, -1, !dbg !12803
  %and86 = and i32 %neg, 2048, !dbg !12804
  %tobool87 = icmp ne i32 %and86, 0, !dbg !12803
  call void @tty_port_set_check_carrier(%struct.tty_port* %port85, i1 zeroext %tobool87) #11, !dbg !12805
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12806
  %read_status_mask = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %49, i32 0, i32 7, !dbg !12807
  store i16 2, i16* %read_status_mask, align 4, !dbg !12808
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12809
  %port88 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %50, i32 0, i32 1, !dbg !12809
  %tty89 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port88, i32 0, i32 1, !dbg !12809
  %51 = load %struct.tty_struct*, %struct.tty_struct** %tty89, align 8, !dbg !12809
  %termios90 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %51, i32 0, i32 15, !dbg !12809
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios90, i32 0, i32 0, !dbg !12809
  %52 = load i32, i32* %c_iflag, align 8, !dbg !12809
  %and91 = and i32 %52, 16, !dbg !12809
  %tobool92 = icmp ne i32 %and91, 0, !dbg !12809
  br i1 %tobool92, label %if.then93, label %if.end98, !dbg !12811

if.then93:                                        ; preds = %if.end79
  %53 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12812
  %read_status_mask94 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %53, i32 0, i32 7, !dbg !12813
  %54 = load i16, i16* %read_status_mask94, align 4, !dbg !12814
  %conv95 = zext i16 %54 to i32, !dbg !12814
  %or96 = or i32 %conv95, 12, !dbg !12814
  %conv97 = trunc i32 %or96 to i16, !dbg !12814
  store i16 %conv97, i16* %read_status_mask94, align 4, !dbg !12814
  br label %if.end98, !dbg !12812

if.end98:                                         ; preds = %if.then93, %if.end79
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12815
  %port99 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %55, i32 0, i32 1, !dbg !12815
  %tty100 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port99, i32 0, i32 1, !dbg !12815
  %56 = load %struct.tty_struct*, %struct.tty_struct** %tty100, align 8, !dbg !12815
  %termios101 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %56, i32 0, i32 15, !dbg !12815
  %c_iflag102 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios101, i32 0, i32 0, !dbg !12815
  %57 = load i32, i32* %c_iflag102, align 8, !dbg !12815
  %and103 = and i32 %57, 2, !dbg !12815
  %tobool104 = icmp ne i32 %and103, 0, !dbg !12815
  br i1 %tobool104, label %if.then111, label %lor.lhs.false, !dbg !12817

lor.lhs.false:                                    ; preds = %if.end98
  %58 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12818
  %port105 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %58, i32 0, i32 1, !dbg !12818
  %tty106 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port105, i32 0, i32 1, !dbg !12818
  %59 = load %struct.tty_struct*, %struct.tty_struct** %tty106, align 8, !dbg !12818
  %termios107 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %59, i32 0, i32 15, !dbg !12818
  %c_iflag108 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios107, i32 0, i32 0, !dbg !12818
  %60 = load i32, i32* %c_iflag108, align 8, !dbg !12818
  %and109 = and i32 %60, 8, !dbg !12818
  %tobool110 = icmp ne i32 %and109, 0, !dbg !12818
  br i1 %tobool110, label %if.then111, label %if.end116, !dbg !12819

if.then111:                                       ; preds = %lor.lhs.false, %if.end98
  %61 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12820
  %read_status_mask112 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %61, i32 0, i32 7, !dbg !12821
  %62 = load i16, i16* %read_status_mask112, align 4, !dbg !12822
  %conv113 = zext i16 %62 to i32, !dbg !12822
  %or114 = or i32 %conv113, 32, !dbg !12822
  %conv115 = trunc i32 %or114 to i16, !dbg !12822
  store i16 %conv115, i16* %read_status_mask112, align 4, !dbg !12822
  br label %if.end116, !dbg !12820

if.end116:                                        ; preds = %if.then111, %lor.lhs.false
  %63 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12823
  %port117 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %63, i32 0, i32 1, !dbg !12823
  %tty118 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port117, i32 0, i32 1, !dbg !12823
  %64 = load %struct.tty_struct*, %struct.tty_struct** %tty118, align 8, !dbg !12823
  %termios119 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %64, i32 0, i32 15, !dbg !12823
  %c_iflag120 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios119, i32 0, i32 0, !dbg !12823
  %65 = load i32, i32* %c_iflag120, align 8, !dbg !12823
  %and121 = and i32 %65, 4, !dbg !12823
  %tobool122 = icmp ne i32 %and121, 0, !dbg !12823
  br i1 %tobool122, label %if.then123, label %if.end127, !dbg !12825

if.then123:                                       ; preds = %if.end116
  %66 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12826
  %ignore_status_mask = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %66, i32 0, i32 8, !dbg !12827
  %67 = load i16, i16* %ignore_status_mask, align 2, !dbg !12828
  %conv124 = zext i16 %67 to i32, !dbg !12828
  %or125 = or i32 %conv124, 12, !dbg !12828
  %conv126 = trunc i32 %or125 to i16, !dbg !12828
  store i16 %conv126, i16* %ignore_status_mask, align 2, !dbg !12828
  br label %if.end127, !dbg !12826

if.end127:                                        ; preds = %if.then123, %if.end116
  %68 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12829
  %port128 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %68, i32 0, i32 1, !dbg !12829
  %tty129 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port128, i32 0, i32 1, !dbg !12829
  %69 = load %struct.tty_struct*, %struct.tty_struct** %tty129, align 8, !dbg !12829
  %termios130 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %69, i32 0, i32 15, !dbg !12829
  %c_iflag131 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios130, i32 0, i32 0, !dbg !12829
  %70 = load i32, i32* %c_iflag131, align 8, !dbg !12829
  %and132 = and i32 %70, 1, !dbg !12829
  %tobool133 = icmp ne i32 %and132, 0, !dbg !12829
  br i1 %tobool133, label %if.then134, label %if.end151, !dbg !12831

if.then134:                                       ; preds = %if.end127
  %71 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12832
  %ignore_status_mask135 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %71, i32 0, i32 8, !dbg !12834
  %72 = load i16, i16* %ignore_status_mask135, align 2, !dbg !12835
  %conv136 = zext i16 %72 to i32, !dbg !12835
  %or137 = or i32 %conv136, 32, !dbg !12835
  %conv138 = trunc i32 %or137 to i16, !dbg !12835
  store i16 %conv138, i16* %ignore_status_mask135, align 2, !dbg !12835
  %73 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12836
  %port139 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %73, i32 0, i32 1, !dbg !12836
  %tty140 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port139, i32 0, i32 1, !dbg !12836
  %74 = load %struct.tty_struct*, %struct.tty_struct** %tty140, align 8, !dbg !12836
  %termios141 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %74, i32 0, i32 15, !dbg !12836
  %c_iflag142 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios141, i32 0, i32 0, !dbg !12836
  %75 = load i32, i32* %c_iflag142, align 8, !dbg !12836
  %and143 = and i32 %75, 4, !dbg !12836
  %tobool144 = icmp ne i32 %and143, 0, !dbg !12836
  br i1 %tobool144, label %if.then145, label %if.end150, !dbg !12838

if.then145:                                       ; preds = %if.then134
  %76 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12839
  %ignore_status_mask146 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %76, i32 0, i32 8, !dbg !12840
  %77 = load i16, i16* %ignore_status_mask146, align 2, !dbg !12841
  %conv147 = zext i16 %77 to i32, !dbg !12841
  %or148 = or i32 %conv147, 2, !dbg !12841
  %conv149 = trunc i32 %or148 to i16, !dbg !12841
  store i16 %conv149, i16* %ignore_status_mask146, align 2, !dbg !12841
  br label %if.end150, !dbg !12839

if.end150:                                        ; preds = %if.then145, %if.then134
  br label %if.end151, !dbg !12842

if.end151:                                        ; preds = %if.end150, %if.end127
  %78 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12843
  call void @mgsl_program_hw(%struct.mgsl_struct* %78) #11, !dbg !12844
  br label %return, !dbg !12845

return:                                           ; preds = %if.end151, %if.then
  ret void, !dbg !12845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #1 !dbg !12846 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12847, metadata !DIExpression()), !dbg !12849
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12851, metadata !DIExpression()), !dbg !12852
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12604, metadata !DIExpression()), !dbg !12853
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12614, metadata !DIExpression()), !dbg !12855
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12856, metadata !DIExpression()), !dbg !12857
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12858, metadata !DIExpression()), !dbg !12859
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12860
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12861
  %div = sdiv i64 %1, 64, !dbg !12861
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12862
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12860
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12863
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12864
  %conv.i = trunc i64 %4 to i32, !dbg !12864
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !12865
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12866
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12866
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !12866
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12867
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12868
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !12869
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !12871
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !12872

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !12873
  %12 = bitcast i64* %11 to i8*, !dbg !12873
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12873
  %shr.i = ashr i64 %13, 3, !dbg !12873
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !12873
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !12875
  %and.i = and i64 %14, 7, !dbg !12875
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !12875
  %shl.i = shl i32 1, %sh_prom.i, !dbg !12875
  %neg.i = xor i32 %shl.i, -1, !dbg !12876
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !12877, !srcloc !12878
  br label %arch_clear_bit.exit, !dbg !12879

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !12880
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !12882
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !12883, !srcloc !12884
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !12885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_initialized(%struct.tty_port* %port, i1 zeroext %val) #1 !dbg !12886 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !12889, metadata !DIExpression()), !dbg !12890
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !12891, metadata !DIExpression()), !dbg !12892
  %0 = load i8, i8* %val.addr, align 1, !dbg !12893
  %tobool = trunc i8 %0 to i1, !dbg !12893
  br i1 %tobool, label %if.then, label %if.else, !dbg !12895

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12896
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !12897
  call void @set_bit(i64 0, i64* %iflags) #11, !dbg !12898
  br label %if.end, !dbg !12898

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12899
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !12900
  call void @clear_bit(i64 0, i64* %iflags1) #11, !dbg !12901
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !12902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #1 !dbg !12903 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !12909, metadata !DIExpression()), !dbg !12911
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !12913, metadata !DIExpression()), !dbg !12914
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !12915, metadata !DIExpression()), !dbg !12916
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12917, metadata !DIExpression()), !dbg !12919
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12921, metadata !DIExpression()), !dbg !12922
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12923, metadata !DIExpression()), !dbg !12925
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12927, metadata !DIExpression()), !dbg !12928
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12929, metadata !DIExpression()), !dbg !12930
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12931, metadata !DIExpression()), !dbg !12932
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12933
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12934
  %div = sdiv i64 %1, 64, !dbg !12934
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12935
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12933
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12936
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12937
  %conv.i = trunc i64 %4 to i32, !dbg !12937
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !12938
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12939
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12939
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !12939
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12940
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !12940
  br i1 %8, label %cond.true, label %cond.false, !dbg !12940

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !12940
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !12940
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !12941
  %and.i = and i64 %11, 63, !dbg !12942
  %shl.i = shl i64 1, %and.i, !dbg !12943
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !12944
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12945
  %shr.i = ashr i64 %13, 6, !dbg !12946
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !12944
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !12944
  %and1.i = and i64 %shl.i, %14, !dbg !12947
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !12948
  %conv = zext i1 %cmp.i to i32, !dbg !12940
  br label %cond.end, !dbg !12940

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !12940
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !12940
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !12949
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !12950
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !12951, !srcloc !12952
  store i8 %19, i8* %oldbit.i, align 1, !dbg !12951
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !12953
  %tobool.i = trunc i8 %20 to i1, !dbg !12953
  %conv2 = zext i1 %tobool.i to i32, !dbg !12940
  br label %cond.end, !dbg !12940

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !12940
  %tobool = icmp ne i32 %cond, 0, !dbg !12940
  ret i1 %tobool, !dbg !12954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #1 !dbg !12955 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12959, metadata !DIExpression()), !dbg !12960
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12961, metadata !DIExpression()), !dbg !12962
  ret i1 true, !dbg !12963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #1 !dbg !12964 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12968, metadata !DIExpression()), !dbg !12969
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12970, metadata !DIExpression()), !dbg !12971
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12972, metadata !DIExpression()), !dbg !12973
  ret void, !dbg !12974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_loopmode_cancel_transmit(%struct.mgsl_struct* %info) #1 !dbg !12975 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !12976, metadata !DIExpression()), !dbg !12977
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12978
  call void @usc_RTCmd(%struct.mgsl_struct* %0, i16 zeroext 20480) #11, !dbg !12979
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12980
  call void @usc_DmaCmd(%struct.mgsl_struct* %1, i16 zeroext 4096) #11, !dbg !12981
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12982
  call void @usc_loopmode_send_done(%struct.mgsl_struct* %2) #11, !dbg !12983
  ret void, !dbg !12984
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hdlcdev_tx_done(%struct.mgsl_struct* %info) #1 !dbg !12985 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !12986, metadata !DIExpression()), !dbg !12987
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12988
  %netdev = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 91, !dbg !12990
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12990
  %call = call zeroext i1 @netif_queue_stopped(%struct.net_device* %1) #11, !dbg !12991
  br i1 %call, label %if.then, label %if.end, !dbg !12992

if.then:                                          ; preds = %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !12993
  %netdev1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 91, !dbg !12994
  %3 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !12994
  call void @netif_wake_queue(%struct.net_device* %3) #11, !dbg !12995
  br label %if.end, !dbg !12995

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_queue_stopped(%struct.net_device* %dev) #1 !dbg !12997 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13000, metadata !DIExpression()), !dbg !13001
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13002
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !13003
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %call) #11, !dbg !13004
  ret i1 %call1, !dbg !13005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #1 !dbg !13006 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13007, metadata !DIExpression()), !dbg !13008
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13009
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !13010
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #11, !dbg !13011
  ret void, !dbg !13012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #1 !dbg !13013 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !13018, metadata !DIExpression()), !dbg !13019
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !13020
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !13021
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #11, !dbg !13022
  ret i1 %call, !dbg !13023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #1 !dbg !13024 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13027, metadata !DIExpression()), !dbg !13028
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13029, metadata !DIExpression()), !dbg !13030
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13031
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !13032
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !13032
  %2 = load i32, i32* %index.addr, align 4, !dbg !13033
  %idxprom = zext i32 %2 to i64, !dbg !13031
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !13031
  ret %struct.netdev_queue* %arrayidx, !dbg !13034
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #4

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #1 !dbg !13035 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !13043, metadata !DIExpression()), !dbg !13044
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !13045, metadata !DIExpression()), !dbg !13046
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !13047, metadata !DIExpression()), !dbg !13048
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13049, metadata !DIExpression()), !dbg !13050
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !13051, metadata !DIExpression()), !dbg !13052
  %0 = load i32, i32* %irq.addr, align 4, !dbg !13053
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !13054
  %2 = load i64, i64* %flags.addr, align 8, !dbg !13055
  %3 = load i8*, i8** %name.addr, align 8, !dbg !13056
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !13057
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !13058
  ret i32 %call, !dbg !13059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_interrupt(i32 %dummy, i8* %dev_id) #1 !dbg !13060 {
entry:
  %lock.addr.i61 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i61, metadata !13061, metadata !DIExpression()), !dbg !13065
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13067, metadata !DIExpression()), !dbg !13069
  %dummy.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %UscVector = alloca i16, align 2
  %DmaVector = alloca i16, align 2
  store i32 %dummy, i32* %dummy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dummy.addr, metadata !13071, metadata !DIExpression()), !dbg !13072
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !13073, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !13075, metadata !DIExpression()), !dbg !13076
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !13077
  %1 = bitcast i8* %0 to %struct.mgsl_struct*, !dbg !13077
  store %struct.mgsl_struct* %1, %struct.mgsl_struct** %info, align 8, !dbg !13076
  call void @llvm.dbg.declare(metadata i16* %UscVector, metadata !13078, metadata !DIExpression()), !dbg !13079
  call void @llvm.dbg.declare(metadata i16* %DmaVector, metadata !13080, metadata !DIExpression()), !dbg !13081
  %2 = load i32, i32* @debug_level, align 4, !dbg !13082
  %cmp = icmp sge i32 %2, 5, !dbg !13084
  br i1 %cmp, label %if.then, label %if.end, !dbg !13085

if.then:                                          ; preds = %entry
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13086
  %irq_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 62, !dbg !13087
  %4 = load i32, i32* %irq_level, align 8, !dbg !13087
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1685, i32 %4) #12, !dbg !13088
  br label %if.end, !dbg !13088

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13089
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 17, !dbg !13090
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13091, !srcloc !13093
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13094
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !13094
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !13094
  br label %for.cond, !dbg !13096

for.cond:                                         ; preds = %if.end37, %if.end
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13097
  %call1 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %8, i16 zeroext 20) #11, !dbg !13101
  %conv = zext i16 %call1 to i32, !dbg !13101
  %shr = ashr i32 %conv, 9, !dbg !13102
  %conv2 = trunc i32 %shr to i16, !dbg !13101
  store i16 %conv2, i16* %UscVector, align 2, !dbg !13103
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13104
  %call3 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %9, i16 zeroext 20) #11, !dbg !13105
  store i16 %call3, i16* %DmaVector, align 2, !dbg !13106
  %10 = load i32, i32* @debug_level, align 4, !dbg !13107
  %cmp4 = icmp sge i32 %10, 5, !dbg !13109
  br i1 %cmp4, label %if.then6, label %if.end10, !dbg !13110

if.then6:                                         ; preds = %for.cond
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13111
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 56, !dbg !13112
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !13111
  %12 = load i16, i16* %UscVector, align 2, !dbg !13113
  %conv7 = zext i16 %12 to i32, !dbg !13113
  %13 = load i16, i16* %DmaVector, align 2, !dbg !13114
  %conv8 = zext i16 %13 to i32, !dbg !13114
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1696, i8* %arraydecay, i32 %conv7, i32 %conv8) #12, !dbg !13115
  br label %if.end10, !dbg !13115

if.end10:                                         ; preds = %if.then6, %for.cond
  %14 = load i16, i16* %UscVector, align 2, !dbg !13116
  %tobool = icmp ne i16 %14, 0, !dbg !13116
  br i1 %tobool, label %if.end13, label %land.lhs.true, !dbg !13118

land.lhs.true:                                    ; preds = %if.end10
  %15 = load i16, i16* %DmaVector, align 2, !dbg !13119
  %tobool11 = icmp ne i16 %15, 0, !dbg !13119
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !13120

if.then12:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !13121

if.end13:                                         ; preds = %land.lhs.true, %if.end10
  %16 = load i16, i16* %UscVector, align 2, !dbg !13122
  %tobool14 = icmp ne i16 %16, 0, !dbg !13122
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !13124

if.then15:                                        ; preds = %if.end13
  %17 = load i16, i16* %UscVector, align 2, !dbg !13125
  %idxprom = zext i16 %17 to i64, !dbg !13126
  %arrayidx = getelementptr [7 x void (%struct.mgsl_struct*)*], [7 x void (%struct.mgsl_struct*)*]* @UscIsrTable, i64 0, i64 %idxprom, !dbg !13126
  %18 = load void (%struct.mgsl_struct*)*, void (%struct.mgsl_struct*)** %arrayidx, align 8, !dbg !13126
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13127
  call void %18(%struct.mgsl_struct* %19) #11, !dbg !13128
  br label %if.end22, !dbg !13128

if.else:                                          ; preds = %if.end13
  %20 = load i16, i16* %DmaVector, align 2, !dbg !13129
  %conv16 = zext i16 %20 to i32, !dbg !13129
  %and = and i32 %conv16, 1536, !dbg !13131
  %cmp17 = icmp eq i32 %and, 1024, !dbg !13132
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !13133

if.then19:                                        ; preds = %if.else
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13134
  call void @mgsl_isr_transmit_dma(%struct.mgsl_struct* %21) #11, !dbg !13135
  br label %if.end21, !dbg !13135

if.else20:                                        ; preds = %if.else
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13136
  call void @mgsl_isr_receive_dma(%struct.mgsl_struct* %22) #11, !dbg !13137
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then19
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then15
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13138
  %isr_overflow = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 24, !dbg !13140
  %24 = load i32, i32* %isr_overflow, align 4, !dbg !13140
  %tobool23 = icmp ne i32 %24, 0, !dbg !13138
  br i1 %tobool23, label %if.then24, label %if.end37, !dbg !13141

if.then24:                                        ; preds = %if.end22
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13142
  %device_name25 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 56, !dbg !13144
  %arraydecay26 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name25, i64 0, i64 0, !dbg !13142
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13145
  %irq_level27 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 62, !dbg !13146
  %27 = load i32, i32* %irq_level27, align 8, !dbg !13146
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1711, i8* %arraydecay26, i32 %27) #12, !dbg !13147
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13148
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13148
  %call29 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %29, i16 zeroext 24) #11, !dbg !13148
  %conv30 = zext i16 %call29 to i32, !dbg !13148
  %and31 = and i32 %conv30, 32512, !dbg !13148
  %conv32 = trunc i32 %and31 to i16, !dbg !13148
  call void @usc_OutReg(%struct.mgsl_struct* %28, i16 zeroext 24, i16 zeroext %conv32) #11, !dbg !13148
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13149
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13149
  %call33 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %31, i16 zeroext 24) #11, !dbg !13149
  %conv34 = zext i16 %call33 to i32, !dbg !13149
  %and35 = and i32 %conv34, -32769, !dbg !13149
  %conv36 = trunc i32 %and35 to i16, !dbg !13149
  call void @usc_OutDmaReg(%struct.mgsl_struct* %30, i16 zeroext 24, i16 zeroext %conv36) #11, !dbg !13149
  br label %for.end, !dbg !13150

if.end37:                                         ; preds = %if.end22
  br label %for.cond, !dbg !13151, !llvm.loop !13152

for.end:                                          ; preds = %if.then24, %if.then12
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13155
  %pending_bh = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 22, !dbg !13157
  %33 = load i32, i32* %pending_bh, align 4, !dbg !13157
  %tobool38 = icmp ne i32 %33, 0, !dbg !13155
  br i1 %tobool38, label %land.lhs.true39, label %if.end53, !dbg !13158

land.lhs.true39:                                  ; preds = %for.end
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13159
  %bh_running = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 23, !dbg !13160
  %35 = load i8, i8* %bh_running, align 8, !dbg !13160
  %tobool40 = trunc i8 %35 to i1, !dbg !13160
  br i1 %tobool40, label %if.end53, label %land.lhs.true41, !dbg !13161

land.lhs.true41:                                  ; preds = %land.lhs.true39
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13162
  %bh_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %36, i32 0, i32 25, !dbg !13163
  %37 = load i8, i8* %bh_requested, align 8, !dbg !13163
  %tobool42 = trunc i8 %37 to i1, !dbg !13163
  br i1 %tobool42, label %if.end53, label %if.then43, !dbg !13164

if.then43:                                        ; preds = %land.lhs.true41
  %38 = load i32, i32* @debug_level, align 4, !dbg !13165
  %cmp44 = icmp sge i32 %38, 5, !dbg !13168
  br i1 %cmp44, label %if.then46, label %if.end50, !dbg !13169

if.then46:                                        ; preds = %if.then43
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13170
  %device_name47 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %39, i32 0, i32 56, !dbg !13171
  %arraydecay48 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name47, i64 0, i64 0, !dbg !13170
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1725, i8* %arraydecay48) #12, !dbg !13172
  br label %if.end50, !dbg !13172

if.end50:                                         ; preds = %if.then46, %if.then43
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13173
  %task = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 18, !dbg !13174
  %call51 = call zeroext i1 @schedule_work(%struct.work_struct* %task) #11, !dbg !13175
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13176
  %bh_requested52 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %41, i32 0, i32 25, !dbg !13177
  store i8 1, i8* %bh_requested52, align 8, !dbg !13178
  br label %if.end53, !dbg !13179

if.end53:                                         ; preds = %if.end50, %land.lhs.true41, %land.lhs.true39, %for.end
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13180
  %irq_spinlock54 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 17, !dbg !13181
  store %struct.spinlock* %irq_spinlock54, %struct.spinlock** %lock.addr.i61, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13182, !srcloc !13184
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i61, align 8, !dbg !13185
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !13185
  %rlock.i62 = bitcast %union.anon.1* %44 to %struct.raw_spinlock*, !dbg !13185
  %45 = load i32, i32* @debug_level, align 4, !dbg !13187
  %cmp55 = icmp sge i32 %45, 5, !dbg !13189
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !13190

if.then57:                                        ; preds = %if.end53
  %46 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !13191
  %irq_level58 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %46, i32 0, i32 62, !dbg !13192
  %47 = load i32, i32* %irq_level58, align 8, !dbg !13192
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1734, i32 %47) #12, !dbg !13193
  br label %if.end60, !dbg !13193

if.end60:                                         ; preds = %if.then57, %if.end53
  ret i32 1, !dbg !13194
}

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mgsl_memory_test(%struct.mgsl_struct* %info) #1 !dbg !8189 {
entry:
  %retval = alloca i1, align 1
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %Patterncount = alloca i64, align 8
  %i = alloca i64, align 8
  %TestLimit = alloca i64, align 8
  %TestAddr = alloca i64*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !13195, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.declare(metadata i64* %Patterncount, metadata !13197, metadata !DIExpression()), !dbg !13198
  store i64 7, i64* %Patterncount, align 8, !dbg !13198
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13199, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.declare(metadata i64* %TestLimit, metadata !13201, metadata !DIExpression()), !dbg !13202
  store i64 32768, i64* %TestLimit, align 8, !dbg !13202
  call void @llvm.dbg.declare(metadata i64** %TestAddr, metadata !13203, metadata !DIExpression()), !dbg !13204
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13205
  %memory_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 76, !dbg !13206
  %1 = load i8*, i8** %memory_base, align 8, !dbg !13206
  %2 = bitcast i8* %1 to i64*, !dbg !13207
  store i64* %2, i64** %TestAddr, align 8, !dbg !13208
  store i64 0, i64* %i, align 8, !dbg !13209
  br label %for.cond, !dbg !13211

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %i, align 8, !dbg !13212
  %4 = load i64, i64* %Patterncount, align 8, !dbg !13214
  %cmp = icmp ult i64 %3, %4, !dbg !13215
  br i1 %cmp, label %for.body, label %for.end, !dbg !13216

for.body:                                         ; preds = %for.cond
  %5 = load i64, i64* %i, align 8, !dbg !13217
  %arrayidx = getelementptr [7 x i64], [7 x i64]* @mgsl_memory_test.BitPatterns, i64 0, i64 %5, !dbg !13219
  %6 = load i64, i64* %arrayidx, align 8, !dbg !13219
  %7 = load i64*, i64** %TestAddr, align 8, !dbg !13220
  store i64 %6, i64* %7, align 8, !dbg !13221
  %8 = load i64*, i64** %TestAddr, align 8, !dbg !13222
  %9 = load i64, i64* %8, align 8, !dbg !13224
  %10 = load i64, i64* %i, align 8, !dbg !13225
  %arrayidx1 = getelementptr [7 x i64], [7 x i64]* @mgsl_memory_test.BitPatterns, i64 0, i64 %10, !dbg !13226
  %11 = load i64, i64* %arrayidx1, align 8, !dbg !13226
  %cmp2 = icmp ne i64 %9, %11, !dbg !13227
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13228

if.then:                                          ; preds = %for.body
  store i1 false, i1* %retval, align 1, !dbg !13229
  br label %return, !dbg !13229

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !13230

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %i, align 8, !dbg !13231
  %inc = add i64 %12, 1, !dbg !13231
  store i64 %inc, i64* %i, align 8, !dbg !13231
  br label %for.cond, !dbg !13232, !llvm.loop !13233

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !13235
  br label %for.cond3, !dbg !13237

for.cond3:                                        ; preds = %for.inc6, %for.end
  %13 = load i64, i64* %i, align 8, !dbg !13238
  %14 = load i64, i64* %TestLimit, align 8, !dbg !13240
  %cmp4 = icmp ult i64 %13, %14, !dbg !13241
  br i1 %cmp4, label %for.body5, label %for.end8, !dbg !13242

for.body5:                                        ; preds = %for.cond3
  %15 = load i64, i64* %i, align 8, !dbg !13243
  %mul = mul i64 %15, 4, !dbg !13245
  %16 = load i64*, i64** %TestAddr, align 8, !dbg !13246
  store i64 %mul, i64* %16, align 8, !dbg !13247
  %17 = load i64*, i64** %TestAddr, align 8, !dbg !13248
  %incdec.ptr = getelementptr i64, i64* %17, i32 1, !dbg !13248
  store i64* %incdec.ptr, i64** %TestAddr, align 8, !dbg !13248
  br label %for.inc6, !dbg !13249

for.inc6:                                         ; preds = %for.body5
  %18 = load i64, i64* %i, align 8, !dbg !13250
  %inc7 = add i64 %18, 1, !dbg !13250
  store i64 %inc7, i64* %i, align 8, !dbg !13250
  br label %for.cond3, !dbg !13251, !llvm.loop !13252

for.end8:                                         ; preds = %for.cond3
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13254
  %memory_base9 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 76, !dbg !13255
  %20 = load i8*, i8** %memory_base9, align 8, !dbg !13255
  %21 = bitcast i8* %20 to i64*, !dbg !13256
  store i64* %21, i64** %TestAddr, align 8, !dbg !13257
  store i64 0, i64* %i, align 8, !dbg !13258
  br label %for.cond10, !dbg !13260

for.cond10:                                       ; preds = %for.inc18, %for.end8
  %22 = load i64, i64* %i, align 8, !dbg !13261
  %23 = load i64, i64* %TestLimit, align 8, !dbg !13263
  %cmp11 = icmp ult i64 %22, %23, !dbg !13264
  br i1 %cmp11, label %for.body12, label %for.end20, !dbg !13265

for.body12:                                       ; preds = %for.cond10
  %24 = load i64*, i64** %TestAddr, align 8, !dbg !13266
  %25 = load i64, i64* %24, align 8, !dbg !13269
  %26 = load i64, i64* %i, align 8, !dbg !13270
  %mul13 = mul i64 %26, 4, !dbg !13271
  %cmp14 = icmp ne i64 %25, %mul13, !dbg !13272
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !13273

if.then15:                                        ; preds = %for.body12
  store i1 false, i1* %retval, align 1, !dbg !13274
  br label %return, !dbg !13274

if.end16:                                         ; preds = %for.body12
  %27 = load i64*, i64** %TestAddr, align 8, !dbg !13275
  %incdec.ptr17 = getelementptr i64, i64* %27, i32 1, !dbg !13275
  store i64* %incdec.ptr17, i64** %TestAddr, align 8, !dbg !13275
  br label %for.inc18, !dbg !13276

for.inc18:                                        ; preds = %if.end16
  %28 = load i64, i64* %i, align 8, !dbg !13277
  %inc19 = add i64 %28, 1, !dbg !13277
  store i64 %inc19, i64* %i, align 8, !dbg !13277
  br label %for.cond10, !dbg !13278, !llvm.loop !13279

for.end20:                                        ; preds = %for.cond10
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13281
  %memory_base21 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 76, !dbg !13282
  %30 = load i8*, i8** %memory_base21, align 8, !dbg !13282
  call void @llvm.memset.p0i8.i64(i8* align 1 %30, i8 0, i64 262144, i1 false), !dbg !13283
  store i1 true, i1* %retval, align 1, !dbg !13284
  br label %return, !dbg !13284

return:                                           ; preds = %for.end20, %if.then15, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !13285
  ret i1 %31, !dbg !13285
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_allocate_dma_buffers(%struct.mgsl_struct* %info) #1 !dbg !13286 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %BuffersPerFrame = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !13287, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.declare(metadata i16* %BuffersPerFrame, metadata !13289, metadata !DIExpression()), !dbg !13290
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13291
  %last_mem_alloc = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 75, !dbg !13292
  store i32 0, i32* %last_mem_alloc, align 4, !dbg !13293
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13294
  %max_frame_size = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 21, !dbg !13295
  %2 = load i32, i32* %max_frame_size, align 8, !dbg !13295
  %div = udiv i32 %2, 4096, !dbg !13296
  %conv = trunc i32 %div to i16, !dbg !13297
  store i16 %conv, i16* %BuffersPerFrame, align 2, !dbg !13298
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13299
  %max_frame_size1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 21, !dbg !13301
  %4 = load i32, i32* %max_frame_size1, align 8, !dbg !13301
  %rem = urem i32 %4, 4096, !dbg !13302
  %tobool = icmp ne i32 %rem, 0, !dbg !13302
  br i1 %tobool, label %if.then, label %if.end, !dbg !13303

if.then:                                          ; preds = %entry
  %5 = load i16, i16* %BuffersPerFrame, align 2, !dbg !13304
  %inc = add i16 %5, 1, !dbg !13304
  store i16 %inc, i16* %BuffersPerFrame, align 2, !dbg !13304
  br label %if.end, !dbg !13305

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13306
  %num_tx_dma_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 36, !dbg !13307
  %7 = load i32, i32* %num_tx_dma_buffers, align 4, !dbg !13307
  %8 = load i16, i16* %BuffersPerFrame, align 2, !dbg !13308
  %conv2 = zext i16 %8 to i32, !dbg !13308
  %mul = mul i32 %7, %conv2, !dbg !13309
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13310
  %tx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 38, !dbg !13311
  store i32 %mul, i32* %tx_buffer_count, align 4, !dbg !13312
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13313
  %tx_buffer_count3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 38, !dbg !13314
  %11 = load i32, i32* %tx_buffer_count3, align 4, !dbg !13314
  %sub = sub i32 62, %11, !dbg !13315
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13316
  %rx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 33, !dbg !13317
  store i32 %sub, i32* %rx_buffer_count, align 8, !dbg !13318
  %13 = load i32, i32* @debug_level, align 4, !dbg !13319
  %cmp = icmp sge i32 %13, 3, !dbg !13321
  br i1 %cmp, label %if.then5, label %if.end8, !dbg !13322

if.then5:                                         ; preds = %if.end
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13323
  %tx_buffer_count6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 38, !dbg !13324
  %15 = load i32, i32* %tx_buffer_count6, align 4, !dbg !13324
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13325
  %rx_buffer_count7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 33, !dbg !13326
  %17 = load i32, i32* %rx_buffer_count7, align 8, !dbg !13326
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3576, i32 %15, i32 %17) #12, !dbg !13327
  br label %if.end8, !dbg !13327

if.end8:                                          ; preds = %if.then5, %if.end
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13328
  %call9 = call i32 @mgsl_alloc_buffer_list_memory(%struct.mgsl_struct* %18) #11, !dbg !13330
  %cmp10 = icmp slt i32 %call9, 0, !dbg !13331
  br i1 %cmp10, label %if.then29, label %lor.lhs.false, !dbg !13332

lor.lhs.false:                                    ; preds = %if.end8
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13333
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13334
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 34, !dbg !13335
  %21 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !13335
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13336
  %rx_buffer_count12 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 33, !dbg !13337
  %23 = load i32, i32* %rx_buffer_count12, align 8, !dbg !13337
  %call13 = call i32 @mgsl_alloc_frame_memory(%struct.mgsl_struct* %19, %struct._DMABUFFERENTRY* %21, i32 %23) #11, !dbg !13338
  %cmp14 = icmp slt i32 %call13, 0, !dbg !13339
  br i1 %cmp14, label %if.then29, label %lor.lhs.false16, !dbg !13340

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13341
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13342
  %tx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 39, !dbg !13343
  %26 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list, align 8, !dbg !13343
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13344
  %tx_buffer_count17 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 38, !dbg !13345
  %28 = load i32, i32* %tx_buffer_count17, align 4, !dbg !13345
  %call18 = call i32 @mgsl_alloc_frame_memory(%struct.mgsl_struct* %24, %struct._DMABUFFERENTRY* %26, i32 %28) #11, !dbg !13346
  %cmp19 = icmp slt i32 %call18, 0, !dbg !13347
  br i1 %cmp19, label %if.then29, label %lor.lhs.false21, !dbg !13348

lor.lhs.false21:                                  ; preds = %lor.lhs.false16
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13349
  %call22 = call i32 @mgsl_alloc_intermediate_rxbuffer_memory(%struct.mgsl_struct* %29) #11, !dbg !13350
  %cmp23 = icmp slt i32 %call22, 0, !dbg !13351
  br i1 %cmp23, label %if.then29, label %lor.lhs.false25, !dbg !13352

lor.lhs.false25:                                  ; preds = %lor.lhs.false21
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13353
  %call26 = call i32 @mgsl_alloc_intermediate_txbuffer_memory(%struct.mgsl_struct* %30) #11, !dbg !13354
  %cmp27 = icmp slt i32 %call26, 0, !dbg !13355
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !13356

if.then29:                                        ; preds = %lor.lhs.false25, %lor.lhs.false21, %lor.lhs.false16, %lor.lhs.false, %if.end8
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3583) #12, !dbg !13357
  store i32 -12, i32* %retval, align 4, !dbg !13359
  br label %return, !dbg !13359

if.end31:                                         ; preds = %lor.lhs.false25
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13360
  call void @mgsl_reset_rx_dma_buffers(%struct.mgsl_struct* %31) #11, !dbg !13361
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13362
  call void @mgsl_reset_tx_dma_buffers(%struct.mgsl_struct* %32) #11, !dbg !13363
  store i32 0, i32* %retval, align 4, !dbg !13364
  br label %return, !dbg !13364

return:                                           ; preds = %if.end31, %if.then29
  %33 = load i32, i32* %retval, align 4, !dbg !13365
  ret i32 %33, !dbg !13365
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_isr_transmit_dma(%struct.mgsl_struct* %info) #1 !dbg !13366 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %status = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !13367, metadata !DIExpression()), !dbg !13368
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13369, metadata !DIExpression()), !dbg !13370
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13371
  call void @usc_OutDmaReg(%struct.mgsl_struct* %0, i16 zeroext 26, i16 zeroext 257) #11, !dbg !13372
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13373
  %call = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %1, i16 zeroext 2) #11, !dbg !13374
  store i16 %call, i16* %status, align 2, !dbg !13375
  %2 = load i32, i32* @debug_level, align 4, !dbg !13376
  %cmp = icmp sge i32 %2, 5, !dbg !13378
  br i1 %cmp, label %if.then, label %if.end, !dbg !13379

if.then:                                          ; preds = %entry
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13380
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 56, !dbg !13381
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !13380
  %4 = load i16, i16* %status, align 2, !dbg !13382
  %conv = zext i16 %4 to i32, !dbg !13382
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1648, i8* %arraydecay, i32 %conv) #12, !dbg !13383
  br label %if.end, !dbg !13383

if.end:                                           ; preds = %if.then, %entry
  %5 = load i16, i16* %status, align 2, !dbg !13384
  %conv2 = zext i16 %5 to i32, !dbg !13384
  %and = and i32 %conv2, 4, !dbg !13386
  %tobool = icmp ne i32 %and, 0, !dbg !13386
  br i1 %tobool, label %if.then3, label %if.end7, !dbg !13387

if.then3:                                         ; preds = %if.end
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13388
  %tx_dma_buffers_used = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 37, !dbg !13390
  %7 = load i32, i32* %tx_dma_buffers_used, align 8, !dbg !13391
  %dec = add i32 %7, -1, !dbg !13391
  store i32 %dec, i32* %tx_dma_buffers_used, align 8, !dbg !13391
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13392
  %call4 = call zeroext i1 @load_next_tx_holding_buffer(%struct.mgsl_struct* %8) #11, !dbg !13394
  br i1 %call4, label %if.then5, label %if.end6, !dbg !13395

if.then5:                                         ; preds = %if.then3
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13396
  %pending_bh = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 22, !dbg !13398
  %10 = load i32, i32* %pending_bh, align 4, !dbg !13399
  %or = or i32 %10, 2, !dbg !13399
  store i32 %or, i32* %pending_bh, align 4, !dbg !13399
  br label %if.end6, !dbg !13400

if.end6:                                          ; preds = %if.then5, %if.then3
  br label %if.end7, !dbg !13401

if.end7:                                          ; preds = %if.end6, %if.end
  ret void, !dbg !13402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_isr_receive_dma(%struct.mgsl_struct* %info) #1 !dbg !13403 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %status = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !13404, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13406, metadata !DIExpression()), !dbg !13407
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13408
  call void @usc_OutDmaReg(%struct.mgsl_struct* %0, i16 zeroext 26, i16 zeroext 514) #11, !dbg !13409
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13410
  %call = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %1, i16 zeroext 130) #11, !dbg !13411
  store i16 %call, i16* %status, align 2, !dbg !13412
  %2 = load i32, i32* @debug_level, align 4, !dbg !13413
  %cmp = icmp sge i32 %2, 5, !dbg !13415
  br i1 %cmp, label %if.then, label %if.end, !dbg !13416

if.then:                                          ; preds = %entry
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13417
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 56, !dbg !13418
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !13417
  %4 = load i16, i16* %status, align 2, !dbg !13419
  %conv = zext i16 %4 to i32, !dbg !13419
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1603, i8* %arraydecay, i32 %conv) #12, !dbg !13420
  br label %if.end, !dbg !13420

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13421
  %pending_bh = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 22, !dbg !13422
  %6 = load i32, i32* %pending_bh, align 4, !dbg !13423
  %or = or i32 %6, 1, !dbg !13423
  store i32 %or, i32* %pending_bh, align 4, !dbg !13423
  %7 = load i16, i16* %status, align 2, !dbg !13424
  %conv2 = zext i16 %7 to i32, !dbg !13424
  %and = and i32 %conv2, 8, !dbg !13426
  %tobool = icmp ne i32 %and, 0, !dbg !13426
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !13427

if.then3:                                         ; preds = %if.end
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13428
  %rx_overflow = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 49, !dbg !13430
  store i8 1, i8* %rx_overflow, align 1, !dbg !13431
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13432
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 4, !dbg !13433
  %buf_overrun = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 10, !dbg !13434
  %10 = load i32, i32* %buf_overrun, align 8, !dbg !13435
  %inc = add i32 %10, 1, !dbg !13435
  store i32 %inc, i32* %buf_overrun, align 8, !dbg !13435
  br label %if.end4, !dbg !13436

if.end4:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !13437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #1 !dbg !13438 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13441, metadata !DIExpression()), !dbg !13442
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !13443
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13444
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !13445
  ret i1 %call, !dbg !13446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_isr_null(%struct.mgsl_struct* %info) #1 !dbg !13447 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !13448, metadata !DIExpression()), !dbg !13449
  ret void, !dbg !13450
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_isr_misc(%struct.mgsl_struct* %info) #1 !dbg !13451 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %status = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !13452, metadata !DIExpression()), !dbg !13453
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13454, metadata !DIExpression()), !dbg !13455
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13456
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %0, i16 zeroext 28) #11, !dbg !13457
  store i16 %call, i16* %status, align 2, !dbg !13455
  %1 = load i32, i32* @debug_level, align 4, !dbg !13458
  %cmp = icmp sge i32 %1, 5, !dbg !13460
  br i1 %cmp, label %if.then, label %if.end, !dbg !13461

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %status, align 2, !dbg !13462
  %conv = zext i16 %2 to i32, !dbg !13462
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1536, i32 %conv) #12, !dbg !13463
  br label %if.end, !dbg !13463

if.end:                                           ; preds = %if.then, %entry
  %3 = load i16, i16* %status, align 2, !dbg !13464
  %conv2 = zext i16 %3 to i32, !dbg !13464
  %and = and i32 %conv2, 8, !dbg !13466
  %tobool = icmp ne i32 %and, 0, !dbg !13466
  br i1 %tobool, label %land.lhs.true, label %if.end15, !dbg !13467

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13468
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 70, !dbg !13469
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !13470
  %5 = load i64, i64* %mode, align 8, !dbg !13470
  %cmp3 = icmp eq i64 %5, 2, !dbg !13471
  br i1 %cmp3, label %if.then5, label %if.end15, !dbg !13472

if.then5:                                         ; preds = %land.lhs.true
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13473
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13473
  %call6 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %7, i16 zeroext 34) #11, !dbg !13473
  %conv7 = zext i16 %call6 to i32, !dbg !13473
  %and8 = and i32 %conv7, 65532, !dbg !13473
  %conv9 = trunc i32 %and8 to i16, !dbg !13473
  call void @usc_OutReg(%struct.mgsl_struct* %6, i16 zeroext 34, i16 zeroext %conv9) #11, !dbg !13473
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13475
  call void @usc_DmaCmd(%struct.mgsl_struct* %8, i16 zeroext 4608) #11, !dbg !13476
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13477
  call void @usc_OutReg(%struct.mgsl_struct* %9, i16 zeroext 36, i16 zeroext 502) #11, !dbg !13477
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13478
  call void @usc_OutReg(%struct.mgsl_struct* %10, i16 zeroext 26, i16 zeroext 112) #11, !dbg !13478
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13479
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13479
  %call10 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %12, i16 zeroext 24) #11, !dbg !13479
  %conv11 = zext i16 %call10 to i32, !dbg !13479
  %and12 = and i32 %conv11, 65280, !dbg !13479
  %add = add i32 %and12, 128, !dbg !13479
  %add13 = add i32 %add, 48, !dbg !13479
  %conv14 = trunc i32 %add13 to i16, !dbg !13479
  call void @usc_OutReg(%struct.mgsl_struct* %11, i16 zeroext 24, i16 zeroext %conv14) #11, !dbg !13479
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13480
  %pending_bh = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 22, !dbg !13481
  %14 = load i32, i32* %pending_bh, align 4, !dbg !13482
  %or = or i32 %14, 1, !dbg !13482
  store i32 %or, i32* %pending_bh, align 4, !dbg !13482
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13483
  %rx_rcc_underrun = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 50, !dbg !13484
  store i8 1, i8* %rx_rcc_underrun, align 2, !dbg !13485
  br label %if.end15, !dbg !13486

if.end15:                                         ; preds = %if.then5, %land.lhs.true, %if.end
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13487
  call void @usc_OutReg(%struct.mgsl_struct* %16, i16 zeroext 26, i16 zeroext 65) #11, !dbg !13487
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13488
  %18 = load i16, i16* %status, align 2, !dbg !13488
  %conv16 = zext i16 %18 to i32, !dbg !13488
  %and17 = and i32 %conv16, 15, !dbg !13488
  %conv18 = trunc i32 %and17 to i16, !dbg !13488
  call void @usc_OutReg(%struct.mgsl_struct* %17, i16 zeroext 28, i16 zeroext %conv18) #11, !dbg !13488
  ret void, !dbg !13489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_isr_io_pin(%struct.mgsl_struct* %info) #1 !dbg !13490 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %icount = alloca %struct.mgsl_icount*, align 8
  %status = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !13491, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount** %icount, metadata !13493, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13496, metadata !DIExpression()), !dbg !13497
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13498
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %0, i16 zeroext 28) #11, !dbg !13499
  store i16 %call, i16* %status, align 2, !dbg !13497
  %1 = load i32, i32* @debug_level, align 4, !dbg !13500
  %cmp = icmp sge i32 %1, 5, !dbg !13502
  br i1 %cmp, label %if.then, label %if.end, !dbg !13503

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %status, align 2, !dbg !13504
  %conv = zext i16 %2 to i32, !dbg !13504
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1284, i32 %conv) #12, !dbg !13505
  br label %if.end, !dbg !13505

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13506
  call void @usc_OutReg(%struct.mgsl_struct* %3, i16 zeroext 26, i16 zeroext 66) #11, !dbg !13506
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13507
  %5 = load i16, i16* %status, align 2, !dbg !13507
  %conv2 = zext i16 %5 to i32, !dbg !13507
  %and = and i32 %conv2, 43680, !dbg !13507
  %conv3 = trunc i32 %and to i16, !dbg !13507
  call void @usc_OutReg(%struct.mgsl_struct* %4, i16 zeroext 28, i16 zeroext %conv3) #11, !dbg !13507
  %6 = load i16, i16* %status, align 2, !dbg !13508
  %conv4 = zext i16 %6 to i32, !dbg !13508
  %and5 = and i32 %conv4, 2720, !dbg !13510
  %tobool = icmp ne i32 %and5, 0, !dbg !13510
  br i1 %tobool, label %if.then6, label %if.end194, !dbg !13511

if.then6:                                         ; preds = %if.end
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13512
  %icount7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 4, !dbg !13514
  store %struct.mgsl_icount* %icount7, %struct.mgsl_icount** %icount, align 8, !dbg !13515
  %8 = load i16, i16* %status, align 2, !dbg !13516
  %conv8 = zext i16 %8 to i32, !dbg !13516
  %and9 = and i32 %conv8, 2048, !dbg !13518
  %tobool10 = icmp ne i32 %and9, 0, !dbg !13518
  br i1 %tobool10, label %if.then11, label %if.end29, !dbg !13519

if.then11:                                        ; preds = %if.then6
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13520
  %ri_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 29, !dbg !13523
  %10 = load i32, i32* %ri_chkcount, align 8, !dbg !13524
  %inc = add i32 %10, 1, !dbg !13524
  store i32 %inc, i32* %ri_chkcount, align 8, !dbg !13524
  %cmp12 = icmp sge i32 %10, 100, !dbg !13525
  br i1 %cmp12, label %if.then14, label %if.end19, !dbg !13526

if.then14:                                        ; preds = %if.then11
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13527
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13527
  %call15 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %12, i16 zeroext 30) #11, !dbg !13527
  %conv16 = zext i16 %call15 to i32, !dbg !13527
  %and17 = and i32 %conv16, -3073, !dbg !13527
  %conv18 = trunc i32 %and17 to i16, !dbg !13527
  call void @usc_OutReg(%struct.mgsl_struct* %11, i16 zeroext 30, i16 zeroext %conv18) #11, !dbg !13527
  br label %if.end19, !dbg !13527

if.end19:                                         ; preds = %if.then14, %if.then11
  %13 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !13528
  %rng = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %13, i32 0, i32 2, !dbg !13529
  %14 = load i32, i32* %rng, align 4, !dbg !13530
  %inc20 = add i32 %14, 1, !dbg !13530
  store i32 %inc20, i32* %rng, align 4, !dbg !13530
  %15 = load i16, i16* %status, align 2, !dbg !13531
  %conv21 = zext i16 %15 to i32, !dbg !13531
  %and22 = and i32 %conv21, 1024, !dbg !13533
  %tobool23 = icmp ne i32 %and22, 0, !dbg !13533
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !13534

if.then24:                                        ; preds = %if.end19
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13535
  %input_signal_events = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 88, !dbg !13536
  %ri_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events, i32 0, i32 0, !dbg !13537
  %17 = load i32, i32* %ri_up, align 4, !dbg !13538
  %inc25 = add i32 %17, 1, !dbg !13538
  store i32 %inc25, i32* %ri_up, align 4, !dbg !13538
  br label %if.end28, !dbg !13535

if.else:                                          ; preds = %if.end19
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13539
  %input_signal_events26 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 88, !dbg !13540
  %ri_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events26, i32 0, i32 1, !dbg !13541
  %19 = load i32, i32* %ri_down, align 4, !dbg !13542
  %inc27 = add i32 %19, 1, !dbg !13542
  store i32 %inc27, i32* %ri_down, align 4, !dbg !13542
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then24
  br label %if.end29, !dbg !13543

if.end29:                                         ; preds = %if.end28, %if.then6
  %20 = load i16, i16* %status, align 2, !dbg !13544
  %conv30 = zext i16 %20 to i32, !dbg !13544
  %and31 = and i32 %conv30, 512, !dbg !13546
  %tobool32 = icmp ne i32 %and31, 0, !dbg !13546
  br i1 %tobool32, label %if.then33, label %if.end54, !dbg !13547

if.then33:                                        ; preds = %if.end29
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13548
  %dsr_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 28, !dbg !13551
  %22 = load i32, i32* %dsr_chkcount, align 4, !dbg !13552
  %inc34 = add i32 %22, 1, !dbg !13552
  store i32 %inc34, i32* %dsr_chkcount, align 4, !dbg !13552
  %cmp35 = icmp sge i32 %22, 100, !dbg !13553
  br i1 %cmp35, label %if.then37, label %if.end42, !dbg !13554

if.then37:                                        ; preds = %if.then33
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13555
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13555
  %call38 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %24, i16 zeroext 30) #11, !dbg !13555
  %conv39 = zext i16 %call38 to i32, !dbg !13555
  %and40 = and i32 %conv39, -769, !dbg !13555
  %conv41 = trunc i32 %and40 to i16, !dbg !13555
  call void @usc_OutReg(%struct.mgsl_struct* %23, i16 zeroext 30, i16 zeroext %conv41) #11, !dbg !13555
  br label %if.end42, !dbg !13555

if.end42:                                         ; preds = %if.then37, %if.then33
  %25 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !13556
  %dsr = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %25, i32 0, i32 1, !dbg !13557
  %26 = load i32, i32* %dsr, align 4, !dbg !13558
  %inc43 = add i32 %26, 1, !dbg !13558
  store i32 %inc43, i32* %dsr, align 4, !dbg !13558
  %27 = load i16, i16* %status, align 2, !dbg !13559
  %conv44 = zext i16 %27 to i32, !dbg !13559
  %and45 = and i32 %conv44, 256, !dbg !13561
  %tobool46 = icmp ne i32 %and45, 0, !dbg !13561
  br i1 %tobool46, label %if.then47, label %if.else50, !dbg !13562

if.then47:                                        ; preds = %if.end42
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13563
  %input_signal_events48 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 88, !dbg !13564
  %dsr_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events48, i32 0, i32 2, !dbg !13565
  %29 = load i32, i32* %dsr_up, align 4, !dbg !13566
  %inc49 = add i32 %29, 1, !dbg !13566
  store i32 %inc49, i32* %dsr_up, align 4, !dbg !13566
  br label %if.end53, !dbg !13563

if.else50:                                        ; preds = %if.end42
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13567
  %input_signal_events51 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 88, !dbg !13568
  %dsr_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events51, i32 0, i32 3, !dbg !13569
  %31 = load i32, i32* %dsr_down, align 4, !dbg !13570
  %inc52 = add i32 %31, 1, !dbg !13570
  store i32 %inc52, i32* %dsr_down, align 4, !dbg !13570
  br label %if.end53

if.end53:                                         ; preds = %if.else50, %if.then47
  br label %if.end54, !dbg !13571

if.end54:                                         ; preds = %if.end53, %if.end29
  %32 = load i16, i16* %status, align 2, !dbg !13572
  %conv55 = zext i16 %32 to i32, !dbg !13572
  %and56 = and i32 %conv55, 128, !dbg !13574
  %tobool57 = icmp ne i32 %and56, 0, !dbg !13574
  br i1 %tobool57, label %if.then58, label %if.end89, !dbg !13575

if.then58:                                        ; preds = %if.end54
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13576
  %dcd_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %33, i32 0, i32 26, !dbg !13579
  %34 = load i32, i32* %dcd_chkcount, align 4, !dbg !13580
  %inc59 = add i32 %34, 1, !dbg !13580
  store i32 %inc59, i32* %dcd_chkcount, align 4, !dbg !13580
  %cmp60 = icmp sge i32 %34, 100, !dbg !13581
  br i1 %cmp60, label %if.then62, label %if.end67, !dbg !13582

if.then62:                                        ; preds = %if.then58
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13583
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13583
  %call63 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %36, i16 zeroext 30) #11, !dbg !13583
  %conv64 = zext i16 %call63 to i32, !dbg !13583
  %and65 = and i32 %conv64, -193, !dbg !13583
  %conv66 = trunc i32 %and65 to i16, !dbg !13583
  call void @usc_OutReg(%struct.mgsl_struct* %35, i16 zeroext 30, i16 zeroext %conv66) #11, !dbg !13583
  br label %if.end67, !dbg !13583

if.end67:                                         ; preds = %if.then62, %if.then58
  %37 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !13584
  %dcd = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %37, i32 0, i32 3, !dbg !13585
  %38 = load i32, i32* %dcd, align 4, !dbg !13586
  %inc68 = add i32 %38, 1, !dbg !13586
  store i32 %inc68, i32* %dcd, align 4, !dbg !13586
  %39 = load i16, i16* %status, align 2, !dbg !13587
  %conv69 = zext i16 %39 to i32, !dbg !13587
  %and70 = and i32 %conv69, 64, !dbg !13589
  %tobool71 = icmp ne i32 %and70, 0, !dbg !13589
  br i1 %tobool71, label %if.then72, label %if.else75, !dbg !13590

if.then72:                                        ; preds = %if.end67
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13591
  %input_signal_events73 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 88, !dbg !13593
  %dcd_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events73, i32 0, i32 4, !dbg !13594
  %41 = load i32, i32* %dcd_up, align 4, !dbg !13595
  %inc74 = add i32 %41, 1, !dbg !13595
  store i32 %inc74, i32* %dcd_up, align 4, !dbg !13595
  br label %if.end78, !dbg !13596

if.else75:                                        ; preds = %if.end67
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13597
  %input_signal_events76 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 88, !dbg !13598
  %dcd_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events76, i32 0, i32 5, !dbg !13599
  %43 = load i32, i32* %dcd_down, align 4, !dbg !13600
  %inc77 = add i32 %43, 1, !dbg !13600
  store i32 %inc77, i32* %dcd_down, align 4, !dbg !13600
  br label %if.end78

if.end78:                                         ; preds = %if.else75, %if.then72
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13601
  %netcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %44, i32 0, i32 89, !dbg !13603
  %45 = load i32, i32* %netcount, align 4, !dbg !13603
  %tobool79 = icmp ne i32 %45, 0, !dbg !13601
  br i1 %tobool79, label %if.then80, label %if.end88, !dbg !13604

if.then80:                                        ; preds = %if.end78
  %46 = load i16, i16* %status, align 2, !dbg !13605
  %conv81 = zext i16 %46 to i32, !dbg !13605
  %and82 = and i32 %conv81, 64, !dbg !13608
  %tobool83 = icmp ne i32 %and82, 0, !dbg !13608
  br i1 %tobool83, label %if.then84, label %if.else85, !dbg !13609

if.then84:                                        ; preds = %if.then80
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13610
  %netdev = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 91, !dbg !13611
  %48 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13611
  call void @netif_carrier_on(%struct.net_device* %48) #11, !dbg !13612
  br label %if.end87, !dbg !13612

if.else85:                                        ; preds = %if.then80
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13613
  %netdev86 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %49, i32 0, i32 91, !dbg !13614
  %50 = load %struct.net_device*, %struct.net_device** %netdev86, align 8, !dbg !13614
  call void @netif_carrier_off(%struct.net_device* %50) #11, !dbg !13615
  br label %if.end87

if.end87:                                         ; preds = %if.else85, %if.then84
  br label %if.end88, !dbg !13616

if.end88:                                         ; preds = %if.end87, %if.end78
  br label %if.end89, !dbg !13617

if.end89:                                         ; preds = %if.end88, %if.end54
  %51 = load i16, i16* %status, align 2, !dbg !13618
  %conv90 = zext i16 %51 to i32, !dbg !13618
  %and91 = and i32 %conv90, 32, !dbg !13620
  %tobool92 = icmp ne i32 %and91, 0, !dbg !13620
  br i1 %tobool92, label %if.then93, label %if.end114, !dbg !13621

if.then93:                                        ; preds = %if.end89
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13622
  %cts_chkcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %52, i32 0, i32 27, !dbg !13625
  %53 = load i32, i32* %cts_chkcount, align 8, !dbg !13626
  %inc94 = add i32 %53, 1, !dbg !13626
  store i32 %inc94, i32* %cts_chkcount, align 8, !dbg !13626
  %cmp95 = icmp sge i32 %53, 100, !dbg !13627
  br i1 %cmp95, label %if.then97, label %if.end102, !dbg !13628

if.then97:                                        ; preds = %if.then93
  %54 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13629
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13629
  %call98 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %55, i16 zeroext 30) #11, !dbg !13629
  %conv99 = zext i16 %call98 to i32, !dbg !13629
  %and100 = and i32 %conv99, -49, !dbg !13629
  %conv101 = trunc i32 %and100 to i16, !dbg !13629
  call void @usc_OutReg(%struct.mgsl_struct* %54, i16 zeroext 30, i16 zeroext %conv101) #11, !dbg !13629
  br label %if.end102, !dbg !13629

if.end102:                                        ; preds = %if.then97, %if.then93
  %56 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !13630
  %cts = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %56, i32 0, i32 0, !dbg !13631
  %57 = load i32, i32* %cts, align 4, !dbg !13632
  %inc103 = add i32 %57, 1, !dbg !13632
  store i32 %inc103, i32* %cts, align 4, !dbg !13632
  %58 = load i16, i16* %status, align 2, !dbg !13633
  %conv104 = zext i16 %58 to i32, !dbg !13633
  %and105 = and i32 %conv104, 16, !dbg !13635
  %tobool106 = icmp ne i32 %and105, 0, !dbg !13635
  br i1 %tobool106, label %if.then107, label %if.else110, !dbg !13636

if.then107:                                       ; preds = %if.end102
  %59 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13637
  %input_signal_events108 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %59, i32 0, i32 88, !dbg !13638
  %cts_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events108, i32 0, i32 6, !dbg !13639
  %60 = load i32, i32* %cts_up, align 4, !dbg !13640
  %inc109 = add i32 %60, 1, !dbg !13640
  store i32 %inc109, i32* %cts_up, align 4, !dbg !13640
  br label %if.end113, !dbg !13637

if.else110:                                       ; preds = %if.end102
  %61 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13641
  %input_signal_events111 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %61, i32 0, i32 88, !dbg !13642
  %cts_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events111, i32 0, i32 7, !dbg !13643
  %62 = load i32, i32* %cts_down, align 4, !dbg !13644
  %inc112 = add i32 %62, 1, !dbg !13644
  store i32 %inc112, i32* %cts_down, align 4, !dbg !13644
  br label %if.end113

if.end113:                                        ; preds = %if.else110, %if.then107
  br label %if.end114, !dbg !13645

if.end114:                                        ; preds = %if.end113, %if.end89
  %63 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13646
  %status_event_wait_q = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %63, i32 0, i32 13, !dbg !13646
  call void @__wake_up(%struct.wait_queue_head* %status_event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !13646
  %64 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13647
  %event_wait_q = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %64, i32 0, i32 14, !dbg !13647
  call void @__wake_up(%struct.wait_queue_head* %event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !13647
  %65 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13648
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %65, i32 0, i32 1, !dbg !13650
  %call115 = call zeroext i1 @tty_port_check_carrier(%struct.tty_port* %port) #11, !dbg !13651
  br i1 %call115, label %land.lhs.true, label %if.end147, !dbg !13652

land.lhs.true:                                    ; preds = %if.end114
  %66 = load i16, i16* %status, align 2, !dbg !13653
  %conv117 = zext i16 %66 to i32, !dbg !13653
  %and118 = and i32 %conv117, 128, !dbg !13654
  %tobool119 = icmp ne i32 %and118, 0, !dbg !13654
  br i1 %tobool119, label %if.then120, label %if.end147, !dbg !13655

if.then120:                                       ; preds = %land.lhs.true
  %67 = load i32, i32* @debug_level, align 4, !dbg !13656
  %cmp121 = icmp sge i32 %67, 5, !dbg !13659
  br i1 %cmp121, label %if.then123, label %if.end128, !dbg !13660

if.then123:                                       ; preds = %if.then120
  %68 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13661
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %68, i32 0, i32 56, !dbg !13662
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !13661
  %69 = load i16, i16* %status, align 2, !dbg !13663
  %conv124 = zext i16 %69 to i32, !dbg !13663
  %and125 = and i32 %conv124, 64, !dbg !13664
  %tobool126 = icmp ne i32 %and125, 0, !dbg !13665
  %70 = zext i1 %tobool126 to i64, !dbg !13665
  %cond = select i1 %tobool126, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i64 0, i64 0), !dbg !13665
  %call127 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.60, i64 0, i64 0), i8* %arraydecay, i8* %cond) #12, !dbg !13666
  br label %if.end128, !dbg !13666

if.end128:                                        ; preds = %if.then123, %if.then120
  %71 = load i16, i16* %status, align 2, !dbg !13667
  %conv129 = zext i16 %71 to i32, !dbg !13667
  %and130 = and i32 %conv129, 64, !dbg !13669
  %tobool131 = icmp ne i32 %and130, 0, !dbg !13669
  br i1 %tobool131, label %if.then132, label %if.else134, !dbg !13670

if.then132:                                       ; preds = %if.end128
  %72 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13671
  %port133 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %72, i32 0, i32 1, !dbg !13671
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port133, i32 0, i32 8, !dbg !13671
  call void @__wake_up(%struct.wait_queue_head* %open_wait, i32 1, i32 1, i8* null) #11, !dbg !13671
  br label %if.end146, !dbg !13671

if.else134:                                       ; preds = %if.end128
  %73 = load i32, i32* @debug_level, align 4, !dbg !13672
  %cmp135 = icmp sge i32 %73, 5, !dbg !13675
  br i1 %cmp135, label %if.then137, label %if.end139, !dbg !13676

if.then137:                                       ; preds = %if.else134
  %call138 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i64 0, i64 0)) #12, !dbg !13677
  br label %if.end139, !dbg !13677

if.end139:                                        ; preds = %if.then137, %if.else134
  %74 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13678
  %port140 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %74, i32 0, i32 1, !dbg !13680
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port140, i32 0, i32 1, !dbg !13681
  %75 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !13681
  %tobool141 = icmp ne %struct.tty_struct* %75, null, !dbg !13678
  br i1 %tobool141, label %if.then142, label %if.end145, !dbg !13682

if.then142:                                       ; preds = %if.end139
  %76 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13683
  %port143 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %76, i32 0, i32 1, !dbg !13684
  %tty144 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port143, i32 0, i32 1, !dbg !13685
  %77 = load %struct.tty_struct*, %struct.tty_struct** %tty144, align 8, !dbg !13685
  call void @tty_hangup(%struct.tty_struct* %77) #11, !dbg !13686
  br label %if.end145, !dbg !13686

if.end145:                                        ; preds = %if.then142, %if.end139
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then132
  br label %if.end147, !dbg !13687

if.end147:                                        ; preds = %if.end146, %land.lhs.true, %if.end114
  %78 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13688
  %port148 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %78, i32 0, i32 1, !dbg !13690
  %call149 = call zeroext i1 @tty_port_cts_enabled(%struct.tty_port* %port148) #11, !dbg !13691
  br i1 %call149, label %land.lhs.true151, label %if.end193, !dbg !13692

land.lhs.true151:                                 ; preds = %if.end147
  %79 = load i16, i16* %status, align 2, !dbg !13693
  %conv152 = zext i16 %79 to i32, !dbg !13693
  %and153 = and i32 %conv152, 32, !dbg !13694
  %tobool154 = icmp ne i32 %and153, 0, !dbg !13694
  br i1 %tobool154, label %if.then155, label %if.end193, !dbg !13695

if.then155:                                       ; preds = %land.lhs.true151
  %80 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13696
  %port156 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %80, i32 0, i32 1, !dbg !13699
  %tty157 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port156, i32 0, i32 1, !dbg !13700
  %81 = load %struct.tty_struct*, %struct.tty_struct** %tty157, align 8, !dbg !13700
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %81, i32 0, i32 26, !dbg !13701
  %82 = load i32, i32* %hw_stopped, align 8, !dbg !13701
  %tobool158 = icmp ne i32 %82, 0, !dbg !13696
  br i1 %tobool158, label %if.then159, label %if.else173, !dbg !13702

if.then159:                                       ; preds = %if.then155
  %83 = load i16, i16* %status, align 2, !dbg !13703
  %conv160 = zext i16 %83 to i32, !dbg !13703
  %and161 = and i32 %conv160, 16, !dbg !13706
  %tobool162 = icmp ne i32 %and161, 0, !dbg !13706
  br i1 %tobool162, label %if.then163, label %if.end172, !dbg !13707

if.then163:                                       ; preds = %if.then159
  %84 = load i32, i32* @debug_level, align 4, !dbg !13708
  %cmp164 = icmp sge i32 %84, 5, !dbg !13711
  br i1 %cmp164, label %if.then166, label %if.end168, !dbg !13712

if.then166:                                       ; preds = %if.then163
  %call167 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !13713
  br label %if.end168, !dbg !13713

if.end168:                                        ; preds = %if.then166, %if.then163
  %85 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13714
  %port169 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %85, i32 0, i32 1, !dbg !13715
  %tty170 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port169, i32 0, i32 1, !dbg !13716
  %86 = load %struct.tty_struct*, %struct.tty_struct** %tty170, align 8, !dbg !13716
  %hw_stopped171 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %86, i32 0, i32 26, !dbg !13717
  store i32 0, i32* %hw_stopped171, align 8, !dbg !13718
  %87 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13719
  call void @usc_start_transmitter(%struct.mgsl_struct* %87) #11, !dbg !13720
  %88 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13721
  %pending_bh = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %88, i32 0, i32 22, !dbg !13722
  %89 = load i32, i32* %pending_bh, align 4, !dbg !13723
  %or = or i32 %89, 2, !dbg !13723
  store i32 %or, i32* %pending_bh, align 4, !dbg !13723
  br label %if.end205, !dbg !13724

if.end172:                                        ; preds = %if.then159
  br label %if.end192, !dbg !13725

if.else173:                                       ; preds = %if.then155
  %90 = load i16, i16* %status, align 2, !dbg !13726
  %conv174 = zext i16 %90 to i32, !dbg !13726
  %and175 = and i32 %conv174, 16, !dbg !13729
  %tobool176 = icmp ne i32 %and175, 0, !dbg !13729
  br i1 %tobool176, label %if.end191, label %if.then177, !dbg !13730

if.then177:                                       ; preds = %if.else173
  %91 = load i32, i32* @debug_level, align 4, !dbg !13731
  %cmp178 = icmp sge i32 %91, 5, !dbg !13734
  br i1 %cmp178, label %if.then180, label %if.end182, !dbg !13735

if.then180:                                       ; preds = %if.then177
  %call181 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !13736
  br label %if.end182, !dbg !13736

if.end182:                                        ; preds = %if.then180, %if.then177
  %92 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13737
  %port183 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %92, i32 0, i32 1, !dbg !13739
  %tty184 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port183, i32 0, i32 1, !dbg !13740
  %93 = load %struct.tty_struct*, %struct.tty_struct** %tty184, align 8, !dbg !13740
  %tobool185 = icmp ne %struct.tty_struct* %93, null, !dbg !13737
  br i1 %tobool185, label %if.then186, label %if.end190, !dbg !13741

if.then186:                                       ; preds = %if.end182
  %94 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13742
  %port187 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %94, i32 0, i32 1, !dbg !13743
  %tty188 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port187, i32 0, i32 1, !dbg !13744
  %95 = load %struct.tty_struct*, %struct.tty_struct** %tty188, align 8, !dbg !13744
  %hw_stopped189 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %95, i32 0, i32 26, !dbg !13745
  store i32 1, i32* %hw_stopped189, align 8, !dbg !13746
  br label %if.end190, !dbg !13742

if.end190:                                        ; preds = %if.then186, %if.end182
  %96 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13747
  call void @usc_stop_transmitter(%struct.mgsl_struct* %96) #11, !dbg !13748
  br label %if.end191, !dbg !13749

if.end191:                                        ; preds = %if.end190, %if.else173
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.end172
  br label %if.end193, !dbg !13750

if.end193:                                        ; preds = %if.end192, %land.lhs.true151, %if.end147
  br label %if.end194, !dbg !13751

if.end194:                                        ; preds = %if.end193, %if.end
  %97 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13752
  %pending_bh195 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %97, i32 0, i32 22, !dbg !13753
  %98 = load i32, i32* %pending_bh195, align 4, !dbg !13754
  %or196 = or i32 %98, 4, !dbg !13754
  store i32 %or196, i32* %pending_bh195, align 4, !dbg !13754
  %99 = load i16, i16* %status, align 2, !dbg !13755
  %conv197 = zext i16 %99 to i32, !dbg !13755
  %and198 = and i32 %conv197, 8192, !dbg !13757
  %tobool199 = icmp ne i32 %and198, 0, !dbg !13757
  br i1 %tobool199, label %if.then200, label %if.end205, !dbg !13758

if.then200:                                       ; preds = %if.end194
  %100 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13759
  %101 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13761
  %call201 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %101, i16 zeroext 30) #11, !dbg !13762
  %conv202 = zext i16 %call201 to i32, !dbg !13762
  %and203 = and i32 %conv202, -12289, !dbg !13763
  %conv204 = trunc i32 %and203 to i16, !dbg !13764
  call void @usc_OutReg(%struct.mgsl_struct* %100, i16 zeroext 30, i16 zeroext %conv204) #11, !dbg !13765
  %102 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13766
  call void @usc_OutReg(%struct.mgsl_struct* %102, i16 zeroext 28, i16 zeroext 8192) #11, !dbg !13766
  %103 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13767
  %irq_occurred = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %103, i32 0, i32 72, !dbg !13768
  store i8 1, i8* %irq_occurred, align 1, !dbg !13769
  br label %if.end205, !dbg !13770

if.end205:                                        ; preds = %if.end168, %if.then200, %if.end194
  ret void, !dbg !13771
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_isr_transmit_data(%struct.mgsl_struct* %info) #1 !dbg !13772 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !13773, metadata !DIExpression()), !dbg !13774
  %0 = load i32, i32* @debug_level, align 4, !dbg !13775
  %cmp = icmp sge i32 %0, 5, !dbg !13777
  br i1 %cmp, label %if.then, label %if.end, !dbg !13778

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13779
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 12, !dbg !13780
  %2 = load i32, i32* %xmit_cnt, align 8, !dbg !13780
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1402, i32 %2) #12, !dbg !13781
  br label %if.end, !dbg !13781

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13782
  call void @usc_OutReg(%struct.mgsl_struct* %3, i16 zeroext 26, i16 zeroext 68) #11, !dbg !13782
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13783
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 1, !dbg !13785
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !13786
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !13786
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 24, !dbg !13787
  %bf.load = load i8, i8* %stopped, align 4, !dbg !13787
  %bf.clear = and i8 %bf.load, 1, !dbg !13787
  %bf.cast = zext i8 %bf.clear to i64, !dbg !13787
  %conv = trunc i64 %bf.cast to i32, !dbg !13783
  %tobool = icmp ne i32 %conv, 0, !dbg !13783
  br i1 %tobool, label %if.then4, label %lor.lhs.false, !dbg !13788

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13789
  %port1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 1, !dbg !13790
  %tty2 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port1, i32 0, i32 1, !dbg !13791
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty2, align 8, !dbg !13791
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 26, !dbg !13792
  %8 = load i32, i32* %hw_stopped, align 8, !dbg !13792
  %tobool3 = icmp ne i32 %8, 0, !dbg !13789
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !13793

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13794
  call void @usc_stop_transmitter(%struct.mgsl_struct* %9) #11, !dbg !13796
  br label %if.end14, !dbg !13797

if.end5:                                          ; preds = %lor.lhs.false
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13798
  %xmit_cnt6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 12, !dbg !13800
  %11 = load i32, i32* %xmit_cnt6, align 8, !dbg !13800
  %tobool7 = icmp ne i32 %11, 0, !dbg !13798
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !13801

if.then8:                                         ; preds = %if.end5
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13802
  call void @usc_load_txfifo(%struct.mgsl_struct* %12) #11, !dbg !13803
  br label %if.end9, !dbg !13803

if.else:                                          ; preds = %if.end5
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13804
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 52, !dbg !13805
  store i8 0, i8* %tx_active, align 4, !dbg !13806
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13807
  %xmit_cnt10 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 12, !dbg !13809
  %15 = load i32, i32* %xmit_cnt10, align 8, !dbg !13809
  %cmp11 = icmp slt i32 %15, 256, !dbg !13810
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !13811

if.then13:                                        ; preds = %if.end9
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13812
  %pending_bh = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 22, !dbg !13813
  %17 = load i32, i32* %pending_bh, align 4, !dbg !13814
  %or = or i32 %17, 2, !dbg !13814
  store i32 %or, i32* %pending_bh, align 4, !dbg !13814
  br label %if.end14, !dbg !13812

if.end14:                                         ; preds = %if.then4, %if.then13, %if.end9
  ret void, !dbg !13815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_isr_transmit_status(%struct.mgsl_struct* %info) #1 !dbg !13816 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %status = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !13817, metadata !DIExpression()), !dbg !13818
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13819, metadata !DIExpression()), !dbg !13820
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13821
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %0, i16 zeroext 52) #11, !dbg !13822
  store i16 %call, i16* %status, align 2, !dbg !13820
  %1 = load i32, i32* @debug_level, align 4, !dbg !13823
  %cmp = icmp sge i32 %1, 5, !dbg !13825
  br i1 %cmp, label %if.then, label %if.end, !dbg !13826

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %status, align 2, !dbg !13827
  %conv = zext i16 %2 to i32, !dbg !13827
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1216, i32 %conv) #12, !dbg !13828
  br label %if.end, !dbg !13828

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13829
  call void @usc_OutReg(%struct.mgsl_struct* %3, i16 zeroext 26, i16 zeroext 72) #11, !dbg !13829
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13830
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13830
  %tcsr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 55, !dbg !13830
  %6 = load i16, i16* %tcsr_value, align 2, !dbg !13830
  %conv2 = zext i16 %6 to i32, !dbg !13830
  %7 = load i16, i16* %status, align 2, !dbg !13830
  %conv3 = zext i16 %7 to i32, !dbg !13830
  %and = and i32 %conv3, 255, !dbg !13830
  %add = add i32 %conv2, %and, !dbg !13830
  %conv4 = trunc i32 %add to i16, !dbg !13830
  call void @usc_OutReg(%struct.mgsl_struct* %4, i16 zeroext 52, i16 zeroext %conv4) #11, !dbg !13830
  %8 = load i16, i16* %status, align 2, !dbg !13831
  %conv5 = zext i16 %8 to i32, !dbg !13831
  %and6 = and i32 %conv5, 34, !dbg !13833
  %tobool = icmp ne i32 %and6, 0, !dbg !13833
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !13834

if.then7:                                         ; preds = %if.end
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13835
  call void @usc_DmaCmd(%struct.mgsl_struct* %9, i16 zeroext 4096) #11, !dbg !13837
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13838
  call void @usc_RTCmd(%struct.mgsl_struct* %10, i16 zeroext 20480) #11, !dbg !13839
  br label %if.end8, !dbg !13840

if.end8:                                          ; preds = %if.then7, %if.end
  %11 = load i16, i16* %status, align 2, !dbg !13841
  %conv9 = zext i16 %11 to i32, !dbg !13841
  %and10 = and i32 %conv9, 16, !dbg !13843
  %tobool11 = icmp ne i32 %and10, 0, !dbg !13843
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !13844

if.then12:                                        ; preds = %if.end8
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13845
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 4, !dbg !13846
  %txok = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 11, !dbg !13847
  %13 = load i32, i32* %txok, align 4, !dbg !13848
  %inc = add i32 %13, 1, !dbg !13848
  store i32 %inc, i32* %txok, align 4, !dbg !13848
  br label %if.end32, !dbg !13845

if.else:                                          ; preds = %if.end8
  %14 = load i16, i16* %status, align 2, !dbg !13849
  %conv13 = zext i16 %14 to i32, !dbg !13849
  %and14 = and i32 %conv13, 2, !dbg !13851
  %tobool15 = icmp ne i32 %and14, 0, !dbg !13851
  br i1 %tobool15, label %if.then16, label %if.else19, !dbg !13852

if.then16:                                        ; preds = %if.else
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13853
  %icount17 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 4, !dbg !13854
  %txunder = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount17, i32 0, i32 12, !dbg !13855
  %16 = load i32, i32* %txunder, align 8, !dbg !13856
  %inc18 = add i32 %16, 1, !dbg !13856
  store i32 %inc18, i32* %txunder, align 8, !dbg !13856
  br label %if.end31, !dbg !13853

if.else19:                                        ; preds = %if.else
  %17 = load i16, i16* %status, align 2, !dbg !13857
  %conv20 = zext i16 %17 to i32, !dbg !13857
  %and21 = and i32 %conv20, 32, !dbg !13859
  %tobool22 = icmp ne i32 %and21, 0, !dbg !13859
  br i1 %tobool22, label %if.then23, label %if.else26, !dbg !13860

if.then23:                                        ; preds = %if.else19
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13861
  %icount24 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 4, !dbg !13862
  %txabort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount24, i32 0, i32 13, !dbg !13863
  %19 = load i32, i32* %txabort, align 4, !dbg !13864
  %inc25 = add i32 %19, 1, !dbg !13864
  store i32 %inc25, i32* %txabort, align 4, !dbg !13864
  br label %if.end30, !dbg !13861

if.else26:                                        ; preds = %if.else19
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13865
  %icount27 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 4, !dbg !13866
  %txunder28 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount27, i32 0, i32 12, !dbg !13867
  %21 = load i32, i32* %txunder28, align 8, !dbg !13868
  %inc29 = add i32 %21, 1, !dbg !13868
  store i32 %inc29, i32* %txunder28, align 8, !dbg !13868
  br label %if.end30

if.end30:                                         ; preds = %if.else26, %if.then23
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then16
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13869
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 52, !dbg !13870
  store i8 0, i8* %tx_active, align 4, !dbg !13871
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13872
  %xmit_tail = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 11, !dbg !13873
  store i32 0, i32* %xmit_tail, align 4, !dbg !13874
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13875
  %xmit_head = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 10, !dbg !13876
  store i32 0, i32* %xmit_head, align 8, !dbg !13877
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13878
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 12, !dbg !13879
  store i32 0, i32* %xmit_cnt, align 8, !dbg !13880
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13881
  %tx_timer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 15, !dbg !13882
  %call33 = call i32 @del_timer(%struct.timer_list* %tx_timer) #11, !dbg !13883
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13884
  %drop_rts_on_tx_done = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 85, !dbg !13886
  %28 = load i8, i8* %drop_rts_on_tx_done, align 8, !dbg !13886
  %tobool34 = trunc i8 %28 to i1, !dbg !13886
  br i1 %tobool34, label %if.then35, label %if.end46, !dbg !13887

if.then35:                                        ; preds = %if.end32
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13888
  call void @usc_get_serial_signals(%struct.mgsl_struct* %29) #11, !dbg !13890
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13891
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 71, !dbg !13893
  %31 = load i8, i8* %serial_signals, align 8, !dbg !13893
  %conv36 = zext i8 %31 to i32, !dbg !13891
  %and37 = and i32 %conv36, 32, !dbg !13894
  %tobool38 = icmp ne i32 %and37, 0, !dbg !13894
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !13895

if.then39:                                        ; preds = %if.then35
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13896
  %serial_signals40 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 71, !dbg !13898
  %33 = load i8, i8* %serial_signals40, align 8, !dbg !13899
  %conv41 = zext i8 %33 to i32, !dbg !13899
  %and42 = and i32 %conv41, -33, !dbg !13899
  %conv43 = trunc i32 %and42 to i8, !dbg !13899
  store i8 %conv43, i8* %serial_signals40, align 8, !dbg !13899
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13900
  call void @usc_set_serial_signals(%struct.mgsl_struct* %34) #11, !dbg !13901
  br label %if.end44, !dbg !13902

if.end44:                                         ; preds = %if.then39, %if.then35
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13903
  %drop_rts_on_tx_done45 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 85, !dbg !13904
  store i8 0, i8* %drop_rts_on_tx_done45, align 8, !dbg !13905
  br label %if.end46, !dbg !13906

if.end46:                                         ; preds = %if.end44, %if.end32
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13907
  %netcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %36, i32 0, i32 89, !dbg !13909
  %37 = load i32, i32* %netcount, align 4, !dbg !13909
  %tobool47 = icmp ne i32 %37, 0, !dbg !13907
  br i1 %tobool47, label %if.then48, label %if.else49, !dbg !13910

if.then48:                                        ; preds = %if.end46
  %38 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13911
  call void @hdlcdev_tx_done(%struct.mgsl_struct* %38) #11, !dbg !13912
  br label %if.end57, !dbg !13912

if.else49:                                        ; preds = %if.end46
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13913
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %39, i32 0, i32 1, !dbg !13916
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !13917
  %40 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !13917
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %40, i32 0, i32 24, !dbg !13918
  %bf.load = load i8, i8* %stopped, align 4, !dbg !13918
  %bf.clear = and i8 %bf.load, 1, !dbg !13918
  %bf.cast = zext i8 %bf.clear to i64, !dbg !13918
  %conv50 = trunc i64 %bf.cast to i32, !dbg !13913
  %tobool51 = icmp ne i32 %conv50, 0, !dbg !13913
  br i1 %tobool51, label %if.then55, label %lor.lhs.false, !dbg !13919

lor.lhs.false:                                    ; preds = %if.else49
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13920
  %port52 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %41, i32 0, i32 1, !dbg !13921
  %tty53 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port52, i32 0, i32 1, !dbg !13922
  %42 = load %struct.tty_struct*, %struct.tty_struct** %tty53, align 8, !dbg !13922
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %42, i32 0, i32 26, !dbg !13923
  %43 = load i32, i32* %hw_stopped, align 8, !dbg !13923
  %tobool54 = icmp ne i32 %43, 0, !dbg !13920
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !13924

if.then55:                                        ; preds = %lor.lhs.false, %if.else49
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13925
  call void @usc_stop_transmitter(%struct.mgsl_struct* %44) #11, !dbg !13927
  br label %if.end57, !dbg !13928

if.end56:                                         ; preds = %lor.lhs.false
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13929
  %pending_bh = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %45, i32 0, i32 22, !dbg !13930
  %46 = load i32, i32* %pending_bh, align 4, !dbg !13931
  %or = or i32 %46, 2, !dbg !13931
  store i32 %or, i32* %pending_bh, align 4, !dbg !13931
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %if.end56, %if.then48
  ret void, !dbg !13932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_isr_receive_data(%struct.mgsl_struct* %info) #1 !dbg !13933 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %Fifocount = alloca i32, align 4
  %status = alloca i16, align 2
  %work = alloca i32, align 4
  %DataByte = alloca i8, align 1
  %icount = alloca %struct.mgsl_icount*, align 8
  %flag = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !13934, metadata !DIExpression()), !dbg !13935
  call void @llvm.dbg.declare(metadata i32* %Fifocount, metadata !13936, metadata !DIExpression()), !dbg !13937
  call void @llvm.dbg.declare(metadata i16* %status, metadata !13938, metadata !DIExpression()), !dbg !13939
  call void @llvm.dbg.declare(metadata i32* %work, metadata !13940, metadata !DIExpression()), !dbg !13941
  store i32 0, i32* %work, align 4, !dbg !13941
  call void @llvm.dbg.declare(metadata i8* %DataByte, metadata !13942, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount** %icount, metadata !13944, metadata !DIExpression()), !dbg !13945
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13946
  %icount1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 4, !dbg !13947
  store %struct.mgsl_icount* %icount1, %struct.mgsl_icount** %icount, align 8, !dbg !13945
  %1 = load i32, i32* @debug_level, align 4, !dbg !13948
  %cmp = icmp sge i32 %1, 5, !dbg !13950
  br i1 %cmp, label %if.then, label %if.end, !dbg !13951

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1440) #12, !dbg !13952
  br label %if.end, !dbg !13952

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13953
  call void @usc_OutReg(%struct.mgsl_struct* %2, i16 zeroext 26, i16 zeroext 80) #11, !dbg !13953
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13954
  call void @usc_OutReg(%struct.mgsl_struct* %3, i16 zeroext 36, i16 zeroext 20480) #11, !dbg !13954
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13955
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13956
  %call2 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %5, i16 zeroext 102) #11, !dbg !13957
  %conv = zext i16 %call2 to i32, !dbg !13957
  %and = and i32 %conv, -9, !dbg !13958
  %conv3 = trunc i32 %and to i16, !dbg !13959
  call void @usc_OutReg(%struct.mgsl_struct* %4, i16 zeroext 102, i16 zeroext %conv3) #11, !dbg !13960
  br label %while.cond, !dbg !13961

while.cond:                                       ; preds = %if.end99, %if.then60, %if.end
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13962
  %call4 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %6, i16 zeroext 38) #11, !dbg !13963
  %conv5 = zext i16 %call4 to i32, !dbg !13963
  %shr = ashr i32 %conv5, 8, !dbg !13964
  store i32 %shr, i32* %Fifocount, align 4, !dbg !13965
  %tobool = icmp ne i32 %shr, 0, !dbg !13961
  br i1 %tobool, label %while.body, label %while.end, !dbg !13961

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !13966, metadata !DIExpression()), !dbg !13968
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13969
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 59, !dbg !13970
  %8 = load i32, i32* %io_base, align 4, !dbg !13970
  %add = add i32 %8, 4, !dbg !13971
  %call6 = call zeroext i16 @inw(i32 %add) #11, !dbg !13972
  %conv7 = zext i16 %call6 to i32, !dbg !13972
  %and8 = and i32 %conv7, 1920, !dbg !13973
  %or = or i32 %and8, 96, !dbg !13974
  %conv9 = trunc i32 %or to i16, !dbg !13975
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13976
  %io_base10 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 59, !dbg !13977
  %10 = load i32, i32* %io_base10, align 4, !dbg !13977
  %add11 = add i32 %10, 4, !dbg !13978
  call void @outw(i16 zeroext %conv9, i32 %add11) #11, !dbg !13979
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13980
  %io_base12 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 59, !dbg !13981
  %12 = load i32, i32* %io_base12, align 4, !dbg !13981
  %add13 = add i32 %12, 4, !dbg !13982
  %call14 = call zeroext i8 @inb(i32 %add13) #11, !dbg !13983
  store i8 %call14, i8* %DataByte, align 1, !dbg !13984
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13985
  %call15 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %13, i16 zeroext 36) #11, !dbg !13986
  store i16 %call15, i16* %status, align 2, !dbg !13987
  %14 = load i16, i16* %status, align 2, !dbg !13988
  %conv16 = zext i16 %14 to i32, !dbg !13988
  %and17 = and i32 %conv16, 46, !dbg !13990
  %tobool18 = icmp ne i32 %and17, 0, !dbg !13990
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !13991

if.then19:                                        ; preds = %while.body
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !13992
  call void @usc_OutReg(%struct.mgsl_struct* %15, i16 zeroext 36, i16 zeroext 502) #11, !dbg !13992
  br label %if.end20, !dbg !13992

if.end20:                                         ; preds = %if.then19, %while.body
  %16 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !13993
  %rx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %16, i32 0, i32 5, !dbg !13994
  %17 = load i32, i32* %rx, align 4, !dbg !13995
  %inc = add i32 %17, 1, !dbg !13995
  store i32 %inc, i32* %rx, align 4, !dbg !13995
  store i32 0, i32* %flag, align 4, !dbg !13996
  %18 = load i16, i16* %status, align 2, !dbg !13997
  %conv21 = zext i16 %18 to i32, !dbg !13997
  %and22 = and i32 %conv21, 46, !dbg !13999
  %tobool23 = icmp ne i32 %and22, 0, !dbg !13999
  br i1 %tobool23, label %if.then24, label %if.end88, !dbg !14000

if.then24:                                        ; preds = %if.end20
  %19 = load i16, i16* %status, align 2, !dbg !14001
  %conv25 = zext i16 %19 to i32, !dbg !14001
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0), i32 %conv25) #12, !dbg !14003
  %20 = load i16, i16* %status, align 2, !dbg !14004
  %conv27 = zext i16 %20 to i32, !dbg !14004
  %and28 = and i32 %conv27, 32, !dbg !14006
  %tobool29 = icmp ne i32 %and28, 0, !dbg !14006
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !14007

if.then30:                                        ; preds = %if.then24
  %21 = load i16, i16* %status, align 2, !dbg !14008
  %conv31 = zext i16 %21 to i32, !dbg !14008
  %and32 = and i32 %conv31, -13, !dbg !14008
  %conv33 = trunc i32 %and32 to i16, !dbg !14008
  store i16 %conv33, i16* %status, align 2, !dbg !14008
  %22 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !14010
  %brk = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %22, i32 0, i32 9, !dbg !14011
  %23 = load i32, i32* %brk, align 4, !dbg !14012
  %inc34 = add i32 %23, 1, !dbg !14012
  store i32 %inc34, i32* %brk, align 4, !dbg !14012
  br label %if.end55, !dbg !14013

if.else:                                          ; preds = %if.then24
  %24 = load i16, i16* %status, align 2, !dbg !14014
  %conv35 = zext i16 %24 to i32, !dbg !14014
  %and36 = and i32 %conv35, 4, !dbg !14016
  %tobool37 = icmp ne i32 %and36, 0, !dbg !14016
  br i1 %tobool37, label %if.then38, label %if.else40, !dbg !14017

if.then38:                                        ; preds = %if.else
  %25 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !14018
  %parity = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %25, i32 0, i32 7, !dbg !14019
  %26 = load i32, i32* %parity, align 4, !dbg !14020
  %inc39 = add i32 %26, 1, !dbg !14020
  store i32 %inc39, i32* %parity, align 4, !dbg !14020
  br label %if.end54, !dbg !14018

if.else40:                                        ; preds = %if.else
  %27 = load i16, i16* %status, align 2, !dbg !14021
  %conv41 = zext i16 %27 to i32, !dbg !14021
  %and42 = and i32 %conv41, 8, !dbg !14023
  %tobool43 = icmp ne i32 %and42, 0, !dbg !14023
  br i1 %tobool43, label %if.then44, label %if.else46, !dbg !14024

if.then44:                                        ; preds = %if.else40
  %28 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !14025
  %frame = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %28, i32 0, i32 6, !dbg !14026
  %29 = load i32, i32* %frame, align 4, !dbg !14027
  %inc45 = add i32 %29, 1, !dbg !14027
  store i32 %inc45, i32* %frame, align 4, !dbg !14027
  br label %if.end53, !dbg !14025

if.else46:                                        ; preds = %if.else40
  %30 = load i16, i16* %status, align 2, !dbg !14028
  %conv47 = zext i16 %30 to i32, !dbg !14028
  %and48 = and i32 %conv47, 2, !dbg !14030
  %tobool49 = icmp ne i32 %and48, 0, !dbg !14030
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !14031

if.then50:                                        ; preds = %if.else46
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14032
  call void @usc_RTCmd(%struct.mgsl_struct* %31, i16 zeroext 18432) #11, !dbg !14034
  %32 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !14035
  %overrun = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %32, i32 0, i32 8, !dbg !14036
  %33 = load i32, i32* %overrun, align 4, !dbg !14037
  %inc51 = add i32 %33, 1, !dbg !14037
  store i32 %inc51, i32* %overrun, align 4, !dbg !14037
  br label %if.end52, !dbg !14038

if.end52:                                         ; preds = %if.then50, %if.else46
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then44
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then38
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then30
  %34 = load i16, i16* %status, align 2, !dbg !14039
  %conv56 = zext i16 %34 to i32, !dbg !14039
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14041
  %ignore_status_mask = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 8, !dbg !14042
  %36 = load i16, i16* %ignore_status_mask, align 2, !dbg !14042
  %conv57 = zext i16 %36 to i32, !dbg !14041
  %and58 = and i32 %conv56, %conv57, !dbg !14043
  %tobool59 = icmp ne i32 %and58, 0, !dbg !14043
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !14044

if.then60:                                        ; preds = %if.end55
  br label %while.cond, !dbg !14045, !llvm.loop !14046

if.end61:                                         ; preds = %if.end55
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14048
  %read_status_mask = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 7, !dbg !14049
  %38 = load i16, i16* %read_status_mask, align 4, !dbg !14049
  %conv62 = zext i16 %38 to i32, !dbg !14048
  %39 = load i16, i16* %status, align 2, !dbg !14050
  %conv63 = zext i16 %39 to i32, !dbg !14050
  %and64 = and i32 %conv63, %conv62, !dbg !14050
  %conv65 = trunc i32 %and64 to i16, !dbg !14050
  store i16 %conv65, i16* %status, align 2, !dbg !14050
  %40 = load i16, i16* %status, align 2, !dbg !14051
  %conv66 = zext i16 %40 to i32, !dbg !14051
  %and67 = and i32 %conv66, 32, !dbg !14053
  %tobool68 = icmp ne i32 %and67, 0, !dbg !14053
  br i1 %tobool68, label %if.then69, label %if.else75, !dbg !14054

if.then69:                                        ; preds = %if.end61
  store i32 1, i32* %flag, align 4, !dbg !14055
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14057
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %41, i32 0, i32 1, !dbg !14059
  %flags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 10, !dbg !14060
  %42 = load i64, i64* %flags, align 8, !dbg !14060
  %and70 = and i64 %42, 4, !dbg !14061
  %tobool71 = icmp ne i64 %and70, 0, !dbg !14061
  br i1 %tobool71, label %if.then72, label %if.end74, !dbg !14062

if.then72:                                        ; preds = %if.then69
  %43 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14063
  %port73 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %43, i32 0, i32 1, !dbg !14064
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port73, i32 0, i32 1, !dbg !14065
  %44 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !14065
  call void @do_SAK(%struct.tty_struct* %44) #11, !dbg !14066
  br label %if.end74, !dbg !14066

if.end74:                                         ; preds = %if.then72, %if.then69
  br label %if.end87, !dbg !14067

if.else75:                                        ; preds = %if.end61
  %45 = load i16, i16* %status, align 2, !dbg !14068
  %conv76 = zext i16 %45 to i32, !dbg !14068
  %and77 = and i32 %conv76, 4, !dbg !14070
  %tobool78 = icmp ne i32 %and77, 0, !dbg !14070
  br i1 %tobool78, label %if.then79, label %if.else80, !dbg !14071

if.then79:                                        ; preds = %if.else75
  store i32 3, i32* %flag, align 4, !dbg !14072
  br label %if.end86, !dbg !14073

if.else80:                                        ; preds = %if.else75
  %46 = load i16, i16* %status, align 2, !dbg !14074
  %conv81 = zext i16 %46 to i32, !dbg !14074
  %and82 = and i32 %conv81, 8, !dbg !14076
  %tobool83 = icmp ne i32 %and82, 0, !dbg !14076
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !14077

if.then84:                                        ; preds = %if.else80
  store i32 2, i32* %flag, align 4, !dbg !14078
  br label %if.end85, !dbg !14079

if.end85:                                         ; preds = %if.then84, %if.else80
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then79
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.end74
  br label %if.end88, !dbg !14080

if.end88:                                         ; preds = %if.end87, %if.end20
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14081
  %port89 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 1, !dbg !14082
  %48 = load i8, i8* %DataByte, align 1, !dbg !14083
  %49 = load i32, i32* %flag, align 4, !dbg !14084
  %conv90 = trunc i32 %49 to i8, !dbg !14084
  %call91 = call i32 @tty_insert_flip_char(%struct.tty_port* %port89, i8 zeroext %48, i8 signext %conv90) #11, !dbg !14085
  %50 = load i16, i16* %status, align 2, !dbg !14086
  %conv92 = zext i16 %50 to i32, !dbg !14086
  %and93 = and i32 %conv92, 2, !dbg !14088
  %tobool94 = icmp ne i32 %and93, 0, !dbg !14088
  br i1 %tobool94, label %if.then95, label %if.end99, !dbg !14089

if.then95:                                        ; preds = %if.end88
  %51 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14090
  %port96 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %51, i32 0, i32 1, !dbg !14092
  %call97 = call i32 @tty_insert_flip_char(%struct.tty_port* %port96, i8 zeroext 0, i8 signext 4) #11, !dbg !14093
  %52 = load i32, i32* %work, align 4, !dbg !14094
  %add98 = add i32 %52, %call97, !dbg !14094
  store i32 %add98, i32* %work, align 4, !dbg !14094
  br label %if.end99, !dbg !14095

if.end99:                                         ; preds = %if.then95, %if.end88
  br label %while.cond, !dbg !13961, !llvm.loop !14046

while.end:                                        ; preds = %while.cond
  %53 = load i32, i32* @debug_level, align 4, !dbg !14096
  %cmp100 = icmp sge i32 %53, 5, !dbg !14098
  br i1 %cmp100, label %if.then102, label %if.end109, !dbg !14099

if.then102:                                       ; preds = %while.end
  %54 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !14100
  %rx103 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %54, i32 0, i32 5, !dbg !14102
  %55 = load i32, i32* %rx103, align 4, !dbg !14102
  %56 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !14103
  %brk104 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %56, i32 0, i32 9, !dbg !14104
  %57 = load i32, i32* %brk104, align 4, !dbg !14104
  %58 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !14105
  %parity105 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %58, i32 0, i32 7, !dbg !14106
  %59 = load i32, i32* %parity105, align 4, !dbg !14106
  %60 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !14107
  %frame106 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %60, i32 0, i32 6, !dbg !14108
  %61 = load i32, i32* %frame106, align 4, !dbg !14108
  %62 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !14109
  %overrun107 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %62, i32 0, i32 8, !dbg !14110
  %63 = load i32, i32* %overrun107, align 4, !dbg !14110
  %call108 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1515, i32 %55, i32 %57, i32 %59, i32 %61, i32 %63) #12, !dbg !14111
  br label %if.end109, !dbg !14112

if.end109:                                        ; preds = %if.then102, %while.end
  %64 = load i32, i32* %work, align 4, !dbg !14113
  %tobool110 = icmp ne i32 %64, 0, !dbg !14113
  br i1 %tobool110, label %if.then111, label %if.end113, !dbg !14115

if.then111:                                       ; preds = %if.end109
  %65 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14116
  %port112 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %65, i32 0, i32 1, !dbg !14117
  call void @tty_flip_buffer_push(%struct.tty_port* %port112) #11, !dbg !14118
  br label %if.end113, !dbg !14118

if.end113:                                        ; preds = %if.then111, %if.end109
  ret void, !dbg !14119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_isr_receive_status(%struct.mgsl_struct* %info) #1 !dbg !14120 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %status = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !14121, metadata !DIExpression()), !dbg !14122
  call void @llvm.dbg.declare(metadata i16* %status, metadata !14123, metadata !DIExpression()), !dbg !14124
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14125
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %0, i16 zeroext 36) #11, !dbg !14126
  store i16 %call, i16* %status, align 2, !dbg !14124
  %1 = load i32, i32* @debug_level, align 4, !dbg !14127
  %cmp = icmp sge i32 %1, 5, !dbg !14129
  br i1 %cmp, label %if.then, label %if.end, !dbg !14130

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %status, align 2, !dbg !14131
  %conv = zext i16 %2 to i32, !dbg !14131
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1164, i32 %conv) #12, !dbg !14132
  br label %if.end, !dbg !14132

if.end:                                           ; preds = %if.then, %entry
  %3 = load i16, i16* %status, align 2, !dbg !14133
  %conv2 = zext i16 %3 to i32, !dbg !14133
  %and = and i32 %conv2, 32, !dbg !14135
  %tobool = icmp ne i32 %and, 0, !dbg !14135
  br i1 %tobool, label %land.lhs.true, label %if.end18, !dbg !14136

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14137
  %loopmode_insert_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 86, !dbg !14138
  %5 = load i8, i8* %loopmode_insert_requested, align 1, !dbg !14138
  %tobool3 = trunc i8 %5 to i1, !dbg !14138
  br i1 %tobool3, label %land.lhs.true5, label %if.end18, !dbg !14139

land.lhs.true5:                                   ; preds = %land.lhs.true
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14140
  %call6 = call i32 @usc_loopmode_active(%struct.mgsl_struct* %6) #11, !dbg !14141
  %tobool7 = icmp ne i32 %call6, 0, !dbg !14141
  br i1 %tobool7, label %if.then8, label %if.end18, !dbg !14142

if.then8:                                         ; preds = %land.lhs.true5
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14143
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 4, !dbg !14145
  %rxabort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 17, !dbg !14146
  %8 = load i32, i32* %rxabort, align 4, !dbg !14147
  %inc = add i32 %8, 1, !dbg !14147
  store i32 %inc, i32* %rxabort, align 4, !dbg !14147
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14148
  %loopmode_insert_requested9 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 86, !dbg !14149
  store i8 0, i8* %loopmode_insert_requested9, align 1, !dbg !14150
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14151
  %cmr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 54, !dbg !14152
  %11 = load i16, i16* %cmr_value, align 4, !dbg !14153
  %conv10 = zext i16 %11 to i32, !dbg !14153
  %and11 = and i32 %conv10, -8193, !dbg !14153
  %conv12 = trunc i32 %and11 to i16, !dbg !14153
  store i16 %conv12, i16* %cmr_value, align 4, !dbg !14153
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14154
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14155
  %cmr_value13 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 54, !dbg !14156
  %14 = load i16, i16* %cmr_value13, align 4, !dbg !14156
  call void @usc_OutReg(%struct.mgsl_struct* %12, i16 zeroext 2, i16 zeroext %14) #11, !dbg !14157
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14158
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14159
  %call14 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %16, i16 zeroext 38) #11, !dbg !14160
  %conv15 = zext i16 %call14 to i32, !dbg !14160
  %and16 = and i32 %conv15, -33, !dbg !14161
  %conv17 = trunc i32 %and16 to i16, !dbg !14162
  call void @usc_OutReg(%struct.mgsl_struct* %15, i16 zeroext 38, i16 zeroext %conv17) #11, !dbg !14163
  br label %if.end18, !dbg !14164

if.end18:                                         ; preds = %if.then8, %land.lhs.true5, %land.lhs.true, %if.end
  %17 = load i16, i16* %status, align 2, !dbg !14165
  %conv19 = zext i16 %17 to i32, !dbg !14165
  %and20 = and i32 %conv19, 192, !dbg !14167
  %tobool21 = icmp ne i32 %and20, 0, !dbg !14167
  br i1 %tobool21, label %if.then22, label %if.end37, !dbg !14168

if.then22:                                        ; preds = %if.end18
  %18 = load i16, i16* %status, align 2, !dbg !14169
  %conv23 = zext i16 %18 to i32, !dbg !14169
  %and24 = and i32 %conv23, 128, !dbg !14172
  %tobool25 = icmp ne i32 %and24, 0, !dbg !14172
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !14173

if.then26:                                        ; preds = %if.then22
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14174
  %icount27 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 4, !dbg !14175
  %exithunt = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount27, i32 0, i32 21, !dbg !14176
  %20 = load i32, i32* %exithunt, align 4, !dbg !14177
  %inc28 = add i32 %20, 1, !dbg !14177
  store i32 %inc28, i32* %exithunt, align 4, !dbg !14177
  br label %if.end29, !dbg !14174

if.end29:                                         ; preds = %if.then26, %if.then22
  %21 = load i16, i16* %status, align 2, !dbg !14178
  %conv30 = zext i16 %21 to i32, !dbg !14178
  %and31 = and i32 %conv30, 64, !dbg !14180
  %tobool32 = icmp ne i32 %and31, 0, !dbg !14180
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !14181

if.then33:                                        ; preds = %if.end29
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14182
  %icount34 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 4, !dbg !14183
  %rxidle = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount34, i32 0, i32 22, !dbg !14184
  %23 = load i32, i32* %rxidle, align 8, !dbg !14185
  %inc35 = add i32 %23, 1, !dbg !14185
  store i32 %inc35, i32* %rxidle, align 8, !dbg !14185
  br label %if.end36, !dbg !14182

if.end36:                                         ; preds = %if.then33, %if.end29
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14186
  %event_wait_q = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 14, !dbg !14186
  call void @__wake_up(%struct.wait_queue_head* %event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !14186
  br label %if.end37, !dbg !14187

if.end37:                                         ; preds = %if.end36, %if.end18
  %25 = load i16, i16* %status, align 2, !dbg !14188
  %conv38 = zext i16 %25 to i32, !dbg !14188
  %and39 = and i32 %conv38, 2, !dbg !14190
  %tobool40 = icmp ne i32 %and39, 0, !dbg !14190
  br i1 %tobool40, label %if.then41, label %if.end44, !dbg !14191

if.then41:                                        ; preds = %if.end37
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14192
  %icount42 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 4, !dbg !14194
  %rxover = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount42, i32 0, i32 18, !dbg !14195
  %27 = load i32, i32* %rxover, align 8, !dbg !14196
  %inc43 = add i32 %27, 1, !dbg !14196
  store i32 %inc43, i32* %rxover, align 8, !dbg !14196
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14197
  call void @usc_process_rxoverrun_sync(%struct.mgsl_struct* %28) #11, !dbg !14198
  br label %if.end44, !dbg !14199

if.end44:                                         ; preds = %if.then41, %if.end37
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14200
  call void @usc_OutReg(%struct.mgsl_struct* %29, i16 zeroext 26, i16 zeroext 96) #11, !dbg !14200
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14201
  %31 = load i16, i16* %status, align 2, !dbg !14201
  %conv45 = zext i16 %31 to i32, !dbg !14201
  %and46 = and i32 %conv45, 502, !dbg !14201
  %conv47 = trunc i32 %and46 to i16, !dbg !14201
  call void @usc_OutReg(%struct.mgsl_struct* %30, i16 zeroext 36, i16 zeroext %conv47) #11, !dbg !14201
  ret void, !dbg !14202
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_check_carrier(%struct.tty_port* %port) #1 !dbg !14203 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !14204, metadata !DIExpression()), !dbg !14205
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !14206
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !14207
  %call = call zeroext i1 @test_bit(i64 4, i64* %iflags) #11, !dbg !14208
  ret i1 %call, !dbg !14209
}

; Function Attrs: noredzone
declare dso_local void @tty_hangup(%struct.tty_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_cts_enabled(%struct.tty_port* %port) #1 !dbg !14210 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !14211, metadata !DIExpression()), !dbg !14212
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !14213
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !14214
  %call = call zeroext i1 @test_bit(i64 3, i64* %iflags) #11, !dbg !14215
  ret i1 %call, !dbg !14216
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_start_transmitter(%struct.mgsl_struct* %info) #1 !dbg !14217 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !14218, metadata !DIExpression()), !dbg !14223
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %phys_addr = alloca i32, align 4
  %FrameSize = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !14229, metadata !DIExpression()), !dbg !14230
  call void @llvm.dbg.declare(metadata i32* %phys_addr, metadata !14231, metadata !DIExpression()), !dbg !14232
  call void @llvm.dbg.declare(metadata i32* %FrameSize, metadata !14233, metadata !DIExpression()), !dbg !14234
  %0 = load i32, i32* @debug_level, align 4, !dbg !14235
  %cmp = icmp sge i32 %0, 5, !dbg !14237
  br i1 %cmp, label %if.then, label %if.end, !dbg !14238

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14239
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !14240
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !14239
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 5383, i8* %arraydecay) #12, !dbg !14241
  br label %if.end, !dbg !14241

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14242
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 12, !dbg !14243
  %3 = load i32, i32* %xmit_cnt, align 8, !dbg !14243
  %tobool = icmp ne i32 %3, 0, !dbg !14242
  br i1 %tobool, label %if.then1, label %if.end79, !dbg !14244

if.then1:                                         ; preds = %if.end
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14245
  %drop_rts_on_tx_done = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 85, !dbg !14246
  store i8 0, i8* %drop_rts_on_tx_done, align 8, !dbg !14247
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14248
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 70, !dbg !14250
  %flags = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 2, !dbg !14251
  %6 = load i16, i16* %flags, align 2, !dbg !14251
  %conv = zext i16 %6 to i32, !dbg !14248
  %and = and i32 %conv, 128, !dbg !14252
  %tobool2 = icmp ne i32 %and, 0, !dbg !14252
  br i1 %tobool2, label %if.then3, label %if.end13, !dbg !14253

if.then3:                                         ; preds = %if.then1
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14254
  call void @usc_get_serial_signals(%struct.mgsl_struct* %7) #11, !dbg !14256
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14257
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 71, !dbg !14259
  %9 = load i8, i8* %serial_signals, align 8, !dbg !14259
  %conv4 = zext i8 %9 to i32, !dbg !14257
  %and5 = and i32 %conv4, 32, !dbg !14260
  %tobool6 = icmp ne i32 %and5, 0, !dbg !14260
  br i1 %tobool6, label %if.end12, label %if.then7, !dbg !14261

if.then7:                                         ; preds = %if.then3
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14262
  %serial_signals8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 71, !dbg !14264
  %11 = load i8, i8* %serial_signals8, align 8, !dbg !14265
  %conv9 = zext i8 %11 to i32, !dbg !14265
  %or = or i32 %conv9, 32, !dbg !14265
  %conv10 = trunc i32 %or to i8, !dbg !14265
  store i8 %conv10, i8* %serial_signals8, align 8, !dbg !14265
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14266
  call void @usc_set_serial_signals(%struct.mgsl_struct* %12) #11, !dbg !14267
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14268
  %drop_rts_on_tx_done11 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 85, !dbg !14269
  store i8 1, i8* %drop_rts_on_tx_done11, align 8, !dbg !14270
  br label %if.end12, !dbg !14271

if.end12:                                         ; preds = %if.then7, %if.then3
  br label %if.end13, !dbg !14272

if.end13:                                         ; preds = %if.end12, %if.then1
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14273
  %params14 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 70, !dbg !14274
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params14, i32 0, i32 0, !dbg !14275
  %15 = load i64, i64* %mode, align 8, !dbg !14275
  %cmp15 = icmp eq i64 %15, 1, !dbg !14276
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !14277

if.then17:                                        ; preds = %if.end13
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14278
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 52, !dbg !14281
  %17 = load i8, i8* %tx_active, align 4, !dbg !14281
  %tobool18 = trunc i8 %17 to i1, !dbg !14281
  br i1 %tobool18, label %if.end28, label %if.then19, !dbg !14282

if.then19:                                        ; preds = %if.then17
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14283
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14283
  %tcsr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 55, !dbg !14283
  %20 = load i16, i16* %tcsr_value, align 2, !dbg !14283
  %conv20 = zext i16 %20 to i32, !dbg !14283
  %add = add i32 %conv20, 250, !dbg !14283
  %conv21 = trunc i32 %add to i16, !dbg !14283
  call void @usc_OutReg(%struct.mgsl_struct* %18, i16 zeroext 52, i16 zeroext %conv21) #11, !dbg !14283
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14285
  call void @usc_OutReg(%struct.mgsl_struct* %21, i16 zeroext 26, i16 zeroext 76) #11, !dbg !14285
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14286
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14286
  %call22 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %23, i16 zeroext 24) #11, !dbg !14286
  %conv23 = zext i16 %call22 to i32, !dbg !14286
  %and24 = and i32 %conv23, 65280, !dbg !14286
  %add25 = add i32 %and24, 192, !dbg !14286
  %add26 = add i32 %add25, 4, !dbg !14286
  %conv27 = trunc i32 %add26 to i16, !dbg !14286
  call void @usc_OutReg(%struct.mgsl_struct* %22, i16 zeroext 24, i16 zeroext %conv27) #11, !dbg !14286
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14287
  call void @usc_load_txfifo(%struct.mgsl_struct* %24) #11, !dbg !14288
  br label %if.end28, !dbg !14289

if.end28:                                         ; preds = %if.then19, %if.then17
  br label %if.end77, !dbg !14290

if.else:                                          ; preds = %if.end13
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14291
  call void @usc_DmaCmd(%struct.mgsl_struct* %25, i16 zeroext 4096) #11, !dbg !14292
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14293
  %tx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 39, !dbg !14294
  %27 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list, align 8, !dbg !14294
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14295
  %start_tx_dma_buffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 40, !dbg !14296
  %29 = load i32, i32* %start_tx_dma_buffer, align 8, !dbg !14296
  %idxprom = sext i32 %29 to i64, !dbg !14293
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %27, i64 %idxprom, !dbg !14293
  %rcc = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 3, !dbg !14297
  %30 = load volatile i16, i16* %rcc, align 8, !dbg !14297
  %conv29 = zext i16 %30 to i32, !dbg !14293
  store i32 %conv29, i32* %FrameSize, align 4, !dbg !14298
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14299
  %params30 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 70, !dbg !14301
  %mode31 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params30, i32 0, i32 0, !dbg !14302
  %32 = load i64, i64* %mode31, align 8, !dbg !14302
  %cmp32 = icmp eq i64 %32, 6, !dbg !14303
  br i1 %cmp32, label %if.then34, label %if.end40, !dbg !14304

if.then34:                                        ; preds = %if.else
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14305
  %tx_buffer_list35 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %33, i32 0, i32 39, !dbg !14306
  %34 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list35, align 8, !dbg !14306
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14307
  %start_tx_dma_buffer36 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 40, !dbg !14308
  %36 = load i32, i32* %start_tx_dma_buffer36, align 8, !dbg !14308
  %idxprom37 = sext i32 %36 to i64, !dbg !14305
  %arrayidx38 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %34, i64 %idxprom37, !dbg !14305
  %rcc39 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx38, i32 0, i32 3, !dbg !14309
  store volatile i16 0, i16* %rcc39, align 8, !dbg !14310
  br label %if.end40, !dbg !14305

if.end40:                                         ; preds = %if.then34, %if.else
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14311
  %38 = load i32, i32* %FrameSize, align 4, !dbg !14312
  %conv41 = trunc i32 %38 to i16, !dbg !14313
  call void @usc_OutReg(%struct.mgsl_struct* %37, i16 zeroext 58, i16 zeroext %conv41) #11, !dbg !14314
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14315
  call void @usc_RTCmd(%struct.mgsl_struct* %39, i16 zeroext 20480) #11, !dbg !14316
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14317
  %tx_buffer_list42 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 39, !dbg !14318
  %41 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list42, align 8, !dbg !14318
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14319
  %start_tx_dma_buffer43 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 40, !dbg !14320
  %43 = load i32, i32* %start_tx_dma_buffer43, align 8, !dbg !14320
  %idxprom44 = sext i32 %43 to i64, !dbg !14317
  %arrayidx45 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %41, i64 %idxprom44, !dbg !14317
  %phys_entry = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx45, i32 0, i32 7, !dbg !14321
  %44 = load i32, i32* %phys_entry, align 8, !dbg !14321
  store i32 %44, i32* %phys_addr, align 4, !dbg !14322
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14323
  %46 = load i32, i32* %phys_addr, align 4, !dbg !14324
  %conv46 = trunc i32 %46 to i16, !dbg !14325
  call void @usc_OutDmaReg(%struct.mgsl_struct* %45, i16 zeroext 60, i16 zeroext %conv46) #11, !dbg !14326
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14327
  %48 = load i32, i32* %phys_addr, align 4, !dbg !14328
  %shr = lshr i32 %48, 16, !dbg !14329
  %conv47 = trunc i32 %shr to i16, !dbg !14330
  call void @usc_OutDmaReg(%struct.mgsl_struct* %47, i16 zeroext 62, i16 zeroext %conv47) #11, !dbg !14331
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14332
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14332
  %tcsr_value48 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %50, i32 0, i32 55, !dbg !14332
  %51 = load i16, i16* %tcsr_value48, align 2, !dbg !14332
  %conv49 = zext i16 %51 to i32, !dbg !14332
  %add50 = add i32 %conv49, 250, !dbg !14332
  %conv51 = trunc i32 %add50 to i16, !dbg !14332
  call void @usc_OutReg(%struct.mgsl_struct* %49, i16 zeroext 52, i16 zeroext %conv51) #11, !dbg !14332
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14333
  call void @usc_OutReg(%struct.mgsl_struct* %52, i16 zeroext 26, i16 zeroext 72) #11, !dbg !14333
  %53 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14334
  %54 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14334
  %call52 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %54, i16 zeroext 24) #11, !dbg !14334
  %conv53 = zext i16 %call52 to i32, !dbg !14334
  %and54 = and i32 %conv53, 65280, !dbg !14334
  %add55 = add i32 %and54, 192, !dbg !14334
  %add56 = add i32 %add55, 8, !dbg !14334
  %conv57 = trunc i32 %add56 to i16, !dbg !14334
  call void @usc_OutReg(%struct.mgsl_struct* %53, i16 zeroext 24, i16 zeroext %conv57) #11, !dbg !14334
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14335
  %params58 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %55, i32 0, i32 70, !dbg !14337
  %mode59 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params58, i32 0, i32 0, !dbg !14338
  %56 = load i64, i64* %mode59, align 8, !dbg !14338
  %cmp60 = icmp eq i64 %56, 6, !dbg !14339
  br i1 %cmp60, label %land.lhs.true, label %if.end69, !dbg !14340

land.lhs.true:                                    ; preds = %if.end40
  %57 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14341
  %num_tx_dma_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %57, i32 0, i32 36, !dbg !14342
  %58 = load i32, i32* %num_tx_dma_buffers, align 4, !dbg !14342
  %cmp62 = icmp sgt i32 %58, 1, !dbg !14343
  br i1 %cmp62, label %if.then64, label %if.end69, !dbg !14344

if.then64:                                        ; preds = %land.lhs.true
  %59 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14345
  call void @usc_OutDmaReg(%struct.mgsl_struct* %59, i16 zeroext 30, i16 zeroext 12) #11, !dbg !14347
  %60 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14348
  %61 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14349
  %call65 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %61, i16 zeroext 24) #11, !dbg !14350
  %conv66 = zext i16 %call65 to i32, !dbg !14350
  %or67 = or i32 %conv66, 1, !dbg !14351
  %conv68 = trunc i32 %or67 to i16, !dbg !14352
  call void @usc_OutDmaReg(%struct.mgsl_struct* %60, i16 zeroext 24, i16 zeroext %conv68) #11, !dbg !14353
  br label %if.end69, !dbg !14354

if.end69:                                         ; preds = %if.then64, %land.lhs.true, %if.end40
  %62 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14355
  call void @usc_DmaCmd(%struct.mgsl_struct* %62, i16 zeroext 28672) #11, !dbg !14356
  %63 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14357
  %64 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14357
  %tcsr_value70 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %64, i32 0, i32 55, !dbg !14357
  %65 = load i16, i16* %tcsr_value70, align 2, !dbg !14357
  %conv71 = zext i16 %65 to i32, !dbg !14357
  %add72 = add i32 %conv71, 32768, !dbg !14357
  %conv73 = trunc i32 %add72 to i16, !dbg !14357
  call void @usc_OutReg(%struct.mgsl_struct* %63, i16 zeroext 52, i16 zeroext %conv73) #11, !dbg !14357
  %66 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14358
  %tx_timer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %66, i32 0, i32 15, !dbg !14359
  %67 = load volatile i64, i64* @jiffies, align 8, !dbg !14360
  store i32 5000, i32* %m.addr.i, align 4
  %68 = load i32, i32* %m.addr.i, align 4, !dbg !14361
  %69 = call i1 @llvm.is.constant.i32(i32 %68) #10, !dbg !14363
  br i1 %69, label %if.then.i, label %if.else.i, !dbg !14364

if.then.i:                                        ; preds = %if.end69
  %70 = load i32, i32* %m.addr.i, align 4, !dbg !14365
  %cmp.i = icmp slt i32 %70, 0, !dbg !14368
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14369

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !14370
  br label %msecs_to_jiffies.exit, !dbg !14370

if.end.i:                                         ; preds = %if.then.i
  %71 = load i32, i32* %m.addr.i, align 4, !dbg !14371
  %call.i = call i64 @_msecs_to_jiffies(i32 %71) #14, !dbg !14372
  store i64 %call.i, i64* %retval.i, align 8, !dbg !14373
  br label %msecs_to_jiffies.exit, !dbg !14373

if.else.i:                                        ; preds = %if.end69
  %72 = load i32, i32* %m.addr.i, align 4, !dbg !14374
  %call2.i = call i64 @__msecs_to_jiffies(i32 %72) #14, !dbg !14376
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !14377
  br label %msecs_to_jiffies.exit, !dbg !14377

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %73 = load i64, i64* %retval.i, align 8, !dbg !14378
  %add75 = add i64 %67, %73, !dbg !14379
  %call76 = call i32 @mod_timer(%struct.timer_list* %tx_timer, i64 %add75) #11, !dbg !14380
  br label %if.end77

if.end77:                                         ; preds = %msecs_to_jiffies.exit, %if.end28
  %74 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14381
  %tx_active78 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %74, i32 0, i32 52, !dbg !14382
  store i8 1, i8* %tx_active78, align 4, !dbg !14383
  br label %if.end79, !dbg !14384

if.end79:                                         ; preds = %if.end77, %if.end
  %75 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14385
  %tx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %75, i32 0, i32 51, !dbg !14387
  %76 = load i8, i8* %tx_enabled, align 1, !dbg !14387
  %tobool80 = trunc i8 %76 to i1, !dbg !14387
  br i1 %tobool80, label %if.end101, label %if.then81, !dbg !14388

if.then81:                                        ; preds = %if.end79
  %77 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14389
  %tx_enabled82 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %77, i32 0, i32 51, !dbg !14391
  store i8 1, i8* %tx_enabled82, align 1, !dbg !14392
  %78 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14393
  %params83 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %78, i32 0, i32 70, !dbg !14395
  %flags84 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params83, i32 0, i32 2, !dbg !14396
  %79 = load i16, i16* %flags84, align 2, !dbg !14396
  %conv85 = zext i16 %79 to i32, !dbg !14393
  %and86 = and i32 %conv85, 32, !dbg !14397
  %tobool87 = icmp ne i32 %and86, 0, !dbg !14397
  br i1 %tobool87, label %if.then88, label %if.else94, !dbg !14398

if.then88:                                        ; preds = %if.then81
  %80 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14399
  %81 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14399
  %call89 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %81, i16 zeroext 50) #11, !dbg !14399
  %conv90 = zext i16 %call89 to i32, !dbg !14399
  %and91 = and i32 %conv90, 65532, !dbg !14399
  %or92 = or i32 %and91, 3, !dbg !14399
  %conv93 = trunc i32 %or92 to i16, !dbg !14399
  call void @usc_OutReg(%struct.mgsl_struct* %80, i16 zeroext 50, i16 zeroext %conv93) #11, !dbg !14399
  br label %if.end100, !dbg !14399

if.else94:                                        ; preds = %if.then81
  %82 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14400
  %83 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14400
  %call95 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %83, i16 zeroext 50) #11, !dbg !14400
  %conv96 = zext i16 %call95 to i32, !dbg !14400
  %and97 = and i32 %conv96, 65532, !dbg !14400
  %or98 = or i32 %and97, 2, !dbg !14400
  %conv99 = trunc i32 %or98 to i16, !dbg !14400
  call void @usc_OutReg(%struct.mgsl_struct* %82, i16 zeroext 50, i16 zeroext %conv99) #11, !dbg !14400
  br label %if.end100

if.end100:                                        ; preds = %if.else94, %if.then88
  br label %if.end101, !dbg !14401

if.end101:                                        ; preds = %if.end100, %if.end79
  ret void, !dbg !14402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_stop_transmitter(%struct.mgsl_struct* %info) #1 !dbg !14403 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !14404, metadata !DIExpression()), !dbg !14405
  %0 = load i32, i32* @debug_level, align 4, !dbg !14406
  %cmp = icmp sge i32 %0, 5, !dbg !14408
  br i1 %cmp, label %if.then, label %if.end, !dbg !14409

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14410
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !14411
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !14410
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 5486, i8* %arraydecay) #12, !dbg !14412
  br label %if.end, !dbg !14412

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14413
  %tx_timer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 15, !dbg !14414
  %call1 = call i32 @del_timer(%struct.timer_list* %tx_timer) #11, !dbg !14415
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14416
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14416
  %tcsr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 55, !dbg !14416
  %5 = load i16, i16* %tcsr_value, align 2, !dbg !14416
  %conv = zext i16 %5 to i32, !dbg !14416
  %add = add i32 %conv, 250, !dbg !14416
  %conv2 = trunc i32 %add to i16, !dbg !14416
  call void @usc_OutReg(%struct.mgsl_struct* %3, i16 zeroext 52, i16 zeroext %conv2) #11, !dbg !14416
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14417
  call void @usc_OutReg(%struct.mgsl_struct* %6, i16 zeroext 26, i16 zeroext 76) #11, !dbg !14417
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14418
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14418
  %call3 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %8, i16 zeroext 24) #11, !dbg !14418
  %conv4 = zext i16 %call3 to i32, !dbg !14418
  %and = and i32 %conv4, 65280, !dbg !14418
  %add5 = add i32 %and, 128, !dbg !14418
  %add6 = add i32 %add5, 12, !dbg !14418
  %conv7 = trunc i32 %add6 to i16, !dbg !14418
  call void @usc_OutReg(%struct.mgsl_struct* %7, i16 zeroext 24, i16 zeroext %conv7) #11, !dbg !14418
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14419
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14419
  %call8 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %10, i16 zeroext 50) #11, !dbg !14419
  %conv9 = zext i16 %call8 to i32, !dbg !14419
  %and10 = and i32 %conv9, 65532, !dbg !14419
  %conv11 = trunc i32 %and10 to i16, !dbg !14419
  call void @usc_OutReg(%struct.mgsl_struct* %9, i16 zeroext 50, i16 zeroext %conv11) #11, !dbg !14419
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14420
  call void @usc_DmaCmd(%struct.mgsl_struct* %11, i16 zeroext 4096) #11, !dbg !14421
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14422
  call void @usc_RTCmd(%struct.mgsl_struct* %12, i16 zeroext 20480) #11, !dbg !14423
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14424
  %tx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 51, !dbg !14425
  store i8 0, i8* %tx_enabled, align 1, !dbg !14426
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14427
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 52, !dbg !14428
  store i8 0, i8* %tx_active, align 4, !dbg !14429
  ret void, !dbg !14430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_load_txfifo(%struct.mgsl_struct* %info) #1 !dbg !14431 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %Fifocount = alloca i32, align 4
  %TwoBytes = alloca [2 x i8], align 1
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !14432, metadata !DIExpression()), !dbg !14433
  call void @llvm.dbg.declare(metadata i32* %Fifocount, metadata !14434, metadata !DIExpression()), !dbg !14435
  call void @llvm.dbg.declare(metadata [2 x i8]* %TwoBytes, metadata !14436, metadata !DIExpression()), !dbg !14438
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14439
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 12, !dbg !14441
  %1 = load i32, i32* %xmit_cnt, align 8, !dbg !14441
  %tobool = icmp ne i32 %1, 0, !dbg !14439
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !14442

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14443
  %x_char = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 6, !dbg !14444
  %3 = load i32, i32* %x_char, align 8, !dbg !14444
  %tobool1 = icmp ne i32 %3, 0, !dbg !14443
  br i1 %tobool1, label %if.end, label %if.then, !dbg !14445

if.then:                                          ; preds = %land.lhs.true
  br label %while.end, !dbg !14446

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14447
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14447
  %tcsr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 55, !dbg !14447
  %6 = load i16, i16* %tcsr_value, align 2, !dbg !14447
  %conv = zext i16 %6 to i32, !dbg !14447
  %add = add i32 %conv, 20480, !dbg !14447
  %conv2 = trunc i32 %add to i16, !dbg !14447
  call void @usc_OutReg(%struct.mgsl_struct* %4, i16 zeroext 52, i16 zeroext %conv2) #11, !dbg !14447
  br label %while.cond, !dbg !14448

while.cond:                                       ; preds = %if.end71, %if.end
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14449
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %7, i16 zeroext 54) #11, !dbg !14450
  %conv3 = zext i16 %call to i32, !dbg !14450
  %shr = ashr i32 %conv3, 8, !dbg !14451
  store i32 %shr, i32* %Fifocount, align 4, !dbg !14452
  %tobool4 = icmp ne i32 %shr, 0, !dbg !14452
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !14453

land.rhs:                                         ; preds = %while.cond
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14454
  %xmit_cnt5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 12, !dbg !14455
  %9 = load i32, i32* %xmit_cnt5, align 8, !dbg !14455
  %tobool6 = icmp ne i32 %9, 0, !dbg !14453
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %tobool6, %land.rhs ], !dbg !14456
  br i1 %10, label %while.body, label %while.end, !dbg !14448

while.body:                                       ; preds = %land.end
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14457
  %xmit_cnt7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 12, !dbg !14460
  %12 = load i32, i32* %xmit_cnt7, align 8, !dbg !14460
  %cmp = icmp sgt i32 %12, 1, !dbg !14461
  br i1 %cmp, label %land.lhs.true9, label %if.else, !dbg !14462

land.lhs.true9:                                   ; preds = %while.body
  %13 = load i32, i32* %Fifocount, align 4, !dbg !14463
  %cmp10 = icmp sgt i32 %13, 1, !dbg !14464
  br i1 %cmp10, label %land.lhs.true12, label %if.else, !dbg !14465

land.lhs.true12:                                  ; preds = %land.lhs.true9
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14466
  %x_char13 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 6, !dbg !14467
  %15 = load i32, i32* %x_char13, align 8, !dbg !14467
  %tobool14 = icmp ne i32 %15, 0, !dbg !14466
  br i1 %tobool14, label %if.else, label %if.then15, !dbg !14468

if.then15:                                        ; preds = %land.lhs.true12
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14469
  %xmit_buf = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 9, !dbg !14471
  %17 = load i8*, i8** %xmit_buf, align 8, !dbg !14471
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14472
  %xmit_tail = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 11, !dbg !14473
  %19 = load i32, i32* %xmit_tail, align 4, !dbg !14474
  %inc = add i32 %19, 1, !dbg !14474
  store i32 %inc, i32* %xmit_tail, align 4, !dbg !14474
  %idxprom = sext i32 %19 to i64, !dbg !14469
  %arrayidx = getelementptr i8, i8* %17, i64 %idxprom, !dbg !14469
  %20 = load i8, i8* %arrayidx, align 1, !dbg !14469
  %arrayidx16 = getelementptr [2 x i8], [2 x i8]* %TwoBytes, i64 0, i64 0, !dbg !14475
  store i8 %20, i8* %arrayidx16, align 1, !dbg !14476
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14477
  %xmit_tail17 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 11, !dbg !14478
  %22 = load i32, i32* %xmit_tail17, align 4, !dbg !14478
  %conv18 = sext i32 %22 to i64, !dbg !14477
  %and = and i64 %conv18, 4095, !dbg !14479
  %conv19 = trunc i64 %and to i32, !dbg !14477
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14480
  %xmit_tail20 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 11, !dbg !14481
  store i32 %conv19, i32* %xmit_tail20, align 4, !dbg !14482
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14483
  %xmit_buf21 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 9, !dbg !14484
  %25 = load i8*, i8** %xmit_buf21, align 8, !dbg !14484
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14485
  %xmit_tail22 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 11, !dbg !14486
  %27 = load i32, i32* %xmit_tail22, align 4, !dbg !14487
  %inc23 = add i32 %27, 1, !dbg !14487
  store i32 %inc23, i32* %xmit_tail22, align 4, !dbg !14487
  %idxprom24 = sext i32 %27 to i64, !dbg !14483
  %arrayidx25 = getelementptr i8, i8* %25, i64 %idxprom24, !dbg !14483
  %28 = load i8, i8* %arrayidx25, align 1, !dbg !14483
  %arrayidx26 = getelementptr [2 x i8], [2 x i8]* %TwoBytes, i64 0, i64 1, !dbg !14488
  store i8 %28, i8* %arrayidx26, align 1, !dbg !14489
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14490
  %xmit_tail27 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 11, !dbg !14491
  %30 = load i32, i32* %xmit_tail27, align 4, !dbg !14491
  %conv28 = sext i32 %30 to i64, !dbg !14490
  %and29 = and i64 %conv28, 4095, !dbg !14492
  %conv30 = trunc i64 %and29 to i32, !dbg !14490
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14493
  %xmit_tail31 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 11, !dbg !14494
  store i32 %conv30, i32* %xmit_tail31, align 4, !dbg !14495
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %TwoBytes, i64 0, i64 0, !dbg !14496
  %32 = bitcast i8* %arraydecay to i16*, !dbg !14496
  %33 = load i16, i16* %32, align 1, !dbg !14496
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14497
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 59, !dbg !14498
  %35 = load i32, i32* %io_base, align 4, !dbg !14498
  %add32 = add i32 %35, 2, !dbg !14499
  %add33 = add i32 %add32, 4, !dbg !14500
  call void @outw(i16 zeroext %33, i32 %add33) #11, !dbg !14501
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14502
  %xmit_cnt34 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %36, i32 0, i32 12, !dbg !14503
  %37 = load i32, i32* %xmit_cnt34, align 8, !dbg !14504
  %sub = sub i32 %37, 2, !dbg !14504
  store i32 %sub, i32* %xmit_cnt34, align 8, !dbg !14504
  %38 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14505
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %38, i32 0, i32 4, !dbg !14506
  %tx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 4, !dbg !14507
  %39 = load i32, i32* %tx, align 8, !dbg !14508
  %add35 = add i32 %39, 2, !dbg !14508
  store i32 %add35, i32* %tx, align 8, !dbg !14508
  br label %if.end71, !dbg !14509

if.else:                                          ; preds = %land.lhs.true12, %land.lhs.true9, %while.body
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14510
  %io_base36 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 59, !dbg !14512
  %41 = load i32, i32* %io_base36, align 4, !dbg !14512
  %add37 = add i32 %41, 4, !dbg !14513
  %call38 = call zeroext i16 @inw(i32 %add37) #11, !dbg !14514
  %conv39 = zext i16 %call38 to i32, !dbg !14514
  %and40 = and i32 %conv39, 1920, !dbg !14515
  %or = or i32 %and40, 112, !dbg !14516
  %conv41 = trunc i32 %or to i16, !dbg !14517
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14518
  %io_base42 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 59, !dbg !14519
  %43 = load i32, i32* %io_base42, align 4, !dbg !14519
  %add43 = add i32 %43, 4, !dbg !14520
  call void @outw(i16 zeroext %conv41, i32 %add43) #11, !dbg !14521
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14522
  %x_char44 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %44, i32 0, i32 6, !dbg !14524
  %45 = load i32, i32* %x_char44, align 8, !dbg !14524
  %tobool45 = icmp ne i32 %45, 0, !dbg !14522
  br i1 %tobool45, label %if.then46, label %if.else52, !dbg !14525

if.then46:                                        ; preds = %if.else
  %46 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14526
  %x_char47 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %46, i32 0, i32 6, !dbg !14528
  %47 = load i32, i32* %x_char47, align 8, !dbg !14528
  %conv48 = trunc i32 %47 to i16, !dbg !14526
  %48 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14529
  %io_base49 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %48, i32 0, i32 59, !dbg !14530
  %49 = load i32, i32* %io_base49, align 4, !dbg !14530
  %add50 = add i32 %49, 4, !dbg !14531
  call void @outw(i16 zeroext %conv48, i32 %add50) #11, !dbg !14532
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14533
  %x_char51 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %50, i32 0, i32 6, !dbg !14534
  store i32 0, i32* %x_char51, align 8, !dbg !14535
  br label %if.end67, !dbg !14536

if.else52:                                        ; preds = %if.else
  %51 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14537
  %xmit_buf53 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %51, i32 0, i32 9, !dbg !14539
  %52 = load i8*, i8** %xmit_buf53, align 8, !dbg !14539
  %53 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14540
  %xmit_tail54 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %53, i32 0, i32 11, !dbg !14541
  %54 = load i32, i32* %xmit_tail54, align 4, !dbg !14542
  %inc55 = add i32 %54, 1, !dbg !14542
  store i32 %inc55, i32* %xmit_tail54, align 4, !dbg !14542
  %idxprom56 = sext i32 %54 to i64, !dbg !14537
  %arrayidx57 = getelementptr i8, i8* %52, i64 %idxprom56, !dbg !14537
  %55 = load i8, i8* %arrayidx57, align 1, !dbg !14537
  %conv58 = zext i8 %55 to i16, !dbg !14537
  %56 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14543
  %io_base59 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %56, i32 0, i32 59, !dbg !14544
  %57 = load i32, i32* %io_base59, align 4, !dbg !14544
  %add60 = add i32 %57, 4, !dbg !14545
  call void @outw(i16 zeroext %conv58, i32 %add60) #11, !dbg !14546
  %58 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14547
  %xmit_tail61 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %58, i32 0, i32 11, !dbg !14548
  %59 = load i32, i32* %xmit_tail61, align 4, !dbg !14548
  %conv62 = sext i32 %59 to i64, !dbg !14547
  %and63 = and i64 %conv62, 4095, !dbg !14549
  %conv64 = trunc i64 %and63 to i32, !dbg !14547
  %60 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14550
  %xmit_tail65 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %60, i32 0, i32 11, !dbg !14551
  store i32 %conv64, i32* %xmit_tail65, align 4, !dbg !14552
  %61 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14553
  %xmit_cnt66 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %61, i32 0, i32 12, !dbg !14554
  %62 = load i32, i32* %xmit_cnt66, align 8, !dbg !14555
  %dec = add i32 %62, -1, !dbg !14555
  store i32 %dec, i32* %xmit_cnt66, align 8, !dbg !14555
  br label %if.end67

if.end67:                                         ; preds = %if.else52, %if.then46
  %63 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14556
  %icount68 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %63, i32 0, i32 4, !dbg !14557
  %tx69 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount68, i32 0, i32 4, !dbg !14558
  %64 = load i32, i32* %tx69, align 8, !dbg !14559
  %inc70 = add i32 %64, 1, !dbg !14559
  store i32 %inc70, i32* %tx69, align 8, !dbg !14559
  br label %if.end71

if.end71:                                         ; preds = %if.end67, %if.then15
  br label %while.cond, !dbg !14448, !llvm.loop !14560

while.end:                                        ; preds = %if.then, %land.end
  ret void, !dbg !14562
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #4

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #1 !dbg !14563 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !14564, metadata !DIExpression()), !dbg !14565
  %0 = load i32, i32* %m.addr, align 4, !dbg !14566
  %conv = zext i32 %0 to i64, !dbg !14566
  %add = add i64 %conv, 4, !dbg !14567
  %sub = sub i64 %add, 1, !dbg !14568
  %div = sdiv i64 %sub, 4, !dbg !14569
  ret i64 %div, !dbg !14570
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #4

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #1 !dbg !14571 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !14574, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.declare(metadata i8* %value, metadata !14576, metadata !DIExpression()), !dbg !14575
  %0 = load i32, i32* %port.addr, align 4, !dbg !14575
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #10, !dbg !14575, !srcloc !14577
  store i8 %1, i8* %value, align 1, !dbg !14575
  %2 = load i8, i8* %value, align 1, !dbg !14575
  ret i8 %2, !dbg !14575
}

; Function Attrs: noredzone
declare dso_local void @do_SAK(%struct.tty_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext %ch, i8 signext %flag) #1 !dbg !14578 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %ch.addr = alloca i8, align 1
  %flag.addr = alloca i8, align 1
  %tb = alloca %struct.tty_buffer*, align 8
  %change = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !14582, metadata !DIExpression()), !dbg !14583
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !14584, metadata !DIExpression()), !dbg !14585
  store i8 %flag, i8* %flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flag.addr, metadata !14586, metadata !DIExpression()), !dbg !14587
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %tb, metadata !14588, metadata !DIExpression()), !dbg !14589
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !14590
  %buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 0, !dbg !14591
  %tail = getelementptr inbounds %struct.tty_bufhead, %struct.tty_bufhead* %buf, i32 0, i32 8, !dbg !14592
  %1 = load %struct.tty_buffer*, %struct.tty_buffer** %tail, align 8, !dbg !14592
  store %struct.tty_buffer* %1, %struct.tty_buffer** %tb, align 8, !dbg !14589
  call void @llvm.dbg.declare(metadata i32* %change, metadata !14593, metadata !DIExpression()), !dbg !14594
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !14595
  %flags = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 5, !dbg !14596
  %3 = load i32, i32* %flags, align 8, !dbg !14596
  %and = and i32 %3, 1, !dbg !14597
  %tobool = icmp ne i32 %and, 0, !dbg !14597
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !14598

land.rhs:                                         ; preds = %entry
  %4 = load i8, i8* %flag.addr, align 1, !dbg !14599
  %conv = sext i8 %4 to i32, !dbg !14599
  %cmp = icmp ne i32 %conv, 0, !dbg !14600
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !14601
  %land.ext = zext i1 %5 to i32, !dbg !14598
  store i32 %land.ext, i32* %change, align 4, !dbg !14602
  %6 = load i32, i32* %change, align 4, !dbg !14603
  %tobool2 = icmp ne i32 %6, 0, !dbg !14603
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !14605

land.lhs.true:                                    ; preds = %land.end
  %7 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !14606
  %used = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %7, i32 0, i32 1, !dbg !14607
  %8 = load i32, i32* %used, align 8, !dbg !14607
  %9 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !14608
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %9, i32 0, i32 2, !dbg !14609
  %10 = load i32, i32* %size, align 4, !dbg !14609
  %cmp3 = icmp slt i32 %8, %10, !dbg !14610
  br i1 %cmp3, label %if.then, label %if.end12, !dbg !14611

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !14612
  %flags5 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %11, i32 0, i32 5, !dbg !14615
  %12 = load i32, i32* %flags5, align 8, !dbg !14615
  %neg = xor i32 %12, -1, !dbg !14616
  %and6 = and i32 %neg, 1, !dbg !14617
  %tobool7 = icmp ne i32 %and6, 0, !dbg !14617
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !14618

if.then8:                                         ; preds = %if.then
  %13 = load i8, i8* %flag.addr, align 1, !dbg !14619
  %14 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !14620
  %15 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !14621
  %used9 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %15, i32 0, i32 1, !dbg !14622
  %16 = load i32, i32* %used9, align 8, !dbg !14622
  %call = call i8* @flag_buf_ptr(%struct.tty_buffer* %14, i32 %16) #11, !dbg !14623
  store i8 %13, i8* %call, align 1, !dbg !14624
  br label %if.end, !dbg !14625

if.end:                                           ; preds = %if.then8, %if.then
  %17 = load i8, i8* %ch.addr, align 1, !dbg !14626
  %18 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !14627
  %19 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !14628
  %used10 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %19, i32 0, i32 1, !dbg !14629
  %20 = load i32, i32* %used10, align 8, !dbg !14630
  %inc = add i32 %20, 1, !dbg !14630
  store i32 %inc, i32* %used10, align 8, !dbg !14630
  %call11 = call i8* @char_buf_ptr(%struct.tty_buffer* %18, i32 %20) #11, !dbg !14631
  store i8 %17, i8* %call11, align 1, !dbg !14632
  store i32 1, i32* %retval, align 4, !dbg !14633
  br label %return, !dbg !14633

if.end12:                                         ; preds = %land.lhs.true, %land.end
  %21 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !14634
  %22 = load i8, i8* %ch.addr, align 1, !dbg !14635
  %23 = load i8, i8* %flag.addr, align 1, !dbg !14636
  %call13 = call i32 @__tty_insert_flip_char(%struct.tty_port* %21, i8 zeroext %22, i8 signext %23) #11, !dbg !14637
  store i32 %call13, i32* %retval, align 4, !dbg !14638
  br label %return, !dbg !14638

return:                                           ; preds = %if.end12, %if.end
  %24 = load i32, i32* %retval, align 4, !dbg !14639
  ret i32 %24, !dbg !14639
}

; Function Attrs: noredzone
declare dso_local void @tty_flip_buffer_push(%struct.tty_port*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @flag_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #1 !dbg !14640 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !14643, metadata !DIExpression()), !dbg !14644
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !14645, metadata !DIExpression()), !dbg !14646
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !14647
  %1 = load i32, i32* %ofs.addr, align 4, !dbg !14648
  %call = call i8* @char_buf_ptr(%struct.tty_buffer* %0, i32 %1) #11, !dbg !14649
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !14650
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 2, !dbg !14651
  %3 = load i32, i32* %size, align 4, !dbg !14651
  %idx.ext = sext i32 %3 to i64, !dbg !14652
  %add.ptr = getelementptr i8, i8* %call, i64 %idx.ext, !dbg !14652
  ret i8* %add.ptr, !dbg !14653
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @char_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #1 !dbg !14654 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !14657, metadata !DIExpression()), !dbg !14658
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !14659, metadata !DIExpression()), !dbg !14660
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !14661
  %data = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %0, i32 0, i32 6, !dbg !14662
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %data, i64 0, i64 0, !dbg !14661
  %1 = bitcast i64* %arraydecay to i8*, !dbg !14663
  %2 = load i32, i32* %ofs.addr, align 4, !dbg !14664
  %idx.ext = sext i32 %2 to i64, !dbg !14665
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !14665
  ret i8* %add.ptr, !dbg !14666
}

; Function Attrs: noredzone
declare dso_local i32 @__tty_insert_flip_char(%struct.tty_port*, i8 zeroext, i8 signext) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usc_loopmode_active(%struct.mgsl_struct* %info) #1 !dbg !14667 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !14668, metadata !DIExpression()), !dbg !14669
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14670
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %0, i16 zeroext 4) #11, !dbg !14671
  %conv = zext i16 %call to i32, !dbg !14671
  %and = and i32 %conv, 128, !dbg !14672
  %tobool = icmp ne i32 %and, 0, !dbg !14671
  %1 = zext i1 %tobool to i64, !dbg !14671
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !14671
  ret i32 %cond, !dbg !14673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_process_rxoverrun_sync(%struct.mgsl_struct* %info) #1 !dbg !14674 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %start_index = alloca i32, align 4
  %end_index = alloca i32, align 4
  %frame_start_index = alloca i32, align 4
  %start_of_frame_found = alloca i8, align 1
  %end_of_frame_found = alloca i8, align 1
  %reprogram_dma = alloca i8, align 1
  %buffer_list = alloca %struct._DMABUFFERENTRY*, align 8
  %phys_addr = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !14675, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.declare(metadata i32* %start_index, metadata !14677, metadata !DIExpression()), !dbg !14678
  call void @llvm.dbg.declare(metadata i32* %end_index, metadata !14679, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.declare(metadata i32* %frame_start_index, metadata !14681, metadata !DIExpression()), !dbg !14682
  call void @llvm.dbg.declare(metadata i8* %start_of_frame_found, metadata !14683, metadata !DIExpression()), !dbg !14684
  store i8 0, i8* %start_of_frame_found, align 1, !dbg !14684
  call void @llvm.dbg.declare(metadata i8* %end_of_frame_found, metadata !14685, metadata !DIExpression()), !dbg !14686
  store i8 0, i8* %end_of_frame_found, align 1, !dbg !14686
  call void @llvm.dbg.declare(metadata i8* %reprogram_dma, metadata !14687, metadata !DIExpression()), !dbg !14688
  store i8 0, i8* %reprogram_dma, align 1, !dbg !14688
  call void @llvm.dbg.declare(metadata %struct._DMABUFFERENTRY** %buffer_list, metadata !14689, metadata !DIExpression()), !dbg !14690
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14691
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 34, !dbg !14692
  %1 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !14692
  store %struct._DMABUFFERENTRY* %1, %struct._DMABUFFERENTRY** %buffer_list, align 8, !dbg !14690
  call void @llvm.dbg.declare(metadata i32* %phys_addr, metadata !14693, metadata !DIExpression()), !dbg !14694
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14695
  call void @usc_DmaCmd(%struct.mgsl_struct* %2, i16 zeroext 16896) #11, !dbg !14696
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14697
  call void @usc_OutReg(%struct.mgsl_struct* %3, i16 zeroext 36, i16 zeroext 12288) #11, !dbg !14697
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14698
  call void @usc_RTCmd(%struct.mgsl_struct* %4, i16 zeroext 18432) #11, !dbg !14699
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14700
  %current_rx_buffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 35, !dbg !14701
  %6 = load i32, i32* %current_rx_buffer, align 8, !dbg !14701
  store i32 %6, i32* %end_index, align 4, !dbg !14702
  store i32 %6, i32* %start_index, align 4, !dbg !14703
  store i32 %6, i32* %frame_start_index, align 4, !dbg !14704
  br label %while.cond, !dbg !14705

while.cond:                                       ; preds = %if.end11, %entry
  %7 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %buffer_list, align 8, !dbg !14706
  %8 = load i32, i32* %end_index, align 4, !dbg !14707
  %idxprom = sext i32 %8 to i64, !dbg !14706
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %7, i64 %idxprom, !dbg !14706
  %count = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 1, !dbg !14708
  %9 = load volatile i16, i16* %count, align 4, !dbg !14708
  %tobool = icmp ne i16 %9, 0, !dbg !14709
  %lnot = xor i1 %tobool, true, !dbg !14709
  br i1 %lnot, label %while.body, label %while.end, !dbg !14705

while.body:                                       ; preds = %while.cond
  %10 = load i8, i8* %start_of_frame_found, align 1, !dbg !14710
  %tobool1 = trunc i8 %10 to i1, !dbg !14710
  br i1 %tobool1, label %if.end, label %if.then, !dbg !14713

if.then:                                          ; preds = %while.body
  store i8 1, i8* %start_of_frame_found, align 1, !dbg !14714
  %11 = load i32, i32* %end_index, align 4, !dbg !14716
  store i32 %11, i32* %frame_start_index, align 4, !dbg !14717
  store i8 0, i8* %end_of_frame_found, align 1, !dbg !14718
  br label %if.end, !dbg !14719

if.end:                                           ; preds = %if.then, %while.body
  %12 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %buffer_list, align 8, !dbg !14720
  %13 = load i32, i32* %end_index, align 4, !dbg !14722
  %idxprom2 = sext i32 %13 to i64, !dbg !14720
  %arrayidx3 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %12, i64 %idxprom2, !dbg !14720
  %status = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx3, i32 0, i32 2, !dbg !14723
  %14 = load volatile i16, i16* %status, align 2, !dbg !14723
  %tobool4 = icmp ne i16 %14, 0, !dbg !14720
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !14724

if.then5:                                         ; preds = %if.end
  store i8 0, i8* %start_of_frame_found, align 1, !dbg !14725
  store i8 1, i8* %end_of_frame_found, align 1, !dbg !14727
  br label %if.end6, !dbg !14728

if.end6:                                          ; preds = %if.then5, %if.end
  %15 = load i32, i32* %end_index, align 4, !dbg !14729
  %inc = add i32 %15, 1, !dbg !14729
  store i32 %inc, i32* %end_index, align 4, !dbg !14729
  %16 = load i32, i32* %end_index, align 4, !dbg !14730
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14732
  %rx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 33, !dbg !14733
  %18 = load i32, i32* %rx_buffer_count, align 8, !dbg !14733
  %cmp = icmp eq i32 %16, %18, !dbg !14734
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !14735

if.then7:                                         ; preds = %if.end6
  store i32 0, i32* %end_index, align 4, !dbg !14736
  br label %if.end8, !dbg !14737

if.end8:                                          ; preds = %if.then7, %if.end6
  %19 = load i32, i32* %start_index, align 4, !dbg !14738
  %20 = load i32, i32* %end_index, align 4, !dbg !14740
  %cmp9 = icmp eq i32 %19, %20, !dbg !14741
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !14742

if.then10:                                        ; preds = %if.end8
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14743
  call void @mgsl_reset_rx_dma_buffers(%struct.mgsl_struct* %21) #11, !dbg !14745
  store i32 0, i32* %frame_start_index, align 4, !dbg !14746
  store i8 0, i8* %start_of_frame_found, align 1, !dbg !14747
  store i8 1, i8* %reprogram_dma, align 1, !dbg !14748
  br label %while.end, !dbg !14749

if.end11:                                         ; preds = %if.end8
  br label %while.cond, !dbg !14705, !llvm.loop !14750

while.end:                                        ; preds = %if.then10, %while.cond
  %22 = load i8, i8* %start_of_frame_found, align 1, !dbg !14752
  %tobool12 = trunc i8 %22 to i1, !dbg !14752
  br i1 %tobool12, label %land.lhs.true, label %if.end25, !dbg !14754

land.lhs.true:                                    ; preds = %while.end
  %23 = load i8, i8* %end_of_frame_found, align 1, !dbg !14755
  %tobool13 = trunc i8 %23 to i1, !dbg !14755
  br i1 %tobool13, label %if.end25, label %if.then14, !dbg !14756

if.then14:                                        ; preds = %land.lhs.true
  %24 = load i32, i32* %frame_start_index, align 4, !dbg !14757
  store i32 %24, i32* %start_index, align 4, !dbg !14759
  br label %do.body, !dbg !14760

do.body:                                          ; preds = %do.cond, %if.then14
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14761
  %rx_buffer_list15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 34, !dbg !14763
  %26 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list15, align 8, !dbg !14763
  %27 = load i32, i32* %start_index, align 4, !dbg !14764
  %inc16 = add i32 %27, 1, !dbg !14764
  store i32 %inc16, i32* %start_index, align 4, !dbg !14764
  %idxprom17 = sext i32 %27 to i64, !dbg !14761
  %arrayidx18 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %26, i64 %idxprom17, !dbg !14761
  %count19 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx18, i32 0, i32 1, !dbg !14765
  %28 = bitcast i16* %count19 to i64*, !dbg !14766
  store i64 4096, i64* %28, align 4, !dbg !14767
  %29 = load i32, i32* %start_index, align 4, !dbg !14768
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14770
  %rx_buffer_count20 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 33, !dbg !14771
  %31 = load i32, i32* %rx_buffer_count20, align 8, !dbg !14771
  %cmp21 = icmp eq i32 %29, %31, !dbg !14772
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !14773

if.then22:                                        ; preds = %do.body
  store i32 0, i32* %start_index, align 4, !dbg !14774
  br label %if.end23, !dbg !14775

if.end23:                                         ; preds = %if.then22, %do.body
  br label %do.cond, !dbg !14776

do.cond:                                          ; preds = %if.end23
  %32 = load i32, i32* %start_index, align 4, !dbg !14777
  %33 = load i32, i32* %end_index, align 4, !dbg !14778
  %cmp24 = icmp ne i32 %32, %33, !dbg !14779
  br i1 %cmp24, label %do.body, label %do.end, !dbg !14776, !llvm.loop !14780

do.end:                                           ; preds = %do.cond
  store i8 1, i8* %reprogram_dma, align 1, !dbg !14782
  br label %if.end25, !dbg !14783

if.end25:                                         ; preds = %do.end, %land.lhs.true, %while.end
  %34 = load i8, i8* %reprogram_dma, align 1, !dbg !14784
  %tobool26 = trunc i8 %34 to i1, !dbg !14784
  br i1 %tobool26, label %if.then27, label %if.else61, !dbg !14786

if.then27:                                        ; preds = %if.end25
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14787
  call void @usc_OutReg(%struct.mgsl_struct* %35, i16 zeroext 36, i16 zeroext 502) #11, !dbg !14787
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14789
  call void @usc_OutReg(%struct.mgsl_struct* %36, i16 zeroext 26, i16 zeroext 112) #11, !dbg !14789
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14790
  call void @usc_OutReg(%struct.mgsl_struct* %37, i16 zeroext 36, i16 zeroext 48) #11, !dbg !14790
  %38 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14791
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14791
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %39, i16 zeroext 34) #11, !dbg !14791
  %conv = zext i16 %call to i32, !dbg !14791
  %and = and i32 %conv, 65532, !dbg !14791
  %conv28 = trunc i32 %and to i16, !dbg !14791
  call void @usc_OutReg(%struct.mgsl_struct* %38, i16 zeroext 34, i16 zeroext %conv28) #11, !dbg !14791
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14792
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14793
  %call29 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %41, i16 zeroext 4) #11, !dbg !14794
  %conv30 = zext i16 %call29 to i32, !dbg !14794
  %or = or i32 %conv30, 8192, !dbg !14795
  %conv31 = trunc i32 %or to i16, !dbg !14796
  call void @usc_OutReg(%struct.mgsl_struct* %40, i16 zeroext 4, i16 zeroext %conv31) #11, !dbg !14797
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14798
  %rx_buffer_list32 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 34, !dbg !14799
  %43 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list32, align 8, !dbg !14799
  %44 = load i32, i32* %frame_start_index, align 4, !dbg !14800
  %idxprom33 = sext i32 %44 to i64, !dbg !14798
  %arrayidx34 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %43, i64 %idxprom33, !dbg !14798
  %phys_entry = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx34, i32 0, i32 7, !dbg !14801
  %45 = load i32, i32* %phys_entry, align 8, !dbg !14801
  store i32 %45, i32* %phys_addr, align 4, !dbg !14802
  %46 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14803
  %47 = load i32, i32* %phys_addr, align 4, !dbg !14804
  %conv35 = trunc i32 %47 to i16, !dbg !14805
  call void @usc_OutDmaReg(%struct.mgsl_struct* %46, i16 zeroext 188, i16 zeroext %conv35) #11, !dbg !14806
  %48 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14807
  %49 = load i32, i32* %phys_addr, align 4, !dbg !14808
  %shr = lshr i32 %49, 16, !dbg !14809
  %conv36 = trunc i32 %shr to i16, !dbg !14810
  call void @usc_OutDmaReg(%struct.mgsl_struct* %48, i16 zeroext 190, i16 zeroext %conv36) #11, !dbg !14811
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14812
  call void @usc_OutReg(%struct.mgsl_struct* %50, i16 zeroext 36, i16 zeroext 502) #11, !dbg !14812
  %51 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14813
  call void @usc_OutReg(%struct.mgsl_struct* %51, i16 zeroext 26, i16 zeroext 112) #11, !dbg !14813
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14814
  %53 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14814
  %call37 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %53, i16 zeroext 24) #11, !dbg !14814
  %conv38 = zext i16 %call37 to i32, !dbg !14814
  %and39 = and i32 %conv38, 65280, !dbg !14814
  %add = add i32 %and39, 192, !dbg !14814
  %add40 = add i32 %add, 32, !dbg !14814
  %conv41 = trunc i32 %add40 to i16, !dbg !14814
  call void @usc_OutReg(%struct.mgsl_struct* %52, i16 zeroext 24, i16 zeroext %conv41) #11, !dbg !14814
  %54 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14815
  call void @usc_OutDmaReg(%struct.mgsl_struct* %54, i16 zeroext 158, i16 zeroext 12) #11, !dbg !14816
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14817
  %56 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14818
  %call42 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %56, i16 zeroext 24) #11, !dbg !14819
  %conv43 = zext i16 %call42 to i32, !dbg !14819
  %or44 = or i32 %conv43, 2, !dbg !14820
  %conv45 = trunc i32 %or44 to i16, !dbg !14821
  call void @usc_OutDmaReg(%struct.mgsl_struct* %55, i16 zeroext 24, i16 zeroext %conv45) #11, !dbg !14822
  %57 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14823
  call void @usc_DmaCmd(%struct.mgsl_struct* %57, i16 zeroext 29184) #11, !dbg !14824
  %58 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14825
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %58, i32 0, i32 70, !dbg !14827
  %flags = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 2, !dbg !14828
  %59 = load i16, i16* %flags, align 2, !dbg !14828
  %conv46 = zext i16 %59 to i32, !dbg !14825
  %and47 = and i32 %conv46, 64, !dbg !14829
  %tobool48 = icmp ne i32 %and47, 0, !dbg !14829
  br i1 %tobool48, label %if.then49, label %if.else, !dbg !14830

if.then49:                                        ; preds = %if.then27
  %60 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14831
  %61 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14831
  %call50 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %61, i16 zeroext 34) #11, !dbg !14831
  %conv51 = zext i16 %call50 to i32, !dbg !14831
  %and52 = and i32 %conv51, 65532, !dbg !14831
  %or53 = or i32 %and52, 3, !dbg !14831
  %conv54 = trunc i32 %or53 to i16, !dbg !14831
  call void @usc_OutReg(%struct.mgsl_struct* %60, i16 zeroext 34, i16 zeroext %conv54) #11, !dbg !14831
  br label %if.end60, !dbg !14831

if.else:                                          ; preds = %if.then27
  %62 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14832
  %63 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14832
  %call55 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %63, i16 zeroext 34) #11, !dbg !14832
  %conv56 = zext i16 %call55 to i32, !dbg !14832
  %and57 = and i32 %conv56, 65532, !dbg !14832
  %or58 = or i32 %and57, 2, !dbg !14832
  %conv59 = trunc i32 %or58 to i16, !dbg !14832
  call void @usc_OutReg(%struct.mgsl_struct* %62, i16 zeroext 34, i16 zeroext %conv59) #11, !dbg !14832
  br label %if.end60

if.end60:                                         ; preds = %if.else, %if.then49
  br label %if.end66, !dbg !14833

if.else61:                                        ; preds = %if.end25
  %64 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14834
  %65 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14836
  %call62 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %65, i16 zeroext 4) #11, !dbg !14837
  %conv63 = zext i16 %call62 to i32, !dbg !14837
  %or64 = or i32 %conv63, 8192, !dbg !14838
  %conv65 = trunc i32 %or64 to i16, !dbg !14839
  call void @usc_OutReg(%struct.mgsl_struct* %64, i16 zeroext 4, i16 zeroext %conv65) #11, !dbg !14840
  %66 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14841
  call void @usc_RTCmd(%struct.mgsl_struct* %66, i16 zeroext 18432) #11, !dbg !14842
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.end60
  ret void, !dbg !14843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @load_next_tx_holding_buffer(%struct.mgsl_struct* %info) #1 !dbg !14844 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !14218, metadata !DIExpression()), !dbg !14845
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %ret = alloca i8, align 1
  %ptx = alloca %struct.tx_holding_buffer*, align 8
  %num_free = alloca i32, align 4
  %num_needed = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !14851, metadata !DIExpression()), !dbg !14852
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !14853, metadata !DIExpression()), !dbg !14854
  store i8 0, i8* %ret, align 1, !dbg !14854
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14855
  %tx_holding_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 46, !dbg !14856
  %1 = load i32, i32* %tx_holding_count, align 4, !dbg !14856
  %tobool = icmp ne i32 %1, 0, !dbg !14855
  br i1 %tobool, label %if.then, label %if.end17, !dbg !14857

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tx_holding_buffer** %ptx, metadata !14858, metadata !DIExpression()), !dbg !14860
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14861
  %tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 47, !dbg !14862
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14863
  %get_tx_holding_index = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 44, !dbg !14864
  %4 = load i32, i32* %get_tx_holding_index, align 4, !dbg !14864
  %idxprom = sext i32 %4 to i64, !dbg !14861
  %arrayidx = getelementptr [5 x %struct.tx_holding_buffer], [5 x %struct.tx_holding_buffer]* %tx_holding_buffers, i64 0, i64 %idxprom, !dbg !14861
  store %struct.tx_holding_buffer* %arrayidx, %struct.tx_holding_buffer** %ptx, align 8, !dbg !14860
  call void @llvm.dbg.declare(metadata i32* %num_free, metadata !14865, metadata !DIExpression()), !dbg !14866
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14867
  %call = call i32 @num_free_tx_dma_buffers(%struct.mgsl_struct* %5) #11, !dbg !14868
  store i32 %call, i32* %num_free, align 4, !dbg !14866
  call void @llvm.dbg.declare(metadata i32* %num_needed, metadata !14869, metadata !DIExpression()), !dbg !14870
  %6 = load %struct.tx_holding_buffer*, %struct.tx_holding_buffer** %ptx, align 8, !dbg !14871
  %buffer_size = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %6, i32 0, i32 0, !dbg !14872
  %7 = load i32, i32* %buffer_size, align 8, !dbg !14872
  %div = sdiv i32 %7, 4096, !dbg !14873
  store i32 %div, i32* %num_needed, align 4, !dbg !14870
  %8 = load %struct.tx_holding_buffer*, %struct.tx_holding_buffer** %ptx, align 8, !dbg !14874
  %buffer_size1 = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %8, i32 0, i32 0, !dbg !14876
  %9 = load i32, i32* %buffer_size1, align 8, !dbg !14876
  %rem = srem i32 %9, 4096, !dbg !14877
  %tobool2 = icmp ne i32 %rem, 0, !dbg !14877
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !14878

if.then3:                                         ; preds = %if.then
  %10 = load i32, i32* %num_needed, align 4, !dbg !14879
  %inc = add i32 %10, 1, !dbg !14879
  store i32 %inc, i32* %num_needed, align 4, !dbg !14879
  br label %if.end, !dbg !14879

if.end:                                           ; preds = %if.then3, %if.then
  %11 = load i32, i32* %num_needed, align 4, !dbg !14880
  %12 = load i32, i32* %num_free, align 4, !dbg !14881
  %cmp = icmp sle i32 %11, %12, !dbg !14882
  br i1 %cmp, label %if.then4, label %if.end16, !dbg !14883

if.then4:                                         ; preds = %if.end
  %13 = load %struct.tx_holding_buffer*, %struct.tx_holding_buffer** %ptx, align 8, !dbg !14884
  %buffer_size5 = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %13, i32 0, i32 0, !dbg !14885
  %14 = load i32, i32* %buffer_size5, align 8, !dbg !14885
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14886
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 12, !dbg !14887
  store i32 %14, i32* %xmit_cnt, align 8, !dbg !14888
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14889
  %17 = load %struct.tx_holding_buffer*, %struct.tx_holding_buffer** %ptx, align 8, !dbg !14890
  %buffer = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %17, i32 0, i32 1, !dbg !14891
  %18 = load i8*, i8** %buffer, align 8, !dbg !14891
  %19 = load %struct.tx_holding_buffer*, %struct.tx_holding_buffer** %ptx, align 8, !dbg !14892
  %buffer_size6 = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %19, i32 0, i32 0, !dbg !14893
  %20 = load i32, i32* %buffer_size6, align 8, !dbg !14893
  call void @mgsl_load_tx_dma_buffer(%struct.mgsl_struct* %16, i8* %18, i32 %20) #11, !dbg !14894
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14895
  %tx_holding_count7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 46, !dbg !14896
  %22 = load i32, i32* %tx_holding_count7, align 4, !dbg !14897
  %dec = add i32 %22, -1, !dbg !14897
  store i32 %dec, i32* %tx_holding_count7, align 4, !dbg !14897
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14898
  %get_tx_holding_index8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 44, !dbg !14900
  %24 = load i32, i32* %get_tx_holding_index8, align 4, !dbg !14901
  %inc9 = add i32 %24, 1, !dbg !14901
  store i32 %inc9, i32* %get_tx_holding_index8, align 4, !dbg !14901
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14902
  %num_tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 43, !dbg !14903
  %26 = load i32, i32* %num_tx_holding_buffers, align 8, !dbg !14903
  %cmp10 = icmp sge i32 %inc9, %26, !dbg !14904
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !14905

if.then11:                                        ; preds = %if.then4
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14906
  %get_tx_holding_index12 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 44, !dbg !14907
  store i32 0, i32* %get_tx_holding_index12, align 4, !dbg !14908
  br label %if.end13, !dbg !14906

if.end13:                                         ; preds = %if.then11, %if.then4
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14909
  %tx_timer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 15, !dbg !14910
  %29 = load volatile i64, i64* @jiffies, align 8, !dbg !14911
  store i32 5000, i32* %m.addr.i, align 4
  %30 = load i32, i32* %m.addr.i, align 4, !dbg !14912
  %31 = call i1 @llvm.is.constant.i32(i32 %30) #10, !dbg !14913
  br i1 %31, label %if.then.i, label %if.else.i, !dbg !14914

if.then.i:                                        ; preds = %if.end13
  %32 = load i32, i32* %m.addr.i, align 4, !dbg !14915
  %cmp.i = icmp slt i32 %32, 0, !dbg !14916
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14917

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !14918
  br label %msecs_to_jiffies.exit, !dbg !14918

if.end.i:                                         ; preds = %if.then.i
  %33 = load i32, i32* %m.addr.i, align 4, !dbg !14919
  %call.i = call i64 @_msecs_to_jiffies(i32 %33) #14, !dbg !14920
  store i64 %call.i, i64* %retval.i, align 8, !dbg !14921
  br label %msecs_to_jiffies.exit, !dbg !14921

if.else.i:                                        ; preds = %if.end13
  %34 = load i32, i32* %m.addr.i, align 4, !dbg !14922
  %call2.i = call i64 @__msecs_to_jiffies(i32 %34) #14, !dbg !14923
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !14924
  br label %msecs_to_jiffies.exit, !dbg !14924

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %35 = load i64, i64* %retval.i, align 8, !dbg !14925
  %add = add i64 %29, %35, !dbg !14926
  %call15 = call i32 @mod_timer(%struct.timer_list* %tx_timer, i64 %add) #11, !dbg !14927
  store i8 1, i8* %ret, align 1, !dbg !14928
  br label %if.end16, !dbg !14929

if.end16:                                         ; preds = %msecs_to_jiffies.exit, %if.end
  br label %if.end17, !dbg !14930

if.end17:                                         ; preds = %if.end16, %entry
  %36 = load i8, i8* %ret, align 1, !dbg !14931
  %tobool18 = trunc i8 %36 to i1, !dbg !14931
  ret i1 %tobool18, !dbg !14932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @num_free_tx_dma_buffers(%struct.mgsl_struct* %info) #1 !dbg !14933 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !14934, metadata !DIExpression()), !dbg !14935
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14936
  %tx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 38, !dbg !14937
  %1 = load i32, i32* %tx_buffer_count, align 4, !dbg !14937
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14938
  %tx_dma_buffers_used = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 37, !dbg !14939
  %3 = load i32, i32* %tx_dma_buffers_used, align 8, !dbg !14939
  %sub = sub i32 %1, %3, !dbg !14940
  ret i32 %sub, !dbg !14941
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_load_tx_dma_buffer(%struct.mgsl_struct* %info, i8* %Buffer, i32 %BufferSize) #1 !dbg !14942 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %Buffer.addr = alloca i8*, align 8
  %BufferSize.addr = alloca i32, align 4
  %Copycount = alloca i16, align 2
  %i = alloca i32, align 4
  %pBufEntry = alloca %struct._DMABUFFERENTRY*, align 8
  %__UNIQUE_ID___x352 = alloca i32, align 4
  %__UNIQUE_ID___y353 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !14945, metadata !DIExpression()), !dbg !14946
  store i8* %Buffer, i8** %Buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %Buffer.addr, metadata !14947, metadata !DIExpression()), !dbg !14948
  store i32 %BufferSize, i32* %BufferSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %BufferSize.addr, metadata !14949, metadata !DIExpression()), !dbg !14950
  call void @llvm.dbg.declare(metadata i16* %Copycount, metadata !14951, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14953, metadata !DIExpression()), !dbg !14954
  store i32 0, i32* %i, align 4, !dbg !14954
  call void @llvm.dbg.declare(metadata %struct._DMABUFFERENTRY** %pBufEntry, metadata !14955, metadata !DIExpression()), !dbg !14956
  %0 = load i32, i32* @debug_level, align 4, !dbg !14957
  %cmp = icmp sge i32 %0, 1, !dbg !14959
  br i1 %cmp, label %if.then, label %if.end, !dbg !14960

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14961
  %2 = load i8*, i8** %Buffer.addr, align 8, !dbg !14962
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x352, metadata !14963, metadata !DIExpression()), !dbg !14965
  %3 = load i32, i32* %BufferSize.addr, align 4, !dbg !14965
  store i32 %3, i32* %__UNIQUE_ID___x352, align 4, !dbg !14965
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y353, metadata !14966, metadata !DIExpression()), !dbg !14965
  store i32 4096, i32* %__UNIQUE_ID___y353, align 4, !dbg !14965
  %4 = load i32, i32* %__UNIQUE_ID___x352, align 4, !dbg !14965
  %5 = load i32, i32* %__UNIQUE_ID___y353, align 4, !dbg !14965
  %cmp1 = icmp slt i32 %4, %5, !dbg !14965
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !14965

cond.true:                                        ; preds = %if.then
  %6 = load i32, i32* %__UNIQUE_ID___x352, align 4, !dbg !14965
  br label %cond.end, !dbg !14965

cond.false:                                       ; preds = %if.then
  %7 = load i32, i32* %__UNIQUE_ID___y353, align 4, !dbg !14965
  br label %cond.end, !dbg !14965

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !14965
  store i32 %cond, i32* %tmp, align 4, !dbg !14965
  %8 = load i32, i32* %tmp, align 4, !dbg !14965
  call void @mgsl_trace_block(%struct.mgsl_struct* %1, i8* %2, i32 %8, i32 1) #11, !dbg !14967
  br label %if.end, !dbg !14967

if.end:                                           ; preds = %cond.end, %entry
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14968
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 70, !dbg !14970
  %flags = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 2, !dbg !14971
  %10 = load i16, i16* %flags, align 2, !dbg !14971
  %conv = zext i16 %10 to i32, !dbg !14968
  %and = and i32 %conv, 16384, !dbg !14972
  %tobool = icmp ne i32 %and, 0, !dbg !14972
  br i1 %tobool, label %if.then2, label %if.end5, !dbg !14973

if.then2:                                         ; preds = %if.end
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14974
  %cmr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 54, !dbg !14976
  %12 = load i16, i16* %cmr_value, align 4, !dbg !14977
  %conv3 = zext i16 %12 to i32, !dbg !14977
  %or = or i32 %conv3, 8192, !dbg !14977
  %conv4 = trunc i32 %or to i16, !dbg !14977
  store i16 %conv4, i16* %cmr_value, align 4, !dbg !14977
  br label %if.end5, !dbg !14978

if.end5:                                          ; preds = %if.then2, %if.end
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14979
  %current_tx_buffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 41, !dbg !14980
  %14 = load i32, i32* %current_tx_buffer, align 4, !dbg !14980
  store i32 %14, i32* %i, align 4, !dbg !14981
  %15 = load i32, i32* %i, align 4, !dbg !14982
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14983
  %start_tx_dma_buffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 40, !dbg !14984
  store i32 %15, i32* %start_tx_dma_buffer, align 8, !dbg !14985
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14986
  %cmr_value6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 54, !dbg !14987
  %18 = load i16, i16* %cmr_value6, align 4, !dbg !14987
  %conv7 = zext i16 %18 to i32, !dbg !14986
  %and8 = and i32 %conv7, 61440, !dbg !14988
  %conv9 = trunc i32 %and8 to i16, !dbg !14986
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14989
  %tx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 39, !dbg !14990
  %20 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list, align 8, !dbg !14990
  %21 = load i32, i32* %i, align 4, !dbg !14991
  %idxprom = zext i32 %21 to i64, !dbg !14989
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %20, i64 %idxprom, !dbg !14989
  %status = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 2, !dbg !14992
  store volatile i16 %conv9, i16* %status, align 2, !dbg !14993
  %22 = load i32, i32* %BufferSize.addr, align 4, !dbg !14994
  %conv10 = trunc i32 %22 to i16, !dbg !14994
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !14995
  %tx_buffer_list11 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 39, !dbg !14996
  %24 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list11, align 8, !dbg !14996
  %25 = load i32, i32* %i, align 4, !dbg !14997
  %idxprom12 = zext i32 %25 to i64, !dbg !14995
  %arrayidx13 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %24, i64 %idxprom12, !dbg !14995
  %rcc = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx13, i32 0, i32 3, !dbg !14998
  store volatile i16 %conv10, i16* %rcc, align 8, !dbg !14999
  %26 = load i32, i32* %BufferSize.addr, align 4, !dbg !15000
  %conv14 = trunc i32 %26 to i16, !dbg !15000
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15001
  %tx_buffer_list15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 39, !dbg !15002
  %28 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list15, align 8, !dbg !15002
  %29 = load i32, i32* %i, align 4, !dbg !15003
  %idxprom16 = zext i32 %29 to i64, !dbg !15001
  %arrayidx17 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %28, i64 %idxprom16, !dbg !15001
  %count = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx17, i32 0, i32 1, !dbg !15004
  store volatile i16 %conv14, i16* %count, align 4, !dbg !15005
  br label %while.cond, !dbg !15006

while.cond:                                       ; preds = %if.end30, %if.end5
  %30 = load i32, i32* %BufferSize.addr, align 4, !dbg !15007
  %tobool18 = icmp ne i32 %30, 0, !dbg !15006
  br i1 %tobool18, label %while.body, label %while.end, !dbg !15006

while.body:                                       ; preds = %while.cond
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15008
  %tx_buffer_list19 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 39, !dbg !15010
  %32 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list19, align 8, !dbg !15010
  %33 = load i32, i32* %i, align 4, !dbg !15011
  %inc = add i32 %33, 1, !dbg !15011
  store i32 %inc, i32* %i, align 4, !dbg !15011
  %idxprom20 = zext i32 %33 to i64, !dbg !15008
  %arrayidx21 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %32, i64 %idxprom20, !dbg !15008
  store %struct._DMABUFFERENTRY* %arrayidx21, %struct._DMABUFFERENTRY** %pBufEntry, align 8, !dbg !15012
  %34 = load i32, i32* %i, align 4, !dbg !15013
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15015
  %tx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 38, !dbg !15016
  %36 = load i32, i32* %tx_buffer_count, align 4, !dbg !15016
  %cmp22 = icmp eq i32 %34, %36, !dbg !15017
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !15018

if.then24:                                        ; preds = %while.body
  store i32 0, i32* %i, align 4, !dbg !15019
  br label %if.end25, !dbg !15020

if.end25:                                         ; preds = %if.then24, %while.body
  %37 = load i32, i32* %BufferSize.addr, align 4, !dbg !15021
  %cmp26 = icmp ugt i32 %37, 4096, !dbg !15023
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !15024

if.then28:                                        ; preds = %if.end25
  store i16 4096, i16* %Copycount, align 2, !dbg !15025
  br label %if.end30, !dbg !15026

if.else:                                          ; preds = %if.end25
  %38 = load i32, i32* %BufferSize.addr, align 4, !dbg !15027
  %conv29 = trunc i32 %38 to i16, !dbg !15027
  store i16 %conv29, i16* %Copycount, align 2, !dbg !15028
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then28
  %39 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %pBufEntry, align 8, !dbg !15029
  %virt_addr = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %39, i32 0, i32 6, !dbg !15030
  %40 = load i8*, i8** %virt_addr, align 8, !dbg !15030
  %41 = load i8*, i8** %Buffer.addr, align 8, !dbg !15031
  %42 = load i16, i16* %Copycount, align 2, !dbg !15032
  call void @mgsl_load_pci_memory(i8* %40, i8* %41, i16 zeroext %42) #11, !dbg !15033
  %43 = load i16, i16* %Copycount, align 2, !dbg !15034
  %44 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %pBufEntry, align 8, !dbg !15035
  %count31 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %44, i32 0, i32 1, !dbg !15036
  store volatile i16 %43, i16* %count31, align 4, !dbg !15037
  %45 = load i16, i16* %Copycount, align 2, !dbg !15038
  %conv32 = zext i16 %45 to i32, !dbg !15038
  %46 = load i8*, i8** %Buffer.addr, align 8, !dbg !15039
  %idx.ext = sext i32 %conv32 to i64, !dbg !15039
  %add.ptr = getelementptr i8, i8* %46, i64 %idx.ext, !dbg !15039
  store i8* %add.ptr, i8** %Buffer.addr, align 8, !dbg !15039
  %47 = load i16, i16* %Copycount, align 2, !dbg !15040
  %conv33 = zext i16 %47 to i32, !dbg !15040
  %48 = load i32, i32* %BufferSize.addr, align 4, !dbg !15041
  %sub = sub i32 %48, %conv33, !dbg !15041
  store i32 %sub, i32* %BufferSize.addr, align 4, !dbg !15041
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15042
  %tx_dma_buffers_used = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %49, i32 0, i32 37, !dbg !15043
  %50 = load i32, i32* %tx_dma_buffers_used, align 8, !dbg !15044
  %inc34 = add i32 %50, 1, !dbg !15044
  store i32 %inc34, i32* %tx_dma_buffers_used, align 8, !dbg !15044
  br label %while.cond, !dbg !15006, !llvm.loop !15045

while.end:                                        ; preds = %while.cond
  %51 = load i32, i32* %i, align 4, !dbg !15047
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15048
  %current_tx_buffer35 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %52, i32 0, i32 41, !dbg !15049
  store i32 %51, i32* %current_tx_buffer35, align 4, !dbg !15050
  ret void, !dbg !15051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_load_pci_memory(i8* %TargetPtr, i8* %SourcePtr, i16 zeroext %count) #1 !dbg !15052 {
entry:
  %TargetPtr.addr = alloca i8*, align 8
  %SourcePtr.addr = alloca i8*, align 8
  %count.addr = alloca i16, align 2
  %Intervalcount = alloca i16, align 2
  %Index = alloca i16, align 2
  %Dummy = alloca i64, align 8
  store i8* %TargetPtr, i8** %TargetPtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %TargetPtr.addr, metadata !15055, metadata !DIExpression()), !dbg !15056
  store i8* %SourcePtr, i8** %SourcePtr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %SourcePtr.addr, metadata !15057, metadata !DIExpression()), !dbg !15058
  store i16 %count, i16* %count.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %count.addr, metadata !15059, metadata !DIExpression()), !dbg !15060
  call void @llvm.dbg.declare(metadata i16* %Intervalcount, metadata !15061, metadata !DIExpression()), !dbg !15062
  %0 = load i16, i16* %count.addr, align 2, !dbg !15063
  %conv = zext i16 %0 to i32, !dbg !15063
  %div = sdiv i32 %conv, 64, !dbg !15064
  %conv1 = trunc i32 %div to i16, !dbg !15063
  store i16 %conv1, i16* %Intervalcount, align 2, !dbg !15062
  call void @llvm.dbg.declare(metadata i16* %Index, metadata !15065, metadata !DIExpression()), !dbg !15066
  call void @llvm.dbg.declare(metadata i64* %Dummy, metadata !15067, metadata !DIExpression()), !dbg !15068
  store i16 0, i16* %Index, align 2, !dbg !15069
  br label %for.cond, !dbg !15071

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i16, i16* %Index, align 2, !dbg !15072
  %conv2 = zext i16 %1 to i32, !dbg !15072
  %2 = load i16, i16* %Intervalcount, align 2, !dbg !15074
  %conv3 = zext i16 %2 to i32, !dbg !15074
  %cmp = icmp slt i32 %conv2, %conv3, !dbg !15075
  br i1 %cmp, label %for.body, label %for.end, !dbg !15076

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %TargetPtr.addr, align 8, !dbg !15077
  %4 = load i8*, i8** %SourcePtr.addr, align 8, !dbg !15079
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 64, i1 false), !dbg !15080
  %5 = load i8*, i8** %TargetPtr.addr, align 8, !dbg !15081
  %6 = bitcast i8* %5 to i64*, !dbg !15082
  %7 = load volatile i64, i64* %6, align 8, !dbg !15082
  store i64 %7, i64* %Dummy, align 8, !dbg !15083
  %8 = load i8*, i8** %TargetPtr.addr, align 8, !dbg !15084
  %add.ptr = getelementptr i8, i8* %8, i64 64, !dbg !15084
  store i8* %add.ptr, i8** %TargetPtr.addr, align 8, !dbg !15084
  %9 = load i8*, i8** %SourcePtr.addr, align 8, !dbg !15085
  %add.ptr5 = getelementptr i8, i8* %9, i64 64, !dbg !15085
  store i8* %add.ptr5, i8** %SourcePtr.addr, align 8, !dbg !15085
  br label %for.inc, !dbg !15086

for.inc:                                          ; preds = %for.body
  %10 = load i16, i16* %Index, align 2, !dbg !15087
  %inc = add i16 %10, 1, !dbg !15087
  store i16 %inc, i16* %Index, align 2, !dbg !15087
  br label %for.cond, !dbg !15088, !llvm.loop !15089

for.end:                                          ; preds = %for.cond
  %11 = load i8*, i8** %TargetPtr.addr, align 8, !dbg !15091
  %12 = load i8*, i8** %SourcePtr.addr, align 8, !dbg !15092
  %13 = load i16, i16* %count.addr, align 2, !dbg !15093
  %conv6 = zext i16 %13 to i32, !dbg !15093
  %rem = srem i32 %conv6, 64, !dbg !15094
  %conv7 = sext i32 %rem to i64, !dbg !15093
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %12, i64 %conv7, i1 false), !dbg !15095
  ret void, !dbg !15096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #1 !dbg !15097 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !15100, metadata !DIExpression()), !dbg !15101
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !15102, metadata !DIExpression()), !dbg !15103
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !15104
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !15105
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !15106
  ret i1 %call, !dbg !15107
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_alloc_buffer_list_memory(%struct.mgsl_struct* %info) #1 !dbg !15108 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %i = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !15109, metadata !DIExpression()), !dbg !15110
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15111, metadata !DIExpression()), !dbg !15112
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15113
  %memory_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 76, !dbg !15114
  %1 = load i8*, i8** %memory_base, align 8, !dbg !15114
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15115
  %last_mem_alloc = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 75, !dbg !15116
  %3 = load i32, i32* %last_mem_alloc, align 4, !dbg !15116
  %idx.ext = zext i32 %3 to i64, !dbg !15117
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !15117
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15118
  %buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 30, !dbg !15119
  store i8* %add.ptr, i8** %buffer_list, align 8, !dbg !15120
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15121
  %last_mem_alloc1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 75, !dbg !15122
  %6 = load i32, i32* %last_mem_alloc1, align 4, !dbg !15122
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15123
  %buffer_list_phys = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 31, !dbg !15124
  store i32 %6, i32* %buffer_list_phys, align 8, !dbg !15125
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15126
  %last_mem_alloc2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 75, !dbg !15127
  %9 = load i32, i32* %last_mem_alloc2, align 4, !dbg !15128
  %add = add i32 %9, 4096, !dbg !15128
  store i32 %add, i32* %last_mem_alloc2, align 4, !dbg !15128
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15129
  %buffer_list3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 30, !dbg !15130
  %11 = load i8*, i8** %buffer_list3, align 8, !dbg !15130
  call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 4096, i1 false), !dbg !15131
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15132
  %buffer_list4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 30, !dbg !15133
  %13 = load i8*, i8** %buffer_list4, align 8, !dbg !15133
  %14 = bitcast i8* %13 to %struct._DMABUFFERENTRY*, !dbg !15134
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15135
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 34, !dbg !15136
  store %struct._DMABUFFERENTRY* %14, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !15137
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15138
  %buffer_list5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 30, !dbg !15139
  %17 = load i8*, i8** %buffer_list5, align 8, !dbg !15139
  %18 = bitcast i8* %17 to %struct._DMABUFFERENTRY*, !dbg !15140
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15141
  %tx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 39, !dbg !15142
  store %struct._DMABUFFERENTRY* %18, %struct._DMABUFFERENTRY** %tx_buffer_list, align 8, !dbg !15143
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15144
  %rx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 33, !dbg !15145
  %21 = load i32, i32* %rx_buffer_count, align 8, !dbg !15145
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15146
  %tx_buffer_list6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 39, !dbg !15147
  %23 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list6, align 8, !dbg !15148
  %idx.ext7 = zext i32 %21 to i64, !dbg !15148
  %add.ptr8 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %23, i64 %idx.ext7, !dbg !15148
  store %struct._DMABUFFERENTRY* %add.ptr8, %struct._DMABUFFERENTRY** %tx_buffer_list6, align 8, !dbg !15148
  store i32 0, i32* %i, align 4, !dbg !15149
  br label %for.cond, !dbg !15151

for.cond:                                         ; preds = %for.inc, %entry
  %24 = load i32, i32* %i, align 4, !dbg !15152
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15154
  %rx_buffer_count9 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 33, !dbg !15155
  %26 = load i32, i32* %rx_buffer_count9, align 8, !dbg !15155
  %cmp = icmp ult i32 %24, %26, !dbg !15156
  br i1 %cmp, label %for.body, label %for.end, !dbg !15157

for.body:                                         ; preds = %for.cond
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15158
  %buffer_list_phys10 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 31, !dbg !15160
  %28 = load i32, i32* %buffer_list_phys10, align 8, !dbg !15160
  %conv = zext i32 %28 to i64, !dbg !15158
  %29 = load i32, i32* %i, align 4, !dbg !15161
  %conv11 = zext i32 %29 to i64, !dbg !15161
  %mul = mul i64 %conv11, 40, !dbg !15162
  %add12 = add i64 %conv, %mul, !dbg !15163
  %conv13 = trunc i64 %add12 to i32, !dbg !15158
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15164
  %rx_buffer_list14 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 34, !dbg !15165
  %31 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list14, align 8, !dbg !15165
  %32 = load i32, i32* %i, align 4, !dbg !15166
  %idxprom = zext i32 %32 to i64, !dbg !15164
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %31, i64 %idxprom, !dbg !15164
  %phys_entry = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 7, !dbg !15167
  store i32 %conv13, i32* %phys_entry, align 8, !dbg !15168
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15169
  %buffer_list_phys15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %33, i32 0, i32 31, !dbg !15170
  %34 = load i32, i32* %buffer_list_phys15, align 8, !dbg !15170
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15171
  %rx_buffer_list16 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 34, !dbg !15172
  %36 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list16, align 8, !dbg !15172
  %37 = load i32, i32* %i, align 4, !dbg !15173
  %idxprom17 = zext i32 %37 to i64, !dbg !15171
  %arrayidx18 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %36, i64 %idxprom17, !dbg !15171
  %link = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx18, i32 0, i32 5, !dbg !15174
  store i32 %34, i32* %link, align 4, !dbg !15175
  %38 = load i32, i32* %i, align 4, !dbg !15176
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15178
  %rx_buffer_count19 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %39, i32 0, i32 33, !dbg !15179
  %40 = load i32, i32* %rx_buffer_count19, align 8, !dbg !15179
  %sub = sub i32 %40, 1, !dbg !15180
  %cmp20 = icmp ult i32 %38, %sub, !dbg !15181
  br i1 %cmp20, label %if.then, label %if.end, !dbg !15182

if.then:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !15183
  %add22 = add i32 %41, 1, !dbg !15184
  %conv23 = zext i32 %add22 to i64, !dbg !15185
  %mul24 = mul i64 %conv23, 40, !dbg !15186
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15187
  %rx_buffer_list25 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 34, !dbg !15188
  %43 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list25, align 8, !dbg !15188
  %44 = load i32, i32* %i, align 4, !dbg !15189
  %idxprom26 = zext i32 %44 to i64, !dbg !15187
  %arrayidx27 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %43, i64 %idxprom26, !dbg !15187
  %link28 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx27, i32 0, i32 5, !dbg !15190
  %45 = load i32, i32* %link28, align 4, !dbg !15191
  %conv29 = zext i32 %45 to i64, !dbg !15191
  %add30 = add i64 %conv29, %mul24, !dbg !15191
  %conv31 = trunc i64 %add30 to i32, !dbg !15191
  store i32 %conv31, i32* %link28, align 4, !dbg !15191
  br label %if.end, !dbg !15187

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !15192

for.inc:                                          ; preds = %if.end
  %46 = load i32, i32* %i, align 4, !dbg !15193
  %inc = add i32 %46, 1, !dbg !15193
  store i32 %inc, i32* %i, align 4, !dbg !15193
  br label %for.cond, !dbg !15194, !llvm.loop !15195

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !15197
  br label %for.cond32, !dbg !15199

for.cond32:                                       ; preds = %for.inc75, %for.end
  %47 = load i32, i32* %i, align 4, !dbg !15200
  %48 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15202
  %tx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %48, i32 0, i32 38, !dbg !15203
  %49 = load i32, i32* %tx_buffer_count, align 4, !dbg !15203
  %cmp33 = icmp ult i32 %47, %49, !dbg !15204
  br i1 %cmp33, label %for.body35, label %for.end77, !dbg !15205

for.body35:                                       ; preds = %for.cond32
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15206
  %buffer_list_phys36 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %50, i32 0, i32 31, !dbg !15208
  %51 = load i32, i32* %buffer_list_phys36, align 8, !dbg !15208
  %conv37 = zext i32 %51 to i64, !dbg !15206
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15209
  %rx_buffer_count38 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %52, i32 0, i32 33, !dbg !15210
  %53 = load i32, i32* %rx_buffer_count38, align 8, !dbg !15210
  %54 = load i32, i32* %i, align 4, !dbg !15211
  %add39 = add i32 %53, %54, !dbg !15212
  %conv40 = zext i32 %add39 to i64, !dbg !15213
  %mul41 = mul i64 %conv40, 40, !dbg !15214
  %add42 = add i64 %conv37, %mul41, !dbg !15215
  %conv43 = trunc i64 %add42 to i32, !dbg !15206
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15216
  %tx_buffer_list44 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %55, i32 0, i32 39, !dbg !15217
  %56 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list44, align 8, !dbg !15217
  %57 = load i32, i32* %i, align 4, !dbg !15218
  %idxprom45 = zext i32 %57 to i64, !dbg !15216
  %arrayidx46 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %56, i64 %idxprom45, !dbg !15216
  %phys_entry47 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx46, i32 0, i32 7, !dbg !15219
  store i32 %conv43, i32* %phys_entry47, align 8, !dbg !15220
  %58 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15221
  %buffer_list_phys48 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %58, i32 0, i32 31, !dbg !15222
  %59 = load i32, i32* %buffer_list_phys48, align 8, !dbg !15222
  %conv49 = zext i32 %59 to i64, !dbg !15221
  %60 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15223
  %rx_buffer_count50 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %60, i32 0, i32 33, !dbg !15224
  %61 = load i32, i32* %rx_buffer_count50, align 8, !dbg !15224
  %conv51 = zext i32 %61 to i64, !dbg !15223
  %mul52 = mul i64 %conv51, 40, !dbg !15225
  %add53 = add i64 %conv49, %mul52, !dbg !15226
  %conv54 = trunc i64 %add53 to i32, !dbg !15221
  %62 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15227
  %tx_buffer_list55 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %62, i32 0, i32 39, !dbg !15228
  %63 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list55, align 8, !dbg !15228
  %64 = load i32, i32* %i, align 4, !dbg !15229
  %idxprom56 = zext i32 %64 to i64, !dbg !15227
  %arrayidx57 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %63, i64 %idxprom56, !dbg !15227
  %link58 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx57, i32 0, i32 5, !dbg !15230
  store i32 %conv54, i32* %link58, align 4, !dbg !15231
  %65 = load i32, i32* %i, align 4, !dbg !15232
  %66 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15234
  %tx_buffer_count59 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %66, i32 0, i32 38, !dbg !15235
  %67 = load i32, i32* %tx_buffer_count59, align 4, !dbg !15235
  %sub60 = sub i32 %67, 1, !dbg !15236
  %cmp61 = icmp ult i32 %65, %sub60, !dbg !15237
  br i1 %cmp61, label %if.then63, label %if.end74, !dbg !15238

if.then63:                                        ; preds = %for.body35
  %68 = load i32, i32* %i, align 4, !dbg !15239
  %add64 = add i32 %68, 1, !dbg !15240
  %conv65 = zext i32 %add64 to i64, !dbg !15241
  %mul66 = mul i64 %conv65, 40, !dbg !15242
  %69 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15243
  %tx_buffer_list67 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %69, i32 0, i32 39, !dbg !15244
  %70 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list67, align 8, !dbg !15244
  %71 = load i32, i32* %i, align 4, !dbg !15245
  %idxprom68 = zext i32 %71 to i64, !dbg !15243
  %arrayidx69 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %70, i64 %idxprom68, !dbg !15243
  %link70 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx69, i32 0, i32 5, !dbg !15246
  %72 = load i32, i32* %link70, align 4, !dbg !15247
  %conv71 = zext i32 %72 to i64, !dbg !15247
  %add72 = add i64 %conv71, %mul66, !dbg !15247
  %conv73 = trunc i64 %add72 to i32, !dbg !15247
  store i32 %conv73, i32* %link70, align 4, !dbg !15247
  br label %if.end74, !dbg !15243

if.end74:                                         ; preds = %if.then63, %for.body35
  br label %for.inc75, !dbg !15248

for.inc75:                                        ; preds = %if.end74
  %73 = load i32, i32* %i, align 4, !dbg !15249
  %inc76 = add i32 %73, 1, !dbg !15249
  store i32 %inc76, i32* %i, align 4, !dbg !15249
  br label %for.cond32, !dbg !15250, !llvm.loop !15251

for.end77:                                        ; preds = %for.cond32
  ret i32 0, !dbg !15253
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_alloc_frame_memory(%struct.mgsl_struct* %info, %struct._DMABUFFERENTRY* %BufferList, i32 %Buffercount) #1 !dbg !15254 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %BufferList.addr = alloca %struct._DMABUFFERENTRY*, align 8
  %Buffercount.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !15257, metadata !DIExpression()), !dbg !15258
  store %struct._DMABUFFERENTRY* %BufferList, %struct._DMABUFFERENTRY** %BufferList.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DMABUFFERENTRY** %BufferList.addr, metadata !15259, metadata !DIExpression()), !dbg !15260
  store i32 %Buffercount, i32* %Buffercount.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Buffercount.addr, metadata !15261, metadata !DIExpression()), !dbg !15262
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15263, metadata !DIExpression()), !dbg !15264
  store i32 0, i32* %i, align 4, !dbg !15265
  br label %for.cond, !dbg !15267

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15268
  %1 = load i32, i32* %Buffercount.addr, align 4, !dbg !15270
  %cmp = icmp slt i32 %0, %1, !dbg !15271
  br i1 %cmp, label %for.body, label %for.end, !dbg !15272

for.body:                                         ; preds = %for.cond
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15273
  %memory_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 76, !dbg !15275
  %3 = load i8*, i8** %memory_base, align 8, !dbg !15275
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15276
  %last_mem_alloc = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 75, !dbg !15277
  %5 = load i32, i32* %last_mem_alloc, align 4, !dbg !15277
  %idx.ext = zext i32 %5 to i64, !dbg !15278
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !15278
  %6 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %BufferList.addr, align 8, !dbg !15279
  %7 = load i32, i32* %i, align 4, !dbg !15280
  %idxprom = sext i32 %7 to i64, !dbg !15279
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %6, i64 %idxprom, !dbg !15279
  %virt_addr = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 6, !dbg !15281
  store i8* %add.ptr, i8** %virt_addr, align 8, !dbg !15282
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15283
  %last_mem_alloc1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 75, !dbg !15284
  %9 = load i32, i32* %last_mem_alloc1, align 4, !dbg !15284
  %10 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %BufferList.addr, align 8, !dbg !15285
  %11 = load i32, i32* %i, align 4, !dbg !15286
  %idxprom2 = sext i32 %11 to i64, !dbg !15285
  %arrayidx3 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %10, i64 %idxprom2, !dbg !15285
  %phys_addr = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx3, i32 0, i32 0, !dbg !15287
  store i32 %9, i32* %phys_addr, align 8, !dbg !15288
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15289
  %last_mem_alloc4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 75, !dbg !15290
  %13 = load i32, i32* %last_mem_alloc4, align 4, !dbg !15291
  %add = add i32 %13, 4096, !dbg !15291
  store i32 %add, i32* %last_mem_alloc4, align 4, !dbg !15291
  br label %for.inc, !dbg !15292

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !15293
  %inc = add i32 %14, 1, !dbg !15293
  store i32 %inc, i32* %i, align 4, !dbg !15293
  br label %for.cond, !dbg !15294, !llvm.loop !15295

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !15297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_alloc_intermediate_rxbuffer_memory(%struct.mgsl_struct* %info) #1 !dbg !15298 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8878, metadata !DIExpression()), !dbg !15299
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8888, metadata !DIExpression()), !dbg !15302
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8890, metadata !DIExpression()), !dbg !15303
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8892, metadata !DIExpression()), !dbg !15304
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8894, metadata !DIExpression()), !dbg !15305
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8900, metadata !DIExpression()), !dbg !15307
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8906, metadata !DIExpression()), !dbg !15309
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8915, metadata !DIExpression()), !dbg !15312
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8917, metadata !DIExpression()), !dbg !15313
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8919, metadata !DIExpression()), !dbg !15314
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8921, metadata !DIExpression()), !dbg !15315
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8923, metadata !DIExpression()), !dbg !15316
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8925, metadata !DIExpression()), !dbg !15317
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8927, metadata !DIExpression()), !dbg !15318
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8929, metadata !DIExpression()), !dbg !15319
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !15320, metadata !DIExpression()), !dbg !15321
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15322
  %max_frame_size = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 21, !dbg !15323
  %1 = load i32, i32* %max_frame_size, align 8, !dbg !15323
  %conv = zext i32 %1 to i64, !dbg !15322
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 3265, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !15324
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !15325
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !15326

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !15327
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !15328
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15329

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !15330
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !15331
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !15332
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !15333
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !15316
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !15334
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !15335
  %10 = load i32, i32* %order.i.i, align 4, !dbg !15336
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !15337
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !15338
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !15339
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !15340
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !15340
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !15340
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !15340
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !15340
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !15341
  br label %kmalloc.exit, !dbg !15341

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !15342
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15343
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !15343
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !15344

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !15345
  br label %kmalloc_index.exit.i, !dbg !15345

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15346
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !15347
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !15348

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15349
  br label %kmalloc_index.exit.i, !dbg !15349

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15350
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !15351
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !15352

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15353
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !15354
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !15355

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !15356
  br label %kmalloc_index.exit.i, !dbg !15356

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15357
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !15358
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !15359

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15360
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !15361
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !15362

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !15363
  br label %kmalloc_index.exit.i, !dbg !15363

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15364
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !15365
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !15366

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15367
  br label %kmalloc_index.exit.i, !dbg !15367

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15368
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !15369
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !15370

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !15371
  br label %kmalloc_index.exit.i, !dbg !15371

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15372
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !15373
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !15374

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !15375
  br label %kmalloc_index.exit.i, !dbg !15375

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15376
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !15377
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !15378

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !15379
  br label %kmalloc_index.exit.i, !dbg !15379

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15380
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !15381
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !15382

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !15383
  br label %kmalloc_index.exit.i, !dbg !15383

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15384
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !15385
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !15386

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !15387
  br label %kmalloc_index.exit.i, !dbg !15387

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15388
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !15389
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !15390

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !15391
  br label %kmalloc_index.exit.i, !dbg !15391

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15392
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !15393
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !15394

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !15395
  br label %kmalloc_index.exit.i, !dbg !15395

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15396
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !15397
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !15398

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !15399
  br label %kmalloc_index.exit.i, !dbg !15399

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15400
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !15401
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !15402

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !15403
  br label %kmalloc_index.exit.i, !dbg !15403

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15404
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !15405
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !15406

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !15407
  br label %kmalloc_index.exit.i, !dbg !15407

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15408
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !15409
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !15410

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !15411
  br label %kmalloc_index.exit.i, !dbg !15411

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15412
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !15413
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !15414

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !15415
  br label %kmalloc_index.exit.i, !dbg !15415

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15416
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !15417
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !15418

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !15419
  br label %kmalloc_index.exit.i, !dbg !15419

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15420
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !15421
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !15422

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !15423
  br label %kmalloc_index.exit.i, !dbg !15423

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15424
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !15425
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !15426

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !15427
  br label %kmalloc_index.exit.i, !dbg !15427

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15428
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !15429
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !15430

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !15431
  br label %kmalloc_index.exit.i, !dbg !15431

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15432
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !15433
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !15434

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !15435
  br label %kmalloc_index.exit.i, !dbg !15435

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15436
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !15437
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !15438

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !15439
  br label %kmalloc_index.exit.i, !dbg !15439

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15440
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !15441
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !15442

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !15443
  br label %kmalloc_index.exit.i, !dbg !15443

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15444
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !15445
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !15446

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !15447
  br label %kmalloc_index.exit.i, !dbg !15447

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15448
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !15449
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !15450

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !15451
  br label %kmalloc_index.exit.i, !dbg !15451

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15452
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !15453
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !15454

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !15455
  br label %kmalloc_index.exit.i, !dbg !15455

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15456
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !15457
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !15458

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !15459
  br label %kmalloc_index.exit.i, !dbg !15459

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !15460, !srcloc !9105
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 165) #10, !dbg !15461, !srcloc !9109
  unreachable, !dbg !15462

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !15463
  store i32 %45, i32* %index.i, align 4, !dbg !15464
  %46 = load i32, i32* %index.i, align 4, !dbg !15465
  %tobool.i = icmp ne i32 %46, 0, !dbg !15465
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !15466

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !15467
  br label %kmalloc.exit, !dbg !15467

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !15468
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15469
  %and.i.i = and i32 %48, 17, !dbg !15469
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !15469
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !15469
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !15469
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !15469
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !15470

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !15471
  br label %kmalloc_type.exit.i, !dbg !15471

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15472
  %and2.i.i = and i32 %49, 1, !dbg !15473
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !15472
  %50 = zext i1 %tobool3.i.i to i64, !dbg !15472
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !15472
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !15474
  br label %kmalloc_type.exit.i, !dbg !15474

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !15475
  %idxprom.i = zext i32 %51 to i64, !dbg !15476
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !15476
  %52 = load i32, i32* %index.i, align 4, !dbg !15477
  %idxprom6.i = zext i32 %52 to i64, !dbg !15476
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !15476
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !15476
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !15478
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !15479
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15480
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15481
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !15482
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !15482
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !15482
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !15482
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !15482
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !15304
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15483
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !15484
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !15485
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15486
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !15487
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !15488
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !15489
  store i8* %62, i8** %retval.i, align 8, !dbg !15490
  br label %kmalloc.exit, !dbg !15490

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !15491
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !15492
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !15493
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !15493
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !15493
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !15493
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !15493
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !15494
  br label %kmalloc.exit, !dbg !15494

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !15495
  %66 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15496
  %intermediate_rxbuffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %66, i32 0, i32 42, !dbg !15497
  store i8* %65, i8** %intermediate_rxbuffer, align 8, !dbg !15498
  %67 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15499
  %intermediate_rxbuffer1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %67, i32 0, i32 42, !dbg !15501
  %68 = load i8*, i8** %intermediate_rxbuffer1, align 8, !dbg !15501
  %cmp = icmp eq i8* %68, null, !dbg !15502
  br i1 %cmp, label %if.then, label %if.end, !dbg !15503

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !15504
  br label %return, !dbg !15504

if.end:                                           ; preds = %kmalloc.exit
  %69 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15505
  %max_frame_size3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %69, i32 0, i32 21, !dbg !15506
  %70 = load i32, i32* %max_frame_size3, align 8, !dbg !15506
  %conv4 = zext i32 %70 to i64, !dbg !15505
  %call5 = call i8* @kzalloc(i64 %conv4, i32 3264) #11, !dbg !15507
  %71 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15508
  %flag_buf = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %71, i32 0, i32 84, !dbg !15509
  store i8* %call5, i8** %flag_buf, align 8, !dbg !15510
  %72 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15511
  %flag_buf6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %72, i32 0, i32 84, !dbg !15513
  %73 = load i8*, i8** %flag_buf6, align 8, !dbg !15513
  %tobool = icmp ne i8* %73, null, !dbg !15511
  br i1 %tobool, label %if.end10, label %if.then7, !dbg !15514

if.then7:                                         ; preds = %if.end
  %74 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15515
  %intermediate_rxbuffer8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %74, i32 0, i32 42, !dbg !15517
  %75 = load i8*, i8** %intermediate_rxbuffer8, align 8, !dbg !15517
  call void @kfree(i8* %75) #11, !dbg !15518
  %76 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15519
  %intermediate_rxbuffer9 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %76, i32 0, i32 42, !dbg !15520
  store i8* null, i8** %intermediate_rxbuffer9, align 8, !dbg !15521
  store i32 -12, i32* %retval, align 4, !dbg !15522
  br label %return, !dbg !15522

if.end10:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15523
  br label %return, !dbg !15523

return:                                           ; preds = %if.end10, %if.then7, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !15524
  ret i32 %77, !dbg !15524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_alloc_intermediate_txbuffer_memory(%struct.mgsl_struct* %info) #1 !dbg !15525 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8878, metadata !DIExpression()), !dbg !15526
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8888, metadata !DIExpression()), !dbg !15532
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8890, metadata !DIExpression()), !dbg !15533
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8892, metadata !DIExpression()), !dbg !15534
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8894, metadata !DIExpression()), !dbg !15535
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8900, metadata !DIExpression()), !dbg !15537
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8906, metadata !DIExpression()), !dbg !15539
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8915, metadata !DIExpression()), !dbg !15542
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8917, metadata !DIExpression()), !dbg !15543
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8919, metadata !DIExpression()), !dbg !15544
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8921, metadata !DIExpression()), !dbg !15545
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8923, metadata !DIExpression()), !dbg !15546
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8925, metadata !DIExpression()), !dbg !15547
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8927, metadata !DIExpression()), !dbg !15548
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8929, metadata !DIExpression()), !dbg !15549
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %i = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !15550, metadata !DIExpression()), !dbg !15551
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15552, metadata !DIExpression()), !dbg !15553
  %0 = load i32, i32* @debug_level, align 4, !dbg !15554
  %cmp = icmp sge i32 %0, 3, !dbg !15556
  br i1 %cmp, label %if.then, label %if.end, !dbg !15557

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15558
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !15559
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !15558
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15560
  %num_tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 43, !dbg !15561
  %3 = load i32, i32* %num_tx_holding_buffers, align 8, !dbg !15561
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.78, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3838, i32 %3) #12, !dbg !15562
  br label %if.end, !dbg !15562

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15563
  %tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 47, !dbg !15564
  %arraydecay1 = getelementptr inbounds [5 x %struct.tx_holding_buffer], [5 x %struct.tx_holding_buffer]* %tx_holding_buffers, i64 0, i64 0, !dbg !15565
  %5 = bitcast %struct.tx_holding_buffer* %arraydecay1 to i8*, !dbg !15565
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 80, i1 false), !dbg !15565
  store i32 0, i32* %i, align 4, !dbg !15566
  br label %for.cond, !dbg !15567

for.cond:                                         ; preds = %for.inc27, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !15568
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15569
  %num_tx_holding_buffers2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 43, !dbg !15570
  %8 = load i32, i32* %num_tx_holding_buffers2, align 8, !dbg !15570
  %cmp3 = icmp slt i32 %6, %8, !dbg !15571
  br i1 %cmp3, label %for.body, label %for.end28, !dbg !15572

for.body:                                         ; preds = %for.cond
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15573
  %max_frame_size = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 21, !dbg !15574
  %10 = load i32, i32* %max_frame_size, align 8, !dbg !15574
  %conv = zext i32 %10 to i64, !dbg !15573
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %11 = load i64, i64* %size.addr.i, align 8, !dbg !15575
  %12 = call i1 @llvm.is.constant.i64(i64 %11) #10, !dbg !15576
  br i1 %12, label %if.then.i, label %if.end9.i, !dbg !15577

if.then.i:                                        ; preds = %for.body
  %13 = load i64, i64* %size.addr.i, align 8, !dbg !15578
  %cmp.i = icmp ugt i64 %13, 8192, !dbg !15579
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15580

if.then1.i:                                       ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !15581
  %15 = load i32, i32* %flags.addr.i, align 4, !dbg !15582
  store i64 %14, i64* %size.addr.i.i, align 8
  store i32 %15, i32* %flags.addr.i.i, align 4
  %16 = load i64, i64* %size.addr.i.i, align 8, !dbg !15583
  %call.i.i = call i32 @get_order(i64 %16) #13, !dbg !15584
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !15546
  %17 = load i64, i64* %size.addr.i.i, align 8, !dbg !15585
  %18 = load i32, i32* %flags.addr.i.i, align 4, !dbg !15586
  %19 = load i32, i32* %order.i.i, align 4, !dbg !15587
  store i64 %17, i64* %size.addr.i.i.i, align 8
  store i32 %18, i32* %flags.addr.i.i.i, align 4
  store i32 %19, i32* %order.addr.i.i.i, align 4
  %20 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !15588
  %21 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !15589
  %22 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !15590
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %20, i32 %21, i32 %22) #14, !dbg !15591
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !15591
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !15591
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !15591
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !15591
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !15592
  br label %kmalloc.exit, !dbg !15592

if.end.i:                                         ; preds = %if.then.i
  %23 = load i64, i64* %size.addr.i, align 8, !dbg !15593
  store i64 %23, i64* %size.addr.i11.i, align 8
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15594
  %tobool.i.i = icmp ne i64 %24, 0, !dbg !15594
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !15595

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !15596
  br label %kmalloc_index.exit.i, !dbg !15596

if.end.i.i:                                       ; preds = %if.end.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15597
  %cmp.i.i = icmp ule i64 %25, 8, !dbg !15598
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !15599

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15600
  br label %kmalloc_index.exit.i, !dbg !15600

if.end2.i.i:                                      ; preds = %if.end.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15601
  %cmp3.i.i = icmp ugt i64 %26, 64, !dbg !15602
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !15603

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15604
  %cmp4.i.i = icmp ule i64 %27, 96, !dbg !15605
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !15606

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !15607
  br label %kmalloc_index.exit.i, !dbg !15607

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15608
  %cmp7.i.i = icmp ugt i64 %28, 128, !dbg !15609
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !15610

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15611
  %cmp9.i.i = icmp ule i64 %29, 192, !dbg !15612
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !15613

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !15614
  br label %kmalloc_index.exit.i, !dbg !15614

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15615
  %cmp12.i.i = icmp ule i64 %30, 8, !dbg !15616
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !15617

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15618
  br label %kmalloc_index.exit.i, !dbg !15618

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15619
  %cmp15.i.i = icmp ule i64 %31, 16, !dbg !15620
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !15621

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !15622
  br label %kmalloc_index.exit.i, !dbg !15622

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15623
  %cmp18.i.i = icmp ule i64 %32, 32, !dbg !15624
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !15625

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !15626
  br label %kmalloc_index.exit.i, !dbg !15626

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15627
  %cmp21.i.i = icmp ule i64 %33, 64, !dbg !15628
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !15629

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !15630
  br label %kmalloc_index.exit.i, !dbg !15630

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15631
  %cmp24.i.i = icmp ule i64 %34, 128, !dbg !15632
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !15633

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !15634
  br label %kmalloc_index.exit.i, !dbg !15634

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15635
  %cmp27.i.i = icmp ule i64 %35, 256, !dbg !15636
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !15637

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !15638
  br label %kmalloc_index.exit.i, !dbg !15638

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15639
  %cmp30.i.i = icmp ule i64 %36, 512, !dbg !15640
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !15641

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !15642
  br label %kmalloc_index.exit.i, !dbg !15642

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15643
  %cmp33.i.i = icmp ule i64 %37, 1024, !dbg !15644
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !15645

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !15646
  br label %kmalloc_index.exit.i, !dbg !15646

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15647
  %cmp36.i.i = icmp ule i64 %38, 2048, !dbg !15648
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !15649

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !15650
  br label %kmalloc_index.exit.i, !dbg !15650

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15651
  %cmp39.i.i = icmp ule i64 %39, 4096, !dbg !15652
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !15653

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !15654
  br label %kmalloc_index.exit.i, !dbg !15654

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15655
  %cmp42.i.i = icmp ule i64 %40, 8192, !dbg !15656
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !15657

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !15658
  br label %kmalloc_index.exit.i, !dbg !15658

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15659
  %cmp45.i.i = icmp ule i64 %41, 16384, !dbg !15660
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !15661

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !15662
  br label %kmalloc_index.exit.i, !dbg !15662

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15663
  %cmp48.i.i = icmp ule i64 %42, 32768, !dbg !15664
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !15665

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !15666
  br label %kmalloc_index.exit.i, !dbg !15666

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15667
  %cmp51.i.i = icmp ule i64 %43, 65536, !dbg !15668
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !15669

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !15670
  br label %kmalloc_index.exit.i, !dbg !15670

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15671
  %cmp54.i.i = icmp ule i64 %44, 131072, !dbg !15672
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !15673

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !15674
  br label %kmalloc_index.exit.i, !dbg !15674

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15675
  %cmp57.i.i = icmp ule i64 %45, 262144, !dbg !15676
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !15677

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !15678
  br label %kmalloc_index.exit.i, !dbg !15678

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15679
  %cmp60.i.i = icmp ule i64 %46, 524288, !dbg !15680
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !15681

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !15682
  br label %kmalloc_index.exit.i, !dbg !15682

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15683
  %cmp63.i.i = icmp ule i64 %47, 1048576, !dbg !15684
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !15685

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !15686
  br label %kmalloc_index.exit.i, !dbg !15686

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15687
  %cmp66.i.i = icmp ule i64 %48, 2097152, !dbg !15688
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !15689

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !15690
  br label %kmalloc_index.exit.i, !dbg !15690

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15691
  %cmp69.i.i = icmp ule i64 %49, 4194304, !dbg !15692
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !15693

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !15694
  br label %kmalloc_index.exit.i, !dbg !15694

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15695
  %cmp72.i.i = icmp ule i64 %50, 8388608, !dbg !15696
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !15697

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !15698
  br label %kmalloc_index.exit.i, !dbg !15698

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15699
  %cmp75.i.i = icmp ule i64 %51, 16777216, !dbg !15700
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !15701

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !15702
  br label %kmalloc_index.exit.i, !dbg !15702

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15703
  %cmp78.i.i = icmp ule i64 %52, 33554432, !dbg !15704
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !15705

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !15706
  br label %kmalloc_index.exit.i, !dbg !15706

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15707
  %cmp81.i.i = icmp ule i64 %53, 67108864, !dbg !15708
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !15709

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !15710
  br label %kmalloc_index.exit.i, !dbg !15710

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !15711, !srcloc !9105
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 165) #10, !dbg !15712, !srcloc !9109
  unreachable, !dbg !15713

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %54 = load i32, i32* %retval.i.i, align 4, !dbg !15714
  store i32 %54, i32* %index.i, align 4, !dbg !15715
  %55 = load i32, i32* %index.i, align 4, !dbg !15716
  %tobool.i = icmp ne i32 %55, 0, !dbg !15716
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !15717

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !15718
  br label %kmalloc.exit, !dbg !15718

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %56 = load i32, i32* %flags.addr.i, align 4, !dbg !15719
  store i32 %56, i32* %flags.addr.i13.i, align 4
  %57 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15720
  %and.i.i = and i32 %57, 17, !dbg !15720
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !15720
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !15720
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !15720
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !15720
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !15721

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !15722
  br label %kmalloc_type.exit.i, !dbg !15722

if.end.i16.i:                                     ; preds = %if.end4.i
  %58 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15723
  %and2.i.i = and i32 %58, 1, !dbg !15724
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !15723
  %59 = zext i1 %tobool3.i.i to i64, !dbg !15723
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !15723
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !15725
  br label %kmalloc_type.exit.i, !dbg !15725

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %60 = load i32, i32* %retval.i12.i, align 4, !dbg !15726
  %idxprom.i = zext i32 %60 to i64, !dbg !15727
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !15727
  %61 = load i32, i32* %index.i, align 4, !dbg !15728
  %idxprom6.i = zext i32 %61 to i64, !dbg !15727
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !15727
  %62 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !15727
  %63 = load i32, i32* %flags.addr.i, align 4, !dbg !15729
  %64 = load i64, i64* %size.addr.i, align 8, !dbg !15730
  store %struct.kmem_cache* %62, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %63, i32* %flags.addr.i17.i, align 4
  store i64 %64, i64* %size.addr.i18.i, align 8
  %65 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15731
  %66 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15732
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %65, i32 %66) #14, !dbg !15733
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !15733
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !15733
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !15733
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !15733
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !15534
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15734
  %68 = load i8*, i8** %ret.i.i, align 8, !dbg !15735
  %69 = load i64, i64* %size.addr.i18.i, align 8, !dbg !15736
  %70 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15737
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %67, i8* %68, i64 %69, i32 %70) #14, !dbg !15738
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !15739
  %71 = load i8*, i8** %ret.i.i, align 8, !dbg !15740
  store i8* %71, i8** %retval.i, align 8, !dbg !15741
  br label %kmalloc.exit, !dbg !15741

if.end9.i:                                        ; preds = %for.body
  %72 = load i64, i64* %size.addr.i, align 8, !dbg !15742
  %73 = load i32, i32* %flags.addr.i, align 4, !dbg !15743
  %call10.i = call noalias i8* @__kmalloc(i64 %72, i32 %73) #14, !dbg !15744
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !15744
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !15744
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !15744
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !15744
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !15745
  br label %kmalloc.exit, !dbg !15745

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %74 = load i8*, i8** %retval.i, align 8, !dbg !15746
  %75 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15747
  %tx_holding_buffers5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %75, i32 0, i32 47, !dbg !15748
  %76 = load i32, i32* %i, align 4, !dbg !15749
  %idxprom = sext i32 %76 to i64, !dbg !15747
  %arrayidx = getelementptr [5 x %struct.tx_holding_buffer], [5 x %struct.tx_holding_buffer]* %tx_holding_buffers5, i64 0, i64 %idxprom, !dbg !15747
  %buffer = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %arrayidx, i32 0, i32 1, !dbg !15750
  store i8* %74, i8** %buffer, align 8, !dbg !15751
  %77 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15752
  %tx_holding_buffers6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %77, i32 0, i32 47, !dbg !15754
  %78 = load i32, i32* %i, align 4, !dbg !15755
  %idxprom7 = sext i32 %78 to i64, !dbg !15752
  %arrayidx8 = getelementptr [5 x %struct.tx_holding_buffer], [5 x %struct.tx_holding_buffer]* %tx_holding_buffers6, i64 0, i64 %idxprom7, !dbg !15752
  %buffer9 = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %arrayidx8, i32 0, i32 1, !dbg !15756
  %79 = load i8*, i8** %buffer9, align 8, !dbg !15756
  %cmp10 = icmp eq i8* %79, null, !dbg !15757
  br i1 %cmp10, label %if.then12, label %if.end26, !dbg !15758

if.then12:                                        ; preds = %kmalloc.exit
  %80 = load i32, i32* %i, align 4, !dbg !15759
  %dec = add i32 %80, -1, !dbg !15759
  store i32 %dec, i32* %i, align 4, !dbg !15759
  br label %for.cond13, !dbg !15759

for.cond13:                                       ; preds = %for.inc, %if.then12
  %81 = load i32, i32* %i, align 4, !dbg !15762
  %cmp14 = icmp sge i32 %81, 0, !dbg !15764
  br i1 %cmp14, label %for.body16, label %for.end, !dbg !15765

for.body16:                                       ; preds = %for.cond13
  %82 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15766
  %tx_holding_buffers17 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %82, i32 0, i32 47, !dbg !15768
  %83 = load i32, i32* %i, align 4, !dbg !15769
  %idxprom18 = sext i32 %83 to i64, !dbg !15766
  %arrayidx19 = getelementptr [5 x %struct.tx_holding_buffer], [5 x %struct.tx_holding_buffer]* %tx_holding_buffers17, i64 0, i64 %idxprom18, !dbg !15766
  %buffer20 = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %arrayidx19, i32 0, i32 1, !dbg !15770
  %84 = load i8*, i8** %buffer20, align 8, !dbg !15770
  call void @kfree(i8* %84) #11, !dbg !15771
  %85 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15772
  %tx_holding_buffers21 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %85, i32 0, i32 47, !dbg !15773
  %86 = load i32, i32* %i, align 4, !dbg !15774
  %idxprom22 = sext i32 %86 to i64, !dbg !15772
  %arrayidx23 = getelementptr [5 x %struct.tx_holding_buffer], [5 x %struct.tx_holding_buffer]* %tx_holding_buffers21, i64 0, i64 %idxprom22, !dbg !15772
  %buffer24 = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %arrayidx23, i32 0, i32 1, !dbg !15775
  store i8* null, i8** %buffer24, align 8, !dbg !15776
  br label %for.inc, !dbg !15777

for.inc:                                          ; preds = %for.body16
  %87 = load i32, i32* %i, align 4, !dbg !15778
  %dec25 = add i32 %87, -1, !dbg !15778
  store i32 %dec25, i32* %i, align 4, !dbg !15778
  br label %for.cond13, !dbg !15779, !llvm.loop !15780

for.end:                                          ; preds = %for.cond13
  store i32 -12, i32* %retval, align 4, !dbg !15782
  br label %return, !dbg !15782

if.end26:                                         ; preds = %kmalloc.exit
  br label %for.inc27, !dbg !15783

for.inc27:                                        ; preds = %if.end26
  %88 = load i32, i32* %i, align 4, !dbg !15784
  %inc = add i32 %88, 1, !dbg !15784
  store i32 %inc, i32* %i, align 4, !dbg !15784
  br label %for.cond, !dbg !15785, !llvm.loop !15786

for.end28:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !15788
  br label %return, !dbg !15788

return:                                           ; preds = %for.end28, %for.end
  %89 = load i32, i32* %retval, align 4, !dbg !15789
  ret i32 %89, !dbg !15789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_reset_tx_dma_buffers(%struct.mgsl_struct* %info) #1 !dbg !15790 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %i = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !15791, metadata !DIExpression()), !dbg !15792
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15793, metadata !DIExpression()), !dbg !15794
  store i32 0, i32* %i, align 4, !dbg !15795
  br label %for.cond, !dbg !15797

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15798
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15800
  %tx_buffer_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 38, !dbg !15801
  %2 = load i32, i32* %tx_buffer_count, align 4, !dbg !15801
  %cmp = icmp ult i32 %0, %2, !dbg !15802
  br i1 %cmp, label %for.body, label %for.end, !dbg !15803

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15804
  %tx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 39, !dbg !15806
  %4 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list, align 8, !dbg !15806
  %5 = load i32, i32* %i, align 4, !dbg !15807
  %idxprom = zext i32 %5 to i64, !dbg !15804
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %4, i64 %idxprom, !dbg !15804
  %count = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 1, !dbg !15808
  %6 = bitcast i16* %count to i64*, !dbg !15809
  store i64 0, i64* %6, align 4, !dbg !15810
  br label %for.inc, !dbg !15811

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !15812
  %inc = add i32 %7, 1, !dbg !15812
  store i32 %inc, i32* %i, align 4, !dbg !15812
  br label %for.cond, !dbg !15813, !llvm.loop !15814

for.end:                                          ; preds = %for.cond
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15816
  %current_tx_buffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 41, !dbg !15817
  store i32 0, i32* %current_tx_buffer, align 4, !dbg !15818
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15819
  %start_tx_dma_buffer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 40, !dbg !15820
  store i32 0, i32* %start_tx_dma_buffer, align 8, !dbg !15821
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15822
  %tx_dma_buffers_used = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 37, !dbg !15823
  store i32 0, i32* %tx_dma_buffers_used, align 8, !dbg !15824
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15825
  %get_tx_holding_index = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 44, !dbg !15826
  store i32 0, i32* %get_tx_holding_index, align 4, !dbg !15827
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15828
  %put_tx_holding_index = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 45, !dbg !15829
  store i32 0, i32* %put_tx_holding_index, align 8, !dbg !15830
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15831
  %tx_holding_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 46, !dbg !15832
  store i32 0, i32* %tx_holding_count, align 4, !dbg !15833
  ret void, !dbg !15834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mgsl_register_test(%struct.mgsl_struct* %info) #1 !dbg !8195 {
entry:
  %lock.addr.i115 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i115, metadata !9306, metadata !DIExpression()), !dbg !15835
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !15837
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !15838
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %i = alloca i32, align 4
  %rc = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !15845, metadata !DIExpression()), !dbg !15846
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15847, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.declare(metadata i8* %rc, metadata !15849, metadata !DIExpression()), !dbg !15850
  store i8 1, i8* %rc, align 1, !dbg !15850
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15851, metadata !DIExpression()), !dbg !15852
  br label %do.body, !dbg !15853

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15854

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15855, metadata !DIExpression()), !dbg !15857
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15858, metadata !DIExpression()), !dbg !15857
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15857
  %conv = zext i1 %cmp to i32, !dbg !15857
  store i32 1, i32* %tmp, align 4, !dbg !15857
  %0 = load i32, i32* %tmp, align 4, !dbg !15857
  br label %do.body2, !dbg !15859

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !15860

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !15861

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !15863, metadata !DIExpression()), !dbg !15866
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !15867, metadata !DIExpression()), !dbg !15866
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !15866
  %conv8 = zext i1 %cmp7 to i32, !dbg !15866
  store i32 1, i32* %tmp9, align 4, !dbg !15866
  %1 = load i32, i32* %tmp9, align 4, !dbg !15866
  %call = call i64 @arch_local_irq_save() #11, !dbg !15868
  store i64 %call, i64* %flags, align 8, !dbg !15868
  br label %do.end, !dbg !15868

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !15861

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !15860

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !15869, !srcloc !15870
  br label %do.body12, !dbg !15869

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15871
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 17, !dbg !15871
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15872
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !15873
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !15873
  br label %do.end14, !dbg !15871

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !15869

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !15860

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !15859

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !15854

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15874
  call void @usc_reset(%struct.mgsl_struct* %5) #11, !dbg !15875
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15876
  %call19 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %6, i16 zeroext 30) #11, !dbg !15878
  %conv20 = zext i16 %call19 to i32, !dbg !15878
  %cmp21 = icmp ne i32 %conv20, 0, !dbg !15879
  br i1 %cmp21, label %if.then, label %lor.lhs.false, !dbg !15880

lor.lhs.false:                                    ; preds = %do.end18
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15881
  %call23 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %7, i16 zeroext 20) #11, !dbg !15882
  %conv24 = zext i16 %call23 to i32, !dbg !15882
  %cmp25 = icmp ne i32 %conv24, 0, !dbg !15883
  br i1 %cmp25, label %if.then, label %lor.lhs.false27, !dbg !15884

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15885
  %call28 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %8, i16 zeroext 20) #11, !dbg !15886
  %conv29 = zext i16 %call28 to i32, !dbg !15886
  %cmp30 = icmp ne i32 %conv29, 0, !dbg !15887
  br i1 %cmp30, label %if.then, label %if.end, !dbg !15888

if.then:                                          ; preds = %lor.lhs.false27, %lor.lhs.false, %do.end18
  store i8 0, i8* %rc, align 1, !dbg !15889
  br label %if.end, !dbg !15891

if.end:                                           ; preds = %if.then, %lor.lhs.false27
  %9 = load i8, i8* %rc, align 1, !dbg !15892
  %tobool = trunc i8 %9 to i1, !dbg !15892
  br i1 %tobool, label %if.then32, label %if.end112, !dbg !15894

if.then32:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !15895
  br label %for.cond, !dbg !15898

for.cond:                                         ; preds = %for.inc, %if.then32
  %10 = load i32, i32* %i, align 4, !dbg !15899
  %11 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15901
  %cmp33 = icmp ult i32 %10, %11, !dbg !15902
  br i1 %cmp33, label %for.body, label %for.end, !dbg !15903

for.body:                                         ; preds = %for.cond
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15904
  %13 = load i32, i32* %i, align 4, !dbg !15906
  %idxprom = zext i32 %13 to i64, !dbg !15907
  %arrayidx = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom, !dbg !15907
  %14 = load i16, i16* %arrayidx, align 2, !dbg !15907
  call void @usc_OutReg(%struct.mgsl_struct* %12, i16 zeroext 46, i16 zeroext %14) #11, !dbg !15908
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15909
  %16 = load i32, i32* %i, align 4, !dbg !15910
  %add = add i32 %16, 1, !dbg !15911
  %17 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15912
  %rem = urem i32 %add, %17, !dbg !15913
  %idxprom35 = zext i32 %rem to i64, !dbg !15914
  %arrayidx36 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom35, !dbg !15914
  %18 = load i16, i16* %arrayidx36, align 2, !dbg !15914
  call void @usc_OutReg(%struct.mgsl_struct* %15, i16 zeroext 62, i16 zeroext %18) #11, !dbg !15915
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15916
  %20 = load i32, i32* %i, align 4, !dbg !15917
  %add37 = add i32 %20, 2, !dbg !15918
  %21 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15919
  %rem38 = urem i32 %add37, %21, !dbg !15920
  %idxprom39 = zext i32 %rem38 to i64, !dbg !15921
  %arrayidx40 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom39, !dbg !15921
  %22 = load i16, i16* %arrayidx40, align 2, !dbg !15921
  call void @usc_OutReg(%struct.mgsl_struct* %19, i16 zeroext 58, i16 zeroext %22) #11, !dbg !15922
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15923
  %24 = load i32, i32* %i, align 4, !dbg !15924
  %add41 = add i32 %24, 3, !dbg !15925
  %25 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15926
  %rem42 = urem i32 %add41, %25, !dbg !15927
  %idxprom43 = zext i32 %rem42 to i64, !dbg !15928
  %arrayidx44 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom43, !dbg !15928
  %26 = load i16, i16* %arrayidx44, align 2, !dbg !15928
  call void @usc_OutReg(%struct.mgsl_struct* %23, i16 zeroext 42, i16 zeroext %26) #11, !dbg !15929
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15930
  %28 = load i32, i32* %i, align 4, !dbg !15931
  %add45 = add i32 %28, 4, !dbg !15932
  %29 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15933
  %rem46 = urem i32 %add45, %29, !dbg !15934
  %idxprom47 = zext i32 %rem46 to i64, !dbg !15935
  %arrayidx48 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom47, !dbg !15935
  %30 = load i16, i16* %arrayidx48, align 2, !dbg !15935
  call void @usc_OutReg(%struct.mgsl_struct* %27, i16 zeroext 40, i16 zeroext %30) #11, !dbg !15936
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15937
  %32 = load i32, i32* %i, align 4, !dbg !15938
  %add49 = add i32 %32, 5, !dbg !15939
  %33 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15940
  %rem50 = urem i32 %add49, %33, !dbg !15941
  %idxprom51 = zext i32 %rem50 to i64, !dbg !15942
  %arrayidx52 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom51, !dbg !15942
  %34 = load i16, i16* %arrayidx52, align 2, !dbg !15942
  call void @usc_OutDmaReg(%struct.mgsl_struct* %31, i16 zeroext 42, i16 zeroext %34) #11, !dbg !15943
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15944
  %call53 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %35, i16 zeroext 46) #11, !dbg !15946
  %conv54 = zext i16 %call53 to i32, !dbg !15946
  %36 = load i32, i32* %i, align 4, !dbg !15947
  %idxprom55 = zext i32 %36 to i64, !dbg !15948
  %arrayidx56 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom55, !dbg !15948
  %37 = load i16, i16* %arrayidx56, align 2, !dbg !15948
  %conv57 = zext i16 %37 to i32, !dbg !15948
  %cmp58 = icmp ne i32 %conv54, %conv57, !dbg !15949
  br i1 %cmp58, label %if.then110, label %lor.lhs.false60, !dbg !15950

lor.lhs.false60:                                  ; preds = %for.body
  %38 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15951
  %call61 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %38, i16 zeroext 62) #11, !dbg !15952
  %conv62 = zext i16 %call61 to i32, !dbg !15952
  %39 = load i32, i32* %i, align 4, !dbg !15953
  %add63 = add i32 %39, 1, !dbg !15954
  %40 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15955
  %rem64 = urem i32 %add63, %40, !dbg !15956
  %idxprom65 = zext i32 %rem64 to i64, !dbg !15957
  %arrayidx66 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom65, !dbg !15957
  %41 = load i16, i16* %arrayidx66, align 2, !dbg !15957
  %conv67 = zext i16 %41 to i32, !dbg !15957
  %cmp68 = icmp ne i32 %conv62, %conv67, !dbg !15958
  br i1 %cmp68, label %if.then110, label %lor.lhs.false70, !dbg !15959

lor.lhs.false70:                                  ; preds = %lor.lhs.false60
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15960
  %call71 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %42, i16 zeroext 58) #11, !dbg !15961
  %conv72 = zext i16 %call71 to i32, !dbg !15961
  %43 = load i32, i32* %i, align 4, !dbg !15962
  %add73 = add i32 %43, 2, !dbg !15963
  %44 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15964
  %rem74 = urem i32 %add73, %44, !dbg !15965
  %idxprom75 = zext i32 %rem74 to i64, !dbg !15966
  %arrayidx76 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom75, !dbg !15966
  %45 = load i16, i16* %arrayidx76, align 2, !dbg !15966
  %conv77 = zext i16 %45 to i32, !dbg !15966
  %cmp78 = icmp ne i32 %conv72, %conv77, !dbg !15967
  br i1 %cmp78, label %if.then110, label %lor.lhs.false80, !dbg !15968

lor.lhs.false80:                                  ; preds = %lor.lhs.false70
  %46 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15969
  %call81 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %46, i16 zeroext 42) #11, !dbg !15970
  %conv82 = zext i16 %call81 to i32, !dbg !15970
  %47 = load i32, i32* %i, align 4, !dbg !15971
  %add83 = add i32 %47, 3, !dbg !15972
  %48 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15973
  %rem84 = urem i32 %add83, %48, !dbg !15974
  %idxprom85 = zext i32 %rem84 to i64, !dbg !15975
  %arrayidx86 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom85, !dbg !15975
  %49 = load i16, i16* %arrayidx86, align 2, !dbg !15975
  %conv87 = zext i16 %49 to i32, !dbg !15975
  %cmp88 = icmp ne i32 %conv82, %conv87, !dbg !15976
  br i1 %cmp88, label %if.then110, label %lor.lhs.false90, !dbg !15977

lor.lhs.false90:                                  ; preds = %lor.lhs.false80
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15978
  %call91 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %50, i16 zeroext 40) #11, !dbg !15979
  %conv92 = zext i16 %call91 to i32, !dbg !15979
  %51 = load i32, i32* %i, align 4, !dbg !15980
  %add93 = add i32 %51, 4, !dbg !15981
  %52 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15982
  %rem94 = urem i32 %add93, %52, !dbg !15983
  %idxprom95 = zext i32 %rem94 to i64, !dbg !15984
  %arrayidx96 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom95, !dbg !15984
  %53 = load i16, i16* %arrayidx96, align 2, !dbg !15984
  %conv97 = zext i16 %53 to i32, !dbg !15984
  %cmp98 = icmp ne i32 %conv92, %conv97, !dbg !15985
  br i1 %cmp98, label %if.then110, label %lor.lhs.false100, !dbg !15986

lor.lhs.false100:                                 ; preds = %lor.lhs.false90
  %54 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !15987
  %call101 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %54, i16 zeroext 42) #11, !dbg !15988
  %conv102 = zext i16 %call101 to i32, !dbg !15988
  %55 = load i32, i32* %i, align 4, !dbg !15989
  %add103 = add i32 %55, 5, !dbg !15990
  %56 = load i32, i32* @mgsl_register_test.Patterncount, align 4, !dbg !15991
  %rem104 = urem i32 %add103, %56, !dbg !15992
  %idxprom105 = zext i32 %rem104 to i64, !dbg !15993
  %arrayidx106 = getelementptr [8 x i16], [8 x i16]* @mgsl_register_test.BitPatterns, i64 0, i64 %idxprom105, !dbg !15993
  %57 = load i16, i16* %arrayidx106, align 2, !dbg !15993
  %conv107 = zext i16 %57 to i32, !dbg !15993
  %cmp108 = icmp ne i32 %conv102, %conv107, !dbg !15994
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !15995

if.then110:                                       ; preds = %lor.lhs.false100, %lor.lhs.false90, %lor.lhs.false80, %lor.lhs.false70, %lor.lhs.false60, %for.body
  store i8 0, i8* %rc, align 1, !dbg !15996
  br label %for.end, !dbg !15998

if.end111:                                        ; preds = %lor.lhs.false100
  br label %for.inc, !dbg !15999

for.inc:                                          ; preds = %if.end111
  %58 = load i32, i32* %i, align 4, !dbg !16000
  %inc = add i32 %58, 1, !dbg !16000
  store i32 %inc, i32* %i, align 4, !dbg !16000
  br label %for.cond, !dbg !16001, !llvm.loop !16002

for.end:                                          ; preds = %if.then110, %for.cond
  br label %if.end112, !dbg !16004

if.end112:                                        ; preds = %for.end, %if.end
  %59 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16005
  call void @usc_reset(%struct.mgsl_struct* %59) #11, !dbg !16006
  %60 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16007
  %irq_spinlock113 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %60, i32 0, i32 17, !dbg !16008
  %61 = load i64, i64* %flags, align 8, !dbg !16009
  store %struct.spinlock* %irq_spinlock113, %struct.spinlock** %lock.addr.i115, align 8
  store i64 %61, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16010
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16010
  store i32 1, i32* %tmp.i, align 4, !dbg !16010
  %62 = load i32, i32* %tmp.i, align 4, !dbg !16010
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16011
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16011
  store i32 1, i32* %tmp8.i, align 4, !dbg !16011
  %63 = load i32, i32* %tmp8.i, align 4, !dbg !16011
  %64 = load i64, i64* %flags.addr.i, align 8, !dbg !16012
  call void @arch_local_irq_restore(i64 %64) #14, !dbg !16012
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16013, !srcloc !9373
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i115, align 8, !dbg !16014
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !16014
  %rlock.i116 = bitcast %union.anon.1* %66 to %struct.raw_spinlock*, !dbg !16014
  %67 = load i8, i8* %rc, align 1, !dbg !16015
  %tobool114 = trunc i8 %67 to i1, !dbg !16015
  ret i1 %tobool114, !dbg !16016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mgsl_irq_test(%struct.mgsl_struct* %info) #1 !dbg !16017 {
entry:
  %lock.addr.i77 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i77, metadata !8660, metadata !DIExpression()), !dbg !16018
  %lock.addr.i72 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i72, metadata !9306, metadata !DIExpression()), !dbg !16025
  %flags.addr.i73 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i73, metadata !9312, metadata !DIExpression()), !dbg !16027
  %tmp.i74 = alloca i32, align 4
  %tmp8.i75 = alloca i32, align 4
  %lock.addr.i70 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i70, metadata !9306, metadata !DIExpression()), !dbg !16028
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !16030
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !16031
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %EndTime = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy42 = alloca i64, align 8
  %__dummy243 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  %__dummy50 = alloca i64, align 8
  %__dummy251 = alloca i64, align 8
  %tmp54 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !16038, metadata !DIExpression()), !dbg !16039
  call void @llvm.dbg.declare(metadata i64* %EndTime, metadata !16040, metadata !DIExpression()), !dbg !16041
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16042, metadata !DIExpression()), !dbg !16043
  br label %do.body, !dbg !16044

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !16045

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16046, metadata !DIExpression()), !dbg !16048
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16049, metadata !DIExpression()), !dbg !16048
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16048
  %conv = zext i1 %cmp to i32, !dbg !16048
  store i32 1, i32* %tmp, align 4, !dbg !16048
  %0 = load i32, i32* %tmp, align 4, !dbg !16048
  br label %do.body2, !dbg !16050

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !16051

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !16052

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !16054, metadata !DIExpression()), !dbg !16057
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !16058, metadata !DIExpression()), !dbg !16057
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !16057
  %conv8 = zext i1 %cmp7 to i32, !dbg !16057
  store i32 1, i32* %tmp9, align 4, !dbg !16057
  %1 = load i32, i32* %tmp9, align 4, !dbg !16057
  %call = call i64 @arch_local_irq_save() #11, !dbg !16059
  store i64 %call, i64* %flags, align 8, !dbg !16059
  br label %do.end, !dbg !16059

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !16052

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !16051

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16060, !srcloc !16061
  br label %do.body12, !dbg !16060

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16062
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 17, !dbg !16062
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16063
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !16064
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !16064
  br label %do.end14, !dbg !16062

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !16060

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !16051

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !16050

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !16045

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16065
  call void @usc_reset(%struct.mgsl_struct* %5) #11, !dbg !16066
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16067
  %irq_occurred = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 72, !dbg !16068
  store i8 0, i8* %irq_occurred, align 1, !dbg !16069
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16070
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16071
  %call19 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %8, i16 zeroext 10) #11, !dbg !16072
  %conv20 = zext i16 %call19 to i32, !dbg !16072
  %or = or i32 %conv20, 8192, !dbg !16073
  %and = and i32 %or, -4097, !dbg !16074
  %conv21 = trunc i32 %and to i16, !dbg !16075
  call void @usc_OutReg(%struct.mgsl_struct* %7, i16 zeroext 10, i16 zeroext %conv21) #11, !dbg !16076
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16077
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16077
  %call22 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %10, i16 zeroext 24) #11, !dbg !16077
  %conv23 = zext i16 %call22 to i32, !dbg !16077
  %and24 = and i32 %conv23, 3840, !dbg !16077
  %add = add i32 %and24, 45056, !dbg !16077
  %conv25 = trunc i32 %add to i16, !dbg !16077
  call void @usc_OutReg(%struct.mgsl_struct* %9, i16 zeroext 24, i16 zeroext %conv25) #11, !dbg !16077
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16078
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16078
  %call26 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %12, i16 zeroext 24) #11, !dbg !16078
  %conv27 = zext i16 %call26 to i32, !dbg !16078
  %and28 = and i32 %conv27, 65280, !dbg !16078
  %add29 = add i32 %and28, 192, !dbg !16078
  %add30 = add i32 %add29, 2, !dbg !16078
  %conv31 = trunc i32 %add30 to i16, !dbg !16078
  call void @usc_OutReg(%struct.mgsl_struct* %11, i16 zeroext 24, i16 zeroext %conv31) #11, !dbg !16078
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16079
  call void @usc_OutReg(%struct.mgsl_struct* %13, i16 zeroext 26, i16 zeroext 66) #11, !dbg !16079
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16080
  call void @usc_OutReg(%struct.mgsl_struct* %14, i16 zeroext 28, i16 zeroext 8192) #11, !dbg !16080
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16081
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16081
  %call32 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %16, i16 zeroext 30) #11, !dbg !16081
  %conv33 = zext i16 %call32 to i32, !dbg !16081
  %or34 = or i32 %conv33, 12288, !dbg !16081
  %conv35 = trunc i32 %or34 to i16, !dbg !16081
  call void @usc_OutReg(%struct.mgsl_struct* %15, i16 zeroext 30, i16 zeroext %conv35) #11, !dbg !16081
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16082
  %irq_spinlock36 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 17, !dbg !16083
  %18 = load i64, i64* %flags, align 8, !dbg !16084
  store %struct.spinlock* %irq_spinlock36, %struct.spinlock** %lock.addr.i72, align 8
  store i64 %18, i64* %flags.addr.i73, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16085
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16085
  store i32 1, i32* %tmp.i74, align 4, !dbg !16085
  %19 = load i32, i32* %tmp.i74, align 4, !dbg !16085
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16086
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16086
  store i32 1, i32* %tmp8.i75, align 4, !dbg !16086
  %20 = load i32, i32* %tmp8.i75, align 4, !dbg !16086
  %21 = load i64, i64* %flags.addr.i73, align 8, !dbg !16087
  call void @arch_local_irq_restore(i64 %21) #14, !dbg !16087
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16088, !srcloc !9373
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i72, align 8, !dbg !16089
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !16089
  %rlock.i76 = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !16089
  store i64 100, i64* %EndTime, align 8, !dbg !16090
  br label %while.cond, !dbg !16091

while.cond:                                       ; preds = %while.body, %do.end18
  %24 = load i64, i64* %EndTime, align 8, !dbg !16092
  %dec = add i64 %24, -1, !dbg !16092
  store i64 %dec, i64* %EndTime, align 8, !dbg !16092
  %tobool = icmp ne i64 %24, 0, !dbg !16092
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !16093

land.rhs:                                         ; preds = %while.cond
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16094
  %irq_occurred37 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 72, !dbg !16095
  %26 = load i8, i8* %irq_occurred37, align 1, !dbg !16095
  %tobool38 = trunc i8 %26 to i1, !dbg !16095
  %lnot = xor i1 %tobool38, true, !dbg !16096
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %27 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !16097
  br i1 %27, label %while.body, label %while.end, !dbg !16091

while.body:                                       ; preds = %land.end
  %call39 = call i64 @msleep_interruptible(i32 10) #11, !dbg !16098
  br label %while.cond, !dbg !16091, !llvm.loop !16100

while.end:                                        ; preds = %land.end
  br label %do.body40, !dbg !16102

do.body40:                                        ; preds = %while.end
  br label %do.body41, !dbg !16103

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy42, metadata !16104, metadata !DIExpression()), !dbg !16106
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !16107, metadata !DIExpression()), !dbg !16106
  %cmp44 = icmp eq i64* %__dummy42, %__dummy243, !dbg !16106
  %conv45 = zext i1 %cmp44 to i32, !dbg !16106
  store i32 1, i32* %tmp46, align 4, !dbg !16106
  %28 = load i32, i32* %tmp46, align 4, !dbg !16106
  br label %do.body47, !dbg !16108

do.body47:                                        ; preds = %do.body41
  br label %do.body48, !dbg !16109

do.body48:                                        ; preds = %do.body47
  br label %do.body49, !dbg !16110

do.body49:                                        ; preds = %do.body48
  call void @llvm.dbg.declare(metadata i64* %__dummy50, metadata !16112, metadata !DIExpression()), !dbg !16115
  call void @llvm.dbg.declare(metadata i64* %__dummy251, metadata !16116, metadata !DIExpression()), !dbg !16115
  %cmp52 = icmp eq i64* %__dummy50, %__dummy251, !dbg !16115
  %conv53 = zext i1 %cmp52 to i32, !dbg !16115
  store i32 1, i32* %tmp54, align 4, !dbg !16115
  %29 = load i32, i32* %tmp54, align 4, !dbg !16115
  %call55 = call i64 @arch_local_irq_save() #11, !dbg !16117
  store i64 %call55, i64* %flags, align 8, !dbg !16117
  br label %do.end56, !dbg !16117

do.end56:                                         ; preds = %do.body49
  br label %do.end57, !dbg !16110

do.end57:                                         ; preds = %do.end56
  br label %do.body58, !dbg !16109

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16118, !srcloc !16119
  br label %do.body59, !dbg !16118

do.body59:                                        ; preds = %do.body58
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16120
  %irq_spinlock60 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 17, !dbg !16120
  store %struct.spinlock* %irq_spinlock60, %struct.spinlock** %lock.addr.i77, align 8
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i77, align 8, !dbg !16121
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !16122
  %rlock.i78 = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !16122
  br label %do.end62, !dbg !16120

do.end62:                                         ; preds = %do.body59
  br label %do.end63, !dbg !16118

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !16109

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !16108

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !16103

do.end66:                                         ; preds = %do.end65
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16123
  call void @usc_reset(%struct.mgsl_struct* %33) #11, !dbg !16124
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16125
  %irq_spinlock67 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 17, !dbg !16126
  %35 = load i64, i64* %flags, align 8, !dbg !16127
  store %struct.spinlock* %irq_spinlock67, %struct.spinlock** %lock.addr.i70, align 8
  store i64 %35, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16128
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16128
  store i32 1, i32* %tmp.i, align 4, !dbg !16128
  %36 = load i32, i32* %tmp.i, align 4, !dbg !16128
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16129
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16129
  store i32 1, i32* %tmp8.i, align 4, !dbg !16129
  %37 = load i32, i32* %tmp8.i, align 4, !dbg !16129
  %38 = load i64, i64* %flags.addr.i, align 8, !dbg !16130
  call void @arch_local_irq_restore(i64 %38) #14, !dbg !16130
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16131, !srcloc !9373
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i70, align 8, !dbg !16132
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !16132
  %rlock.i71 = bitcast %union.anon.1* %40 to %struct.raw_spinlock*, !dbg !16132
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16133
  %irq_occurred68 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %41, i32 0, i32 72, !dbg !16134
  %42 = load i8, i8* %irq_occurred68, align 1, !dbg !16134
  %tobool69 = trunc i8 %42 to i1, !dbg !16134
  ret i1 %tobool69, !dbg !16135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mgsl_dma_test(%struct.mgsl_struct* %info) #1 !dbg !16136 {
entry:
  %lock.addr.i508 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i508, metadata !8660, metadata !DIExpression()), !dbg !16137
  %retval.i498 = alloca i64, align 8
  %m.addr.i499 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i499, metadata !14218, metadata !DIExpression()), !dbg !16144
  %lock.addr.i493 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i493, metadata !9306, metadata !DIExpression()), !dbg !16148
  %flags.addr.i494 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i494, metadata !9312, metadata !DIExpression()), !dbg !16153
  %tmp.i495 = alloca i32, align 4
  %tmp8.i496 = alloca i32, align 4
  %lock.addr.i491 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i491, metadata !8660, metadata !DIExpression()), !dbg !16154
  %lock.addr.i486 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i486, metadata !9306, metadata !DIExpression()), !dbg !16161
  %flags.addr.i487 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i487, metadata !9312, metadata !DIExpression()), !dbg !16163
  %tmp.i488 = alloca i32, align 4
  %tmp8.i489 = alloca i32, align 4
  %lock.addr.i484 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i484, metadata !8660, metadata !DIExpression()), !dbg !16164
  %retval.i474 = alloca i64, align 8
  %m.addr.i475 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i475, metadata !14218, metadata !DIExpression()), !dbg !16171
  %lock.addr.i469 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i469, metadata !9306, metadata !DIExpression()), !dbg !16173
  %flags.addr.i470 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i470, metadata !9312, metadata !DIExpression()), !dbg !16175
  %tmp.i471 = alloca i32, align 4
  %tmp8.i472 = alloca i32, align 4
  %lock.addr.i467 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i467, metadata !8660, metadata !DIExpression()), !dbg !16176
  %lock.addr.i462 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i462, metadata !9306, metadata !DIExpression()), !dbg !16183
  %flags.addr.i463 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i463, metadata !9312, metadata !DIExpression()), !dbg !16188
  %tmp.i464 = alloca i32, align 4
  %tmp8.i465 = alloca i32, align 4
  %lock.addr.i460 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i460, metadata !8660, metadata !DIExpression()), !dbg !16189
  %retval.i450 = alloca i64, align 8
  %m.addr.i451 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i451, metadata !14218, metadata !DIExpression()), !dbg !16196
  %lock.addr.i445 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i445, metadata !9306, metadata !DIExpression()), !dbg !16198
  %flags.addr.i446 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i446, metadata !9312, metadata !DIExpression()), !dbg !16200
  %tmp.i447 = alloca i32, align 4
  %tmp8.i448 = alloca i32, align 4
  %lock.addr.i443 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i443, metadata !8660, metadata !DIExpression()), !dbg !16201
  %lock.addr.i438 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i438, metadata !9306, metadata !DIExpression()), !dbg !16208
  %flags.addr.i439 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i439, metadata !9312, metadata !DIExpression()), !dbg !16213
  %tmp.i440 = alloca i32, align 4
  %tmp8.i441 = alloca i32, align 4
  %lock.addr.i436 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i436, metadata !8660, metadata !DIExpression()), !dbg !16214
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !14218, metadata !DIExpression()), !dbg !16221
  %lock.addr.i431 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i431, metadata !9306, metadata !DIExpression()), !dbg !16223
  %flags.addr.i432 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i432, metadata !9312, metadata !DIExpression()), !dbg !16225
  %tmp.i433 = alloca i32, align 4
  %tmp8.i434 = alloca i32, align 4
  %lock.addr.i429 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i429, metadata !8660, metadata !DIExpression()), !dbg !16226
  %lock.addr.i424 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i424, metadata !9306, metadata !DIExpression()), !dbg !16233
  %flags.addr.i425 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i425, metadata !9312, metadata !DIExpression()), !dbg !16235
  %tmp.i426 = alloca i32, align 4
  %tmp8.i427 = alloca i32, align 4
  %lock.addr.i422 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i422, metadata !9306, metadata !DIExpression()), !dbg !16236
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !16238
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !16239
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %FifoLevel = alloca i16, align 2
  %phys_addr = alloca i64, align 8
  %FrameSize = alloca i32, align 4
  %i = alloca i32, align 4
  %TmpPtr = alloca i8*, align 8
  %rc = alloca i8, align 1
  %status = alloca i16, align 2
  %EndTime = alloca i64, align 8
  %flags = alloca i64, align 8
  %tmp_params = alloca %struct._MGSL_PARAMS, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__dummy52 = alloca i64, align 8
  %__dummy253 = alloca i64, align 8
  %tmp56 = alloca i32, align 4
  %__dummy60 = alloca i64, align 8
  %__dummy261 = alloca i64, align 8
  %tmp64 = alloca i32, align 4
  %__dummy94 = alloca i64, align 8
  %__dummy295 = alloca i64, align 8
  %tmp98 = alloca i32, align 4
  %__dummy102 = alloca i64, align 8
  %__dummy2103 = alloca i64, align 8
  %tmp106 = alloca i32, align 4
  %__dummy131 = alloca i64, align 8
  %__dummy2132 = alloca i64, align 8
  %tmp135 = alloca i32, align 4
  %__dummy139 = alloca i64, align 8
  %__dummy2140 = alloca i64, align 8
  %tmp143 = alloca i32, align 4
  %__dummy185 = alloca i64, align 8
  %__dummy2186 = alloca i64, align 8
  %tmp189 = alloca i32, align 4
  %__dummy193 = alloca i64, align 8
  %__dummy2194 = alloca i64, align 8
  %tmp197 = alloca i32, align 4
  %__dummy235 = alloca i64, align 8
  %__dummy2236 = alloca i64, align 8
  %tmp239 = alloca i32, align 4
  %__dummy243 = alloca i64, align 8
  %__dummy2244 = alloca i64, align 8
  %tmp247 = alloca i32, align 4
  %__dummy274 = alloca i64, align 8
  %__dummy2275 = alloca i64, align 8
  %tmp278 = alloca i32, align 4
  %__dummy282 = alloca i64, align 8
  %__dummy2283 = alloca i64, align 8
  %tmp286 = alloca i32, align 4
  %__dummy311 = alloca i64, align 8
  %__dummy2312 = alloca i64, align 8
  %tmp315 = alloca i32, align 4
  %__dummy319 = alloca i64, align 8
  %__dummy2320 = alloca i64, align 8
  %tmp323 = alloca i32, align 4
  %__dummy394 = alloca i64, align 8
  %__dummy2395 = alloca i64, align 8
  %tmp398 = alloca i32, align 4
  %__dummy402 = alloca i64, align 8
  %__dummy2403 = alloca i64, align 8
  %tmp406 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !16246, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.declare(metadata i16* %FifoLevel, metadata !16248, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.declare(metadata i64* %phys_addr, metadata !16250, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.declare(metadata i32* %FrameSize, metadata !16252, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16254, metadata !DIExpression()), !dbg !16255
  call void @llvm.dbg.declare(metadata i8** %TmpPtr, metadata !16256, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.declare(metadata i8* %rc, metadata !16258, metadata !DIExpression()), !dbg !16259
  store i8 1, i8* %rc, align 1, !dbg !16259
  call void @llvm.dbg.declare(metadata i16* %status, metadata !16260, metadata !DIExpression()), !dbg !16261
  store i16 0, i16* %status, align 2, !dbg !16261
  call void @llvm.dbg.declare(metadata i64* %EndTime, metadata !16262, metadata !DIExpression()), !dbg !16263
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16264, metadata !DIExpression()), !dbg !16265
  call void @llvm.dbg.declare(metadata %struct._MGSL_PARAMS* %tmp_params, metadata !16266, metadata !DIExpression()), !dbg !16267
  %0 = bitcast %struct._MGSL_PARAMS* %tmp_params to i8*, !dbg !16268
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16269
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 70, !dbg !16270
  %2 = bitcast %struct._MGSL_PARAMS* %params to i8*, !dbg !16268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %2, i64 48, i1 false), !dbg !16268
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16271
  %params1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 70, !dbg !16272
  %4 = bitcast %struct._MGSL_PARAMS* %params1 to i8*, !dbg !16273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 bitcast (%struct._MGSL_PARAMS* @default_params to i8*), i64 48, i1 false), !dbg !16273
  br label %do.body, !dbg !16274

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !16275

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16276, metadata !DIExpression()), !dbg !16278
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16279, metadata !DIExpression()), !dbg !16278
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16278
  %conv = zext i1 %cmp to i32, !dbg !16278
  store i32 1, i32* %tmp, align 4, !dbg !16278
  %5 = load i32, i32* %tmp, align 4, !dbg !16278
  br label %do.body3, !dbg !16280

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !16281

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !16282

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !16284, metadata !DIExpression()), !dbg !16287
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !16288, metadata !DIExpression()), !dbg !16287
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !16287
  %conv9 = zext i1 %cmp8 to i32, !dbg !16287
  store i32 1, i32* %tmp10, align 4, !dbg !16287
  %6 = load i32, i32* %tmp10, align 4, !dbg !16287
  %call = call i64 @arch_local_irq_save() #11, !dbg !16289
  store i64 %call, i64* %flags, align 8, !dbg !16289
  br label %do.end, !dbg !16289

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !16282

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !16281

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16290, !srcloc !16291
  br label %do.body13, !dbg !16290

do.body13:                                        ; preds = %do.body12
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16292
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 17, !dbg !16292
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16293
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !16294
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !16294
  br label %do.end15, !dbg !16292

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !16290

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !16281

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !16280

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !16275

do.end19:                                         ; preds = %do.end18
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16295
  call void @usc_reset(%struct.mgsl_struct* %10) #11, !dbg !16296
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16297
  call void @usc_set_sdlc_mode(%struct.mgsl_struct* %11) #11, !dbg !16298
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16299
  call void @usc_enable_loopback(%struct.mgsl_struct* %12, i32 1) #11, !dbg !16300
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16301
  call void @usc_OutDmaReg(%struct.mgsl_struct* %13, i16 zeroext 130, i16 zeroext -7680) #11, !dbg !16302
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16303
  %irq_spinlock20 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 17, !dbg !16304
  %15 = load i64, i64* %flags, align 8, !dbg !16305
  store %struct.spinlock* %irq_spinlock20, %struct.spinlock** %lock.addr.i424, align 8
  store i64 %15, i64* %flags.addr.i425, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16306
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16306
  store i32 1, i32* %tmp.i426, align 4, !dbg !16306
  %16 = load i32, i32* %tmp.i426, align 4, !dbg !16306
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16307
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16307
  store i32 1, i32* %tmp8.i427, align 4, !dbg !16307
  %17 = load i32, i32* %tmp8.i427, align 4, !dbg !16307
  %18 = load i64, i64* %flags.addr.i425, align 8, !dbg !16308
  call void @arch_local_irq_restore(i64 %18) #14, !dbg !16308
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16309, !srcloc !9373
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i424, align 8, !dbg !16310
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !16310
  %rlock.i428 = bitcast %union.anon.1* %20 to %struct.raw_spinlock*, !dbg !16310
  store i32 40, i32* %FrameSize, align 4, !dbg !16311
  %21 = load i32, i32* %FrameSize, align 4, !dbg !16312
  %conv21 = trunc i32 %21 to i16, !dbg !16312
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16313
  %tx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 39, !dbg !16314
  %23 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list, align 8, !dbg !16314
  %arrayidx = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %23, i64 0, !dbg !16313
  %count = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx, i32 0, i32 1, !dbg !16315
  store volatile i16 %conv21, i16* %count, align 4, !dbg !16316
  %24 = load i32, i32* %FrameSize, align 4, !dbg !16317
  %conv22 = trunc i32 %24 to i16, !dbg !16317
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16318
  %tx_buffer_list23 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 39, !dbg !16319
  %26 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list23, align 8, !dbg !16319
  %arrayidx24 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %26, i64 0, !dbg !16318
  %rcc = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx24, i32 0, i32 3, !dbg !16320
  store volatile i16 %conv22, i16* %rcc, align 8, !dbg !16321
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16322
  %tx_buffer_list25 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 39, !dbg !16323
  %28 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list25, align 8, !dbg !16323
  %arrayidx26 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %28, i64 0, !dbg !16322
  %status27 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx26, i32 0, i32 2, !dbg !16324
  store volatile i16 16384, i16* %status27, align 2, !dbg !16325
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16326
  %tx_buffer_list28 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 39, !dbg !16327
  %30 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list28, align 8, !dbg !16327
  %arrayidx29 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %30, i64 0, !dbg !16326
  %virt_addr = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx29, i32 0, i32 6, !dbg !16328
  %31 = load i8*, i8** %virt_addr, align 8, !dbg !16328
  store i8* %31, i8** %TmpPtr, align 8, !dbg !16329
  store i32 0, i32* %i, align 4, !dbg !16330
  br label %for.cond, !dbg !16332

for.cond:                                         ; preds = %for.inc, %do.end19
  %32 = load i32, i32* %i, align 4, !dbg !16333
  %33 = load i32, i32* %FrameSize, align 4, !dbg !16335
  %cmp30 = icmp ult i32 %32, %33, !dbg !16336
  br i1 %cmp30, label %for.body, label %for.end, !dbg !16337

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %i, align 4, !dbg !16338
  %conv32 = trunc i32 %34 to i8, !dbg !16338
  %35 = load i8*, i8** %TmpPtr, align 8, !dbg !16339
  %incdec.ptr = getelementptr i8, i8* %35, i32 1, !dbg !16339
  store i8* %incdec.ptr, i8** %TmpPtr, align 8, !dbg !16339
  store i8 %conv32, i8* %35, align 1, !dbg !16340
  br label %for.inc, !dbg !16341

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4, !dbg !16342
  %inc = add i32 %36, 1, !dbg !16342
  store i32 %inc, i32* %i, align 4, !dbg !16342
  br label %for.cond, !dbg !16343, !llvm.loop !16344

for.end:                                          ; preds = %for.cond
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16346
  %rx_buffer_list = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 34, !dbg !16347
  %38 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list, align 8, !dbg !16347
  %arrayidx33 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %38, i64 0, !dbg !16346
  %status34 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx33, i32 0, i32 2, !dbg !16348
  store volatile i16 0, i16* %status34, align 2, !dbg !16349
  %39 = load i32, i32* %FrameSize, align 4, !dbg !16350
  %add = add i32 %39, 4, !dbg !16351
  %conv35 = trunc i32 %add to i16, !dbg !16350
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16352
  %rx_buffer_list36 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 34, !dbg !16353
  %41 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list36, align 8, !dbg !16353
  %arrayidx37 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %41, i64 0, !dbg !16352
  %count38 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx37, i32 0, i32 1, !dbg !16354
  store volatile i16 %conv35, i16* %count38, align 4, !dbg !16355
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16356
  %rx_buffer_list39 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 34, !dbg !16357
  %43 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list39, align 8, !dbg !16357
  %arrayidx40 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %43, i64 0, !dbg !16356
  %virt_addr41 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx40, i32 0, i32 6, !dbg !16358
  %44 = load i8*, i8** %virt_addr41, align 8, !dbg !16358
  %45 = load i32, i32* %FrameSize, align 4, !dbg !16359
  %add42 = add i32 %45, 4, !dbg !16360
  %conv43 = zext i32 %add42 to i64, !dbg !16359
  call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %conv43, i1 false), !dbg !16361
  %46 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16362
  %tx_buffer_list44 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %46, i32 0, i32 39, !dbg !16363
  %47 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list44, align 8, !dbg !16363
  %arrayidx45 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %47, i64 1, !dbg !16362
  %count46 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx45, i32 0, i32 1, !dbg !16364
  store volatile i16 0, i16* %count46, align 4, !dbg !16365
  %48 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16366
  %rx_buffer_list47 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %48, i32 0, i32 34, !dbg !16367
  %49 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list47, align 8, !dbg !16367
  %arrayidx48 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %49, i64 1, !dbg !16366
  %count49 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx48, i32 0, i32 1, !dbg !16368
  store volatile i16 0, i16* %count49, align 4, !dbg !16369
  br label %do.body50, !dbg !16370

do.body50:                                        ; preds = %for.end
  br label %do.body51, !dbg !16371

do.body51:                                        ; preds = %do.body50
  call void @llvm.dbg.declare(metadata i64* %__dummy52, metadata !16372, metadata !DIExpression()), !dbg !16374
  call void @llvm.dbg.declare(metadata i64* %__dummy253, metadata !16375, metadata !DIExpression()), !dbg !16374
  %cmp54 = icmp eq i64* %__dummy52, %__dummy253, !dbg !16374
  %conv55 = zext i1 %cmp54 to i32, !dbg !16374
  store i32 1, i32* %tmp56, align 4, !dbg !16374
  %50 = load i32, i32* %tmp56, align 4, !dbg !16374
  br label %do.body57, !dbg !16376

do.body57:                                        ; preds = %do.body51
  br label %do.body58, !dbg !16377

do.body58:                                        ; preds = %do.body57
  br label %do.body59, !dbg !16378

do.body59:                                        ; preds = %do.body58
  call void @llvm.dbg.declare(metadata i64* %__dummy60, metadata !16380, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.declare(metadata i64* %__dummy261, metadata !16384, metadata !DIExpression()), !dbg !16383
  %cmp62 = icmp eq i64* %__dummy60, %__dummy261, !dbg !16383
  %conv63 = zext i1 %cmp62 to i32, !dbg !16383
  store i32 1, i32* %tmp64, align 4, !dbg !16383
  %51 = load i32, i32* %tmp64, align 4, !dbg !16383
  %call65 = call i64 @arch_local_irq_save() #11, !dbg !16385
  store i64 %call65, i64* %flags, align 8, !dbg !16385
  br label %do.end66, !dbg !16385

do.end66:                                         ; preds = %do.body59
  br label %do.end67, !dbg !16378

do.end67:                                         ; preds = %do.end66
  br label %do.body68, !dbg !16377

do.body68:                                        ; preds = %do.end67
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16386, !srcloc !16387
  br label %do.body69, !dbg !16386

do.body69:                                        ; preds = %do.body68
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16388
  %irq_spinlock70 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %52, i32 0, i32 17, !dbg !16388
  store %struct.spinlock* %irq_spinlock70, %struct.spinlock** %lock.addr.i429, align 8
  %53 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i429, align 8, !dbg !16389
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0, !dbg !16390
  %rlock.i430 = bitcast %union.anon.1* %54 to %struct.raw_spinlock*, !dbg !16390
  br label %do.end72, !dbg !16388

do.end72:                                         ; preds = %do.body69
  br label %do.end73, !dbg !16386

do.end73:                                         ; preds = %do.end72
  br label %do.end74, !dbg !16377

do.end74:                                         ; preds = %do.end73
  br label %do.end75, !dbg !16376

do.end75:                                         ; preds = %do.end74
  br label %do.end76, !dbg !16371

do.end76:                                         ; preds = %do.end75
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16391
  call void @usc_RTCmd(%struct.mgsl_struct* %55, i16 zeroext 18432) #11, !dbg !16392
  %56 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16393
  %rx_buffer_list77 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %56, i32 0, i32 34, !dbg !16394
  %57 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list77, align 8, !dbg !16394
  %arrayidx78 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %57, i64 0, !dbg !16393
  %phys_entry = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx78, i32 0, i32 7, !dbg !16395
  %58 = load i32, i32* %phys_entry, align 8, !dbg !16395
  %conv79 = zext i32 %58 to i64, !dbg !16393
  store i64 %conv79, i64* %phys_addr, align 8, !dbg !16396
  %59 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16397
  %60 = load i64, i64* %phys_addr, align 8, !dbg !16398
  %conv80 = trunc i64 %60 to i16, !dbg !16399
  call void @usc_OutDmaReg(%struct.mgsl_struct* %59, i16 zeroext 188, i16 zeroext %conv80) #11, !dbg !16400
  %61 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16401
  %62 = load i64, i64* %phys_addr, align 8, !dbg !16402
  %shr = lshr i64 %62, 16, !dbg !16403
  %conv81 = trunc i64 %shr to i16, !dbg !16404
  call void @usc_OutDmaReg(%struct.mgsl_struct* %61, i16 zeroext 190, i16 zeroext %conv81) #11, !dbg !16405
  %63 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16406
  %call82 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %63, i16 zeroext 130) #11, !dbg !16407
  %64 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16408
  call void @usc_DmaCmd(%struct.mgsl_struct* %64, i16 zeroext 29184) #11, !dbg !16409
  %65 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16410
  %66 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16411
  %call83 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %66, i16 zeroext 34) #11, !dbg !16412
  %conv84 = zext i16 %call83 to i32, !dbg !16412
  %and = and i32 %conv84, 65532, !dbg !16413
  %or = or i32 %and, 2, !dbg !16414
  %conv85 = trunc i32 %or to i16, !dbg !16415
  call void @usc_OutReg(%struct.mgsl_struct* %65, i16 zeroext 34, i16 zeroext %conv85) #11, !dbg !16416
  %67 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16417
  %irq_spinlock86 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %67, i32 0, i32 17, !dbg !16418
  %68 = load i64, i64* %flags, align 8, !dbg !16419
  store %struct.spinlock* %irq_spinlock86, %struct.spinlock** %lock.addr.i431, align 8
  store i64 %68, i64* %flags.addr.i432, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16420
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16420
  store i32 1, i32* %tmp.i433, align 4, !dbg !16420
  %69 = load i32, i32* %tmp.i433, align 4, !dbg !16420
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16421
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16421
  store i32 1, i32* %tmp8.i434, align 4, !dbg !16421
  %70 = load i32, i32* %tmp8.i434, align 4, !dbg !16421
  %71 = load i64, i64* %flags.addr.i432, align 8, !dbg !16422
  call void @arch_local_irq_restore(i64 %71) #14, !dbg !16422
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16423, !srcloc !9373
  %72 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i431, align 8, !dbg !16424
  %73 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %72, i32 0, i32 0, !dbg !16424
  %rlock.i435 = bitcast %union.anon.1* %73 to %struct.raw_spinlock*, !dbg !16424
  %74 = load volatile i64, i64* @jiffies, align 8, !dbg !16425
  store i32 100, i32* %m.addr.i, align 4
  %75 = load i32, i32* %m.addr.i, align 4, !dbg !16426
  %76 = call i1 @llvm.is.constant.i32(i32 %75) #10, !dbg !16427
  br i1 %76, label %if.then.i, label %if.else.i, !dbg !16428

if.then.i:                                        ; preds = %do.end76
  %77 = load i32, i32* %m.addr.i, align 4, !dbg !16429
  %cmp.i = icmp slt i32 %77, 0, !dbg !16430
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !16431

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !16432
  br label %msecs_to_jiffies.exit, !dbg !16432

if.end.i:                                         ; preds = %if.then.i
  %78 = load i32, i32* %m.addr.i, align 4, !dbg !16433
  %call.i = call i64 @_msecs_to_jiffies(i32 %78) #14, !dbg !16434
  store i64 %call.i, i64* %retval.i, align 8, !dbg !16435
  br label %msecs_to_jiffies.exit, !dbg !16435

if.else.i:                                        ; preds = %do.end76
  %79 = load i32, i32* %m.addr.i, align 4, !dbg !16436
  %call2.i = call i64 @__msecs_to_jiffies(i32 %79) #14, !dbg !16437
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !16438
  br label %msecs_to_jiffies.exit, !dbg !16438

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %80 = load i64, i64* %retval.i, align 8, !dbg !16439
  %add88 = add i64 %74, %80, !dbg !16440
  store i64 %add88, i64* %EndTime, align 8, !dbg !16441
  br label %for.cond89, !dbg !16442

for.cond89:                                       ; preds = %if.end127, %msecs_to_jiffies.exit
  %81 = load i64, i64* %EndTime, align 8, !dbg !16443
  %82 = load volatile i64, i64* @jiffies, align 8, !dbg !16443
  %sub = sub i64 %81, %82, !dbg !16443
  %cmp90 = icmp slt i64 %sub, 0, !dbg !16443
  br i1 %cmp90, label %if.then, label %if.end, !dbg !16445

if.then:                                          ; preds = %for.cond89
  store i8 0, i8* %rc, align 1, !dbg !16446
  br label %for.end128, !dbg !16448

if.end:                                           ; preds = %for.cond89
  br label %do.body92, !dbg !16449

do.body92:                                        ; preds = %if.end
  br label %do.body93, !dbg !16450

do.body93:                                        ; preds = %do.body92
  call void @llvm.dbg.declare(metadata i64* %__dummy94, metadata !16451, metadata !DIExpression()), !dbg !16453
  call void @llvm.dbg.declare(metadata i64* %__dummy295, metadata !16454, metadata !DIExpression()), !dbg !16453
  %cmp96 = icmp eq i64* %__dummy94, %__dummy295, !dbg !16453
  %conv97 = zext i1 %cmp96 to i32, !dbg !16453
  store i32 1, i32* %tmp98, align 4, !dbg !16453
  %83 = load i32, i32* %tmp98, align 4, !dbg !16453
  br label %do.body99, !dbg !16455

do.body99:                                        ; preds = %do.body93
  br label %do.body100, !dbg !16456

do.body100:                                       ; preds = %do.body99
  br label %do.body101, !dbg !16457

do.body101:                                       ; preds = %do.body100
  call void @llvm.dbg.declare(metadata i64* %__dummy102, metadata !16459, metadata !DIExpression()), !dbg !16462
  call void @llvm.dbg.declare(metadata i64* %__dummy2103, metadata !16463, metadata !DIExpression()), !dbg !16462
  %cmp104 = icmp eq i64* %__dummy102, %__dummy2103, !dbg !16462
  %conv105 = zext i1 %cmp104 to i32, !dbg !16462
  store i32 1, i32* %tmp106, align 4, !dbg !16462
  %84 = load i32, i32* %tmp106, align 4, !dbg !16462
  %call107 = call i64 @arch_local_irq_save() #11, !dbg !16464
  store i64 %call107, i64* %flags, align 8, !dbg !16464
  br label %do.end108, !dbg !16464

do.end108:                                        ; preds = %do.body101
  br label %do.end109, !dbg !16457

do.end109:                                        ; preds = %do.end108
  br label %do.body110, !dbg !16456

do.body110:                                       ; preds = %do.end109
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16465, !srcloc !16466
  br label %do.body111, !dbg !16465

do.body111:                                       ; preds = %do.body110
  %85 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16467
  %irq_spinlock112 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %85, i32 0, i32 17, !dbg !16467
  store %struct.spinlock* %irq_spinlock112, %struct.spinlock** %lock.addr.i436, align 8
  %86 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i436, align 8, !dbg !16468
  %87 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %86, i32 0, i32 0, !dbg !16469
  %rlock.i437 = bitcast %union.anon.1* %87 to %struct.raw_spinlock*, !dbg !16469
  br label %do.end114, !dbg !16467

do.end114:                                        ; preds = %do.body111
  br label %do.end115, !dbg !16465

do.end115:                                        ; preds = %do.end114
  br label %do.end116, !dbg !16456

do.end116:                                        ; preds = %do.end115
  br label %do.end117, !dbg !16455

do.end117:                                        ; preds = %do.end116
  br label %do.end118, !dbg !16450

do.end118:                                        ; preds = %do.end117
  %88 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16470
  %call119 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %88, i16 zeroext 130) #11, !dbg !16471
  store i16 %call119, i16* %status, align 2, !dbg !16472
  %89 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16473
  %irq_spinlock120 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %89, i32 0, i32 17, !dbg !16474
  %90 = load i64, i64* %flags, align 8, !dbg !16475
  store %struct.spinlock* %irq_spinlock120, %struct.spinlock** %lock.addr.i438, align 8
  store i64 %90, i64* %flags.addr.i439, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16476
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16476
  store i32 1, i32* %tmp.i440, align 4, !dbg !16476
  %91 = load i32, i32* %tmp.i440, align 4, !dbg !16476
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16477
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16477
  store i32 1, i32* %tmp8.i441, align 4, !dbg !16477
  %92 = load i32, i32* %tmp8.i441, align 4, !dbg !16477
  %93 = load i64, i64* %flags.addr.i439, align 8, !dbg !16478
  call void @arch_local_irq_restore(i64 %93) #14, !dbg !16478
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16479, !srcloc !9373
  %94 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i438, align 8, !dbg !16480
  %95 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %94, i32 0, i32 0, !dbg !16480
  %rlock.i442 = bitcast %union.anon.1* %95 to %struct.raw_spinlock*, !dbg !16480
  %96 = load i16, i16* %status, align 2, !dbg !16481
  %conv121 = zext i16 %96 to i32, !dbg !16481
  %and122 = and i32 %conv121, 16, !dbg !16483
  %tobool = icmp ne i32 %and122, 0, !dbg !16483
  br i1 %tobool, label %if.end127, label %land.lhs.true, !dbg !16484

land.lhs.true:                                    ; preds = %do.end118
  %97 = load i16, i16* %status, align 2, !dbg !16485
  %conv123 = zext i16 %97 to i32, !dbg !16485
  %and124 = and i32 %conv123, 32, !dbg !16486
  %tobool125 = icmp ne i32 %and124, 0, !dbg !16486
  br i1 %tobool125, label %if.then126, label %if.end127, !dbg !16487

if.then126:                                       ; preds = %land.lhs.true
  br label %for.end128, !dbg !16488

if.end127:                                        ; preds = %land.lhs.true, %do.end118
  br label %for.cond89, !dbg !16490, !llvm.loop !16491

for.end128:                                       ; preds = %if.then126, %if.then
  br label %do.body129, !dbg !16494

do.body129:                                       ; preds = %for.end128
  br label %do.body130, !dbg !16495

do.body130:                                       ; preds = %do.body129
  call void @llvm.dbg.declare(metadata i64* %__dummy131, metadata !16496, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.declare(metadata i64* %__dummy2132, metadata !16499, metadata !DIExpression()), !dbg !16498
  %cmp133 = icmp eq i64* %__dummy131, %__dummy2132, !dbg !16498
  %conv134 = zext i1 %cmp133 to i32, !dbg !16498
  store i32 1, i32* %tmp135, align 4, !dbg !16498
  %98 = load i32, i32* %tmp135, align 4, !dbg !16498
  br label %do.body136, !dbg !16500

do.body136:                                       ; preds = %do.body130
  br label %do.body137, !dbg !16501

do.body137:                                       ; preds = %do.body136
  br label %do.body138, !dbg !16502

do.body138:                                       ; preds = %do.body137
  call void @llvm.dbg.declare(metadata i64* %__dummy139, metadata !16504, metadata !DIExpression()), !dbg !16507
  call void @llvm.dbg.declare(metadata i64* %__dummy2140, metadata !16508, metadata !DIExpression()), !dbg !16507
  %cmp141 = icmp eq i64* %__dummy139, %__dummy2140, !dbg !16507
  %conv142 = zext i1 %cmp141 to i32, !dbg !16507
  store i32 1, i32* %tmp143, align 4, !dbg !16507
  %99 = load i32, i32* %tmp143, align 4, !dbg !16507
  %call144 = call i64 @arch_local_irq_save() #11, !dbg !16509
  store i64 %call144, i64* %flags, align 8, !dbg !16509
  br label %do.end145, !dbg !16509

do.end145:                                        ; preds = %do.body138
  br label %do.end146, !dbg !16502

do.end146:                                        ; preds = %do.end145
  br label %do.body147, !dbg !16501

do.body147:                                       ; preds = %do.end146
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16510, !srcloc !16511
  br label %do.body148, !dbg !16510

do.body148:                                       ; preds = %do.body147
  %100 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16512
  %irq_spinlock149 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %100, i32 0, i32 17, !dbg !16512
  store %struct.spinlock* %irq_spinlock149, %struct.spinlock** %lock.addr.i443, align 8
  %101 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i443, align 8, !dbg !16513
  %102 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %101, i32 0, i32 0, !dbg !16514
  %rlock.i444 = bitcast %union.anon.1* %102 to %struct.raw_spinlock*, !dbg !16514
  br label %do.end151, !dbg !16512

do.end151:                                        ; preds = %do.body148
  br label %do.end152, !dbg !16510

do.end152:                                        ; preds = %do.end151
  br label %do.end153, !dbg !16501

do.end153:                                        ; preds = %do.end152
  br label %do.end154, !dbg !16500

do.end154:                                        ; preds = %do.end153
  br label %do.end155, !dbg !16495

do.end155:                                        ; preds = %do.end154
  %103 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16515
  %104 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16516
  %tx_buffer_list156 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %104, i32 0, i32 39, !dbg !16517
  %105 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list156, align 8, !dbg !16517
  %arrayidx157 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %105, i64 0, !dbg !16516
  %count158 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx157, i32 0, i32 1, !dbg !16518
  %106 = load volatile i16, i16* %count158, align 4, !dbg !16518
  call void @usc_OutReg(%struct.mgsl_struct* %103, i16 zeroext 58, i16 zeroext %106) #11, !dbg !16519
  %107 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16520
  call void @usc_RTCmd(%struct.mgsl_struct* %107, i16 zeroext 20480) #11, !dbg !16521
  %108 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16522
  %tx_buffer_list159 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %108, i32 0, i32 39, !dbg !16523
  %109 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list159, align 8, !dbg !16523
  %arrayidx160 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %109, i64 0, !dbg !16522
  %phys_entry161 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx160, i32 0, i32 7, !dbg !16524
  %110 = load i32, i32* %phys_entry161, align 8, !dbg !16524
  %conv162 = zext i32 %110 to i64, !dbg !16522
  store i64 %conv162, i64* %phys_addr, align 8, !dbg !16525
  %111 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16526
  %112 = load i64, i64* %phys_addr, align 8, !dbg !16527
  %conv163 = trunc i64 %112 to i16, !dbg !16528
  call void @usc_OutDmaReg(%struct.mgsl_struct* %111, i16 zeroext 60, i16 zeroext %conv163) #11, !dbg !16529
  %113 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16530
  %114 = load i64, i64* %phys_addr, align 8, !dbg !16531
  %shr164 = lshr i64 %114, 16, !dbg !16532
  %conv165 = trunc i64 %shr164 to i16, !dbg !16533
  call void @usc_OutDmaReg(%struct.mgsl_struct* %113, i16 zeroext 62, i16 zeroext %conv165) #11, !dbg !16534
  %115 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16535
  %116 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16536
  %call166 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %116, i16 zeroext 52) #11, !dbg !16537
  %conv167 = zext i16 %call166 to i32, !dbg !16537
  %and168 = and i32 %conv167, 3840, !dbg !16538
  %or169 = or i32 %and168, 250, !dbg !16539
  %conv170 = trunc i32 %or169 to i16, !dbg !16540
  call void @usc_OutReg(%struct.mgsl_struct* %115, i16 zeroext 52, i16 zeroext %conv170) #11, !dbg !16541
  %117 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16542
  call void @usc_DmaCmd(%struct.mgsl_struct* %117, i16 zeroext 28672) #11, !dbg !16543
  %118 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16544
  %119 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16544
  %tcsr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %119, i32 0, i32 55, !dbg !16544
  %120 = load i16, i16* %tcsr_value, align 2, !dbg !16544
  %conv171 = zext i16 %120 to i32, !dbg !16544
  %add172 = add i32 %conv171, 20480, !dbg !16544
  %conv173 = trunc i32 %add172 to i16, !dbg !16544
  call void @usc_OutReg(%struct.mgsl_struct* %118, i16 zeroext 52, i16 zeroext %conv173) #11, !dbg !16544
  %121 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16545
  %irq_spinlock174 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %121, i32 0, i32 17, !dbg !16546
  %122 = load i64, i64* %flags, align 8, !dbg !16547
  store %struct.spinlock* %irq_spinlock174, %struct.spinlock** %lock.addr.i445, align 8
  store i64 %122, i64* %flags.addr.i446, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16548
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16548
  store i32 1, i32* %tmp.i447, align 4, !dbg !16548
  %123 = load i32, i32* %tmp.i447, align 4, !dbg !16548
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16549
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16549
  store i32 1, i32* %tmp8.i448, align 4, !dbg !16549
  %124 = load i32, i32* %tmp8.i448, align 4, !dbg !16549
  %125 = load i64, i64* %flags.addr.i446, align 8, !dbg !16550
  call void @arch_local_irq_restore(i64 %125) #14, !dbg !16550
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16551, !srcloc !9373
  %126 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i445, align 8, !dbg !16552
  %127 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %126, i32 0, i32 0, !dbg !16552
  %rlock.i449 = bitcast %union.anon.1* %127 to %struct.raw_spinlock*, !dbg !16552
  %128 = load volatile i64, i64* @jiffies, align 8, !dbg !16553
  store i32 100, i32* %m.addr.i451, align 4
  %129 = load i32, i32* %m.addr.i451, align 4, !dbg !16554
  %130 = call i1 @llvm.is.constant.i32(i32 %129) #10, !dbg !16555
  br i1 %130, label %if.then.i453, label %if.else.i458, !dbg !16556

if.then.i453:                                     ; preds = %do.end155
  %131 = load i32, i32* %m.addr.i451, align 4, !dbg !16557
  %cmp.i452 = icmp slt i32 %131, 0, !dbg !16558
  br i1 %cmp.i452, label %if.then1.i454, label %if.end.i456, !dbg !16559

if.then1.i454:                                    ; preds = %if.then.i453
  store i64 4611686018427387902, i64* %retval.i450, align 8, !dbg !16560
  br label %msecs_to_jiffies.exit459, !dbg !16560

if.end.i456:                                      ; preds = %if.then.i453
  %132 = load i32, i32* %m.addr.i451, align 4, !dbg !16561
  %call.i455 = call i64 @_msecs_to_jiffies(i32 %132) #14, !dbg !16562
  store i64 %call.i455, i64* %retval.i450, align 8, !dbg !16563
  br label %msecs_to_jiffies.exit459, !dbg !16563

if.else.i458:                                     ; preds = %do.end155
  %133 = load i32, i32* %m.addr.i451, align 4, !dbg !16564
  %call2.i457 = call i64 @__msecs_to_jiffies(i32 %133) #14, !dbg !16565
  store i64 %call2.i457, i64* %retval.i450, align 8, !dbg !16566
  br label %msecs_to_jiffies.exit459, !dbg !16566

msecs_to_jiffies.exit459:                         ; preds = %if.then1.i454, %if.end.i456, %if.else.i458
  %134 = load i64, i64* %retval.i450, align 8, !dbg !16567
  %add176 = add i64 %128, %134, !dbg !16568
  store i64 %add176, i64* %EndTime, align 8, !dbg !16569
  br label %for.cond177, !dbg !16570

for.cond177:                                      ; preds = %if.end229, %msecs_to_jiffies.exit459
  %135 = load i64, i64* %EndTime, align 8, !dbg !16571
  %136 = load volatile i64, i64* @jiffies, align 8, !dbg !16571
  %sub178 = sub i64 %135, %136, !dbg !16571
  %cmp179 = icmp slt i64 %sub178, 0, !dbg !16571
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !16573

if.then181:                                       ; preds = %for.cond177
  store i8 0, i8* %rc, align 1, !dbg !16574
  br label %for.end230, !dbg !16576

if.end182:                                        ; preds = %for.cond177
  br label %do.body183, !dbg !16577

do.body183:                                       ; preds = %if.end182
  br label %do.body184, !dbg !16578

do.body184:                                       ; preds = %do.body183
  call void @llvm.dbg.declare(metadata i64* %__dummy185, metadata !16579, metadata !DIExpression()), !dbg !16581
  call void @llvm.dbg.declare(metadata i64* %__dummy2186, metadata !16582, metadata !DIExpression()), !dbg !16581
  %cmp187 = icmp eq i64* %__dummy185, %__dummy2186, !dbg !16581
  %conv188 = zext i1 %cmp187 to i32, !dbg !16581
  store i32 1, i32* %tmp189, align 4, !dbg !16581
  %137 = load i32, i32* %tmp189, align 4, !dbg !16581
  br label %do.body190, !dbg !16583

do.body190:                                       ; preds = %do.body184
  br label %do.body191, !dbg !16584

do.body191:                                       ; preds = %do.body190
  br label %do.body192, !dbg !16585

do.body192:                                       ; preds = %do.body191
  call void @llvm.dbg.declare(metadata i64* %__dummy193, metadata !16587, metadata !DIExpression()), !dbg !16590
  call void @llvm.dbg.declare(metadata i64* %__dummy2194, metadata !16591, metadata !DIExpression()), !dbg !16590
  %cmp195 = icmp eq i64* %__dummy193, %__dummy2194, !dbg !16590
  %conv196 = zext i1 %cmp195 to i32, !dbg !16590
  store i32 1, i32* %tmp197, align 4, !dbg !16590
  %138 = load i32, i32* %tmp197, align 4, !dbg !16590
  %call198 = call i64 @arch_local_irq_save() #11, !dbg !16592
  store i64 %call198, i64* %flags, align 8, !dbg !16592
  br label %do.end199, !dbg !16592

do.end199:                                        ; preds = %do.body192
  br label %do.end200, !dbg !16585

do.end200:                                        ; preds = %do.end199
  br label %do.body201, !dbg !16584

do.body201:                                       ; preds = %do.end200
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16593, !srcloc !16594
  br label %do.body202, !dbg !16593

do.body202:                                       ; preds = %do.body201
  %139 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16595
  %irq_spinlock203 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %139, i32 0, i32 17, !dbg !16595
  store %struct.spinlock* %irq_spinlock203, %struct.spinlock** %lock.addr.i460, align 8
  %140 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i460, align 8, !dbg !16596
  %141 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %140, i32 0, i32 0, !dbg !16597
  %rlock.i461 = bitcast %union.anon.1* %141 to %struct.raw_spinlock*, !dbg !16597
  br label %do.end205, !dbg !16595

do.end205:                                        ; preds = %do.body202
  br label %do.end206, !dbg !16593

do.end206:                                        ; preds = %do.end205
  br label %do.end207, !dbg !16584

do.end207:                                        ; preds = %do.end206
  br label %do.end208, !dbg !16583

do.end208:                                        ; preds = %do.end207
  br label %do.end209, !dbg !16578

do.end209:                                        ; preds = %do.end208
  %142 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16598
  %call210 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %142, i16 zeroext 54) #11, !dbg !16599
  %conv211 = zext i16 %call210 to i32, !dbg !16599
  %shr212 = ashr i32 %conv211, 8, !dbg !16600
  %conv213 = trunc i32 %shr212 to i16, !dbg !16599
  store i16 %conv213, i16* %FifoLevel, align 2, !dbg !16601
  %143 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16602
  %irq_spinlock214 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %143, i32 0, i32 17, !dbg !16603
  %144 = load i64, i64* %flags, align 8, !dbg !16604
  store %struct.spinlock* %irq_spinlock214, %struct.spinlock** %lock.addr.i462, align 8
  store i64 %144, i64* %flags.addr.i463, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16605
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16605
  store i32 1, i32* %tmp.i464, align 4, !dbg !16605
  %145 = load i32, i32* %tmp.i464, align 4, !dbg !16605
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16606
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16606
  store i32 1, i32* %tmp8.i465, align 4, !dbg !16606
  %146 = load i32, i32* %tmp8.i465, align 4, !dbg !16606
  %147 = load i64, i64* %flags.addr.i463, align 8, !dbg !16607
  call void @arch_local_irq_restore(i64 %147) #14, !dbg !16607
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16608, !srcloc !9373
  %148 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i462, align 8, !dbg !16609
  %149 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %148, i32 0, i32 0, !dbg !16609
  %rlock.i466 = bitcast %union.anon.1* %149 to %struct.raw_spinlock*, !dbg !16609
  %150 = load i16, i16* %FifoLevel, align 2, !dbg !16610
  %conv215 = zext i16 %150 to i32, !dbg !16610
  %cmp216 = icmp slt i32 %conv215, 16, !dbg !16612
  br i1 %cmp216, label %if.then218, label %if.else, !dbg !16613

if.then218:                                       ; preds = %do.end209
  br label %for.end230, !dbg !16614

if.else:                                          ; preds = %do.end209
  %151 = load i32, i32* %FrameSize, align 4, !dbg !16615
  %cmp219 = icmp ult i32 %151, 32, !dbg !16617
  br i1 %cmp219, label %if.then221, label %if.end228, !dbg !16618

if.then221:                                       ; preds = %if.else
  %152 = load i16, i16* %FifoLevel, align 2, !dbg !16619
  %conv222 = zext i16 %152 to i32, !dbg !16619
  %153 = load i32, i32* %FrameSize, align 4, !dbg !16622
  %sub223 = sub i32 32, %153, !dbg !16623
  %cmp224 = icmp ule i32 %conv222, %sub223, !dbg !16624
  br i1 %cmp224, label %if.then226, label %if.end227, !dbg !16625

if.then226:                                       ; preds = %if.then221
  br label %for.end230, !dbg !16626

if.end227:                                        ; preds = %if.then221
  br label %if.end228, !dbg !16627

if.end228:                                        ; preds = %if.end227, %if.else
  br label %if.end229

if.end229:                                        ; preds = %if.end228
  br label %for.cond177, !dbg !16628, !llvm.loop !16629

for.end230:                                       ; preds = %if.then226, %if.then218, %if.then181
  %154 = load i8, i8* %rc, align 1, !dbg !16632
  %tobool231 = trunc i8 %154 to i1, !dbg !16632
  br i1 %tobool231, label %if.then232, label %if.end338, !dbg !16633

if.then232:                                       ; preds = %for.end230
  br label %do.body233, !dbg !16634

do.body233:                                       ; preds = %if.then232
  br label %do.body234, !dbg !16635

do.body234:                                       ; preds = %do.body233
  call void @llvm.dbg.declare(metadata i64* %__dummy235, metadata !16636, metadata !DIExpression()), !dbg !16638
  call void @llvm.dbg.declare(metadata i64* %__dummy2236, metadata !16639, metadata !DIExpression()), !dbg !16638
  %cmp237 = icmp eq i64* %__dummy235, %__dummy2236, !dbg !16638
  %conv238 = zext i1 %cmp237 to i32, !dbg !16638
  store i32 1, i32* %tmp239, align 4, !dbg !16638
  %155 = load i32, i32* %tmp239, align 4, !dbg !16638
  br label %do.body240, !dbg !16640

do.body240:                                       ; preds = %do.body234
  br label %do.body241, !dbg !16641

do.body241:                                       ; preds = %do.body240
  br label %do.body242, !dbg !16642

do.body242:                                       ; preds = %do.body241
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !16644, metadata !DIExpression()), !dbg !16647
  call void @llvm.dbg.declare(metadata i64* %__dummy2244, metadata !16648, metadata !DIExpression()), !dbg !16647
  %cmp245 = icmp eq i64* %__dummy243, %__dummy2244, !dbg !16647
  %conv246 = zext i1 %cmp245 to i32, !dbg !16647
  store i32 1, i32* %tmp247, align 4, !dbg !16647
  %156 = load i32, i32* %tmp247, align 4, !dbg !16647
  %call248 = call i64 @arch_local_irq_save() #11, !dbg !16649
  store i64 %call248, i64* %flags, align 8, !dbg !16649
  br label %do.end249, !dbg !16649

do.end249:                                        ; preds = %do.body242
  br label %do.end250, !dbg !16642

do.end250:                                        ; preds = %do.end249
  br label %do.body251, !dbg !16641

do.body251:                                       ; preds = %do.end250
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16650, !srcloc !16651
  br label %do.body252, !dbg !16650

do.body252:                                       ; preds = %do.body251
  %157 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16652
  %irq_spinlock253 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %157, i32 0, i32 17, !dbg !16652
  store %struct.spinlock* %irq_spinlock253, %struct.spinlock** %lock.addr.i467, align 8
  %158 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i467, align 8, !dbg !16653
  %159 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %158, i32 0, i32 0, !dbg !16654
  %rlock.i468 = bitcast %union.anon.1* %159 to %struct.raw_spinlock*, !dbg !16654
  br label %do.end255, !dbg !16652

do.end255:                                        ; preds = %do.body252
  br label %do.end256, !dbg !16650

do.end256:                                        ; preds = %do.end255
  br label %do.end257, !dbg !16641

do.end257:                                        ; preds = %do.end256
  br label %do.end258, !dbg !16640

do.end258:                                        ; preds = %do.end257
  br label %do.end259, !dbg !16635

do.end259:                                        ; preds = %do.end258
  %160 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16655
  %161 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16655
  %tcsr_value260 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %161, i32 0, i32 55, !dbg !16655
  %162 = load i16, i16* %tcsr_value260, align 2, !dbg !16655
  %conv261 = zext i16 %162 to i32, !dbg !16655
  %add262 = add i32 %conv261, 32768, !dbg !16655
  %conv263 = trunc i32 %add262 to i16, !dbg !16655
  call void @usc_OutReg(%struct.mgsl_struct* %160, i16 zeroext 52, i16 zeroext %conv263) #11, !dbg !16655
  %163 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16656
  %164 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16657
  %call264 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %164, i16 zeroext 50) #11, !dbg !16658
  %conv265 = zext i16 %call264 to i32, !dbg !16658
  %and266 = and i32 %conv265, 65532, !dbg !16659
  %or267 = or i32 %and266, 2, !dbg !16660
  %conv268 = trunc i32 %or267 to i16, !dbg !16661
  call void @usc_OutReg(%struct.mgsl_struct* %163, i16 zeroext 50, i16 zeroext %conv268) #11, !dbg !16662
  %165 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16663
  %irq_spinlock269 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %165, i32 0, i32 17, !dbg !16664
  %166 = load i64, i64* %flags, align 8, !dbg !16665
  store %struct.spinlock* %irq_spinlock269, %struct.spinlock** %lock.addr.i469, align 8
  store i64 %166, i64* %flags.addr.i470, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16666
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16666
  store i32 1, i32* %tmp.i471, align 4, !dbg !16666
  %167 = load i32, i32* %tmp.i471, align 4, !dbg !16666
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16667
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16667
  store i32 1, i32* %tmp8.i472, align 4, !dbg !16667
  %168 = load i32, i32* %tmp8.i472, align 4, !dbg !16667
  %169 = load i64, i64* %flags.addr.i470, align 8, !dbg !16668
  call void @arch_local_irq_restore(i64 %169) #14, !dbg !16668
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16669, !srcloc !9373
  %170 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i469, align 8, !dbg !16670
  %171 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %170, i32 0, i32 0, !dbg !16670
  %rlock.i473 = bitcast %union.anon.1* %171 to %struct.raw_spinlock*, !dbg !16670
  %172 = load volatile i64, i64* @jiffies, align 8, !dbg !16671
  store i32 100, i32* %m.addr.i475, align 4
  %173 = load i32, i32* %m.addr.i475, align 4, !dbg !16672
  %174 = call i1 @llvm.is.constant.i32(i32 %173) #10, !dbg !16673
  br i1 %174, label %if.then.i477, label %if.else.i482, !dbg !16674

if.then.i477:                                     ; preds = %do.end259
  %175 = load i32, i32* %m.addr.i475, align 4, !dbg !16675
  %cmp.i476 = icmp slt i32 %175, 0, !dbg !16676
  br i1 %cmp.i476, label %if.then1.i478, label %if.end.i480, !dbg !16677

if.then1.i478:                                    ; preds = %if.then.i477
  store i64 4611686018427387902, i64* %retval.i474, align 8, !dbg !16678
  br label %msecs_to_jiffies.exit483, !dbg !16678

if.end.i480:                                      ; preds = %if.then.i477
  %176 = load i32, i32* %m.addr.i475, align 4, !dbg !16679
  %call.i479 = call i64 @_msecs_to_jiffies(i32 %176) #14, !dbg !16680
  store i64 %call.i479, i64* %retval.i474, align 8, !dbg !16681
  br label %msecs_to_jiffies.exit483, !dbg !16681

if.else.i482:                                     ; preds = %do.end259
  %177 = load i32, i32* %m.addr.i475, align 4, !dbg !16682
  %call2.i481 = call i64 @__msecs_to_jiffies(i32 %177) #14, !dbg !16683
  store i64 %call2.i481, i64* %retval.i474, align 8, !dbg !16684
  br label %msecs_to_jiffies.exit483, !dbg !16684

msecs_to_jiffies.exit483:                         ; preds = %if.then1.i478, %if.end.i480, %if.else.i482
  %178 = load i64, i64* %retval.i474, align 8, !dbg !16685
  %add271 = add i64 %172, %178, !dbg !16686
  store i64 %add271, i64* %EndTime, align 8, !dbg !16687
  br label %do.body272, !dbg !16688

do.body272:                                       ; preds = %msecs_to_jiffies.exit483
  br label %do.body273, !dbg !16689

do.body273:                                       ; preds = %do.body272
  call void @llvm.dbg.declare(metadata i64* %__dummy274, metadata !16690, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.declare(metadata i64* %__dummy2275, metadata !16693, metadata !DIExpression()), !dbg !16692
  %cmp276 = icmp eq i64* %__dummy274, %__dummy2275, !dbg !16692
  %conv277 = zext i1 %cmp276 to i32, !dbg !16692
  store i32 1, i32* %tmp278, align 4, !dbg !16692
  %179 = load i32, i32* %tmp278, align 4, !dbg !16692
  br label %do.body279, !dbg !16694

do.body279:                                       ; preds = %do.body273
  br label %do.body280, !dbg !16695

do.body280:                                       ; preds = %do.body279
  br label %do.body281, !dbg !16696

do.body281:                                       ; preds = %do.body280
  call void @llvm.dbg.declare(metadata i64* %__dummy282, metadata !16698, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.declare(metadata i64* %__dummy2283, metadata !16702, metadata !DIExpression()), !dbg !16701
  %cmp284 = icmp eq i64* %__dummy282, %__dummy2283, !dbg !16701
  %conv285 = zext i1 %cmp284 to i32, !dbg !16701
  store i32 1, i32* %tmp286, align 4, !dbg !16701
  %180 = load i32, i32* %tmp286, align 4, !dbg !16701
  %call287 = call i64 @arch_local_irq_save() #11, !dbg !16703
  store i64 %call287, i64* %flags, align 8, !dbg !16703
  br label %do.end288, !dbg !16703

do.end288:                                        ; preds = %do.body281
  br label %do.end289, !dbg !16696

do.end289:                                        ; preds = %do.end288
  br label %do.body290, !dbg !16695

do.body290:                                       ; preds = %do.end289
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16704, !srcloc !16705
  br label %do.body291, !dbg !16704

do.body291:                                       ; preds = %do.body290
  %181 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16706
  %irq_spinlock292 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %181, i32 0, i32 17, !dbg !16706
  store %struct.spinlock* %irq_spinlock292, %struct.spinlock** %lock.addr.i484, align 8
  %182 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i484, align 8, !dbg !16707
  %183 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %182, i32 0, i32 0, !dbg !16708
  %rlock.i485 = bitcast %union.anon.1* %183 to %struct.raw_spinlock*, !dbg !16708
  br label %do.end294, !dbg !16706

do.end294:                                        ; preds = %do.body291
  br label %do.end295, !dbg !16704

do.end295:                                        ; preds = %do.end294
  br label %do.end296, !dbg !16695

do.end296:                                        ; preds = %do.end295
  br label %do.end297, !dbg !16694

do.end297:                                        ; preds = %do.end296
  br label %do.end298, !dbg !16689

do.end298:                                        ; preds = %do.end297
  %184 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16709
  %call299 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %184, i16 zeroext 52) #11, !dbg !16710
  store i16 %call299, i16* %status, align 2, !dbg !16711
  %185 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16712
  %irq_spinlock300 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %185, i32 0, i32 17, !dbg !16713
  %186 = load i64, i64* %flags, align 8, !dbg !16714
  store %struct.spinlock* %irq_spinlock300, %struct.spinlock** %lock.addr.i486, align 8
  store i64 %186, i64* %flags.addr.i487, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16715
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16715
  store i32 1, i32* %tmp.i488, align 4, !dbg !16715
  %187 = load i32, i32* %tmp.i488, align 4, !dbg !16715
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16716
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16716
  store i32 1, i32* %tmp8.i489, align 4, !dbg !16716
  %188 = load i32, i32* %tmp8.i489, align 4, !dbg !16716
  %189 = load i64, i64* %flags.addr.i487, align 8, !dbg !16717
  call void @arch_local_irq_restore(i64 %189) #14, !dbg !16717
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16718, !srcloc !9373
  %190 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i486, align 8, !dbg !16719
  %191 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %190, i32 0, i32 0, !dbg !16719
  %rlock.i490 = bitcast %union.anon.1* %191 to %struct.raw_spinlock*, !dbg !16719
  br label %while.cond, !dbg !16720

while.cond:                                       ; preds = %do.end335, %do.end298
  %192 = load i16, i16* %status, align 2, !dbg !16721
  %conv301 = zext i16 %192 to i32, !dbg !16721
  %and302 = and i32 %conv301, 118, !dbg !16722
  %tobool303 = icmp ne i32 %and302, 0, !dbg !16723
  %lnot = xor i1 %tobool303, true, !dbg !16723
  br i1 %lnot, label %while.body, label %while.end, !dbg !16720

while.body:                                       ; preds = %while.cond
  %193 = load i64, i64* %EndTime, align 8, !dbg !16724
  %194 = load volatile i64, i64* @jiffies, align 8, !dbg !16724
  %sub304 = sub i64 %193, %194, !dbg !16724
  %cmp305 = icmp slt i64 %sub304, 0, !dbg !16724
  br i1 %cmp305, label %if.then307, label %if.end308, !dbg !16726

if.then307:                                       ; preds = %while.body
  store i8 0, i8* %rc, align 1, !dbg !16727
  br label %while.end, !dbg !16729

if.end308:                                        ; preds = %while.body
  br label %do.body309, !dbg !16730

do.body309:                                       ; preds = %if.end308
  br label %do.body310, !dbg !16731

do.body310:                                       ; preds = %do.body309
  call void @llvm.dbg.declare(metadata i64* %__dummy311, metadata !16732, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.declare(metadata i64* %__dummy2312, metadata !16735, metadata !DIExpression()), !dbg !16734
  %cmp313 = icmp eq i64* %__dummy311, %__dummy2312, !dbg !16734
  %conv314 = zext i1 %cmp313 to i32, !dbg !16734
  store i32 1, i32* %tmp315, align 4, !dbg !16734
  %195 = load i32, i32* %tmp315, align 4, !dbg !16734
  br label %do.body316, !dbg !16736

do.body316:                                       ; preds = %do.body310
  br label %do.body317, !dbg !16737

do.body317:                                       ; preds = %do.body316
  br label %do.body318, !dbg !16738

do.body318:                                       ; preds = %do.body317
  call void @llvm.dbg.declare(metadata i64* %__dummy319, metadata !16740, metadata !DIExpression()), !dbg !16743
  call void @llvm.dbg.declare(metadata i64* %__dummy2320, metadata !16744, metadata !DIExpression()), !dbg !16743
  %cmp321 = icmp eq i64* %__dummy319, %__dummy2320, !dbg !16743
  %conv322 = zext i1 %cmp321 to i32, !dbg !16743
  store i32 1, i32* %tmp323, align 4, !dbg !16743
  %196 = load i32, i32* %tmp323, align 4, !dbg !16743
  %call324 = call i64 @arch_local_irq_save() #11, !dbg !16745
  store i64 %call324, i64* %flags, align 8, !dbg !16745
  br label %do.end325, !dbg !16745

do.end325:                                        ; preds = %do.body318
  br label %do.end326, !dbg !16738

do.end326:                                        ; preds = %do.end325
  br label %do.body327, !dbg !16737

do.body327:                                       ; preds = %do.end326
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16746, !srcloc !16747
  br label %do.body328, !dbg !16746

do.body328:                                       ; preds = %do.body327
  %197 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16748
  %irq_spinlock329 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %197, i32 0, i32 17, !dbg !16748
  store %struct.spinlock* %irq_spinlock329, %struct.spinlock** %lock.addr.i491, align 8
  %198 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i491, align 8, !dbg !16749
  %199 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %198, i32 0, i32 0, !dbg !16750
  %rlock.i492 = bitcast %union.anon.1* %199 to %struct.raw_spinlock*, !dbg !16750
  br label %do.end331, !dbg !16748

do.end331:                                        ; preds = %do.body328
  br label %do.end332, !dbg !16746

do.end332:                                        ; preds = %do.end331
  br label %do.end333, !dbg !16737

do.end333:                                        ; preds = %do.end332
  br label %do.end334, !dbg !16736

do.end334:                                        ; preds = %do.end333
  br label %do.end335, !dbg !16731

do.end335:                                        ; preds = %do.end334
  %200 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16751
  %call336 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %200, i16 zeroext 52) #11, !dbg !16752
  store i16 %call336, i16* %status, align 2, !dbg !16753
  %201 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16754
  %irq_spinlock337 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %201, i32 0, i32 17, !dbg !16755
  %202 = load i64, i64* %flags, align 8, !dbg !16756
  store %struct.spinlock* %irq_spinlock337, %struct.spinlock** %lock.addr.i493, align 8
  store i64 %202, i64* %flags.addr.i494, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16757
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16757
  store i32 1, i32* %tmp.i495, align 4, !dbg !16757
  %203 = load i32, i32* %tmp.i495, align 4, !dbg !16757
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16758
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16758
  store i32 1, i32* %tmp8.i496, align 4, !dbg !16758
  %204 = load i32, i32* %tmp8.i496, align 4, !dbg !16758
  %205 = load i64, i64* %flags.addr.i494, align 8, !dbg !16759
  call void @arch_local_irq_restore(i64 %205) #14, !dbg !16759
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16760, !srcloc !9373
  %206 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i493, align 8, !dbg !16761
  %207 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %206, i32 0, i32 0, !dbg !16761
  %rlock.i497 = bitcast %union.anon.1* %207 to %struct.raw_spinlock*, !dbg !16761
  br label %while.cond, !dbg !16720, !llvm.loop !16762

while.end:                                        ; preds = %if.then307, %while.cond
  br label %if.end338, !dbg !16764

if.end338:                                        ; preds = %while.end, %for.end230
  %208 = load i8, i8* %rc, align 1, !dbg !16765
  %tobool339 = trunc i8 %208 to i1, !dbg !16765
  br i1 %tobool339, label %if.then340, label %if.end346, !dbg !16767

if.then340:                                       ; preds = %if.end338
  %209 = load i16, i16* %status, align 2, !dbg !16768
  %conv341 = zext i16 %209 to i32, !dbg !16768
  %and342 = and i32 %conv341, 34, !dbg !16771
  %tobool343 = icmp ne i32 %and342, 0, !dbg !16771
  br i1 %tobool343, label %if.then344, label %if.end345, !dbg !16772

if.then344:                                       ; preds = %if.then340
  store i8 0, i8* %rc, align 1, !dbg !16773
  br label %if.end345, !dbg !16774

if.end345:                                        ; preds = %if.then344, %if.then340
  br label %if.end346, !dbg !16775

if.end346:                                        ; preds = %if.end345, %if.end338
  %210 = load i8, i8* %rc, align 1, !dbg !16776
  %tobool347 = trunc i8 %210 to i1, !dbg !16776
  br i1 %tobool347, label %if.then348, label %if.end368, !dbg !16777

if.then348:                                       ; preds = %if.end346
  %211 = load volatile i64, i64* @jiffies, align 8, !dbg !16778
  store i32 100, i32* %m.addr.i499, align 4
  %212 = load i32, i32* %m.addr.i499, align 4, !dbg !16779
  %213 = call i1 @llvm.is.constant.i32(i32 %212) #10, !dbg !16780
  br i1 %213, label %if.then.i501, label %if.else.i506, !dbg !16781

if.then.i501:                                     ; preds = %if.then348
  %214 = load i32, i32* %m.addr.i499, align 4, !dbg !16782
  %cmp.i500 = icmp slt i32 %214, 0, !dbg !16783
  br i1 %cmp.i500, label %if.then1.i502, label %if.end.i504, !dbg !16784

if.then1.i502:                                    ; preds = %if.then.i501
  store i64 4611686018427387902, i64* %retval.i498, align 8, !dbg !16785
  br label %msecs_to_jiffies.exit507, !dbg !16785

if.end.i504:                                      ; preds = %if.then.i501
  %215 = load i32, i32* %m.addr.i499, align 4, !dbg !16786
  %call.i503 = call i64 @_msecs_to_jiffies(i32 %215) #14, !dbg !16787
  store i64 %call.i503, i64* %retval.i498, align 8, !dbg !16788
  br label %msecs_to_jiffies.exit507, !dbg !16788

if.else.i506:                                     ; preds = %if.then348
  %216 = load i32, i32* %m.addr.i499, align 4, !dbg !16789
  %call2.i505 = call i64 @__msecs_to_jiffies(i32 %216) #14, !dbg !16790
  store i64 %call2.i505, i64* %retval.i498, align 8, !dbg !16791
  br label %msecs_to_jiffies.exit507, !dbg !16791

msecs_to_jiffies.exit507:                         ; preds = %if.then1.i502, %if.end.i504, %if.else.i506
  %217 = load i64, i64* %retval.i498, align 8, !dbg !16792
  %add350 = add i64 %211, %217, !dbg !16793
  store i64 %add350, i64* %EndTime, align 8, !dbg !16794
  %218 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16795
  %rx_buffer_list351 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %218, i32 0, i32 34, !dbg !16796
  %219 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list351, align 8, !dbg !16796
  %arrayidx352 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %219, i64 0, !dbg !16795
  %status353 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx352, i32 0, i32 2, !dbg !16797
  %220 = load volatile i16, i16* %status353, align 2, !dbg !16797
  store i16 %220, i16* %status, align 2, !dbg !16798
  br label %while.cond354, !dbg !16799

while.cond354:                                    ; preds = %if.end363, %msecs_to_jiffies.exit507
  %221 = load i16, i16* %status, align 2, !dbg !16800
  %conv355 = zext i16 %221 to i32, !dbg !16800
  %cmp356 = icmp eq i32 %conv355, 0, !dbg !16801
  br i1 %cmp356, label %while.body358, label %while.end367, !dbg !16799

while.body358:                                    ; preds = %while.cond354
  %222 = load i64, i64* %EndTime, align 8, !dbg !16802
  %223 = load volatile i64, i64* @jiffies, align 8, !dbg !16802
  %sub359 = sub i64 %222, %223, !dbg !16802
  %cmp360 = icmp slt i64 %sub359, 0, !dbg !16802
  br i1 %cmp360, label %if.then362, label %if.end363, !dbg !16805

if.then362:                                       ; preds = %while.body358
  store i8 0, i8* %rc, align 1, !dbg !16806
  br label %while.end367, !dbg !16808

if.end363:                                        ; preds = %while.body358
  %224 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16809
  %rx_buffer_list364 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %224, i32 0, i32 34, !dbg !16810
  %225 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list364, align 8, !dbg !16810
  %arrayidx365 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %225, i64 0, !dbg !16809
  %status366 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx365, i32 0, i32 2, !dbg !16811
  %226 = load volatile i16, i16* %status366, align 2, !dbg !16811
  store i16 %226, i16* %status, align 2, !dbg !16812
  br label %while.cond354, !dbg !16799, !llvm.loop !16813

while.end367:                                     ; preds = %if.then362, %while.cond354
  br label %if.end368, !dbg !16815

if.end368:                                        ; preds = %while.end367, %if.end346
  %227 = load i8, i8* %rc, align 1, !dbg !16816
  %tobool369 = trunc i8 %227 to i1, !dbg !16816
  br i1 %tobool369, label %if.then370, label %if.end391, !dbg !16818

if.then370:                                       ; preds = %if.end368
  %228 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16819
  %rx_buffer_list371 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %228, i32 0, i32 34, !dbg !16821
  %229 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list371, align 8, !dbg !16821
  %arrayidx372 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %229, i64 0, !dbg !16819
  %status373 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx372, i32 0, i32 2, !dbg !16822
  %230 = load volatile i16, i16* %status373, align 2, !dbg !16822
  store i16 %230, i16* %status, align 2, !dbg !16823
  %231 = load i16, i16* %status, align 2, !dbg !16824
  %conv374 = zext i16 %231 to i32, !dbg !16824
  %and375 = and i32 %conv374, 266, !dbg !16826
  %tobool376 = icmp ne i32 %and375, 0, !dbg !16826
  br i1 %tobool376, label %if.then377, label %if.else378, !dbg !16827

if.then377:                                       ; preds = %if.then370
  store i8 0, i8* %rc, align 1, !dbg !16828
  br label %if.end390, !dbg !16830

if.else378:                                       ; preds = %if.then370
  %232 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16831
  %tx_buffer_list379 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %232, i32 0, i32 39, !dbg !16834
  %233 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %tx_buffer_list379, align 8, !dbg !16834
  %arrayidx380 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %233, i64 0, !dbg !16831
  %virt_addr381 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx380, i32 0, i32 6, !dbg !16835
  %234 = load i8*, i8** %virt_addr381, align 8, !dbg !16835
  %235 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16836
  %rx_buffer_list382 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %235, i32 0, i32 34, !dbg !16837
  %236 = load %struct._DMABUFFERENTRY*, %struct._DMABUFFERENTRY** %rx_buffer_list382, align 8, !dbg !16837
  %arrayidx383 = getelementptr %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %236, i64 0, !dbg !16836
  %virt_addr384 = getelementptr inbounds %struct._DMABUFFERENTRY, %struct._DMABUFFERENTRY* %arrayidx383, i32 0, i32 6, !dbg !16838
  %237 = load i8*, i8** %virt_addr384, align 8, !dbg !16838
  %238 = load i32, i32* %FrameSize, align 4, !dbg !16839
  %conv385 = zext i32 %238 to i64, !dbg !16839
  %call386 = call i32 @memcmp(i8* %234, i8* %237, i64 %conv385) #11, !dbg !16840
  %tobool387 = icmp ne i32 %call386, 0, !dbg !16840
  br i1 %tobool387, label %if.then388, label %if.end389, !dbg !16841

if.then388:                                       ; preds = %if.else378
  store i8 0, i8* %rc, align 1, !dbg !16842
  br label %if.end389, !dbg !16844

if.end389:                                        ; preds = %if.then388, %if.else378
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then377
  br label %if.end391, !dbg !16845

if.end391:                                        ; preds = %if.end390, %if.end368
  br label %do.body392, !dbg !16846

do.body392:                                       ; preds = %if.end391
  br label %do.body393, !dbg !16847

do.body393:                                       ; preds = %do.body392
  call void @llvm.dbg.declare(metadata i64* %__dummy394, metadata !16848, metadata !DIExpression()), !dbg !16850
  call void @llvm.dbg.declare(metadata i64* %__dummy2395, metadata !16851, metadata !DIExpression()), !dbg !16850
  %cmp396 = icmp eq i64* %__dummy394, %__dummy2395, !dbg !16850
  %conv397 = zext i1 %cmp396 to i32, !dbg !16850
  store i32 1, i32* %tmp398, align 4, !dbg !16850
  %239 = load i32, i32* %tmp398, align 4, !dbg !16850
  br label %do.body399, !dbg !16852

do.body399:                                       ; preds = %do.body393
  br label %do.body400, !dbg !16853

do.body400:                                       ; preds = %do.body399
  br label %do.body401, !dbg !16854

do.body401:                                       ; preds = %do.body400
  call void @llvm.dbg.declare(metadata i64* %__dummy402, metadata !16856, metadata !DIExpression()), !dbg !16859
  call void @llvm.dbg.declare(metadata i64* %__dummy2403, metadata !16860, metadata !DIExpression()), !dbg !16859
  %cmp404 = icmp eq i64* %__dummy402, %__dummy2403, !dbg !16859
  %conv405 = zext i1 %cmp404 to i32, !dbg !16859
  store i32 1, i32* %tmp406, align 4, !dbg !16859
  %240 = load i32, i32* %tmp406, align 4, !dbg !16859
  %call407 = call i64 @arch_local_irq_save() #11, !dbg !16861
  store i64 %call407, i64* %flags, align 8, !dbg !16861
  br label %do.end408, !dbg !16861

do.end408:                                        ; preds = %do.body401
  br label %do.end409, !dbg !16854

do.end409:                                        ; preds = %do.end408
  br label %do.body410, !dbg !16853

do.body410:                                       ; preds = %do.end409
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16862, !srcloc !16863
  br label %do.body411, !dbg !16862

do.body411:                                       ; preds = %do.body410
  %241 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16864
  %irq_spinlock412 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %241, i32 0, i32 17, !dbg !16864
  store %struct.spinlock* %irq_spinlock412, %struct.spinlock** %lock.addr.i508, align 8
  %242 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i508, align 8, !dbg !16865
  %243 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %242, i32 0, i32 0, !dbg !16866
  %rlock.i509 = bitcast %union.anon.1* %243 to %struct.raw_spinlock*, !dbg !16866
  br label %do.end414, !dbg !16864

do.end414:                                        ; preds = %do.body411
  br label %do.end415, !dbg !16862

do.end415:                                        ; preds = %do.end414
  br label %do.end416, !dbg !16853

do.end416:                                        ; preds = %do.end415
  br label %do.end417, !dbg !16852

do.end417:                                        ; preds = %do.end416
  br label %do.end418, !dbg !16847

do.end418:                                        ; preds = %do.end417
  %244 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16867
  call void @usc_reset(%struct.mgsl_struct* %244) #11, !dbg !16868
  %245 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16869
  %irq_spinlock419 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %245, i32 0, i32 17, !dbg !16870
  %246 = load i64, i64* %flags, align 8, !dbg !16871
  store %struct.spinlock* %irq_spinlock419, %struct.spinlock** %lock.addr.i422, align 8
  store i64 %246, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !16872
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !16872
  store i32 1, i32* %tmp.i, align 4, !dbg !16872
  %247 = load i32, i32* %tmp.i, align 4, !dbg !16872
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !16873
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !16873
  store i32 1, i32* %tmp8.i, align 4, !dbg !16873
  %248 = load i32, i32* %tmp8.i, align 4, !dbg !16873
  %249 = load i64, i64* %flags.addr.i, align 8, !dbg !16874
  call void @arch_local_irq_restore(i64 %249) #14, !dbg !16874
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16875, !srcloc !9373
  %250 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i422, align 8, !dbg !16876
  %251 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %250, i32 0, i32 0, !dbg !16876
  %rlock.i423 = bitcast %union.anon.1* %251 to %struct.raw_spinlock*, !dbg !16876
  %252 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16877
  %params420 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %252, i32 0, i32 70, !dbg !16878
  %253 = bitcast %struct._MGSL_PARAMS* %params420 to i8*, !dbg !16879
  %254 = bitcast %struct._MGSL_PARAMS* %tmp_params to i8*, !dbg !16879
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* align 8 %254, i64 48, i1 false), !dbg !16879
  %255 = load i8, i8* %rc, align 1, !dbg !16880
  %tobool421 = trunc i8 %255 to i1, !dbg !16880
  ret i1 %tobool421, !dbg !16881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_reset(%struct.mgsl_struct* %info) #1 !dbg !16882 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %i = alloca i32, align 4
  %readval = alloca i32, align 4
  %MiscCtrl = alloca i32*, align 8
  %LCR0BRDR = alloca i32*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !16883, metadata !DIExpression()), !dbg !16884
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16885, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.declare(metadata i32* %readval, metadata !16887, metadata !DIExpression()), !dbg !16888
  call void @llvm.dbg.declare(metadata i32** %MiscCtrl, metadata !16889, metadata !DIExpression()), !dbg !16892
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16893
  %lcr_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 79, !dbg !16894
  %1 = load i8*, i8** %lcr_base, align 8, !dbg !16894
  %add.ptr = getelementptr i8, i8* %1, i64 80, !dbg !16895
  %2 = bitcast i8* %add.ptr to i32*, !dbg !16896
  store i32* %2, i32** %MiscCtrl, align 8, !dbg !16892
  call void @llvm.dbg.declare(metadata i32** %LCR0BRDR, metadata !16897, metadata !DIExpression()), !dbg !16898
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16899
  %lcr_base1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 79, !dbg !16900
  %4 = load i8*, i8** %lcr_base1, align 8, !dbg !16900
  %add.ptr2 = getelementptr i8, i8* %4, i64 40, !dbg !16901
  %5 = bitcast i8* %add.ptr2 to i32*, !dbg !16902
  store i32* %5, i32** %LCR0BRDR, align 8, !dbg !16898
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16903
  %misc_ctrl_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 83, !dbg !16904
  %7 = load i32, i32* %misc_ctrl_value, align 4, !dbg !16905
  %or = or i32 %7, 1073741824, !dbg !16905
  store i32 %or, i32* %misc_ctrl_value, align 4, !dbg !16905
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16906
  %misc_ctrl_value3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 83, !dbg !16907
  %9 = load i32, i32* %misc_ctrl_value3, align 4, !dbg !16907
  %10 = load i32*, i32** %MiscCtrl, align 8, !dbg !16908
  store volatile i32 %9, i32* %10, align 4, !dbg !16909
  store i32 0, i32* %i, align 4, !dbg !16910
  br label %for.cond, !dbg !16912

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !16913
  %cmp = icmp slt i32 %11, 10, !dbg !16915
  br i1 %cmp, label %for.body, label %for.end, !dbg !16916

for.body:                                         ; preds = %for.cond
  %12 = load i32*, i32** %MiscCtrl, align 8, !dbg !16917
  %13 = load volatile i32, i32* %12, align 4, !dbg !16918
  store i32 %13, i32* %readval, align 4, !dbg !16919
  br label %for.inc, !dbg !16920

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !16921
  %inc = add i32 %14, 1, !dbg !16921
  store i32 %inc, i32* %i, align 4, !dbg !16921
  br label %for.cond, !dbg !16922, !llvm.loop !16923

for.end:                                          ; preds = %for.cond
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16925
  %misc_ctrl_value4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 83, !dbg !16926
  %16 = load i32, i32* %misc_ctrl_value4, align 4, !dbg !16927
  %and = and i32 %16, -1073741825, !dbg !16927
  store i32 %and, i32* %misc_ctrl_value4, align 4, !dbg !16927
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16928
  %misc_ctrl_value5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 83, !dbg !16929
  %18 = load i32, i32* %misc_ctrl_value5, align 4, !dbg !16929
  %19 = load i32*, i32** %MiscCtrl, align 8, !dbg !16930
  store volatile i32 %18, i32* %19, align 4, !dbg !16931
  %20 = load i32*, i32** %LCR0BRDR, align 8, !dbg !16932
  store i32 1749156192, i32* %20, align 4, !dbg !16933
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16934
  %mbre_bit = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 67, !dbg !16935
  store i16 0, i16* %mbre_bit, align 2, !dbg !16936
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16937
  %loopback_bits = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 68, !dbg !16938
  store i16 0, i16* %loopback_bits, align 4, !dbg !16939
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16940
  %usc_idle_mode = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 69, !dbg !16941
  store i16 0, i16* %usc_idle_mode, align 2, !dbg !16942
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16943
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 59, !dbg !16944
  %25 = load i32, i32* %io_base, align 4, !dbg !16944
  %add = add i32 %25, 4, !dbg !16945
  call void @outw(i16 zeroext 12, i32 %add) #11, !dbg !16946
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16947
  %io_base6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 59, !dbg !16948
  %27 = load i32, i32* %io_base6, align 4, !dbg !16948
  call void @outw(i16 zeroext 0, i32 %27) #11, !dbg !16949
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16950
  %io_base7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 59, !dbg !16951
  %29 = load i32, i32* %io_base7, align 4, !dbg !16951
  %add8 = add i32 %29, 4, !dbg !16952
  call void @outw(i16 zeroext 0, i32 %add8) #11, !dbg !16953
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16954
  call void @usc_RTCmd(%struct.mgsl_struct* %30, i16 zeroext -18432) #11, !dbg !16955
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16956
  call void @usc_OutReg(%struct.mgsl_struct* %31, i16 zeroext 10, i16 zeroext -3851) #11, !dbg !16957
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16958
  call void @usc_OutReg(%struct.mgsl_struct* %32, i16 zeroext 22, i16 zeroext 4) #11, !dbg !16959
  ret void, !dbg !16960
}

; Function Attrs: noredzone
declare dso_local i64 @msleep_interruptible(i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_set_sdlc_mode(%struct.mgsl_struct* %info) #1 !dbg !16961 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %RegValue = alloca i16, align 2
  %PreSL1660 = alloca i8, align 1
  %XtalSpeed = alloca i32, align 4
  %DpllDivisor = alloca i32, align 4
  %Tc = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !16962, metadata !DIExpression()), !dbg !16963
  call void @llvm.dbg.declare(metadata i16* %RegValue, metadata !16964, metadata !DIExpression()), !dbg !16965
  call void @llvm.dbg.declare(metadata i8* %PreSL1660, metadata !16966, metadata !DIExpression()), !dbg !16967
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16968
  call void @usc_OutReg(%struct.mgsl_struct* %0, i16 zeroext 14, i16 zeroext 31) #11, !dbg !16969
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16970
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %1, i16 zeroext 12) #11, !dbg !16971
  store i16 %call, i16* %RegValue, align 2, !dbg !16972
  %2 = load i16, i16* %RegValue, align 2, !dbg !16973
  %conv = zext i16 %2 to i32, !dbg !16973
  %cmp = icmp eq i32 %conv, 17747, !dbg !16974
  %frombool = zext i1 %cmp to i8, !dbg !16975
  store i8 %frombool, i8* %PreSL1660, align 1, !dbg !16975
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16976
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 70, !dbg !16978
  %flags = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 2, !dbg !16979
  %4 = load i16, i16* %flags, align 2, !dbg !16979
  %conv2 = zext i16 %4 to i32, !dbg !16976
  %and = and i32 %conv2, 16384, !dbg !16980
  %tobool = icmp ne i32 %and, 0, !dbg !16980
  br i1 %tobool, label %if.then, label %if.else, !dbg !16981

if.then:                                          ; preds = %entry
  store i16 -29178, i16* %RegValue, align 2, !dbg !16982
  br label %if.end56, !dbg !16984

if.else:                                          ; preds = %entry
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16985
  %params3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 70, !dbg !16988
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params3, i32 0, i32 0, !dbg !16989
  %6 = load i64, i64* %mode, align 8, !dbg !16989
  %cmp4 = icmp eq i64 %6, 6, !dbg !16990
  br i1 %cmp4, label %if.then6, label %if.else14, !dbg !16991

if.then6:                                         ; preds = %if.else
  store i16 1, i16* %RegValue, align 2, !dbg !16992
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16994
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !16995
  %call7 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %8, i16 zeroext 22) #11, !dbg !16996
  %conv8 = zext i16 %call7 to i32, !dbg !16996
  %and9 = and i32 %conv8, -12289, !dbg !16997
  %or = or i32 %and9, 4096, !dbg !16998
  %conv10 = trunc i32 %or to i16, !dbg !16999
  call void @usc_OutReg(%struct.mgsl_struct* %7, i16 zeroext 22, i16 zeroext %conv10) #11, !dbg !17000
  %9 = load i16, i16* %RegValue, align 2, !dbg !17001
  %conv11 = zext i16 %9 to i32, !dbg !17001
  %or12 = or i32 %conv11, 1024, !dbg !17001
  %conv13 = trunc i32 %or12 to i16, !dbg !17001
  store i16 %conv13, i16* %RegValue, align 2, !dbg !17001
  br label %if.end46, !dbg !17002

if.else14:                                        ; preds = %if.else
  store i16 1542, i16* %RegValue, align 2, !dbg !17003
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17005
  %params15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 70, !dbg !17007
  %flags16 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params15, i32 0, i32 2, !dbg !17008
  %11 = load i16, i16* %flags16, align 2, !dbg !17008
  %conv17 = zext i16 %11 to i32, !dbg !17005
  %and18 = and i32 %conv17, 1, !dbg !17009
  %tobool19 = icmp ne i32 %and18, 0, !dbg !17009
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !17010

if.then20:                                        ; preds = %if.else14
  %12 = load i16, i16* %RegValue, align 2, !dbg !17011
  %conv21 = zext i16 %12 to i32, !dbg !17011
  %or22 = or i32 %conv21, 16384, !dbg !17011
  %conv23 = trunc i32 %or22 to i16, !dbg !17011
  store i16 %conv23, i16* %RegValue, align 2, !dbg !17011
  br label %if.end45, !dbg !17012

if.else24:                                        ; preds = %if.else14
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17013
  %params25 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 70, !dbg !17015
  %flags26 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params25, i32 0, i32 2, !dbg !17016
  %14 = load i16, i16* %flags26, align 2, !dbg !17016
  %conv27 = zext i16 %14 to i32, !dbg !17013
  %and28 = and i32 %conv27, 2, !dbg !17017
  %tobool29 = icmp ne i32 %and28, 0, !dbg !17017
  br i1 %tobool29, label %if.then30, label %if.else34, !dbg !17018

if.then30:                                        ; preds = %if.else24
  %15 = load i16, i16* %RegValue, align 2, !dbg !17019
  %conv31 = zext i16 %15 to i32, !dbg !17019
  %or32 = or i32 %conv31, 32768, !dbg !17019
  %conv33 = trunc i32 %or32 to i16, !dbg !17019
  store i16 %conv33, i16* %RegValue, align 2, !dbg !17019
  br label %if.end44, !dbg !17020

if.else34:                                        ; preds = %if.else24
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17021
  %params35 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 70, !dbg !17023
  %flags36 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params35, i32 0, i32 2, !dbg !17024
  %17 = load i16, i16* %flags36, align 2, !dbg !17024
  %conv37 = zext i16 %17 to i32, !dbg !17021
  %and38 = and i32 %conv37, 4, !dbg !17025
  %tobool39 = icmp ne i32 %and38, 0, !dbg !17025
  br i1 %tobool39, label %if.then40, label %if.end, !dbg !17026

if.then40:                                        ; preds = %if.else34
  %18 = load i16, i16* %RegValue, align 2, !dbg !17027
  %conv41 = zext i16 %18 to i32, !dbg !17027
  %or42 = or i32 %conv41, 49152, !dbg !17027
  %conv43 = trunc i32 %or42 to i16, !dbg !17027
  store i16 %conv43, i16* %RegValue, align 2, !dbg !17027
  br label %if.end, !dbg !17028

if.end:                                           ; preds = %if.then40, %if.else34
  br label %if.end44

if.end44:                                         ; preds = %if.end, %if.then30
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then20
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then6
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17029
  %params47 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 70, !dbg !17031
  %preamble = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params47, i32 0, i32 8, !dbg !17032
  %20 = load i8, i8* %preamble, align 1, !dbg !17032
  %conv48 = zext i8 %20 to i32, !dbg !17029
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !17033
  br i1 %cmp49, label %if.then51, label %if.end55, !dbg !17034

if.then51:                                        ; preds = %if.end46
  %21 = load i16, i16* %RegValue, align 2, !dbg !17035
  %conv52 = zext i16 %21 to i32, !dbg !17035
  %or53 = or i32 %conv52, 8192, !dbg !17035
  %conv54 = trunc i32 %or53 to i16, !dbg !17035
  store i16 %conv54, i16* %RegValue, align 2, !dbg !17035
  br label %if.end55, !dbg !17036

if.end55:                                         ; preds = %if.then51, %if.end46
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17037
  %params57 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 70, !dbg !17039
  %mode58 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params57, i32 0, i32 0, !dbg !17040
  %23 = load i64, i64* %mode58, align 8, !dbg !17040
  %cmp59 = icmp eq i64 %23, 2, !dbg !17041
  br i1 %cmp59, label %land.lhs.true, label %if.end70, !dbg !17042

land.lhs.true:                                    ; preds = %if.end56
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17043
  %params61 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 70, !dbg !17044
  %flags62 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params61, i32 0, i32 2, !dbg !17045
  %25 = load i16, i16* %flags62, align 2, !dbg !17045
  %conv63 = zext i16 %25 to i32, !dbg !17043
  %and64 = and i32 %conv63, 16, !dbg !17046
  %tobool65 = icmp ne i32 %and64, 0, !dbg !17046
  br i1 %tobool65, label %if.then66, label %if.end70, !dbg !17047

if.then66:                                        ; preds = %land.lhs.true
  %26 = load i16, i16* %RegValue, align 2, !dbg !17048
  %conv67 = zext i16 %26 to i32, !dbg !17048
  %or68 = or i32 %conv67, 4096, !dbg !17048
  %conv69 = trunc i32 %or68 to i16, !dbg !17048
  store i16 %conv69, i16* %RegValue, align 2, !dbg !17048
  br label %if.end70, !dbg !17049

if.end70:                                         ; preds = %if.then66, %land.lhs.true, %if.end56
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17050
  %params71 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 70, !dbg !17052
  %addr_filter = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params71, i32 0, i32 5, !dbg !17053
  %28 = load i8, i8* %addr_filter, align 8, !dbg !17053
  %conv72 = zext i8 %28 to i32, !dbg !17050
  %cmp73 = icmp ne i32 %conv72, 255, !dbg !17054
  br i1 %cmp73, label %if.then75, label %if.end82, !dbg !17055

if.then75:                                        ; preds = %if.end70
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17056
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17058
  %params76 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 70, !dbg !17059
  %addr_filter77 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params76, i32 0, i32 5, !dbg !17060
  %31 = load i8, i8* %addr_filter77, align 8, !dbg !17060
  %conv78 = zext i8 %31 to i16, !dbg !17058
  call void @usc_OutReg(%struct.mgsl_struct* %29, i16 zeroext 40, i16 zeroext %conv78) #11, !dbg !17061
  %32 = load i16, i16* %RegValue, align 2, !dbg !17062
  %conv79 = zext i16 %32 to i32, !dbg !17062
  %or80 = or i32 %conv79, 16, !dbg !17062
  %conv81 = trunc i32 %or80 to i16, !dbg !17062
  store i16 %conv81, i16* %RegValue, align 2, !dbg !17062
  br label %if.end82, !dbg !17063

if.end82:                                         ; preds = %if.then75, %if.end70
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17064
  %34 = load i16, i16* %RegValue, align 2, !dbg !17065
  call void @usc_OutReg(%struct.mgsl_struct* %33, i16 zeroext 2, i16 zeroext %34) #11, !dbg !17066
  %35 = load i16, i16* %RegValue, align 2, !dbg !17067
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17068
  %cmr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %36, i32 0, i32 54, !dbg !17069
  store i16 %35, i16* %cmr_value, align 4, !dbg !17070
  store i16 1280, i16* %RegValue, align 2, !dbg !17071
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17072
  %params83 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 70, !dbg !17073
  %encoding = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params83, i32 0, i32 3, !dbg !17074
  %38 = load i8, i8* %encoding, align 4, !dbg !17074
  %conv84 = zext i8 %38 to i32, !dbg !17072
  switch i32 %conv84, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb88
    i32 3, label %sw.bb92
    i32 4, label %sw.bb96
    i32 5, label %sw.bb100
    i32 6, label %sw.bb104
    i32 7, label %sw.bb108
  ], !dbg !17075

sw.bb:                                            ; preds = %if.end82
  %39 = load i16, i16* %RegValue, align 2, !dbg !17076
  %conv85 = zext i16 %39 to i32, !dbg !17076
  %or86 = or i32 %conv85, 8192, !dbg !17076
  %conv87 = trunc i32 %or86 to i16, !dbg !17076
  store i16 %conv87, i16* %RegValue, align 2, !dbg !17076
  br label %sw.epilog, !dbg !17078

sw.bb88:                                          ; preds = %if.end82
  %40 = load i16, i16* %RegValue, align 2, !dbg !17079
  %conv89 = zext i16 %40 to i32, !dbg !17079
  %or90 = or i32 %conv89, 16384, !dbg !17079
  %conv91 = trunc i32 %or90 to i16, !dbg !17079
  store i16 %conv91, i16* %RegValue, align 2, !dbg !17079
  br label %sw.epilog, !dbg !17080

sw.bb92:                                          ; preds = %if.end82
  %41 = load i16, i16* %RegValue, align 2, !dbg !17081
  %conv93 = zext i16 %41 to i32, !dbg !17081
  %or94 = or i32 %conv93, 24576, !dbg !17081
  %conv95 = trunc i32 %or94 to i16, !dbg !17081
  store i16 %conv95, i16* %RegValue, align 2, !dbg !17081
  br label %sw.epilog, !dbg !17082

sw.bb96:                                          ; preds = %if.end82
  %42 = load i16, i16* %RegValue, align 2, !dbg !17083
  %conv97 = zext i16 %42 to i32, !dbg !17083
  %or98 = or i32 %conv97, 32768, !dbg !17083
  %conv99 = trunc i32 %or98 to i16, !dbg !17083
  store i16 %conv99, i16* %RegValue, align 2, !dbg !17083
  br label %sw.epilog, !dbg !17084

sw.bb100:                                         ; preds = %if.end82
  %43 = load i16, i16* %RegValue, align 2, !dbg !17085
  %conv101 = zext i16 %43 to i32, !dbg !17085
  %or102 = or i32 %conv101, 40960, !dbg !17085
  %conv103 = trunc i32 %or102 to i16, !dbg !17085
  store i16 %conv103, i16* %RegValue, align 2, !dbg !17085
  br label %sw.epilog, !dbg !17086

sw.bb104:                                         ; preds = %if.end82
  %44 = load i16, i16* %RegValue, align 2, !dbg !17087
  %conv105 = zext i16 %44 to i32, !dbg !17087
  %or106 = or i32 %conv105, 49152, !dbg !17087
  %conv107 = trunc i32 %or106 to i16, !dbg !17087
  store i16 %conv107, i16* %RegValue, align 2, !dbg !17087
  br label %sw.epilog, !dbg !17088

sw.bb108:                                         ; preds = %if.end82
  %45 = load i16, i16* %RegValue, align 2, !dbg !17089
  %conv109 = zext i16 %45 to i32, !dbg !17089
  %or110 = or i32 %conv109, 57344, !dbg !17089
  %conv111 = trunc i32 %or110 to i16, !dbg !17089
  store i16 %conv111, i16* %RegValue, align 2, !dbg !17089
  br label %sw.epilog, !dbg !17090

sw.epilog:                                        ; preds = %if.end82, %sw.bb108, %sw.bb104, %sw.bb100, %sw.bb96, %sw.bb92, %sw.bb88, %sw.bb
  %46 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17091
  %params112 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %46, i32 0, i32 70, !dbg !17093
  %crc_type = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params112, i32 0, i32 6, !dbg !17094
  %47 = load i16, i16* %crc_type, align 2, !dbg !17094
  %conv113 = zext i16 %47 to i32, !dbg !17091
  %and114 = and i32 %conv113, 255, !dbg !17095
  %cmp115 = icmp eq i32 %and114, 1, !dbg !17096
  br i1 %cmp115, label %if.then117, label %if.else121, !dbg !17097

if.then117:                                       ; preds = %sw.epilog
  %48 = load i16, i16* %RegValue, align 2, !dbg !17098
  %conv118 = zext i16 %48 to i32, !dbg !17098
  %or119 = or i32 %conv118, 512, !dbg !17098
  %conv120 = trunc i32 %or119 to i16, !dbg !17098
  store i16 %conv120, i16* %RegValue, align 2, !dbg !17098
  br label %if.end133, !dbg !17099

if.else121:                                       ; preds = %sw.epilog
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17100
  %params122 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %49, i32 0, i32 70, !dbg !17102
  %crc_type123 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params122, i32 0, i32 6, !dbg !17103
  %50 = load i16, i16* %crc_type123, align 2, !dbg !17103
  %conv124 = zext i16 %50 to i32, !dbg !17100
  %and125 = and i32 %conv124, 255, !dbg !17104
  %cmp126 = icmp eq i32 %and125, 2, !dbg !17105
  br i1 %cmp126, label %if.then128, label %if.end132, !dbg !17106

if.then128:                                       ; preds = %if.else121
  %51 = load i16, i16* %RegValue, align 2, !dbg !17107
  %conv129 = zext i16 %51 to i32, !dbg !17107
  %or130 = or i32 %conv129, 5632, !dbg !17107
  %conv131 = trunc i32 %or130 to i16, !dbg !17107
  store i16 %conv131, i16* %RegValue, align 2, !dbg !17107
  br label %if.end132, !dbg !17108

if.end132:                                        ; preds = %if.then128, %if.else121
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then117
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17109
  %53 = load i16, i16* %RegValue, align 2, !dbg !17110
  call void @usc_OutReg(%struct.mgsl_struct* %52, i16 zeroext 34, i16 zeroext %53) #11, !dbg !17111
  %54 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17112
  call void @usc_OutReg(%struct.mgsl_struct* %54, i16 zeroext 42, i16 zeroext -1) #11, !dbg !17113
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17114
  call void @usc_OutReg(%struct.mgsl_struct* %55, i16 zeroext 36, i16 zeroext 28672) #11, !dbg !17114
  %56 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17115
  %call134 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %56, i16 zeroext 38) #11, !dbg !17116
  %conv135 = zext i16 %call134 to i32, !dbg !17116
  %and136 = and i32 %conv135, 192, !dbg !17117
  %conv137 = trunc i32 %and136 to i16, !dbg !17116
  store i16 %conv137, i16* %RegValue, align 2, !dbg !17118
  %57 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17119
  %58 = load i16, i16* %RegValue, align 2, !dbg !17120
  %conv138 = zext i16 %58 to i32, !dbg !17120
  %or139 = or i32 778, %conv138, !dbg !17121
  %conv140 = trunc i32 %or139 to i16, !dbg !17122
  call void @usc_OutReg(%struct.mgsl_struct* %57, i16 zeroext 38, i16 zeroext %conv140) #11, !dbg !17123
  %59 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17124
  call void @usc_OutReg(%struct.mgsl_struct* %59, i16 zeroext 36, i16 zeroext 502) #11, !dbg !17124
  %60 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17125
  call void @usc_OutReg(%struct.mgsl_struct* %60, i16 zeroext 26, i16 zeroext 96) #11, !dbg !17125
  store i16 1024, i16* %RegValue, align 2, !dbg !17126
  %61 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17127
  %params141 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %61, i32 0, i32 70, !dbg !17128
  %encoding142 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params141, i32 0, i32 3, !dbg !17129
  %62 = load i8, i8* %encoding142, align 4, !dbg !17129
  %conv143 = zext i8 %62 to i32, !dbg !17127
  switch i32 %conv143, label %sw.epilog172 [
    i32 1, label %sw.bb144
    i32 2, label %sw.bb148
    i32 3, label %sw.bb152
    i32 4, label %sw.bb156
    i32 5, label %sw.bb160
    i32 6, label %sw.bb164
    i32 7, label %sw.bb168
  ], !dbg !17130

sw.bb144:                                         ; preds = %if.end133
  %63 = load i16, i16* %RegValue, align 2, !dbg !17131
  %conv145 = zext i16 %63 to i32, !dbg !17131
  %or146 = or i32 %conv145, 8192, !dbg !17131
  %conv147 = trunc i32 %or146 to i16, !dbg !17131
  store i16 %conv147, i16* %RegValue, align 2, !dbg !17131
  br label %sw.epilog172, !dbg !17133

sw.bb148:                                         ; preds = %if.end133
  %64 = load i16, i16* %RegValue, align 2, !dbg !17134
  %conv149 = zext i16 %64 to i32, !dbg !17134
  %or150 = or i32 %conv149, 16384, !dbg !17134
  %conv151 = trunc i32 %or150 to i16, !dbg !17134
  store i16 %conv151, i16* %RegValue, align 2, !dbg !17134
  br label %sw.epilog172, !dbg !17135

sw.bb152:                                         ; preds = %if.end133
  %65 = load i16, i16* %RegValue, align 2, !dbg !17136
  %conv153 = zext i16 %65 to i32, !dbg !17136
  %or154 = or i32 %conv153, 24576, !dbg !17136
  %conv155 = trunc i32 %or154 to i16, !dbg !17136
  store i16 %conv155, i16* %RegValue, align 2, !dbg !17136
  br label %sw.epilog172, !dbg !17137

sw.bb156:                                         ; preds = %if.end133
  %66 = load i16, i16* %RegValue, align 2, !dbg !17138
  %conv157 = zext i16 %66 to i32, !dbg !17138
  %or158 = or i32 %conv157, 32768, !dbg !17138
  %conv159 = trunc i32 %or158 to i16, !dbg !17138
  store i16 %conv159, i16* %RegValue, align 2, !dbg !17138
  br label %sw.epilog172, !dbg !17139

sw.bb160:                                         ; preds = %if.end133
  %67 = load i16, i16* %RegValue, align 2, !dbg !17140
  %conv161 = zext i16 %67 to i32, !dbg !17140
  %or162 = or i32 %conv161, 40960, !dbg !17140
  %conv163 = trunc i32 %or162 to i16, !dbg !17140
  store i16 %conv163, i16* %RegValue, align 2, !dbg !17140
  br label %sw.epilog172, !dbg !17141

sw.bb164:                                         ; preds = %if.end133
  %68 = load i16, i16* %RegValue, align 2, !dbg !17142
  %conv165 = zext i16 %68 to i32, !dbg !17142
  %or166 = or i32 %conv165, 49152, !dbg !17142
  %conv167 = trunc i32 %or166 to i16, !dbg !17142
  store i16 %conv167, i16* %RegValue, align 2, !dbg !17142
  br label %sw.epilog172, !dbg !17143

sw.bb168:                                         ; preds = %if.end133
  %69 = load i16, i16* %RegValue, align 2, !dbg !17144
  %conv169 = zext i16 %69 to i32, !dbg !17144
  %or170 = or i32 %conv169, 57344, !dbg !17144
  %conv171 = trunc i32 %or170 to i16, !dbg !17144
  store i16 %conv171, i16* %RegValue, align 2, !dbg !17144
  br label %sw.epilog172, !dbg !17145

sw.epilog172:                                     ; preds = %if.end133, %sw.bb168, %sw.bb164, %sw.bb160, %sw.bb156, %sw.bb152, %sw.bb148, %sw.bb144
  %70 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17146
  %params173 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %70, i32 0, i32 70, !dbg !17148
  %crc_type174 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params173, i32 0, i32 6, !dbg !17149
  %71 = load i16, i16* %crc_type174, align 2, !dbg !17149
  %conv175 = zext i16 %71 to i32, !dbg !17146
  %and176 = and i32 %conv175, 255, !dbg !17150
  %cmp177 = icmp eq i32 %and176, 1, !dbg !17151
  br i1 %cmp177, label %if.then179, label %if.else183, !dbg !17152

if.then179:                                       ; preds = %sw.epilog172
  %72 = load i16, i16* %RegValue, align 2, !dbg !17153
  %conv180 = zext i16 %72 to i32, !dbg !17153
  %or181 = or i32 %conv180, 768, !dbg !17153
  %conv182 = trunc i32 %or181 to i16, !dbg !17153
  store i16 %conv182, i16* %RegValue, align 2, !dbg !17153
  br label %if.end195, !dbg !17154

if.else183:                                       ; preds = %sw.epilog172
  %73 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17155
  %params184 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %73, i32 0, i32 70, !dbg !17157
  %crc_type185 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params184, i32 0, i32 6, !dbg !17158
  %74 = load i16, i16* %crc_type185, align 2, !dbg !17158
  %conv186 = zext i16 %74 to i32, !dbg !17155
  %and187 = and i32 %conv186, 255, !dbg !17159
  %cmp188 = icmp eq i32 %and187, 2, !dbg !17160
  br i1 %cmp188, label %if.then190, label %if.end194, !dbg !17161

if.then190:                                       ; preds = %if.else183
  %75 = load i16, i16* %RegValue, align 2, !dbg !17162
  %conv191 = zext i16 %75 to i32, !dbg !17162
  %or192 = or i32 %conv191, 5888, !dbg !17162
  %conv193 = trunc i32 %or192 to i16, !dbg !17162
  store i16 %conv193, i16* %RegValue, align 2, !dbg !17162
  br label %if.end194, !dbg !17163

if.end194:                                        ; preds = %if.then190, %if.else183
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.then179
  %76 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17164
  %77 = load i16, i16* %RegValue, align 2, !dbg !17165
  call void @usc_OutReg(%struct.mgsl_struct* %76, i16 zeroext 50, i16 zeroext %77) #11, !dbg !17166
  %78 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17167
  call void @usc_set_txidle(%struct.mgsl_struct* %78) #11, !dbg !17168
  %79 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17169
  %80 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17169
  %tcsr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %80, i32 0, i32 55, !dbg !17169
  %81 = load i16, i16* %tcsr_value, align 2, !dbg !17169
  %conv196 = zext i16 %81 to i32, !dbg !17169
  %add = add i32 %conv196, 28672, !dbg !17169
  %conv197 = trunc i32 %add to i16, !dbg !17169
  call void @usc_OutReg(%struct.mgsl_struct* %79, i16 zeroext 52, i16 zeroext %conv197) #11, !dbg !17169
  %82 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17170
  call void @usc_OutReg(%struct.mgsl_struct* %82, i16 zeroext 54, i16 zeroext 1846) #11, !dbg !17171
  %83 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17172
  %84 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17172
  %tcsr_value198 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %84, i32 0, i32 55, !dbg !17172
  %85 = load i16, i16* %tcsr_value198, align 2, !dbg !17172
  %conv199 = zext i16 %85 to i32, !dbg !17172
  %add200 = add i32 %conv199, 250, !dbg !17172
  %conv201 = trunc i32 %add200 to i16, !dbg !17172
  call void @usc_OutReg(%struct.mgsl_struct* %83, i16 zeroext 52, i16 zeroext %conv201) #11, !dbg !17172
  %86 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17173
  call void @usc_OutReg(%struct.mgsl_struct* %86, i16 zeroext 26, i16 zeroext 72) #11, !dbg !17173
  %87 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17174
  %tcsr_value202 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %87, i32 0, i32 55, !dbg !17175
  store i16 0, i16* %tcsr_value202, align 2, !dbg !17176
  %88 = load i8, i8* %PreSL1660, align 1, !dbg !17177
  %tobool203 = trunc i8 %88 to i1, !dbg !17177
  br i1 %tobool203, label %if.end209, label %if.then204, !dbg !17179

if.then204:                                       ; preds = %if.end195
  %89 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17180
  %tcsr_value205 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %89, i32 0, i32 55, !dbg !17181
  %90 = load i16, i16* %tcsr_value205, align 2, !dbg !17182
  %conv206 = zext i16 %90 to i32, !dbg !17182
  %or207 = or i32 %conv206, 2048, !dbg !17182
  %conv208 = trunc i32 %or207 to i16, !dbg !17182
  store i16 %conv208, i16* %tcsr_value205, align 2, !dbg !17182
  br label %if.end209, !dbg !17180

if.end209:                                        ; preds = %if.then204, %if.end195
  %91 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17183
  %92 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17184
  %tcsr_value210 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %92, i32 0, i32 55, !dbg !17185
  %93 = load i16, i16* %tcsr_value210, align 2, !dbg !17185
  call void @usc_OutReg(%struct.mgsl_struct* %91, i16 zeroext 52, i16 zeroext %93) #11, !dbg !17186
  store i16 3904, i16* %RegValue, align 2, !dbg !17187
  %94 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17188
  %params211 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %94, i32 0, i32 70, !dbg !17190
  %flags212 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params211, i32 0, i32 2, !dbg !17191
  %95 = load i16, i16* %flags212, align 2, !dbg !17191
  %conv213 = zext i16 %95 to i32, !dbg !17188
  %and214 = and i32 %conv213, 256, !dbg !17192
  %tobool215 = icmp ne i32 %and214, 0, !dbg !17192
  br i1 %tobool215, label %if.then216, label %if.else220, !dbg !17193

if.then216:                                       ; preds = %if.end209
  %96 = load i16, i16* %RegValue, align 2, !dbg !17194
  %conv217 = zext i16 %96 to i32, !dbg !17194
  %or218 = or i32 %conv217, 3, !dbg !17194
  %conv219 = trunc i32 %or218 to i16, !dbg !17194
  store i16 %conv219, i16* %RegValue, align 2, !dbg !17194
  br label %if.end246, !dbg !17195

if.else220:                                       ; preds = %if.end209
  %97 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17196
  %params221 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %97, i32 0, i32 70, !dbg !17198
  %flags222 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params221, i32 0, i32 2, !dbg !17199
  %98 = load i16, i16* %flags222, align 2, !dbg !17199
  %conv223 = zext i16 %98 to i32, !dbg !17196
  %and224 = and i32 %conv223, 512, !dbg !17200
  %tobool225 = icmp ne i32 %and224, 0, !dbg !17200
  br i1 %tobool225, label %if.then226, label %if.else230, !dbg !17201

if.then226:                                       ; preds = %if.else220
  %99 = load i16, i16* %RegValue, align 2, !dbg !17202
  %conv227 = zext i16 %99 to i32, !dbg !17202
  %or228 = or i32 %conv227, 4, !dbg !17202
  %conv229 = trunc i32 %or228 to i16, !dbg !17202
  store i16 %conv229, i16* %RegValue, align 2, !dbg !17202
  br label %if.end245, !dbg !17203

if.else230:                                       ; preds = %if.else220
  %100 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17204
  %params231 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %100, i32 0, i32 70, !dbg !17206
  %flags232 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params231, i32 0, i32 2, !dbg !17207
  %101 = load i16, i16* %flags232, align 2, !dbg !17207
  %conv233 = zext i16 %101 to i32, !dbg !17204
  %and234 = and i32 %conv233, 32768, !dbg !17208
  %tobool235 = icmp ne i32 %and234, 0, !dbg !17208
  br i1 %tobool235, label %if.then236, label %if.else240, !dbg !17209

if.then236:                                       ; preds = %if.else230
  %102 = load i16, i16* %RegValue, align 2, !dbg !17210
  %conv237 = zext i16 %102 to i32, !dbg !17210
  %or238 = or i32 %conv237, 6, !dbg !17210
  %conv239 = trunc i32 %or238 to i16, !dbg !17210
  store i16 %conv239, i16* %RegValue, align 2, !dbg !17210
  br label %if.end244, !dbg !17211

if.else240:                                       ; preds = %if.else230
  %103 = load i16, i16* %RegValue, align 2, !dbg !17212
  %conv241 = zext i16 %103 to i32, !dbg !17212
  %or242 = or i32 %conv241, 7, !dbg !17212
  %conv243 = trunc i32 %or242 to i16, !dbg !17212
  store i16 %conv243, i16* %RegValue, align 2, !dbg !17212
  br label %if.end244

if.end244:                                        ; preds = %if.else240, %if.then236
  br label %if.end245

if.end245:                                        ; preds = %if.end244, %if.then226
  br label %if.end246

if.end246:                                        ; preds = %if.end245, %if.then216
  %104 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17213
  %params247 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %104, i32 0, i32 70, !dbg !17215
  %flags248 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params247, i32 0, i32 2, !dbg !17216
  %105 = load i16, i16* %flags248, align 2, !dbg !17216
  %conv249 = zext i16 %105 to i32, !dbg !17213
  %and250 = and i32 %conv249, 1024, !dbg !17217
  %tobool251 = icmp ne i32 %and250, 0, !dbg !17217
  br i1 %tobool251, label %if.then252, label %if.else256, !dbg !17218

if.then252:                                       ; preds = %if.end246
  %106 = load i16, i16* %RegValue, align 2, !dbg !17219
  %conv253 = zext i16 %106 to i32, !dbg !17219
  %or254 = or i32 %conv253, 24, !dbg !17219
  %conv255 = trunc i32 %or254 to i16, !dbg !17219
  store i16 %conv255, i16* %RegValue, align 2, !dbg !17219
  br label %if.end282, !dbg !17220

if.else256:                                       ; preds = %if.end246
  %107 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17221
  %params257 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %107, i32 0, i32 70, !dbg !17223
  %flags258 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params257, i32 0, i32 2, !dbg !17224
  %108 = load i16, i16* %flags258, align 2, !dbg !17224
  %conv259 = zext i16 %108 to i32, !dbg !17221
  %and260 = and i32 %conv259, 2048, !dbg !17225
  %tobool261 = icmp ne i32 %and260, 0, !dbg !17225
  br i1 %tobool261, label %if.then262, label %if.else266, !dbg !17226

if.then262:                                       ; preds = %if.else256
  %109 = load i16, i16* %RegValue, align 2, !dbg !17227
  %conv263 = zext i16 %109 to i32, !dbg !17227
  %or264 = or i32 %conv263, 32, !dbg !17227
  %conv265 = trunc i32 %or264 to i16, !dbg !17227
  store i16 %conv265, i16* %RegValue, align 2, !dbg !17227
  br label %if.end281, !dbg !17228

if.else266:                                       ; preds = %if.else256
  %110 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17229
  %params267 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %110, i32 0, i32 70, !dbg !17231
  %flags268 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params267, i32 0, i32 2, !dbg !17232
  %111 = load i16, i16* %flags268, align 2, !dbg !17232
  %conv269 = zext i16 %111 to i32, !dbg !17229
  %and270 = and i32 %conv269, 8, !dbg !17233
  %tobool271 = icmp ne i32 %and270, 0, !dbg !17233
  br i1 %tobool271, label %if.then272, label %if.else276, !dbg !17234

if.then272:                                       ; preds = %if.else266
  %112 = load i16, i16* %RegValue, align 2, !dbg !17235
  %conv273 = zext i16 %112 to i32, !dbg !17235
  %or274 = or i32 %conv273, 56, !dbg !17235
  %conv275 = trunc i32 %or274 to i16, !dbg !17235
  store i16 %conv275, i16* %RegValue, align 2, !dbg !17235
  br label %if.end280, !dbg !17236

if.else276:                                       ; preds = %if.else266
  %113 = load i16, i16* %RegValue, align 2, !dbg !17237
  %conv277 = zext i16 %113 to i32, !dbg !17237
  %or278 = or i32 %conv277, 48, !dbg !17237
  %conv279 = trunc i32 %or278 to i16, !dbg !17237
  store i16 %conv279, i16* %RegValue, align 2, !dbg !17237
  br label %if.end280

if.end280:                                        ; preds = %if.else276, %if.then272
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.then262
  br label %if.end282

if.end282:                                        ; preds = %if.end281, %if.then252
  %114 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17238
  %115 = load i16, i16* %RegValue, align 2, !dbg !17239
  call void @usc_OutReg(%struct.mgsl_struct* %114, i16 zeroext 16, i16 zeroext %115) #11, !dbg !17240
  store i16 0, i16* %RegValue, align 2, !dbg !17241
  %116 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17242
  %params283 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %116, i32 0, i32 70, !dbg !17244
  %flags284 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params283, i32 0, i32 2, !dbg !17245
  %117 = load i16, i16* %flags284, align 2, !dbg !17245
  %conv285 = zext i16 %117 to i32, !dbg !17242
  %and286 = and i32 %conv285, 1280, !dbg !17246
  %tobool287 = icmp ne i32 %and286, 0, !dbg !17246
  br i1 %tobool287, label %if.then288, label %if.end350, !dbg !17247

if.then288:                                       ; preds = %if.end282
  call void @llvm.dbg.declare(metadata i32* %XtalSpeed, metadata !17248, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.declare(metadata i32* %DpllDivisor, metadata !17251, metadata !DIExpression()), !dbg !17252
  call void @llvm.dbg.declare(metadata i16* %Tc, metadata !17253, metadata !DIExpression()), !dbg !17254
  store i32 11059200, i32* %XtalSpeed, align 4, !dbg !17255
  %118 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17256
  %params289 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %118, i32 0, i32 70, !dbg !17258
  %flags290 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params289, i32 0, i32 2, !dbg !17259
  %119 = load i16, i16* %flags290, align 2, !dbg !17259
  %conv291 = zext i16 %119 to i32, !dbg !17256
  %and292 = and i32 %conv291, 8192, !dbg !17260
  %tobool293 = icmp ne i32 %and292, 0, !dbg !17260
  br i1 %tobool293, label %if.then294, label %if.else298, !dbg !17261

if.then294:                                       ; preds = %if.then288
  store i32 16, i32* %DpllDivisor, align 4, !dbg !17262
  %120 = load i16, i16* %RegValue, align 2, !dbg !17264
  %conv295 = zext i16 %120 to i32, !dbg !17264
  %or296 = or i32 %conv295, 1024, !dbg !17264
  %conv297 = trunc i32 %or296 to i16, !dbg !17264
  store i16 %conv297, i16* %RegValue, align 2, !dbg !17264
  br label %if.end310, !dbg !17265

if.else298:                                       ; preds = %if.then288
  %121 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17266
  %params299 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %121, i32 0, i32 70, !dbg !17268
  %flags300 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params299, i32 0, i32 2, !dbg !17269
  %122 = load i16, i16* %flags300, align 2, !dbg !17269
  %conv301 = zext i16 %122 to i32, !dbg !17266
  %and302 = and i32 %conv301, 4096, !dbg !17270
  %tobool303 = icmp ne i32 %and302, 0, !dbg !17270
  br i1 %tobool303, label %if.then304, label %if.else308, !dbg !17271

if.then304:                                       ; preds = %if.else298
  store i32 8, i32* %DpllDivisor, align 4, !dbg !17272
  %123 = load i16, i16* %RegValue, align 2, !dbg !17274
  %conv305 = zext i16 %123 to i32, !dbg !17274
  %or306 = or i32 %conv305, 2048, !dbg !17274
  %conv307 = trunc i32 %or306 to i16, !dbg !17274
  store i16 %conv307, i16* %RegValue, align 2, !dbg !17274
  br label %if.end309, !dbg !17275

if.else308:                                       ; preds = %if.else298
  store i32 32, i32* %DpllDivisor, align 4, !dbg !17276
  br label %if.end309

if.end309:                                        ; preds = %if.else308, %if.then304
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %if.then294
  %124 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17277
  %params311 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %124, i32 0, i32 70, !dbg !17279
  %clock_speed = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params311, i32 0, i32 4, !dbg !17280
  %125 = load i64, i64* %clock_speed, align 8, !dbg !17280
  %tobool312 = icmp ne i64 %125, 0, !dbg !17277
  br i1 %tobool312, label %if.then313, label %if.else329, !dbg !17281

if.then313:                                       ; preds = %if.end310
  %126 = load i32, i32* %XtalSpeed, align 4, !dbg !17282
  %127 = load i32, i32* %DpllDivisor, align 4, !dbg !17284
  %div = udiv i32 %126, %127, !dbg !17285
  %conv314 = zext i32 %div to i64, !dbg !17286
  %128 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17287
  %params315 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %128, i32 0, i32 70, !dbg !17288
  %clock_speed316 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params315, i32 0, i32 4, !dbg !17289
  %129 = load i64, i64* %clock_speed316, align 8, !dbg !17289
  %div317 = udiv i64 %conv314, %129, !dbg !17290
  %conv318 = trunc i64 %div317 to i16, !dbg !17291
  store i16 %conv318, i16* %Tc, align 2, !dbg !17292
  %130 = load i32, i32* %XtalSpeed, align 4, !dbg !17293
  %131 = load i32, i32* %DpllDivisor, align 4, !dbg !17295
  %div319 = udiv i32 %130, %131, !dbg !17296
  %conv320 = zext i32 %div319 to i64, !dbg !17297
  %132 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17298
  %params321 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %132, i32 0, i32 70, !dbg !17299
  %clock_speed322 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params321, i32 0, i32 4, !dbg !17300
  %133 = load i64, i64* %clock_speed322, align 8, !dbg !17300
  %rem = urem i64 %conv320, %133, !dbg !17301
  %mul = mul i64 %rem, 2, !dbg !17302
  %134 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17303
  %params323 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %134, i32 0, i32 70, !dbg !17304
  %clock_speed324 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params323, i32 0, i32 4, !dbg !17305
  %135 = load i64, i64* %clock_speed324, align 8, !dbg !17305
  %div325 = udiv i64 %mul, %135, !dbg !17306
  %tobool326 = icmp ne i64 %div325, 0, !dbg !17306
  br i1 %tobool326, label %if.end328, label %if.then327, !dbg !17307

if.then327:                                       ; preds = %if.then313
  %136 = load i16, i16* %Tc, align 2, !dbg !17308
  %dec = add i16 %136, -1, !dbg !17308
  store i16 %dec, i16* %Tc, align 2, !dbg !17308
  br label %if.end328, !dbg !17309

if.end328:                                        ; preds = %if.then327, %if.then313
  br label %if.end330, !dbg !17310

if.else329:                                       ; preds = %if.end310
  store i16 -1, i16* %Tc, align 2, !dbg !17311
  br label %if.end330

if.end330:                                        ; preds = %if.else329, %if.end328
  %137 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17312
  %138 = load i16, i16* %Tc, align 2, !dbg !17313
  call void @usc_OutReg(%struct.mgsl_struct* %137, i16 zeroext 62, i16 zeroext %138) #11, !dbg !17314
  %139 = load i16, i16* %RegValue, align 2, !dbg !17315
  %conv331 = zext i16 %139 to i32, !dbg !17315
  %or332 = or i32 %conv331, 16, !dbg !17315
  %conv333 = trunc i32 %or332 to i16, !dbg !17315
  store i16 %conv333, i16* %RegValue, align 2, !dbg !17315
  %140 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17316
  %params334 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %140, i32 0, i32 70, !dbg !17317
  %encoding335 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params334, i32 0, i32 3, !dbg !17318
  %141 = load i8, i8* %encoding335, align 4, !dbg !17318
  %conv336 = zext i8 %141 to i32, !dbg !17316
  switch i32 %conv336, label %sw.epilog349 [
    i32 0, label %sw.bb337
    i32 1, label %sw.bb337
    i32 2, label %sw.bb337
    i32 3, label %sw.bb337
    i32 4, label %sw.bb341
    i32 5, label %sw.bb341
    i32 6, label %sw.bb345
    i32 7, label %sw.bb345
  ], !dbg !17319

sw.bb337:                                         ; preds = %if.end330, %if.end330, %if.end330, %if.end330
  %142 = load i16, i16* %RegValue, align 2, !dbg !17320
  %conv338 = zext i16 %142 to i32, !dbg !17320
  %or339 = or i32 %conv338, 256, !dbg !17320
  %conv340 = trunc i32 %or339 to i16, !dbg !17320
  store i16 %conv340, i16* %RegValue, align 2, !dbg !17320
  br label %sw.epilog349, !dbg !17322

sw.bb341:                                         ; preds = %if.end330, %if.end330
  %143 = load i16, i16* %RegValue, align 2, !dbg !17323
  %conv342 = zext i16 %143 to i32, !dbg !17323
  %or343 = or i32 %conv342, 512, !dbg !17323
  %conv344 = trunc i32 %or343 to i16, !dbg !17323
  store i16 %conv344, i16* %RegValue, align 2, !dbg !17323
  br label %sw.epilog349, !dbg !17324

sw.bb345:                                         ; preds = %if.end330, %if.end330
  %144 = load i16, i16* %RegValue, align 2, !dbg !17325
  %conv346 = zext i16 %144 to i32, !dbg !17325
  %or347 = or i32 %conv346, 768, !dbg !17325
  %conv348 = trunc i32 %or347 to i16, !dbg !17325
  store i16 %conv348, i16* %RegValue, align 2, !dbg !17325
  br label %sw.epilog349, !dbg !17326

sw.epilog349:                                     ; preds = %if.end330, %sw.bb345, %sw.bb341, %sw.bb337
  br label %if.end350, !dbg !17327

if.end350:                                        ; preds = %sw.epilog349, %if.end282
  %145 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17328
  %146 = load i16, i16* %RegValue, align 2, !dbg !17329
  call void @usc_OutReg(%struct.mgsl_struct* %145, i16 zeroext 18, i16 zeroext %146) #11, !dbg !17330
  %147 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17331
  call void @usc_OutReg(%struct.mgsl_struct* %147, i16 zeroext 4, i16 zeroext 4128) #11, !dbg !17332
  %148 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17333
  %params351 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %148, i32 0, i32 70, !dbg !17335
  %flags352 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params351, i32 0, i32 2, !dbg !17336
  %149 = load i16, i16* %flags352, align 2, !dbg !17336
  %conv353 = zext i16 %149 to i32, !dbg !17333
  %and354 = and i32 %conv353, 32, !dbg !17337
  %tobool355 = icmp ne i32 %and354, 0, !dbg !17337
  br i1 %tobool355, label %if.then356, label %if.end361, !dbg !17338

if.then356:                                       ; preds = %if.end350
  %150 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17339
  %151 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17341
  %call357 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %151, i16 zeroext 30) #11, !dbg !17342
  %conv358 = zext i16 %call357 to i32, !dbg !17342
  %or359 = or i32 %conv358, 16, !dbg !17343
  %conv360 = trunc i32 %or359 to i16, !dbg !17344
  call void @usc_OutReg(%struct.mgsl_struct* %150, i16 zeroext 30, i16 zeroext %conv360) #11, !dbg !17345
  br label %if.end361, !dbg !17346

if.end361:                                        ; preds = %if.then356, %if.end350
  %152 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17347
  %153 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17347
  %call362 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %153, i16 zeroext 24) #11, !dbg !17347
  %conv363 = zext i16 %call362 to i32, !dbg !17347
  %and364 = and i32 %conv363, 3840, !dbg !17347
  %add365 = add i32 %and364, 45056, !dbg !17347
  %conv366 = trunc i32 %add365 to i16, !dbg !17347
  call void @usc_OutReg(%struct.mgsl_struct* %152, i16 zeroext 24, i16 zeroext %conv366) #11, !dbg !17347
  %154 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17348
  call void @usc_OutReg(%struct.mgsl_struct* %154, i16 zeroext 26, i16 zeroext 125) #11, !dbg !17348
  %155 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17349
  %156 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17350
  %call367 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %156, i16 zeroext 30) #11, !dbg !17351
  %conv368 = zext i16 %call367 to i32, !dbg !17351
  %or369 = or i32 %conv368, 8, !dbg !17352
  %conv370 = trunc i32 %or369 to i16, !dbg !17353
  call void @usc_OutReg(%struct.mgsl_struct* %155, i16 zeroext 30, i16 zeroext %conv370) #11, !dbg !17354
  %157 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17355
  %158 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17355
  %call371 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %158, i16 zeroext 24) #11, !dbg !17355
  %conv372 = zext i16 %call371 to i32, !dbg !17355
  %and373 = and i32 %conv372, 65280, !dbg !17355
  %add374 = add i32 %and373, 192, !dbg !17355
  %add375 = add i32 %add374, 1, !dbg !17355
  %conv376 = trunc i32 %add375 to i16, !dbg !17355
  call void @usc_OutReg(%struct.mgsl_struct* %157, i16 zeroext 24, i16 zeroext %conv376) #11, !dbg !17355
  %159 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17356
  %mbre_bit = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %159, i32 0, i32 67, !dbg !17357
  store i16 0, i16* %mbre_bit, align 2, !dbg !17358
  %160 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17359
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %160, i32 0, i32 59, !dbg !17360
  %161 = load i32, i32* %io_base, align 4, !dbg !17360
  call void @outw(i16 zeroext 0, i32 %161) #11, !dbg !17361
  %162 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17362
  call void @usc_DmaCmd(%struct.mgsl_struct* %162, i16 zeroext -28672) #11, !dbg !17363
  %163 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17364
  %mbre_bit377 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %163, i32 0, i32 67, !dbg !17365
  store i16 256, i16* %mbre_bit377, align 2, !dbg !17366
  %164 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17367
  %io_base378 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %164, i32 0, i32 59, !dbg !17368
  %165 = load i32, i32* %io_base378, align 4, !dbg !17368
  call void @outw(i16 zeroext 256, i32 %165) #11, !dbg !17369
  %166 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17370
  call void @usc_OutDmaReg(%struct.mgsl_struct* %166, i16 zeroext 6, i16 zeroext -24565) #11, !dbg !17371
  %167 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17372
  call void @usc_OutDmaReg(%struct.mgsl_struct* %167, i16 zeroext 130, i16 zeroext -3584) #11, !dbg !17373
  %168 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17374
  call void @usc_OutDmaReg(%struct.mgsl_struct* %168, i16 zeroext 2, i16 zeroext -3584) #11, !dbg !17375
  %169 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17376
  call void @usc_OutDmaReg(%struct.mgsl_struct* %169, i16 zeroext 24, i16 zeroext -28672) #11, !dbg !17377
  %170 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17378
  %call379 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %170, i16 zeroext 130) #11, !dbg !17379
  %171 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17380
  %call380 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %171, i16 zeroext 2) #11, !dbg !17381
  %172 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17382
  call void @usc_OutDmaReg(%struct.mgsl_struct* %172, i16 zeroext 26, i16 zeroext 771) #11, !dbg !17383
  store i16 -32640, i16* %RegValue, align 2, !dbg !17384
  %173 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17385
  %params381 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %173, i32 0, i32 70, !dbg !17386
  %preamble_length = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params381, i32 0, i32 7, !dbg !17387
  %174 = load i8, i8* %preamble_length, align 4, !dbg !17387
  %conv382 = zext i8 %174 to i32, !dbg !17385
  switch i32 %conv382, label %sw.epilog395 [
    i32 1, label %sw.bb383
    i32 2, label %sw.bb387
    i32 3, label %sw.bb391
  ], !dbg !17388

sw.bb383:                                         ; preds = %if.end361
  %175 = load i16, i16* %RegValue, align 2, !dbg !17389
  %conv384 = zext i16 %175 to i32, !dbg !17389
  %or385 = or i32 %conv384, 1024, !dbg !17389
  %conv386 = trunc i32 %or385 to i16, !dbg !17389
  store i16 %conv386, i16* %RegValue, align 2, !dbg !17389
  br label %sw.epilog395, !dbg !17391

sw.bb387:                                         ; preds = %if.end361
  %176 = load i16, i16* %RegValue, align 2, !dbg !17392
  %conv388 = zext i16 %176 to i32, !dbg !17392
  %or389 = or i32 %conv388, 2048, !dbg !17392
  %conv390 = trunc i32 %or389 to i16, !dbg !17392
  store i16 %conv390, i16* %RegValue, align 2, !dbg !17392
  br label %sw.epilog395, !dbg !17393

sw.bb391:                                         ; preds = %if.end361
  %177 = load i16, i16* %RegValue, align 2, !dbg !17394
  %conv392 = zext i16 %177 to i32, !dbg !17394
  %or393 = or i32 %conv392, 3072, !dbg !17394
  %conv394 = trunc i32 %or393 to i16, !dbg !17394
  store i16 %conv394, i16* %RegValue, align 2, !dbg !17394
  br label %sw.epilog395, !dbg !17395

sw.epilog395:                                     ; preds = %if.end361, %sw.bb391, %sw.bb387, %sw.bb383
  %178 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17396
  %params396 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %178, i32 0, i32 70, !dbg !17397
  %preamble397 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params396, i32 0, i32 8, !dbg !17398
  %179 = load i8, i8* %preamble397, align 1, !dbg !17398
  %conv398 = zext i8 %179 to i32, !dbg !17396
  switch i32 %conv398, label %sw.epilog415 [
    i32 2, label %sw.bb399
    i32 5, label %sw.bb403
    i32 3, label %sw.bb407
    i32 4, label %sw.bb411
  ], !dbg !17399

sw.bb399:                                         ; preds = %sw.epilog395
  %180 = load i16, i16* %RegValue, align 2, !dbg !17400
  %conv400 = zext i16 %180 to i32, !dbg !17400
  %or401 = or i32 %conv400, 4352, !dbg !17400
  %conv402 = trunc i32 %or401 to i16, !dbg !17400
  store i16 %conv402, i16* %RegValue, align 2, !dbg !17400
  br label %sw.epilog415, !dbg !17402

sw.bb403:                                         ; preds = %sw.epilog395
  %181 = load i16, i16* %RegValue, align 2, !dbg !17403
  %conv404 = zext i16 %181 to i32, !dbg !17403
  %or405 = or i32 %conv404, 256, !dbg !17403
  %conv406 = trunc i32 %or405 to i16, !dbg !17403
  store i16 %conv406, i16* %RegValue, align 2, !dbg !17403
  br label %sw.epilog415, !dbg !17404

sw.bb407:                                         ; preds = %sw.epilog395
  %182 = load i16, i16* %RegValue, align 2, !dbg !17405
  %conv408 = zext i16 %182 to i32, !dbg !17405
  %or409 = or i32 %conv408, 512, !dbg !17405
  %conv410 = trunc i32 %or409 to i16, !dbg !17405
  store i16 %conv410, i16* %RegValue, align 2, !dbg !17405
  br label %sw.epilog415, !dbg !17406

sw.bb411:                                         ; preds = %sw.epilog395
  %183 = load i16, i16* %RegValue, align 2, !dbg !17407
  %conv412 = zext i16 %183 to i32, !dbg !17407
  %or413 = or i32 %conv412, 768, !dbg !17407
  %conv414 = trunc i32 %or413 to i16, !dbg !17407
  store i16 %conv414, i16* %RegValue, align 2, !dbg !17407
  br label %sw.epilog415, !dbg !17408

sw.epilog415:                                     ; preds = %sw.epilog395, %sw.bb411, %sw.bb407, %sw.bb403, %sw.bb399
  %184 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17409
  %185 = load i16, i16* %RegValue, align 2, !dbg !17410
  call void @usc_OutReg(%struct.mgsl_struct* %184, i16 zeroext 6, i16 zeroext %185) #11, !dbg !17411
  %186 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17412
  call void @usc_OutDmaReg(%struct.mgsl_struct* %186, i16 zeroext 18, i16 zeroext 0) #11, !dbg !17413
  %187 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17414
  call void @usc_stop_transmitter(%struct.mgsl_struct* %187) #11, !dbg !17415
  %188 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17416
  call void @usc_stop_receiver(%struct.mgsl_struct* %188) #11, !dbg !17417
  ret void, !dbg !17418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_enable_loopback(%struct.mgsl_struct* %info, i32 %enable) #1 !dbg !17419 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %enable.addr = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !17422, metadata !DIExpression()), !dbg !17423
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !17424, metadata !DIExpression()), !dbg !17425
  %0 = load i32, i32* %enable.addr, align 4, !dbg !17426
  %tobool = icmp ne i32 %0, 0, !dbg !17426
  br i1 %tobool, label %if.then, label %if.else16, !dbg !17428

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17429
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17431
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %2, i16 zeroext 22) #11, !dbg !17432
  %conv = zext i16 %call to i32, !dbg !17432
  %or = or i32 %conv, 192, !dbg !17433
  %conv1 = trunc i32 %or to i16, !dbg !17432
  call void @usc_OutReg(%struct.mgsl_struct* %1, i16 zeroext 22, i16 zeroext %conv1) #11, !dbg !17434
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17435
  call void @usc_OutReg(%struct.mgsl_struct* %3, i16 zeroext 16, i16 zeroext 3940) #11, !dbg !17436
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17437
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 70, !dbg !17439
  %clock_speed = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 4, !dbg !17440
  %5 = load i64, i64* %clock_speed, align 8, !dbg !17440
  %tobool2 = icmp ne i64 %5, 0, !dbg !17437
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !17441

if.then3:                                         ; preds = %if.then
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17442
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17444
  %params4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 70, !dbg !17445
  %clock_speed5 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params4, i32 0, i32 4, !dbg !17446
  %8 = load i64, i64* %clock_speed5, align 8, !dbg !17446
  %div = udiv i64 11059200, %8, !dbg !17447
  %sub = sub i64 %div, 1, !dbg !17448
  %conv6 = trunc i64 %sub to i16, !dbg !17449
  call void @usc_OutReg(%struct.mgsl_struct* %6, i16 zeroext 46, i16 zeroext %conv6) #11, !dbg !17450
  br label %if.end, !dbg !17451

if.else:                                          ; preds = %if.then
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17452
  call void @usc_OutReg(%struct.mgsl_struct* %9, i16 zeroext 46, i16 zeroext 8) #11, !dbg !17453
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17454
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17455
  %call7 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %11, i16 zeroext 18) #11, !dbg !17456
  %conv8 = zext i16 %call7 to i32, !dbg !17456
  %and = and i32 %conv8, -3, !dbg !17457
  %or9 = or i32 %and, 1, !dbg !17458
  %conv10 = trunc i32 %or9 to i16, !dbg !17459
  call void @usc_OutReg(%struct.mgsl_struct* %10, i16 zeroext 18, i16 zeroext %conv10) #11, !dbg !17460
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17461
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17462
  %call11 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %13, i16 zeroext 22) #11, !dbg !17463
  %conv12 = zext i16 %call11 to i32, !dbg !17463
  %and13 = and i32 %conv12, 65528, !dbg !17464
  %or14 = or i32 %and13, 4, !dbg !17465
  %conv15 = trunc i32 %or14 to i16, !dbg !17466
  call void @usc_OutReg(%struct.mgsl_struct* %12, i16 zeroext 22, i16 zeroext %conv15) #11, !dbg !17467
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17468
  %loopback_bits = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 68, !dbg !17469
  store i16 768, i16* %loopback_bits, align 4, !dbg !17470
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17471
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 59, !dbg !17472
  %16 = load i32, i32* %io_base, align 4, !dbg !17472
  %add = add i32 %16, 4, !dbg !17473
  call void @outw(i16 zeroext 768, i32 %add) #11, !dbg !17474
  br label %if.end24, !dbg !17475

if.else16:                                        ; preds = %entry
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17476
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17478
  %call17 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %18, i16 zeroext 22) #11, !dbg !17479
  %conv18 = zext i16 %call17 to i32, !dbg !17479
  %and19 = and i32 %conv18, -193, !dbg !17480
  %conv20 = trunc i32 %and19 to i16, !dbg !17479
  call void @usc_OutReg(%struct.mgsl_struct* %17, i16 zeroext 22, i16 zeroext %conv20) #11, !dbg !17481
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17482
  %loopback_bits21 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 68, !dbg !17483
  store i16 0, i16* %loopback_bits21, align 4, !dbg !17484
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17485
  %io_base22 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 59, !dbg !17486
  %21 = load i32, i32* %io_base22, align 4, !dbg !17486
  %add23 = add i32 %21, 4, !dbg !17487
  call void @outw(i16 zeroext 0, i32 %add23) #11, !dbg !17488
  br label %if.end24

if.end24:                                         ; preds = %if.else16, %if.end
  ret void, !dbg !17489
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_set_txidle(%struct.mgsl_struct* %info) #1 !dbg !17490 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %usc_idle_mode = alloca i16, align 2
  %syncpat = alloca i8, align 1
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !17491, metadata !DIExpression()), !dbg !17492
  call void @llvm.dbg.declare(metadata i16* %usc_idle_mode, metadata !17493, metadata !DIExpression()), !dbg !17494
  store i16 0, i16* %usc_idle_mode, align 2, !dbg !17494
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17495
  %idle_mode = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 53, !dbg !17496
  %1 = load i32, i32* %idle_mode, align 8, !dbg !17496
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb5
    i32 6, label %sw.bb6
  ], !dbg !17497

sw.bb:                                            ; preds = %entry
  store i16 0, i16* %usc_idle_mode, align 2, !dbg !17498
  br label %sw.epilog, !dbg !17500

sw.bb1:                                           ; preds = %entry
  store i16 256, i16* %usc_idle_mode, align 2, !dbg !17501
  br label %sw.epilog, !dbg !17502

sw.bb2:                                           ; preds = %entry
  store i16 512, i16* %usc_idle_mode, align 2, !dbg !17503
  br label %sw.epilog, !dbg !17504

sw.bb3:                                           ; preds = %entry
  store i16 768, i16* %usc_idle_mode, align 2, !dbg !17505
  br label %sw.epilog, !dbg !17506

sw.bb4:                                           ; preds = %entry
  store i16 1280, i16* %usc_idle_mode, align 2, !dbg !17507
  br label %sw.epilog, !dbg !17508

sw.bb5:                                           ; preds = %entry
  store i16 1536, i16* %usc_idle_mode, align 2, !dbg !17509
  br label %sw.epilog, !dbg !17510

sw.bb6:                                           ; preds = %entry
  store i16 1792, i16* %usc_idle_mode, align 2, !dbg !17511
  br label %sw.epilog, !dbg !17512

sw.epilog:                                        ; preds = %entry, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i16, i16* %usc_idle_mode, align 2, !dbg !17513
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17514
  %usc_idle_mode7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 69, !dbg !17515
  store i16 %2, i16* %usc_idle_mode7, align 2, !dbg !17516
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17517
  %tcsr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 55, !dbg !17518
  %5 = load i16, i16* %tcsr_value, align 2, !dbg !17519
  %conv = zext i16 %5 to i32, !dbg !17519
  %and = and i32 %conv, -1793, !dbg !17519
  %conv8 = trunc i32 %and to i16, !dbg !17519
  store i16 %conv8, i16* %tcsr_value, align 2, !dbg !17519
  %6 = load i16, i16* %usc_idle_mode, align 2, !dbg !17520
  %conv9 = zext i16 %6 to i32, !dbg !17520
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17521
  %tcsr_value10 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 55, !dbg !17522
  %8 = load i16, i16* %tcsr_value10, align 2, !dbg !17523
  %conv11 = zext i16 %8 to i32, !dbg !17523
  %add = add i32 %conv11, %conv9, !dbg !17523
  %conv12 = trunc i32 %add to i16, !dbg !17523
  store i16 %conv12, i16* %tcsr_value10, align 2, !dbg !17523
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17524
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17525
  %tcsr_value13 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 55, !dbg !17526
  %11 = load i16, i16* %tcsr_value13, align 2, !dbg !17526
  call void @usc_OutReg(%struct.mgsl_struct* %9, i16 zeroext 52, i16 zeroext %11) #11, !dbg !17527
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17528
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 70, !dbg !17530
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !17531
  %13 = load i64, i64* %mode, align 8, !dbg !17531
  %cmp = icmp eq i64 %13, 6, !dbg !17532
  br i1 %cmp, label %if.then, label %if.end, !dbg !17533

if.then:                                          ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i8* %syncpat, metadata !17534, metadata !DIExpression()), !dbg !17536
  store i8 0, i8* %syncpat, align 1, !dbg !17536
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17537
  %idle_mode15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 53, !dbg !17538
  %15 = load i32, i32* %idle_mode15, align 8, !dbg !17538
  switch i32 %15, label %sw.epilog21 [
    i32 0, label %sw.bb16
    i32 1, label %sw.bb17
    i32 2, label %sw.bb18
    i32 5, label %sw.bb18
    i32 3, label %sw.bb19
    i32 6, label %sw.bb19
    i32 4, label %sw.bb20
  ], !dbg !17539

sw.bb16:                                          ; preds = %if.then
  store i8 126, i8* %syncpat, align 1, !dbg !17540
  br label %sw.epilog21, !dbg !17542

sw.bb17:                                          ; preds = %if.then
  store i8 85, i8* %syncpat, align 1, !dbg !17543
  br label %sw.epilog21, !dbg !17544

sw.bb18:                                          ; preds = %if.then, %if.then
  store i8 0, i8* %syncpat, align 1, !dbg !17545
  br label %sw.epilog21, !dbg !17546

sw.bb19:                                          ; preds = %if.then, %if.then
  store i8 -1, i8* %syncpat, align 1, !dbg !17547
  br label %sw.epilog21, !dbg !17548

sw.bb20:                                          ; preds = %if.then
  store i8 -86, i8* %syncpat, align 1, !dbg !17549
  br label %sw.epilog21, !dbg !17550

sw.epilog21:                                      ; preds = %if.then, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17551
  %17 = load i8, i8* %syncpat, align 1, !dbg !17551
  %conv22 = zext i8 %17 to i16, !dbg !17551
  %conv23 = zext i16 %conv22 to i32, !dbg !17551
  %shl = shl i32 %conv23, 8, !dbg !17551
  %18 = load i8, i8* %syncpat, align 1, !dbg !17551
  %conv24 = zext i8 %18 to i16, !dbg !17551
  %conv25 = zext i16 %conv24 to i32, !dbg !17551
  %or = or i32 %shl, %conv25, !dbg !17551
  %conv26 = trunc i32 %or to i16, !dbg !17551
  call void @usc_OutReg(%struct.mgsl_struct* %16, i16 zeroext 56, i16 zeroext %conv26) #11, !dbg !17551
  br label %if.end, !dbg !17552

if.end:                                           ; preds = %sw.epilog21, %sw.epilog
  ret void, !dbg !17553
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #1 !dbg !17554 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17555, metadata !DIExpression()), !dbg !17556
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !17557, metadata !DIExpression()), !dbg !17558
  ret i1 true, !dbg !17559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_get_baud_rate(%struct.tty_struct* %tty) #1 !dbg !17560 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17563, metadata !DIExpression()), !dbg !17564
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17565
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 15, !dbg !17566
  %call = call i32 @tty_termios_baud_rate(%struct.ktermios* %termios) #11, !dbg !17567
  ret i32 %call, !dbg !17568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_cts_flow(%struct.tty_port* %port, i1 zeroext %val) #1 !dbg !17569 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !17570, metadata !DIExpression()), !dbg !17571
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !17572, metadata !DIExpression()), !dbg !17573
  %0 = load i8, i8* %val.addr, align 1, !dbg !17574
  %tobool = trunc i8 %0 to i1, !dbg !17574
  br i1 %tobool, label %if.then, label %if.else, !dbg !17576

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !17577
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !17578
  call void @set_bit(i64 3, i64* %iflags) #11, !dbg !17579
  br label %if.end, !dbg !17579

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !17580
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !17581
  call void @clear_bit(i64 3, i64* %iflags1) #11, !dbg !17582
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !17583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_check_carrier(%struct.tty_port* %port, i1 zeroext %val) #1 !dbg !17584 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !17585, metadata !DIExpression()), !dbg !17586
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !17587, metadata !DIExpression()), !dbg !17588
  %0 = load i8, i8* %val.addr, align 1, !dbg !17589
  %tobool = trunc i8 %0 to i1, !dbg !17589
  br i1 %tobool, label %if.then, label %if.else, !dbg !17591

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !17592
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !17593
  call void @set_bit(i64 4, i64* %iflags) #11, !dbg !17594
  br label %if.end, !dbg !17594

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !17595
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !17596
  call void @clear_bit(i64 4, i64* %iflags1) #11, !dbg !17597
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !17598
}

; Function Attrs: noredzone
declare dso_local i32 @tty_termios_baud_rate(%struct.ktermios*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_set_sync_mode(%struct.mgsl_struct* %info) #1 !dbg !17599 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !17600, metadata !DIExpression()), !dbg !17601
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17602
  call void @usc_loopback_frame(%struct.mgsl_struct* %0) #11, !dbg !17603
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17604
  call void @usc_set_sdlc_mode(%struct.mgsl_struct* %1) #11, !dbg !17605
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17606
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17607
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 70, !dbg !17608
  %clock_speed = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 4, !dbg !17609
  %4 = load i64, i64* %clock_speed, align 8, !dbg !17609
  %conv = trunc i64 %4 to i32, !dbg !17607
  call void @usc_enable_aux_clock(%struct.mgsl_struct* %2, i32 %conv) #11, !dbg !17610
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17611
  %params1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 70, !dbg !17613
  %loopback = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params1, i32 0, i32 1, !dbg !17614
  %6 = load i8, i8* %loopback, align 8, !dbg !17614
  %tobool = icmp ne i8 %6, 0, !dbg !17611
  br i1 %tobool, label %if.then, label %if.end, !dbg !17615

if.then:                                          ; preds = %entry
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17616
  call void @usc_enable_loopback(%struct.mgsl_struct* %7, i32 1) #11, !dbg !17617
  br label %if.end, !dbg !17617

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_set_async_mode(%struct.mgsl_struct* %info) #1 !dbg !17619 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %RegValue = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !17620, metadata !DIExpression()), !dbg !17621
  call void @llvm.dbg.declare(metadata i16* %RegValue, metadata !17622, metadata !DIExpression()), !dbg !17623
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17624
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17624
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %1, i16 zeroext 24) #11, !dbg !17624
  %conv = zext i16 %call to i32, !dbg !17624
  %and = and i32 %conv, 32512, !dbg !17624
  %conv1 = trunc i32 %and to i16, !dbg !17624
  call void @usc_OutReg(%struct.mgsl_struct* %0, i16 zeroext 24, i16 zeroext %conv1) #11, !dbg !17624
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17625
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 59, !dbg !17626
  %3 = load i32, i32* %io_base, align 4, !dbg !17626
  call void @outw(i16 zeroext 0, i32 %3) #11, !dbg !17627
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17628
  call void @usc_DmaCmd(%struct.mgsl_struct* %4, i16 zeroext -28672) #11, !dbg !17629
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17630
  call void @usc_loopback_frame(%struct.mgsl_struct* %5) #11, !dbg !17631
  store i16 0, i16* %RegValue, align 2, !dbg !17632
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17633
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 70, !dbg !17635
  %stop_bits = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 11, !dbg !17636
  %7 = load i8, i8* %stop_bits, align 1, !dbg !17636
  %conv2 = zext i8 %7 to i32, !dbg !17633
  %cmp = icmp ne i32 %conv2, 1, !dbg !17637
  br i1 %cmp, label %if.then, label %if.end, !dbg !17638

if.then:                                          ; preds = %entry
  %8 = load i16, i16* %RegValue, align 2, !dbg !17639
  %conv4 = zext i16 %8 to i32, !dbg !17639
  %or = or i32 %conv4, 16384, !dbg !17639
  %conv5 = trunc i32 %or to i16, !dbg !17639
  store i16 %conv5, i16* %RegValue, align 2, !dbg !17639
  br label %if.end, !dbg !17640

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17641
  %10 = load i16, i16* %RegValue, align 2, !dbg !17642
  call void @usc_OutReg(%struct.mgsl_struct* %9, i16 zeroext 2, i16 zeroext %10) #11, !dbg !17643
  store i16 0, i16* %RegValue, align 2, !dbg !17644
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17645
  %params6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 70, !dbg !17647
  %data_bits = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params6, i32 0, i32 10, !dbg !17648
  %12 = load i8, i8* %data_bits, align 8, !dbg !17648
  %conv7 = zext i8 %12 to i32, !dbg !17645
  %cmp8 = icmp ne i32 %conv7, 8, !dbg !17649
  br i1 %cmp8, label %if.then10, label %if.end14, !dbg !17650

if.then10:                                        ; preds = %if.end
  %13 = load i16, i16* %RegValue, align 2, !dbg !17651
  %conv11 = zext i16 %13 to i32, !dbg !17651
  %or12 = or i32 %conv11, 28, !dbg !17651
  %conv13 = trunc i32 %or12 to i16, !dbg !17651
  store i16 %conv13, i16* %RegValue, align 2, !dbg !17651
  br label %if.end14, !dbg !17652

if.end14:                                         ; preds = %if.then10, %if.end
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17653
  %params15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 70, !dbg !17655
  %parity = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params15, i32 0, i32 12, !dbg !17656
  %15 = load i8, i8* %parity, align 2, !dbg !17656
  %conv16 = zext i8 %15 to i32, !dbg !17653
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !17657
  br i1 %cmp17, label %if.then19, label %if.end33, !dbg !17658

if.then19:                                        ; preds = %if.end14
  %16 = load i16, i16* %RegValue, align 2, !dbg !17659
  %conv20 = zext i16 %16 to i32, !dbg !17659
  %or21 = or i32 %conv20, 32, !dbg !17659
  %conv22 = trunc i32 %or21 to i16, !dbg !17659
  store i16 %conv22, i16* %RegValue, align 2, !dbg !17659
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17661
  %params23 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 70, !dbg !17663
  %parity24 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params23, i32 0, i32 12, !dbg !17664
  %18 = load i8, i8* %parity24, align 2, !dbg !17664
  %conv25 = zext i8 %18 to i32, !dbg !17661
  %cmp26 = icmp ne i32 %conv25, 2, !dbg !17665
  br i1 %cmp26, label %if.then28, label %if.end32, !dbg !17666

if.then28:                                        ; preds = %if.then19
  %19 = load i16, i16* %RegValue, align 2, !dbg !17667
  %conv29 = zext i16 %19 to i32, !dbg !17667
  %or30 = or i32 %conv29, 64, !dbg !17667
  %conv31 = trunc i32 %or30 to i16, !dbg !17667
  store i16 %conv31, i16* %RegValue, align 2, !dbg !17667
  br label %if.end32, !dbg !17668

if.end32:                                         ; preds = %if.then28, %if.then19
  br label %if.end33, !dbg !17669

if.end33:                                         ; preds = %if.end32, %if.end14
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17670
  %21 = load i16, i16* %RegValue, align 2, !dbg !17671
  call void @usc_OutReg(%struct.mgsl_struct* %20, i16 zeroext 34, i16 zeroext %21) #11, !dbg !17672
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17673
  call void @usc_OutReg(%struct.mgsl_struct* %22, i16 zeroext 36, i16 zeroext 24576) #11, !dbg !17673
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17674
  call void @usc_OutReg(%struct.mgsl_struct* %23, i16 zeroext 38, i16 zeroext 0) #11, !dbg !17675
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17676
  call void @usc_OutReg(%struct.mgsl_struct* %24, i16 zeroext 36, i16 zeroext 502) #11, !dbg !17676
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17677
  call void @usc_OutReg(%struct.mgsl_struct* %25, i16 zeroext 26, i16 zeroext 96) #11, !dbg !17677
  store i16 0, i16* %RegValue, align 2, !dbg !17678
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17679
  %params34 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 70, !dbg !17681
  %data_bits35 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params34, i32 0, i32 10, !dbg !17682
  %27 = load i8, i8* %data_bits35, align 8, !dbg !17682
  %conv36 = zext i8 %27 to i32, !dbg !17679
  %cmp37 = icmp ne i32 %conv36, 8, !dbg !17683
  br i1 %cmp37, label %if.then39, label %if.end43, !dbg !17684

if.then39:                                        ; preds = %if.end33
  %28 = load i16, i16* %RegValue, align 2, !dbg !17685
  %conv40 = zext i16 %28 to i32, !dbg !17685
  %or41 = or i32 %conv40, 28, !dbg !17685
  %conv42 = trunc i32 %or41 to i16, !dbg !17685
  store i16 %conv42, i16* %RegValue, align 2, !dbg !17685
  br label %if.end43, !dbg !17686

if.end43:                                         ; preds = %if.then39, %if.end33
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17687
  %params44 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 70, !dbg !17689
  %parity45 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params44, i32 0, i32 12, !dbg !17690
  %30 = load i8, i8* %parity45, align 2, !dbg !17690
  %conv46 = zext i8 %30 to i32, !dbg !17687
  %cmp47 = icmp ne i32 %conv46, 0, !dbg !17691
  br i1 %cmp47, label %if.then49, label %if.end63, !dbg !17692

if.then49:                                        ; preds = %if.end43
  %31 = load i16, i16* %RegValue, align 2, !dbg !17693
  %conv50 = zext i16 %31 to i32, !dbg !17693
  %or51 = or i32 %conv50, 32, !dbg !17693
  %conv52 = trunc i32 %or51 to i16, !dbg !17693
  store i16 %conv52, i16* %RegValue, align 2, !dbg !17693
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17695
  %params53 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 70, !dbg !17697
  %parity54 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params53, i32 0, i32 12, !dbg !17698
  %33 = load i8, i8* %parity54, align 2, !dbg !17698
  %conv55 = zext i8 %33 to i32, !dbg !17695
  %cmp56 = icmp ne i32 %conv55, 2, !dbg !17699
  br i1 %cmp56, label %if.then58, label %if.end62, !dbg !17700

if.then58:                                        ; preds = %if.then49
  %34 = load i16, i16* %RegValue, align 2, !dbg !17701
  %conv59 = zext i16 %34 to i32, !dbg !17701
  %or60 = or i32 %conv59, 64, !dbg !17701
  %conv61 = trunc i32 %or60 to i16, !dbg !17701
  store i16 %conv61, i16* %RegValue, align 2, !dbg !17701
  br label %if.end62, !dbg !17702

if.end62:                                         ; preds = %if.then58, %if.then49
  br label %if.end63, !dbg !17703

if.end63:                                         ; preds = %if.end62, %if.end43
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17704
  %36 = load i16, i16* %RegValue, align 2, !dbg !17705
  call void @usc_OutReg(%struct.mgsl_struct* %35, i16 zeroext 50, i16 zeroext %36) #11, !dbg !17706
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17707
  call void @usc_set_txidle(%struct.mgsl_struct* %37) #11, !dbg !17708
  %38 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17709
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17709
  %tcsr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %39, i32 0, i32 55, !dbg !17709
  %40 = load i16, i16* %tcsr_value, align 2, !dbg !17709
  %conv64 = zext i16 %40 to i32, !dbg !17709
  %add = add i32 %conv64, 24576, !dbg !17709
  %conv65 = trunc i32 %add to i16, !dbg !17709
  call void @usc_OutReg(%struct.mgsl_struct* %38, i16 zeroext 52, i16 zeroext %conv65) #11, !dbg !17709
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17710
  call void @usc_OutReg(%struct.mgsl_struct* %41, i16 zeroext 54, i16 zeroext 8000) #11, !dbg !17711
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17712
  %43 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17712
  %tcsr_value66 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %43, i32 0, i32 55, !dbg !17712
  %44 = load i16, i16* %tcsr_value66, align 2, !dbg !17712
  %conv67 = zext i16 %44 to i32, !dbg !17712
  %add68 = add i32 %conv67, 250, !dbg !17712
  %conv69 = trunc i32 %add68 to i16, !dbg !17712
  call void @usc_OutReg(%struct.mgsl_struct* %42, i16 zeroext 52, i16 zeroext %conv69) #11, !dbg !17712
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17713
  call void @usc_OutReg(%struct.mgsl_struct* %45, i16 zeroext 26, i16 zeroext 72) #11, !dbg !17713
  %46 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17714
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17715
  %params70 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 70, !dbg !17716
  %data_rate = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params70, i32 0, i32 9, !dbg !17717
  %48 = load i64, i64* %data_rate, align 8, !dbg !17717
  %conv71 = trunc i64 %48 to i32, !dbg !17715
  call void @usc_enable_async_clock(%struct.mgsl_struct* %46, i32 %conv71) #11, !dbg !17718
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17719
  call void @usc_OutReg(%struct.mgsl_struct* %49, i16 zeroext 4, i16 zeroext 32) #11, !dbg !17720
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17721
  %51 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17721
  %call72 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %51, i16 zeroext 24) #11, !dbg !17721
  %conv73 = zext i16 %call72 to i32, !dbg !17721
  %and74 = and i32 %conv73, 65280, !dbg !17721
  %add75 = add i32 %and74, 128, !dbg !17721
  %add76 = add i32 %add75, 60, !dbg !17721
  %conv77 = trunc i32 %add76 to i16, !dbg !17721
  call void @usc_OutReg(%struct.mgsl_struct* %50, i16 zeroext 24, i16 zeroext %conv77) #11, !dbg !17721
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17722
  call void @usc_OutReg(%struct.mgsl_struct* %52, i16 zeroext 26, i16 zeroext 124) #11, !dbg !17722
  %53 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17723
  %54 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17723
  %call78 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %54, i16 zeroext 24) #11, !dbg !17723
  %conv79 = zext i16 %call78 to i32, !dbg !17723
  %and80 = and i32 %conv79, 3840, !dbg !17723
  %add81 = add i32 %and80, 45056, !dbg !17723
  %conv82 = trunc i32 %add81 to i16, !dbg !17723
  call void @usc_OutReg(%struct.mgsl_struct* %53, i16 zeroext 24, i16 zeroext %conv82) #11, !dbg !17723
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17724
  %params83 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %55, i32 0, i32 70, !dbg !17726
  %loopback = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params83, i32 0, i32 1, !dbg !17727
  %56 = load i8, i8* %loopback, align 8, !dbg !17727
  %tobool = icmp ne i8 %56, 0, !dbg !17724
  br i1 %tobool, label %if.then84, label %if.end87, !dbg !17728

if.then84:                                        ; preds = %if.end63
  %57 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17729
  %loopback_bits = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %57, i32 0, i32 68, !dbg !17731
  store i16 768, i16* %loopback_bits, align 4, !dbg !17732
  %58 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17733
  %io_base85 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %58, i32 0, i32 59, !dbg !17734
  %59 = load i32, i32* %io_base85, align 4, !dbg !17734
  %add86 = add i32 %59, 4, !dbg !17735
  call void @outw(i16 zeroext 768, i32 %add86) #11, !dbg !17736
  br label %if.end87, !dbg !17737

if.end87:                                         ; preds = %if.then84, %if.end63
  ret void, !dbg !17738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_loopback_frame(%struct.mgsl_struct* %info) #1 !dbg !17739 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %i = alloca i32, align 4
  %oldmode = alloca i64, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !17740, metadata !DIExpression()), !dbg !17741
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17742, metadata !DIExpression()), !dbg !17743
  call void @llvm.dbg.declare(metadata i64* %oldmode, metadata !17744, metadata !DIExpression()), !dbg !17745
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17746
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 70, !dbg !17747
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !17748
  %1 = load i64, i64* %mode, align 8, !dbg !17748
  store i64 %1, i64* %oldmode, align 8, !dbg !17745
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17749
  %params1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 70, !dbg !17750
  %mode2 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params1, i32 0, i32 0, !dbg !17751
  store i64 2, i64* %mode2, align 8, !dbg !17752
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17753
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17753
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %4, i16 zeroext 24) #11, !dbg !17753
  %conv = zext i16 %call to i32, !dbg !17753
  %and = and i32 %conv, 32512, !dbg !17753
  %conv3 = trunc i32 %and to i16, !dbg !17753
  call void @usc_OutReg(%struct.mgsl_struct* %3, i16 zeroext 24, i16 zeroext %conv3) #11, !dbg !17753
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17754
  call void @usc_set_sdlc_mode(%struct.mgsl_struct* %5) #11, !dbg !17755
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17756
  call void @usc_enable_loopback(%struct.mgsl_struct* %6, i32 1) #11, !dbg !17757
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17758
  call void @usc_OutReg(%struct.mgsl_struct* %7, i16 zeroext 46, i16 zeroext 0) #11, !dbg !17759
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17760
  call void @usc_OutReg(%struct.mgsl_struct* %8, i16 zeroext 6, i16 zeroext 256) #11, !dbg !17761
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17762
  call void @usc_RTCmd(%struct.mgsl_struct* %9, i16 zeroext 18432) #11, !dbg !17763
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17764
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17764
  %call4 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %11, i16 zeroext 34) #11, !dbg !17764
  %conv5 = zext i16 %call4 to i32, !dbg !17764
  %and6 = and i32 %conv5, 65532, !dbg !17764
  %or = or i32 %and6, 2, !dbg !17764
  %conv7 = trunc i32 %or to i16, !dbg !17764
  call void @usc_OutReg(%struct.mgsl_struct* %10, i16 zeroext 34, i16 zeroext %conv7) #11, !dbg !17764
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17765
  call void @usc_OutReg(%struct.mgsl_struct* %12, i16 zeroext 58, i16 zeroext 2) #11, !dbg !17766
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17767
  call void @usc_RTCmd(%struct.mgsl_struct* %13, i16 zeroext 20480) #11, !dbg !17768
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17769
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17769
  %tcsr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 55, !dbg !17769
  %16 = load i16, i16* %tcsr_value, align 2, !dbg !17769
  %conv8 = zext i16 %16 to i32, !dbg !17769
  %add = add i32 %conv8, 250, !dbg !17769
  %conv9 = trunc i32 %add to i16, !dbg !17769
  call void @usc_OutReg(%struct.mgsl_struct* %14, i16 zeroext 52, i16 zeroext %conv9) #11, !dbg !17769
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17770
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 59, !dbg !17771
  %18 = load i32, i32* %io_base, align 4, !dbg !17771
  %add10 = add i32 %18, 2, !dbg !17772
  %add11 = add i32 %add10, 4, !dbg !17773
  call void @outw(i16 zeroext 0, i32 %add11) #11, !dbg !17774
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17775
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17775
  %tcsr_value12 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 55, !dbg !17775
  %21 = load i16, i16* %tcsr_value12, align 2, !dbg !17775
  %conv13 = zext i16 %21 to i32, !dbg !17775
  %add14 = add i32 %conv13, 32768, !dbg !17775
  %conv15 = trunc i32 %add14 to i16, !dbg !17775
  call void @usc_OutReg(%struct.mgsl_struct* %19, i16 zeroext 52, i16 zeroext %conv15) #11, !dbg !17775
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17776
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17776
  %call16 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %23, i16 zeroext 50) #11, !dbg !17776
  %conv17 = zext i16 %call16 to i32, !dbg !17776
  %and18 = and i32 %conv17, 65532, !dbg !17776
  %or19 = or i32 %and18, 2, !dbg !17776
  %conv20 = trunc i32 %or19 to i16, !dbg !17776
  call void @usc_OutReg(%struct.mgsl_struct* %22, i16 zeroext 50, i16 zeroext %conv20) #11, !dbg !17776
  store i32 0, i32* %i, align 4, !dbg !17777
  br label %for.cond, !dbg !17779

for.cond:                                         ; preds = %for.inc, %entry
  %24 = load i32, i32* %i, align 4, !dbg !17780
  %cmp = icmp slt i32 %24, 1000, !dbg !17782
  br i1 %cmp, label %for.body, label %for.end, !dbg !17783

for.body:                                         ; preds = %for.cond
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17784
  %call22 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %25, i16 zeroext 36) #11, !dbg !17786
  %conv23 = zext i16 %call22 to i32, !dbg !17786
  %and24 = and i32 %conv23, 282, !dbg !17787
  %tobool = icmp ne i32 %and24, 0, !dbg !17787
  br i1 %tobool, label %if.then, label %if.end, !dbg !17788

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !17789

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !17790

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !17791
  %inc = add i32 %26, 1, !dbg !17791
  store i32 %inc, i32* %i, align 4, !dbg !17791
  br label %for.cond, !dbg !17792, !llvm.loop !17793

for.end:                                          ; preds = %if.then, %for.cond
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17795
  call void @usc_enable_loopback(%struct.mgsl_struct* %27, i32 0) #11, !dbg !17796
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17797
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17797
  %call25 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %29, i16 zeroext 24) #11, !dbg !17797
  %conv26 = zext i16 %call25 to i32, !dbg !17797
  %and27 = and i32 %conv26, 3840, !dbg !17797
  %add28 = add i32 %and27, 45056, !dbg !17797
  %conv29 = trunc i32 %add28 to i16, !dbg !17797
  call void @usc_OutReg(%struct.mgsl_struct* %28, i16 zeroext 24, i16 zeroext %conv29) #11, !dbg !17797
  %30 = load i64, i64* %oldmode, align 8, !dbg !17798
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17799
  %params30 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 70, !dbg !17800
  %mode31 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params30, i32 0, i32 0, !dbg !17801
  store i64 %30, i64* %mode31, align 8, !dbg !17802
  ret void, !dbg !17803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_enable_aux_clock(%struct.mgsl_struct* %info, i32 %data_rate) #1 !dbg !17804 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %data_rate.addr = alloca i32, align 4
  %XtalSpeed = alloca i32, align 4
  %Tc = alloca i16, align 2
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !17807, metadata !DIExpression()), !dbg !17808
  store i32 %data_rate, i32* %data_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_rate.addr, metadata !17809, metadata !DIExpression()), !dbg !17810
  call void @llvm.dbg.declare(metadata i32* %XtalSpeed, metadata !17811, metadata !DIExpression()), !dbg !17812
  call void @llvm.dbg.declare(metadata i16* %Tc, metadata !17813, metadata !DIExpression()), !dbg !17814
  %0 = load i32, i32* %data_rate.addr, align 4, !dbg !17815
  %tobool = icmp ne i32 %0, 0, !dbg !17815
  br i1 %tobool, label %if.then, label %if.else, !dbg !17817

if.then:                                          ; preds = %entry
  store i32 11059200, i32* %XtalSpeed, align 4, !dbg !17818
  %1 = load i32, i32* %XtalSpeed, align 4, !dbg !17820
  %2 = load i32, i32* %data_rate.addr, align 4, !dbg !17821
  %div = udiv i32 %1, %2, !dbg !17822
  %conv = trunc i32 %div to i16, !dbg !17823
  store i16 %conv, i16* %Tc, align 2, !dbg !17824
  %3 = load i32, i32* %XtalSpeed, align 4, !dbg !17825
  %4 = load i32, i32* %data_rate.addr, align 4, !dbg !17827
  %rem = urem i32 %3, %4, !dbg !17828
  %mul = mul i32 %rem, 2, !dbg !17829
  %5 = load i32, i32* %data_rate.addr, align 4, !dbg !17830
  %div1 = udiv i32 %mul, %5, !dbg !17831
  %tobool2 = icmp ne i32 %div1, 0, !dbg !17831
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !17832

if.then3:                                         ; preds = %if.then
  %6 = load i16, i16* %Tc, align 2, !dbg !17833
  %dec = add i16 %6, -1, !dbg !17833
  store i16 %dec, i16* %Tc, align 2, !dbg !17833
  br label %if.end, !dbg !17834

if.end:                                           ; preds = %if.then3, %if.then
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17835
  %8 = load i16, i16* %Tc, align 2, !dbg !17836
  call void @usc_OutReg(%struct.mgsl_struct* %7, i16 zeroext 46, i16 zeroext %8) #11, !dbg !17837
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17838
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17839
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %10, i16 zeroext 18) #11, !dbg !17840
  %conv4 = zext i16 %call to i32, !dbg !17840
  %and = and i32 %conv4, -3, !dbg !17841
  %or = or i32 %and, 1, !dbg !17842
  %conv5 = trunc i32 %or to i16, !dbg !17843
  call void @usc_OutReg(%struct.mgsl_struct* %9, i16 zeroext 18, i16 zeroext %conv5) #11, !dbg !17844
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17845
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17846
  %call6 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %12, i16 zeroext 22) #11, !dbg !17847
  %conv7 = zext i16 %call6 to i32, !dbg !17847
  %and8 = and i32 %conv7, 65528, !dbg !17848
  %or9 = or i32 %and8, 4, !dbg !17849
  %conv10 = trunc i32 %or9 to i16, !dbg !17850
  call void @usc_OutReg(%struct.mgsl_struct* %11, i16 zeroext 22, i16 zeroext %conv10) #11, !dbg !17851
  br label %if.end15, !dbg !17852

if.else:                                          ; preds = %entry
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17853
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17855
  %call11 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %14, i16 zeroext 18) #11, !dbg !17856
  %conv12 = zext i16 %call11 to i32, !dbg !17856
  %and13 = and i32 %conv12, -2, !dbg !17857
  %conv14 = trunc i32 %and13 to i16, !dbg !17858
  call void @usc_OutReg(%struct.mgsl_struct* %13, i16 zeroext 18, i16 zeroext %conv14) #11, !dbg !17859
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.end
  ret void, !dbg !17860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_enable_async_clock(%struct.mgsl_struct* %info, i32 %data_rate) #1 !dbg !17861 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %data_rate.addr = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !17862, metadata !DIExpression()), !dbg !17863
  store i32 %data_rate, i32* %data_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_rate.addr, metadata !17864, metadata !DIExpression()), !dbg !17865
  %0 = load i32, i32* %data_rate.addr, align 4, !dbg !17866
  %tobool = icmp ne i32 %0, 0, !dbg !17866
  br i1 %tobool, label %if.then, label %if.else, !dbg !17868

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17869
  call void @usc_OutReg(%struct.mgsl_struct* %1, i16 zeroext 16, i16 zeroext 3940) #11, !dbg !17871
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17872
  %3 = load i32, i32* %data_rate.addr, align 4, !dbg !17873
  %div = udiv i32 691200, %3, !dbg !17874
  %sub = sub i32 %div, 1, !dbg !17875
  %conv = trunc i32 %sub to i16, !dbg !17876
  call void @usc_OutReg(%struct.mgsl_struct* %2, i16 zeroext 46, i16 zeroext %conv) #11, !dbg !17877
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17878
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17879
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %5, i16 zeroext 18) #11, !dbg !17880
  %conv1 = zext i16 %call to i32, !dbg !17880
  %and = and i32 %conv1, -3, !dbg !17881
  %or = or i32 %and, 1, !dbg !17882
  %conv2 = trunc i32 %or to i16, !dbg !17883
  call void @usc_OutReg(%struct.mgsl_struct* %4, i16 zeroext 18, i16 zeroext %conv2) #11, !dbg !17884
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17885
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17886
  %call3 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %7, i16 zeroext 22) #11, !dbg !17887
  %conv4 = zext i16 %call3 to i32, !dbg !17887
  %and5 = and i32 %conv4, 65528, !dbg !17888
  %or6 = or i32 %and5, 4, !dbg !17889
  %conv7 = trunc i32 %or6 to i16, !dbg !17890
  call void @usc_OutReg(%struct.mgsl_struct* %6, i16 zeroext 22, i16 zeroext %conv7) #11, !dbg !17891
  br label %if.end, !dbg !17892

if.else:                                          ; preds = %entry
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17893
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17895
  %call8 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %9, i16 zeroext 18) #11, !dbg !17896
  %conv9 = zext i16 %call8 to i32, !dbg !17896
  %and10 = and i32 %conv9, -2, !dbg !17897
  %conv11 = trunc i32 %and10 to i16, !dbg !17898
  call void @usc_OutReg(%struct.mgsl_struct* %8, i16 zeroext 18, i16 zeroext %conv11) #11, !dbg !17899
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !17900
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #1 !dbg !17901 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !17902, metadata !DIExpression()), !dbg !17904
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17906, metadata !DIExpression()), !dbg !17907
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17908
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !17909
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !17910
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !17911
  call void @set_bit(i64 0, i64* %state.i) #14, !dbg !17912
  ret void, !dbg !17913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @shutdown(%struct.mgsl_struct* %info) #1 !dbg !17914 {
entry:
  %lock.addr.i71 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i71, metadata !9306, metadata !DIExpression()), !dbg !17915
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !17917
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !17918
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !17925, metadata !DIExpression()), !dbg !17926
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17927, metadata !DIExpression()), !dbg !17928
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17929
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 1, !dbg !17931
  %call = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #11, !dbg !17932
  br i1 %call, label %if.end, label %if.then, !dbg !17933

if.then:                                          ; preds = %entry
  br label %return, !dbg !17934

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @debug_level, align 4, !dbg !17935
  %cmp = icmp sge i32 %1, 3, !dbg !17937
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !17938

if.then1:                                         ; preds = %if.end
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17939
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 56, !dbg !17940
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17939
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1813, i8* %arraydecay) #12, !dbg !17941
  br label %if.end3, !dbg !17941

if.end3:                                          ; preds = %if.then1, %if.end
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17942
  %status_event_wait_q = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 13, !dbg !17942
  call void @__wake_up(%struct.wait_queue_head* %status_event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !17942
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17943
  %event_wait_q = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 14, !dbg !17943
  call void @__wake_up(%struct.wait_queue_head* %event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !17943
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17944
  %tx_timer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 15, !dbg !17944
  %call4 = call i32 @del_timer(%struct.timer_list* %tx_timer) #11, !dbg !17944
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17945
  %xmit_buf = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 9, !dbg !17947
  %7 = load i8*, i8** %xmit_buf, align 8, !dbg !17947
  %tobool = icmp ne i8* %7, null, !dbg !17945
  br i1 %tobool, label %if.then5, label %if.end8, !dbg !17948

if.then5:                                         ; preds = %if.end3
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17949
  %xmit_buf6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 9, !dbg !17949
  %9 = load i8*, i8** %xmit_buf6, align 8, !dbg !17949
  %10 = ptrtoint i8* %9 to i64, !dbg !17949
  call void @free_pages(i64 %10, i32 0) #11, !dbg !17949
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17951
  %xmit_buf7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 9, !dbg !17952
  store i8* null, i8** %xmit_buf7, align 8, !dbg !17953
  br label %if.end8, !dbg !17954

if.end8:                                          ; preds = %if.then5, %if.end3
  br label %do.body, !dbg !17955

do.body:                                          ; preds = %if.end8
  br label %do.body9, !dbg !17956

do.body9:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17957, metadata !DIExpression()), !dbg !17959
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17960, metadata !DIExpression()), !dbg !17959
  %cmp10 = icmp eq i64* %__dummy, %__dummy2, !dbg !17959
  %conv = zext i1 %cmp10 to i32, !dbg !17959
  store i32 1, i32* %tmp, align 4, !dbg !17959
  %12 = load i32, i32* %tmp, align 4, !dbg !17959
  br label %do.body11, !dbg !17961

do.body11:                                        ; preds = %do.body9
  br label %do.body12, !dbg !17962

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !17963

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !17965, metadata !DIExpression()), !dbg !17968
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !17969, metadata !DIExpression()), !dbg !17968
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !17968
  %conv17 = zext i1 %cmp16 to i32, !dbg !17968
  store i32 1, i32* %tmp18, align 4, !dbg !17968
  %13 = load i32, i32* %tmp18, align 4, !dbg !17968
  %call19 = call i64 @arch_local_irq_save() #11, !dbg !17970
  store i64 %call19, i64* %flags, align 8, !dbg !17970
  br label %do.end, !dbg !17970

do.end:                                           ; preds = %do.body13
  br label %do.end20, !dbg !17963

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !17962

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17971, !srcloc !17972
  br label %do.body22, !dbg !17971

do.body22:                                        ; preds = %do.body21
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17973
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 17, !dbg !17973
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17974
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !17975
  %rlock.i = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !17975
  br label %do.end24, !dbg !17973

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !17971

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !17962

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !17961

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !17956

do.end28:                                         ; preds = %do.end27
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17976
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17976
  %call29 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %18, i16 zeroext 24) #11, !dbg !17976
  %conv30 = zext i16 %call29 to i32, !dbg !17976
  %and = and i32 %conv30, 32512, !dbg !17976
  %conv31 = trunc i32 %and to i16, !dbg !17976
  call void @usc_OutReg(%struct.mgsl_struct* %17, i16 zeroext 24, i16 zeroext %conv31) #11, !dbg !17976
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17977
  call void @usc_stop_receiver(%struct.mgsl_struct* %19) #11, !dbg !17978
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17979
  call void @usc_stop_transmitter(%struct.mgsl_struct* %20) #11, !dbg !17980
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17981
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17981
  %call32 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %22, i16 zeroext 24) #11, !dbg !17981
  %conv33 = zext i16 %call32 to i32, !dbg !17981
  %and34 = and i32 %conv33, 65280, !dbg !17981
  %add = add i32 %and34, 128, !dbg !17981
  %add35 = add i32 %add, 63, !dbg !17981
  %conv36 = trunc i32 %add35 to i16, !dbg !17981
  call void @usc_OutReg(%struct.mgsl_struct* %21, i16 zeroext 24, i16 zeroext %conv36) #11, !dbg !17981
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17982
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17982
  %call37 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %24, i16 zeroext 24) #11, !dbg !17982
  %conv38 = zext i16 %call37 to i32, !dbg !17982
  %and39 = and i32 %conv38, -32772, !dbg !17982
  %conv40 = trunc i32 %and39 to i16, !dbg !17982
  call void @usc_OutDmaReg(%struct.mgsl_struct* %23, i16 zeroext 24, i16 zeroext %conv40) #11, !dbg !17982
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17983
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17984
  %call41 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %26, i16 zeroext 10) #11, !dbg !17985
  %conv42 = zext i16 %call41 to i32, !dbg !17985
  %or = or i32 %conv42, 32768, !dbg !17986
  %or43 = or i32 %or, 16384, !dbg !17987
  %conv44 = trunc i32 %or43 to i16, !dbg !17988
  call void @usc_OutReg(%struct.mgsl_struct* %25, i16 zeroext 10, i16 zeroext %conv44) #11, !dbg !17989
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17990
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17991
  %call45 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %28, i16 zeroext 10) #11, !dbg !17992
  %conv46 = zext i16 %call45 to i32, !dbg !17992
  %or47 = or i32 %conv46, 8192, !dbg !17993
  %or48 = or i32 %or47, 4096, !dbg !17994
  %conv49 = trunc i32 %or48 to i16, !dbg !17995
  call void @usc_OutReg(%struct.mgsl_struct* %27, i16 zeroext 10, i16 zeroext %conv49) #11, !dbg !17996
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !17997
  %port50 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 1, !dbg !17999
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port50, i32 0, i32 1, !dbg !18000
  %30 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !18000
  %tobool51 = icmp ne %struct.tty_struct* %30, null, !dbg !17997
  br i1 %tobool51, label %lor.lhs.false, label %if.then56, !dbg !18001

lor.lhs.false:                                    ; preds = %do.end28
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !18002
  %port52 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 1, !dbg !18003
  %tty53 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port52, i32 0, i32 1, !dbg !18004
  %32 = load %struct.tty_struct*, %struct.tty_struct** %tty53, align 8, !dbg !18004
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %32, i32 0, i32 15, !dbg !18005
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !18006
  %33 = load i32, i32* %c_cflag, align 8, !dbg !18006
  %and54 = and i32 %33, 1024, !dbg !18007
  %tobool55 = icmp ne i32 %and54, 0, !dbg !18007
  br i1 %tobool55, label %if.then56, label %if.end60, !dbg !18008

if.then56:                                        ; preds = %lor.lhs.false, %do.end28
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !18009
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 71, !dbg !18011
  %35 = load i8, i8* %serial_signals, align 8, !dbg !18012
  %conv57 = zext i8 %35 to i32, !dbg !18012
  %and58 = and i32 %conv57, -161, !dbg !18012
  %conv59 = trunc i32 %and58 to i8, !dbg !18012
  store i8 %conv59, i8* %serial_signals, align 8, !dbg !18012
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !18013
  call void @usc_set_serial_signals(%struct.mgsl_struct* %36) #11, !dbg !18014
  br label %if.end60, !dbg !18015

if.end60:                                         ; preds = %if.then56, %lor.lhs.false
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !18016
  %irq_spinlock61 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 17, !dbg !18017
  %38 = load i64, i64* %flags, align 8, !dbg !18018
  store %struct.spinlock* %irq_spinlock61, %struct.spinlock** %lock.addr.i71, align 8
  store i64 %38, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !18019
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !18019
  store i32 1, i32* %tmp.i, align 4, !dbg !18019
  %39 = load i32, i32* %tmp.i, align 4, !dbg !18019
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !18020
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !18020
  store i32 1, i32* %tmp8.i, align 4, !dbg !18020
  %40 = load i32, i32* %tmp8.i, align 4, !dbg !18020
  %41 = load i64, i64* %flags.addr.i, align 8, !dbg !18021
  call void @arch_local_irq_restore(i64 %41) #14, !dbg !18021
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18022, !srcloc !9373
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i71, align 8, !dbg !18023
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !18023
  %rlock.i72 = bitcast %union.anon.1* %43 to %struct.raw_spinlock*, !dbg !18023
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !18024
  call void @mgsl_release_resources(%struct.mgsl_struct* %44) #11, !dbg !18025
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !18026
  %port62 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %45, i32 0, i32 1, !dbg !18028
  %tty63 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port62, i32 0, i32 1, !dbg !18029
  %46 = load %struct.tty_struct*, %struct.tty_struct** %tty63, align 8, !dbg !18029
  %tobool64 = icmp ne %struct.tty_struct* %46, null, !dbg !18026
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !18030

if.then65:                                        ; preds = %if.end60
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !18031
  %port66 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 1, !dbg !18032
  %tty67 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port66, i32 0, i32 1, !dbg !18033
  %48 = load %struct.tty_struct*, %struct.tty_struct** %tty67, align 8, !dbg !18033
  %flags68 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %48, i32 0, i32 21, !dbg !18034
  call void @set_bit(i64 1, i64* %flags68) #11, !dbg !18035
  br label %if.end69, !dbg !18035

if.end69:                                         ; preds = %if.then65, %if.end60
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !18036
  %port70 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %49, i32 0, i32 1, !dbg !18037
  call void @tty_port_set_initialized(%struct.tty_port* %port70, i1 zeroext false) #11, !dbg !18038
  br label %return, !dbg !18039

return:                                           ; preds = %if.end69, %if.then
  ret void, !dbg !18039
}

; Function Attrs: noredzone
declare dso_local void @hdlc_close(%struct.net_device*) #4

; Function Attrs: noredzone
declare dso_local void @free_pages(i64, i32) #4

; Function Attrs: noredzone
declare dso_local i32 @hdlc_ioctl(%struct.net_device*, %struct.ifreq*, i32) #4

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #1 !dbg !18040 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !18043, metadata !DIExpression()), !dbg !18044
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !18045, metadata !DIExpression()), !dbg !18046
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !18047, metadata !DIExpression()), !dbg !18049
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !18049
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !18050
  %tobool = icmp ne i32 %0, 0, !dbg !18050
  %lnot = xor i1 %tobool, true, !dbg !18050
  %lnot1 = xor i1 %lnot, true, !dbg !18050
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !18050
  %conv = sext i32 %lnot.ext to i64, !dbg !18050
  %tobool2 = icmp ne i64 %conv, 0, !dbg !18050
  br i1 %tobool2, label %if.then, label %if.end, !dbg !18049

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !18050

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !18052

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !18054

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !18052
  %2 = load i64, i64* %count.addr, align 8, !dbg !18052
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.89, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !18052
  br label %do.body4, !dbg !18052

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !18056

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !18058

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !18056

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 134, i32 2313, i64 12) #10, !dbg !18060, !srcloc !18062
  br label %do.end8, !dbg !18060

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #10, !dbg !18063, !srcloc !18065
  br label %do.body9, !dbg !18056

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !18066

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !18056

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !18052

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !18068

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !18052

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !18052

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !18049
  %tobool15 = icmp ne i32 %3, 0, !dbg !18049
  %lnot16 = xor i1 %tobool15, true, !dbg !18049
  %lnot18 = xor i1 %lnot16, true, !dbg !18049
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !18049
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !18049
  store i64 %conv20, i64* %tmp, align 8, !dbg !18050
  %4 = load i64, i64* %tmp, align 8, !dbg !18049
  ret void, !dbg !18070
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #4

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #1 !dbg !18071 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !18074, metadata !DIExpression()), !dbg !18075
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18076, metadata !DIExpression()), !dbg !18077
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !18078, metadata !DIExpression()), !dbg !18079
  ret void, !dbg !18080
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #1 !dbg !18081 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18082, metadata !DIExpression()), !dbg !18083
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18084
  call void @kfree_skb(%struct.sk_buff* %0) #11, !dbg !18085
  ret void, !dbg !18086
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mgsl_get_text_ptr() #1 !dbg !18087 {
entry:
  ret i8* bitcast (i8* ()* @mgsl_get_text_ptr to i8*), !dbg !18088
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_init_tty() #1 !dbg !18089 {
entry:
  %retval = alloca i32, align 4
  %rc = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !18090, metadata !DIExpression()), !dbg !18091
  %call = call %struct.tty_driver* @alloc_tty_driver(i32 128) #11, !dbg !18092
  store %struct.tty_driver* %call, %struct.tty_driver** @serial_driver, align 8, !dbg !18093
  %0 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18094
  %tobool = icmp ne %struct.tty_driver* %0, null, !dbg !18094
  br i1 %tobool, label %if.end, label %if.then, !dbg !18096

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !18097
  br label %return, !dbg !18097

if.end:                                           ; preds = %entry
  %1 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18098
  %driver_name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %1, i32 0, i32 4, !dbg !18099
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8** %driver_name, align 8, !dbg !18100
  %2 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18101
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %2, i32 0, i32 5, !dbg !18102
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0), i8** %name, align 8, !dbg !18103
  %3 = load i32, i32* @ttymajor, align 4, !dbg !18104
  %4 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18105
  %major = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %4, i32 0, i32 7, !dbg !18106
  store i32 %3, i32* %major, align 4, !dbg !18107
  %5 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18108
  %minor_start = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %5, i32 0, i32 8, !dbg !18109
  store i32 64, i32* %minor_start, align 8, !dbg !18110
  %6 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18111
  %type = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %6, i32 0, i32 10, !dbg !18112
  store i16 3, i16* %type, align 8, !dbg !18113
  %7 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18114
  %subtype = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %7, i32 0, i32 11, !dbg !18115
  store i16 1, i16* %subtype, align 2, !dbg !18116
  %8 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18117
  %init_termios = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %8, i32 0, i32 12, !dbg !18118
  %9 = bitcast %struct.ktermios* %init_termios to i8*, !dbg !18119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 bitcast (%struct.ktermios* @tty_std_termios to i8*), i64 44, i1 false), !dbg !18119
  %10 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18120
  %init_termios1 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %10, i32 0, i32 12, !dbg !18121
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios1, i32 0, i32 2, !dbg !18122
  store i32 3261, i32* %c_cflag, align 4, !dbg !18123
  %11 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18124
  %init_termios2 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %11, i32 0, i32 12, !dbg !18125
  %c_ispeed = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios2, i32 0, i32 6, !dbg !18126
  store i32 9600, i32* %c_ispeed, align 4, !dbg !18127
  %12 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18128
  %init_termios3 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %12, i32 0, i32 12, !dbg !18129
  %c_ospeed = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios3, i32 0, i32 7, !dbg !18130
  store i32 9600, i32* %c_ospeed, align 4, !dbg !18131
  %13 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18132
  %flags = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %13, i32 0, i32 13, !dbg !18133
  store i64 4, i64* %flags, align 8, !dbg !18134
  %14 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18135
  call void @tty_set_operations(%struct.tty_driver* %14, %struct.tty_operations* @mgsl_ops) #11, !dbg !18136
  %15 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18137
  %call4 = call i32 @tty_register_driver(%struct.tty_driver* %15) #11, !dbg !18139
  store i32 %call4, i32* %rc, align 4, !dbg !18140
  %cmp = icmp slt i32 %call4, 0, !dbg !18141
  br i1 %cmp, label %if.then5, label %if.end7, !dbg !18142

if.then5:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 4229) #12, !dbg !18143
  %16 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18145
  call void @put_tty_driver(%struct.tty_driver* %16) #11, !dbg !18146
  store %struct.tty_driver* null, %struct.tty_driver** @serial_driver, align 8, !dbg !18147
  %17 = load i32, i32* %rc, align 4, !dbg !18148
  store i32 %17, i32* %retval, align 4, !dbg !18149
  br label %return, !dbg !18149

if.end7:                                          ; preds = %if.end
  %18 = load i8*, i8** @driver_name, align 8, !dbg !18150
  %19 = load i8*, i8** @driver_version, align 8, !dbg !18151
  %20 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !18152
  %major8 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %20, i32 0, i32 7, !dbg !18153
  %21 = load i32, i32* %major8, align 4, !dbg !18153
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.96, i64 0, i64 0), i8* %18, i8* %19, i32 %21) #12, !dbg !18154
  store i32 0, i32* %retval, align 4, !dbg !18155
  br label %return, !dbg !18155

return:                                           ; preds = %if.end7, %if.then5, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !18156
  ret i32 %22, !dbg !18156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tty_driver* @alloc_tty_driver(i32 %lines) #1 !dbg !18157 {
entry:
  %retval = alloca %struct.tty_driver*, align 8
  %lines.addr = alloca i32, align 4
  %ret = alloca %struct.tty_driver*, align 8
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !18160, metadata !DIExpression()), !dbg !18161
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %ret, metadata !18162, metadata !DIExpression()), !dbg !18163
  %0 = load i32, i32* %lines.addr, align 4, !dbg !18164
  %call = call %struct.tty_driver* @__tty_alloc_driver(i32 %0, %struct.module* null, i64 0) #11, !dbg !18164
  store %struct.tty_driver* %call, %struct.tty_driver** %ret, align 8, !dbg !18163
  %1 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !18165
  %2 = bitcast %struct.tty_driver* %1 to i8*, !dbg !18165
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !18167
  br i1 %call1, label %if.then, label %if.end, !dbg !18168

if.then:                                          ; preds = %entry
  store %struct.tty_driver* null, %struct.tty_driver** %retval, align 8, !dbg !18169
  br label %return, !dbg !18169

if.end:                                           ; preds = %entry
  %3 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !18170
  store %struct.tty_driver* %3, %struct.tty_driver** %retval, align 8, !dbg !18171
  br label %return, !dbg !18171

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.tty_driver*, %struct.tty_driver** %retval, align 8, !dbg !18172
  ret %struct.tty_driver* %4, !dbg !18172
}

; Function Attrs: noredzone
declare dso_local void @tty_set_operations(%struct.tty_driver*, %struct.tty_operations*) #4

; Function Attrs: noredzone
declare dso_local i32 @tty_register_driver(%struct.tty_driver*) #4

; Function Attrs: noredzone
declare dso_local %struct.tty_driver* @__tty_alloc_driver(i32, %struct.module*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #1 !dbg !18173 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !18177, metadata !DIExpression()), !dbg !18178
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !18179
  %1 = ptrtoint i8* %0 to i64, !dbg !18179
  %2 = inttoptr i64 %1 to i8*, !dbg !18179
  %3 = ptrtoint i8* %2 to i64, !dbg !18179
  %cmp = icmp uge i64 %3, -4095, !dbg !18179
  %lnot = xor i1 %cmp, true, !dbg !18179
  %lnot1 = xor i1 %lnot, true, !dbg !18179
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !18179
  %conv = sext i32 %lnot.ext to i64, !dbg !18179
  %tobool = icmp ne i64 %conv, 0, !dbg !18179
  ret i1 %tobool, !dbg !18180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_install(%struct.tty_driver* %driver, %struct.tty_struct* %tty) #1 !dbg !18181 {
entry:
  %retval = alloca i32, align 4
  %driver.addr = alloca %struct.tty_driver*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %line = alloca i32, align 4
  store %struct.tty_driver* %driver, %struct.tty_driver** %driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %driver.addr, metadata !18182, metadata !DIExpression()), !dbg !18183
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18184, metadata !DIExpression()), !dbg !18185
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !18186, metadata !DIExpression()), !dbg !18187
  call void @llvm.dbg.declare(metadata i32* %line, metadata !18188, metadata !DIExpression()), !dbg !18189
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18190
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 5, !dbg !18191
  %1 = load i32, i32* %index, align 8, !dbg !18191
  store i32 %1, i32* %line, align 4, !dbg !18189
  %2 = load i32, i32* %line, align 4, !dbg !18192
  %3 = load i32, i32* @mgsl_device_count, align 4, !dbg !18194
  %cmp = icmp sge i32 %2, %3, !dbg !18195
  br i1 %cmp, label %if.then, label %if.end, !dbg !18196

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %line, align 4, !dbg !18197
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3345, i32 %4) #12, !dbg !18199
  store i32 -19, i32* %retval, align 4, !dbg !18200
  br label %return, !dbg !18200

if.end:                                           ; preds = %entry
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** @mgsl_device_list, align 8, !dbg !18201
  store %struct.mgsl_struct* %5, %struct.mgsl_struct** %info, align 8, !dbg !18202
  br label %while.cond, !dbg !18203

while.cond:                                       ; preds = %while.body, %if.end
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18204
  %tobool = icmp ne %struct.mgsl_struct* %6, null, !dbg !18204
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !18205

land.rhs:                                         ; preds = %while.cond
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18206
  %line1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 2, !dbg !18207
  %8 = load i32, i32* %line1, align 8, !dbg !18207
  %9 = load i32, i32* %line, align 4, !dbg !18208
  %cmp2 = icmp ne i32 %8, %9, !dbg !18209
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ], !dbg !18210
  br i1 %10, label %while.body, label %while.end, !dbg !18203

while.body:                                       ; preds = %land.end
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18211
  %next_device = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 16, !dbg !18212
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %next_device, align 8, !dbg !18212
  store %struct.mgsl_struct* %12, %struct.mgsl_struct** %info, align 8, !dbg !18213
  br label %while.cond, !dbg !18203, !llvm.loop !18214

while.end:                                        ; preds = %land.end
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18215
  %14 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18217
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %14, i32 0, i32 18, !dbg !18218
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !18217
  %call3 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %13, i8* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i64 0, i64 0)) #11, !dbg !18219
  %tobool4 = icmp ne i32 %call3, 0, !dbg !18219
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !18220

if.then5:                                         ; preds = %while.end
  store i32 -19, i32* %retval, align 4, !dbg !18221
  br label %return, !dbg !18221

if.end6:                                          ; preds = %while.end
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18222
  %16 = bitcast %struct.mgsl_struct* %15 to i8*, !dbg !18222
  %17 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18223
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %17, i32 0, i32 37, !dbg !18224
  store i8* %16, i8** %driver_data, align 8, !dbg !18225
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18226
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 1, !dbg !18227
  %19 = load %struct.tty_driver*, %struct.tty_driver** %driver.addr, align 8, !dbg !18228
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18229
  %call7 = call i32 @tty_port_install(%struct.tty_port* %port, %struct.tty_driver* %19, %struct.tty_struct* %20) #11, !dbg !18230
  store i32 %call7, i32* %retval, align 4, !dbg !18231
  br label %return, !dbg !18231

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !18232
  ret i32 %21, !dbg !18232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_open(%struct.tty_struct* %tty, %struct.file* %filp) #1 !dbg !18233 {
entry:
  %lock.addr.i81 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i81, metadata !9306, metadata !DIExpression()), !dbg !18234
  %flags.addr.i82 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i82, metadata !9312, metadata !DIExpression()), !dbg !18236
  %tmp.i83 = alloca i32, align 4
  %tmp8.i84 = alloca i32, align 4
  %lock.addr.i79 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i79, metadata !9306, metadata !DIExpression()), !dbg !18237
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !18241
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !18242
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18249, metadata !DIExpression()), !dbg !18250
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !18251, metadata !DIExpression()), !dbg !18252
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !18253, metadata !DIExpression()), !dbg !18254
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18255
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !18256
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18256
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !18255
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !18254
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18257, metadata !DIExpression()), !dbg !18258
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !18259, metadata !DIExpression()), !dbg !18260
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18261
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18262
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 1, !dbg !18263
  %tty2 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !18264
  store %struct.tty_struct* %3, %struct.tty_struct** %tty2, align 8, !dbg !18265
  %5 = load i32, i32* @debug_level, align 4, !dbg !18266
  %cmp = icmp sge i32 %5, 3, !dbg !18268
  br i1 %cmp, label %if.then, label %if.end, !dbg !18269

if.then:                                          ; preds = %entry
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18270
  %driver = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %6, i32 0, i32 3, !dbg !18271
  %7 = load %struct.tty_driver*, %struct.tty_driver** %driver, align 8, !dbg !18271
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %7, i32 0, i32 5, !dbg !18272
  %8 = load i8*, i8** %name, align 8, !dbg !18272
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18273
  %port3 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 1, !dbg !18274
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port3, i32 0, i32 7, !dbg !18275
  %10 = load i32, i32* %count, align 4, !dbg !18275
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3380, i8* %8, i32 %10) #12, !dbg !18276
  br label %if.end, !dbg !18276

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18277
  %port4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 1, !dbg !18278
  %flags5 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port4, i32 0, i32 10, !dbg !18279
  %12 = load i64, i64* %flags5, align 8, !dbg !18279
  %and = and i64 %12, 8192, !dbg !18280
  %tobool = icmp ne i64 %and, 0, !dbg !18281
  %13 = zext i1 %tobool to i64, !dbg !18281
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !18281
  %conv = trunc i32 %cond to i8, !dbg !18281
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18282
  %port6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 1, !dbg !18283
  %low_latency = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port6, i32 0, i32 12, !dbg !18284
  %bf.load = load i8, i8* %low_latency, align 8, !dbg !18285
  %bf.value = and i8 %conv, 1, !dbg !18285
  %bf.shl = shl i8 %bf.value, 1, !dbg !18285
  %bf.clear = and i8 %bf.load, -3, !dbg !18285
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !18285
  store i8 %bf.set, i8* %low_latency, align 8, !dbg !18285
  br label %do.body, !dbg !18286

do.body:                                          ; preds = %if.end
  br label %do.body7, !dbg !18287

do.body7:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18288, metadata !DIExpression()), !dbg !18290
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18291, metadata !DIExpression()), !dbg !18290
  %cmp8 = icmp eq i64* %__dummy, %__dummy2, !dbg !18290
  %conv9 = zext i1 %cmp8 to i32, !dbg !18290
  store i32 1, i32* %tmp, align 4, !dbg !18290
  %15 = load i32, i32* %tmp, align 4, !dbg !18290
  br label %do.body10, !dbg !18292

do.body10:                                        ; preds = %do.body7
  br label %do.body11, !dbg !18293

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !18294

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !18296, metadata !DIExpression()), !dbg !18299
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !18300, metadata !DIExpression()), !dbg !18299
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !18299
  %conv16 = zext i1 %cmp15 to i32, !dbg !18299
  store i32 1, i32* %tmp17, align 4, !dbg !18299
  %16 = load i32, i32* %tmp17, align 4, !dbg !18299
  %call18 = call i64 @arch_local_irq_save() #11, !dbg !18301
  store i64 %call18, i64* %flags, align 8, !dbg !18301
  br label %do.end, !dbg !18301

do.end:                                           ; preds = %do.body12
  br label %do.end19, !dbg !18294

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !18293

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18302, !srcloc !18303
  br label %do.body21, !dbg !18302

do.body21:                                        ; preds = %do.body20
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18304
  %netlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 90, !dbg !18304
  store %struct.spinlock* %netlock, %struct.spinlock** %lock.addr.i, align 8
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18305
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !18306
  %rlock.i = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !18306
  br label %do.end23, !dbg !18304

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !18302

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !18293

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !18292

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !18287

do.end27:                                         ; preds = %do.end26
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18307
  %netcount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 89, !dbg !18308
  %21 = load i32, i32* %netcount, align 4, !dbg !18308
  %tobool28 = icmp ne i32 %21, 0, !dbg !18307
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !18309

if.then29:                                        ; preds = %do.end27
  store i32 -16, i32* %retval1, align 4, !dbg !18310
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18311
  %netlock30 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 90, !dbg !18312
  %23 = load i64, i64* %flags, align 8, !dbg !18313
  store %struct.spinlock* %netlock30, %struct.spinlock** %lock.addr.i79, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !18314
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !18314
  store i32 1, i32* %tmp.i, align 4, !dbg !18314
  %24 = load i32, i32* %tmp.i, align 4, !dbg !18314
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !18315
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !18315
  store i32 1, i32* %tmp8.i, align 4, !dbg !18315
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !18315
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !18316
  call void @arch_local_irq_restore(i64 %26) #14, !dbg !18316
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18317, !srcloc !9373
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i79, align 8, !dbg !18318
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !18318
  %rlock.i80 = bitcast %union.anon.1* %28 to %struct.raw_spinlock*, !dbg !18318
  br label %cleanup, !dbg !18319

if.end31:                                         ; preds = %do.end27
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18320
  %port32 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 1, !dbg !18321
  %count33 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port32, i32 0, i32 7, !dbg !18322
  %30 = load i32, i32* %count33, align 4, !dbg !18323
  %inc = add i32 %30, 1, !dbg !18323
  store i32 %inc, i32* %count33, align 4, !dbg !18323
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18324
  %netlock34 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 90, !dbg !18325
  %32 = load i64, i64* %flags, align 8, !dbg !18326
  store %struct.spinlock* %netlock34, %struct.spinlock** %lock.addr.i81, align 8
  store i64 %32, i64* %flags.addr.i82, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !18327
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !18327
  store i32 1, i32* %tmp.i83, align 4, !dbg !18327
  %33 = load i32, i32* %tmp.i83, align 4, !dbg !18327
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !18328
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !18328
  store i32 1, i32* %tmp8.i84, align 4, !dbg !18328
  %34 = load i32, i32* %tmp8.i84, align 4, !dbg !18328
  %35 = load i64, i64* %flags.addr.i82, align 8, !dbg !18329
  call void @arch_local_irq_restore(i64 %35) #14, !dbg !18329
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18330, !srcloc !9373
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i81, align 8, !dbg !18331
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !18331
  %rlock.i85 = bitcast %union.anon.1* %37 to %struct.raw_spinlock*, !dbg !18331
  %38 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18332
  %port35 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %38, i32 0, i32 1, !dbg !18334
  %count36 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port35, i32 0, i32 7, !dbg !18335
  %39 = load i32, i32* %count36, align 4, !dbg !18335
  %cmp37 = icmp eq i32 %39, 1, !dbg !18336
  br i1 %cmp37, label %if.then39, label %if.end45, !dbg !18337

if.then39:                                        ; preds = %if.end31
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18338
  %call40 = call i32 @startup(%struct.mgsl_struct* %40) #11, !dbg !18340
  store i32 %call40, i32* %retval1, align 4, !dbg !18341
  %41 = load i32, i32* %retval1, align 4, !dbg !18342
  %cmp41 = icmp slt i32 %41, 0, !dbg !18344
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !18345

if.then43:                                        ; preds = %if.then39
  br label %cleanup, !dbg !18346

if.end44:                                         ; preds = %if.then39
  br label %if.end45, !dbg !18347

if.end45:                                         ; preds = %if.end44, %if.end31
  %42 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18348
  %43 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !18349
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18350
  %call46 = call i32 @block_til_ready(%struct.tty_struct* %42, %struct.file* %43, %struct.mgsl_struct* %44) #11, !dbg !18351
  store i32 %call46, i32* %retval1, align 4, !dbg !18352
  %45 = load i32, i32* %retval1, align 4, !dbg !18353
  %tobool47 = icmp ne i32 %45, 0, !dbg !18353
  br i1 %tobool47, label %if.then48, label %if.end54, !dbg !18355

if.then48:                                        ; preds = %if.end45
  %46 = load i32, i32* @debug_level, align 4, !dbg !18356
  %cmp49 = icmp sge i32 %46, 3, !dbg !18359
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !18360

if.then51:                                        ; preds = %if.then48
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18361
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 56, !dbg !18362
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !18361
  %48 = load i32, i32* %retval1, align 4, !dbg !18363
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3404, i8* %arraydecay, i32 %48) #12, !dbg !18364
  br label %if.end53, !dbg !18364

if.end53:                                         ; preds = %if.then51, %if.then48
  br label %cleanup, !dbg !18365

if.end54:                                         ; preds = %if.end45
  %49 = load i32, i32* @debug_level, align 4, !dbg !18366
  %cmp55 = icmp sge i32 %49, 3, !dbg !18368
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !18369

if.then57:                                        ; preds = %if.end54
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18370
  %device_name58 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %50, i32 0, i32 56, !dbg !18371
  %arraydecay59 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name58, i64 0, i64 0, !dbg !18370
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3410, i8* %arraydecay59) #12, !dbg !18372
  br label %if.end61, !dbg !18372

if.end61:                                         ; preds = %if.then57, %if.end54
  store i32 0, i32* %retval1, align 4, !dbg !18373
  br label %cleanup, !dbg !18374

cleanup:                                          ; preds = %if.end61, %if.end53, %if.then43, %if.then29
  call void @llvm.dbg.label(metadata !18375), !dbg !18376
  %51 = load i32, i32* %retval1, align 4, !dbg !18377
  %tobool62 = icmp ne i32 %51, 0, !dbg !18377
  br i1 %tobool62, label %if.then63, label %if.end78, !dbg !18379

if.then63:                                        ; preds = %cleanup
  %52 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18380
  %count64 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %52, i32 0, i32 22, !dbg !18383
  %53 = load i32, i32* %count64, align 8, !dbg !18383
  %cmp65 = icmp eq i32 %53, 1, !dbg !18384
  br i1 %cmp65, label %if.then67, label %if.end70, !dbg !18385

if.then67:                                        ; preds = %if.then63
  %54 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18386
  %port68 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %54, i32 0, i32 1, !dbg !18387
  %tty69 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port68, i32 0, i32 1, !dbg !18388
  store %struct.tty_struct* null, %struct.tty_struct** %tty69, align 8, !dbg !18389
  br label %if.end70, !dbg !18386

if.end70:                                         ; preds = %if.then67, %if.then63
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18390
  %port71 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %55, i32 0, i32 1, !dbg !18392
  %count72 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port71, i32 0, i32 7, !dbg !18393
  %56 = load i32, i32* %count72, align 4, !dbg !18393
  %tobool73 = icmp ne i32 %56, 0, !dbg !18390
  br i1 %tobool73, label %if.then74, label %if.end77, !dbg !18394

if.then74:                                        ; preds = %if.end70
  %57 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18395
  %port75 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %57, i32 0, i32 1, !dbg !18396
  %count76 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port75, i32 0, i32 7, !dbg !18397
  %58 = load i32, i32* %count76, align 4, !dbg !18398
  %dec = add i32 %58, -1, !dbg !18398
  store i32 %dec, i32* %count76, align 4, !dbg !18398
  br label %if.end77, !dbg !18395

if.end77:                                         ; preds = %if.then74, %if.end70
  br label %if.end78, !dbg !18399

if.end78:                                         ; preds = %if.end77, %cleanup
  %59 = load i32, i32* %retval1, align 4, !dbg !18400
  ret i32 %59, !dbg !18401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_close(%struct.tty_struct* %tty, %struct.file* %filp) #1 !dbg !18402 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18403, metadata !DIExpression()), !dbg !18404
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !18405, metadata !DIExpression()), !dbg !18406
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !18407, metadata !DIExpression()), !dbg !18408
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18409
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !18410
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18410
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !18409
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !18408
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18411
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18413
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !18414
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !18413
  %call = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %3, i8* %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i64 0, i64 0)) #11, !dbg !18415
  %tobool = icmp ne i32 %call, 0, !dbg !18415
  br i1 %tobool, label %if.then, label %if.end, !dbg !18416

if.then:                                          ; preds = %entry
  br label %if.end26, !dbg !18417

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !18418
  %cmp = icmp sge i32 %5, 3, !dbg !18420
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !18421

if.then1:                                         ; preds = %if.end
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18422
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 56, !dbg !18423
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !18422
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18424
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 1, !dbg !18425
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !18426
  %8 = load i32, i32* %count, align 4, !dbg !18426
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3075, i8* %arraydecay2, i32 %8) #12, !dbg !18427
  br label %if.end4, !dbg !18427

if.end4:                                          ; preds = %if.then1, %if.end
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18428
  %port5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 1, !dbg !18430
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18431
  %11 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !18432
  %call6 = call i32 @tty_port_close_start(%struct.tty_port* %port5, %struct.tty_struct* %10, %struct.file* %11) #11, !dbg !18433
  %cmp7 = icmp eq i32 %call6, 0, !dbg !18434
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !18435

if.then8:                                         ; preds = %if.end4
  br label %cleanup, !dbg !18436

if.end9:                                          ; preds = %if.end4
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18437
  %port10 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 1, !dbg !18438
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port10, i32 0, i32 13, !dbg !18439
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !18440
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18441
  %port11 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 1, !dbg !18443
  %call12 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port11) #11, !dbg !18444
  br i1 %call12, label %if.then13, label %if.end14, !dbg !18445

if.then13:                                        ; preds = %if.end9
  %14 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18446
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18447
  %timeout = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 5, !dbg !18448
  %16 = load i32, i32* %timeout, align 4, !dbg !18448
  call void @mgsl_wait_until_sent(%struct.tty_struct* %14, i32 %16) #11, !dbg !18449
  br label %if.end14, !dbg !18449

if.end14:                                         ; preds = %if.then13, %if.end9
  %17 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18450
  call void @mgsl_flush_buffer(%struct.tty_struct* %17) #11, !dbg !18451
  %18 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18452
  call void @tty_ldisc_flush(%struct.tty_struct* %18) #11, !dbg !18453
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18454
  call void @shutdown(%struct.mgsl_struct* %19) #11, !dbg !18455
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18456
  %port15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 1, !dbg !18457
  %mutex16 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port15, i32 0, i32 13, !dbg !18458
  call void @mutex_unlock(%struct.mutex* %mutex16) #11, !dbg !18459
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18460
  %port17 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 1, !dbg !18461
  %22 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18462
  call void @tty_port_close_end(%struct.tty_port* %port17, %struct.tty_struct* %22) #11, !dbg !18463
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18464
  %port18 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 1, !dbg !18465
  %tty19 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port18, i32 0, i32 1, !dbg !18466
  store %struct.tty_struct* null, %struct.tty_struct** %tty19, align 8, !dbg !18467
  br label %cleanup, !dbg !18464

cleanup:                                          ; preds = %if.end14, %if.then8
  call void @llvm.dbg.label(metadata !18468), !dbg !18469
  %24 = load i32, i32* @debug_level, align 4, !dbg !18470
  %cmp20 = icmp sge i32 %24, 3, !dbg !18472
  br i1 %cmp20, label %if.then21, label %if.end26, !dbg !18473

if.then21:                                        ; preds = %cleanup
  %25 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18474
  %driver = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %25, i32 0, i32 3, !dbg !18475
  %26 = load %struct.tty_driver*, %struct.tty_driver** %driver, align 8, !dbg !18475
  %name22 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %26, i32 0, i32 5, !dbg !18476
  %27 = load i8*, i8** %name22, align 8, !dbg !18476
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18477
  %port23 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 1, !dbg !18478
  %count24 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port23, i32 0, i32 7, !dbg !18479
  %29 = load i32, i32* %count24, align 4, !dbg !18479
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3092, i8* %27, i32 %29) #12, !dbg !18480
  br label %if.end26, !dbg !18480

if.end26:                                         ; preds = %if.then, %if.then21, %cleanup
  ret void, !dbg !18481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_write(%struct.tty_struct* %tty, i8* %buf, i32 %count) #1 !dbg !18482 {
entry:
  %lock.addr.i206 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i206, metadata !8660, metadata !DIExpression()), !dbg !18483
  %lock.addr.i201 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i201, metadata !9306, metadata !DIExpression()), !dbg !18492
  %flags.addr.i202 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i202, metadata !9312, metadata !DIExpression()), !dbg !18497
  %tmp.i203 = alloca i32, align 4
  %tmp8.i204 = alloca i32, align 4
  %lock.addr.i196 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i196, metadata !9306, metadata !DIExpression()), !dbg !18498
  %flags.addr.i197 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i197, metadata !9312, metadata !DIExpression()), !dbg !18502
  %tmp.i198 = alloca i32, align 4
  %tmp8.i199 = alloca i32, align 4
  %lock.addr.i194 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i194, metadata !8660, metadata !DIExpression()), !dbg !18503
  %lock.addr.i189 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i189, metadata !9306, metadata !DIExpression()), !dbg !18510
  %flags.addr.i190 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i190, metadata !9312, metadata !DIExpression()), !dbg !18515
  %tmp.i191 = alloca i32, align 4
  %tmp8.i192 = alloca i32, align 4
  %lock.addr.i187 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i187, metadata !9306, metadata !DIExpression()), !dbg !18516
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !18518
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !18519
  %tty.addr = alloca %struct.tty_struct*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %c = alloca i32, align 4
  %ret = alloca i32, align 4
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy29 = alloca i64, align 8
  %__dummy230 = alloca i64, align 8
  %tmp33 = alloca i32, align 4
  %__dummy78 = alloca i64, align 8
  %__dummy279 = alloca i64, align 8
  %tmp82 = alloca i32, align 4
  %__dummy86 = alloca i64, align 8
  %__dummy287 = alloca i64, align 8
  %tmp90 = alloca i32, align 4
  %__UNIQUE_ID___x333 = alloca i32, align 4
  %__UNIQUE_ID___y334 = alloca i32, align 4
  %__UNIQUE_ID___x331 = alloca i64, align 8
  %__UNIQUE_ID___y332 = alloca i64, align 8
  %tmp108 = alloca i64, align 8
  %tmp112 = alloca i32, align 4
  %__dummy149 = alloca i64, align 8
  %__dummy2150 = alloca i64, align 8
  %tmp153 = alloca i32, align 4
  %__dummy157 = alloca i64, align 8
  %__dummy2158 = alloca i64, align 8
  %tmp161 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18526, metadata !DIExpression()), !dbg !18527
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !18528, metadata !DIExpression()), !dbg !18529
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !18530, metadata !DIExpression()), !dbg !18531
  call void @llvm.dbg.declare(metadata i32* %c, metadata !18532, metadata !DIExpression()), !dbg !18533
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18534, metadata !DIExpression()), !dbg !18535
  store i32 0, i32* %ret, align 4, !dbg !18535
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !18536, metadata !DIExpression()), !dbg !18537
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18538
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !18539
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18539
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !18538
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !18537
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18540, metadata !DIExpression()), !dbg !18541
  %3 = load i32, i32* @debug_level, align 4, !dbg !18542
  %cmp = icmp sge i32 %3, 3, !dbg !18544
  br i1 %cmp, label %if.then, label %if.end, !dbg !18545

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18546
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !18547
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !18546
  %5 = load i32, i32* %count.addr, align 4, !dbg !18548
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2098, i8* %arraydecay, i32 %5) #12, !dbg !18549
  br label %if.end, !dbg !18549

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18550
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18552
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 18, !dbg !18553
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !18552
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %6, i8* %arraydecay1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.110, i64 0, i64 0)) #11, !dbg !18554
  %tobool = icmp ne i32 %call2, 0, !dbg !18554
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !18555

if.then3:                                         ; preds = %if.end
  br label %cleanup, !dbg !18556

if.end4:                                          ; preds = %if.end
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18557
  %xmit_buf = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 9, !dbg !18559
  %9 = load i8*, i8** %xmit_buf, align 8, !dbg !18559
  %tobool5 = icmp ne i8* %9, null, !dbg !18557
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !18560

if.then6:                                         ; preds = %if.end4
  br label %cleanup, !dbg !18561

if.end7:                                          ; preds = %if.end4
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18562
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 70, !dbg !18563
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !18564
  %11 = load i64, i64* %mode, align 8, !dbg !18564
  %cmp8 = icmp eq i64 %11, 2, !dbg !18565
  br i1 %cmp8, label %if.then12, label %lor.lhs.false, !dbg !18566

lor.lhs.false:                                    ; preds = %if.end7
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18567
  %params9 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 70, !dbg !18568
  %mode10 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params9, i32 0, i32 0, !dbg !18569
  %13 = load i64, i64* %mode10, align 8, !dbg !18569
  %cmp11 = icmp eq i64 %13, 6, !dbg !18570
  br i1 %cmp11, label %if.then12, label %if.else75, !dbg !18571

if.then12:                                        ; preds = %lor.lhs.false, %if.end7
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18572
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 52, !dbg !18573
  %15 = load i8, i8* %tx_active, align 4, !dbg !18573
  %tobool13 = trunc i8 %15 to i1, !dbg !18573
  br i1 %tobool13, label %if.then14, label %if.end46, !dbg !18574

if.then14:                                        ; preds = %if.then12
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18575
  %params15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 70, !dbg !18577
  %mode16 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params15, i32 0, i32 0, !dbg !18578
  %17 = load i64, i64* %mode16, align 8, !dbg !18578
  %cmp17 = icmp eq i64 %17, 2, !dbg !18579
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !18580

if.then18:                                        ; preds = %if.then14
  store i32 0, i32* %ret, align 4, !dbg !18581
  br label %cleanup, !dbg !18583

if.end19:                                         ; preds = %if.then14
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18584
  %tx_holding_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 46, !dbg !18586
  %19 = load i32, i32* %tx_holding_count, align 4, !dbg !18586
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18587
  %num_tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 43, !dbg !18588
  %21 = load i32, i32* %num_tx_holding_buffers, align 8, !dbg !18588
  %cmp20 = icmp sge i32 %19, %21, !dbg !18589
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !18590

if.then21:                                        ; preds = %if.end19
  store i32 0, i32* %ret, align 4, !dbg !18591
  br label %cleanup, !dbg !18593

if.end22:                                         ; preds = %if.end19
  %22 = load i32, i32* %count.addr, align 4, !dbg !18594
  store i32 %22, i32* %ret, align 4, !dbg !18595
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18596
  %24 = load i8*, i8** %buf.addr, align 8, !dbg !18597
  %25 = load i32, i32* %count.addr, align 4, !dbg !18598
  %call23 = call i32 @save_tx_buffer_request(%struct.mgsl_struct* %23, i8* %24, i32 %25) #11, !dbg !18599
  br label %do.body, !dbg !18600

do.body:                                          ; preds = %if.end22
  br label %do.body24, !dbg !18601

do.body24:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18602, metadata !DIExpression()), !dbg !18604
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18605, metadata !DIExpression()), !dbg !18604
  %cmp25 = icmp eq i64* %__dummy, %__dummy2, !dbg !18604
  %conv = zext i1 %cmp25 to i32, !dbg !18604
  store i32 1, i32* %tmp, align 4, !dbg !18604
  %26 = load i32, i32* %tmp, align 4, !dbg !18604
  br label %do.body26, !dbg !18606

do.body26:                                        ; preds = %do.body24
  br label %do.body27, !dbg !18607

do.body27:                                        ; preds = %do.body26
  br label %do.body28, !dbg !18608

do.body28:                                        ; preds = %do.body27
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !18610, metadata !DIExpression()), !dbg !18613
  call void @llvm.dbg.declare(metadata i64* %__dummy230, metadata !18614, metadata !DIExpression()), !dbg !18613
  %cmp31 = icmp eq i64* %__dummy29, %__dummy230, !dbg !18613
  %conv32 = zext i1 %cmp31 to i32, !dbg !18613
  store i32 1, i32* %tmp33, align 4, !dbg !18613
  %27 = load i32, i32* %tmp33, align 4, !dbg !18613
  %call34 = call i64 @arch_local_irq_save() #11, !dbg !18615
  store i64 %call34, i64* %flags, align 8, !dbg !18615
  br label %do.end, !dbg !18615

do.end:                                           ; preds = %do.body28
  br label %do.end35, !dbg !18608

do.end35:                                         ; preds = %do.end
  br label %do.body36, !dbg !18607

do.body36:                                        ; preds = %do.end35
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18616, !srcloc !18617
  br label %do.body37, !dbg !18616

do.body37:                                        ; preds = %do.body36
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18618
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 17, !dbg !18618
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18619
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !18620
  %rlock.i = bitcast %union.anon.1* %30 to %struct.raw_spinlock*, !dbg !18620
  br label %do.end39, !dbg !18618

do.end39:                                         ; preds = %do.body37
  br label %do.end40, !dbg !18616

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !18607

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !18606

do.end42:                                         ; preds = %do.end41
  br label %do.end43, !dbg !18601

do.end43:                                         ; preds = %do.end42
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18621
  %call44 = call zeroext i1 @load_next_tx_holding_buffer(%struct.mgsl_struct* %31) #11, !dbg !18622
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18623
  %irq_spinlock45 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 17, !dbg !18624
  %33 = load i64, i64* %flags, align 8, !dbg !18625
  store %struct.spinlock* %irq_spinlock45, %struct.spinlock** %lock.addr.i189, align 8
  store i64 %33, i64* %flags.addr.i190, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !18626
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !18626
  store i32 1, i32* %tmp.i191, align 4, !dbg !18626
  %34 = load i32, i32* %tmp.i191, align 4, !dbg !18626
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !18627
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !18627
  store i32 1, i32* %tmp8.i192, align 4, !dbg !18627
  %35 = load i32, i32* %tmp8.i192, align 4, !dbg !18627
  %36 = load i64, i64* %flags.addr.i190, align 8, !dbg !18628
  call void @arch_local_irq_restore(i64 %36) #14, !dbg !18628
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18629, !srcloc !9373
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i189, align 8, !dbg !18630
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !18630
  %rlock.i193 = bitcast %union.anon.1* %38 to %struct.raw_spinlock*, !dbg !18630
  br label %cleanup, !dbg !18631

if.end46:                                         ; preds = %if.then12
  %39 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18632
  %params47 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %39, i32 0, i32 70, !dbg !18634
  %flags48 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params47, i32 0, i32 2, !dbg !18635
  %40 = load i16, i16* %flags48, align 2, !dbg !18635
  %conv49 = zext i16 %40 to i32, !dbg !18632
  %and = and i32 %conv49, 16384, !dbg !18636
  %tobool50 = icmp ne i32 %and, 0, !dbg !18636
  br i1 %tobool50, label %land.lhs.true, label %if.end54, !dbg !18637

land.lhs.true:                                    ; preds = %if.end46
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18638
  %call51 = call i32 @usc_loopmode_active(%struct.mgsl_struct* %41) #11, !dbg !18639
  %tobool52 = icmp ne i32 %call51, 0, !dbg !18639
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !18640

if.then53:                                        ; preds = %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !18641
  br label %cleanup, !dbg !18643

if.end54:                                         ; preds = %land.lhs.true, %if.end46
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18644
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 12, !dbg !18646
  %43 = load i32, i32* %xmit_cnt, align 8, !dbg !18646
  %tobool55 = icmp ne i32 %43, 0, !dbg !18644
  br i1 %tobool55, label %if.then56, label %if.else, !dbg !18647

if.then56:                                        ; preds = %if.end54
  store i32 0, i32* %ret, align 4, !dbg !18648
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18650
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18651
  %xmit_buf57 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %45, i32 0, i32 9, !dbg !18652
  %46 = load i8*, i8** %xmit_buf57, align 8, !dbg !18652
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18653
  %xmit_cnt58 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 12, !dbg !18654
  %48 = load i32, i32* %xmit_cnt58, align 8, !dbg !18654
  call void @mgsl_load_tx_dma_buffer(%struct.mgsl_struct* %44, i8* %46, i32 %48) #11, !dbg !18655
  %49 = load i32, i32* @debug_level, align 4, !dbg !18656
  %cmp59 = icmp sge i32 %49, 3, !dbg !18658
  br i1 %cmp59, label %if.then61, label %if.end65, !dbg !18659

if.then61:                                        ; preds = %if.then56
  %50 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18660
  %device_name62 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %50, i32 0, i32 56, !dbg !18661
  %arraydecay63 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name62, i64 0, i64 0, !dbg !18660
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2161, i8* %arraydecay63) #12, !dbg !18662
  br label %if.end65, !dbg !18662

if.end65:                                         ; preds = %if.then61, %if.then56
  br label %if.end74, !dbg !18663

if.else:                                          ; preds = %if.end54
  %51 = load i32, i32* @debug_level, align 4, !dbg !18664
  %cmp66 = icmp sge i32 %51, 3, !dbg !18667
  br i1 %cmp66, label %if.then68, label %if.end72, !dbg !18668

if.then68:                                        ; preds = %if.else
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18669
  %device_name69 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %52, i32 0, i32 56, !dbg !18670
  %arraydecay70 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name69, i64 0, i64 0, !dbg !18669
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2165, i8* %arraydecay70) #12, !dbg !18671
  br label %if.end72, !dbg !18671

if.end72:                                         ; preds = %if.then68, %if.else
  %53 = load i32, i32* %count.addr, align 4, !dbg !18672
  store i32 %53, i32* %ret, align 4, !dbg !18673
  %54 = load i32, i32* %count.addr, align 4, !dbg !18674
  %55 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18675
  %xmit_cnt73 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %55, i32 0, i32 12, !dbg !18676
  store i32 %54, i32* %xmit_cnt73, align 8, !dbg !18677
  %56 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18678
  %57 = load i8*, i8** %buf.addr, align 8, !dbg !18679
  %58 = load i32, i32* %count.addr, align 4, !dbg !18680
  call void @mgsl_load_tx_dma_buffer(%struct.mgsl_struct* %56, i8* %57, i32 %58) #11, !dbg !18681
  br label %if.end74

if.end74:                                         ; preds = %if.end72, %if.end65
  br label %if.end139, !dbg !18682

if.else75:                                        ; preds = %lor.lhs.false
  br label %while.body, !dbg !18683

while.body:                                       ; preds = %if.else75, %if.end123
  br label %do.body76, !dbg !18684

do.body76:                                        ; preds = %while.body
  br label %do.body77, !dbg !18685

do.body77:                                        ; preds = %do.body76
  call void @llvm.dbg.declare(metadata i64* %__dummy78, metadata !18686, metadata !DIExpression()), !dbg !18688
  call void @llvm.dbg.declare(metadata i64* %__dummy279, metadata !18689, metadata !DIExpression()), !dbg !18688
  %cmp80 = icmp eq i64* %__dummy78, %__dummy279, !dbg !18688
  %conv81 = zext i1 %cmp80 to i32, !dbg !18688
  store i32 1, i32* %tmp82, align 4, !dbg !18688
  %59 = load i32, i32* %tmp82, align 4, !dbg !18688
  br label %do.body83, !dbg !18690

do.body83:                                        ; preds = %do.body77
  br label %do.body84, !dbg !18691

do.body84:                                        ; preds = %do.body83
  br label %do.body85, !dbg !18692

do.body85:                                        ; preds = %do.body84
  call void @llvm.dbg.declare(metadata i64* %__dummy86, metadata !18694, metadata !DIExpression()), !dbg !18697
  call void @llvm.dbg.declare(metadata i64* %__dummy287, metadata !18698, metadata !DIExpression()), !dbg !18697
  %cmp88 = icmp eq i64* %__dummy86, %__dummy287, !dbg !18697
  %conv89 = zext i1 %cmp88 to i32, !dbg !18697
  store i32 1, i32* %tmp90, align 4, !dbg !18697
  %60 = load i32, i32* %tmp90, align 4, !dbg !18697
  %call91 = call i64 @arch_local_irq_save() #11, !dbg !18699
  store i64 %call91, i64* %flags, align 8, !dbg !18699
  br label %do.end92, !dbg !18699

do.end92:                                         ; preds = %do.body85
  br label %do.end93, !dbg !18692

do.end93:                                         ; preds = %do.end92
  br label %do.body94, !dbg !18691

do.body94:                                        ; preds = %do.end93
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18700, !srcloc !18701
  br label %do.body95, !dbg !18700

do.body95:                                        ; preds = %do.body94
  %61 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18702
  %irq_spinlock96 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %61, i32 0, i32 17, !dbg !18702
  store %struct.spinlock* %irq_spinlock96, %struct.spinlock** %lock.addr.i194, align 8
  %62 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i194, align 8, !dbg !18703
  %63 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %62, i32 0, i32 0, !dbg !18704
  %rlock.i195 = bitcast %union.anon.1* %63 to %struct.raw_spinlock*, !dbg !18704
  br label %do.end98, !dbg !18702

do.end98:                                         ; preds = %do.body95
  br label %do.end99, !dbg !18700

do.end99:                                         ; preds = %do.end98
  br label %do.end100, !dbg !18691

do.end100:                                        ; preds = %do.end99
  br label %do.end101, !dbg !18690

do.end101:                                        ; preds = %do.end100
  br label %do.end102, !dbg !18685

do.end102:                                        ; preds = %do.end101
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x333, metadata !18705, metadata !DIExpression()), !dbg !18707
  %64 = load i32, i32* %count.addr, align 4, !dbg !18707
  store i32 %64, i32* %__UNIQUE_ID___x333, align 4, !dbg !18707
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y334, metadata !18708, metadata !DIExpression()), !dbg !18707
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x331, metadata !18709, metadata !DIExpression()), !dbg !18711
  %65 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18711
  %xmit_cnt103 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %65, i32 0, i32 12, !dbg !18711
  %66 = load i32, i32* %xmit_cnt103, align 8, !dbg !18711
  %conv104 = sext i32 %66 to i64, !dbg !18711
  %sub = sub i64 4096, %conv104, !dbg !18711
  %sub105 = sub i64 %sub, 1, !dbg !18711
  store i64 %sub105, i64* %__UNIQUE_ID___x331, align 8, !dbg !18711
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y332, metadata !18712, metadata !DIExpression()), !dbg !18711
  %67 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18711
  %xmit_head = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %67, i32 0, i32 10, !dbg !18711
  %68 = load i32, i32* %xmit_head, align 8, !dbg !18711
  %conv106 = sext i32 %68 to i64, !dbg !18711
  %sub107 = sub i64 4096, %conv106, !dbg !18711
  store i64 %sub107, i64* %__UNIQUE_ID___y332, align 8, !dbg !18711
  %69 = load i64, i64* %__UNIQUE_ID___x331, align 8, !dbg !18711
  %70 = load i64, i64* %__UNIQUE_ID___y332, align 8, !dbg !18711
  %cmp109 = icmp ult i64 %69, %70, !dbg !18711
  br i1 %cmp109, label %cond.true, label %cond.false, !dbg !18711

cond.true:                                        ; preds = %do.end102
  %71 = load i64, i64* %__UNIQUE_ID___x331, align 8, !dbg !18711
  br label %cond.end, !dbg !18711

cond.false:                                       ; preds = %do.end102
  %72 = load i64, i64* %__UNIQUE_ID___y332, align 8, !dbg !18711
  br label %cond.end, !dbg !18711

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %71, %cond.true ], [ %72, %cond.false ], !dbg !18711
  store i64 %cond, i64* %tmp108, align 8, !dbg !18711
  %73 = load i64, i64* %tmp108, align 8, !dbg !18711
  %conv111 = trunc i64 %73 to i32, !dbg !18707
  store i32 %conv111, i32* %__UNIQUE_ID___y334, align 4, !dbg !18707
  %74 = load i32, i32* %__UNIQUE_ID___x333, align 4, !dbg !18707
  %75 = load i32, i32* %__UNIQUE_ID___y334, align 4, !dbg !18707
  %cmp113 = icmp slt i32 %74, %75, !dbg !18707
  br i1 %cmp113, label %cond.true115, label %cond.false116, !dbg !18707

cond.true115:                                     ; preds = %cond.end
  %76 = load i32, i32* %__UNIQUE_ID___x333, align 4, !dbg !18707
  br label %cond.end117, !dbg !18707

cond.false116:                                    ; preds = %cond.end
  %77 = load i32, i32* %__UNIQUE_ID___y334, align 4, !dbg !18707
  br label %cond.end117, !dbg !18707

cond.end117:                                      ; preds = %cond.false116, %cond.true115
  %cond118 = phi i32 [ %76, %cond.true115 ], [ %77, %cond.false116 ], !dbg !18707
  store i32 %cond118, i32* %tmp112, align 4, !dbg !18707
  %78 = load i32, i32* %tmp112, align 4, !dbg !18707
  store i32 %78, i32* %c, align 4, !dbg !18713
  %79 = load i32, i32* %c, align 4, !dbg !18714
  %cmp119 = icmp sle i32 %79, 0, !dbg !18715
  br i1 %cmp119, label %if.then121, label %if.end123, !dbg !18716

if.then121:                                       ; preds = %cond.end117
  %80 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18717
  %irq_spinlock122 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %80, i32 0, i32 17, !dbg !18718
  %81 = load i64, i64* %flags, align 8, !dbg !18719
  store %struct.spinlock* %irq_spinlock122, %struct.spinlock** %lock.addr.i196, align 8
  store i64 %81, i64* %flags.addr.i197, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !18720
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !18720
  store i32 1, i32* %tmp.i198, align 4, !dbg !18720
  %82 = load i32, i32* %tmp.i198, align 4, !dbg !18720
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !18721
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !18721
  store i32 1, i32* %tmp8.i199, align 4, !dbg !18721
  %83 = load i32, i32* %tmp8.i199, align 4, !dbg !18721
  %84 = load i64, i64* %flags.addr.i197, align 8, !dbg !18722
  call void @arch_local_irq_restore(i64 %84) #14, !dbg !18722
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18723, !srcloc !9373
  %85 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i196, align 8, !dbg !18724
  %86 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %85, i32 0, i32 0, !dbg !18724
  %rlock.i200 = bitcast %union.anon.1* %86 to %struct.raw_spinlock*, !dbg !18724
  br label %while.end, !dbg !18725

if.end123:                                        ; preds = %cond.end117
  %87 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18726
  %xmit_buf124 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %87, i32 0, i32 9, !dbg !18727
  %88 = load i8*, i8** %xmit_buf124, align 8, !dbg !18727
  %89 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18728
  %xmit_head125 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %89, i32 0, i32 10, !dbg !18729
  %90 = load i32, i32* %xmit_head125, align 8, !dbg !18729
  %idx.ext = sext i32 %90 to i64, !dbg !18730
  %add.ptr = getelementptr i8, i8* %88, i64 %idx.ext, !dbg !18730
  %91 = load i8*, i8** %buf.addr, align 8, !dbg !18731
  %92 = load i32, i32* %c, align 4, !dbg !18732
  %conv126 = sext i32 %92 to i64, !dbg !18732
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %91, i64 %conv126, i1 false), !dbg !18733
  %93 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18734
  %xmit_head127 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %93, i32 0, i32 10, !dbg !18735
  %94 = load i32, i32* %xmit_head127, align 8, !dbg !18735
  %95 = load i32, i32* %c, align 4, !dbg !18736
  %add = add i32 %94, %95, !dbg !18737
  %conv128 = sext i32 %add to i64, !dbg !18738
  %and129 = and i64 %conv128, 4095, !dbg !18739
  %conv130 = trunc i64 %and129 to i32, !dbg !18740
  %96 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18741
  %xmit_head131 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %96, i32 0, i32 10, !dbg !18742
  store i32 %conv130, i32* %xmit_head131, align 8, !dbg !18743
  %97 = load i32, i32* %c, align 4, !dbg !18744
  %98 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18745
  %xmit_cnt132 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %98, i32 0, i32 12, !dbg !18746
  %99 = load i32, i32* %xmit_cnt132, align 8, !dbg !18747
  %add133 = add i32 %99, %97, !dbg !18747
  store i32 %add133, i32* %xmit_cnt132, align 8, !dbg !18747
  %100 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18748
  %irq_spinlock134 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %100, i32 0, i32 17, !dbg !18749
  %101 = load i64, i64* %flags, align 8, !dbg !18750
  store %struct.spinlock* %irq_spinlock134, %struct.spinlock** %lock.addr.i201, align 8
  store i64 %101, i64* %flags.addr.i202, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !18751
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !18751
  store i32 1, i32* %tmp.i203, align 4, !dbg !18751
  %102 = load i32, i32* %tmp.i203, align 4, !dbg !18751
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !18752
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !18752
  store i32 1, i32* %tmp8.i204, align 4, !dbg !18752
  %103 = load i32, i32* %tmp8.i204, align 4, !dbg !18752
  %104 = load i64, i64* %flags.addr.i202, align 8, !dbg !18753
  call void @arch_local_irq_restore(i64 %104) #14, !dbg !18753
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18754, !srcloc !9373
  %105 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i201, align 8, !dbg !18755
  %106 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %105, i32 0, i32 0, !dbg !18755
  %rlock.i205 = bitcast %union.anon.1* %106 to %struct.raw_spinlock*, !dbg !18755
  %107 = load i32, i32* %c, align 4, !dbg !18756
  %108 = load i8*, i8** %buf.addr, align 8, !dbg !18757
  %idx.ext135 = sext i32 %107 to i64, !dbg !18757
  %add.ptr136 = getelementptr i8, i8* %108, i64 %idx.ext135, !dbg !18757
  store i8* %add.ptr136, i8** %buf.addr, align 8, !dbg !18757
  %109 = load i32, i32* %c, align 4, !dbg !18758
  %110 = load i32, i32* %count.addr, align 4, !dbg !18759
  %sub137 = sub i32 %110, %109, !dbg !18759
  store i32 %sub137, i32* %count.addr, align 4, !dbg !18759
  %111 = load i32, i32* %c, align 4, !dbg !18760
  %112 = load i32, i32* %ret, align 4, !dbg !18761
  %add138 = add i32 %112, %111, !dbg !18761
  store i32 %add138, i32* %ret, align 4, !dbg !18761
  br label %while.body, !dbg !18683, !llvm.loop !18762

while.end:                                        ; preds = %if.then121
  br label %if.end139

if.end139:                                        ; preds = %while.end, %if.end74
  %113 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18764
  %xmit_cnt140 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %113, i32 0, i32 12, !dbg !18765
  %114 = load i32, i32* %xmit_cnt140, align 8, !dbg !18765
  %tobool141 = icmp ne i32 %114, 0, !dbg !18764
  br i1 %tobool141, label %land.lhs.true142, label %if.end179, !dbg !18766

land.lhs.true142:                                 ; preds = %if.end139
  %115 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18767
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %115, i32 0, i32 24, !dbg !18768
  %bf.load = load i8, i8* %stopped, align 4, !dbg !18768
  %bf.clear = and i8 %bf.load, 1, !dbg !18768
  %bf.cast = zext i8 %bf.clear to i64, !dbg !18768
  %tobool143 = icmp ne i64 %bf.cast, 0, !dbg !18767
  br i1 %tobool143, label %if.end179, label %land.lhs.true144, !dbg !18769

land.lhs.true144:                                 ; preds = %land.lhs.true142
  %116 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18770
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %116, i32 0, i32 26, !dbg !18771
  %117 = load i32, i32* %hw_stopped, align 8, !dbg !18771
  %tobool145 = icmp ne i32 %117, 0, !dbg !18770
  br i1 %tobool145, label %if.end179, label %if.then146, !dbg !18772

if.then146:                                       ; preds = %land.lhs.true144
  br label %do.body147, !dbg !18773

do.body147:                                       ; preds = %if.then146
  br label %do.body148, !dbg !18774

do.body148:                                       ; preds = %do.body147
  call void @llvm.dbg.declare(metadata i64* %__dummy149, metadata !18775, metadata !DIExpression()), !dbg !18777
  call void @llvm.dbg.declare(metadata i64* %__dummy2150, metadata !18778, metadata !DIExpression()), !dbg !18777
  %cmp151 = icmp eq i64* %__dummy149, %__dummy2150, !dbg !18777
  %conv152 = zext i1 %cmp151 to i32, !dbg !18777
  store i32 1, i32* %tmp153, align 4, !dbg !18777
  %118 = load i32, i32* %tmp153, align 4, !dbg !18777
  br label %do.body154, !dbg !18779

do.body154:                                       ; preds = %do.body148
  br label %do.body155, !dbg !18780

do.body155:                                       ; preds = %do.body154
  br label %do.body156, !dbg !18781

do.body156:                                       ; preds = %do.body155
  call void @llvm.dbg.declare(metadata i64* %__dummy157, metadata !18783, metadata !DIExpression()), !dbg !18786
  call void @llvm.dbg.declare(metadata i64* %__dummy2158, metadata !18787, metadata !DIExpression()), !dbg !18786
  %cmp159 = icmp eq i64* %__dummy157, %__dummy2158, !dbg !18786
  %conv160 = zext i1 %cmp159 to i32, !dbg !18786
  store i32 1, i32* %tmp161, align 4, !dbg !18786
  %119 = load i32, i32* %tmp161, align 4, !dbg !18786
  %call162 = call i64 @arch_local_irq_save() #11, !dbg !18788
  store i64 %call162, i64* %flags, align 8, !dbg !18788
  br label %do.end163, !dbg !18788

do.end163:                                        ; preds = %do.body156
  br label %do.end164, !dbg !18781

do.end164:                                        ; preds = %do.end163
  br label %do.body165, !dbg !18780

do.body165:                                       ; preds = %do.end164
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18789, !srcloc !18790
  br label %do.body166, !dbg !18789

do.body166:                                       ; preds = %do.body165
  %120 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18791
  %irq_spinlock167 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %120, i32 0, i32 17, !dbg !18791
  store %struct.spinlock* %irq_spinlock167, %struct.spinlock** %lock.addr.i206, align 8
  %121 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i206, align 8, !dbg !18792
  %122 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %121, i32 0, i32 0, !dbg !18793
  %rlock.i207 = bitcast %union.anon.1* %122 to %struct.raw_spinlock*, !dbg !18793
  br label %do.end169, !dbg !18791

do.end169:                                        ; preds = %do.body166
  br label %do.end170, !dbg !18789

do.end170:                                        ; preds = %do.end169
  br label %do.end171, !dbg !18780

do.end171:                                        ; preds = %do.end170
  br label %do.end172, !dbg !18779

do.end172:                                        ; preds = %do.end171
  br label %do.end173, !dbg !18774

do.end173:                                        ; preds = %do.end172
  %123 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18794
  %tx_active174 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %123, i32 0, i32 52, !dbg !18796
  %124 = load i8, i8* %tx_active174, align 4, !dbg !18796
  %tobool175 = trunc i8 %124 to i1, !dbg !18796
  br i1 %tobool175, label %if.end177, label %if.then176, !dbg !18797

if.then176:                                       ; preds = %do.end173
  %125 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18798
  call void @usc_start_transmitter(%struct.mgsl_struct* %125) #11, !dbg !18799
  br label %if.end177, !dbg !18799

if.end177:                                        ; preds = %if.then176, %do.end173
  %126 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18800
  %irq_spinlock178 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %126, i32 0, i32 17, !dbg !18801
  %127 = load i64, i64* %flags, align 8, !dbg !18802
  store %struct.spinlock* %irq_spinlock178, %struct.spinlock** %lock.addr.i187, align 8
  store i64 %127, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !18803
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !18803
  store i32 1, i32* %tmp.i, align 4, !dbg !18803
  %128 = load i32, i32* %tmp.i, align 4, !dbg !18803
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !18804
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !18804
  store i32 1, i32* %tmp8.i, align 4, !dbg !18804
  %129 = load i32, i32* %tmp8.i, align 4, !dbg !18804
  %130 = load i64, i64* %flags.addr.i, align 8, !dbg !18805
  call void @arch_local_irq_restore(i64 %130) #14, !dbg !18805
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18806, !srcloc !9373
  %131 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i187, align 8, !dbg !18807
  %132 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %131, i32 0, i32 0, !dbg !18807
  %rlock.i188 = bitcast %union.anon.1* %132 to %struct.raw_spinlock*, !dbg !18807
  br label %if.end179, !dbg !18808

if.end179:                                        ; preds = %if.end177, %land.lhs.true144, %land.lhs.true142, %if.end139
  br label %cleanup, !dbg !18771

cleanup:                                          ; preds = %if.end179, %if.then53, %do.end43, %if.then21, %if.then18, %if.then6, %if.then3
  call void @llvm.dbg.label(metadata !18809), !dbg !18810
  %133 = load i32, i32* @debug_level, align 4, !dbg !18811
  %cmp180 = icmp sge i32 %133, 3, !dbg !18813
  br i1 %cmp180, label %if.then182, label %if.end186, !dbg !18814

if.then182:                                       ; preds = %cleanup
  %134 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18815
  %device_name183 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %134, i32 0, i32 56, !dbg !18816
  %arraydecay184 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name183, i64 0, i64 0, !dbg !18815
  %135 = load i32, i32* %ret, align 4, !dbg !18817
  %call185 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2200, i8* %arraydecay184, i32 %135) #12, !dbg !18818
  br label %if.end186, !dbg !18818

if.end186:                                        ; preds = %if.then182, %cleanup
  %136 = load i32, i32* %ret, align 4, !dbg !18819
  ret i32 %136, !dbg !18820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_put_char(%struct.tty_struct* %tty, i8 zeroext %ch) #1 !dbg !18821 {
entry:
  %lock.addr.i46 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i46, metadata !9306, metadata !DIExpression()), !dbg !18822
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !18824
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !18825
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch.addr = alloca i8, align 1
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18832, metadata !DIExpression()), !dbg !18833
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !18834, metadata !DIExpression()), !dbg !18835
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !18836, metadata !DIExpression()), !dbg !18837
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18838
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !18839
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18839
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !18838
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !18837
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18840, metadata !DIExpression()), !dbg !18841
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18842, metadata !DIExpression()), !dbg !18843
  store i32 0, i32* %ret, align 4, !dbg !18843
  %3 = load i32, i32* @debug_level, align 4, !dbg !18844
  %cmp = icmp sge i32 %3, 3, !dbg !18846
  br i1 %cmp, label %if.then, label %if.end, !dbg !18847

if.then:                                          ; preds = %entry
  %4 = load i8, i8* %ch.addr, align 1, !dbg !18848
  %conv = zext i8 %4 to i32, !dbg !18848
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18850
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 56, !dbg !18851
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !18850
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2007, i32 %conv, i8* %arraydecay) #12, !dbg !18852
  br label %if.end, !dbg !18853

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18854
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18856
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 18, !dbg !18857
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !18856
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %6, i8* %arraydecay1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.115, i64 0, i64 0)) #11, !dbg !18858
  %tobool = icmp ne i32 %call2, 0, !dbg !18858
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !18859

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !18860
  br label %return, !dbg !18860

if.end4:                                          ; preds = %if.end
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18861
  %xmit_buf = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 9, !dbg !18863
  %9 = load i8*, i8** %xmit_buf, align 8, !dbg !18863
  %tobool5 = icmp ne i8* %9, null, !dbg !18861
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !18864

if.then6:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !18865
  br label %return, !dbg !18865

if.end7:                                          ; preds = %if.end4
  br label %do.body, !dbg !18866

do.body:                                          ; preds = %if.end7
  br label %do.body8, !dbg !18867

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18868, metadata !DIExpression()), !dbg !18870
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18871, metadata !DIExpression()), !dbg !18870
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !18870
  %conv10 = zext i1 %cmp9 to i32, !dbg !18870
  store i32 1, i32* %tmp, align 4, !dbg !18870
  %10 = load i32, i32* %tmp, align 4, !dbg !18870
  br label %do.body11, !dbg !18872

do.body11:                                        ; preds = %do.body8
  br label %do.body12, !dbg !18873

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !18874

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !18876, metadata !DIExpression()), !dbg !18879
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !18880, metadata !DIExpression()), !dbg !18879
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !18879
  %conv17 = zext i1 %cmp16 to i32, !dbg !18879
  store i32 1, i32* %tmp18, align 4, !dbg !18879
  %11 = load i32, i32* %tmp18, align 4, !dbg !18879
  %call19 = call i64 @arch_local_irq_save() #11, !dbg !18881
  store i64 %call19, i64* %flags, align 8, !dbg !18881
  br label %do.end, !dbg !18881

do.end:                                           ; preds = %do.body13
  br label %do.end20, !dbg !18874

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !18873

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18882, !srcloc !18883
  br label %do.body22, !dbg !18882

do.body22:                                        ; preds = %do.body21
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18884
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 17, !dbg !18884
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18885
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !18886
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !18886
  br label %do.end24, !dbg !18884

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !18882

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !18873

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !18872

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !18867

do.end28:                                         ; preds = %do.end27
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18887
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 70, !dbg !18889
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !18890
  %16 = load i64, i64* %mode, align 8, !dbg !18890
  %cmp29 = icmp eq i64 %16, 1, !dbg !18891
  br i1 %cmp29, label %if.then32, label %lor.lhs.false, !dbg !18892

lor.lhs.false:                                    ; preds = %do.end28
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18893
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 52, !dbg !18894
  %18 = load i8, i8* %tx_active, align 4, !dbg !18894
  %tobool31 = trunc i8 %18 to i1, !dbg !18894
  br i1 %tobool31, label %if.end44, label %if.then32, !dbg !18895

if.then32:                                        ; preds = %lor.lhs.false, %do.end28
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18896
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 12, !dbg !18899
  %20 = load i32, i32* %xmit_cnt, align 8, !dbg !18899
  %conv33 = sext i32 %20 to i64, !dbg !18896
  %cmp34 = icmp ult i64 %conv33, 4095, !dbg !18900
  br i1 %cmp34, label %if.then36, label %if.end43, !dbg !18901

if.then36:                                        ; preds = %if.then32
  %21 = load i8, i8* %ch.addr, align 1, !dbg !18902
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18904
  %xmit_buf37 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 9, !dbg !18905
  %23 = load i8*, i8** %xmit_buf37, align 8, !dbg !18905
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18906
  %xmit_head = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 10, !dbg !18907
  %25 = load i32, i32* %xmit_head, align 8, !dbg !18908
  %inc = add i32 %25, 1, !dbg !18908
  store i32 %inc, i32* %xmit_head, align 8, !dbg !18908
  %idxprom = sext i32 %25 to i64, !dbg !18904
  %arrayidx = getelementptr i8, i8* %23, i64 %idxprom, !dbg !18904
  store i8 %21, i8* %arrayidx, align 1, !dbg !18909
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18910
  %xmit_head38 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 10, !dbg !18911
  %27 = load i32, i32* %xmit_head38, align 8, !dbg !18912
  %conv39 = sext i32 %27 to i64, !dbg !18912
  %and = and i64 %conv39, 4095, !dbg !18912
  %conv40 = trunc i64 %and to i32, !dbg !18912
  store i32 %conv40, i32* %xmit_head38, align 8, !dbg !18912
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18913
  %xmit_cnt41 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 12, !dbg !18914
  %29 = load i32, i32* %xmit_cnt41, align 8, !dbg !18915
  %inc42 = add i32 %29, 1, !dbg !18915
  store i32 %inc42, i32* %xmit_cnt41, align 8, !dbg !18915
  store i32 1, i32* %ret, align 4, !dbg !18916
  br label %if.end43, !dbg !18917

if.end43:                                         ; preds = %if.then36, %if.then32
  br label %if.end44, !dbg !18918

if.end44:                                         ; preds = %if.end43, %lor.lhs.false
  %30 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18919
  %irq_spinlock45 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %30, i32 0, i32 17, !dbg !18920
  %31 = load i64, i64* %flags, align 8, !dbg !18921
  store %struct.spinlock* %irq_spinlock45, %struct.spinlock** %lock.addr.i46, align 8
  store i64 %31, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !18922
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !18922
  store i32 1, i32* %tmp.i, align 4, !dbg !18922
  %32 = load i32, i32* %tmp.i, align 4, !dbg !18922
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !18923
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !18923
  store i32 1, i32* %tmp8.i, align 4, !dbg !18923
  %33 = load i32, i32* %tmp8.i, align 4, !dbg !18923
  %34 = load i64, i64* %flags.addr.i, align 8, !dbg !18924
  call void @arch_local_irq_restore(i64 %34) #14, !dbg !18924
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18925, !srcloc !9373
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i46, align 8, !dbg !18926
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !18926
  %rlock.i47 = bitcast %union.anon.1* %36 to %struct.raw_spinlock*, !dbg !18926
  %37 = load i32, i32* %ret, align 4, !dbg !18927
  store i32 %37, i32* %retval, align 4, !dbg !18928
  br label %return, !dbg !18928

return:                                           ; preds = %if.end44, %if.then6, %if.then3
  %38 = load i32, i32* %retval, align 4, !dbg !18929
  ret i32 %38, !dbg !18929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_flush_chars(%struct.tty_struct* %tty) #1 !dbg !18930 {
entry:
  %lock.addr.i59 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i59, metadata !9306, metadata !DIExpression()), !dbg !18931
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !18933
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !18934
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18941, metadata !DIExpression()), !dbg !18942
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !18943, metadata !DIExpression()), !dbg !18944
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18945
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !18946
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18946
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !18945
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !18944
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18947, metadata !DIExpression()), !dbg !18948
  %3 = load i32, i32* @debug_level, align 4, !dbg !18949
  %cmp = icmp sge i32 %3, 3, !dbg !18951
  br i1 %cmp, label %if.then, label %if.end, !dbg !18952

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18953
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !18954
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !18953
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18955
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 12, !dbg !18956
  %6 = load i32, i32* %xmit_cnt, align 8, !dbg !18956
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2046, i8* %arraydecay, i32 %6) #12, !dbg !18957
  br label %if.end, !dbg !18957

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18958
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18960
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %8, i32 0, i32 18, !dbg !18961
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !18960
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %7, i8* %arraydecay1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.117, i64 0, i64 0)) #11, !dbg !18962
  %tobool = icmp ne i32 %call2, 0, !dbg !18962
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !18963

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !18964

if.end4:                                          ; preds = %if.end
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18965
  %xmit_cnt5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 12, !dbg !18967
  %10 = load i32, i32* %xmit_cnt5, align 8, !dbg !18967
  %cmp6 = icmp sle i32 %10, 0, !dbg !18968
  br i1 %cmp6, label %if.then12, label %lor.lhs.false, !dbg !18969

lor.lhs.false:                                    ; preds = %if.end4
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18970
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %11, i32 0, i32 24, !dbg !18971
  %bf.load = load i8, i8* %stopped, align 4, !dbg !18971
  %bf.clear = and i8 %bf.load, 1, !dbg !18971
  %bf.cast = zext i8 %bf.clear to i64, !dbg !18971
  %conv = trunc i64 %bf.cast to i32, !dbg !18970
  %tobool7 = icmp ne i32 %conv, 0, !dbg !18970
  br i1 %tobool7, label %if.then12, label %lor.lhs.false8, !dbg !18972

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18973
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %12, i32 0, i32 26, !dbg !18974
  %13 = load i32, i32* %hw_stopped, align 8, !dbg !18974
  %tobool9 = icmp ne i32 %13, 0, !dbg !18973
  br i1 %tobool9, label %if.then12, label %lor.lhs.false10, !dbg !18975

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18976
  %xmit_buf = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 9, !dbg !18977
  %15 = load i8*, i8** %xmit_buf, align 8, !dbg !18977
  %tobool11 = icmp ne i8* %15, null, !dbg !18976
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !18978

if.then12:                                        ; preds = %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false, %if.end4
  br label %return, !dbg !18979

if.end13:                                         ; preds = %lor.lhs.false10
  %16 = load i32, i32* @debug_level, align 4, !dbg !18980
  %cmp14 = icmp sge i32 %16, 3, !dbg !18982
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !18983

if.then16:                                        ; preds = %if.end13
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !18984
  %device_name17 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 56, !dbg !18985
  %arraydecay18 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name17, i64 0, i64 0, !dbg !18984
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2057, i8* %arraydecay18) #12, !dbg !18986
  br label %if.end20, !dbg !18986

if.end20:                                         ; preds = %if.then16, %if.end13
  br label %do.body, !dbg !18987

do.body:                                          ; preds = %if.end20
  br label %do.body21, !dbg !18988

do.body21:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18989, metadata !DIExpression()), !dbg !18991
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18992, metadata !DIExpression()), !dbg !18991
  %cmp22 = icmp eq i64* %__dummy, %__dummy2, !dbg !18991
  %conv23 = zext i1 %cmp22 to i32, !dbg !18991
  store i32 1, i32* %tmp, align 4, !dbg !18991
  %18 = load i32, i32* %tmp, align 4, !dbg !18991
  br label %do.body24, !dbg !18993

do.body24:                                        ; preds = %do.body21
  br label %do.body25, !dbg !18994

do.body25:                                        ; preds = %do.body24
  br label %do.body26, !dbg !18995

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !18997, metadata !DIExpression()), !dbg !19000
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !19001, metadata !DIExpression()), !dbg !19000
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !19000
  %conv30 = zext i1 %cmp29 to i32, !dbg !19000
  store i32 1, i32* %tmp31, align 4, !dbg !19000
  %19 = load i32, i32* %tmp31, align 4, !dbg !19000
  %call32 = call i64 @arch_local_irq_save() #11, !dbg !19002
  store i64 %call32, i64* %flags, align 8, !dbg !19002
  br label %do.end, !dbg !19002

do.end:                                           ; preds = %do.body26
  br label %do.end33, !dbg !18995

do.end33:                                         ; preds = %do.end
  br label %do.body34, !dbg !18994

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19003, !srcloc !19004
  br label %do.body35, !dbg !19003

do.body35:                                        ; preds = %do.body34
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19005
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 17, !dbg !19005
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19006
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !19007
  %rlock.i = bitcast %union.anon.1* %22 to %struct.raw_spinlock*, !dbg !19007
  br label %do.end37, !dbg !19005

do.end37:                                         ; preds = %do.body35
  br label %do.end38, !dbg !19003

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !18994

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !18993

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !18988

do.end41:                                         ; preds = %do.end40
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19008
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 52, !dbg !19010
  %24 = load i8, i8* %tx_active, align 4, !dbg !19010
  %tobool42 = trunc i8 %24 to i1, !dbg !19010
  br i1 %tobool42, label %if.end57, label %if.then43, !dbg !19011

if.then43:                                        ; preds = %do.end41
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19012
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 70, !dbg !19015
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !19016
  %26 = load i64, i64* %mode, align 8, !dbg !19016
  %cmp44 = icmp eq i64 %26, 2, !dbg !19017
  br i1 %cmp44, label %land.lhs.true, label %lor.lhs.false46, !dbg !19018

lor.lhs.false46:                                  ; preds = %if.then43
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19019
  %params47 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 70, !dbg !19020
  %mode48 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params47, i32 0, i32 0, !dbg !19021
  %28 = load i64, i64* %mode48, align 8, !dbg !19021
  %cmp49 = icmp eq i64 %28, 6, !dbg !19022
  br i1 %cmp49, label %land.lhs.true, label %if.end56, !dbg !19023

land.lhs.true:                                    ; preds = %lor.lhs.false46, %if.then43
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19024
  %xmit_cnt51 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 12, !dbg !19025
  %30 = load i32, i32* %xmit_cnt51, align 8, !dbg !19025
  %tobool52 = icmp ne i32 %30, 0, !dbg !19024
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !19026

if.then53:                                        ; preds = %land.lhs.true
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19027
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19029
  %xmit_buf54 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 9, !dbg !19030
  %33 = load i8*, i8** %xmit_buf54, align 8, !dbg !19030
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19031
  %xmit_cnt55 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 12, !dbg !19032
  %35 = load i32, i32* %xmit_cnt55, align 8, !dbg !19032
  call void @mgsl_load_tx_dma_buffer(%struct.mgsl_struct* %31, i8* %33, i32 %35) #11, !dbg !19033
  br label %if.end56, !dbg !19034

if.end56:                                         ; preds = %if.then53, %land.lhs.true, %lor.lhs.false46
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19035
  call void @usc_start_transmitter(%struct.mgsl_struct* %36) #11, !dbg !19036
  br label %if.end57, !dbg !19037

if.end57:                                         ; preds = %if.end56, %do.end41
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19038
  %irq_spinlock58 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 17, !dbg !19039
  %38 = load i64, i64* %flags, align 8, !dbg !19040
  store %struct.spinlock* %irq_spinlock58, %struct.spinlock** %lock.addr.i59, align 8
  store i64 %38, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !19041
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !19041
  store i32 1, i32* %tmp.i, align 4, !dbg !19041
  %39 = load i32, i32* %tmp.i, align 4, !dbg !19041
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !19042
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !19042
  store i32 1, i32* %tmp8.i, align 4, !dbg !19042
  %40 = load i32, i32* %tmp8.i, align 4, !dbg !19042
  %41 = load i64, i64* %flags.addr.i, align 8, !dbg !19043
  call void @arch_local_irq_restore(i64 %41) #14, !dbg !19043
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19044, !srcloc !9373
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i59, align 8, !dbg !19045
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !19045
  %rlock.i60 = bitcast %union.anon.1* %43 to %struct.raw_spinlock*, !dbg !19045
  br label %return, !dbg !19046

return:                                           ; preds = %if.end57, %if.then12, %if.then3
  ret void, !dbg !19046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_write_room(%struct.tty_struct* %tty) #1 !dbg !19047 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19048, metadata !DIExpression()), !dbg !19049
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19050, metadata !DIExpression()), !dbg !19051
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19052
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19053
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19053
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19052
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19051
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19054, metadata !DIExpression()), !dbg !19055
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19056
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19058
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !19059
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19058
  %call = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %3, i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.119, i64 0, i64 0)) #11, !dbg !19060
  %tobool = icmp ne i32 %call, 0, !dbg !19060
  br i1 %tobool, label %if.then, label %if.end, !dbg !19061

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19062
  br label %return, !dbg !19062

if.end:                                           ; preds = %entry
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19063
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 12, !dbg !19064
  %6 = load i32, i32* %xmit_cnt, align 8, !dbg !19064
  %conv = sext i32 %6 to i64, !dbg !19063
  %sub = sub i64 4096, %conv, !dbg !19065
  %sub1 = sub i64 %sub, 1, !dbg !19066
  %conv2 = trunc i64 %sub1 to i32, !dbg !19067
  store i32 %conv2, i32* %ret, align 4, !dbg !19068
  %7 = load i32, i32* %ret, align 4, !dbg !19069
  %cmp = icmp slt i32 %7, 0, !dbg !19071
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !19072

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %ret, align 4, !dbg !19073
  br label %if.end5, !dbg !19074

if.end5:                                          ; preds = %if.then4, %if.end
  %8 = load i32, i32* @debug_level, align 4, !dbg !19075
  %cmp6 = icmp sge i32 %8, 3, !dbg !19077
  br i1 %cmp6, label %if.then8, label %if.end11, !dbg !19078

if.then8:                                         ; preds = %if.end5
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19079
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 56, !dbg !19080
  %arraydecay9 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19079
  %10 = load i32, i32* %ret, align 4, !dbg !19081
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2226, i8* %arraydecay9, i32 %10) #12, !dbg !19082
  br label %if.end11, !dbg !19082

if.end11:                                         ; preds = %if.then8, %if.end5
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19083
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 70, !dbg !19085
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !19086
  %12 = load i64, i64* %mode, align 8, !dbg !19086
  %cmp12 = icmp eq i64 %12, 2, !dbg !19087
  br i1 %cmp12, label %if.then18, label %lor.lhs.false, !dbg !19088

lor.lhs.false:                                    ; preds = %if.end11
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19089
  %params14 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 70, !dbg !19090
  %mode15 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params14, i32 0, i32 0, !dbg !19091
  %14 = load i64, i64* %mode15, align 8, !dbg !19091
  %cmp16 = icmp eq i64 %14, 6, !dbg !19092
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !19093

if.then18:                                        ; preds = %lor.lhs.false, %if.end11
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19094
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 52, !dbg !19097
  %16 = load i8, i8* %tx_active, align 4, !dbg !19097
  %tobool19 = trunc i8 %16 to i1, !dbg !19097
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !19098

if.then20:                                        ; preds = %if.then18
  store i32 0, i32* %retval, align 4, !dbg !19099
  br label %return, !dbg !19099

if.else:                                          ; preds = %if.then18
  store i32 65535, i32* %retval, align 4, !dbg !19100
  br label %return, !dbg !19100

if.end21:                                         ; preds = %lor.lhs.false
  %17 = load i32, i32* %ret, align 4, !dbg !19101
  store i32 %17, i32* %retval, align 4, !dbg !19102
  br label %return, !dbg !19102

return:                                           ; preds = %if.end21, %if.else, %if.then20, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !19103
  ret i32 %18, !dbg !19103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_chars_in_buffer(%struct.tty_struct* %tty) #1 !dbg !19104 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19105, metadata !DIExpression()), !dbg !19106
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19107, metadata !DIExpression()), !dbg !19108
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19109
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19110
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19110
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19109
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19108
  %3 = load i32, i32* @debug_level, align 4, !dbg !19111
  %cmp = icmp sge i32 %3, 3, !dbg !19113
  br i1 %cmp, label %if.then, label %if.end, !dbg !19114

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19115
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !19116
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19115
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2254, i8* %arraydecay) #12, !dbg !19117
  br label %if.end, !dbg !19117

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19118
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19120
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %6, i32 0, i32 18, !dbg !19121
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19120
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %5, i8* %arraydecay1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.122, i64 0, i64 0)) #11, !dbg !19122
  %tobool = icmp ne i32 %call2, 0, !dbg !19122
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !19123

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !19124
  br label %return, !dbg !19124

if.end4:                                          ; preds = %if.end
  %7 = load i32, i32* @debug_level, align 4, !dbg !19125
  %cmp5 = icmp sge i32 %7, 3, !dbg !19127
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !19128

if.then6:                                         ; preds = %if.end4
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19129
  %device_name7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 56, !dbg !19130
  %arraydecay8 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name7, i64 0, i64 0, !dbg !19129
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19131
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 12, !dbg !19132
  %10 = load i32, i32* %xmit_cnt, align 8, !dbg !19132
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2261, i8* %arraydecay8, i32 %10) #12, !dbg !19133
  br label %if.end10, !dbg !19133

if.end10:                                         ; preds = %if.then6, %if.end4
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19134
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 70, !dbg !19136
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !19137
  %12 = load i64, i64* %mode, align 8, !dbg !19137
  %cmp11 = icmp eq i64 %12, 2, !dbg !19138
  br i1 %cmp11, label %if.then15, label %lor.lhs.false, !dbg !19139

lor.lhs.false:                                    ; preds = %if.end10
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19140
  %params12 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 70, !dbg !19141
  %mode13 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params12, i32 0, i32 0, !dbg !19142
  %14 = load i64, i64* %mode13, align 8, !dbg !19142
  %cmp14 = icmp eq i64 %14, 6, !dbg !19143
  br i1 %cmp14, label %if.then15, label %if.end18, !dbg !19144

if.then15:                                        ; preds = %lor.lhs.false, %if.end10
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19145
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 52, !dbg !19148
  %16 = load i8, i8* %tx_active, align 4, !dbg !19148
  %tobool16 = trunc i8 %16 to i1, !dbg !19148
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !19149

if.then17:                                        ; preds = %if.then15
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19150
  %max_frame_size = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 21, !dbg !19151
  %18 = load i32, i32* %max_frame_size, align 8, !dbg !19151
  store i32 %18, i32* %retval, align 4, !dbg !19152
  br label %return, !dbg !19152

if.else:                                          ; preds = %if.then15
  store i32 0, i32* %retval, align 4, !dbg !19153
  br label %return, !dbg !19153

if.end18:                                         ; preds = %lor.lhs.false
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19154
  %xmit_cnt19 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 12, !dbg !19155
  %20 = load i32, i32* %xmit_cnt19, align 8, !dbg !19155
  store i32 %20, i32* %retval, align 4, !dbg !19156
  br label %return, !dbg !19156

return:                                           ; preds = %if.end18, %if.else, %if.then17, %if.then3
  %21 = load i32, i32* %retval, align 4, !dbg !19157
  ret i32 %21, !dbg !19157
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_ioctl(%struct.tty_struct* %tty, i32 %cmd, i64 %arg) #1 !dbg !19158 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19159, metadata !DIExpression()), !dbg !19160
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !19161, metadata !DIExpression()), !dbg !19162
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !19163, metadata !DIExpression()), !dbg !19164
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19165, metadata !DIExpression()), !dbg !19166
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19167
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19168
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19168
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19167
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19166
  %3 = load i32, i32* @debug_level, align 4, !dbg !19169
  %cmp = icmp sge i32 %3, 3, !dbg !19171
  br i1 %cmp, label %if.then, label %if.end, !dbg !19172

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19173
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !19174
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19173
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !19175
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2955, i8* %arraydecay, i32 %5) #12, !dbg !19176
  br label %if.end, !dbg !19176

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19177
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19179
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 18, !dbg !19180
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19179
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %6, i8* %arraydecay1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.125, i64 0, i64 0)) #11, !dbg !19181
  %tobool = icmp ne i32 %call2, 0, !dbg !19181
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !19182

if.then3:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !19183
  br label %return, !dbg !19183

if.end4:                                          ; preds = %if.end
  %8 = load i32, i32* %cmd.addr, align 4, !dbg !19184
  %cmp5 = icmp ne i32 %8, 21596, !dbg !19186
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !19187

if.then6:                                         ; preds = %if.end4
  %9 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19188
  %call7 = call zeroext i1 @tty_io_error(%struct.tty_struct* %9) #11, !dbg !19191
  br i1 %call7, label %if.then8, label %if.end9, !dbg !19192

if.then8:                                         ; preds = %if.then6
  store i32 -5, i32* %retval, align 4, !dbg !19193
  br label %return, !dbg !19193

if.end9:                                          ; preds = %if.then6
  br label %if.end10, !dbg !19194

if.end10:                                         ; preds = %if.end9, %if.end4
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19195
  %11 = load i32, i32* %cmd.addr, align 4, !dbg !19196
  %12 = load i64, i64* %arg.addr, align 8, !dbg !19197
  %call11 = call i32 @mgsl_ioctl_common(%struct.mgsl_struct* %10, i32 %11, i64 %12) #11, !dbg !19198
  store i32 %call11, i32* %retval, align 4, !dbg !19199
  br label %return, !dbg !19199

return:                                           ; preds = %if.end10, %if.then8, %if.then3
  %13 = load i32, i32* %retval, align 4, !dbg !19200
  ret i32 %13, !dbg !19200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_set_termios(%struct.tty_struct* %tty, %struct.ktermios* %old_termios) #1 !dbg !19201 {
entry:
  %lock.addr.i96 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i96, metadata !9306, metadata !DIExpression()), !dbg !19202
  %flags.addr.i97 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i97, metadata !9312, metadata !DIExpression()), !dbg !19206
  %tmp.i98 = alloca i32, align 4
  %tmp8.i99 = alloca i32, align 4
  %lock.addr.i94 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i94, metadata !8660, metadata !DIExpression()), !dbg !19207
  %lock.addr.i92 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i92, metadata !9306, metadata !DIExpression()), !dbg !19214
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !19218
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !19219
  %tty.addr = alloca %struct.tty_struct*, align 8
  %old_termios.addr = alloca %struct.ktermios*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %__dummy55 = alloca i64, align 8
  %__dummy256 = alloca i64, align 8
  %tmp59 = alloca i32, align 4
  %__dummy63 = alloca i64, align 8
  %__dummy264 = alloca i64, align 8
  %tmp67 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19226, metadata !DIExpression()), !dbg !19227
  store %struct.ktermios* %old_termios, %struct.ktermios** %old_termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old_termios.addr, metadata !19228, metadata !DIExpression()), !dbg !19229
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19230, metadata !DIExpression()), !dbg !19231
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19232
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19233
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19233
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19232
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19231
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19234, metadata !DIExpression()), !dbg !19235
  %3 = load i32, i32* @debug_level, align 4, !dbg !19236
  %cmp = icmp sge i32 %3, 3, !dbg !19238
  br i1 %cmp, label %if.then, label %if.end, !dbg !19239

if.then:                                          ; preds = %entry
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19240
  %driver = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 3, !dbg !19241
  %5 = load %struct.tty_driver*, %struct.tty_driver** %driver, align 8, !dbg !19241
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %5, i32 0, i32 5, !dbg !19242
  %6 = load i8*, i8** %name, align 8, !dbg !19242
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3023, i8* %6) #12, !dbg !19243
  br label %if.end, !dbg !19243

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19244
  call void @mgsl_change_params(%struct.mgsl_struct* %7) #11, !dbg !19245
  %8 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !19246
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %8, i32 0, i32 2, !dbg !19247
  %9 = load i32, i32* %c_cflag, align 4, !dbg !19247
  %and = and i32 %9, 4111, !dbg !19248
  %tobool = icmp ne i32 %and, 0, !dbg !19248
  br i1 %tobool, label %land.lhs.true, label %if.end29, !dbg !19249

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19250
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %10, i32 0, i32 15, !dbg !19250
  %c_cflag1 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !19250
  %11 = load i32, i32* %c_cflag1, align 8, !dbg !19250
  %and2 = and i32 %11, 4111, !dbg !19250
  %tobool3 = icmp ne i32 %and2, 0, !dbg !19250
  br i1 %tobool3, label %if.end29, label %if.then4, !dbg !19251

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19252
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 71, !dbg !19253
  %13 = load i8, i8* %serial_signals, align 8, !dbg !19254
  %conv = zext i8 %13 to i32, !dbg !19254
  %and5 = and i32 %conv, -161, !dbg !19254
  %conv6 = trunc i32 %and5 to i8, !dbg !19254
  store i8 %conv6, i8* %serial_signals, align 8, !dbg !19254
  br label %do.body, !dbg !19255

do.body:                                          ; preds = %if.then4
  br label %do.body7, !dbg !19256

do.body7:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19257, metadata !DIExpression()), !dbg !19259
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19260, metadata !DIExpression()), !dbg !19259
  %cmp8 = icmp eq i64* %__dummy, %__dummy2, !dbg !19259
  %conv9 = zext i1 %cmp8 to i32, !dbg !19259
  store i32 1, i32* %tmp, align 4, !dbg !19259
  %14 = load i32, i32* %tmp, align 4, !dbg !19259
  br label %do.body10, !dbg !19261

do.body10:                                        ; preds = %do.body7
  br label %do.body11, !dbg !19262

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !19263

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !19265, metadata !DIExpression()), !dbg !19268
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !19269, metadata !DIExpression()), !dbg !19268
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !19268
  %conv16 = zext i1 %cmp15 to i32, !dbg !19268
  store i32 1, i32* %tmp17, align 4, !dbg !19268
  %15 = load i32, i32* %tmp17, align 4, !dbg !19268
  %call18 = call i64 @arch_local_irq_save() #11, !dbg !19270
  store i64 %call18, i64* %flags, align 8, !dbg !19270
  br label %do.end, !dbg !19270

do.end:                                           ; preds = %do.body12
  br label %do.end19, !dbg !19263

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !19262

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19271, !srcloc !19272
  br label %do.body21, !dbg !19271

do.body21:                                        ; preds = %do.body20
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19273
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 17, !dbg !19273
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19274
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !19275
  %rlock.i = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !19275
  br label %do.end23, !dbg !19273

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !19271

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !19262

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !19261

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !19256

do.end27:                                         ; preds = %do.end26
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19276
  call void @usc_set_serial_signals(%struct.mgsl_struct* %19) #11, !dbg !19277
  %20 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19278
  %irq_spinlock28 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %20, i32 0, i32 17, !dbg !19279
  %21 = load i64, i64* %flags, align 8, !dbg !19280
  store %struct.spinlock* %irq_spinlock28, %struct.spinlock** %lock.addr.i92, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !19281
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !19281
  store i32 1, i32* %tmp.i, align 4, !dbg !19281
  %22 = load i32, i32* %tmp.i, align 4, !dbg !19281
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !19282
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !19282
  store i32 1, i32* %tmp8.i, align 4, !dbg !19282
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !19282
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !19283
  call void @arch_local_irq_restore(i64 %24) #14, !dbg !19283
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19284, !srcloc !9373
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i92, align 8, !dbg !19285
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !19285
  %rlock.i93 = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !19285
  br label %if.end29, !dbg !19286

if.end29:                                         ; preds = %do.end27, %land.lhs.true, %if.end
  %27 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !19287
  %c_cflag30 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %27, i32 0, i32 2, !dbg !19288
  %28 = load i32, i32* %c_cflag30, align 4, !dbg !19288
  %and31 = and i32 %28, 4111, !dbg !19289
  %tobool32 = icmp ne i32 %and31, 0, !dbg !19289
  br i1 %tobool32, label %if.end81, label %land.lhs.true33, !dbg !19290

land.lhs.true33:                                  ; preds = %if.end29
  %29 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19291
  %termios34 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %29, i32 0, i32 15, !dbg !19291
  %c_cflag35 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios34, i32 0, i32 2, !dbg !19291
  %30 = load i32, i32* %c_cflag35, align 8, !dbg !19291
  %and36 = and i32 %30, 4111, !dbg !19291
  %tobool37 = icmp ne i32 %and36, 0, !dbg !19291
  br i1 %tobool37, label %if.then38, label %if.end81, !dbg !19292

if.then38:                                        ; preds = %land.lhs.true33
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19293
  %serial_signals39 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 71, !dbg !19294
  %32 = load i8, i8* %serial_signals39, align 8, !dbg !19295
  %conv40 = zext i8 %32 to i32, !dbg !19295
  %or = or i32 %conv40, 128, !dbg !19295
  %conv41 = trunc i32 %or to i8, !dbg !19295
  store i8 %conv41, i8* %serial_signals39, align 8, !dbg !19295
  %33 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19296
  %termios42 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %33, i32 0, i32 15, !dbg !19296
  %c_cflag43 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios42, i32 0, i32 2, !dbg !19296
  %34 = load i32, i32* %c_cflag43, align 8, !dbg !19296
  %and44 = and i32 %34, -2147483648, !dbg !19296
  %tobool45 = icmp ne i32 %and44, 0, !dbg !19296
  br i1 %tobool45, label %lor.lhs.false, label %if.then47, !dbg !19298

lor.lhs.false:                                    ; preds = %if.then38
  %35 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19299
  %call46 = call zeroext i1 @tty_throttled(%struct.tty_struct* %35) #11, !dbg !19300
  br i1 %call46, label %if.end52, label %if.then47, !dbg !19301

if.then47:                                        ; preds = %lor.lhs.false, %if.then38
  %36 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19302
  %serial_signals48 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %36, i32 0, i32 71, !dbg !19303
  %37 = load i8, i8* %serial_signals48, align 8, !dbg !19304
  %conv49 = zext i8 %37 to i32, !dbg !19304
  %or50 = or i32 %conv49, 32, !dbg !19304
  %conv51 = trunc i32 %or50 to i8, !dbg !19304
  store i8 %conv51, i8* %serial_signals48, align 8, !dbg !19304
  br label %if.end52, !dbg !19302

if.end52:                                         ; preds = %if.then47, %lor.lhs.false
  br label %do.body53, !dbg !19305

do.body53:                                        ; preds = %if.end52
  br label %do.body54, !dbg !19306

do.body54:                                        ; preds = %do.body53
  call void @llvm.dbg.declare(metadata i64* %__dummy55, metadata !19307, metadata !DIExpression()), !dbg !19309
  call void @llvm.dbg.declare(metadata i64* %__dummy256, metadata !19310, metadata !DIExpression()), !dbg !19309
  %cmp57 = icmp eq i64* %__dummy55, %__dummy256, !dbg !19309
  %conv58 = zext i1 %cmp57 to i32, !dbg !19309
  store i32 1, i32* %tmp59, align 4, !dbg !19309
  %38 = load i32, i32* %tmp59, align 4, !dbg !19309
  br label %do.body60, !dbg !19311

do.body60:                                        ; preds = %do.body54
  br label %do.body61, !dbg !19312

do.body61:                                        ; preds = %do.body60
  br label %do.body62, !dbg !19313

do.body62:                                        ; preds = %do.body61
  call void @llvm.dbg.declare(metadata i64* %__dummy63, metadata !19315, metadata !DIExpression()), !dbg !19318
  call void @llvm.dbg.declare(metadata i64* %__dummy264, metadata !19319, metadata !DIExpression()), !dbg !19318
  %cmp65 = icmp eq i64* %__dummy63, %__dummy264, !dbg !19318
  %conv66 = zext i1 %cmp65 to i32, !dbg !19318
  store i32 1, i32* %tmp67, align 4, !dbg !19318
  %39 = load i32, i32* %tmp67, align 4, !dbg !19318
  %call68 = call i64 @arch_local_irq_save() #11, !dbg !19320
  store i64 %call68, i64* %flags, align 8, !dbg !19320
  br label %do.end69, !dbg !19320

do.end69:                                         ; preds = %do.body62
  br label %do.end70, !dbg !19313

do.end70:                                         ; preds = %do.end69
  br label %do.body71, !dbg !19312

do.body71:                                        ; preds = %do.end70
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19321, !srcloc !19322
  br label %do.body72, !dbg !19321

do.body72:                                        ; preds = %do.body71
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19323
  %irq_spinlock73 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 17, !dbg !19323
  store %struct.spinlock* %irq_spinlock73, %struct.spinlock** %lock.addr.i94, align 8
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i94, align 8, !dbg !19324
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !19325
  %rlock.i95 = bitcast %union.anon.1* %42 to %struct.raw_spinlock*, !dbg !19325
  br label %do.end75, !dbg !19323

do.end75:                                         ; preds = %do.body72
  br label %do.end76, !dbg !19321

do.end76:                                         ; preds = %do.end75
  br label %do.end77, !dbg !19312

do.end77:                                         ; preds = %do.end76
  br label %do.end78, !dbg !19311

do.end78:                                         ; preds = %do.end77
  br label %do.end79, !dbg !19306

do.end79:                                         ; preds = %do.end78
  %43 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19326
  call void @usc_set_serial_signals(%struct.mgsl_struct* %43) #11, !dbg !19327
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19328
  %irq_spinlock80 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %44, i32 0, i32 17, !dbg !19329
  %45 = load i64, i64* %flags, align 8, !dbg !19330
  store %struct.spinlock* %irq_spinlock80, %struct.spinlock** %lock.addr.i96, align 8
  store i64 %45, i64* %flags.addr.i97, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !19331
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !19331
  store i32 1, i32* %tmp.i98, align 4, !dbg !19331
  %46 = load i32, i32* %tmp.i98, align 4, !dbg !19331
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !19332
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !19332
  store i32 1, i32* %tmp8.i99, align 4, !dbg !19332
  %47 = load i32, i32* %tmp8.i99, align 4, !dbg !19332
  %48 = load i64, i64* %flags.addr.i97, align 8, !dbg !19333
  call void @arch_local_irq_restore(i64 %48) #14, !dbg !19333
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19334, !srcloc !9373
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i96, align 8, !dbg !19335
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !19335
  %rlock.i100 = bitcast %union.anon.1* %50 to %struct.raw_spinlock*, !dbg !19335
  br label %if.end81, !dbg !19336

if.end81:                                         ; preds = %do.end79, %land.lhs.true33, %if.end29
  %51 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !19337
  %c_cflag82 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %51, i32 0, i32 2, !dbg !19339
  %52 = load i32, i32* %c_cflag82, align 4, !dbg !19339
  %and83 = and i32 %52, -2147483648, !dbg !19340
  %tobool84 = icmp ne i32 %and83, 0, !dbg !19340
  br i1 %tobool84, label %land.lhs.true85, label %if.end91, !dbg !19341

land.lhs.true85:                                  ; preds = %if.end81
  %53 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19342
  %termios86 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %53, i32 0, i32 15, !dbg !19342
  %c_cflag87 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios86, i32 0, i32 2, !dbg !19342
  %54 = load i32, i32* %c_cflag87, align 8, !dbg !19342
  %and88 = and i32 %54, -2147483648, !dbg !19342
  %tobool89 = icmp ne i32 %and88, 0, !dbg !19342
  br i1 %tobool89, label %if.end91, label %if.then90, !dbg !19343

if.then90:                                        ; preds = %land.lhs.true85
  %55 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19344
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %55, i32 0, i32 26, !dbg !19346
  store i32 0, i32* %hw_stopped, align 8, !dbg !19347
  %56 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19348
  call void @mgsl_start(%struct.tty_struct* %56) #11, !dbg !19349
  br label %if.end91, !dbg !19350

if.end91:                                         ; preds = %if.then90, %land.lhs.true85, %if.end81
  ret void, !dbg !19351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_throttle(%struct.tty_struct* %tty) #1 !dbg !19352 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !9306, metadata !DIExpression()), !dbg !19353
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !19357
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !19358
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19365, metadata !DIExpression()), !dbg !19366
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19367, metadata !DIExpression()), !dbg !19368
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19369
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19370
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19370
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19369
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19368
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19371, metadata !DIExpression()), !dbg !19372
  %3 = load i32, i32* @debug_level, align 4, !dbg !19373
  %cmp = icmp sge i32 %3, 3, !dbg !19375
  br i1 %cmp, label %if.then, label %if.end, !dbg !19376

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19377
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !19378
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19377
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2346, i8* %arraydecay) #12, !dbg !19379
  br label %if.end, !dbg !19379

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19380
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19382
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %6, i32 0, i32 18, !dbg !19383
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19382
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %5, i8* %arraydecay1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.139, i64 0, i64 0)) #11, !dbg !19384
  %tobool = icmp ne i32 %call2, 0, !dbg !19384
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !19385

if.then3:                                         ; preds = %if.end
  br label %if.end37, !dbg !19386

if.end4:                                          ; preds = %if.end
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19387
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 15, !dbg !19387
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !19387
  %8 = load i32, i32* %c_iflag, align 8, !dbg !19387
  %and = and i32 %8, 4096, !dbg !19387
  %tobool5 = icmp ne i32 %and, 0, !dbg !19387
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !19389

if.then6:                                         ; preds = %if.end4
  %9 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19390
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19391
  %termios7 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %10, i32 0, i32 15, !dbg !19391
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios7, i32 0, i32 5, !dbg !19391
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 9, !dbg !19391
  %11 = load i8, i8* %arrayidx, align 1, !dbg !19391
  call void @mgsl_send_xchar(%struct.tty_struct* %9, i8 signext %11) #11, !dbg !19392
  br label %if.end8, !dbg !19392

if.end8:                                          ; preds = %if.then6, %if.end4
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19393
  %termios9 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %12, i32 0, i32 15, !dbg !19393
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios9, i32 0, i32 2, !dbg !19393
  %13 = load i32, i32* %c_cflag, align 8, !dbg !19393
  %and10 = and i32 %13, -2147483648, !dbg !19393
  %tobool11 = icmp ne i32 %and10, 0, !dbg !19393
  br i1 %tobool11, label %if.then12, label %if.end37, !dbg !19394

if.then12:                                        ; preds = %if.end8
  br label %do.body, !dbg !19395

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !19396

do.body13:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19397, metadata !DIExpression()), !dbg !19399
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19400, metadata !DIExpression()), !dbg !19399
  %cmp14 = icmp eq i64* %__dummy, %__dummy2, !dbg !19399
  %conv = zext i1 %cmp14 to i32, !dbg !19399
  store i32 1, i32* %tmp, align 4, !dbg !19399
  %14 = load i32, i32* %tmp, align 4, !dbg !19399
  br label %do.body15, !dbg !19401

do.body15:                                        ; preds = %do.body13
  br label %do.body16, !dbg !19402

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !19403

do.body17:                                        ; preds = %do.body16
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !19405, metadata !DIExpression()), !dbg !19408
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !19409, metadata !DIExpression()), !dbg !19408
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !19408
  %conv21 = zext i1 %cmp20 to i32, !dbg !19408
  store i32 1, i32* %tmp22, align 4, !dbg !19408
  %15 = load i32, i32* %tmp22, align 4, !dbg !19408
  %call23 = call i64 @arch_local_irq_save() #11, !dbg !19410
  store i64 %call23, i64* %flags, align 8, !dbg !19410
  br label %do.end, !dbg !19410

do.end:                                           ; preds = %do.body17
  br label %do.end24, !dbg !19403

do.end24:                                         ; preds = %do.end
  br label %do.body25, !dbg !19402

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19411, !srcloc !19412
  br label %do.body26, !dbg !19411

do.body26:                                        ; preds = %do.body25
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19413
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 17, !dbg !19413
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19414
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !19415
  %rlock.i = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !19415
  br label %do.end28, !dbg !19413

do.end28:                                         ; preds = %do.body26
  br label %do.end29, !dbg !19411

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !19402

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !19401

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !19396

do.end32:                                         ; preds = %do.end31
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19416
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 71, !dbg !19417
  %20 = load i8, i8* %serial_signals, align 8, !dbg !19418
  %conv33 = zext i8 %20 to i32, !dbg !19418
  %and34 = and i32 %conv33, -33, !dbg !19418
  %conv35 = trunc i32 %and34 to i8, !dbg !19418
  store i8 %conv35, i8* %serial_signals, align 8, !dbg !19418
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19419
  call void @usc_set_serial_signals(%struct.mgsl_struct* %21) #11, !dbg !19420
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19421
  %irq_spinlock36 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 17, !dbg !19422
  %23 = load i64, i64* %flags, align 8, !dbg !19423
  store %struct.spinlock* %irq_spinlock36, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !19424
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !19424
  store i32 1, i32* %tmp.i, align 4, !dbg !19424
  %24 = load i32, i32* %tmp.i, align 4, !dbg !19424
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !19425
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !19425
  store i32 1, i32* %tmp8.i, align 4, !dbg !19425
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !19425
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !19426
  call void @arch_local_irq_restore(i64 %26) #14, !dbg !19426
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19427, !srcloc !9373
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !19428
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !19428
  %rlock.i39 = bitcast %union.anon.1* %28 to %struct.raw_spinlock*, !dbg !19428
  br label %if.end37, !dbg !19429

if.end37:                                         ; preds = %if.then3, %do.end32, %if.end8
  ret void, !dbg !19430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_unthrottle(%struct.tty_struct* %tty) #1 !dbg !19431 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !9306, metadata !DIExpression()), !dbg !19432
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !19436
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !19437
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19444, metadata !DIExpression()), !dbg !19445
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19446, metadata !DIExpression()), !dbg !19447
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19448
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19449
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19449
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19448
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19447
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19450, metadata !DIExpression()), !dbg !19451
  %3 = load i32, i32* @debug_level, align 4, !dbg !19452
  %cmp = icmp sge i32 %3, 3, !dbg !19454
  br i1 %cmp, label %if.then, label %if.end, !dbg !19455

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19456
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !19457
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19456
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2376, i8* %arraydecay) #12, !dbg !19458
  br label %if.end, !dbg !19458

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19459
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19461
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %6, i32 0, i32 18, !dbg !19462
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19461
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %5, i8* %arraydecay1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.141, i64 0, i64 0)) #11, !dbg !19463
  %tobool = icmp ne i32 %call2, 0, !dbg !19463
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !19464

if.then3:                                         ; preds = %if.end
  br label %if.end40, !dbg !19465

if.end4:                                          ; preds = %if.end
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19466
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 15, !dbg !19466
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !19466
  %8 = load i32, i32* %c_iflag, align 8, !dbg !19466
  %and = and i32 %8, 4096, !dbg !19466
  %tobool5 = icmp ne i32 %and, 0, !dbg !19466
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !19468

if.then6:                                         ; preds = %if.end4
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19469
  %x_char = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 6, !dbg !19472
  %10 = load i32, i32* %x_char, align 8, !dbg !19472
  %tobool7 = icmp ne i32 %10, 0, !dbg !19469
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !19473

if.then8:                                         ; preds = %if.then6
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19474
  %x_char9 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 6, !dbg !19475
  store i32 0, i32* %x_char9, align 8, !dbg !19476
  br label %if.end11, !dbg !19474

if.else:                                          ; preds = %if.then6
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19477
  %13 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19478
  %termios10 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %13, i32 0, i32 15, !dbg !19478
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios10, i32 0, i32 5, !dbg !19478
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 8, !dbg !19478
  %14 = load i8, i8* %arrayidx, align 1, !dbg !19478
  call void @mgsl_send_xchar(%struct.tty_struct* %12, i8 signext %14) #11, !dbg !19479
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  br label %if.end12, !dbg !19480

if.end12:                                         ; preds = %if.end11, %if.end4
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19481
  %termios13 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %15, i32 0, i32 15, !dbg !19481
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios13, i32 0, i32 2, !dbg !19481
  %16 = load i32, i32* %c_cflag, align 8, !dbg !19481
  %and14 = and i32 %16, -2147483648, !dbg !19481
  %tobool15 = icmp ne i32 %and14, 0, !dbg !19481
  br i1 %tobool15, label %if.then16, label %if.end40, !dbg !19482

if.then16:                                        ; preds = %if.end12
  br label %do.body, !dbg !19483

do.body:                                          ; preds = %if.then16
  br label %do.body17, !dbg !19484

do.body17:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19485, metadata !DIExpression()), !dbg !19487
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19488, metadata !DIExpression()), !dbg !19487
  %cmp18 = icmp eq i64* %__dummy, %__dummy2, !dbg !19487
  %conv = zext i1 %cmp18 to i32, !dbg !19487
  store i32 1, i32* %tmp, align 4, !dbg !19487
  %17 = load i32, i32* %tmp, align 4, !dbg !19487
  br label %do.body19, !dbg !19489

do.body19:                                        ; preds = %do.body17
  br label %do.body20, !dbg !19490

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !19491

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !19493, metadata !DIExpression()), !dbg !19496
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !19497, metadata !DIExpression()), !dbg !19496
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !19496
  %conv25 = zext i1 %cmp24 to i32, !dbg !19496
  store i32 1, i32* %tmp26, align 4, !dbg !19496
  %18 = load i32, i32* %tmp26, align 4, !dbg !19496
  %call27 = call i64 @arch_local_irq_save() #11, !dbg !19498
  store i64 %call27, i64* %flags, align 8, !dbg !19498
  br label %do.end, !dbg !19498

do.end:                                           ; preds = %do.body21
  br label %do.end28, !dbg !19491

do.end28:                                         ; preds = %do.end
  br label %do.body29, !dbg !19490

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19499, !srcloc !19500
  br label %do.body30, !dbg !19499

do.body30:                                        ; preds = %do.body29
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19501
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 17, !dbg !19501
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19502
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !19503
  %rlock.i = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !19503
  br label %do.end32, !dbg !19501

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !19499

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !19490

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !19489

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !19484

do.end36:                                         ; preds = %do.end35
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19504
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 71, !dbg !19505
  %23 = load i8, i8* %serial_signals, align 8, !dbg !19506
  %conv37 = zext i8 %23 to i32, !dbg !19506
  %or = or i32 %conv37, 32, !dbg !19506
  %conv38 = trunc i32 %or to i8, !dbg !19506
  store i8 %conv38, i8* %serial_signals, align 8, !dbg !19506
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19507
  call void @usc_set_serial_signals(%struct.mgsl_struct* %24) #11, !dbg !19508
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19509
  %irq_spinlock39 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 17, !dbg !19510
  %26 = load i64, i64* %flags, align 8, !dbg !19511
  store %struct.spinlock* %irq_spinlock39, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !19512
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !19512
  store i32 1, i32* %tmp.i, align 4, !dbg !19512
  %27 = load i32, i32* %tmp.i, align 4, !dbg !19512
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !19513
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !19513
  store i32 1, i32* %tmp8.i, align 4, !dbg !19513
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !19513
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !19514
  call void @arch_local_irq_restore(i64 %29) #14, !dbg !19514
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19515, !srcloc !9373
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !19516
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !19516
  %rlock.i42 = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !19516
  br label %if.end40, !dbg !19517

if.end40:                                         ; preds = %if.then3, %do.end36, %if.end12
  ret void, !dbg !19518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_stop(%struct.tty_struct* %tty) #1 !dbg !19519 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !9306, metadata !DIExpression()), !dbg !19520
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !19522
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !19523
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19530, metadata !DIExpression()), !dbg !19531
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19532, metadata !DIExpression()), !dbg !19533
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19534
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19535
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19535
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19534
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19533
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19536, metadata !DIExpression()), !dbg !19537
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19538
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19540
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !19541
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19540
  %call = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %3, i8* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.142, i64 0, i64 0)) #11, !dbg !19542
  %tobool = icmp ne i32 %call, 0, !dbg !19542
  br i1 %tobool, label %if.then, label %if.end, !dbg !19543

if.then:                                          ; preds = %entry
  br label %return, !dbg !19544

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !19545
  %cmp = icmp sge i32 %5, 3, !dbg !19547
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !19548

if.then1:                                         ; preds = %if.end
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19549
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 56, !dbg !19550
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19549
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.143, i64 0, i64 0), i8* %arraydecay2) #12, !dbg !19551
  br label %if.end4, !dbg !19551

if.end4:                                          ; preds = %if.then1, %if.end
  br label %do.body, !dbg !19552

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !19553

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19554, metadata !DIExpression()), !dbg !19556
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19557, metadata !DIExpression()), !dbg !19556
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !19556
  %conv = zext i1 %cmp6 to i32, !dbg !19556
  store i32 1, i32* %tmp, align 4, !dbg !19556
  %7 = load i32, i32* %tmp, align 4, !dbg !19556
  br label %do.body7, !dbg !19558

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !19559

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !19560

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !19562, metadata !DIExpression()), !dbg !19565
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !19566, metadata !DIExpression()), !dbg !19565
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !19565
  %conv13 = zext i1 %cmp12 to i32, !dbg !19565
  store i32 1, i32* %tmp14, align 4, !dbg !19565
  %8 = load i32, i32* %tmp14, align 4, !dbg !19565
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !19567
  store i64 %call15, i64* %flags, align 8, !dbg !19567
  br label %do.end, !dbg !19567

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !19560

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !19559

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19568, !srcloc !19569
  br label %do.body18, !dbg !19568

do.body18:                                        ; preds = %do.body17
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19570
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 17, !dbg !19570
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19571
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !19572
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !19572
  br label %do.end20, !dbg !19570

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !19568

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !19559

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !19558

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !19553

do.end24:                                         ; preds = %do.end23
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19573
  %tx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 51, !dbg !19575
  %13 = load i8, i8* %tx_enabled, align 1, !dbg !19575
  %tobool25 = trunc i8 %13 to i1, !dbg !19575
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !19576

if.then26:                                        ; preds = %do.end24
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19577
  call void @usc_stop_transmitter(%struct.mgsl_struct* %14) #11, !dbg !19578
  br label %if.end27, !dbg !19578

if.end27:                                         ; preds = %if.then26, %do.end24
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19579
  %irq_spinlock28 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 17, !dbg !19580
  %16 = load i64, i64* %flags, align 8, !dbg !19581
  store %struct.spinlock* %irq_spinlock28, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !19582
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !19582
  store i32 1, i32* %tmp.i, align 4, !dbg !19582
  %17 = load i32, i32* %tmp.i, align 4, !dbg !19582
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !19583
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !19583
  store i32 1, i32* %tmp8.i, align 4, !dbg !19583
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !19583
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !19584
  call void @arch_local_irq_restore(i64 %19) #14, !dbg !19584
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19585, !srcloc !9373
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !19586
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !19586
  %rlock.i30 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !19586
  br label %return, !dbg !19587

return:                                           ; preds = %if.end27, %if.then
  ret void, !dbg !19587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_start(%struct.tty_struct* %tty) #1 !dbg !19588 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !9306, metadata !DIExpression()), !dbg !19589
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !19591
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !19592
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19599, metadata !DIExpression()), !dbg !19600
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19601, metadata !DIExpression()), !dbg !19602
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19603
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19604
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19604
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19603
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19602
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19605, metadata !DIExpression()), !dbg !19606
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19607
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19609
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !19610
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19609
  %call = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %3, i8* %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.144, i64 0, i64 0)) #11, !dbg !19611
  %tobool = icmp ne i32 %call, 0, !dbg !19611
  br i1 %tobool, label %if.then, label %if.end, !dbg !19612

if.then:                                          ; preds = %entry
  br label %return, !dbg !19613

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !19614
  %cmp = icmp sge i32 %5, 3, !dbg !19616
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !19617

if.then1:                                         ; preds = %if.end
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19618
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 56, !dbg !19619
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19618
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.145, i64 0, i64 0), i8* %arraydecay2) #12, !dbg !19620
  br label %if.end4, !dbg !19620

if.end4:                                          ; preds = %if.then1, %if.end
  br label %do.body, !dbg !19621

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !19622

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19623, metadata !DIExpression()), !dbg !19625
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19626, metadata !DIExpression()), !dbg !19625
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !19625
  %conv = zext i1 %cmp6 to i32, !dbg !19625
  store i32 1, i32* %tmp, align 4, !dbg !19625
  %7 = load i32, i32* %tmp, align 4, !dbg !19625
  br label %do.body7, !dbg !19627

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !19628

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !19629

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !19631, metadata !DIExpression()), !dbg !19634
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !19635, metadata !DIExpression()), !dbg !19634
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !19634
  %conv13 = zext i1 %cmp12 to i32, !dbg !19634
  store i32 1, i32* %tmp14, align 4, !dbg !19634
  %8 = load i32, i32* %tmp14, align 4, !dbg !19634
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !19636
  store i64 %call15, i64* %flags, align 8, !dbg !19636
  br label %do.end, !dbg !19636

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !19629

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !19628

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19637, !srcloc !19638
  br label %do.body18, !dbg !19637

do.body18:                                        ; preds = %do.body17
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19639
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 17, !dbg !19639
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19640
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !19641
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !19641
  br label %do.end20, !dbg !19639

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !19637

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !19628

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !19627

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !19622

do.end24:                                         ; preds = %do.end23
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19642
  %tx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 51, !dbg !19644
  %13 = load i8, i8* %tx_enabled, align 1, !dbg !19644
  %tobool25 = trunc i8 %13 to i1, !dbg !19644
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !19645

if.then26:                                        ; preds = %do.end24
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19646
  call void @usc_start_transmitter(%struct.mgsl_struct* %14) #11, !dbg !19647
  br label %if.end27, !dbg !19647

if.end27:                                         ; preds = %if.then26, %do.end24
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19648
  %irq_spinlock28 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 17, !dbg !19649
  %16 = load i64, i64* %flags, align 8, !dbg !19650
  store %struct.spinlock* %irq_spinlock28, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !19651
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !19651
  store i32 1, i32* %tmp.i, align 4, !dbg !19651
  %17 = load i32, i32* %tmp.i, align 4, !dbg !19651
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !19652
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !19652
  store i32 1, i32* %tmp8.i, align 4, !dbg !19652
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !19652
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !19653
  call void @arch_local_irq_restore(i64 %19) #14, !dbg !19653
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19654, !srcloc !9373
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !19655
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !19655
  %rlock.i30 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !19655
  br label %return, !dbg !19656

return:                                           ; preds = %if.end27, %if.then
  ret void, !dbg !19656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_hangup(%struct.tty_struct* %tty) #1 !dbg !19657 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19658, metadata !DIExpression()), !dbg !19659
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19660, metadata !DIExpression()), !dbg !19661
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19662
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19663
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19663
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19662
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19661
  %3 = load i32, i32* @debug_level, align 4, !dbg !19664
  %cmp = icmp sge i32 %3, 3, !dbg !19666
  br i1 %cmp, label %if.then, label %if.end, !dbg !19667

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19668
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !19669
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19668
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3185, i8* %arraydecay) #12, !dbg !19670
  br label %if.end, !dbg !19670

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19671
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19673
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %6, i32 0, i32 18, !dbg !19674
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19673
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %5, i8* %arraydecay1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.147, i64 0, i64 0)) #11, !dbg !19675
  %tobool = icmp ne i32 %call2, 0, !dbg !19675
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !19676

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !19677

if.end4:                                          ; preds = %if.end
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19678
  call void @mgsl_flush_buffer(%struct.tty_struct* %7) #11, !dbg !19679
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19680
  call void @shutdown(%struct.mgsl_struct* %8) #11, !dbg !19681
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19682
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 1, !dbg !19683
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !19684
  store i32 0, i32* %count, align 4, !dbg !19685
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19686
  %port5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 1, !dbg !19687
  call void @tty_port_set_active(%struct.tty_port* %port5, i1 zeroext false) #11, !dbg !19688
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19689
  %port6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 1, !dbg !19690
  %tty7 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port6, i32 0, i32 1, !dbg !19691
  store %struct.tty_struct* null, %struct.tty_struct** %tty7, align 8, !dbg !19692
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19693
  %port8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 1, !dbg !19693
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port8, i32 0, i32 8, !dbg !19693
  call void @__wake_up(%struct.wait_queue_head* %open_wait, i32 1, i32 1, i8* null) #11, !dbg !19693
  br label %return, !dbg !19694

return:                                           ; preds = %if.end4, %if.then3
  ret void, !dbg !19694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_break(%struct.tty_struct* %tty, i32 %break_state) #1 !dbg !19695 {
entry:
  %lock.addr.i36 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i36, metadata !9306, metadata !DIExpression()), !dbg !19696
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !19698
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !19699
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %break_state.addr = alloca i32, align 4
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19706, metadata !DIExpression()), !dbg !19707
  store i32 %break_state, i32* %break_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %break_state.addr, metadata !19708, metadata !DIExpression()), !dbg !19709
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19710, metadata !DIExpression()), !dbg !19711
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19712
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19713
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19713
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19712
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19711
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19714, metadata !DIExpression()), !dbg !19715
  %3 = load i32, i32* @debug_level, align 4, !dbg !19716
  %cmp = icmp sge i32 %3, 3, !dbg !19718
  br i1 %cmp, label %if.then, label %if.end, !dbg !19719

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19720
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !19721
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19720
  %5 = load i32, i32* %break_state.addr, align 4, !dbg !19722
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2892, i8* %arraydecay, i32 %5) #12, !dbg !19723
  br label %if.end, !dbg !19723

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19724
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19726
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 18, !dbg !19727
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19726
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %6, i8* %arraydecay1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.149, i64 0, i64 0)) #11, !dbg !19728
  %tobool = icmp ne i32 %call2, 0, !dbg !19728
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !19729

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !19730
  br label %return, !dbg !19730

if.end4:                                          ; preds = %if.end
  br label %do.body, !dbg !19731

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !19732

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19733, metadata !DIExpression()), !dbg !19735
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19736, metadata !DIExpression()), !dbg !19735
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !19735
  %conv = zext i1 %cmp6 to i32, !dbg !19735
  store i32 1, i32* %tmp, align 4, !dbg !19735
  %8 = load i32, i32* %tmp, align 4, !dbg !19735
  br label %do.body7, !dbg !19737

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !19738

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !19739

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !19741, metadata !DIExpression()), !dbg !19744
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !19745, metadata !DIExpression()), !dbg !19744
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !19744
  %conv13 = zext i1 %cmp12 to i32, !dbg !19744
  store i32 1, i32* %tmp14, align 4, !dbg !19744
  %9 = load i32, i32* %tmp14, align 4, !dbg !19744
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !19746
  store i64 %call15, i64* %flags, align 8, !dbg !19746
  br label %do.end, !dbg !19746

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !19739

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !19738

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19747, !srcloc !19748
  br label %do.body18, !dbg !19747

do.body18:                                        ; preds = %do.body17
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19749
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 17, !dbg !19749
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19750
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !19751
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !19751
  br label %do.end20, !dbg !19749

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !19747

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !19738

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !19737

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !19732

do.end24:                                         ; preds = %do.end23
  %13 = load i32, i32* %break_state.addr, align 4, !dbg !19752
  %cmp25 = icmp eq i32 %13, -1, !dbg !19754
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !19755

if.then27:                                        ; preds = %do.end24
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19756
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19757
  %call28 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %15, i16 zeroext 22) #11, !dbg !19758
  %conv29 = zext i16 %call28 to i32, !dbg !19758
  %or = or i32 %conv29, 128, !dbg !19759
  %conv30 = trunc i32 %or to i16, !dbg !19760
  call void @usc_OutReg(%struct.mgsl_struct* %14, i16 zeroext 22, i16 zeroext %conv30) #11, !dbg !19761
  br label %if.end34, !dbg !19761

if.else:                                          ; preds = %do.end24
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19762
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19763
  %call31 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %17, i16 zeroext 22) #11, !dbg !19764
  %conv32 = zext i16 %call31 to i32, !dbg !19764
  %and = and i32 %conv32, -129, !dbg !19765
  %conv33 = trunc i32 %and to i16, !dbg !19766
  call void @usc_OutReg(%struct.mgsl_struct* %16, i16 zeroext 22, i16 zeroext %conv33) #11, !dbg !19767
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then27
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19768
  %irq_spinlock35 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 17, !dbg !19769
  %19 = load i64, i64* %flags, align 8, !dbg !19770
  store %struct.spinlock* %irq_spinlock35, %struct.spinlock** %lock.addr.i36, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !19771
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !19771
  store i32 1, i32* %tmp.i, align 4, !dbg !19771
  %20 = load i32, i32* %tmp.i, align 4, !dbg !19771
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !19772
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !19772
  store i32 1, i32* %tmp8.i, align 4, !dbg !19772
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !19772
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !19773
  call void @arch_local_irq_restore(i64 %22) #14, !dbg !19773
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19774, !srcloc !9373
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i36, align 8, !dbg !19775
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !19775
  %rlock.i37 = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !19775
  store i32 0, i32* %retval, align 4, !dbg !19776
  br label %return, !dbg !19776

return:                                           ; preds = %if.end34, %if.then3
  %25 = load i32, i32* %retval, align 4, !dbg !19777
  ret i32 %25, !dbg !19777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_flush_buffer(%struct.tty_struct* %tty) #1 !dbg !19778 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !9306, metadata !DIExpression()), !dbg !19779
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !19781
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !19782
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19789, metadata !DIExpression()), !dbg !19790
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19791, metadata !DIExpression()), !dbg !19792
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19793
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19794
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19794
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19793
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19792
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19795, metadata !DIExpression()), !dbg !19796
  %3 = load i32, i32* @debug_level, align 4, !dbg !19797
  %cmp = icmp sge i32 %3, 3, !dbg !19799
  br i1 %cmp, label %if.then, label %if.end, !dbg !19800

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19801
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !19802
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19801
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2289, i8* %arraydecay) #12, !dbg !19803
  br label %if.end, !dbg !19803

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19804
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19806
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %6, i32 0, i32 18, !dbg !19807
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19806
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %5, i8* %arraydecay1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.151, i64 0, i64 0)) #11, !dbg !19808
  %tobool = icmp ne i32 %call2, 0, !dbg !19808
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !19809

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !19810

if.end4:                                          ; preds = %if.end
  br label %do.body, !dbg !19811

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !19812

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19813, metadata !DIExpression()), !dbg !19815
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19816, metadata !DIExpression()), !dbg !19815
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !19815
  %conv = zext i1 %cmp6 to i32, !dbg !19815
  store i32 1, i32* %tmp, align 4, !dbg !19815
  %7 = load i32, i32* %tmp, align 4, !dbg !19815
  br label %do.body7, !dbg !19817

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !19818

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !19819

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !19821, metadata !DIExpression()), !dbg !19824
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !19825, metadata !DIExpression()), !dbg !19824
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !19824
  %conv13 = zext i1 %cmp12 to i32, !dbg !19824
  store i32 1, i32* %tmp14, align 4, !dbg !19824
  %8 = load i32, i32* %tmp14, align 4, !dbg !19824
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !19826
  store i64 %call15, i64* %flags, align 8, !dbg !19826
  br label %do.end, !dbg !19826

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !19819

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !19818

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19827, !srcloc !19828
  br label %do.body18, !dbg !19827

do.body18:                                        ; preds = %do.body17
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19829
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 17, !dbg !19829
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19830
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !19831
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !19831
  br label %do.end20, !dbg !19829

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !19827

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !19818

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !19817

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !19812

do.end24:                                         ; preds = %do.end23
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19832
  %xmit_tail = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 11, !dbg !19833
  store i32 0, i32* %xmit_tail, align 4, !dbg !19834
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19835
  %xmit_head = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 10, !dbg !19836
  store i32 0, i32* %xmit_head, align 8, !dbg !19837
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19838
  %xmit_cnt = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 12, !dbg !19839
  store i32 0, i32* %xmit_cnt, align 8, !dbg !19840
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19841
  %tx_timer = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 15, !dbg !19842
  %call25 = call i32 @del_timer(%struct.timer_list* %tx_timer) #11, !dbg !19843
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19844
  %irq_spinlock26 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 17, !dbg !19845
  %17 = load i64, i64* %flags, align 8, !dbg !19846
  store %struct.spinlock* %irq_spinlock26, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %17, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !19847
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !19847
  store i32 1, i32* %tmp.i, align 4, !dbg !19847
  %18 = load i32, i32* %tmp.i, align 4, !dbg !19847
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !19848
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !19848
  store i32 1, i32* %tmp8.i, align 4, !dbg !19848
  %19 = load i32, i32* %tmp8.i, align 4, !dbg !19848
  %20 = load i64, i64* %flags.addr.i, align 8, !dbg !19849
  call void @arch_local_irq_restore(i64 %20) #14, !dbg !19849
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19850, !srcloc !9373
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !19851
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !19851
  %rlock.i28 = bitcast %union.anon.1* %22 to %struct.raw_spinlock*, !dbg !19851
  %23 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19852
  call void @tty_wakeup(%struct.tty_struct* %23) #11, !dbg !19853
  br label %return, !dbg !19854

return:                                           ; preds = %do.end24, %if.then3
  ret void, !dbg !19854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_wait_until_sent(%struct.tty_struct* %tty, i32 %timeout) #1 !dbg !19855 {
entry:
  %pscr_ret__.i79 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i79, metadata !19856, metadata !DIExpression()), !dbg !19862
  %__vpp_verify.i80 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i80, metadata !19868, metadata !DIExpression()), !dbg !19870
  %pfo_val__.i81 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i81, metadata !19871, metadata !DIExpression()), !dbg !19873
  %tmp.i82 = alloca %struct.task_struct*, align 8
  %tmp1.i83 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !19856, metadata !DIExpression()), !dbg !19874
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !19868, metadata !DIExpression()), !dbg !19879
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !19871, metadata !DIExpression()), !dbg !19880
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %timeout.addr = alloca i32, align 4
  %info = alloca %struct.mgsl_struct*, align 8
  %orig_jiffies = alloca i64, align 8
  %char_time = alloca i64, align 8
  %__UNIQUE_ID___x341 = alloca i64, align 8
  %__UNIQUE_ID___y342 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !19881, metadata !DIExpression()), !dbg !19882
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !19883, metadata !DIExpression()), !dbg !19884
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !19885, metadata !DIExpression()), !dbg !19886
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19887
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !19888
  %1 = load i8*, i8** %driver_data, align 8, !dbg !19888
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !19887
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !19886
  call void @llvm.dbg.declare(metadata i64* %orig_jiffies, metadata !19889, metadata !DIExpression()), !dbg !19890
  call void @llvm.dbg.declare(metadata i64* %char_time, metadata !19891, metadata !DIExpression()), !dbg !19892
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19893
  %tobool = icmp ne %struct.mgsl_struct* %3, null, !dbg !19893
  br i1 %tobool, label %if.end, label %if.then, !dbg !19895

if.then:                                          ; preds = %entry
  br label %if.end78, !dbg !19896

if.end:                                           ; preds = %entry
  %4 = load i32, i32* @debug_level, align 4, !dbg !19897
  %cmp = icmp sge i32 %4, 3, !dbg !19899
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !19900

if.then1:                                         ; preds = %if.end
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19901
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 56, !dbg !19902
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19901
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3118, i8* %arraydecay) #12, !dbg !19903
  br label %if.end2, !dbg !19903

if.end2:                                          ; preds = %if.then1, %if.end
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19904
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !19906
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 18, !dbg !19907
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !19906
  %call4 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %6, i8* %arraydecay3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.153, i64 0, i64 0)) #11, !dbg !19908
  %tobool5 = icmp ne i32 %call4, 0, !dbg !19908
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !19909

if.then6:                                         ; preds = %if.end2
  br label %if.end78, !dbg !19910

if.end7:                                          ; preds = %if.end2
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19911
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 1, !dbg !19913
  %call8 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #11, !dbg !19914
  br i1 %call8, label %if.end10, label %if.then9, !dbg !19915

if.then9:                                         ; preds = %if.end7
  br label %exit, !dbg !19916

if.end10:                                         ; preds = %if.end7
  %9 = load volatile i64, i64* @jiffies, align 8, !dbg !19917
  store i64 %9, i64* %orig_jiffies, align 8, !dbg !19918
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19919
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 70, !dbg !19921
  %data_rate = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 9, !dbg !19922
  %11 = load i64, i64* %data_rate, align 8, !dbg !19922
  %tobool11 = icmp ne i64 %11, 0, !dbg !19919
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !19923

if.then12:                                        ; preds = %if.end10
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19924
  %timeout13 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 5, !dbg !19926
  %13 = load i32, i32* %timeout13, align 4, !dbg !19926
  %div = sdiv i32 %13, 160, !dbg !19927
  %conv = sext i32 %div to i64, !dbg !19924
  store i64 %conv, i64* %char_time, align 8, !dbg !19928
  %14 = load i64, i64* %char_time, align 8, !dbg !19929
  %tobool14 = icmp ne i64 %14, 0, !dbg !19929
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !19931

if.then15:                                        ; preds = %if.then12
  %15 = load i64, i64* %char_time, align 8, !dbg !19932
  %inc = add i64 %15, 1, !dbg !19932
  store i64 %inc, i64* %char_time, align 8, !dbg !19932
  br label %if.end16, !dbg !19933

if.end16:                                         ; preds = %if.then15, %if.then12
  br label %if.end17, !dbg !19934

if.else:                                          ; preds = %if.end10
  store i64 1, i64* %char_time, align 8, !dbg !19935
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end16
  %16 = load i32, i32* %timeout.addr, align 4, !dbg !19936
  %tobool18 = icmp ne i32 %16, 0, !dbg !19936
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !19938

if.then19:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x341, metadata !19939, metadata !DIExpression()), !dbg !19941
  %17 = load i64, i64* %char_time, align 8, !dbg !19941
  store i64 %17, i64* %__UNIQUE_ID___x341, align 8, !dbg !19941
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y342, metadata !19942, metadata !DIExpression()), !dbg !19941
  %18 = load i32, i32* %timeout.addr, align 4, !dbg !19941
  %conv20 = sext i32 %18 to i64, !dbg !19941
  store i64 %conv20, i64* %__UNIQUE_ID___y342, align 8, !dbg !19941
  %19 = load i64, i64* %__UNIQUE_ID___x341, align 8, !dbg !19941
  %20 = load i64, i64* %__UNIQUE_ID___y342, align 8, !dbg !19941
  %cmp21 = icmp ult i64 %19, %20, !dbg !19941
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !19941

cond.true:                                        ; preds = %if.then19
  %21 = load i64, i64* %__UNIQUE_ID___x341, align 8, !dbg !19941
  br label %cond.end, !dbg !19941

cond.false:                                       ; preds = %if.then19
  %22 = load i64, i64* %__UNIQUE_ID___y342, align 8, !dbg !19941
  br label %cond.end, !dbg !19941

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %21, %cond.true ], [ %22, %cond.false ], !dbg !19941
  store i64 %cond, i64* %tmp, align 8, !dbg !19941
  %23 = load i64, i64* %tmp, align 8, !dbg !19941
  store i64 %23, i64* %char_time, align 8, !dbg !19943
  br label %if.end23, !dbg !19944

if.end23:                                         ; preds = %cond.end, %if.end17
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19945
  %params24 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 70, !dbg !19946
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params24, i32 0, i32 0, !dbg !19947
  %25 = load i64, i64* %mode, align 8, !dbg !19947
  %cmp25 = icmp eq i64 %25, 2, !dbg !19948
  br i1 %cmp25, label %if.then31, label %lor.lhs.false, !dbg !19949

lor.lhs.false:                                    ; preds = %if.end23
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19950
  %params27 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %26, i32 0, i32 70, !dbg !19951
  %mode28 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params27, i32 0, i32 0, !dbg !19952
  %27 = load i64, i64* %mode28, align 8, !dbg !19952
  %cmp29 = icmp eq i64 %27, 6, !dbg !19953
  br i1 %cmp29, label %if.then31, label %if.else46, !dbg !19954

if.then31:                                        ; preds = %lor.lhs.false, %if.end23
  br label %while.cond, !dbg !19955

while.cond:                                       ; preds = %if.end45, %if.then31
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19956
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 52, !dbg !19957
  %29 = load i8, i8* %tx_active, align 4, !dbg !19957
  %tobool32 = trunc i8 %29 to i1, !dbg !19957
  br i1 %tobool32, label %while.body, label %while.end, !dbg !19955

while.body:                                       ; preds = %while.cond
  %30 = load i64, i64* %char_time, align 8, !dbg !19958
  %call33 = call i32 @jiffies_to_msecs(i64 %30) #11, !dbg !19959
  %call34 = call i64 @msleep_interruptible(i32 %call33) #11, !dbg !19960
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !19879
  %31 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !19879
  %32 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !19880, !srcloc !19961
  store i64 %32, i64* %pfo_val__.i, align 8, !dbg !19880
  %33 = load i64, i64* %pfo_val__.i, align 8, !dbg !19880
  %34 = inttoptr i64 %33 to %struct.task_struct*, !dbg !19880
  store %struct.task_struct* %34, %struct.task_struct** %tmp.i, align 8, !dbg !19880
  %35 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !19880
  store %struct.task_struct* %35, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !19874
  %36 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !19874
  store %struct.task_struct* %36, %struct.task_struct** %tmp1.i, align 8, !dbg !19874
  %37 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !19874
  %call36 = call i32 @signal_pending(%struct.task_struct* %37) #11, !dbg !19962
  %tobool37 = icmp ne i32 %call36, 0, !dbg !19962
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !19963

if.then38:                                        ; preds = %while.body
  br label %while.end, !dbg !19964

if.end39:                                         ; preds = %while.body
  %38 = load i32, i32* %timeout.addr, align 4, !dbg !19965
  %tobool40 = icmp ne i32 %38, 0, !dbg !19965
  br i1 %tobool40, label %land.lhs.true, label %if.end45, !dbg !19967

land.lhs.true:                                    ; preds = %if.end39
  %39 = load i64, i64* %orig_jiffies, align 8, !dbg !19968
  %40 = load i32, i32* %timeout.addr, align 4, !dbg !19968
  %conv41 = sext i32 %40 to i64, !dbg !19968
  %add = add i64 %39, %conv41, !dbg !19968
  %41 = load volatile i64, i64* @jiffies, align 8, !dbg !19968
  %sub = sub i64 %add, %41, !dbg !19968
  %cmp42 = icmp slt i64 %sub, 0, !dbg !19968
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !19969

if.then44:                                        ; preds = %land.lhs.true
  br label %while.end, !dbg !19970

if.end45:                                         ; preds = %land.lhs.true, %if.end39
  br label %while.cond, !dbg !19955, !llvm.loop !19971

while.end:                                        ; preds = %if.then44, %if.then38, %while.cond
  br label %if.end71, !dbg !19973

if.else46:                                        ; preds = %lor.lhs.false
  br label %while.cond47, !dbg !19974

while.cond47:                                     ; preds = %if.end69, %if.else46
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19975
  %call48 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %42, i16 zeroext 52) #11, !dbg !19976
  %conv49 = zext i16 %call48 to i32, !dbg !19976
  %and = and i32 %conv49, 4, !dbg !19977
  %tobool50 = icmp ne i32 %and, 0, !dbg !19977
  br i1 %tobool50, label %land.end, label %land.rhs, !dbg !19978

land.rhs:                                         ; preds = %while.cond47
  %43 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !19979
  %tx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %43, i32 0, i32 51, !dbg !19980
  %44 = load i8, i8* %tx_enabled, align 1, !dbg !19980
  %tobool51 = trunc i8 %44 to i1, !dbg !19980
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond47
  %45 = phi i1 [ false, %while.cond47 ], [ %tobool51, %land.rhs ], !dbg !19981
  br i1 %45, label %while.body53, label %while.end70, !dbg !19974

while.body53:                                     ; preds = %land.end
  %46 = load i64, i64* %char_time, align 8, !dbg !19982
  %call54 = call i32 @jiffies_to_msecs(i64 %46) #11, !dbg !19983
  %call55 = call i64 @msleep_interruptible(i32 %call54) #11, !dbg !19984
  store i8* null, i8** %__vpp_verify.i80, align 8, !dbg !19870
  %47 = load i8*, i8** %__vpp_verify.i80, align 8, !dbg !19870
  %48 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !19873, !srcloc !19961
  store i64 %48, i64* %pfo_val__.i81, align 8, !dbg !19873
  %49 = load i64, i64* %pfo_val__.i81, align 8, !dbg !19873
  %50 = inttoptr i64 %49 to %struct.task_struct*, !dbg !19873
  store %struct.task_struct* %50, %struct.task_struct** %tmp.i82, align 8, !dbg !19873
  %51 = load %struct.task_struct*, %struct.task_struct** %tmp.i82, align 8, !dbg !19873
  store %struct.task_struct* %51, %struct.task_struct** %pscr_ret__.i79, align 8, !dbg !19862
  %52 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i79, align 8, !dbg !19862
  store %struct.task_struct* %52, %struct.task_struct** %tmp1.i83, align 8, !dbg !19862
  %53 = load %struct.task_struct*, %struct.task_struct** %tmp1.i83, align 8, !dbg !19862
  %call57 = call i32 @signal_pending(%struct.task_struct* %53) #11, !dbg !19985
  %tobool58 = icmp ne i32 %call57, 0, !dbg !19985
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !19986

if.then59:                                        ; preds = %while.body53
  br label %while.end70, !dbg !19987

if.end60:                                         ; preds = %while.body53
  %54 = load i32, i32* %timeout.addr, align 4, !dbg !19988
  %tobool61 = icmp ne i32 %54, 0, !dbg !19988
  br i1 %tobool61, label %land.lhs.true62, label %if.end69, !dbg !19990

land.lhs.true62:                                  ; preds = %if.end60
  %55 = load i64, i64* %orig_jiffies, align 8, !dbg !19991
  %56 = load i32, i32* %timeout.addr, align 4, !dbg !19991
  %conv63 = sext i32 %56 to i64, !dbg !19991
  %add64 = add i64 %55, %conv63, !dbg !19991
  %57 = load volatile i64, i64* @jiffies, align 8, !dbg !19991
  %sub65 = sub i64 %add64, %57, !dbg !19991
  %cmp66 = icmp slt i64 %sub65, 0, !dbg !19991
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !19992

if.then68:                                        ; preds = %land.lhs.true62
  br label %while.end70, !dbg !19993

if.end69:                                         ; preds = %land.lhs.true62, %if.end60
  br label %while.cond47, !dbg !19974, !llvm.loop !19994

while.end70:                                      ; preds = %if.then68, %if.then59, %land.end
  br label %if.end71

if.end71:                                         ; preds = %while.end70, %while.end
  br label %exit, !dbg !19996

exit:                                             ; preds = %if.end71, %if.then9
  call void @llvm.dbg.label(metadata !19997), !dbg !19998
  %58 = load i32, i32* @debug_level, align 4, !dbg !19999
  %cmp72 = icmp sge i32 %58, 3, !dbg !20001
  br i1 %cmp72, label %if.then74, label %if.end78, !dbg !20002

if.then74:                                        ; preds = %exit
  %59 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20003
  %device_name75 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %59, i32 0, i32 56, !dbg !20004
  %arraydecay76 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name75, i64 0, i64 0, !dbg !20003
  %call77 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3167, i8* %arraydecay76) #12, !dbg !20005
  br label %if.end78, !dbg !20005

if.end78:                                         ; preds = %if.then, %if.then6, %if.then74, %exit
  ret void, !dbg !20006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mgsl_send_xchar(%struct.tty_struct* %tty, i8 signext %ch) #1 !dbg !20007 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !9306, metadata !DIExpression()), !dbg !20008
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !20012
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !20013
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch.addr = alloca i8, align 1
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !20020, metadata !DIExpression()), !dbg !20021
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !20022, metadata !DIExpression()), !dbg !20023
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !20024, metadata !DIExpression()), !dbg !20025
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20026
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !20027
  %1 = load i8*, i8** %driver_data, align 8, !dbg !20027
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !20026
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !20025
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20028, metadata !DIExpression()), !dbg !20029
  %3 = load i32, i32* @debug_level, align 4, !dbg !20030
  %cmp = icmp sge i32 %3, 3, !dbg !20032
  br i1 %cmp, label %if.then, label %if.end, !dbg !20033

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20034
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !20035
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20034
  %5 = load i8, i8* %ch.addr, align 1, !dbg !20036
  %conv = sext i8 %5 to i32, !dbg !20036
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2317, i8* %arraydecay, i32 %conv) #12, !dbg !20037
  br label %if.end, !dbg !20037

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20038
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20040
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 18, !dbg !20041
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !20040
  %call2 = call i32 @mgsl_paranoia_check(%struct.mgsl_struct* %6, i8* %arraydecay1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.156, i64 0, i64 0)) #11, !dbg !20042
  %tobool = icmp ne i32 %call2, 0, !dbg !20042
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !20043

if.then3:                                         ; preds = %if.end
  br label %if.end33, !dbg !20044

if.end4:                                          ; preds = %if.end
  %8 = load i8, i8* %ch.addr, align 1, !dbg !20045
  %conv5 = sext i8 %8 to i32, !dbg !20045
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20046
  %x_char = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 6, !dbg !20047
  store i32 %conv5, i32* %x_char, align 8, !dbg !20048
  %10 = load i8, i8* %ch.addr, align 1, !dbg !20049
  %tobool6 = icmp ne i8 %10, 0, !dbg !20049
  br i1 %tobool6, label %if.then7, label %if.end33, !dbg !20050

if.then7:                                         ; preds = %if.end4
  br label %do.body, !dbg !20051

do.body:                                          ; preds = %if.then7
  br label %do.body8, !dbg !20052

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20053, metadata !DIExpression()), !dbg !20055
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20056, metadata !DIExpression()), !dbg !20055
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !20055
  %conv10 = zext i1 %cmp9 to i32, !dbg !20055
  store i32 1, i32* %tmp, align 4, !dbg !20055
  %11 = load i32, i32* %tmp, align 4, !dbg !20055
  br label %do.body11, !dbg !20057

do.body11:                                        ; preds = %do.body8
  br label %do.body12, !dbg !20058

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !20059

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !20061, metadata !DIExpression()), !dbg !20064
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !20065, metadata !DIExpression()), !dbg !20064
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !20064
  %conv17 = zext i1 %cmp16 to i32, !dbg !20064
  store i32 1, i32* %tmp18, align 4, !dbg !20064
  %12 = load i32, i32* %tmp18, align 4, !dbg !20064
  %call19 = call i64 @arch_local_irq_save() #11, !dbg !20066
  store i64 %call19, i64* %flags, align 8, !dbg !20066
  br label %do.end, !dbg !20066

do.end:                                           ; preds = %do.body13
  br label %do.end20, !dbg !20059

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !20058

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20067, !srcloc !20068
  br label %do.body22, !dbg !20067

do.body22:                                        ; preds = %do.body21
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20069
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 17, !dbg !20069
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20070
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !20071
  %rlock.i = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !20071
  br label %do.end24, !dbg !20069

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !20067

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !20058

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !20057

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !20052

do.end28:                                         ; preds = %do.end27
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20072
  %tx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 51, !dbg !20074
  %17 = load i8, i8* %tx_enabled, align 1, !dbg !20074
  %tobool29 = trunc i8 %17 to i1, !dbg !20074
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !20075

if.then30:                                        ; preds = %do.end28
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20076
  call void @usc_start_transmitter(%struct.mgsl_struct* %18) #11, !dbg !20077
  br label %if.end31, !dbg !20077

if.end31:                                         ; preds = %if.then30, %do.end28
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20078
  %irq_spinlock32 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 17, !dbg !20079
  %20 = load i64, i64* %flags, align 8, !dbg !20080
  store %struct.spinlock* %irq_spinlock32, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !20081
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !20081
  store i32 1, i32* %tmp.i, align 4, !dbg !20081
  %21 = load i32, i32* %tmp.i, align 4, !dbg !20081
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !20082
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !20082
  store i32 1, i32* %tmp8.i, align 4, !dbg !20082
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !20082
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !20083
  call void @arch_local_irq_restore(i64 %23) #14, !dbg !20083
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20084, !srcloc !9373
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !20085
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !20085
  %rlock.i35 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !20085
  br label %if.end33, !dbg !20086

if.end33:                                         ; preds = %if.then3, %if.end31, %if.end4
  ret void, !dbg !20087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tiocmget(%struct.tty_struct* %tty) #1 !dbg !20088 {
entry:
  %lock.addr.i53 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i53, metadata !9306, metadata !DIExpression()), !dbg !20089
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !20091
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !20092
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %result = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !20099, metadata !DIExpression()), !dbg !20100
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !20101, metadata !DIExpression()), !dbg !20102
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20103
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !20104
  %1 = load i8*, i8** %driver_data, align 8, !dbg !20104
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !20103
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !20102
  call void @llvm.dbg.declare(metadata i32* %result, metadata !20105, metadata !DIExpression()), !dbg !20106
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20107, metadata !DIExpression()), !dbg !20108
  br label %do.body, !dbg !20109

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !20110

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20111, metadata !DIExpression()), !dbg !20113
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20114, metadata !DIExpression()), !dbg !20113
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !20113
  %conv = zext i1 %cmp to i32, !dbg !20113
  store i32 1, i32* %tmp, align 4, !dbg !20113
  %3 = load i32, i32* %tmp, align 4, !dbg !20113
  br label %do.body2, !dbg !20115

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !20116

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !20117

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !20119, metadata !DIExpression()), !dbg !20122
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !20123, metadata !DIExpression()), !dbg !20122
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !20122
  %conv8 = zext i1 %cmp7 to i32, !dbg !20122
  store i32 1, i32* %tmp9, align 4, !dbg !20122
  %4 = load i32, i32* %tmp9, align 4, !dbg !20122
  %call = call i64 @arch_local_irq_save() #11, !dbg !20124
  store i64 %call, i64* %flags, align 8, !dbg !20124
  br label %do.end, !dbg !20124

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !20117

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !20116

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20125, !srcloc !20126
  br label %do.body12, !dbg !20125

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20127
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 17, !dbg !20127
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20128
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !20129
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !20129
  br label %do.end14, !dbg !20127

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !20125

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !20116

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !20115

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20110

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20130
  call void @usc_get_serial_signals(%struct.mgsl_struct* %8) #11, !dbg !20131
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20132
  %irq_spinlock19 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 17, !dbg !20133
  %10 = load i64, i64* %flags, align 8, !dbg !20134
  store %struct.spinlock* %irq_spinlock19, %struct.spinlock** %lock.addr.i53, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !20135
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !20135
  store i32 1, i32* %tmp.i, align 4, !dbg !20135
  %11 = load i32, i32* %tmp.i, align 4, !dbg !20135
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !20136
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !20136
  store i32 1, i32* %tmp8.i, align 4, !dbg !20136
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !20136
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !20137
  call void @arch_local_irq_restore(i64 %13) #14, !dbg !20137
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20138, !srcloc !9373
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i53, align 8, !dbg !20139
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !20139
  %rlock.i54 = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !20139
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20140
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 71, !dbg !20141
  %17 = load i8, i8* %serial_signals, align 8, !dbg !20141
  %conv20 = zext i8 %17 to i32, !dbg !20140
  %and = and i32 %conv20, 32, !dbg !20142
  %tobool = icmp ne i32 %and, 0, !dbg !20143
  %18 = zext i1 %tobool to i64, !dbg !20143
  %cond = select i1 %tobool, i32 4, i32 0, !dbg !20143
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20144
  %serial_signals21 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 71, !dbg !20145
  %20 = load i8, i8* %serial_signals21, align 8, !dbg !20145
  %conv22 = zext i8 %20 to i32, !dbg !20144
  %and23 = and i32 %conv22, 128, !dbg !20146
  %tobool24 = icmp ne i32 %and23, 0, !dbg !20147
  %21 = zext i1 %tobool24 to i64, !dbg !20147
  %cond25 = select i1 %tobool24, i32 2, i32 0, !dbg !20147
  %add = add i32 %cond, %cond25, !dbg !20148
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20149
  %serial_signals26 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %22, i32 0, i32 71, !dbg !20150
  %23 = load i8, i8* %serial_signals26, align 8, !dbg !20150
  %conv27 = zext i8 %23 to i32, !dbg !20149
  %and28 = and i32 %conv27, 1, !dbg !20151
  %tobool29 = icmp ne i32 %and28, 0, !dbg !20152
  %24 = zext i1 %tobool29 to i64, !dbg !20152
  %cond30 = select i1 %tobool29, i32 64, i32 0, !dbg !20152
  %add31 = add i32 %add, %cond30, !dbg !20153
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20154
  %serial_signals32 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 71, !dbg !20155
  %26 = load i8, i8* %serial_signals32, align 8, !dbg !20155
  %conv33 = zext i8 %26 to i32, !dbg !20154
  %and34 = and i32 %conv33, 4, !dbg !20156
  %tobool35 = icmp ne i32 %and34, 0, !dbg !20157
  %27 = zext i1 %tobool35 to i64, !dbg !20157
  %cond36 = select i1 %tobool35, i32 128, i32 0, !dbg !20157
  %add37 = add i32 %add31, %cond36, !dbg !20158
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20159
  %serial_signals38 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 71, !dbg !20160
  %29 = load i8, i8* %serial_signals38, align 8, !dbg !20160
  %conv39 = zext i8 %29 to i32, !dbg !20159
  %and40 = and i32 %conv39, 64, !dbg !20161
  %tobool41 = icmp ne i32 %and40, 0, !dbg !20162
  %30 = zext i1 %tobool41 to i64, !dbg !20162
  %cond42 = select i1 %tobool41, i32 256, i32 0, !dbg !20162
  %add43 = add i32 %add37, %cond42, !dbg !20163
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20164
  %serial_signals44 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 71, !dbg !20165
  %32 = load i8, i8* %serial_signals44, align 8, !dbg !20165
  %conv45 = zext i8 %32 to i32, !dbg !20164
  %and46 = and i32 %conv45, 16, !dbg !20166
  %tobool47 = icmp ne i32 %and46, 0, !dbg !20167
  %33 = zext i1 %tobool47 to i64, !dbg !20167
  %cond48 = select i1 %tobool47, i32 32, i32 0, !dbg !20167
  %add49 = add i32 %add43, %cond48, !dbg !20168
  store i32 %add49, i32* %result, align 4, !dbg !20169
  %34 = load i32, i32* @debug_level, align 4, !dbg !20170
  %cmp50 = icmp sge i32 %34, 3, !dbg !20172
  br i1 %cmp50, label %if.then, label %if.end, !dbg !20173

if.then:                                          ; preds = %do.end18
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20174
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 56, !dbg !20175
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20174
  %36 = load i32, i32* %result, align 4, !dbg !20176
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2847, i8* %arraydecay, i32 %36) #12, !dbg !20177
  br label %if.end, !dbg !20177

if.end:                                           ; preds = %if.then, %do.end18
  %37 = load i32, i32* %result, align 4, !dbg !20178
  ret i32 %37, !dbg !20179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tiocmset(%struct.tty_struct* %tty, i32 %set, i32 %clear) #1 !dbg !20180 {
entry:
  %lock.addr.i50 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i50, metadata !9306, metadata !DIExpression()), !dbg !20181
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !20183
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !20184
  %tty.addr = alloca %struct.tty_struct*, align 8
  %set.addr = alloca i32, align 4
  %clear.addr = alloca i32, align 4
  %info = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy34 = alloca i64, align 8
  %__dummy235 = alloca i64, align 8
  %tmp38 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !20191, metadata !DIExpression()), !dbg !20192
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !20193, metadata !DIExpression()), !dbg !20194
  store i32 %clear, i32* %clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear.addr, metadata !20195, metadata !DIExpression()), !dbg !20196
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !20197, metadata !DIExpression()), !dbg !20198
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20199
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !20200
  %1 = load i8*, i8** %driver_data, align 8, !dbg !20200
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !20199
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !20198
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20201, metadata !DIExpression()), !dbg !20202
  %3 = load i32, i32* @debug_level, align 4, !dbg !20203
  %cmp = icmp sge i32 %3, 3, !dbg !20205
  br i1 %cmp, label %if.then, label %if.end, !dbg !20206

if.then:                                          ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20207
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 56, !dbg !20208
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20207
  %5 = load i32, i32* %set.addr, align 4, !dbg !20209
  %6 = load i32, i32* %clear.addr, align 4, !dbg !20210
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2861, i8* %arraydecay, i32 %5, i32 %6) #12, !dbg !20211
  br label %if.end, !dbg !20211

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %set.addr, align 4, !dbg !20212
  %and = and i32 %7, 4, !dbg !20214
  %tobool = icmp ne i32 %and, 0, !dbg !20214
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !20215

if.then1:                                         ; preds = %if.end
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20216
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 71, !dbg !20217
  %9 = load i8, i8* %serial_signals, align 8, !dbg !20218
  %conv = zext i8 %9 to i32, !dbg !20218
  %or = or i32 %conv, 32, !dbg !20218
  %conv2 = trunc i32 %or to i8, !dbg !20218
  store i8 %conv2, i8* %serial_signals, align 8, !dbg !20218
  br label %if.end3, !dbg !20216

if.end3:                                          ; preds = %if.then1, %if.end
  %10 = load i32, i32* %set.addr, align 4, !dbg !20219
  %and4 = and i32 %10, 2, !dbg !20221
  %tobool5 = icmp ne i32 %and4, 0, !dbg !20221
  br i1 %tobool5, label %if.then6, label %if.end11, !dbg !20222

if.then6:                                         ; preds = %if.end3
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20223
  %serial_signals7 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 71, !dbg !20224
  %12 = load i8, i8* %serial_signals7, align 8, !dbg !20225
  %conv8 = zext i8 %12 to i32, !dbg !20225
  %or9 = or i32 %conv8, 128, !dbg !20225
  %conv10 = trunc i32 %or9 to i8, !dbg !20225
  store i8 %conv10, i8* %serial_signals7, align 8, !dbg !20225
  br label %if.end11, !dbg !20223

if.end11:                                         ; preds = %if.then6, %if.end3
  %13 = load i32, i32* %clear.addr, align 4, !dbg !20226
  %and12 = and i32 %13, 4, !dbg !20228
  %tobool13 = icmp ne i32 %and12, 0, !dbg !20228
  br i1 %tobool13, label %if.then14, label %if.end19, !dbg !20229

if.then14:                                        ; preds = %if.end11
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20230
  %serial_signals15 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %14, i32 0, i32 71, !dbg !20231
  %15 = load i8, i8* %serial_signals15, align 8, !dbg !20232
  %conv16 = zext i8 %15 to i32, !dbg !20232
  %and17 = and i32 %conv16, -33, !dbg !20232
  %conv18 = trunc i32 %and17 to i8, !dbg !20232
  store i8 %conv18, i8* %serial_signals15, align 8, !dbg !20232
  br label %if.end19, !dbg !20230

if.end19:                                         ; preds = %if.then14, %if.end11
  %16 = load i32, i32* %clear.addr, align 4, !dbg !20233
  %and20 = and i32 %16, 2, !dbg !20235
  %tobool21 = icmp ne i32 %and20, 0, !dbg !20235
  br i1 %tobool21, label %if.then22, label %if.end27, !dbg !20236

if.then22:                                        ; preds = %if.end19
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20237
  %serial_signals23 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 71, !dbg !20238
  %18 = load i8, i8* %serial_signals23, align 8, !dbg !20239
  %conv24 = zext i8 %18 to i32, !dbg !20239
  %and25 = and i32 %conv24, -129, !dbg !20239
  %conv26 = trunc i32 %and25 to i8, !dbg !20239
  store i8 %conv26, i8* %serial_signals23, align 8, !dbg !20239
  br label %if.end27, !dbg !20237

if.end27:                                         ; preds = %if.then22, %if.end19
  br label %do.body, !dbg !20240

do.body:                                          ; preds = %if.end27
  br label %do.body28, !dbg !20241

do.body28:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20242, metadata !DIExpression()), !dbg !20244
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20245, metadata !DIExpression()), !dbg !20244
  %cmp29 = icmp eq i64* %__dummy, %__dummy2, !dbg !20244
  %conv30 = zext i1 %cmp29 to i32, !dbg !20244
  store i32 1, i32* %tmp, align 4, !dbg !20244
  %19 = load i32, i32* %tmp, align 4, !dbg !20244
  br label %do.body31, !dbg !20246

do.body31:                                        ; preds = %do.body28
  br label %do.body32, !dbg !20247

do.body32:                                        ; preds = %do.body31
  br label %do.body33, !dbg !20248

do.body33:                                        ; preds = %do.body32
  call void @llvm.dbg.declare(metadata i64* %__dummy34, metadata !20250, metadata !DIExpression()), !dbg !20253
  call void @llvm.dbg.declare(metadata i64* %__dummy235, metadata !20254, metadata !DIExpression()), !dbg !20253
  %cmp36 = icmp eq i64* %__dummy34, %__dummy235, !dbg !20253
  %conv37 = zext i1 %cmp36 to i32, !dbg !20253
  store i32 1, i32* %tmp38, align 4, !dbg !20253
  %20 = load i32, i32* %tmp38, align 4, !dbg !20253
  %call39 = call i64 @arch_local_irq_save() #11, !dbg !20255
  store i64 %call39, i64* %flags, align 8, !dbg !20255
  br label %do.end, !dbg !20255

do.end:                                           ; preds = %do.body33
  br label %do.end40, !dbg !20248

do.end40:                                         ; preds = %do.end
  br label %do.body41, !dbg !20247

do.body41:                                        ; preds = %do.end40
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20256, !srcloc !20257
  br label %do.body42, !dbg !20256

do.body42:                                        ; preds = %do.body41
  %21 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20258
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %21, i32 0, i32 17, !dbg !20258
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20259
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !20260
  %rlock.i = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !20260
  br label %do.end44, !dbg !20258

do.end44:                                         ; preds = %do.body42
  br label %do.end45, !dbg !20256

do.end45:                                         ; preds = %do.end44
  br label %do.end46, !dbg !20247

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !20246

do.end47:                                         ; preds = %do.end46
  br label %do.end48, !dbg !20241

do.end48:                                         ; preds = %do.end47
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20261
  call void @usc_set_serial_signals(%struct.mgsl_struct* %24) #11, !dbg !20262
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20263
  %irq_spinlock49 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 17, !dbg !20264
  %26 = load i64, i64* %flags, align 8, !dbg !20265
  store %struct.spinlock* %irq_spinlock49, %struct.spinlock** %lock.addr.i50, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !20266
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !20266
  store i32 1, i32* %tmp.i, align 4, !dbg !20266
  %27 = load i32, i32* %tmp.i, align 4, !dbg !20266
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !20267
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !20267
  store i32 1, i32* %tmp8.i, align 4, !dbg !20267
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !20267
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !20268
  call void @arch_local_irq_restore(i64 %29) #14, !dbg !20268
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20269, !srcloc !9373
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i50, align 8, !dbg !20270
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !20270
  %rlock.i51 = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !20270
  ret i32 0, !dbg !20271
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @msgl_get_icount(%struct.tty_struct* %tty, %struct.serial_icounter_struct* %icount) #1 !dbg !20272 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !9306, metadata !DIExpression()), !dbg !20273
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !20275
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !20276
  %tty.addr = alloca %struct.tty_struct*, align 8
  %icount.addr = alloca %struct.serial_icounter_struct*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  %cnow = alloca %struct.mgsl_icount, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !20283, metadata !DIExpression()), !dbg !20284
  store %struct.serial_icounter_struct* %icount, %struct.serial_icounter_struct** %icount.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_icounter_struct** %icount.addr, metadata !20285, metadata !DIExpression()), !dbg !20286
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !20287, metadata !DIExpression()), !dbg !20288
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20289
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !20290
  %1 = load i8*, i8** %driver_data, align 8, !dbg !20290
  %2 = bitcast i8* %1 to %struct.mgsl_struct*, !dbg !20289
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !20288
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount* %cnow, metadata !20291, metadata !DIExpression()), !dbg !20292
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20293, metadata !DIExpression()), !dbg !20294
  br label %do.body, !dbg !20295

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !20296

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20297, metadata !DIExpression()), !dbg !20299
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20300, metadata !DIExpression()), !dbg !20299
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !20299
  %conv = zext i1 %cmp to i32, !dbg !20299
  store i32 1, i32* %tmp, align 4, !dbg !20299
  %3 = load i32, i32* %tmp, align 4, !dbg !20299
  br label %do.body2, !dbg !20301

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !20302

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !20303

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !20305, metadata !DIExpression()), !dbg !20308
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !20309, metadata !DIExpression()), !dbg !20308
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !20308
  %conv8 = zext i1 %cmp7 to i32, !dbg !20308
  store i32 1, i32* %tmp9, align 4, !dbg !20308
  %4 = load i32, i32* %tmp9, align 4, !dbg !20308
  %call = call i64 @arch_local_irq_save() #11, !dbg !20310
  store i64 %call, i64* %flags, align 8, !dbg !20310
  br label %do.end, !dbg !20310

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !20303

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !20302

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20311, !srcloc !20312
  br label %do.body12, !dbg !20311

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20313
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 17, !dbg !20313
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20314
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !20315
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !20315
  br label %do.end14, !dbg !20313

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !20311

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !20302

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !20301

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20296

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20316
  %icount19 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 4, !dbg !20317
  %9 = bitcast %struct.mgsl_icount* %cnow to i8*, !dbg !20317
  %10 = bitcast %struct.mgsl_icount* %icount19 to i8*, !dbg !20317
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %10, i64 92, i1 false), !dbg !20317
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20318
  %irq_spinlock20 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 17, !dbg !20319
  %12 = load i64, i64* %flags, align 8, !dbg !20320
  store %struct.spinlock* %irq_spinlock20, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !20321
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !20321
  store i32 1, i32* %tmp.i, align 4, !dbg !20321
  %13 = load i32, i32* %tmp.i, align 4, !dbg !20321
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !20322
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !20322
  store i32 1, i32* %tmp8.i, align 4, !dbg !20322
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !20322
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !20323
  call void @arch_local_irq_restore(i64 %15) #14, !dbg !20323
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20324, !srcloc !9373
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !20325
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !20325
  %rlock.i33 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !20325
  %cts = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 0, !dbg !20326
  %18 = load i32, i32* %cts, align 4, !dbg !20326
  %19 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20327
  %cts21 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %19, i32 0, i32 0, !dbg !20328
  store i32 %18, i32* %cts21, align 4, !dbg !20329
  %dsr = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 1, !dbg !20330
  %20 = load i32, i32* %dsr, align 4, !dbg !20330
  %21 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20331
  %dsr22 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %21, i32 0, i32 1, !dbg !20332
  store i32 %20, i32* %dsr22, align 4, !dbg !20333
  %rng = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 2, !dbg !20334
  %22 = load i32, i32* %rng, align 4, !dbg !20334
  %23 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20335
  %rng23 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %23, i32 0, i32 2, !dbg !20336
  store i32 %22, i32* %rng23, align 4, !dbg !20337
  %dcd = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 3, !dbg !20338
  %24 = load i32, i32* %dcd, align 4, !dbg !20338
  %25 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20339
  %dcd24 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %25, i32 0, i32 3, !dbg !20340
  store i32 %24, i32* %dcd24, align 4, !dbg !20341
  %rx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 5, !dbg !20342
  %26 = load i32, i32* %rx, align 4, !dbg !20342
  %27 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20343
  %rx25 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %27, i32 0, i32 4, !dbg !20344
  store i32 %26, i32* %rx25, align 4, !dbg !20345
  %tx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 4, !dbg !20346
  %28 = load i32, i32* %tx, align 4, !dbg !20346
  %29 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20347
  %tx26 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %29, i32 0, i32 5, !dbg !20348
  store i32 %28, i32* %tx26, align 4, !dbg !20349
  %frame = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 6, !dbg !20350
  %30 = load i32, i32* %frame, align 4, !dbg !20350
  %31 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20351
  %frame27 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %31, i32 0, i32 6, !dbg !20352
  store i32 %30, i32* %frame27, align 4, !dbg !20353
  %overrun = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 8, !dbg !20354
  %32 = load i32, i32* %overrun, align 4, !dbg !20354
  %33 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20355
  %overrun28 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %33, i32 0, i32 7, !dbg !20356
  store i32 %32, i32* %overrun28, align 4, !dbg !20357
  %parity = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 7, !dbg !20358
  %34 = load i32, i32* %parity, align 4, !dbg !20358
  %35 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20359
  %parity29 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %35, i32 0, i32 8, !dbg !20360
  store i32 %34, i32* %parity29, align 4, !dbg !20361
  %brk = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 9, !dbg !20362
  %36 = load i32, i32* %brk, align 4, !dbg !20362
  %37 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20363
  %brk30 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %37, i32 0, i32 9, !dbg !20364
  store i32 %36, i32* %brk30, align 4, !dbg !20365
  %buf_overrun = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 10, !dbg !20366
  %38 = load i32, i32* %buf_overrun, align 4, !dbg !20366
  %39 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !20367
  %buf_overrun31 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %39, i32 0, i32 10, !dbg !20368
  store i32 %38, i32* %buf_overrun31, align 4, !dbg !20369
  ret i32 0, !dbg !20370
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_proc_show(%struct.seq_file* %m, i8* %v) #1 !dbg !20371 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %info = alloca %struct.mgsl_struct*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !20372, metadata !DIExpression()), !dbg !20373
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !20374, metadata !DIExpression()), !dbg !20375
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info, metadata !20376, metadata !DIExpression()), !dbg !20377
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !20378
  %1 = load i8*, i8** @driver_version, align 8, !dbg !20379
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.159, i64 0, i64 0), i8* %1) #11, !dbg !20380
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** @mgsl_device_list, align 8, !dbg !20381
  store %struct.mgsl_struct* %2, %struct.mgsl_struct** %info, align 8, !dbg !20382
  br label %while.cond, !dbg !20383

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20384
  %tobool = icmp ne %struct.mgsl_struct* %3, null, !dbg !20383
  br i1 %tobool, label %while.body, label %while.end, !dbg !20383

while.body:                                       ; preds = %while.cond
  %4 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !20385
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20387
  call void @line_info(%struct.seq_file* %4, %struct.mgsl_struct* %5) #11, !dbg !20388
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info, align 8, !dbg !20389
  %next_device = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 16, !dbg !20390
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %next_device, align 8, !dbg !20390
  store %struct.mgsl_struct* %7, %struct.mgsl_struct** %info, align 8, !dbg !20391
  br label %while.cond, !dbg !20383, !llvm.loop !20392

while.end:                                        ; preds = %while.cond
  ret i32 0, !dbg !20394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_paranoia_check(%struct.mgsl_struct* %info, i8* %name, i8* %routine) #1 !dbg !20395 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %name.addr = alloca i8*, align 8
  %routine.addr = alloca i8*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !20398, metadata !DIExpression()), !dbg !20399
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20400, metadata !DIExpression()), !dbg !20401
  store i8* %routine, i8** %routine.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %routine.addr, metadata !20402, metadata !DIExpression()), !dbg !20403
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20404
  %tobool = icmp ne %struct.mgsl_struct* %0, null, !dbg !20404
  br i1 %tobool, label %if.end, label %if.then, !dbg !20406

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !20407
  br label %return, !dbg !20407

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20408
  br label %return, !dbg !20408

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !20409
  ret i32 %1, !dbg !20409
}

; Function Attrs: noredzone
declare dso_local i32 @tty_port_install(%struct.tty_port*, %struct.tty_driver*, %struct.tty_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @block_til_ready(%struct.tty_struct* %tty, %struct.file* %filp, %struct.mgsl_struct* %info) #1 !dbg !20410 {
entry:
  %pscr_ret__.i131 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i131, metadata !19856, metadata !DIExpression()), !dbg !20413
  %__vpp_verify.i132 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i132, metadata !19868, metadata !DIExpression()), !dbg !20418
  %pfo_val__.i133 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i133, metadata !19871, metadata !DIExpression()), !dbg !20419
  %tmp.i134 = alloca %struct.task_struct*, align 8
  %tmp1.i135 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i126 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i126, metadata !19856, metadata !DIExpression()), !dbg !20420
  %__vpp_verify.i127 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i127, metadata !19868, metadata !DIExpression()), !dbg !20424
  %pfo_val__.i128 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i128, metadata !19871, metadata !DIExpression()), !dbg !20425
  %tmp.i129 = alloca %struct.task_struct*, align 8
  %tmp1.i130 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i121 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i121, metadata !19856, metadata !DIExpression()), !dbg !20426
  %__vpp_verify.i122 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i122, metadata !19868, metadata !DIExpression()), !dbg !20431
  %pfo_val__.i123 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i123, metadata !19871, metadata !DIExpression()), !dbg !20432
  %tmp.i124 = alloca %struct.task_struct*, align 8
  %tmp1.i125 = alloca %struct.task_struct*, align 8
  %lock.addr.i118 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i118, metadata !9306, metadata !DIExpression()), !dbg !20433
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !20435
  %tmp.i119 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !20436
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !19856, metadata !DIExpression()), !dbg !20443
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !19868, metadata !DIExpression()), !dbg !20445
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !19871, metadata !DIExpression()), !dbg !20446
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %wait = alloca %struct.wait_queue_entry, align 8
  %retval2 = alloca i32, align 4
  %do_clocal = alloca i8, align 1
  %flags3 = alloca i64, align 8
  %dcd = alloca i32, align 4
  %port = alloca %struct.tty_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy24 = alloca i64, align 8
  %__dummy225 = alloca i64, align 8
  %tmp28 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !20447, metadata !DIExpression()), !dbg !20448
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !20449, metadata !DIExpression()), !dbg !20450
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !20451, metadata !DIExpression()), !dbg !20452
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !20453, metadata !DIExpression()), !dbg !20465
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !20465
  store i32 0, i32* %flags, align 8, !dbg !20465
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !20465
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !20445
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !20445
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !20446, !srcloc !19961
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !20446
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !20446
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !20446
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !20446
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !20446
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20443
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20443
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !20443
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !20443
  %7 = bitcast %struct.task_struct* %6 to i8*, !dbg !20465
  store i8* %7, i8** %private, align 8, !dbg !20465
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !20465
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !20465
  %entry1 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !20465
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 0, !dbg !20465
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !20465
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 1, !dbg !20465
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !20465
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !20466, metadata !DIExpression()), !dbg !20467
  call void @llvm.dbg.declare(metadata i8* %do_clocal, metadata !20468, metadata !DIExpression()), !dbg !20469
  store i8 0, i8* %do_clocal, align 1, !dbg !20469
  call void @llvm.dbg.declare(metadata i64* %flags3, metadata !20470, metadata !DIExpression()), !dbg !20471
  call void @llvm.dbg.declare(metadata i32* %dcd, metadata !20472, metadata !DIExpression()), !dbg !20473
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !20474, metadata !DIExpression()), !dbg !20475
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20476
  %port4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 1, !dbg !20477
  store %struct.tty_port* %port4, %struct.tty_port** %port, align 8, !dbg !20475
  %9 = load i32, i32* @debug_level, align 4, !dbg !20478
  %cmp = icmp sge i32 %9, 3, !dbg !20480
  br i1 %cmp, label %if.then, label %if.end, !dbg !20481

if.then:                                          ; preds = %entry
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20482
  %driver = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %10, i32 0, i32 3, !dbg !20483
  %11 = load %struct.tty_driver*, %struct.tty_driver** %driver, align 8, !dbg !20483
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %11, i32 0, i32 5, !dbg !20484
  %12 = load i8*, i8** %name, align 8, !dbg !20484
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3258, i8* %12) #12, !dbg !20485
  br label %if.end, !dbg !20485

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !20486
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %13, i32 0, i32 7, !dbg !20488
  %14 = load i32, i32* %f_flags, align 8, !dbg !20488
  %and = and i32 %14, 2048, !dbg !20489
  %tobool = icmp ne i32 %and, 0, !dbg !20489
  br i1 %tobool, label %if.then7, label %lor.lhs.false, !dbg !20490

lor.lhs.false:                                    ; preds = %if.end
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20491
  %call6 = call zeroext i1 @tty_io_error(%struct.tty_struct* %15) #11, !dbg !20492
  br i1 %call6, label %if.then7, label %if.end8, !dbg !20493

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  %16 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20494
  call void @tty_port_set_active(%struct.tty_port* %16, i1 zeroext true) #11, !dbg !20496
  store i32 0, i32* %retval, align 4, !dbg !20497
  br label %return, !dbg !20497

if.end8:                                          ; preds = %lor.lhs.false
  %17 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20498
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %17, i32 0, i32 15, !dbg !20498
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !20498
  %18 = load i32, i32* %c_cflag, align 8, !dbg !20498
  %and9 = and i32 %18, 2048, !dbg !20498
  %tobool10 = icmp ne i32 %and9, 0, !dbg !20498
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !20500

if.then11:                                        ; preds = %if.end8
  store i8 1, i8* %do_clocal, align 1, !dbg !20501
  br label %if.end12, !dbg !20502

if.end12:                                         ; preds = %if.then11, %if.end8
  store i32 0, i32* %retval2, align 4, !dbg !20503
  %19 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20504
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %19, i32 0, i32 8, !dbg !20505
  call void @add_wait_queue(%struct.wait_queue_head* %open_wait, %struct.wait_queue_entry* %wait) #11, !dbg !20506
  %20 = load i32, i32* @debug_level, align 4, !dbg !20507
  %cmp13 = icmp sge i32 %20, 3, !dbg !20509
  br i1 %cmp13, label %if.then14, label %if.end18, !dbg !20510

if.then14:                                        ; preds = %if.end12
  %21 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20511
  %driver15 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %21, i32 0, i32 3, !dbg !20512
  %22 = load %struct.tty_driver*, %struct.tty_driver** %driver15, align 8, !dbg !20512
  %name16 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %22, i32 0, i32 5, !dbg !20513
  %23 = load i8*, i8** %name16, align 8, !dbg !20513
  %24 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20514
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %24, i32 0, i32 7, !dbg !20515
  %25 = load i32, i32* %count, align 4, !dbg !20515
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3281, i8* %23, i32 %25) #12, !dbg !20516
  br label %if.end18, !dbg !20516

if.end18:                                         ; preds = %if.then14, %if.end12
  br label %do.body, !dbg !20517

do.body:                                          ; preds = %if.end18
  br label %do.body19, !dbg !20518

do.body19:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20519, metadata !DIExpression()), !dbg !20521
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20522, metadata !DIExpression()), !dbg !20521
  %cmp20 = icmp eq i64* %__dummy, %__dummy2, !dbg !20521
  %conv = zext i1 %cmp20 to i32, !dbg !20521
  store i32 1, i32* %tmp, align 4, !dbg !20521
  %26 = load i32, i32* %tmp, align 4, !dbg !20521
  br label %do.body21, !dbg !20523

do.body21:                                        ; preds = %do.body19
  br label %do.body22, !dbg !20524

do.body22:                                        ; preds = %do.body21
  br label %do.body23, !dbg !20525

do.body23:                                        ; preds = %do.body22
  call void @llvm.dbg.declare(metadata i64* %__dummy24, metadata !20527, metadata !DIExpression()), !dbg !20530
  call void @llvm.dbg.declare(metadata i64* %__dummy225, metadata !20531, metadata !DIExpression()), !dbg !20530
  %cmp26 = icmp eq i64* %__dummy24, %__dummy225, !dbg !20530
  %conv27 = zext i1 %cmp26 to i32, !dbg !20530
  store i32 1, i32* %tmp28, align 4, !dbg !20530
  %27 = load i32, i32* %tmp28, align 4, !dbg !20530
  %call29 = call i64 @arch_local_irq_save() #11, !dbg !20532
  store i64 %call29, i64* %flags3, align 8, !dbg !20532
  br label %do.end, !dbg !20532

do.end:                                           ; preds = %do.body23
  br label %do.end30, !dbg !20525

do.end30:                                         ; preds = %do.end
  br label %do.body31, !dbg !20524

do.body31:                                        ; preds = %do.end30
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20533, !srcloc !20534
  br label %do.body32, !dbg !20533

do.body32:                                        ; preds = %do.body31
  %28 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20535
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %28, i32 0, i32 17, !dbg !20535
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20536
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !20537
  %rlock.i = bitcast %union.anon.1* %30 to %struct.raw_spinlock*, !dbg !20537
  br label %do.end34, !dbg !20535

do.end34:                                         ; preds = %do.body32
  br label %do.end35, !dbg !20533

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !20524

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !20523

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !20518

do.end38:                                         ; preds = %do.end37
  %31 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20538
  %count39 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %31, i32 0, i32 7, !dbg !20539
  %32 = load i32, i32* %count39, align 4, !dbg !20540
  %dec = add i32 %32, -1, !dbg !20540
  store i32 %dec, i32* %count39, align 4, !dbg !20540
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20541
  %irq_spinlock40 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %33, i32 0, i32 17, !dbg !20542
  %34 = load i64, i64* %flags3, align 8, !dbg !20543
  store %struct.spinlock* %irq_spinlock40, %struct.spinlock** %lock.addr.i118, align 8
  store i64 %34, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !20544
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !20544
  store i32 1, i32* %tmp.i119, align 4, !dbg !20544
  %35 = load i32, i32* %tmp.i119, align 4, !dbg !20544
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !20545
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !20545
  store i32 1, i32* %tmp8.i, align 4, !dbg !20545
  %36 = load i32, i32* %tmp8.i, align 4, !dbg !20545
  %37 = load i64, i64* %flags.addr.i, align 8, !dbg !20546
  call void @arch_local_irq_restore(i64 %37) #14, !dbg !20546
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20547, !srcloc !9373
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i118, align 8, !dbg !20548
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !20548
  %rlock.i120 = bitcast %union.anon.1* %39 to %struct.raw_spinlock*, !dbg !20548
  %40 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20549
  %blocked_open = getelementptr inbounds %struct.tty_port, %struct.tty_port* %40, i32 0, i32 6, !dbg !20550
  %41 = load i32, i32* %blocked_open, align 8, !dbg !20551
  %inc = add i32 %41, 1, !dbg !20551
  store i32 %inc, i32* %blocked_open, align 8, !dbg !20551
  br label %while.body, !dbg !20552

while.body:                                       ; preds = %do.end38, %if.end87
  %42 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20553
  %termios41 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %42, i32 0, i32 15, !dbg !20553
  %c_cflag42 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios41, i32 0, i32 2, !dbg !20553
  %43 = load i32, i32* %c_cflag42, align 8, !dbg !20553
  %and43 = and i32 %43, 4111, !dbg !20553
  %tobool44 = icmp ne i32 %and43, 0, !dbg !20553
  br i1 %tobool44, label %land.lhs.true, label %if.end48, !dbg !20555

land.lhs.true:                                    ; preds = %while.body
  %44 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20556
  %call45 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %44) #11, !dbg !20557
  br i1 %call45, label %if.then47, label %if.end48, !dbg !20558

if.then47:                                        ; preds = %land.lhs.true
  %45 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20559
  call void @tty_port_raise_dtr_rts(%struct.tty_port* %45) #11, !dbg !20560
  br label %if.end48, !dbg !20560

if.end48:                                         ; preds = %if.then47, %land.lhs.true, %while.body
  br label %do.body49, !dbg !20561

do.body49:                                        ; preds = %if.end48
  br label %do.body50, !dbg !20562

do.body50:                                        ; preds = %do.body49
  br label %do.body51, !dbg !20563

do.body51:                                        ; preds = %do.body50
  br label %do.end52, !dbg !20564

do.end52:                                         ; preds = %do.body51
  br label %do.body53, !dbg !20563

do.body53:                                        ; preds = %do.end52
  store i8* null, i8** %__vpp_verify.i122, align 8, !dbg !20431
  %46 = load i8*, i8** %__vpp_verify.i122, align 8, !dbg !20431
  %47 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !20432, !srcloc !19961
  store i64 %47, i64* %pfo_val__.i123, align 8, !dbg !20432
  %48 = load i64, i64* %pfo_val__.i123, align 8, !dbg !20432
  %49 = inttoptr i64 %48 to %struct.task_struct*, !dbg !20432
  store %struct.task_struct* %49, %struct.task_struct** %tmp.i124, align 8, !dbg !20432
  %50 = load %struct.task_struct*, %struct.task_struct** %tmp.i124, align 8, !dbg !20432
  store %struct.task_struct* %50, %struct.task_struct** %pscr_ret__.i121, align 8, !dbg !20426
  %51 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i121, align 8, !dbg !20426
  store %struct.task_struct* %51, %struct.task_struct** %tmp1.i125, align 8, !dbg !20426
  %52 = load %struct.task_struct*, %struct.task_struct** %tmp1.i125, align 8, !dbg !20426
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %52, i32 0, i32 1, !dbg !20566
  store volatile i64 1, i64* %state, align 16, !dbg !20566
  br label %do.end55, !dbg !20566

do.end55:                                         ; preds = %do.body53
  br label %do.end56, !dbg !20563

do.end56:                                         ; preds = %do.end55
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20562, !srcloc !20567
  br label %do.end57, !dbg !20562

do.end57:                                         ; preds = %do.end56
  %53 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !20568
  %call58 = call i32 @tty_hung_up_p(%struct.file* %53) #11, !dbg !20570
  %tobool59 = icmp ne i32 %call58, 0, !dbg !20570
  br i1 %tobool59, label %if.then62, label %lor.lhs.false60, !dbg !20571

lor.lhs.false60:                                  ; preds = %do.end57
  %54 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20572
  %call61 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %54) #11, !dbg !20573
  br i1 %call61, label %if.end66, label %if.then62, !dbg !20574

if.then62:                                        ; preds = %lor.lhs.false60, %do.end57
  %55 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20575
  %flags63 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %55, i32 0, i32 10, !dbg !20577
  %56 = load i64, i64* %flags63, align 8, !dbg !20577
  %and64 = and i64 %56, 1, !dbg !20578
  %tobool65 = icmp ne i64 %and64, 0, !dbg !20579
  %57 = zext i1 %tobool65 to i64, !dbg !20579
  %cond = select i1 %tobool65, i32 -11, i32 -512, !dbg !20579
  store i32 %cond, i32* %retval2, align 4, !dbg !20580
  br label %while.end, !dbg !20581

if.end66:                                         ; preds = %lor.lhs.false60
  %58 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20582
  %port67 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %58, i32 0, i32 1, !dbg !20583
  %call68 = call i32 @tty_port_carrier_raised(%struct.tty_port* %port67) #11, !dbg !20584
  store i32 %call68, i32* %dcd, align 4, !dbg !20585
  %59 = load i8, i8* %do_clocal, align 1, !dbg !20586
  %tobool69 = trunc i8 %59 to i1, !dbg !20586
  br i1 %tobool69, label %if.then73, label %lor.lhs.false71, !dbg !20588

lor.lhs.false71:                                  ; preds = %if.end66
  %60 = load i32, i32* %dcd, align 4, !dbg !20589
  %tobool72 = icmp ne i32 %60, 0, !dbg !20589
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !20590

if.then73:                                        ; preds = %lor.lhs.false71, %if.end66
  br label %while.end, !dbg !20591

if.end74:                                         ; preds = %lor.lhs.false71
  store i8* null, i8** %__vpp_verify.i127, align 8, !dbg !20424
  %61 = load i8*, i8** %__vpp_verify.i127, align 8, !dbg !20424
  %62 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !20425, !srcloc !19961
  store i64 %62, i64* %pfo_val__.i128, align 8, !dbg !20425
  %63 = load i64, i64* %pfo_val__.i128, align 8, !dbg !20425
  %64 = inttoptr i64 %63 to %struct.task_struct*, !dbg !20425
  store %struct.task_struct* %64, %struct.task_struct** %tmp.i129, align 8, !dbg !20425
  %65 = load %struct.task_struct*, %struct.task_struct** %tmp.i129, align 8, !dbg !20425
  store %struct.task_struct* %65, %struct.task_struct** %pscr_ret__.i126, align 8, !dbg !20420
  %66 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i126, align 8, !dbg !20420
  store %struct.task_struct* %66, %struct.task_struct** %tmp1.i130, align 8, !dbg !20420
  %67 = load %struct.task_struct*, %struct.task_struct** %tmp1.i130, align 8, !dbg !20420
  %call76 = call i32 @signal_pending(%struct.task_struct* %67) #11, !dbg !20592
  %tobool77 = icmp ne i32 %call76, 0, !dbg !20592
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !20593

if.then78:                                        ; preds = %if.end74
  store i32 -512, i32* %retval2, align 4, !dbg !20594
  br label %while.end, !dbg !20596

if.end79:                                         ; preds = %if.end74
  %68 = load i32, i32* @debug_level, align 4, !dbg !20597
  %cmp80 = icmp sge i32 %68, 3, !dbg !20599
  br i1 %cmp80, label %if.then82, label %if.end87, !dbg !20600

if.then82:                                        ; preds = %if.end79
  %69 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20601
  %driver83 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %69, i32 0, i32 3, !dbg !20602
  %70 = load %struct.tty_driver*, %struct.tty_driver** %driver83, align 8, !dbg !20602
  %name84 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %70, i32 0, i32 5, !dbg !20603
  %71 = load i8*, i8** %name84, align 8, !dbg !20603
  %72 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20604
  %count85 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %72, i32 0, i32 7, !dbg !20605
  %73 = load i32, i32* %count85, align 4, !dbg !20605
  %call86 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3311, i8* %71, i32 %73) #12, !dbg !20606
  br label %if.end87, !dbg !20606

if.end87:                                         ; preds = %if.then82, %if.end79
  %74 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20607
  call void @tty_unlock(%struct.tty_struct* %74) #11, !dbg !20608
  call void @schedule() #11, !dbg !20609
  %75 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20610
  call void @tty_lock(%struct.tty_struct* %75) #11, !dbg !20611
  br label %while.body, !dbg !20552, !llvm.loop !20612

while.end:                                        ; preds = %if.then78, %if.then73, %if.then62
  br label %do.body88, !dbg !20614

do.body88:                                        ; preds = %while.end
  br label %do.body89, !dbg !20615

do.body89:                                        ; preds = %do.body88
  br label %do.body90, !dbg !20616

do.body90:                                        ; preds = %do.body89
  br label %do.end91, !dbg !20617

do.end91:                                         ; preds = %do.body90
  br label %do.body92, !dbg !20616

do.body92:                                        ; preds = %do.end91
  store i8* null, i8** %__vpp_verify.i132, align 8, !dbg !20418
  %76 = load i8*, i8** %__vpp_verify.i132, align 8, !dbg !20418
  %77 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !20419, !srcloc !19961
  store i64 %77, i64* %pfo_val__.i133, align 8, !dbg !20419
  %78 = load i64, i64* %pfo_val__.i133, align 8, !dbg !20419
  %79 = inttoptr i64 %78 to %struct.task_struct*, !dbg !20419
  store %struct.task_struct* %79, %struct.task_struct** %tmp.i134, align 8, !dbg !20419
  %80 = load %struct.task_struct*, %struct.task_struct** %tmp.i134, align 8, !dbg !20419
  store %struct.task_struct* %80, %struct.task_struct** %pscr_ret__.i131, align 8, !dbg !20413
  %81 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i131, align 8, !dbg !20413
  store %struct.task_struct* %81, %struct.task_struct** %tmp1.i135, align 8, !dbg !20413
  %82 = load %struct.task_struct*, %struct.task_struct** %tmp1.i135, align 8, !dbg !20413
  %state94 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %82, i32 0, i32 1, !dbg !20619
  store volatile i64 0, i64* %state94, align 16, !dbg !20619
  br label %do.end95, !dbg !20619

do.end95:                                         ; preds = %do.body92
  br label %do.end96, !dbg !20616

do.end96:                                         ; preds = %do.end95
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20615, !srcloc !20620
  br label %do.end97, !dbg !20615

do.end97:                                         ; preds = %do.end96
  %83 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20621
  %open_wait98 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %83, i32 0, i32 8, !dbg !20622
  call void @remove_wait_queue(%struct.wait_queue_head* %open_wait98, %struct.wait_queue_entry* %wait) #11, !dbg !20623
  %84 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !20624
  %call99 = call i32 @tty_hung_up_p(%struct.file* %84) #11, !dbg !20626
  %tobool100 = icmp ne i32 %call99, 0, !dbg !20626
  br i1 %tobool100, label %if.end104, label %if.then101, !dbg !20627

if.then101:                                       ; preds = %do.end97
  %85 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20628
  %count102 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %85, i32 0, i32 7, !dbg !20629
  %86 = load i32, i32* %count102, align 4, !dbg !20630
  %inc103 = add i32 %86, 1, !dbg !20630
  store i32 %inc103, i32* %count102, align 4, !dbg !20630
  br label %if.end104, !dbg !20628

if.end104:                                        ; preds = %if.then101, %do.end97
  %87 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20631
  %blocked_open105 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %87, i32 0, i32 6, !dbg !20632
  %88 = load i32, i32* %blocked_open105, align 8, !dbg !20633
  %dec106 = add i32 %88, -1, !dbg !20633
  store i32 %dec106, i32* %blocked_open105, align 8, !dbg !20633
  %89 = load i32, i32* @debug_level, align 4, !dbg !20634
  %cmp107 = icmp sge i32 %89, 3, !dbg !20636
  br i1 %cmp107, label %if.then109, label %if.end114, !dbg !20637

if.then109:                                       ; preds = %if.end104
  %90 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20638
  %driver110 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %90, i32 0, i32 3, !dbg !20639
  %91 = load %struct.tty_driver*, %struct.tty_driver** %driver110, align 8, !dbg !20639
  %name111 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %91, i32 0, i32 5, !dbg !20640
  %92 = load i8*, i8** %name111, align 8, !dbg !20640
  %93 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20641
  %count112 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %93, i32 0, i32 7, !dbg !20642
  %94 = load i32, i32* %count112, align 4, !dbg !20642
  %call113 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 3328, i8* %92, i32 %94) #12, !dbg !20643
  br label %if.end114, !dbg !20643

if.end114:                                        ; preds = %if.then109, %if.end104
  %95 = load i32, i32* %retval2, align 4, !dbg !20644
  %tobool115 = icmp ne i32 %95, 0, !dbg !20644
  br i1 %tobool115, label %if.end117, label %if.then116, !dbg !20646

if.then116:                                       ; preds = %if.end114
  %96 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !20647
  call void @tty_port_set_active(%struct.tty_port* %96, i1 zeroext true) #11, !dbg !20648
  br label %if.end117, !dbg !20648

if.end117:                                        ; preds = %if.then116, %if.end114
  %97 = load i32, i32* %retval2, align 4, !dbg !20649
  store i32 %97, i32* %retval, align 4, !dbg !20650
  br label %return, !dbg !20650

return:                                           ; preds = %if.end117, %if.then7
  %98 = load i32, i32* %retval, align 4, !dbg !20651
  ret i32 %98, !dbg !20651
}

; Function Attrs: noredzone
declare dso_local i32 @default_wake_function(%struct.wait_queue_entry*, i32, i32, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_io_error(%struct.tty_struct* %tty) #1 !dbg !20652 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !20655, metadata !DIExpression()), !dbg !20656
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20657
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 21, !dbg !20658
  %call = call zeroext i1 @test_bit(i64 1, i64* %flags) #11, !dbg !20659
  ret i1 %call, !dbg !20660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_active(%struct.tty_port* %port, i1 zeroext %val) #1 !dbg !20661 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !20662, metadata !DIExpression()), !dbg !20663
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !20664, metadata !DIExpression()), !dbg !20665
  %0 = load i8, i8* %val.addr, align 1, !dbg !20666
  %tobool = trunc i8 %0 to i1, !dbg !20666
  br i1 %tobool, label %if.then, label %if.else, !dbg !20668

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !20669
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !20670
  call void @set_bit(i64 2, i64* %iflags) #11, !dbg !20671
  br label %if.end, !dbg !20671

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !20672
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !20673
  call void @clear_bit(i64 2, i64* %iflags1) #11, !dbg !20674
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !20675
}

; Function Attrs: noredzone
declare dso_local void @add_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #4

; Function Attrs: noredzone
declare dso_local void @tty_port_raise_dtr_rts(%struct.tty_port*) #4

; Function Attrs: noredzone
declare dso_local i32 @tty_hung_up_p(%struct.file*) #4

; Function Attrs: noredzone
declare dso_local i32 @tty_port_carrier_raised(%struct.tty_port*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @signal_pending(%struct.task_struct* %p) #1 !dbg !20676 {
entry:
  %p.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %p, %struct.task_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %p.addr, metadata !20679, metadata !DIExpression()), !dbg !20680
  %0 = load %struct.task_struct*, %struct.task_struct** %p.addr, align 8, !dbg !20681
  %call = call i32 @test_tsk_thread_flag(%struct.task_struct* %0, i32 2) #11, !dbg !20681
  %tobool = icmp ne i32 %call, 0, !dbg !20681
  %lnot = xor i1 %tobool, true, !dbg !20681
  %lnot1 = xor i1 %lnot, true, !dbg !20681
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !20681
  %conv = sext i32 %lnot.ext to i64, !dbg !20681
  %conv2 = trunc i64 %conv to i32, !dbg !20681
  ret i32 %conv2, !dbg !20682
}

; Function Attrs: noredzone
declare dso_local void @tty_unlock(%struct.tty_struct*) #4

; Function Attrs: noredzone
declare dso_local void @schedule() #4

; Function Attrs: noredzone
declare dso_local void @tty_lock(%struct.tty_struct*) #4

; Function Attrs: noredzone
declare dso_local void @remove_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_tsk_thread_flag(%struct.task_struct* %tsk, i32 %flag) #1 !dbg !20683 {
entry:
  %tsk.addr = alloca %struct.task_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.task_struct* %tsk, %struct.task_struct** %tsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %tsk.addr, metadata !20686, metadata !DIExpression()), !dbg !20687
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !20688, metadata !DIExpression()), !dbg !20689
  %0 = load %struct.task_struct*, %struct.task_struct** %tsk.addr, align 8, !dbg !20690
  %call = call %struct.thread_info* @task_thread_info(%struct.task_struct* %0) #11, !dbg !20691
  %1 = load i32, i32* %flag.addr, align 4, !dbg !20692
  %call1 = call i32 @test_ti_thread_flag(%struct.thread_info* %call, i32 %1) #11, !dbg !20693
  ret i32 %call1, !dbg !20694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_ti_thread_flag(%struct.thread_info* %ti, i32 %flag) #1 !dbg !20695 {
entry:
  %ti.addr = alloca %struct.thread_info*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.thread_info* %ti, %struct.thread_info** %ti.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.thread_info** %ti.addr, metadata !20699, metadata !DIExpression()), !dbg !20700
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !20701, metadata !DIExpression()), !dbg !20702
  %0 = load i32, i32* %flag.addr, align 4, !dbg !20703
  %conv = sext i32 %0 to i64, !dbg !20703
  %1 = load %struct.thread_info*, %struct.thread_info** %ti.addr, align 8, !dbg !20704
  %flags = getelementptr inbounds %struct.thread_info, %struct.thread_info* %1, i32 0, i32 0, !dbg !20705
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %flags) #11, !dbg !20706
  %conv1 = zext i1 %call to i32, !dbg !20706
  ret i32 %conv1, !dbg !20707
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.thread_info* @task_thread_info(%struct.task_struct* %task) #1 !dbg !20708 {
entry:
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !20711, metadata !DIExpression()), !dbg !20712
  %0 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !20713
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 0, !dbg !20714
  ret %struct.thread_info* %thread_info, !dbg !20715
}

; Function Attrs: noredzone
declare dso_local i32 @tty_port_close_start(%struct.tty_port*, %struct.tty_struct*, %struct.file*) #4

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #4

; Function Attrs: noredzone
declare dso_local void @tty_ldisc_flush(%struct.tty_struct*) #4

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #4

; Function Attrs: noredzone
declare dso_local void @tty_port_close_end(%struct.tty_port*, %struct.tty_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @save_tx_buffer_request(%struct.mgsl_struct* %info, i8* %Buffer, i32 %BufferSize) #1 !dbg !20716 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %Buffer.addr = alloca i8*, align 8
  %BufferSize.addr = alloca i32, align 4
  %ptx = alloca %struct.tx_holding_buffer*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !20719, metadata !DIExpression()), !dbg !20720
  store i8* %Buffer, i8** %Buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %Buffer.addr, metadata !20721, metadata !DIExpression()), !dbg !20722
  store i32 %BufferSize, i32* %BufferSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %BufferSize.addr, metadata !20723, metadata !DIExpression()), !dbg !20724
  call void @llvm.dbg.declare(metadata %struct.tx_holding_buffer** %ptx, metadata !20725, metadata !DIExpression()), !dbg !20726
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20727
  %tx_holding_count = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 46, !dbg !20729
  %1 = load i32, i32* %tx_holding_count, align 4, !dbg !20729
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20730
  %num_tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 43, !dbg !20731
  %3 = load i32, i32* %num_tx_holding_buffers, align 8, !dbg !20731
  %cmp = icmp sge i32 %1, %3, !dbg !20732
  br i1 %cmp, label %if.then, label %if.end, !dbg !20733

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20734
  br label %return, !dbg !20734

if.end:                                           ; preds = %entry
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20736
  %tx_holding_buffers = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 47, !dbg !20737
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20738
  %put_tx_holding_index = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 45, !dbg !20739
  %6 = load i32, i32* %put_tx_holding_index, align 8, !dbg !20739
  %idxprom = sext i32 %6 to i64, !dbg !20736
  %arrayidx = getelementptr [5 x %struct.tx_holding_buffer], [5 x %struct.tx_holding_buffer]* %tx_holding_buffers, i64 0, i64 %idxprom, !dbg !20736
  store %struct.tx_holding_buffer* %arrayidx, %struct.tx_holding_buffer** %ptx, align 8, !dbg !20740
  %7 = load i32, i32* %BufferSize.addr, align 4, !dbg !20741
  %8 = load %struct.tx_holding_buffer*, %struct.tx_holding_buffer** %ptx, align 8, !dbg !20742
  %buffer_size = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %8, i32 0, i32 0, !dbg !20743
  store i32 %7, i32* %buffer_size, align 8, !dbg !20744
  %9 = load %struct.tx_holding_buffer*, %struct.tx_holding_buffer** %ptx, align 8, !dbg !20745
  %buffer = getelementptr inbounds %struct.tx_holding_buffer, %struct.tx_holding_buffer* %9, i32 0, i32 1, !dbg !20746
  %10 = load i8*, i8** %buffer, align 8, !dbg !20746
  %11 = load i8*, i8** %Buffer.addr, align 8, !dbg !20747
  %12 = load i32, i32* %BufferSize.addr, align 4, !dbg !20748
  %conv = zext i32 %12 to i64, !dbg !20748
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %11, i64 %conv, i1 false), !dbg !20749
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20750
  %tx_holding_count1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 46, !dbg !20751
  %14 = load i32, i32* %tx_holding_count1, align 4, !dbg !20752
  %inc = add i32 %14, 1, !dbg !20752
  store i32 %inc, i32* %tx_holding_count1, align 4, !dbg !20752
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20753
  %put_tx_holding_index2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 45, !dbg !20755
  %16 = load i32, i32* %put_tx_holding_index2, align 8, !dbg !20756
  %inc3 = add i32 %16, 1, !dbg !20756
  store i32 %inc3, i32* %put_tx_holding_index2, align 8, !dbg !20756
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20757
  %num_tx_holding_buffers4 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 43, !dbg !20758
  %18 = load i32, i32* %num_tx_holding_buffers4, align 8, !dbg !20758
  %cmp5 = icmp sge i32 %inc3, %18, !dbg !20759
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !20760

if.then7:                                         ; preds = %if.end
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20761
  %put_tx_holding_index8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %19, i32 0, i32 45, !dbg !20762
  store i32 0, i32* %put_tx_holding_index8, align 8, !dbg !20763
  br label %if.end9, !dbg !20761

if.end9:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* %retval, align 4, !dbg !20764
  br label %return, !dbg !20764

return:                                           ; preds = %if.end9, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !20765
  ret i32 %20, !dbg !20765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_ioctl_common(%struct.mgsl_struct* %info, i32 %cmd, i64 %arg) #1 !dbg !20766 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %argp = alloca i8*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !20769, metadata !DIExpression()), !dbg !20770
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !20771, metadata !DIExpression()), !dbg !20772
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !20773, metadata !DIExpression()), !dbg !20774
  call void @llvm.dbg.declare(metadata i8** %argp, metadata !20775, metadata !DIExpression()), !dbg !20776
  %0 = load i64, i64* %arg.addr, align 8, !dbg !20777
  %1 = inttoptr i64 %0 to i8*, !dbg !20778
  store i8* %1, i8** %argp, align 8, !dbg !20776
  %2 = load i32, i32* %cmd.addr, align 4, !dbg !20779
  switch i32 %2, label %sw.default [
    i32 -2144310015, label %sw.bb
    i32 1076915456, label %sw.bb1
    i32 27907, label %sw.bb3
    i32 27906, label %sw.bb5
    i32 27908, label %sw.bb7
    i32 27909, label %sw.bb10
    i32 27910, label %sw.bb13
    i32 27911, label %sw.bb15
    i32 -1073451768, label %sw.bb17
    i32 27913, label %sw.bb19
    i32 21596, label %sw.bb21
  ], !dbg !20780

sw.bb:                                            ; preds = %entry
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20781
  %4 = load i8*, i8** %argp, align 8, !dbg !20783
  %5 = bitcast i8* %4 to %struct._MGSL_PARAMS*, !dbg !20783
  %call = call i32 @mgsl_get_params(%struct.mgsl_struct* %3, %struct._MGSL_PARAMS* %5) #11, !dbg !20784
  store i32 %call, i32* %retval, align 4, !dbg !20785
  br label %return, !dbg !20785

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20786
  %7 = load i8*, i8** %argp, align 8, !dbg !20787
  %8 = bitcast i8* %7 to %struct._MGSL_PARAMS*, !dbg !20787
  %call2 = call i32 @mgsl_set_params(%struct.mgsl_struct* %6, %struct._MGSL_PARAMS* %8) #11, !dbg !20788
  store i32 %call2, i32* %retval, align 4, !dbg !20789
  br label %return, !dbg !20789

sw.bb3:                                           ; preds = %entry
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20790
  %10 = load i8*, i8** %argp, align 8, !dbg !20791
  %11 = bitcast i8* %10 to i32*, !dbg !20791
  %call4 = call i32 @mgsl_get_txidle(%struct.mgsl_struct* %9, i32* %11) #11, !dbg !20792
  store i32 %call4, i32* %retval, align 4, !dbg !20793
  br label %return, !dbg !20793

sw.bb5:                                           ; preds = %entry
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20794
  %13 = load i64, i64* %arg.addr, align 8, !dbg !20795
  %conv = trunc i64 %13 to i32, !dbg !20796
  %call6 = call i32 @mgsl_set_txidle(%struct.mgsl_struct* %12, i32 %conv) #11, !dbg !20797
  store i32 %call6, i32* %retval, align 4, !dbg !20798
  br label %return, !dbg !20798

sw.bb7:                                           ; preds = %entry
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20799
  %15 = load i64, i64* %arg.addr, align 8, !dbg !20800
  %conv8 = trunc i64 %15 to i32, !dbg !20801
  %call9 = call i32 @mgsl_txenable(%struct.mgsl_struct* %14, i32 %conv8) #11, !dbg !20802
  store i32 %call9, i32* %retval, align 4, !dbg !20803
  br label %return, !dbg !20803

sw.bb10:                                          ; preds = %entry
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20804
  %17 = load i64, i64* %arg.addr, align 8, !dbg !20805
  %conv11 = trunc i64 %17 to i32, !dbg !20806
  %call12 = call i32 @mgsl_rxenable(%struct.mgsl_struct* %16, i32 %conv11) #11, !dbg !20807
  store i32 %call12, i32* %retval, align 4, !dbg !20808
  br label %return, !dbg !20808

sw.bb13:                                          ; preds = %entry
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20809
  %call14 = call i32 @mgsl_txabort(%struct.mgsl_struct* %18) #11, !dbg !20810
  store i32 %call14, i32* %retval, align 4, !dbg !20811
  br label %return, !dbg !20811

sw.bb15:                                          ; preds = %entry
  %19 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20812
  %20 = load i8*, i8** %argp, align 8, !dbg !20813
  %21 = bitcast i8* %20 to %struct.mgsl_icount*, !dbg !20813
  %call16 = call i32 @mgsl_get_stats(%struct.mgsl_struct* %19, %struct.mgsl_icount* %21) #11, !dbg !20814
  store i32 %call16, i32* %retval, align 4, !dbg !20815
  br label %return, !dbg !20815

sw.bb17:                                          ; preds = %entry
  %22 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20816
  %23 = load i8*, i8** %argp, align 8, !dbg !20817
  %24 = bitcast i8* %23 to i32*, !dbg !20817
  %call18 = call i32 @mgsl_wait_event(%struct.mgsl_struct* %22, i32* %24) #11, !dbg !20818
  store i32 %call18, i32* %retval, align 4, !dbg !20819
  br label %return, !dbg !20819

sw.bb19:                                          ; preds = %entry
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20820
  %call20 = call i32 @mgsl_loopmode_send_done(%struct.mgsl_struct* %25) #11, !dbg !20821
  store i32 %call20, i32* %retval, align 4, !dbg !20822
  br label %return, !dbg !20822

sw.bb21:                                          ; preds = %entry
  %26 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20823
  %27 = load i64, i64* %arg.addr, align 8, !dbg !20824
  %conv22 = trunc i64 %27 to i32, !dbg !20825
  %call23 = call i32 @modem_input_wait(%struct.mgsl_struct* %26, i32 %conv22) #11, !dbg !20826
  store i32 %call23, i32* %retval, align 4, !dbg !20827
  br label %return, !dbg !20827

sw.default:                                       ; preds = %entry
  store i32 -515, i32* %retval, align 4, !dbg !20828
  br label %return, !dbg !20828

return:                                           ; preds = %sw.default, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb10, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %28 = load i32, i32* %retval, align 4, !dbg !20829
  ret i32 %28, !dbg !20829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_get_params(%struct.mgsl_struct* %info, %struct._MGSL_PARAMS* %user_params) #1 !dbg !20830 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !11663, metadata !DIExpression()), !dbg !20834
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !11678, metadata !DIExpression()), !dbg !20837
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !11680, metadata !DIExpression()), !dbg !20838
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !11682, metadata !DIExpression()), !dbg !20839
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !11684, metadata !DIExpression()), !dbg !20840
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !11704, metadata !DIExpression()), !dbg !20841
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !11706, metadata !DIExpression()), !dbg !20842
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !11708, metadata !DIExpression()), !dbg !20843
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %user_params.addr = alloca %struct._MGSL_PARAMS*, align 8
  %err = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !20844, metadata !DIExpression()), !dbg !20845
  store %struct._MGSL_PARAMS* %user_params, %struct._MGSL_PARAMS** %user_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MGSL_PARAMS** %user_params.addr, metadata !20846, metadata !DIExpression()), !dbg !20847
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20848, metadata !DIExpression()), !dbg !20849
  %0 = load i32, i32* @debug_level, align 4, !dbg !20850
  %cmp = icmp sge i32 %0, 3, !dbg !20852
  br i1 %cmp, label %if.then, label %if.end, !dbg !20853

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20854
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !20855
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20854
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2442, i8* %arraydecay) #12, !dbg !20856
  br label %if.end, !dbg !20856

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20857
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 1, !dbg !20858
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 13, !dbg !20859
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !20860
  %3 = load %struct._MGSL_PARAMS*, %struct._MGSL_PARAMS** %user_params.addr, align 8, !dbg !20861
  %4 = bitcast %struct._MGSL_PARAMS* %3 to i8*, !dbg !20861
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20861
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 70, !dbg !20861
  %6 = bitcast %struct._MGSL_PARAMS* %params to i8*, !dbg !20861
  store i8* %4, i8** %to.addr.i, align 8
  store i8* %6, i8** %from.addr.i, align 8
  store i64 48, i64* %n.addr.i, align 8
  %7 = load i8*, i8** %from.addr.i, align 8, !dbg !20862
  %8 = load i64, i64* %n.addr.i, align 8, !dbg !20862
  store i8* %7, i8** %addr.addr.i.i, align 8
  store i64 %8, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !20839
  %9 = load i32, i32* %sz.i.i, align 4, !dbg !20863
  %cmp.i.i = icmp sge i32 %9, 0, !dbg !20863
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !20863

land.rhs.i.i:                                     ; preds = %if.end
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !20863
  %conv.i.i = sext i32 %10 to i64, !dbg !20863
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20863
  %cmp1.i.i = icmp ult i64 %conv.i.i, %11, !dbg !20863
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %12 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !20864
  %lnot.i.i = xor i1 %12, true, !dbg !20863
  %lnot.ext.i.i = zext i1 %12 to i32, !dbg !20863
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !20863
  br i1 %12, label %if.then.i.i, label %if.end10.i.i, !dbg !20865

if.then.i.i:                                      ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20866
  %14 = call i1 @llvm.is.constant.i64(i64 %13) #10, !dbg !20867
  br i1 %14, label %if.else.i.i, label %if.then5.i.i, !dbg !20868

if.then5.i.i:                                     ; preds = %if.then.i.i
  %15 = load i32, i32* %sz.i.i, align 4, !dbg !20869
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20870
  call void @copy_overflow(i32 %15, i64 %16) #14, !dbg !20871
  br label %if.end9.i.i, !dbg !20871

if.else.i.i:                                      ; preds = %if.then.i.i
  %17 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !20872
  %tobool6.i.i = trunc i8 %17 to i1, !dbg !20872
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !20873

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !20874
  br label %if.end.i.i, !dbg !20874

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !20875
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !20876
  br label %check_copy_size.exit.i, !dbg !20876

if.end10.i.i:                                     ; preds = %land.end.i.i
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20840
  %cmp11.i.i = icmp ugt i64 %18, 2147483647, !dbg !20840
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !20840
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !20840
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !20840
  %19 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !20877
  %tobool17.i.i = icmp ne i32 %19, 0, !dbg !20877
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !20877
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !20877
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !20877
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !20840

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !20878, !srcloc !11834
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !20879, !srcloc !11837
  br label %if.end31.i.i, !dbg !20880

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %20 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !20840
  %tobool32.i.i = icmp ne i32 %20, 0, !dbg !20840
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !20840
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !20840
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !20840
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !20877
  %21 = load i64, i64* %tmp.i.i, align 8, !dbg !20840
  %tobool38.i.i = icmp ne i64 %21, 0, !dbg !20881
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !20882

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !20883
  br label %check_copy_size.exit.i, !dbg !20883

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %22 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !20884
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20885
  %24 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !20886
  %tobool41.i.i = trunc i8 %24 to i1, !dbg !20886
  call void @check_object_size(i8* %22, i64 %23, i1 zeroext %tobool41.i.i) #14, !dbg !20887
  store i1 true, i1* %retval.i.i, align 1, !dbg !20888
  br label %check_copy_size.exit.i, !dbg !20888

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %25 = load i1, i1* %retval.i.i, align 1, !dbg !20889
  %lnot.i = xor i1 %25, true, !dbg !20862
  %lnot.ext.i = zext i1 %25 to i32, !dbg !20862
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !20862
  br i1 %25, label %if.then.i, label %copy_to_user.exit, !dbg !20890

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %26 = load i8*, i8** %to.addr.i, align 8, !dbg !20891
  %27 = load i8*, i8** %from.addr.i, align 8, !dbg !20892
  %28 = load i64, i64* %n.addr.i, align 8, !dbg !20893
  %call2.i = call i64 @_copy_to_user(i8* %26, i8* %27, i64 %28) #14, !dbg !20894
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !20895
  br label %copy_to_user.exit, !dbg !20896

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %29 = load i64, i64* %n.addr.i, align 8, !dbg !20897
  %tobool = icmp ne i64 %29, 0, !dbg !20861
  %30 = zext i1 %tobool to i64, !dbg !20861
  %cond = select i1 %tobool, i32 -14, i32 0, !dbg !20861
  store i32 %cond, i32* %err, align 4, !dbg !20861
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20898
  %port2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 1, !dbg !20899
  %mutex3 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port2, i32 0, i32 13, !dbg !20900
  call void @mutex_unlock(%struct.mutex* %mutex3) #11, !dbg !20901
  %32 = load i32, i32* %err, align 4, !dbg !20902
  %tobool4 = icmp ne i32 %32, 0, !dbg !20902
  br i1 %tobool4, label %if.then5, label %if.end12, !dbg !20904

if.then5:                                         ; preds = %copy_to_user.exit
  %33 = load i32, i32* @debug_level, align 4, !dbg !20905
  %cmp6 = icmp sge i32 %33, 3, !dbg !20908
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !20909

if.then7:                                         ; preds = %if.then5
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20910
  %device_name8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 56, !dbg !20911
  %arraydecay9 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name8, i64 0, i64 0, !dbg !20910
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2450, i8* %arraydecay9) #12, !dbg !20912
  br label %if.end11, !dbg !20912

if.end11:                                         ; preds = %if.then7, %if.then5
  store i32 -14, i32* %retval, align 4, !dbg !20913
  br label %return, !dbg !20913

if.end12:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !20914
  br label %return, !dbg !20914

return:                                           ; preds = %if.end12, %if.end11
  %35 = load i32, i32* %retval, align 4, !dbg !20915
  ret i32 %35, !dbg !20915
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_set_params(%struct.mgsl_struct* %info, %struct._MGSL_PARAMS* %new_params) #1 !dbg !20916 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !9306, metadata !DIExpression()), !dbg !20917
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !20919
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !20920
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !11663, metadata !DIExpression()), !dbg !20927
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !11678, metadata !DIExpression()), !dbg !20930
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !11680, metadata !DIExpression()), !dbg !20931
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !11682, metadata !DIExpression()), !dbg !20932
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !11684, metadata !DIExpression()), !dbg !20933
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !11688, metadata !DIExpression()), !dbg !20934
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !11690, metadata !DIExpression()), !dbg !20935
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !11692, metadata !DIExpression()), !dbg !20936
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %new_params.addr = alloca %struct._MGSL_PARAMS*, align 8
  %flags = alloca i64, align 8
  %tmp_params = alloca %struct._MGSL_PARAMS, align 8
  %err = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy16 = alloca i64, align 8
  %__dummy217 = alloca i64, align 8
  %tmp20 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !20937, metadata !DIExpression()), !dbg !20938
  store %struct._MGSL_PARAMS* %new_params, %struct._MGSL_PARAMS** %new_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MGSL_PARAMS** %new_params.addr, metadata !20939, metadata !DIExpression()), !dbg !20940
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20941, metadata !DIExpression()), !dbg !20942
  call void @llvm.dbg.declare(metadata %struct._MGSL_PARAMS* %tmp_params, metadata !20943, metadata !DIExpression()), !dbg !20944
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20945, metadata !DIExpression()), !dbg !20946
  %0 = load i32, i32* @debug_level, align 4, !dbg !20947
  %cmp = icmp sge i32 %0, 3, !dbg !20949
  br i1 %cmp, label %if.then, label %if.end, !dbg !20950

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20951
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !20952
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20951
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2476, i8* %arraydecay) #12, !dbg !20953
  br label %if.end, !dbg !20953

if.end:                                           ; preds = %if.then, %entry
  %2 = bitcast %struct._MGSL_PARAMS* %tmp_params to i8*, !dbg !20954
  %3 = load %struct._MGSL_PARAMS*, %struct._MGSL_PARAMS** %new_params.addr, align 8, !dbg !20954
  %4 = bitcast %struct._MGSL_PARAMS* %3 to i8*, !dbg !20954
  store i8* %2, i8** %to.addr.i, align 8
  store i8* %4, i8** %from.addr.i, align 8
  store i64 48, i64* %n.addr.i, align 8
  %5 = load i8*, i8** %to.addr.i, align 8, !dbg !20955
  %6 = load i64, i64* %n.addr.i, align 8, !dbg !20955
  store i8* %5, i8** %addr.addr.i.i, align 8
  store i64 %6, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !20932
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !20956
  %cmp.i.i = icmp sge i32 %7, 0, !dbg !20956
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !20956

land.rhs.i.i:                                     ; preds = %if.end
  %8 = load i32, i32* %sz.i.i, align 4, !dbg !20956
  %conv.i.i = sext i32 %8 to i64, !dbg !20956
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20956
  %cmp1.i.i = icmp ult i64 %conv.i.i, %9, !dbg !20956
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %10 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !20957
  %lnot.i.i = xor i1 %10, true, !dbg !20956
  %lnot.ext.i.i = zext i1 %10 to i32, !dbg !20956
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !20956
  br i1 %10, label %if.then.i.i, label %if.end10.i.i, !dbg !20958

if.then.i.i:                                      ; preds = %land.end.i.i
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20959
  %12 = call i1 @llvm.is.constant.i64(i64 %11) #10, !dbg !20960
  br i1 %12, label %if.else.i.i, label %if.then5.i.i, !dbg !20961

if.then5.i.i:                                     ; preds = %if.then.i.i
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !20962
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20963
  call void @copy_overflow(i32 %13, i64 %14) #14, !dbg !20964
  br label %if.end9.i.i, !dbg !20964

if.else.i.i:                                      ; preds = %if.then.i.i
  %15 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !20965
  %tobool6.i.i = trunc i8 %15 to i1, !dbg !20965
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !20966

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !20967
  br label %if.end.i.i, !dbg !20967

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !20968
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !20969
  br label %check_copy_size.exit.i, !dbg !20969

if.end10.i.i:                                     ; preds = %land.end.i.i
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20933
  %cmp11.i.i = icmp ugt i64 %16, 2147483647, !dbg !20933
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !20933
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !20933
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !20933
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !20970
  %tobool17.i.i = icmp ne i32 %17, 0, !dbg !20970
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !20970
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !20970
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !20970
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !20933

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !20971, !srcloc !11834
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !20972, !srcloc !11837
  br label %if.end31.i.i, !dbg !20973

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %18 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !20933
  %tobool32.i.i = icmp ne i32 %18, 0, !dbg !20933
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !20933
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !20933
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !20933
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !20970
  %19 = load i64, i64* %tmp.i.i, align 8, !dbg !20933
  %tobool38.i.i = icmp ne i64 %19, 0, !dbg !20974
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !20975

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !20976
  br label %check_copy_size.exit.i, !dbg !20976

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %20 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !20977
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20978
  %22 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !20979
  %tobool41.i.i = trunc i8 %22 to i1, !dbg !20979
  call void @check_object_size(i8* %20, i64 %21, i1 zeroext %tobool41.i.i) #14, !dbg !20980
  store i1 true, i1* %retval.i.i, align 1, !dbg !20981
  br label %check_copy_size.exit.i, !dbg !20981

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %23 = load i1, i1* %retval.i.i, align 1, !dbg !20982
  %lnot.i = xor i1 %23, true, !dbg !20955
  %lnot.ext.i = zext i1 %23 to i32, !dbg !20955
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !20955
  br i1 %23, label %if.then.i, label %copy_from_user.exit, !dbg !20983

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %24 = load i8*, i8** %to.addr.i, align 8, !dbg !20984
  %25 = load i8*, i8** %from.addr.i, align 8, !dbg !20985
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !20986
  %call2.i = call i64 @_copy_from_user(i8* %24, i8* %25, i64 %26) #14, !dbg !20987
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !20988
  br label %copy_from_user.exit, !dbg !20989

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %27 = load i64, i64* %n.addr.i, align 8, !dbg !20990
  %tobool = icmp ne i64 %27, 0, !dbg !20954
  %28 = zext i1 %tobool to i64, !dbg !20954
  %cond = select i1 %tobool, i32 -14, i32 0, !dbg !20954
  store i32 %cond, i32* %err, align 4, !dbg !20954
  %29 = load i32, i32* %err, align 4, !dbg !20991
  %tobool2 = icmp ne i32 %29, 0, !dbg !20991
  br i1 %tobool2, label %if.then3, label %if.end10, !dbg !20993

if.then3:                                         ; preds = %copy_from_user.exit
  %30 = load i32, i32* @debug_level, align 4, !dbg !20994
  %cmp4 = icmp sge i32 %30, 3, !dbg !20997
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !20998

if.then5:                                         ; preds = %if.then3
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !20999
  %device_name6 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 56, !dbg !21000
  %arraydecay7 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name6, i64 0, i64 0, !dbg !20999
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2482, i8* %arraydecay7) #12, !dbg !21001
  br label %if.end9, !dbg !21001

if.end9:                                          ; preds = %if.then5, %if.then3
  store i32 -14, i32* %retval, align 4, !dbg !21002
  br label %return, !dbg !21002

if.end10:                                         ; preds = %copy_from_user.exit
  %32 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21003
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %32, i32 0, i32 1, !dbg !21004
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 13, !dbg !21005
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !21006
  br label %do.body, !dbg !21007

do.body:                                          ; preds = %if.end10
  br label %do.body11, !dbg !21008

do.body11:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !21009, metadata !DIExpression()), !dbg !21011
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !21012, metadata !DIExpression()), !dbg !21011
  %cmp12 = icmp eq i64* %__dummy, %__dummy2, !dbg !21011
  %conv = zext i1 %cmp12 to i32, !dbg !21011
  store i32 1, i32* %tmp, align 4, !dbg !21011
  %33 = load i32, i32* %tmp, align 4, !dbg !21011
  br label %do.body13, !dbg !21013

do.body13:                                        ; preds = %do.body11
  br label %do.body14, !dbg !21014

do.body14:                                        ; preds = %do.body13
  br label %do.body15, !dbg !21015

do.body15:                                        ; preds = %do.body14
  call void @llvm.dbg.declare(metadata i64* %__dummy16, metadata !21017, metadata !DIExpression()), !dbg !21020
  call void @llvm.dbg.declare(metadata i64* %__dummy217, metadata !21021, metadata !DIExpression()), !dbg !21020
  %cmp18 = icmp eq i64* %__dummy16, %__dummy217, !dbg !21020
  %conv19 = zext i1 %cmp18 to i32, !dbg !21020
  store i32 1, i32* %tmp20, align 4, !dbg !21020
  %34 = load i32, i32* %tmp20, align 4, !dbg !21020
  %call21 = call i64 @arch_local_irq_save() #11, !dbg !21022
  store i64 %call21, i64* %flags, align 8, !dbg !21022
  br label %do.end, !dbg !21022

do.end:                                           ; preds = %do.body15
  br label %do.end22, !dbg !21015

do.end22:                                         ; preds = %do.end
  br label %do.body23, !dbg !21014

do.body23:                                        ; preds = %do.end22
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21023, !srcloc !21024
  br label %do.body24, !dbg !21023

do.body24:                                        ; preds = %do.body23
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21025
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 17, !dbg !21025
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21026
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !21027
  %rlock.i = bitcast %union.anon.1* %37 to %struct.raw_spinlock*, !dbg !21027
  br label %do.end26, !dbg !21025

do.end26:                                         ; preds = %do.body24
  br label %do.end27, !dbg !21023

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !21014

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !21013

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !21008

do.end30:                                         ; preds = %do.end29
  %38 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21028
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %38, i32 0, i32 70, !dbg !21029
  %39 = bitcast %struct._MGSL_PARAMS* %params to i8*, !dbg !21030
  %40 = bitcast %struct._MGSL_PARAMS* %tmp_params to i8*, !dbg !21030
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 48, i1 false), !dbg !21030
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21031
  %irq_spinlock31 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %41, i32 0, i32 17, !dbg !21032
  %42 = load i64, i64* %flags, align 8, !dbg !21033
  store %struct.spinlock* %irq_spinlock31, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %42, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !21034
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !21034
  store i32 1, i32* %tmp.i, align 4, !dbg !21034
  %43 = load i32, i32* %tmp.i, align 4, !dbg !21034
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !21035
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !21035
  store i32 1, i32* %tmp8.i, align 4, !dbg !21035
  %44 = load i32, i32* %tmp8.i, align 4, !dbg !21035
  %45 = load i64, i64* %flags.addr.i, align 8, !dbg !21036
  call void @arch_local_irq_restore(i64 %45) #14, !dbg !21036
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21037, !srcloc !9373
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !21038
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !21038
  %rlock.i35 = bitcast %union.anon.1* %47 to %struct.raw_spinlock*, !dbg !21038
  %48 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21039
  call void @mgsl_change_params(%struct.mgsl_struct* %48) #11, !dbg !21040
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21041
  %port32 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %49, i32 0, i32 1, !dbg !21042
  %mutex33 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port32, i32 0, i32 13, !dbg !21043
  call void @mutex_unlock(%struct.mutex* %mutex33) #11, !dbg !21044
  store i32 0, i32* %retval, align 4, !dbg !21045
  br label %return, !dbg !21045

return:                                           ; preds = %do.end30, %if.end9
  %50 = load i32, i32* %retval, align 4, !dbg !21046
  ret i32 %50, !dbg !21046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_get_txidle(%struct.mgsl_struct* %info, i32* %idle_mode) #1 !dbg !21047 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !11663, metadata !DIExpression()), !dbg !21050
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !11678, metadata !DIExpression()), !dbg !21053
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !11680, metadata !DIExpression()), !dbg !21054
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !11682, metadata !DIExpression()), !dbg !21055
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !11684, metadata !DIExpression()), !dbg !21056
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !11704, metadata !DIExpression()), !dbg !21057
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !11706, metadata !DIExpression()), !dbg !21058
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !11708, metadata !DIExpression()), !dbg !21059
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %idle_mode.addr = alloca i32*, align 8
  %err = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !21060, metadata !DIExpression()), !dbg !21061
  store i32* %idle_mode, i32** %idle_mode.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %idle_mode.addr, metadata !21062, metadata !DIExpression()), !dbg !21063
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21064, metadata !DIExpression()), !dbg !21065
  %0 = load i32, i32* @debug_level, align 4, !dbg !21066
  %cmp = icmp sge i32 %0, 3, !dbg !21068
  br i1 %cmp, label %if.then, label %if.end, !dbg !21069

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21070
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !21071
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !21070
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21072
  %idle_mode1 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 53, !dbg !21073
  %3 = load i32, i32* %idle_mode1, align 8, !dbg !21073
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2513, i8* %arraydecay, i32 %3) #12, !dbg !21074
  br label %if.end, !dbg !21074

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32*, i32** %idle_mode.addr, align 8, !dbg !21075
  %5 = bitcast i32* %4 to i8*, !dbg !21075
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21075
  %idle_mode2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 53, !dbg !21075
  %7 = bitcast i32* %idle_mode2 to i8*, !dbg !21075
  store i8* %5, i8** %to.addr.i, align 8
  store i8* %7, i8** %from.addr.i, align 8
  store i64 4, i64* %n.addr.i, align 8
  %8 = load i8*, i8** %from.addr.i, align 8, !dbg !21076
  %9 = load i64, i64* %n.addr.i, align 8, !dbg !21076
  store i8* %8, i8** %addr.addr.i.i, align 8
  store i64 %9, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !21055
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !21077
  %cmp.i.i = icmp sge i32 %10, 0, !dbg !21077
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !21077

land.rhs.i.i:                                     ; preds = %if.end
  %11 = load i32, i32* %sz.i.i, align 4, !dbg !21077
  %conv.i.i = sext i32 %11 to i64, !dbg !21077
  %12 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21077
  %cmp1.i.i = icmp ult i64 %conv.i.i, %12, !dbg !21077
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %13 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !21078
  %lnot.i.i = xor i1 %13, true, !dbg !21077
  %lnot.ext.i.i = zext i1 %13 to i32, !dbg !21077
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !21077
  br i1 %13, label %if.then.i.i, label %if.end10.i.i, !dbg !21079

if.then.i.i:                                      ; preds = %land.end.i.i
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21080
  %15 = call i1 @llvm.is.constant.i64(i64 %14) #10, !dbg !21081
  br i1 %15, label %if.else.i.i, label %if.then5.i.i, !dbg !21082

if.then5.i.i:                                     ; preds = %if.then.i.i
  %16 = load i32, i32* %sz.i.i, align 4, !dbg !21083
  %17 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21084
  call void @copy_overflow(i32 %16, i64 %17) #14, !dbg !21085
  br label %if.end9.i.i, !dbg !21085

if.else.i.i:                                      ; preds = %if.then.i.i
  %18 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !21086
  %tobool6.i.i = trunc i8 %18 to i1, !dbg !21086
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !21087

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !21088
  br label %if.end.i.i, !dbg !21088

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !21089
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !21090
  br label %check_copy_size.exit.i, !dbg !21090

if.end10.i.i:                                     ; preds = %land.end.i.i
  %19 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21056
  %cmp11.i.i = icmp ugt i64 %19, 2147483647, !dbg !21056
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !21056
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !21056
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !21056
  %20 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !21091
  %tobool17.i.i = icmp ne i32 %20, 0, !dbg !21091
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !21091
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !21091
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !21091
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !21056

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !21092, !srcloc !11834
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !21093, !srcloc !11837
  br label %if.end31.i.i, !dbg !21094

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %21 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !21056
  %tobool32.i.i = icmp ne i32 %21, 0, !dbg !21056
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !21056
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !21056
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !21056
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !21091
  %22 = load i64, i64* %tmp.i.i, align 8, !dbg !21056
  %tobool38.i.i = icmp ne i64 %22, 0, !dbg !21095
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !21096

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !21097
  br label %check_copy_size.exit.i, !dbg !21097

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %23 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !21098
  %24 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21099
  %25 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !21100
  %tobool41.i.i = trunc i8 %25 to i1, !dbg !21100
  call void @check_object_size(i8* %23, i64 %24, i1 zeroext %tobool41.i.i) #14, !dbg !21101
  store i1 true, i1* %retval.i.i, align 1, !dbg !21102
  br label %check_copy_size.exit.i, !dbg !21102

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %26 = load i1, i1* %retval.i.i, align 1, !dbg !21103
  %lnot.i = xor i1 %26, true, !dbg !21076
  %lnot.ext.i = zext i1 %26 to i32, !dbg !21076
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !21076
  br i1 %26, label %if.then.i, label %copy_to_user.exit, !dbg !21104

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %27 = load i8*, i8** %to.addr.i, align 8, !dbg !21105
  %28 = load i8*, i8** %from.addr.i, align 8, !dbg !21106
  %29 = load i64, i64* %n.addr.i, align 8, !dbg !21107
  %call2.i = call i64 @_copy_to_user(i8* %27, i8* %28, i64 %29) #14, !dbg !21108
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !21109
  br label %copy_to_user.exit, !dbg !21110

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %30 = load i64, i64* %n.addr.i, align 8, !dbg !21111
  %tobool = icmp ne i64 %30, 0, !dbg !21075
  %31 = zext i1 %tobool to i64, !dbg !21075
  %cond = select i1 %tobool, i32 -14, i32 0, !dbg !21075
  store i32 %cond, i32* %err, align 4, !dbg !21075
  %32 = load i32, i32* %err, align 4, !dbg !21112
  %tobool4 = icmp ne i32 %32, 0, !dbg !21112
  br i1 %tobool4, label %if.then5, label %if.end12, !dbg !21114

if.then5:                                         ; preds = %copy_to_user.exit
  %33 = load i32, i32* @debug_level, align 4, !dbg !21115
  %cmp6 = icmp sge i32 %33, 3, !dbg !21118
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !21119

if.then7:                                         ; preds = %if.then5
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21120
  %device_name8 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 56, !dbg !21121
  %arraydecay9 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name8, i64 0, i64 0, !dbg !21120
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2519, i8* %arraydecay9) #12, !dbg !21122
  br label %if.end11, !dbg !21122

if.end11:                                         ; preds = %if.then7, %if.then5
  store i32 -14, i32* %retval, align 4, !dbg !21123
  br label %return, !dbg !21123

if.end12:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !21124
  br label %return, !dbg !21124

return:                                           ; preds = %if.end12, %if.end11
  %35 = load i32, i32* %retval, align 4, !dbg !21125
  ret i32 %35, !dbg !21125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_set_txidle(%struct.mgsl_struct* %info, i32 %idle_mode) #1 !dbg !21126 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !9306, metadata !DIExpression()), !dbg !21129
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !21131
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !21132
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %idle_mode.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !21139, metadata !DIExpression()), !dbg !21140
  store i32 %idle_mode, i32* %idle_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idle_mode.addr, metadata !21141, metadata !DIExpression()), !dbg !21142
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !21143, metadata !DIExpression()), !dbg !21144
  %0 = load i32, i32* @debug_level, align 4, !dbg !21145
  %cmp = icmp sge i32 %0, 3, !dbg !21147
  br i1 %cmp, label %if.then, label %if.end, !dbg !21148

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21149
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !21150
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !21149
  %2 = load i32, i32* %idle_mode.addr, align 4, !dbg !21151
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2539, i8* %arraydecay, i32 %2) #12, !dbg !21152
  br label %if.end, !dbg !21152

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !21153

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !21154

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !21155, metadata !DIExpression()), !dbg !21157
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !21158, metadata !DIExpression()), !dbg !21157
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !21157
  %conv = zext i1 %cmp2 to i32, !dbg !21157
  store i32 1, i32* %tmp, align 4, !dbg !21157
  %3 = load i32, i32* %tmp, align 4, !dbg !21157
  br label %do.body3, !dbg !21159

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !21160

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !21161

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !21163, metadata !DIExpression()), !dbg !21166
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !21167, metadata !DIExpression()), !dbg !21166
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !21166
  %conv9 = zext i1 %cmp8 to i32, !dbg !21166
  store i32 1, i32* %tmp10, align 4, !dbg !21166
  %4 = load i32, i32* %tmp10, align 4, !dbg !21166
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !21168
  store i64 %call11, i64* %flags, align 8, !dbg !21168
  br label %do.end, !dbg !21168

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !21161

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !21160

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21169, !srcloc !21170
  br label %do.body14, !dbg !21169

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21171
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 17, !dbg !21171
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21172
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !21173
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !21173
  br label %do.end16, !dbg !21171

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !21169

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !21160

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !21159

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !21154

do.end20:                                         ; preds = %do.end19
  %8 = load i32, i32* %idle_mode.addr, align 4, !dbg !21174
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21175
  %idle_mode21 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 53, !dbg !21176
  store i32 %8, i32* %idle_mode21, align 8, !dbg !21177
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21178
  call void @usc_set_txidle(%struct.mgsl_struct* %10) #11, !dbg !21179
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21180
  %irq_spinlock22 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 17, !dbg !21181
  %12 = load i64, i64* %flags, align 8, !dbg !21182
  store %struct.spinlock* %irq_spinlock22, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !21183
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !21183
  store i32 1, i32* %tmp.i, align 4, !dbg !21183
  %13 = load i32, i32* %tmp.i, align 4, !dbg !21183
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !21184
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !21184
  store i32 1, i32* %tmp8.i, align 4, !dbg !21184
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !21184
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !21185
  call void @arch_local_irq_restore(i64 %15) #14, !dbg !21185
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21186, !srcloc !9373
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !21187
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !21187
  %rlock.i24 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !21187
  ret i32 0, !dbg !21188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_txenable(%struct.mgsl_struct* %info, i32 %enable) #1 !dbg !21189 {
entry:
  %lock.addr.i36 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i36, metadata !9306, metadata !DIExpression()), !dbg !21190
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !21192
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !21193
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %enable.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !21200, metadata !DIExpression()), !dbg !21201
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !21202, metadata !DIExpression()), !dbg !21203
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !21204, metadata !DIExpression()), !dbg !21205
  %0 = load i32, i32* @debug_level, align 4, !dbg !21206
  %cmp = icmp sge i32 %0, 3, !dbg !21208
  br i1 %cmp, label %if.then, label %if.end, !dbg !21209

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21210
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !21211
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !21210
  %2 = load i32, i32* %enable.addr, align 4, !dbg !21212
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2566, i8* %arraydecay, i32 %2) #12, !dbg !21213
  br label %if.end, !dbg !21213

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !21214

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !21215

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !21216, metadata !DIExpression()), !dbg !21218
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !21219, metadata !DIExpression()), !dbg !21218
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !21218
  %conv = zext i1 %cmp2 to i32, !dbg !21218
  store i32 1, i32* %tmp, align 4, !dbg !21218
  %3 = load i32, i32* %tmp, align 4, !dbg !21218
  br label %do.body3, !dbg !21220

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !21221

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !21222

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !21224, metadata !DIExpression()), !dbg !21227
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !21228, metadata !DIExpression()), !dbg !21227
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !21227
  %conv9 = zext i1 %cmp8 to i32, !dbg !21227
  store i32 1, i32* %tmp10, align 4, !dbg !21227
  %4 = load i32, i32* %tmp10, align 4, !dbg !21227
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !21229
  store i64 %call11, i64* %flags, align 8, !dbg !21229
  br label %do.end, !dbg !21229

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !21222

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !21221

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21230, !srcloc !21231
  br label %do.body14, !dbg !21230

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21232
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 17, !dbg !21232
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21233
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !21234
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !21234
  br label %do.end16, !dbg !21232

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !21230

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !21221

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !21220

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !21215

do.end20:                                         ; preds = %do.end19
  %8 = load i32, i32* %enable.addr, align 4, !dbg !21235
  %tobool = icmp ne i32 %8, 0, !dbg !21235
  br i1 %tobool, label %if.then21, label %if.else, !dbg !21237

if.then21:                                        ; preds = %do.end20
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21238
  %tx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 51, !dbg !21241
  %10 = load i8, i8* %tx_enabled, align 1, !dbg !21241
  %tobool22 = trunc i8 %10 to i1, !dbg !21241
  br i1 %tobool22, label %if.end29, label %if.then23, !dbg !21242

if.then23:                                        ; preds = %if.then21
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21243
  call void @usc_start_transmitter(%struct.mgsl_struct* %11) #11, !dbg !21245
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21246
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 70, !dbg !21248
  %flags24 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 2, !dbg !21249
  %13 = load i16, i16* %flags24, align 2, !dbg !21249
  %conv25 = zext i16 %13 to i32, !dbg !21246
  %and = and i32 %conv25, 16384, !dbg !21250
  %tobool26 = icmp ne i32 %and, 0, !dbg !21250
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !21251

if.then27:                                        ; preds = %if.then23
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21252
  call void @usc_loopmode_insert_request(%struct.mgsl_struct* %14) #11, !dbg !21253
  br label %if.end28, !dbg !21253

if.end28:                                         ; preds = %if.then27, %if.then23
  br label %if.end29, !dbg !21254

if.end29:                                         ; preds = %if.end28, %if.then21
  br label %if.end34, !dbg !21255

if.else:                                          ; preds = %do.end20
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21256
  %tx_enabled30 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 51, !dbg !21259
  %16 = load i8, i8* %tx_enabled30, align 1, !dbg !21259
  %tobool31 = trunc i8 %16 to i1, !dbg !21259
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !21260

if.then32:                                        ; preds = %if.else
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21261
  call void @usc_stop_transmitter(%struct.mgsl_struct* %17) #11, !dbg !21262
  br label %if.end33, !dbg !21262

if.end33:                                         ; preds = %if.then32, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end29
  %18 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21263
  %irq_spinlock35 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %18, i32 0, i32 17, !dbg !21264
  %19 = load i64, i64* %flags, align 8, !dbg !21265
  store %struct.spinlock* %irq_spinlock35, %struct.spinlock** %lock.addr.i36, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !21266
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !21266
  store i32 1, i32* %tmp.i, align 4, !dbg !21266
  %20 = load i32, i32* %tmp.i, align 4, !dbg !21266
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !21267
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !21267
  store i32 1, i32* %tmp8.i, align 4, !dbg !21267
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !21267
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !21268
  call void @arch_local_irq_restore(i64 %22) #14, !dbg !21268
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21269, !srcloc !9373
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i36, align 8, !dbg !21270
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !21270
  %rlock.i37 = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !21270
  ret i32 0, !dbg !21271
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_rxenable(%struct.mgsl_struct* %info, i32 %enable) #1 !dbg !21272 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !9306, metadata !DIExpression()), !dbg !21273
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !21275
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !21276
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %enable.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !21283, metadata !DIExpression()), !dbg !21284
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !21285, metadata !DIExpression()), !dbg !21286
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !21287, metadata !DIExpression()), !dbg !21288
  %0 = load i32, i32* @debug_level, align 4, !dbg !21289
  %cmp = icmp sge i32 %0, 3, !dbg !21291
  br i1 %cmp, label %if.then, label %if.end, !dbg !21292

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21293
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !21294
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !21293
  %2 = load i32, i32* %enable.addr, align 4, !dbg !21295
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2630, i8* %arraydecay, i32 %2) #12, !dbg !21296
  br label %if.end, !dbg !21296

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !21297

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !21298

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !21299, metadata !DIExpression()), !dbg !21301
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !21302, metadata !DIExpression()), !dbg !21301
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !21301
  %conv = zext i1 %cmp2 to i32, !dbg !21301
  store i32 1, i32* %tmp, align 4, !dbg !21301
  %3 = load i32, i32* %tmp, align 4, !dbg !21301
  br label %do.body3, !dbg !21303

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !21304

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !21305

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !21307, metadata !DIExpression()), !dbg !21310
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !21311, metadata !DIExpression()), !dbg !21310
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !21310
  %conv9 = zext i1 %cmp8 to i32, !dbg !21310
  store i32 1, i32* %tmp10, align 4, !dbg !21310
  %4 = load i32, i32* %tmp10, align 4, !dbg !21310
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !21312
  store i64 %call11, i64* %flags, align 8, !dbg !21312
  br label %do.end, !dbg !21312

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !21305

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !21304

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21313, !srcloc !21314
  br label %do.body14, !dbg !21313

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21315
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 17, !dbg !21315
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21316
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !21317
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !21317
  br label %do.end16, !dbg !21315

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !21313

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !21304

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !21303

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !21298

do.end20:                                         ; preds = %do.end19
  %8 = load i32, i32* %enable.addr, align 4, !dbg !21318
  %tobool = icmp ne i32 %8, 0, !dbg !21318
  br i1 %tobool, label %if.then21, label %if.else, !dbg !21320

if.then21:                                        ; preds = %do.end20
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21321
  %rx_enabled = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 48, !dbg !21324
  %10 = load i8, i8* %rx_enabled, align 8, !dbg !21324
  %tobool22 = trunc i8 %10 to i1, !dbg !21324
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !21325

if.then23:                                        ; preds = %if.then21
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21326
  call void @usc_start_receiver(%struct.mgsl_struct* %11) #11, !dbg !21327
  br label %if.end24, !dbg !21327

if.end24:                                         ; preds = %if.then23, %if.then21
  br label %if.end29, !dbg !21328

if.else:                                          ; preds = %do.end20
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21329
  %rx_enabled25 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 48, !dbg !21332
  %13 = load i8, i8* %rx_enabled25, align 8, !dbg !21332
  %tobool26 = trunc i8 %13 to i1, !dbg !21332
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !21333

if.then27:                                        ; preds = %if.else
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21334
  call void @usc_stop_receiver(%struct.mgsl_struct* %14) #11, !dbg !21335
  br label %if.end28, !dbg !21335

if.end28:                                         ; preds = %if.then27, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end24
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21336
  %irq_spinlock30 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 17, !dbg !21337
  %16 = load i64, i64* %flags, align 8, !dbg !21338
  store %struct.spinlock* %irq_spinlock30, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !21339
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !21339
  store i32 1, i32* %tmp.i, align 4, !dbg !21339
  %17 = load i32, i32* %tmp.i, align 4, !dbg !21339
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !21340
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !21340
  store i32 1, i32* %tmp8.i, align 4, !dbg !21340
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !21340
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !21341
  call void @arch_local_irq_restore(i64 %19) #14, !dbg !21341
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21342, !srcloc !9373
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !21343
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !21343
  %rlock.i32 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !21343
  ret i32 0, !dbg !21344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_txabort(%struct.mgsl_struct* %info) #1 !dbg !21345 {
entry:
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !9306, metadata !DIExpression()), !dbg !21346
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !21348
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !21349
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !21356, metadata !DIExpression()), !dbg !21357
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !21358, metadata !DIExpression()), !dbg !21359
  %0 = load i32, i32* @debug_level, align 4, !dbg !21360
  %cmp = icmp sge i32 %0, 3, !dbg !21362
  br i1 %cmp, label %if.then, label %if.end, !dbg !21363

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21364
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !21365
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !21364
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2603, i8* %arraydecay) #12, !dbg !21366
  br label %if.end, !dbg !21366

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !21367

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !21368

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !21369, metadata !DIExpression()), !dbg !21371
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !21372, metadata !DIExpression()), !dbg !21371
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !21371
  %conv = zext i1 %cmp2 to i32, !dbg !21371
  store i32 1, i32* %tmp, align 4, !dbg !21371
  %2 = load i32, i32* %tmp, align 4, !dbg !21371
  br label %do.body3, !dbg !21373

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !21374

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !21375

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !21377, metadata !DIExpression()), !dbg !21380
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !21381, metadata !DIExpression()), !dbg !21380
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !21380
  %conv9 = zext i1 %cmp8 to i32, !dbg !21380
  store i32 1, i32* %tmp10, align 4, !dbg !21380
  %3 = load i32, i32* %tmp10, align 4, !dbg !21380
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !21382
  store i64 %call11, i64* %flags, align 8, !dbg !21382
  br label %do.end, !dbg !21382

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !21375

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !21374

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21383, !srcloc !21384
  br label %do.body14, !dbg !21383

do.body14:                                        ; preds = %do.body13
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21385
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 17, !dbg !21385
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21386
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !21387
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !21387
  br label %do.end16, !dbg !21385

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !21383

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !21374

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !21373

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !21368

do.end20:                                         ; preds = %do.end19
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21388
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 52, !dbg !21390
  %8 = load i8, i8* %tx_active, align 4, !dbg !21390
  %tobool = trunc i8 %8 to i1, !dbg !21390
  br i1 %tobool, label %land.lhs.true, label %if.end33, !dbg !21391

land.lhs.true:                                    ; preds = %do.end20
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21392
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 70, !dbg !21393
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !21394
  %10 = load i64, i64* %mode, align 8, !dbg !21394
  %cmp22 = icmp eq i64 %10, 2, !dbg !21395
  br i1 %cmp22, label %if.then24, label %if.end33, !dbg !21396

if.then24:                                        ; preds = %land.lhs.true
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21397
  %params25 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 70, !dbg !21400
  %flags26 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params25, i32 0, i32 2, !dbg !21401
  %12 = load i16, i16* %flags26, align 2, !dbg !21401
  %conv27 = zext i16 %12 to i32, !dbg !21397
  %and = and i32 %conv27, 16384, !dbg !21402
  %tobool28 = icmp ne i32 %and, 0, !dbg !21402
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !21403

if.then29:                                        ; preds = %if.then24
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21404
  call void @usc_loopmode_cancel_transmit(%struct.mgsl_struct* %13) #11, !dbg !21405
  br label %if.end32, !dbg !21405

if.else:                                          ; preds = %if.then24
  %14 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21406
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21406
  %tcsr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %15, i32 0, i32 55, !dbg !21406
  %16 = load i16, i16* %tcsr_value, align 2, !dbg !21406
  %conv30 = zext i16 %16 to i32, !dbg !21406
  %add = add i32 %conv30, 36864, !dbg !21406
  %conv31 = trunc i32 %add to i16, !dbg !21406
  call void @usc_OutReg(%struct.mgsl_struct* %14, i16 zeroext 52, i16 zeroext %conv31) #11, !dbg !21406
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then29
  br label %if.end33, !dbg !21407

if.end33:                                         ; preds = %if.end32, %land.lhs.true, %do.end20
  %17 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21408
  %irq_spinlock34 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %17, i32 0, i32 17, !dbg !21409
  %18 = load i64, i64* %flags, align 8, !dbg !21410
  store %struct.spinlock* %irq_spinlock34, %struct.spinlock** %lock.addr.i35, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !21411
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !21411
  store i32 1, i32* %tmp.i, align 4, !dbg !21411
  %19 = load i32, i32* %tmp.i, align 4, !dbg !21411
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !21412
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !21412
  store i32 1, i32* %tmp8.i, align 4, !dbg !21412
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !21412
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !21413
  call void @arch_local_irq_restore(i64 %21) #14, !dbg !21413
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21414, !srcloc !9373
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !21415
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !21415
  %rlock.i36 = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !21415
  ret i32 0, !dbg !21416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_get_stats(%struct.mgsl_struct* %info, %struct.mgsl_icount* %user_icount) #1 !dbg !21417 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !11663, metadata !DIExpression()), !dbg !21420
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !11678, metadata !DIExpression()), !dbg !21425
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !11680, metadata !DIExpression()), !dbg !21426
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !11682, metadata !DIExpression()), !dbg !21427
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !11684, metadata !DIExpression()), !dbg !21428
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !11704, metadata !DIExpression()), !dbg !21429
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !11706, metadata !DIExpression()), !dbg !21430
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !11708, metadata !DIExpression()), !dbg !21431
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %user_icount.addr = alloca %struct.mgsl_icount*, align 8
  %err = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !21432, metadata !DIExpression()), !dbg !21433
  store %struct.mgsl_icount* %user_icount, %struct.mgsl_icount** %user_icount.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount** %user_icount.addr, metadata !21434, metadata !DIExpression()), !dbg !21435
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21436, metadata !DIExpression()), !dbg !21437
  %0 = load i32, i32* @debug_level, align 4, !dbg !21438
  %cmp = icmp sge i32 %0, 3, !dbg !21440
  br i1 %cmp, label %if.then, label %if.end, !dbg !21441

if.then:                                          ; preds = %entry
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21442
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !21443
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !21442
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2412, i8* %arraydecay) #12, !dbg !21444
  br label %if.end, !dbg !21444

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_icount*, %struct.mgsl_icount** %user_icount.addr, align 8, !dbg !21445
  %tobool = icmp ne %struct.mgsl_icount* %2, null, !dbg !21445
  br i1 %tobool, label %if.else, label %if.then1, !dbg !21446

if.then1:                                         ; preds = %if.end
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21447
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 4, !dbg !21449
  %4 = bitcast %struct.mgsl_icount* %icount to i8*, !dbg !21450
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 92, i1 false), !dbg !21450
  br label %if.end10, !dbg !21451

if.else:                                          ; preds = %if.end
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21452
  %port = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 1, !dbg !21453
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 13, !dbg !21454
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !21455
  %6 = load %struct.mgsl_icount*, %struct.mgsl_icount** %user_icount.addr, align 8, !dbg !21456
  %7 = bitcast %struct.mgsl_icount* %6 to i8*, !dbg !21456
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21456
  %icount2 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 4, !dbg !21456
  %9 = bitcast %struct.mgsl_icount* %icount2 to i8*, !dbg !21456
  store i8* %7, i8** %to.addr.i, align 8
  store i8* %9, i8** %from.addr.i, align 8
  store i64 92, i64* %n.addr.i, align 8
  %10 = load i8*, i8** %from.addr.i, align 8, !dbg !21457
  %11 = load i64, i64* %n.addr.i, align 8, !dbg !21457
  store i8* %10, i8** %addr.addr.i.i, align 8
  store i64 %11, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !21427
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !21458
  %cmp.i.i = icmp sge i32 %12, 0, !dbg !21458
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !21458

land.rhs.i.i:                                     ; preds = %if.else
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !21458
  %conv.i.i = sext i32 %13 to i64, !dbg !21458
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21458
  %cmp1.i.i = icmp ult i64 %conv.i.i, %14, !dbg !21458
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.else
  %15 = phi i1 [ false, %if.else ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !21459
  %lnot.i.i = xor i1 %15, true, !dbg !21458
  %lnot.ext.i.i = zext i1 %15 to i32, !dbg !21458
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !21458
  br i1 %15, label %if.then.i.i, label %if.end10.i.i, !dbg !21460

if.then.i.i:                                      ; preds = %land.end.i.i
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21461
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !21462
  br i1 %17, label %if.else.i.i, label %if.then5.i.i, !dbg !21463

if.then5.i.i:                                     ; preds = %if.then.i.i
  %18 = load i32, i32* %sz.i.i, align 4, !dbg !21464
  %19 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21465
  call void @copy_overflow(i32 %18, i64 %19) #14, !dbg !21466
  br label %if.end9.i.i, !dbg !21466

if.else.i.i:                                      ; preds = %if.then.i.i
  %20 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !21467
  %tobool6.i.i = trunc i8 %20 to i1, !dbg !21467
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !21468

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !21469
  br label %if.end.i.i, !dbg !21469

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !21470
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !21471
  br label %check_copy_size.exit.i, !dbg !21471

if.end10.i.i:                                     ; preds = %land.end.i.i
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21428
  %cmp11.i.i = icmp ugt i64 %21, 2147483647, !dbg !21428
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !21428
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !21428
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !21428
  %22 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !21472
  %tobool17.i.i = icmp ne i32 %22, 0, !dbg !21472
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !21472
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !21472
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !21472
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !21428

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !21473, !srcloc !11834
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !21474, !srcloc !11837
  br label %if.end31.i.i, !dbg !21475

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %23 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !21428
  %tobool32.i.i = icmp ne i32 %23, 0, !dbg !21428
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !21428
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !21428
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !21428
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !21472
  %24 = load i64, i64* %tmp.i.i, align 8, !dbg !21428
  %tobool38.i.i = icmp ne i64 %24, 0, !dbg !21476
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !21477

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !21478
  br label %check_copy_size.exit.i, !dbg !21478

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %25 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !21479
  %26 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21480
  %27 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !21481
  %tobool41.i.i = trunc i8 %27 to i1, !dbg !21481
  call void @check_object_size(i8* %25, i64 %26, i1 zeroext %tobool41.i.i) #14, !dbg !21482
  store i1 true, i1* %retval.i.i, align 1, !dbg !21483
  br label %check_copy_size.exit.i, !dbg !21483

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %28 = load i1, i1* %retval.i.i, align 1, !dbg !21484
  %lnot.i = xor i1 %28, true, !dbg !21457
  %lnot.ext.i = zext i1 %28 to i32, !dbg !21457
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !21457
  br i1 %28, label %if.then.i, label %copy_to_user.exit, !dbg !21485

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %29 = load i8*, i8** %to.addr.i, align 8, !dbg !21486
  %30 = load i8*, i8** %from.addr.i, align 8, !dbg !21487
  %31 = load i64, i64* %n.addr.i, align 8, !dbg !21488
  %call2.i = call i64 @_copy_to_user(i8* %29, i8* %30, i64 %31) #14, !dbg !21489
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !21490
  br label %copy_to_user.exit, !dbg !21491

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %32 = load i64, i64* %n.addr.i, align 8, !dbg !21492
  %tobool4 = icmp ne i64 %32, 0, !dbg !21456
  %33 = zext i1 %tobool4 to i64, !dbg !21456
  %cond = select i1 %tobool4, i32 -14, i32 0, !dbg !21456
  store i32 %cond, i32* %err, align 4, !dbg !21456
  %34 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21493
  %port5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %34, i32 0, i32 1, !dbg !21494
  %mutex6 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port5, i32 0, i32 13, !dbg !21495
  call void @mutex_unlock(%struct.mutex* %mutex6) #11, !dbg !21496
  %35 = load i32, i32* %err, align 4, !dbg !21497
  %tobool7 = icmp ne i32 %35, 0, !dbg !21497
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !21499

if.then8:                                         ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !21500
  br label %return, !dbg !21500

if.end9:                                          ; preds = %copy_to_user.exit
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then1
  store i32 0, i32* %retval, align 4, !dbg !21501
  br label %return, !dbg !21501

return:                                           ; preds = %if.end10, %if.then8
  %36 = load i32, i32* %retval, align 4, !dbg !21502
  ret i32 %36, !dbg !21502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_wait_event(%struct.mgsl_struct* %info, i32* %mask_ptr) #1 !dbg !21503 {
entry:
  %lock.addr.i324 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i324, metadata !9306, metadata !DIExpression()), !dbg !21504
  %flags.addr.i325 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i325, metadata !9312, metadata !DIExpression()), !dbg !21508
  %tmp.i326 = alloca i32, align 4
  %tmp8.i327 = alloca i32, align 4
  %lock.addr.i322 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i322, metadata !8660, metadata !DIExpression()), !dbg !21509
  %pscr_ret__.i317 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i317, metadata !19856, metadata !DIExpression()), !dbg !21516
  %__vpp_verify.i318 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i318, metadata !19868, metadata !DIExpression()), !dbg !21521
  %pfo_val__.i319 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i319, metadata !19871, metadata !DIExpression()), !dbg !21522
  %tmp.i320 = alloca %struct.task_struct*, align 8
  %tmp1.i321 = alloca %struct.task_struct*, align 8
  %lock.addr.i312 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i312, metadata !9306, metadata !DIExpression()), !dbg !21523
  %flags.addr.i313 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i313, metadata !9312, metadata !DIExpression()), !dbg !21528
  %tmp.i314 = alloca i32, align 4
  %tmp8.i315 = alloca i32, align 4
  %pscr_ret__.i307 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i307, metadata !19856, metadata !DIExpression()), !dbg !21529
  %__vpp_verify.i308 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i308, metadata !19868, metadata !DIExpression()), !dbg !21534
  %pfo_val__.i309 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i309, metadata !19871, metadata !DIExpression()), !dbg !21535
  %tmp.i310 = alloca %struct.task_struct*, align 8
  %tmp1.i311 = alloca %struct.task_struct*, align 8
  %lock.addr.i305 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i305, metadata !8660, metadata !DIExpression()), !dbg !21536
  %pscr_ret__.i300 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i300, metadata !19856, metadata !DIExpression()), !dbg !21543
  %__vpp_verify.i301 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i301, metadata !19868, metadata !DIExpression()), !dbg !21546
  %pfo_val__.i302 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i302, metadata !19871, metadata !DIExpression()), !dbg !21547
  %tmp.i303 = alloca %struct.task_struct*, align 8
  %tmp1.i304 = alloca %struct.task_struct*, align 8
  %lock.addr.i295 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i295, metadata !9306, metadata !DIExpression()), !dbg !21548
  %flags.addr.i296 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i296, metadata !9312, metadata !DIExpression()), !dbg !21550
  %tmp.i297 = alloca i32, align 4
  %tmp8.i298 = alloca i32, align 4
  %pscr_ret__.i290 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i290, metadata !19856, metadata !DIExpression()), !dbg !21551
  %__vpp_verify.i291 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i291, metadata !19868, metadata !DIExpression()), !dbg !21556
  %pfo_val__.i292 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i292, metadata !19871, metadata !DIExpression()), !dbg !21557
  %tmp.i293 = alloca %struct.task_struct*, align 8
  %tmp1.i294 = alloca %struct.task_struct*, align 8
  %lock.addr.i287 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i287, metadata !9306, metadata !DIExpression()), !dbg !21558
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !21562
  %tmp.i288 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !21563
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !11663, metadata !DIExpression()), !dbg !21570
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !11678, metadata !DIExpression()), !dbg !21573
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !11680, metadata !DIExpression()), !dbg !21574
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !11682, metadata !DIExpression()), !dbg !21575
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !11684, metadata !DIExpression()), !dbg !21576
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !11688, metadata !DIExpression()), !dbg !21577
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !11690, metadata !DIExpression()), !dbg !21578
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !11692, metadata !DIExpression()), !dbg !21579
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !19856, metadata !DIExpression()), !dbg !21580
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !19868, metadata !DIExpression()), !dbg !21582
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !19871, metadata !DIExpression()), !dbg !21583
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %mask_ptr.addr = alloca i32*, align 8
  %flags = alloca i64, align 8
  %s = alloca i32, align 4
  %rc = alloca i32, align 4
  %cprev = alloca %struct.mgsl_icount, align 4
  %cnow = alloca %struct.mgsl_icount, align 4
  %events = alloca i32, align 4
  %mask = alloca i32, align 4
  %oldsigs = alloca %struct._input_signal_events, align 4
  %newsigs = alloca %struct._input_signal_events, align 4
  %wait = alloca %struct.wait_queue_entry, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %oldreg = alloca i16, align 2
  %newreg = alloca i16, align 2
  %__dummy85 = alloca i64, align 8
  %__dummy286 = alloca i64, align 8
  %tmp89 = alloca i32, align 4
  %__dummy93 = alloca i64, align 8
  %__dummy294 = alloca i64, align 8
  %tmp97 = alloca i32, align 4
  %__dummy242 = alloca i64, align 8
  %__dummy2243 = alloca i64, align 8
  %tmp246 = alloca i32, align 4
  %__dummy250 = alloca i64, align 8
  %__dummy2251 = alloca i64, align 8
  %tmp254 = alloca i32, align 4
  %tmp281 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp283 = alloca i64, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !21584, metadata !DIExpression()), !dbg !21585
  store i32* %mask_ptr, i32** %mask_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mask_ptr.addr, metadata !21586, metadata !DIExpression()), !dbg !21587
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !21588, metadata !DIExpression()), !dbg !21589
  call void @llvm.dbg.declare(metadata i32* %s, metadata !21590, metadata !DIExpression()), !dbg !21591
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !21592, metadata !DIExpression()), !dbg !21593
  store i32 0, i32* %rc, align 4, !dbg !21593
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount* %cprev, metadata !21594, metadata !DIExpression()), !dbg !21595
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount* %cnow, metadata !21596, metadata !DIExpression()), !dbg !21597
  call void @llvm.dbg.declare(metadata i32* %events, metadata !21598, metadata !DIExpression()), !dbg !21599
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !21600, metadata !DIExpression()), !dbg !21601
  call void @llvm.dbg.declare(metadata %struct._input_signal_events* %oldsigs, metadata !21602, metadata !DIExpression()), !dbg !21603
  call void @llvm.dbg.declare(metadata %struct._input_signal_events* %newsigs, metadata !21604, metadata !DIExpression()), !dbg !21605
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !21606, metadata !DIExpression()), !dbg !21607
  %flags1 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !21607
  store i32 0, i32* %flags1, align 8, !dbg !21607
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !21607
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !21582
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !21582
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !21583, !srcloc !19961
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !21583
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !21583
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !21583
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !21583
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !21583
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !21580
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !21580
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !21580
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !21580
  %7 = bitcast %struct.task_struct* %6 to i8*, !dbg !21607
  store i8* %7, i8** %private, align 8, !dbg !21607
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !21607
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !21607
  %entry2 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !21607
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 0, !dbg !21607
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !21607
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 1, !dbg !21607
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !21607
  %8 = bitcast i32* %mask to i8*, !dbg !21608
  %9 = load i32*, i32** %mask_ptr.addr, align 8, !dbg !21608
  %10 = bitcast i32* %9 to i8*, !dbg !21608
  store i8* %8, i8** %to.addr.i, align 8
  store i8* %10, i8** %from.addr.i, align 8
  store i64 4, i64* %n.addr.i, align 8
  %11 = load i8*, i8** %to.addr.i, align 8, !dbg !21609
  %12 = load i64, i64* %n.addr.i, align 8, !dbg !21609
  store i8* %11, i8** %addr.addr.i.i, align 8
  store i64 %12, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !21575
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !21610
  %cmp.i.i = icmp sge i32 %13, 0, !dbg !21610
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !21610

land.rhs.i.i:                                     ; preds = %entry
  %14 = load i32, i32* %sz.i.i, align 4, !dbg !21610
  %conv.i.i = sext i32 %14 to i64, !dbg !21610
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21610
  %cmp1.i.i = icmp ult i64 %conv.i.i, %15, !dbg !21610
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %16 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !21611
  %lnot.i.i = xor i1 %16, true, !dbg !21610
  %lnot.ext.i.i = zext i1 %16 to i32, !dbg !21610
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !21610
  br i1 %16, label %if.then.i.i, label %if.end10.i.i, !dbg !21612

if.then.i.i:                                      ; preds = %land.end.i.i
  %17 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21613
  %18 = call i1 @llvm.is.constant.i64(i64 %17) #10, !dbg !21614
  br i1 %18, label %if.else.i.i, label %if.then5.i.i, !dbg !21615

if.then5.i.i:                                     ; preds = %if.then.i.i
  %19 = load i32, i32* %sz.i.i, align 4, !dbg !21616
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21617
  call void @copy_overflow(i32 %19, i64 %20) #14, !dbg !21618
  br label %if.end9.i.i, !dbg !21618

if.else.i.i:                                      ; preds = %if.then.i.i
  %21 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !21619
  %tobool6.i.i = trunc i8 %21 to i1, !dbg !21619
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !21620

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !21621
  br label %if.end.i.i, !dbg !21621

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !21622
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !21623
  br label %check_copy_size.exit.i, !dbg !21623

if.end10.i.i:                                     ; preds = %land.end.i.i
  %22 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21576
  %cmp11.i.i = icmp ugt i64 %22, 2147483647, !dbg !21576
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !21576
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !21576
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !21576
  %23 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !21624
  %tobool17.i.i = icmp ne i32 %23, 0, !dbg !21624
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !21624
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !21624
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !21624
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !21576

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !21625, !srcloc !11834
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !21626, !srcloc !11837
  br label %if.end31.i.i, !dbg !21627

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %24 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !21576
  %tobool32.i.i = icmp ne i32 %24, 0, !dbg !21576
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !21576
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !21576
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !21576
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !21624
  %25 = load i64, i64* %tmp.i.i, align 8, !dbg !21576
  %tobool38.i.i = icmp ne i64 %25, 0, !dbg !21628
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !21629

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !21630
  br label %check_copy_size.exit.i, !dbg !21630

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %26 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !21631
  %27 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !21632
  %28 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !21633
  %tobool41.i.i = trunc i8 %28 to i1, !dbg !21633
  call void @check_object_size(i8* %26, i64 %27, i1 zeroext %tobool41.i.i) #14, !dbg !21634
  store i1 true, i1* %retval.i.i, align 1, !dbg !21635
  br label %check_copy_size.exit.i, !dbg !21635

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %29 = load i1, i1* %retval.i.i, align 1, !dbg !21636
  %lnot.i = xor i1 %29, true, !dbg !21609
  %lnot.ext.i = zext i1 %29 to i32, !dbg !21609
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !21609
  br i1 %29, label %if.then.i, label %copy_from_user.exit, !dbg !21637

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %30 = load i8*, i8** %to.addr.i, align 8, !dbg !21638
  %31 = load i8*, i8** %from.addr.i, align 8, !dbg !21639
  %32 = load i64, i64* %n.addr.i, align 8, !dbg !21640
  %call2.i = call i64 @_copy_from_user(i8* %30, i8* %31, i64 %32) #14, !dbg !21641
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !21642
  br label %copy_from_user.exit, !dbg !21643

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %33 = load i64, i64* %n.addr.i, align 8, !dbg !21644
  %tobool = icmp ne i64 %33, 0, !dbg !21608
  %34 = zext i1 %tobool to i64, !dbg !21608
  %cond = select i1 %tobool, i32 -14, i32 0, !dbg !21608
  store i32 %cond, i32* %rc, align 4, !dbg !21608
  %35 = load i32, i32* %rc, align 4, !dbg !21645
  %tobool4 = icmp ne i32 %35, 0, !dbg !21645
  br i1 %tobool4, label %if.then, label %if.end, !dbg !21647

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !21648
  br label %return, !dbg !21648

if.end:                                           ; preds = %copy_from_user.exit
  %36 = load i32, i32* @debug_level, align 4, !dbg !21650
  %cmp = icmp sge i32 %36, 3, !dbg !21652
  br i1 %cmp, label %if.then5, label %if.end7, !dbg !21653

if.then5:                                         ; preds = %if.end
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21654
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 56, !dbg !21655
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !21654
  %38 = load i32, i32* %mask, align 4, !dbg !21656
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 2671, i8* %arraydecay, i32 %38) #12, !dbg !21657
  br label %if.end7, !dbg !21657

if.end7:                                          ; preds = %if.then5, %if.end
  br label %do.body, !dbg !21658

do.body:                                          ; preds = %if.end7
  br label %do.body8, !dbg !21659

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !21660, metadata !DIExpression()), !dbg !21662
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !21663, metadata !DIExpression()), !dbg !21662
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !21662
  %conv = zext i1 %cmp9 to i32, !dbg !21662
  store i32 1, i32* %tmp, align 4, !dbg !21662
  %39 = load i32, i32* %tmp, align 4, !dbg !21662
  br label %do.body10, !dbg !21664

do.body10:                                        ; preds = %do.body8
  br label %do.body11, !dbg !21665

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !21666

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !21668, metadata !DIExpression()), !dbg !21671
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !21672, metadata !DIExpression()), !dbg !21671
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !21671
  %conv16 = zext i1 %cmp15 to i32, !dbg !21671
  store i32 1, i32* %tmp17, align 4, !dbg !21671
  %40 = load i32, i32* %tmp17, align 4, !dbg !21671
  %call18 = call i64 @arch_local_irq_save() #11, !dbg !21673
  store i64 %call18, i64* %flags, align 8, !dbg !21673
  br label %do.end, !dbg !21673

do.end:                                           ; preds = %do.body12
  br label %do.end19, !dbg !21666

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !21665

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21674, !srcloc !21675
  br label %do.body21, !dbg !21674

do.body21:                                        ; preds = %do.body20
  %41 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21676
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %41, i32 0, i32 17, !dbg !21676
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21677
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !21678
  %rlock.i = bitcast %union.anon.1* %43 to %struct.raw_spinlock*, !dbg !21678
  br label %do.end23, !dbg !21676

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !21674

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !21665

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !21664

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !21659

do.end27:                                         ; preds = %do.end26
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21679
  call void @usc_get_serial_signals(%struct.mgsl_struct* %44) #11, !dbg !21680
  %45 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21681
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %45, i32 0, i32 71, !dbg !21682
  %46 = load i8, i8* %serial_signals, align 8, !dbg !21682
  %conv28 = zext i8 %46 to i32, !dbg !21681
  store i32 %conv28, i32* %s, align 4, !dbg !21683
  %47 = load i32, i32* %mask, align 4, !dbg !21684
  %48 = load i32, i32* %s, align 4, !dbg !21685
  %and = and i32 %48, 64, !dbg !21686
  %tobool29 = icmp ne i32 %and, 0, !dbg !21687
  %49 = zext i1 %tobool29 to i64, !dbg !21687
  %cond30 = select i1 %tobool29, i32 1, i32 2, !dbg !21687
  %50 = load i32, i32* %s, align 4, !dbg !21688
  %and31 = and i32 %50, 1, !dbg !21689
  %tobool32 = icmp ne i32 %and31, 0, !dbg !21690
  %51 = zext i1 %tobool32 to i64, !dbg !21690
  %cond33 = select i1 %tobool32, i32 16, i32 32, !dbg !21690
  %add = add i32 %cond30, %cond33, !dbg !21691
  %52 = load i32, i32* %s, align 4, !dbg !21692
  %and34 = and i32 %52, 16, !dbg !21693
  %tobool35 = icmp ne i32 %and34, 0, !dbg !21694
  %53 = zext i1 %tobool35 to i64, !dbg !21694
  %cond36 = select i1 %tobool35, i32 4, i32 8, !dbg !21694
  %add37 = add i32 %add, %cond36, !dbg !21695
  %54 = load i32, i32* %s, align 4, !dbg !21696
  %and38 = and i32 %54, 4, !dbg !21697
  %tobool39 = icmp ne i32 %and38, 0, !dbg !21698
  %55 = zext i1 %tobool39 to i64, !dbg !21698
  %cond40 = select i1 %tobool39, i32 64, i32 128, !dbg !21698
  %add41 = add i32 %add37, %cond40, !dbg !21699
  %and42 = and i32 %47, %add41, !dbg !21700
  store i32 %and42, i32* %events, align 4, !dbg !21701
  %56 = load i32, i32* %events, align 4, !dbg !21702
  %tobool43 = icmp ne i32 %56, 0, !dbg !21702
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !21703

if.then44:                                        ; preds = %do.end27
  %57 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21704
  %irq_spinlock45 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %57, i32 0, i32 17, !dbg !21705
  %58 = load i64, i64* %flags, align 8, !dbg !21706
  store %struct.spinlock* %irq_spinlock45, %struct.spinlock** %lock.addr.i287, align 8
  store i64 %58, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !21707
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !21707
  store i32 1, i32* %tmp.i288, align 4, !dbg !21707
  %59 = load i32, i32* %tmp.i288, align 4, !dbg !21707
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !21708
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !21708
  store i32 1, i32* %tmp8.i, align 4, !dbg !21708
  %60 = load i32, i32* %tmp8.i, align 4, !dbg !21708
  %61 = load i64, i64* %flags.addr.i, align 8, !dbg !21709
  call void @arch_local_irq_restore(i64 %61) #14, !dbg !21709
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21710, !srcloc !9373
  %62 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i287, align 8, !dbg !21711
  %63 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %62, i32 0, i32 0, !dbg !21711
  %rlock.i289 = bitcast %union.anon.1* %63 to %struct.raw_spinlock*, !dbg !21711
  br label %exit, !dbg !21712

if.end46:                                         ; preds = %do.end27
  %64 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21713
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %64, i32 0, i32 4, !dbg !21714
  %65 = bitcast %struct.mgsl_icount* %cprev to i8*, !dbg !21714
  %66 = bitcast %struct.mgsl_icount* %icount to i8*, !dbg !21714
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 8 %66, i64 92, i1 false), !dbg !21714
  %67 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21715
  %input_signal_events = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %67, i32 0, i32 88, !dbg !21716
  %68 = bitcast %struct._input_signal_events* %oldsigs to i8*, !dbg !21716
  %69 = bitcast %struct._input_signal_events* %input_signal_events to i8*, !dbg !21716
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 32, i1 false), !dbg !21716
  %70 = load i32, i32* %mask, align 4, !dbg !21717
  %and47 = and i32 %70, 768, !dbg !21719
  %tobool48 = icmp ne i32 %and47, 0, !dbg !21719
  br i1 %tobool48, label %if.then49, label %if.end67, !dbg !21720

if.then49:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i16* %oldreg, metadata !21721, metadata !DIExpression()), !dbg !21723
  %71 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21724
  %call50 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %71, i16 zeroext 38) #11, !dbg !21725
  store i16 %call50, i16* %oldreg, align 2, !dbg !21723
  call void @llvm.dbg.declare(metadata i16* %newreg, metadata !21726, metadata !DIExpression()), !dbg !21727
  %72 = load i16, i16* %oldreg, align 2, !dbg !21728
  %conv51 = zext i16 %72 to i32, !dbg !21728
  %73 = load i32, i32* %mask, align 4, !dbg !21729
  %and52 = and i32 %73, 256, !dbg !21730
  %tobool53 = icmp ne i32 %and52, 0, !dbg !21729
  %74 = zext i1 %tobool53 to i64, !dbg !21729
  %cond54 = select i1 %tobool53, i32 128, i32 0, !dbg !21729
  %add55 = add i32 %conv51, %cond54, !dbg !21731
  %75 = load i32, i32* %mask, align 4, !dbg !21732
  %and56 = and i32 %75, 512, !dbg !21733
  %tobool57 = icmp ne i32 %and56, 0, !dbg !21732
  %76 = zext i1 %tobool57 to i64, !dbg !21732
  %cond58 = select i1 %tobool57, i32 64, i32 0, !dbg !21732
  %add59 = add i32 %add55, %cond58, !dbg !21734
  %conv60 = trunc i32 %add59 to i16, !dbg !21728
  store i16 %conv60, i16* %newreg, align 2, !dbg !21727
  %77 = load i16, i16* %oldreg, align 2, !dbg !21735
  %conv61 = zext i16 %77 to i32, !dbg !21735
  %78 = load i16, i16* %newreg, align 2, !dbg !21737
  %conv62 = zext i16 %78 to i32, !dbg !21737
  %cmp63 = icmp ne i32 %conv61, %conv62, !dbg !21738
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !21739

if.then65:                                        ; preds = %if.then49
  %79 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21740
  %80 = load i16, i16* %newreg, align 2, !dbg !21741
  call void @usc_OutReg(%struct.mgsl_struct* %79, i16 zeroext 38, i16 zeroext %80) #11, !dbg !21742
  br label %if.end66, !dbg !21742

if.end66:                                         ; preds = %if.then65, %if.then49
  br label %if.end67, !dbg !21743

if.end67:                                         ; preds = %if.end66, %if.end46
  br label %do.body68, !dbg !21744

do.body68:                                        ; preds = %if.end67
  br label %do.body69, !dbg !21745

do.body69:                                        ; preds = %do.body68
  br label %do.body70, !dbg !21746

do.body70:                                        ; preds = %do.body69
  br label %do.end71, !dbg !21747

do.end71:                                         ; preds = %do.body70
  br label %do.body72, !dbg !21746

do.body72:                                        ; preds = %do.end71
  store i8* null, i8** %__vpp_verify.i291, align 8, !dbg !21556
  %81 = load i8*, i8** %__vpp_verify.i291, align 8, !dbg !21556
  %82 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !21557, !srcloc !19961
  store i64 %82, i64* %pfo_val__.i292, align 8, !dbg !21557
  %83 = load i64, i64* %pfo_val__.i292, align 8, !dbg !21557
  %84 = inttoptr i64 %83 to %struct.task_struct*, !dbg !21557
  store %struct.task_struct* %84, %struct.task_struct** %tmp.i293, align 8, !dbg !21557
  %85 = load %struct.task_struct*, %struct.task_struct** %tmp.i293, align 8, !dbg !21557
  store %struct.task_struct* %85, %struct.task_struct** %pscr_ret__.i290, align 8, !dbg !21551
  %86 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i290, align 8, !dbg !21551
  store %struct.task_struct* %86, %struct.task_struct** %tmp1.i294, align 8, !dbg !21551
  %87 = load %struct.task_struct*, %struct.task_struct** %tmp1.i294, align 8, !dbg !21551
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %87, i32 0, i32 1, !dbg !21749
  store volatile i64 1, i64* %state, align 16, !dbg !21749
  br label %do.end74, !dbg !21749

do.end74:                                         ; preds = %do.body72
  br label %do.end75, !dbg !21746

do.end75:                                         ; preds = %do.end74
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21745, !srcloc !21750
  br label %do.end76, !dbg !21745

do.end76:                                         ; preds = %do.end75
  %88 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21751
  %event_wait_q = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %88, i32 0, i32 14, !dbg !21752
  call void @add_wait_queue(%struct.wait_queue_head* %event_wait_q, %struct.wait_queue_entry* %wait) #11, !dbg !21753
  %89 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21754
  %irq_spinlock77 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %89, i32 0, i32 17, !dbg !21755
  %90 = load i64, i64* %flags, align 8, !dbg !21756
  store %struct.spinlock* %irq_spinlock77, %struct.spinlock** %lock.addr.i295, align 8
  store i64 %90, i64* %flags.addr.i296, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !21757
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !21757
  store i32 1, i32* %tmp.i297, align 4, !dbg !21757
  %91 = load i32, i32* %tmp.i297, align 4, !dbg !21757
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !21758
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !21758
  store i32 1, i32* %tmp8.i298, align 4, !dbg !21758
  %92 = load i32, i32* %tmp8.i298, align 4, !dbg !21758
  %93 = load i64, i64* %flags.addr.i296, align 8, !dbg !21759
  call void @arch_local_irq_restore(i64 %93) #14, !dbg !21759
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21760, !srcloc !9373
  %94 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i295, align 8, !dbg !21761
  %95 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %94, i32 0, i32 0, !dbg !21761
  %rlock.i299 = bitcast %union.anon.1* %95 to %struct.raw_spinlock*, !dbg !21761
  br label %for.cond, !dbg !21762

for.cond:                                         ; preds = %if.end225, %do.end76
  call void @schedule() #11, !dbg !21763
  store i8* null, i8** %__vpp_verify.i301, align 8, !dbg !21546
  %96 = load i8*, i8** %__vpp_verify.i301, align 8, !dbg !21546
  %97 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !21547, !srcloc !19961
  store i64 %97, i64* %pfo_val__.i302, align 8, !dbg !21547
  %98 = load i64, i64* %pfo_val__.i302, align 8, !dbg !21547
  %99 = inttoptr i64 %98 to %struct.task_struct*, !dbg !21547
  store %struct.task_struct* %99, %struct.task_struct** %tmp.i303, align 8, !dbg !21547
  %100 = load %struct.task_struct*, %struct.task_struct** %tmp.i303, align 8, !dbg !21547
  store %struct.task_struct* %100, %struct.task_struct** %pscr_ret__.i300, align 8, !dbg !21543
  %101 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i300, align 8, !dbg !21543
  store %struct.task_struct* %101, %struct.task_struct** %tmp1.i304, align 8, !dbg !21543
  %102 = load %struct.task_struct*, %struct.task_struct** %tmp1.i304, align 8, !dbg !21543
  %call79 = call i32 @signal_pending(%struct.task_struct* %102) #11, !dbg !21764
  %tobool80 = icmp ne i32 %call79, 0, !dbg !21764
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !21765

if.then81:                                        ; preds = %for.cond
  store i32 -512, i32* %rc, align 4, !dbg !21766
  br label %for.end, !dbg !21768

if.end82:                                         ; preds = %for.cond
  br label %do.body83, !dbg !21769

do.body83:                                        ; preds = %if.end82
  br label %do.body84, !dbg !21770

do.body84:                                        ; preds = %do.body83
  call void @llvm.dbg.declare(metadata i64* %__dummy85, metadata !21771, metadata !DIExpression()), !dbg !21773
  call void @llvm.dbg.declare(metadata i64* %__dummy286, metadata !21774, metadata !DIExpression()), !dbg !21773
  %cmp87 = icmp eq i64* %__dummy85, %__dummy286, !dbg !21773
  %conv88 = zext i1 %cmp87 to i32, !dbg !21773
  store i32 1, i32* %tmp89, align 4, !dbg !21773
  %103 = load i32, i32* %tmp89, align 4, !dbg !21773
  br label %do.body90, !dbg !21775

do.body90:                                        ; preds = %do.body84
  br label %do.body91, !dbg !21776

do.body91:                                        ; preds = %do.body90
  br label %do.body92, !dbg !21777

do.body92:                                        ; preds = %do.body91
  call void @llvm.dbg.declare(metadata i64* %__dummy93, metadata !21779, metadata !DIExpression()), !dbg !21782
  call void @llvm.dbg.declare(metadata i64* %__dummy294, metadata !21783, metadata !DIExpression()), !dbg !21782
  %cmp95 = icmp eq i64* %__dummy93, %__dummy294, !dbg !21782
  %conv96 = zext i1 %cmp95 to i32, !dbg !21782
  store i32 1, i32* %tmp97, align 4, !dbg !21782
  %104 = load i32, i32* %tmp97, align 4, !dbg !21782
  %call98 = call i64 @arch_local_irq_save() #11, !dbg !21784
  store i64 %call98, i64* %flags, align 8, !dbg !21784
  br label %do.end99, !dbg !21784

do.end99:                                         ; preds = %do.body92
  br label %do.end100, !dbg !21777

do.end100:                                        ; preds = %do.end99
  br label %do.body101, !dbg !21776

do.body101:                                       ; preds = %do.end100
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21785, !srcloc !21786
  br label %do.body102, !dbg !21785

do.body102:                                       ; preds = %do.body101
  %105 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21787
  %irq_spinlock103 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %105, i32 0, i32 17, !dbg !21787
  store %struct.spinlock* %irq_spinlock103, %struct.spinlock** %lock.addr.i305, align 8
  %106 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i305, align 8, !dbg !21788
  %107 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %106, i32 0, i32 0, !dbg !21789
  %rlock.i306 = bitcast %union.anon.1* %107 to %struct.raw_spinlock*, !dbg !21789
  br label %do.end105, !dbg !21787

do.end105:                                        ; preds = %do.body102
  br label %do.end106, !dbg !21785

do.end106:                                        ; preds = %do.end105
  br label %do.end107, !dbg !21776

do.end107:                                        ; preds = %do.end106
  br label %do.end108, !dbg !21775

do.end108:                                        ; preds = %do.end107
  br label %do.end109, !dbg !21770

do.end109:                                        ; preds = %do.end108
  %108 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21790
  %icount110 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %108, i32 0, i32 4, !dbg !21791
  %109 = bitcast %struct.mgsl_icount* %cnow to i8*, !dbg !21791
  %110 = bitcast %struct.mgsl_icount* %icount110 to i8*, !dbg !21791
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 8 %110, i64 92, i1 false), !dbg !21791
  %111 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21792
  %input_signal_events111 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %111, i32 0, i32 88, !dbg !21793
  %112 = bitcast %struct._input_signal_events* %newsigs to i8*, !dbg !21793
  %113 = bitcast %struct._input_signal_events* %input_signal_events111 to i8*, !dbg !21793
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64 32, i1 false), !dbg !21793
  br label %do.body112, !dbg !21794

do.body112:                                       ; preds = %do.end109
  br label %do.body113, !dbg !21795

do.body113:                                       ; preds = %do.body112
  br label %do.body114, !dbg !21796

do.body114:                                       ; preds = %do.body113
  br label %do.end115, !dbg !21797

do.end115:                                        ; preds = %do.body114
  br label %do.body116, !dbg !21796

do.body116:                                       ; preds = %do.end115
  store i8* null, i8** %__vpp_verify.i308, align 8, !dbg !21534
  %114 = load i8*, i8** %__vpp_verify.i308, align 8, !dbg !21534
  %115 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !21535, !srcloc !19961
  store i64 %115, i64* %pfo_val__.i309, align 8, !dbg !21535
  %116 = load i64, i64* %pfo_val__.i309, align 8, !dbg !21535
  %117 = inttoptr i64 %116 to %struct.task_struct*, !dbg !21535
  store %struct.task_struct* %117, %struct.task_struct** %tmp.i310, align 8, !dbg !21535
  %118 = load %struct.task_struct*, %struct.task_struct** %tmp.i310, align 8, !dbg !21535
  store %struct.task_struct* %118, %struct.task_struct** %pscr_ret__.i307, align 8, !dbg !21529
  %119 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i307, align 8, !dbg !21529
  store %struct.task_struct* %119, %struct.task_struct** %tmp1.i311, align 8, !dbg !21529
  %120 = load %struct.task_struct*, %struct.task_struct** %tmp1.i311, align 8, !dbg !21529
  %state118 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %120, i32 0, i32 1, !dbg !21799
  store volatile i64 1, i64* %state118, align 16, !dbg !21799
  br label %do.end119, !dbg !21799

do.end119:                                        ; preds = %do.body116
  br label %do.end120, !dbg !21796

do.end120:                                        ; preds = %do.end119
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21795, !srcloc !21800
  br label %do.end121, !dbg !21795

do.end121:                                        ; preds = %do.end120
  %121 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21801
  %irq_spinlock122 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %121, i32 0, i32 17, !dbg !21802
  %122 = load i64, i64* %flags, align 8, !dbg !21803
  store %struct.spinlock* %irq_spinlock122, %struct.spinlock** %lock.addr.i312, align 8
  store i64 %122, i64* %flags.addr.i313, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !21804
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !21804
  store i32 1, i32* %tmp.i314, align 4, !dbg !21804
  %123 = load i32, i32* %tmp.i314, align 4, !dbg !21804
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !21805
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !21805
  store i32 1, i32* %tmp8.i315, align 4, !dbg !21805
  %124 = load i32, i32* %tmp8.i315, align 4, !dbg !21805
  %125 = load i64, i64* %flags.addr.i313, align 8, !dbg !21806
  call void @arch_local_irq_restore(i64 %125) #14, !dbg !21806
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21807, !srcloc !9373
  %126 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i312, align 8, !dbg !21808
  %127 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %126, i32 0, i32 0, !dbg !21808
  %rlock.i316 = bitcast %union.anon.1* %127 to %struct.raw_spinlock*, !dbg !21808
  %dsr_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 2, !dbg !21809
  %128 = load i32, i32* %dsr_up, align 4, !dbg !21809
  %dsr_up123 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 2, !dbg !21811
  %129 = load i32, i32* %dsr_up123, align 4, !dbg !21811
  %cmp124 = icmp eq i32 %128, %129, !dbg !21812
  br i1 %cmp124, label %land.lhs.true, label %if.end162, !dbg !21813

land.lhs.true:                                    ; preds = %do.end121
  %dsr_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 3, !dbg !21814
  %130 = load i32, i32* %dsr_down, align 4, !dbg !21814
  %dsr_down126 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 3, !dbg !21815
  %131 = load i32, i32* %dsr_down126, align 4, !dbg !21815
  %cmp127 = icmp eq i32 %130, %131, !dbg !21816
  br i1 %cmp127, label %land.lhs.true129, label %if.end162, !dbg !21817

land.lhs.true129:                                 ; preds = %land.lhs.true
  %dcd_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 4, !dbg !21818
  %132 = load i32, i32* %dcd_up, align 4, !dbg !21818
  %dcd_up130 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 4, !dbg !21819
  %133 = load i32, i32* %dcd_up130, align 4, !dbg !21819
  %cmp131 = icmp eq i32 %132, %133, !dbg !21820
  br i1 %cmp131, label %land.lhs.true133, label %if.end162, !dbg !21821

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %dcd_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 5, !dbg !21822
  %134 = load i32, i32* %dcd_down, align 4, !dbg !21822
  %dcd_down134 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 5, !dbg !21823
  %135 = load i32, i32* %dcd_down134, align 4, !dbg !21823
  %cmp135 = icmp eq i32 %134, %135, !dbg !21824
  br i1 %cmp135, label %land.lhs.true137, label %if.end162, !dbg !21825

land.lhs.true137:                                 ; preds = %land.lhs.true133
  %cts_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 6, !dbg !21826
  %136 = load i32, i32* %cts_up, align 4, !dbg !21826
  %cts_up138 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 6, !dbg !21827
  %137 = load i32, i32* %cts_up138, align 4, !dbg !21827
  %cmp139 = icmp eq i32 %136, %137, !dbg !21828
  br i1 %cmp139, label %land.lhs.true141, label %if.end162, !dbg !21829

land.lhs.true141:                                 ; preds = %land.lhs.true137
  %cts_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 7, !dbg !21830
  %138 = load i32, i32* %cts_down, align 4, !dbg !21830
  %cts_down142 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 7, !dbg !21831
  %139 = load i32, i32* %cts_down142, align 4, !dbg !21831
  %cmp143 = icmp eq i32 %138, %139, !dbg !21832
  br i1 %cmp143, label %land.lhs.true145, label %if.end162, !dbg !21833

land.lhs.true145:                                 ; preds = %land.lhs.true141
  %ri_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 0, !dbg !21834
  %140 = load i32, i32* %ri_up, align 4, !dbg !21834
  %ri_up146 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 0, !dbg !21835
  %141 = load i32, i32* %ri_up146, align 4, !dbg !21835
  %cmp147 = icmp eq i32 %140, %141, !dbg !21836
  br i1 %cmp147, label %land.lhs.true149, label %if.end162, !dbg !21837

land.lhs.true149:                                 ; preds = %land.lhs.true145
  %ri_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 1, !dbg !21838
  %142 = load i32, i32* %ri_down, align 4, !dbg !21838
  %ri_down150 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 1, !dbg !21839
  %143 = load i32, i32* %ri_down150, align 4, !dbg !21839
  %cmp151 = icmp eq i32 %142, %143, !dbg !21840
  br i1 %cmp151, label %land.lhs.true153, label %if.end162, !dbg !21841

land.lhs.true153:                                 ; preds = %land.lhs.true149
  %exithunt = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 21, !dbg !21842
  %144 = load i32, i32* %exithunt, align 4, !dbg !21842
  %exithunt154 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 21, !dbg !21843
  %145 = load i32, i32* %exithunt154, align 4, !dbg !21843
  %cmp155 = icmp eq i32 %144, %145, !dbg !21844
  br i1 %cmp155, label %land.lhs.true157, label %if.end162, !dbg !21845

land.lhs.true157:                                 ; preds = %land.lhs.true153
  %rxidle = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 22, !dbg !21846
  %146 = load i32, i32* %rxidle, align 4, !dbg !21846
  %rxidle158 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 22, !dbg !21847
  %147 = load i32, i32* %rxidle158, align 4, !dbg !21847
  %cmp159 = icmp eq i32 %146, %147, !dbg !21848
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !21849

if.then161:                                       ; preds = %land.lhs.true157
  store i32 -5, i32* %rc, align 4, !dbg !21850
  br label %for.end, !dbg !21852

if.end162:                                        ; preds = %land.lhs.true157, %land.lhs.true153, %land.lhs.true149, %land.lhs.true145, %land.lhs.true141, %land.lhs.true137, %land.lhs.true133, %land.lhs.true129, %land.lhs.true, %do.end121
  %148 = load i32, i32* %mask, align 4, !dbg !21853
  %dsr_up163 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 2, !dbg !21854
  %149 = load i32, i32* %dsr_up163, align 4, !dbg !21854
  %dsr_up164 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 2, !dbg !21855
  %150 = load i32, i32* %dsr_up164, align 4, !dbg !21855
  %cmp165 = icmp ne i32 %149, %150, !dbg !21856
  %151 = zext i1 %cmp165 to i64, !dbg !21857
  %cond167 = select i1 %cmp165, i32 1, i32 0, !dbg !21857
  %dsr_down168 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 3, !dbg !21858
  %152 = load i32, i32* %dsr_down168, align 4, !dbg !21858
  %dsr_down169 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 3, !dbg !21859
  %153 = load i32, i32* %dsr_down169, align 4, !dbg !21859
  %cmp170 = icmp ne i32 %152, %153, !dbg !21860
  %154 = zext i1 %cmp170 to i64, !dbg !21861
  %cond172 = select i1 %cmp170, i32 2, i32 0, !dbg !21861
  %add173 = add i32 %cond167, %cond172, !dbg !21862
  %dcd_up174 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 4, !dbg !21863
  %155 = load i32, i32* %dcd_up174, align 4, !dbg !21863
  %dcd_up175 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 4, !dbg !21864
  %156 = load i32, i32* %dcd_up175, align 4, !dbg !21864
  %cmp176 = icmp ne i32 %155, %156, !dbg !21865
  %157 = zext i1 %cmp176 to i64, !dbg !21866
  %cond178 = select i1 %cmp176, i32 16, i32 0, !dbg !21866
  %add179 = add i32 %add173, %cond178, !dbg !21867
  %dcd_down180 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 5, !dbg !21868
  %158 = load i32, i32* %dcd_down180, align 4, !dbg !21868
  %dcd_down181 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 5, !dbg !21869
  %159 = load i32, i32* %dcd_down181, align 4, !dbg !21869
  %cmp182 = icmp ne i32 %158, %159, !dbg !21870
  %160 = zext i1 %cmp182 to i64, !dbg !21871
  %cond184 = select i1 %cmp182, i32 32, i32 0, !dbg !21871
  %add185 = add i32 %add179, %cond184, !dbg !21872
  %cts_up186 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 6, !dbg !21873
  %161 = load i32, i32* %cts_up186, align 4, !dbg !21873
  %cts_up187 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 6, !dbg !21874
  %162 = load i32, i32* %cts_up187, align 4, !dbg !21874
  %cmp188 = icmp ne i32 %161, %162, !dbg !21875
  %163 = zext i1 %cmp188 to i64, !dbg !21876
  %cond190 = select i1 %cmp188, i32 4, i32 0, !dbg !21876
  %add191 = add i32 %add185, %cond190, !dbg !21877
  %cts_down192 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 7, !dbg !21878
  %164 = load i32, i32* %cts_down192, align 4, !dbg !21878
  %cts_down193 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 7, !dbg !21879
  %165 = load i32, i32* %cts_down193, align 4, !dbg !21879
  %cmp194 = icmp ne i32 %164, %165, !dbg !21880
  %166 = zext i1 %cmp194 to i64, !dbg !21881
  %cond196 = select i1 %cmp194, i32 8, i32 0, !dbg !21881
  %add197 = add i32 %add191, %cond196, !dbg !21882
  %ri_up198 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 0, !dbg !21883
  %167 = load i32, i32* %ri_up198, align 4, !dbg !21883
  %ri_up199 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 0, !dbg !21884
  %168 = load i32, i32* %ri_up199, align 4, !dbg !21884
  %cmp200 = icmp ne i32 %167, %168, !dbg !21885
  %169 = zext i1 %cmp200 to i64, !dbg !21886
  %cond202 = select i1 %cmp200, i32 64, i32 0, !dbg !21886
  %add203 = add i32 %add197, %cond202, !dbg !21887
  %ri_down204 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 1, !dbg !21888
  %170 = load i32, i32* %ri_down204, align 4, !dbg !21888
  %ri_down205 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 1, !dbg !21889
  %171 = load i32, i32* %ri_down205, align 4, !dbg !21889
  %cmp206 = icmp ne i32 %170, %171, !dbg !21890
  %172 = zext i1 %cmp206 to i64, !dbg !21891
  %cond208 = select i1 %cmp206, i32 128, i32 0, !dbg !21891
  %add209 = add i32 %add203, %cond208, !dbg !21892
  %exithunt210 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 21, !dbg !21893
  %173 = load i32, i32* %exithunt210, align 4, !dbg !21893
  %exithunt211 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 21, !dbg !21894
  %174 = load i32, i32* %exithunt211, align 4, !dbg !21894
  %cmp212 = icmp ne i32 %173, %174, !dbg !21895
  %175 = zext i1 %cmp212 to i64, !dbg !21896
  %cond214 = select i1 %cmp212, i32 256, i32 0, !dbg !21896
  %add215 = add i32 %add209, %cond214, !dbg !21897
  %rxidle216 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 22, !dbg !21898
  %176 = load i32, i32* %rxidle216, align 4, !dbg !21898
  %rxidle217 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 22, !dbg !21899
  %177 = load i32, i32* %rxidle217, align 4, !dbg !21899
  %cmp218 = icmp ne i32 %176, %177, !dbg !21900
  %178 = zext i1 %cmp218 to i64, !dbg !21901
  %cond220 = select i1 %cmp218, i32 512, i32 0, !dbg !21901
  %add221 = add i32 %add215, %cond220, !dbg !21902
  %and222 = and i32 %148, %add221, !dbg !21903
  store i32 %and222, i32* %events, align 4, !dbg !21904
  %179 = load i32, i32* %events, align 4, !dbg !21905
  %tobool223 = icmp ne i32 %179, 0, !dbg !21905
  br i1 %tobool223, label %if.then224, label %if.end225, !dbg !21907

if.then224:                                       ; preds = %if.end162
  br label %for.end, !dbg !21908

if.end225:                                        ; preds = %if.end162
  %180 = bitcast %struct.mgsl_icount* %cprev to i8*, !dbg !21909
  %181 = bitcast %struct.mgsl_icount* %cnow to i8*, !dbg !21909
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %180, i8* align 4 %181, i64 92, i1 false), !dbg !21909
  %182 = bitcast %struct._input_signal_events* %oldsigs to i8*, !dbg !21910
  %183 = bitcast %struct._input_signal_events* %newsigs to i8*, !dbg !21910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %182, i8* align 4 %183, i64 32, i1 false), !dbg !21910
  br label %for.cond, !dbg !21911, !llvm.loop !21912

for.end:                                          ; preds = %if.then224, %if.then161, %if.then81
  %184 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21915
  %event_wait_q226 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %184, i32 0, i32 14, !dbg !21916
  call void @remove_wait_queue(%struct.wait_queue_head* %event_wait_q226, %struct.wait_queue_entry* %wait) #11, !dbg !21917
  br label %do.body227, !dbg !21918

do.body227:                                       ; preds = %for.end
  br label %do.body228, !dbg !21919

do.body228:                                       ; preds = %do.body227
  br label %do.body229, !dbg !21920

do.body229:                                       ; preds = %do.body228
  br label %do.end230, !dbg !21921

do.end230:                                        ; preds = %do.body229
  br label %do.body231, !dbg !21920

do.body231:                                       ; preds = %do.end230
  store i8* null, i8** %__vpp_verify.i318, align 8, !dbg !21521
  %185 = load i8*, i8** %__vpp_verify.i318, align 8, !dbg !21521
  %186 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !21522, !srcloc !19961
  store i64 %186, i64* %pfo_val__.i319, align 8, !dbg !21522
  %187 = load i64, i64* %pfo_val__.i319, align 8, !dbg !21522
  %188 = inttoptr i64 %187 to %struct.task_struct*, !dbg !21522
  store %struct.task_struct* %188, %struct.task_struct** %tmp.i320, align 8, !dbg !21522
  %189 = load %struct.task_struct*, %struct.task_struct** %tmp.i320, align 8, !dbg !21522
  store %struct.task_struct* %189, %struct.task_struct** %pscr_ret__.i317, align 8, !dbg !21516
  %190 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i317, align 8, !dbg !21516
  store %struct.task_struct* %190, %struct.task_struct** %tmp1.i321, align 8, !dbg !21516
  %191 = load %struct.task_struct*, %struct.task_struct** %tmp1.i321, align 8, !dbg !21516
  %state233 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %191, i32 0, i32 1, !dbg !21923
  store volatile i64 0, i64* %state233, align 16, !dbg !21923
  br label %do.end234, !dbg !21923

do.end234:                                        ; preds = %do.body231
  br label %do.end235, !dbg !21920

do.end235:                                        ; preds = %do.end234
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21919, !srcloc !21924
  br label %do.end236, !dbg !21919

do.end236:                                        ; preds = %do.end235
  %192 = load i32, i32* %mask, align 4, !dbg !21925
  %and237 = and i32 %192, 768, !dbg !21926
  %tobool238 = icmp ne i32 %and237, 0, !dbg !21926
  br i1 %tobool238, label %if.then239, label %if.end277, !dbg !21927

if.then239:                                       ; preds = %do.end236
  br label %do.body240, !dbg !21928

do.body240:                                       ; preds = %if.then239
  br label %do.body241, !dbg !21929

do.body241:                                       ; preds = %do.body240
  call void @llvm.dbg.declare(metadata i64* %__dummy242, metadata !21930, metadata !DIExpression()), !dbg !21932
  call void @llvm.dbg.declare(metadata i64* %__dummy2243, metadata !21933, metadata !DIExpression()), !dbg !21932
  %cmp244 = icmp eq i64* %__dummy242, %__dummy2243, !dbg !21932
  %conv245 = zext i1 %cmp244 to i32, !dbg !21932
  store i32 1, i32* %tmp246, align 4, !dbg !21932
  %193 = load i32, i32* %tmp246, align 4, !dbg !21932
  br label %do.body247, !dbg !21934

do.body247:                                       ; preds = %do.body241
  br label %do.body248, !dbg !21935

do.body248:                                       ; preds = %do.body247
  br label %do.body249, !dbg !21936

do.body249:                                       ; preds = %do.body248
  call void @llvm.dbg.declare(metadata i64* %__dummy250, metadata !21938, metadata !DIExpression()), !dbg !21941
  call void @llvm.dbg.declare(metadata i64* %__dummy2251, metadata !21942, metadata !DIExpression()), !dbg !21941
  %cmp252 = icmp eq i64* %__dummy250, %__dummy2251, !dbg !21941
  %conv253 = zext i1 %cmp252 to i32, !dbg !21941
  store i32 1, i32* %tmp254, align 4, !dbg !21941
  %194 = load i32, i32* %tmp254, align 4, !dbg !21941
  %call255 = call i64 @arch_local_irq_save() #11, !dbg !21943
  store i64 %call255, i64* %flags, align 8, !dbg !21943
  br label %do.end256, !dbg !21943

do.end256:                                        ; preds = %do.body249
  br label %do.end257, !dbg !21936

do.end257:                                        ; preds = %do.end256
  br label %do.body258, !dbg !21935

do.body258:                                       ; preds = %do.end257
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21944, !srcloc !21945
  br label %do.body259, !dbg !21944

do.body259:                                       ; preds = %do.body258
  %195 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21946
  %irq_spinlock260 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %195, i32 0, i32 17, !dbg !21946
  store %struct.spinlock* %irq_spinlock260, %struct.spinlock** %lock.addr.i322, align 8
  %196 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i322, align 8, !dbg !21947
  %197 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %196, i32 0, i32 0, !dbg !21948
  %rlock.i323 = bitcast %union.anon.1* %197 to %struct.raw_spinlock*, !dbg !21948
  br label %do.end262, !dbg !21946

do.end262:                                        ; preds = %do.body259
  br label %do.end263, !dbg !21944

do.end263:                                        ; preds = %do.end262
  br label %do.end264, !dbg !21935

do.end264:                                        ; preds = %do.end263
  br label %do.end265, !dbg !21934

do.end265:                                        ; preds = %do.end264
  br label %do.end266, !dbg !21929

do.end266:                                        ; preds = %do.end265
  %198 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21949
  %event_wait_q267 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %198, i32 0, i32 14, !dbg !21951
  %call268 = call i32 @waitqueue_active(%struct.wait_queue_head* %event_wait_q267) #11, !dbg !21952
  %tobool269 = icmp ne i32 %call268, 0, !dbg !21952
  br i1 %tobool269, label %if.end275, label %if.then270, !dbg !21953

if.then270:                                       ; preds = %do.end266
  %199 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21954
  %200 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21956
  %call271 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %200, i16 zeroext 38) #11, !dbg !21957
  %conv272 = zext i16 %call271 to i32, !dbg !21957
  %and273 = and i32 %conv272, -193, !dbg !21958
  %conv274 = trunc i32 %and273 to i16, !dbg !21957
  call void @usc_OutReg(%struct.mgsl_struct* %199, i16 zeroext 38, i16 zeroext %conv274) #11, !dbg !21959
  br label %if.end275, !dbg !21960

if.end275:                                        ; preds = %if.then270, %do.end266
  %201 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !21961
  %irq_spinlock276 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %201, i32 0, i32 17, !dbg !21962
  %202 = load i64, i64* %flags, align 8, !dbg !21963
  store %struct.spinlock* %irq_spinlock276, %struct.spinlock** %lock.addr.i324, align 8
  store i64 %202, i64* %flags.addr.i325, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !21964
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !21964
  store i32 1, i32* %tmp.i326, align 4, !dbg !21964
  %203 = load i32, i32* %tmp.i326, align 4, !dbg !21964
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !21965
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !21965
  store i32 1, i32* %tmp8.i327, align 4, !dbg !21965
  %204 = load i32, i32* %tmp8.i327, align 4, !dbg !21965
  %205 = load i64, i64* %flags.addr.i325, align 8, !dbg !21966
  call void @arch_local_irq_restore(i64 %205) #14, !dbg !21966
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !21967, !srcloc !9373
  %206 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i324, align 8, !dbg !21968
  %207 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %206, i32 0, i32 0, !dbg !21968
  %rlock.i328 = bitcast %union.anon.1* %207 to %struct.raw_spinlock*, !dbg !21968
  br label %if.end277, !dbg !21969

if.end277:                                        ; preds = %if.end275, %do.end236
  br label %exit, !dbg !21970

exit:                                             ; preds = %if.end277, %if.then44
  call void @llvm.dbg.label(metadata !21971), !dbg !21972
  %208 = load i32, i32* %rc, align 4, !dbg !21973
  %cmp278 = icmp eq i32 %208, 0, !dbg !21975
  br i1 %cmp278, label %if.then280, label %if.end286, !dbg !21976

if.then280:                                       ; preds = %exit
  call void @might_fault() #11, !dbg !21977
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !21979, metadata !DIExpression()), !dbg !21981
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !21982, metadata !DIExpression()), !dbg !21981
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !21983, metadata !DIExpression()), !dbg !21981
  %209 = load i32*, i32** %mask_ptr.addr, align 8, !dbg !21981
  %210 = bitcast i32* %209 to i8*, !dbg !21981
  store i8* %210, i8** %__ptr_pu, align 8, !dbg !21981
  %211 = load i32, i32* %events, align 4, !dbg !21981
  store i32 %211, i32* %__val_pu, align 4, !dbg !21981
  %212 = call i64 @llvm.read_register.i64(metadata !8204), !dbg !21981
  %213 = load i8*, i8** %__ptr_pu, align 8, !dbg !21981
  %214 = load i32, i32* %__val_pu, align 4, !dbg !21981
  %215 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %213, i32 %214, i64 4, i64 %212) #10, !dbg !21981, !srcloc !21984
  %asmresult = extractvalue { i8*, i64 } %215, 0, !dbg !21981
  %asmresult282 = extractvalue { i8*, i64 } %215, 1, !dbg !21981
  %216 = ptrtoint i8* %asmresult to i64, !dbg !21981
  %217 = trunc i64 %216 to i32, !dbg !21981
  store i32 %217, i32* %__ret_pu, align 4, !dbg !21981
  call void @llvm.write_register.i64(metadata !8204, i64 %asmresult282), !dbg !21981
  %218 = load i32, i32* %__ret_pu, align 4, !dbg !21981
  %conv284 = sext i32 %218 to i64, !dbg !21981
  store i64 %conv284, i64* %tmp283, align 8, !dbg !21981
  %219 = load i64, i64* %tmp283, align 8, !dbg !21981
  store i64 %219, i64* %tmp281, align 8, !dbg !21977
  %220 = load i64, i64* %tmp281, align 8, !dbg !21977
  %conv285 = trunc i64 %220 to i32, !dbg !21985
  store i32 %conv285, i32* %rc, align 4, !dbg !21985
  br label %if.end286, !dbg !21985

if.end286:                                        ; preds = %if.then280, %exit
  %221 = load i32, i32* %rc, align 4, !dbg !21986
  store i32 %221, i32* %retval, align 4, !dbg !21987
  br label %return, !dbg !21987

return:                                           ; preds = %if.end286, %if.then
  %222 = load i32, i32* %retval, align 4, !dbg !21988
  ret i32 %222, !dbg !21988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mgsl_loopmode_send_done(%struct.mgsl_struct* %info) #1 !dbg !21989 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !9306, metadata !DIExpression()), !dbg !21990
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !21992
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !21993
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !22000, metadata !DIExpression()), !dbg !22001
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !22002, metadata !DIExpression()), !dbg !22003
  br label %do.body, !dbg !22004

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !22005

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !22006, metadata !DIExpression()), !dbg !22008
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !22009, metadata !DIExpression()), !dbg !22008
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !22008
  %conv = zext i1 %cmp to i32, !dbg !22008
  store i32 1, i32* %tmp, align 4, !dbg !22008
  %0 = load i32, i32* %tmp, align 4, !dbg !22008
  br label %do.body2, !dbg !22010

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !22011

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !22012

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !22014, metadata !DIExpression()), !dbg !22017
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !22018, metadata !DIExpression()), !dbg !22017
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !22017
  %conv8 = zext i1 %cmp7 to i32, !dbg !22017
  store i32 1, i32* %tmp9, align 4, !dbg !22017
  %1 = load i32, i32* %tmp9, align 4, !dbg !22017
  %call = call i64 @arch_local_irq_save() #11, !dbg !22019
  store i64 %call, i64* %flags, align 8, !dbg !22019
  br label %do.end, !dbg !22019

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !22012

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !22011

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22020, !srcloc !22021
  br label %do.body12, !dbg !22020

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22022
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 17, !dbg !22022
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !22023
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !22024
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !22024
  br label %do.end14, !dbg !22022

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !22020

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !22011

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !22010

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !22005

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22025
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %5, i32 0, i32 70, !dbg !22027
  %flags19 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 2, !dbg !22028
  %6 = load i16, i16* %flags19, align 2, !dbg !22028
  %conv20 = zext i16 %6 to i32, !dbg !22025
  %and = and i32 %conv20, 16384, !dbg !22029
  %tobool = icmp ne i32 %and, 0, !dbg !22029
  br i1 %tobool, label %if.then, label %if.end23, !dbg !22030

if.then:                                          ; preds = %do.end18
  %7 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22031
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %7, i32 0, i32 52, !dbg !22034
  %8 = load i8, i8* %tx_active, align 4, !dbg !22034
  %tobool21 = trunc i8 %8 to i1, !dbg !22034
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !22035

if.then22:                                        ; preds = %if.then
  %9 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22036
  %loopmode_send_done_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %9, i32 0, i32 87, !dbg !22037
  store i8 1, i8* %loopmode_send_done_requested, align 2, !dbg !22038
  br label %if.end, !dbg !22036

if.else:                                          ; preds = %if.then
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22039
  call void @usc_loopmode_send_done(%struct.mgsl_struct* %10) #11, !dbg !22040
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then22
  br label %if.end23, !dbg !22041

if.end23:                                         ; preds = %if.end, %do.end18
  %11 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22042
  %irq_spinlock24 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %11, i32 0, i32 17, !dbg !22043
  %12 = load i64, i64* %flags, align 8, !dbg !22044
  store %struct.spinlock* %irq_spinlock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !22045
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !22045
  store i32 1, i32* %tmp.i, align 4, !dbg !22045
  %13 = load i32, i32* %tmp.i, align 4, !dbg !22045
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !22046
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !22046
  store i32 1, i32* %tmp8.i, align 4, !dbg !22046
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !22046
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !22047
  call void @arch_local_irq_restore(i64 %15) #14, !dbg !22047
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22048, !srcloc !9373
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !22049
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !22049
  %rlock.i26 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !22049
  ret i32 0, !dbg !22050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @modem_input_wait(%struct.mgsl_struct* %info, i32 %arg) #1 !dbg !22051 {
entry:
  %pscr_ret__.i156 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i156, metadata !19856, metadata !DIExpression()), !dbg !22052
  %__vpp_verify.i157 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i157, metadata !19868, metadata !DIExpression()), !dbg !22057
  %pfo_val__.i158 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i158, metadata !19871, metadata !DIExpression()), !dbg !22058
  %tmp.i159 = alloca %struct.task_struct*, align 8
  %tmp1.i160 = alloca %struct.task_struct*, align 8
  %lock.addr.i151 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i151, metadata !9306, metadata !DIExpression()), !dbg !22059
  %flags.addr.i152 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i152, metadata !9312, metadata !DIExpression()), !dbg !22064
  %tmp.i153 = alloca i32, align 4
  %tmp8.i154 = alloca i32, align 4
  %pscr_ret__.i146 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i146, metadata !19856, metadata !DIExpression()), !dbg !22065
  %__vpp_verify.i147 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i147, metadata !19868, metadata !DIExpression()), !dbg !22070
  %pfo_val__.i148 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i148, metadata !19871, metadata !DIExpression()), !dbg !22071
  %tmp.i149 = alloca %struct.task_struct*, align 8
  %tmp1.i150 = alloca %struct.task_struct*, align 8
  %lock.addr.i144 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i144, metadata !8660, metadata !DIExpression()), !dbg !22072
  %pscr_ret__.i139 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i139, metadata !19856, metadata !DIExpression()), !dbg !22079
  %__vpp_verify.i140 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i140, metadata !19868, metadata !DIExpression()), !dbg !22082
  %pfo_val__.i141 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i141, metadata !19871, metadata !DIExpression()), !dbg !22083
  %tmp.i142 = alloca %struct.task_struct*, align 8
  %tmp1.i143 = alloca %struct.task_struct*, align 8
  %lock.addr.i136 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i136, metadata !9306, metadata !DIExpression()), !dbg !22084
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !22086
  %tmp.i137 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %pscr_ret__.i131 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i131, metadata !19856, metadata !DIExpression()), !dbg !22087
  %__vpp_verify.i132 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i132, metadata !19868, metadata !DIExpression()), !dbg !22092
  %pfo_val__.i133 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i133, metadata !19871, metadata !DIExpression()), !dbg !22093
  %tmp.i134 = alloca %struct.task_struct*, align 8
  %tmp1.i135 = alloca %struct.task_struct*, align 8
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !22094
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !19856, metadata !DIExpression()), !dbg !22101
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !19868, metadata !DIExpression()), !dbg !22103
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !19871, metadata !DIExpression()), !dbg !22104
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %arg.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %cprev = alloca %struct.mgsl_icount, align 4
  %cnow = alloca %struct.mgsl_icount, align 4
  %wait = alloca %struct.wait_queue_entry, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  %__dummy44 = alloca i64, align 8
  %__dummy245 = alloca i64, align 8
  %tmp48 = alloca i32, align 4
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !22105, metadata !DIExpression()), !dbg !22106
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !22107, metadata !DIExpression()), !dbg !22108
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !22109, metadata !DIExpression()), !dbg !22110
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !22111, metadata !DIExpression()), !dbg !22112
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount* %cprev, metadata !22113, metadata !DIExpression()), !dbg !22114
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount* %cnow, metadata !22115, metadata !DIExpression()), !dbg !22116
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !22117, metadata !DIExpression()), !dbg !22118
  %flags1 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !22118
  store i32 0, i32* %flags1, align 8, !dbg !22118
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !22118
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !22103
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !22103
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !22104, !srcloc !19961
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !22104
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !22104
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !22104
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !22104
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !22104
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !22101
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !22101
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !22101
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !22101
  %7 = bitcast %struct.task_struct* %6 to i8*, !dbg !22118
  store i8* %7, i8** %private, align 8, !dbg !22118
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !22118
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !22118
  %entry2 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !22118
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 0, !dbg !22118
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !22118
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 1, !dbg !22118
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !22118
  br label %do.body, !dbg !22119

do.body:                                          ; preds = %entry
  br label %do.body3, !dbg !22120

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !22121, metadata !DIExpression()), !dbg !22123
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !22124, metadata !DIExpression()), !dbg !22123
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !22123
  %conv = zext i1 %cmp to i32, !dbg !22123
  store i32 1, i32* %tmp, align 4, !dbg !22123
  %8 = load i32, i32* %tmp, align 4, !dbg !22123
  br label %do.body4, !dbg !22125

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !22126

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !22127

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !22129, metadata !DIExpression()), !dbg !22132
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !22133, metadata !DIExpression()), !dbg !22132
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !22132
  %conv10 = zext i1 %cmp9 to i32, !dbg !22132
  store i32 1, i32* %tmp11, align 4, !dbg !22132
  %9 = load i32, i32* %tmp11, align 4, !dbg !22132
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !22134
  store i64 %call12, i64* %flags, align 8, !dbg !22134
  br label %do.end, !dbg !22134

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !22127

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !22126

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22135, !srcloc !22136
  br label %do.body15, !dbg !22135

do.body15:                                        ; preds = %do.body14
  %10 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22137
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %10, i32 0, i32 17, !dbg !22137
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !22138
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !22139
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !22139
  br label %do.end17, !dbg !22137

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !22135

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !22126

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !22125

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !22120

do.end21:                                         ; preds = %do.end20
  %13 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22140
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %13, i32 0, i32 4, !dbg !22141
  %14 = bitcast %struct.mgsl_icount* %cprev to i8*, !dbg !22141
  %15 = bitcast %struct.mgsl_icount* %icount to i8*, !dbg !22141
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 8 %15, i64 92, i1 false), !dbg !22141
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22142
  %status_event_wait_q = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 13, !dbg !22143
  call void @add_wait_queue(%struct.wait_queue_head* %status_event_wait_q, %struct.wait_queue_entry* %wait) #11, !dbg !22144
  br label %do.body22, !dbg !22145

do.body22:                                        ; preds = %do.end21
  br label %do.body23, !dbg !22146

do.body23:                                        ; preds = %do.body22
  br label %do.body24, !dbg !22147

do.body24:                                        ; preds = %do.body23
  br label %do.end25, !dbg !22148

do.end25:                                         ; preds = %do.body24
  br label %do.body26, !dbg !22147

do.body26:                                        ; preds = %do.end25
  store i8* null, i8** %__vpp_verify.i132, align 8, !dbg !22092
  %17 = load i8*, i8** %__vpp_verify.i132, align 8, !dbg !22092
  %18 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !22093, !srcloc !19961
  store i64 %18, i64* %pfo_val__.i133, align 8, !dbg !22093
  %19 = load i64, i64* %pfo_val__.i133, align 8, !dbg !22093
  %20 = inttoptr i64 %19 to %struct.task_struct*, !dbg !22093
  store %struct.task_struct* %20, %struct.task_struct** %tmp.i134, align 8, !dbg !22093
  %21 = load %struct.task_struct*, %struct.task_struct** %tmp.i134, align 8, !dbg !22093
  store %struct.task_struct* %21, %struct.task_struct** %pscr_ret__.i131, align 8, !dbg !22087
  %22 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i131, align 8, !dbg !22087
  store %struct.task_struct* %22, %struct.task_struct** %tmp1.i135, align 8, !dbg !22087
  %23 = load %struct.task_struct*, %struct.task_struct** %tmp1.i135, align 8, !dbg !22087
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %23, i32 0, i32 1, !dbg !22150
  store volatile i64 1, i64* %state, align 16, !dbg !22150
  br label %do.end28, !dbg !22150

do.end28:                                         ; preds = %do.body26
  br label %do.end29, !dbg !22147

do.end29:                                         ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22146, !srcloc !22151
  br label %do.end30, !dbg !22146

do.end30:                                         ; preds = %do.end29
  %24 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22152
  %irq_spinlock31 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %24, i32 0, i32 17, !dbg !22153
  %25 = load i64, i64* %flags, align 8, !dbg !22154
  store %struct.spinlock* %irq_spinlock31, %struct.spinlock** %lock.addr.i136, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !22155
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !22155
  store i32 1, i32* %tmp.i137, align 4, !dbg !22155
  %26 = load i32, i32* %tmp.i137, align 4, !dbg !22155
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !22156
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !22156
  store i32 1, i32* %tmp8.i, align 4, !dbg !22156
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !22156
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !22157
  call void @arch_local_irq_restore(i64 %28) #14, !dbg !22157
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22158, !srcloc !9373
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i136, align 8, !dbg !22159
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !22159
  %rlock.i138 = bitcast %union.anon.1* %30 to %struct.raw_spinlock*, !dbg !22159
  br label %for.cond, !dbg !22160

for.cond:                                         ; preds = %if.end119, %do.end30
  call void @schedule() #11, !dbg !22161
  store i8* null, i8** %__vpp_verify.i140, align 8, !dbg !22082
  %31 = load i8*, i8** %__vpp_verify.i140, align 8, !dbg !22082
  %32 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !22083, !srcloc !19961
  store i64 %32, i64* %pfo_val__.i141, align 8, !dbg !22083
  %33 = load i64, i64* %pfo_val__.i141, align 8, !dbg !22083
  %34 = inttoptr i64 %33 to %struct.task_struct*, !dbg !22083
  store %struct.task_struct* %34, %struct.task_struct** %tmp.i142, align 8, !dbg !22083
  %35 = load %struct.task_struct*, %struct.task_struct** %tmp.i142, align 8, !dbg !22083
  store %struct.task_struct* %35, %struct.task_struct** %pscr_ret__.i139, align 8, !dbg !22079
  %36 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i139, align 8, !dbg !22079
  store %struct.task_struct* %36, %struct.task_struct** %tmp1.i143, align 8, !dbg !22079
  %37 = load %struct.task_struct*, %struct.task_struct** %tmp1.i143, align 8, !dbg !22079
  %call33 = call i32 @signal_pending(%struct.task_struct* %37) #11, !dbg !22162
  %tobool = icmp ne i32 %call33, 0, !dbg !22162
  br i1 %tobool, label %if.then, label %if.end, !dbg !22163

if.then:                                          ; preds = %for.cond
  store i32 -512, i32* %rc, align 4, !dbg !22164
  br label %for.end, !dbg !22166

if.end:                                           ; preds = %for.cond
  br label %do.body34, !dbg !22167

do.body34:                                        ; preds = %if.end
  br label %do.body35, !dbg !22168

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !22169, metadata !DIExpression()), !dbg !22171
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !22172, metadata !DIExpression()), !dbg !22171
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !22171
  %conv39 = zext i1 %cmp38 to i32, !dbg !22171
  store i32 1, i32* %tmp40, align 4, !dbg !22171
  %38 = load i32, i32* %tmp40, align 4, !dbg !22171
  br label %do.body41, !dbg !22173

do.body41:                                        ; preds = %do.body35
  br label %do.body42, !dbg !22174

do.body42:                                        ; preds = %do.body41
  br label %do.body43, !dbg !22175

do.body43:                                        ; preds = %do.body42
  call void @llvm.dbg.declare(metadata i64* %__dummy44, metadata !22177, metadata !DIExpression()), !dbg !22180
  call void @llvm.dbg.declare(metadata i64* %__dummy245, metadata !22181, metadata !DIExpression()), !dbg !22180
  %cmp46 = icmp eq i64* %__dummy44, %__dummy245, !dbg !22180
  %conv47 = zext i1 %cmp46 to i32, !dbg !22180
  store i32 1, i32* %tmp48, align 4, !dbg !22180
  %39 = load i32, i32* %tmp48, align 4, !dbg !22180
  %call49 = call i64 @arch_local_irq_save() #11, !dbg !22182
  store i64 %call49, i64* %flags, align 8, !dbg !22182
  br label %do.end50, !dbg !22182

do.end50:                                         ; preds = %do.body43
  br label %do.end51, !dbg !22175

do.end51:                                         ; preds = %do.end50
  br label %do.body52, !dbg !22174

do.body52:                                        ; preds = %do.end51
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22183, !srcloc !22184
  br label %do.body53, !dbg !22183

do.body53:                                        ; preds = %do.body52
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22185
  %irq_spinlock54 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 17, !dbg !22185
  store %struct.spinlock* %irq_spinlock54, %struct.spinlock** %lock.addr.i144, align 8
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i144, align 8, !dbg !22186
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !22187
  %rlock.i145 = bitcast %union.anon.1* %42 to %struct.raw_spinlock*, !dbg !22187
  br label %do.end56, !dbg !22185

do.end56:                                         ; preds = %do.body53
  br label %do.end57, !dbg !22183

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !22174

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !22173

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !22168

do.end60:                                         ; preds = %do.end59
  %43 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22188
  %icount61 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %43, i32 0, i32 4, !dbg !22189
  %44 = bitcast %struct.mgsl_icount* %cnow to i8*, !dbg !22189
  %45 = bitcast %struct.mgsl_icount* %icount61 to i8*, !dbg !22189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 8 %45, i64 92, i1 false), !dbg !22189
  br label %do.body62, !dbg !22190

do.body62:                                        ; preds = %do.end60
  br label %do.body63, !dbg !22191

do.body63:                                        ; preds = %do.body62
  br label %do.body64, !dbg !22192

do.body64:                                        ; preds = %do.body63
  br label %do.end65, !dbg !22193

do.end65:                                         ; preds = %do.body64
  br label %do.body66, !dbg !22192

do.body66:                                        ; preds = %do.end65
  store i8* null, i8** %__vpp_verify.i147, align 8, !dbg !22070
  %46 = load i8*, i8** %__vpp_verify.i147, align 8, !dbg !22070
  %47 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !22071, !srcloc !19961
  store i64 %47, i64* %pfo_val__.i148, align 8, !dbg !22071
  %48 = load i64, i64* %pfo_val__.i148, align 8, !dbg !22071
  %49 = inttoptr i64 %48 to %struct.task_struct*, !dbg !22071
  store %struct.task_struct* %49, %struct.task_struct** %tmp.i149, align 8, !dbg !22071
  %50 = load %struct.task_struct*, %struct.task_struct** %tmp.i149, align 8, !dbg !22071
  store %struct.task_struct* %50, %struct.task_struct** %pscr_ret__.i146, align 8, !dbg !22065
  %51 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i146, align 8, !dbg !22065
  store %struct.task_struct* %51, %struct.task_struct** %tmp1.i150, align 8, !dbg !22065
  %52 = load %struct.task_struct*, %struct.task_struct** %tmp1.i150, align 8, !dbg !22065
  %state68 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %52, i32 0, i32 1, !dbg !22195
  store volatile i64 1, i64* %state68, align 16, !dbg !22195
  br label %do.end69, !dbg !22195

do.end69:                                         ; preds = %do.body66
  br label %do.end70, !dbg !22192

do.end70:                                         ; preds = %do.end69
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22191, !srcloc !22196
  br label %do.end71, !dbg !22191

do.end71:                                         ; preds = %do.end70
  %53 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22197
  %irq_spinlock72 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %53, i32 0, i32 17, !dbg !22198
  %54 = load i64, i64* %flags, align 8, !dbg !22199
  store %struct.spinlock* %irq_spinlock72, %struct.spinlock** %lock.addr.i151, align 8
  store i64 %54, i64* %flags.addr.i152, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !22200
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !22200
  store i32 1, i32* %tmp.i153, align 4, !dbg !22200
  %55 = load i32, i32* %tmp.i153, align 4, !dbg !22200
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !22201
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !22201
  store i32 1, i32* %tmp8.i154, align 4, !dbg !22201
  %56 = load i32, i32* %tmp8.i154, align 4, !dbg !22201
  %57 = load i64, i64* %flags.addr.i152, align 8, !dbg !22202
  call void @arch_local_irq_restore(i64 %57) #14, !dbg !22202
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22203, !srcloc !9373
  %58 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i151, align 8, !dbg !22204
  %59 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %58, i32 0, i32 0, !dbg !22204
  %rlock.i155 = bitcast %union.anon.1* %59 to %struct.raw_spinlock*, !dbg !22204
  %rng = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 2, !dbg !22205
  %60 = load i32, i32* %rng, align 4, !dbg !22205
  %rng73 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 2, !dbg !22207
  %61 = load i32, i32* %rng73, align 4, !dbg !22207
  %cmp74 = icmp eq i32 %60, %61, !dbg !22208
  br i1 %cmp74, label %land.lhs.true, label %if.end88, !dbg !22209

land.lhs.true:                                    ; preds = %do.end71
  %dsr = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 1, !dbg !22210
  %62 = load i32, i32* %dsr, align 4, !dbg !22210
  %dsr76 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 1, !dbg !22211
  %63 = load i32, i32* %dsr76, align 4, !dbg !22211
  %cmp77 = icmp eq i32 %62, %63, !dbg !22212
  br i1 %cmp77, label %land.lhs.true79, label %if.end88, !dbg !22213

land.lhs.true79:                                  ; preds = %land.lhs.true
  %dcd = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 3, !dbg !22214
  %64 = load i32, i32* %dcd, align 4, !dbg !22214
  %dcd80 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 3, !dbg !22215
  %65 = load i32, i32* %dcd80, align 4, !dbg !22215
  %cmp81 = icmp eq i32 %64, %65, !dbg !22216
  br i1 %cmp81, label %land.lhs.true83, label %if.end88, !dbg !22217

land.lhs.true83:                                  ; preds = %land.lhs.true79
  %cts = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 0, !dbg !22218
  %66 = load i32, i32* %cts, align 4, !dbg !22218
  %cts84 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 0, !dbg !22219
  %67 = load i32, i32* %cts84, align 4, !dbg !22219
  %cmp85 = icmp eq i32 %66, %67, !dbg !22220
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !22221

if.then87:                                        ; preds = %land.lhs.true83
  store i32 -5, i32* %rc, align 4, !dbg !22222
  br label %for.end, !dbg !22224

if.end88:                                         ; preds = %land.lhs.true83, %land.lhs.true79, %land.lhs.true, %do.end71
  %68 = load i32, i32* %arg.addr, align 4, !dbg !22225
  %and = and i32 %68, 128, !dbg !22227
  %tobool89 = icmp ne i32 %and, 0, !dbg !22227
  br i1 %tobool89, label %land.lhs.true90, label %lor.lhs.false, !dbg !22228

land.lhs.true90:                                  ; preds = %if.end88
  %rng91 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 2, !dbg !22229
  %69 = load i32, i32* %rng91, align 4, !dbg !22229
  %rng92 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 2, !dbg !22230
  %70 = load i32, i32* %rng92, align 4, !dbg !22230
  %cmp93 = icmp ne i32 %69, %70, !dbg !22231
  br i1 %cmp93, label %if.then118, label %lor.lhs.false, !dbg !22232

lor.lhs.false:                                    ; preds = %land.lhs.true90, %if.end88
  %71 = load i32, i32* %arg.addr, align 4, !dbg !22233
  %and95 = and i32 %71, 256, !dbg !22234
  %tobool96 = icmp ne i32 %and95, 0, !dbg !22234
  br i1 %tobool96, label %land.lhs.true97, label %lor.lhs.false102, !dbg !22235

land.lhs.true97:                                  ; preds = %lor.lhs.false
  %dsr98 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 1, !dbg !22236
  %72 = load i32, i32* %dsr98, align 4, !dbg !22236
  %dsr99 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 1, !dbg !22237
  %73 = load i32, i32* %dsr99, align 4, !dbg !22237
  %cmp100 = icmp ne i32 %72, %73, !dbg !22238
  br i1 %cmp100, label %if.then118, label %lor.lhs.false102, !dbg !22239

lor.lhs.false102:                                 ; preds = %land.lhs.true97, %lor.lhs.false
  %74 = load i32, i32* %arg.addr, align 4, !dbg !22240
  %and103 = and i32 %74, 64, !dbg !22241
  %tobool104 = icmp ne i32 %and103, 0, !dbg !22241
  br i1 %tobool104, label %land.lhs.true105, label %lor.lhs.false110, !dbg !22242

land.lhs.true105:                                 ; preds = %lor.lhs.false102
  %dcd106 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 3, !dbg !22243
  %75 = load i32, i32* %dcd106, align 4, !dbg !22243
  %dcd107 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 3, !dbg !22244
  %76 = load i32, i32* %dcd107, align 4, !dbg !22244
  %cmp108 = icmp ne i32 %75, %76, !dbg !22245
  br i1 %cmp108, label %if.then118, label %lor.lhs.false110, !dbg !22246

lor.lhs.false110:                                 ; preds = %land.lhs.true105, %lor.lhs.false102
  %77 = load i32, i32* %arg.addr, align 4, !dbg !22247
  %and111 = and i32 %77, 32, !dbg !22248
  %tobool112 = icmp ne i32 %and111, 0, !dbg !22248
  br i1 %tobool112, label %land.lhs.true113, label %if.end119, !dbg !22249

land.lhs.true113:                                 ; preds = %lor.lhs.false110
  %cts114 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 0, !dbg !22250
  %78 = load i32, i32* %cts114, align 4, !dbg !22250
  %cts115 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 0, !dbg !22251
  %79 = load i32, i32* %cts115, align 4, !dbg !22251
  %cmp116 = icmp ne i32 %78, %79, !dbg !22252
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !22253

if.then118:                                       ; preds = %land.lhs.true113, %land.lhs.true105, %land.lhs.true97, %land.lhs.true90
  store i32 0, i32* %rc, align 4, !dbg !22254
  br label %for.end, !dbg !22256

if.end119:                                        ; preds = %land.lhs.true113, %lor.lhs.false110
  %80 = bitcast %struct.mgsl_icount* %cprev to i8*, !dbg !22257
  %81 = bitcast %struct.mgsl_icount* %cnow to i8*, !dbg !22257
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 92, i1 false), !dbg !22257
  br label %for.cond, !dbg !22258, !llvm.loop !22259

for.end:                                          ; preds = %if.then118, %if.then87, %if.then
  %82 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22262
  %status_event_wait_q120 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %82, i32 0, i32 13, !dbg !22263
  call void @remove_wait_queue(%struct.wait_queue_head* %status_event_wait_q120, %struct.wait_queue_entry* %wait) #11, !dbg !22264
  br label %do.body121, !dbg !22265

do.body121:                                       ; preds = %for.end
  br label %do.body122, !dbg !22266

do.body122:                                       ; preds = %do.body121
  br label %do.body123, !dbg !22267

do.body123:                                       ; preds = %do.body122
  br label %do.end124, !dbg !22268

do.end124:                                        ; preds = %do.body123
  br label %do.body125, !dbg !22267

do.body125:                                       ; preds = %do.end124
  store i8* null, i8** %__vpp_verify.i157, align 8, !dbg !22057
  %83 = load i8*, i8** %__vpp_verify.i157, align 8, !dbg !22057
  %84 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !22058, !srcloc !19961
  store i64 %84, i64* %pfo_val__.i158, align 8, !dbg !22058
  %85 = load i64, i64* %pfo_val__.i158, align 8, !dbg !22058
  %86 = inttoptr i64 %85 to %struct.task_struct*, !dbg !22058
  store %struct.task_struct* %86, %struct.task_struct** %tmp.i159, align 8, !dbg !22058
  %87 = load %struct.task_struct*, %struct.task_struct** %tmp.i159, align 8, !dbg !22058
  store %struct.task_struct* %87, %struct.task_struct** %pscr_ret__.i156, align 8, !dbg !22052
  %88 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i156, align 8, !dbg !22052
  store %struct.task_struct* %88, %struct.task_struct** %tmp1.i160, align 8, !dbg !22052
  %89 = load %struct.task_struct*, %struct.task_struct** %tmp1.i160, align 8, !dbg !22052
  %state127 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %89, i32 0, i32 1, !dbg !22270
  store volatile i64 0, i64* %state127, align 16, !dbg !22270
  br label %do.end128, !dbg !22270

do.end128:                                        ; preds = %do.body125
  br label %do.end129, !dbg !22267

do.end129:                                        ; preds = %do.end128
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22266, !srcloc !22271
  br label %do.end130, !dbg !22266

do.end130:                                        ; preds = %do.end129
  %90 = load i32, i32* %rc, align 4, !dbg !22272
  ret i32 %90, !dbg !22273
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usc_loopmode_insert_request(%struct.mgsl_struct* %info) #1 !dbg !22274 {
entry:
  %info.addr = alloca %struct.mgsl_struct*, align 8
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !22275, metadata !DIExpression()), !dbg !22276
  %0 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22277
  %loopmode_insert_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %0, i32 0, i32 86, !dbg !22278
  store i8 1, i8* %loopmode_insert_requested, align 1, !dbg !22279
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22280
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22281
  %call = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %2, i16 zeroext 38) #11, !dbg !22282
  %conv = zext i16 %call to i32, !dbg !22282
  %or = or i32 %conv, 32, !dbg !22283
  %conv1 = trunc i32 %or to i16, !dbg !22284
  call void @usc_OutReg(%struct.mgsl_struct* %1, i16 zeroext 38, i16 zeroext %conv1) #11, !dbg !22285
  %3 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22286
  %cmr_value = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %3, i32 0, i32 54, !dbg !22287
  %4 = load i16, i16* %cmr_value, align 4, !dbg !22288
  %conv2 = zext i16 %4 to i32, !dbg !22288
  %or3 = or i32 %conv2, 8192, !dbg !22288
  %conv4 = trunc i32 %or3 to i16, !dbg !22288
  store i16 %conv4, i16* %cmr_value, align 4, !dbg !22288
  %5 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22289
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22290
  %cmr_value5 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 54, !dbg !22291
  %7 = load i16, i16* %cmr_value5, align 4, !dbg !22291
  call void @usc_OutReg(%struct.mgsl_struct* %5, i16 zeroext 2, i16 zeroext %7) #11, !dbg !22292
  ret void, !dbg !22293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @waitqueue_active(%struct.wait_queue_head* %wq_head) #1 !dbg !22294 {
entry:
  %wq_head.addr = alloca %struct.wait_queue_head*, align 8
  store %struct.wait_queue_head* %wq_head, %struct.wait_queue_head** %wq_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wq_head.addr, metadata !22298, metadata !DIExpression()), !dbg !22299
  %0 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wq_head.addr, align 8, !dbg !22300
  %head = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %0, i32 0, i32 1, !dbg !22301
  %call = call i32 @list_empty(%struct.list_head* %head) #11, !dbg !22302
  %tobool = icmp ne i32 %call, 0, !dbg !22303
  %lnot = xor i1 %tobool, true, !dbg !22303
  %lnot.ext = zext i1 %lnot to i32, !dbg !22303
  ret i32 %lnot.ext, !dbg !22304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #1 !dbg !22305 {
entry:
  ret void, !dbg !22307
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #1 !dbg !22308 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !22313, metadata !DIExpression()), !dbg !22314
  br label %do.body, !dbg !22315

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !22317

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !22315
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !22315
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !22315
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !22317
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !22315
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !22319
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !22320
  %conv = zext i1 %cmp to i32, !dbg !22320
  ret i32 %conv, !dbg !22321
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_throttled(%struct.tty_struct* %tty) #1 !dbg !22322 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !22323, metadata !DIExpression()), !dbg !22324
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !22325
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 21, !dbg !22326
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #11, !dbg !22327
  ret i1 %call, !dbg !22328
}

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_msecs(i64) #4

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @line_info(%struct.seq_file* %m, %struct.mgsl_struct* %info) #1 !dbg !22329 {
entry:
  %lock.addr.i200 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i200, metadata !8660, metadata !DIExpression()), !dbg !22332
  %lock.addr.i195 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i195, metadata !9306, metadata !DIExpression()), !dbg !22339
  %flags.addr.i196 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i196, metadata !9312, metadata !DIExpression()), !dbg !22341
  %tmp.i197 = alloca i32, align 4
  %tmp8.i198 = alloca i32, align 4
  %lock.addr.i193 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i193, metadata !9306, metadata !DIExpression()), !dbg !22342
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9312, metadata !DIExpression()), !dbg !22344
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8660, metadata !DIExpression()), !dbg !22345
  %m.addr = alloca %struct.seq_file*, align 8
  %info.addr = alloca %struct.mgsl_struct*, align 8
  %stat_buf = alloca [30 x i8], align 16
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy144 = alloca i64, align 8
  %__dummy2145 = alloca i64, align 8
  %tmp148 = alloca i32, align 4
  %__dummy152 = alloca i64, align 8
  %__dummy2153 = alloca i64, align 8
  %tmp156 = alloca i32, align 4
  %Tcsr = alloca i16, align 2
  %Tdmr = alloca i16, align 2
  %Ticr = alloca i16, align 2
  %Rscr = alloca i16, align 2
  %Rdmr = alloca i16, align 2
  %Ricr = alloca i16, align 2
  %Icr = alloca i16, align 2
  %Dccr = alloca i16, align 2
  %Tmr = alloca i16, align 2
  %Tccr = alloca i16, align 2
  %Ccar = alloca i16, align 2
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !22352, metadata !DIExpression()), !dbg !22353
  store %struct.mgsl_struct* %info, %struct.mgsl_struct** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_struct** %info.addr, metadata !22354, metadata !DIExpression()), !dbg !22355
  call void @llvm.dbg.declare(metadata [30 x i8]* %stat_buf, metadata !22356, metadata !DIExpression()), !dbg !22360
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !22361, metadata !DIExpression()), !dbg !22362
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22363
  %1 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22364
  %device_name = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %1, i32 0, i32 56, !dbg !22365
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !22364
  %2 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22366
  %io_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %2, i32 0, i32 59, !dbg !22367
  %3 = load i32, i32* %io_base, align 4, !dbg !22367
  %4 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22368
  %irq_level = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %4, i32 0, i32 62, !dbg !22369
  %5 = load i32, i32* %irq_level, align 8, !dbg !22369
  %6 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22370
  %phys_memory_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %6, i32 0, i32 77, !dbg !22371
  %7 = load i32, i32* %phys_memory_base, align 8, !dbg !22371
  %8 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22372
  %phys_lcr_base = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %8, i32 0, i32 80, !dbg !22373
  %9 = load i32, i32* %phys_lcr_base, align 8, !dbg !22373
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.160, i64 0, i64 0), i8* %arraydecay, i32 %3, i32 %5, i32 %7, i32 %9) #11, !dbg !22374
  br label %do.body, !dbg !22375

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !22376

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !22377, metadata !DIExpression()), !dbg !22379
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !22380, metadata !DIExpression()), !dbg !22379
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !22379
  %conv = zext i1 %cmp to i32, !dbg !22379
  store i32 1, i32* %tmp, align 4, !dbg !22379
  %10 = load i32, i32* %tmp, align 4, !dbg !22379
  br label %do.body2, !dbg !22381

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !22382

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !22383

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !22385, metadata !DIExpression()), !dbg !22388
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !22389, metadata !DIExpression()), !dbg !22388
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !22388
  %conv8 = zext i1 %cmp7 to i32, !dbg !22388
  store i32 1, i32* %tmp9, align 4, !dbg !22388
  %11 = load i32, i32* %tmp9, align 4, !dbg !22388
  %call = call i64 @arch_local_irq_save() #11, !dbg !22390
  store i64 %call, i64* %flags, align 8, !dbg !22390
  br label %do.end, !dbg !22390

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !22383

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !22382

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22391, !srcloc !22392
  br label %do.body12, !dbg !22391

do.body12:                                        ; preds = %do.body11
  %12 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22393
  %irq_spinlock = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %12, i32 0, i32 17, !dbg !22393
  store %struct.spinlock* %irq_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !22394
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !22395
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !22395
  br label %do.end14, !dbg !22393

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !22391

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !22382

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !22381

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !22376

do.end18:                                         ; preds = %do.end17
  %15 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22396
  call void @usc_get_serial_signals(%struct.mgsl_struct* %15) #11, !dbg !22397
  %16 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22398
  %irq_spinlock19 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %16, i32 0, i32 17, !dbg !22399
  %17 = load i64, i64* %flags, align 8, !dbg !22400
  store %struct.spinlock* %irq_spinlock19, %struct.spinlock** %lock.addr.i195, align 8
  store i64 %17, i64* %flags.addr.i196, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !22401
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !22401
  store i32 1, i32* %tmp.i197, align 4, !dbg !22401
  %18 = load i32, i32* %tmp.i197, align 4, !dbg !22401
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !22402
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !22402
  store i32 1, i32* %tmp8.i198, align 4, !dbg !22402
  %19 = load i32, i32* %tmp8.i198, align 4, !dbg !22402
  %20 = load i64, i64* %flags.addr.i196, align 8, !dbg !22403
  call void @arch_local_irq_restore(i64 %20) #14, !dbg !22403
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22404, !srcloc !9373
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i195, align 8, !dbg !22405
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !22405
  %rlock.i199 = bitcast %union.anon.1* %22 to %struct.raw_spinlock*, !dbg !22405
  %arrayidx = getelementptr [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !22406
  store i8 0, i8* %arrayidx, align 16, !dbg !22407
  %arrayidx20 = getelementptr [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 1, !dbg !22408
  store i8 0, i8* %arrayidx20, align 1, !dbg !22409
  %23 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22410
  %serial_signals = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %23, i32 0, i32 71, !dbg !22412
  %24 = load i8, i8* %serial_signals, align 8, !dbg !22412
  %conv21 = zext i8 %24 to i32, !dbg !22410
  %and = and i32 %conv21, 32, !dbg !22413
  %tobool = icmp ne i32 %and, 0, !dbg !22413
  br i1 %tobool, label %if.then, label %if.end, !dbg !22414

if.then:                                          ; preds = %do.end18
  %arraydecay22 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !22415
  %call23 = call i8* @strcat(i8* %arraydecay22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i64 0, i64 0)) #11, !dbg !22416
  br label %if.end, !dbg !22416

if.end:                                           ; preds = %if.then, %do.end18
  %25 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22417
  %serial_signals24 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %25, i32 0, i32 71, !dbg !22419
  %26 = load i8, i8* %serial_signals24, align 8, !dbg !22419
  %conv25 = zext i8 %26 to i32, !dbg !22417
  %and26 = and i32 %conv25, 16, !dbg !22420
  %tobool27 = icmp ne i32 %and26, 0, !dbg !22420
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !22421

if.then28:                                        ; preds = %if.end
  %arraydecay29 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !22422
  %call30 = call i8* @strcat(i8* %arraydecay29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.162, i64 0, i64 0)) #11, !dbg !22423
  br label %if.end31, !dbg !22423

if.end31:                                         ; preds = %if.then28, %if.end
  %27 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22424
  %serial_signals32 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %27, i32 0, i32 71, !dbg !22426
  %28 = load i8, i8* %serial_signals32, align 8, !dbg !22426
  %conv33 = zext i8 %28 to i32, !dbg !22424
  %and34 = and i32 %conv33, 128, !dbg !22427
  %tobool35 = icmp ne i32 %and34, 0, !dbg !22427
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !22428

if.then36:                                        ; preds = %if.end31
  %arraydecay37 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !22429
  %call38 = call i8* @strcat(i8* %arraydecay37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.163, i64 0, i64 0)) #11, !dbg !22430
  br label %if.end39, !dbg !22430

if.end39:                                         ; preds = %if.then36, %if.end31
  %29 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22431
  %serial_signals40 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %29, i32 0, i32 71, !dbg !22433
  %30 = load i8, i8* %serial_signals40, align 8, !dbg !22433
  %conv41 = zext i8 %30 to i32, !dbg !22431
  %and42 = and i32 %conv41, 64, !dbg !22434
  %tobool43 = icmp ne i32 %and42, 0, !dbg !22434
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !22435

if.then44:                                        ; preds = %if.end39
  %arraydecay45 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !22436
  %call46 = call i8* @strcat(i8* %arraydecay45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.164, i64 0, i64 0)) #11, !dbg !22437
  br label %if.end47, !dbg !22437

if.end47:                                         ; preds = %if.then44, %if.end39
  %31 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22438
  %serial_signals48 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %31, i32 0, i32 71, !dbg !22440
  %32 = load i8, i8* %serial_signals48, align 8, !dbg !22440
  %conv49 = zext i8 %32 to i32, !dbg !22438
  %and50 = and i32 %conv49, 1, !dbg !22441
  %tobool51 = icmp ne i32 %and50, 0, !dbg !22441
  br i1 %tobool51, label %if.then52, label %if.end55, !dbg !22442

if.then52:                                        ; preds = %if.end47
  %arraydecay53 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !22443
  %call54 = call i8* @strcat(i8* %arraydecay53, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.165, i64 0, i64 0)) #11, !dbg !22444
  br label %if.end55, !dbg !22444

if.end55:                                         ; preds = %if.then52, %if.end47
  %33 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22445
  %serial_signals56 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %33, i32 0, i32 71, !dbg !22447
  %34 = load i8, i8* %serial_signals56, align 8, !dbg !22447
  %conv57 = zext i8 %34 to i32, !dbg !22445
  %and58 = and i32 %conv57, 4, !dbg !22448
  %tobool59 = icmp ne i32 %and58, 0, !dbg !22448
  br i1 %tobool59, label %if.then60, label %if.end63, !dbg !22449

if.then60:                                        ; preds = %if.end55
  %arraydecay61 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !22450
  %call62 = call i8* @strcat(i8* %arraydecay61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.166, i64 0, i64 0)) #11, !dbg !22451
  br label %if.end63, !dbg !22451

if.end63:                                         ; preds = %if.then60, %if.end55
  %35 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22452
  %params = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %35, i32 0, i32 70, !dbg !22454
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !22455
  %36 = load i64, i64* %mode, align 8, !dbg !22455
  %cmp64 = icmp eq i64 %36, 2, !dbg !22456
  br i1 %cmp64, label %if.then70, label %lor.lhs.false, !dbg !22457

lor.lhs.false:                                    ; preds = %if.end63
  %37 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22458
  %params66 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %37, i32 0, i32 70, !dbg !22459
  %mode67 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params66, i32 0, i32 0, !dbg !22460
  %38 = load i64, i64* %mode67, align 8, !dbg !22460
  %cmp68 = icmp eq i64 %38, 6, !dbg !22461
  br i1 %cmp68, label %if.then70, label %if.else, !dbg !22462

if.then70:                                        ; preds = %lor.lhs.false, %if.end63
  %39 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22463
  %40 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22465
  %icount = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %40, i32 0, i32 4, !dbg !22466
  %txok = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 11, !dbg !22467
  %41 = load i32, i32* %txok, align 4, !dbg !22467
  %42 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22468
  %icount71 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %42, i32 0, i32 4, !dbg !22469
  %rxok = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount71, i32 0, i32 20, !dbg !22470
  %43 = load i32, i32* %rxok, align 8, !dbg !22470
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %39, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.167, i64 0, i64 0), i32 %41, i32 %43) #11, !dbg !22471
  %44 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22472
  %icount72 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %44, i32 0, i32 4, !dbg !22474
  %txunder = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount72, i32 0, i32 12, !dbg !22475
  %45 = load i32, i32* %txunder, align 8, !dbg !22475
  %tobool73 = icmp ne i32 %45, 0, !dbg !22472
  br i1 %tobool73, label %if.then74, label %if.end77, !dbg !22476

if.then74:                                        ; preds = %if.then70
  %46 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22477
  %47 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22478
  %icount75 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %47, i32 0, i32 4, !dbg !22479
  %txunder76 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount75, i32 0, i32 12, !dbg !22480
  %48 = load i32, i32* %txunder76, align 8, !dbg !22480
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %46, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.168, i64 0, i64 0), i32 %48) #11, !dbg !22481
  br label %if.end77, !dbg !22481

if.end77:                                         ; preds = %if.then74, %if.then70
  %49 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22482
  %icount78 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %49, i32 0, i32 4, !dbg !22484
  %txabort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount78, i32 0, i32 13, !dbg !22485
  %50 = load i32, i32* %txabort, align 4, !dbg !22485
  %tobool79 = icmp ne i32 %50, 0, !dbg !22482
  br i1 %tobool79, label %if.then80, label %if.end83, !dbg !22486

if.then80:                                        ; preds = %if.end77
  %51 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22487
  %52 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22488
  %icount81 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %52, i32 0, i32 4, !dbg !22489
  %txabort82 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount81, i32 0, i32 13, !dbg !22490
  %53 = load i32, i32* %txabort82, align 4, !dbg !22490
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %51, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.169, i64 0, i64 0), i32 %53) #11, !dbg !22491
  br label %if.end83, !dbg !22491

if.end83:                                         ; preds = %if.then80, %if.end77
  %54 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22492
  %icount84 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %54, i32 0, i32 4, !dbg !22494
  %rxshort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount84, i32 0, i32 15, !dbg !22495
  %55 = load i32, i32* %rxshort, align 4, !dbg !22495
  %tobool85 = icmp ne i32 %55, 0, !dbg !22492
  br i1 %tobool85, label %if.then86, label %if.end89, !dbg !22496

if.then86:                                        ; preds = %if.end83
  %56 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22497
  %57 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22498
  %icount87 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %57, i32 0, i32 4, !dbg !22499
  %rxshort88 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount87, i32 0, i32 15, !dbg !22500
  %58 = load i32, i32* %rxshort88, align 4, !dbg !22500
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %56, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.170, i64 0, i64 0), i32 %58) #11, !dbg !22501
  br label %if.end89, !dbg !22501

if.end89:                                         ; preds = %if.then86, %if.end83
  %59 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22502
  %icount90 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %59, i32 0, i32 4, !dbg !22504
  %rxlong = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount90, i32 0, i32 16, !dbg !22505
  %60 = load i32, i32* %rxlong, align 8, !dbg !22505
  %tobool91 = icmp ne i32 %60, 0, !dbg !22502
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !22506

if.then92:                                        ; preds = %if.end89
  %61 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22507
  %62 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22508
  %icount93 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %62, i32 0, i32 4, !dbg !22509
  %rxlong94 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount93, i32 0, i32 16, !dbg !22510
  %63 = load i32, i32* %rxlong94, align 8, !dbg !22510
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %61, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.171, i64 0, i64 0), i32 %63) #11, !dbg !22511
  br label %if.end95, !dbg !22511

if.end95:                                         ; preds = %if.then92, %if.end89
  %64 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22512
  %icount96 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %64, i32 0, i32 4, !dbg !22514
  %rxover = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount96, i32 0, i32 18, !dbg !22515
  %65 = load i32, i32* %rxover, align 8, !dbg !22515
  %tobool97 = icmp ne i32 %65, 0, !dbg !22512
  br i1 %tobool97, label %if.then98, label %if.end101, !dbg !22516

if.then98:                                        ; preds = %if.end95
  %66 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22517
  %67 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22518
  %icount99 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %67, i32 0, i32 4, !dbg !22519
  %rxover100 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount99, i32 0, i32 18, !dbg !22520
  %68 = load i32, i32* %rxover100, align 8, !dbg !22520
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %66, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.172, i64 0, i64 0), i32 %68) #11, !dbg !22521
  br label %if.end101, !dbg !22521

if.end101:                                        ; preds = %if.then98, %if.end95
  %69 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22522
  %icount102 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %69, i32 0, i32 4, !dbg !22524
  %rxcrc = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount102, i32 0, i32 19, !dbg !22525
  %70 = load i32, i32* %rxcrc, align 4, !dbg !22525
  %tobool103 = icmp ne i32 %70, 0, !dbg !22522
  br i1 %tobool103, label %if.then104, label %if.end107, !dbg !22526

if.then104:                                       ; preds = %if.end101
  %71 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22527
  %72 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22528
  %icount105 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %72, i32 0, i32 4, !dbg !22529
  %rxcrc106 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount105, i32 0, i32 19, !dbg !22530
  %73 = load i32, i32* %rxcrc106, align 4, !dbg !22530
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %71, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.173, i64 0, i64 0), i32 %73) #11, !dbg !22531
  br label %if.end107, !dbg !22531

if.end107:                                        ; preds = %if.then104, %if.end101
  br label %if.end134, !dbg !22532

if.else:                                          ; preds = %lor.lhs.false
  %74 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22533
  %75 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22535
  %icount108 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %75, i32 0, i32 4, !dbg !22536
  %tx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount108, i32 0, i32 4, !dbg !22537
  %76 = load i32, i32* %tx, align 8, !dbg !22537
  %77 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22538
  %icount109 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %77, i32 0, i32 4, !dbg !22539
  %rx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount109, i32 0, i32 5, !dbg !22540
  %78 = load i32, i32* %rx, align 4, !dbg !22540
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %74, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.174, i64 0, i64 0), i32 %76, i32 %78) #11, !dbg !22541
  %79 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22542
  %icount110 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %79, i32 0, i32 4, !dbg !22544
  %frame = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount110, i32 0, i32 6, !dbg !22545
  %80 = load i32, i32* %frame, align 8, !dbg !22545
  %tobool111 = icmp ne i32 %80, 0, !dbg !22542
  br i1 %tobool111, label %if.then112, label %if.end115, !dbg !22546

if.then112:                                       ; preds = %if.else
  %81 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22547
  %82 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22548
  %icount113 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %82, i32 0, i32 4, !dbg !22549
  %frame114 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount113, i32 0, i32 6, !dbg !22550
  %83 = load i32, i32* %frame114, align 8, !dbg !22550
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %81, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.175, i64 0, i64 0), i32 %83) #11, !dbg !22551
  br label %if.end115, !dbg !22551

if.end115:                                        ; preds = %if.then112, %if.else
  %84 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22552
  %icount116 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %84, i32 0, i32 4, !dbg !22554
  %parity = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount116, i32 0, i32 7, !dbg !22555
  %85 = load i32, i32* %parity, align 4, !dbg !22555
  %tobool117 = icmp ne i32 %85, 0, !dbg !22552
  br i1 %tobool117, label %if.then118, label %if.end121, !dbg !22556

if.then118:                                       ; preds = %if.end115
  %86 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22557
  %87 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22558
  %icount119 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %87, i32 0, i32 4, !dbg !22559
  %parity120 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount119, i32 0, i32 7, !dbg !22560
  %88 = load i32, i32* %parity120, align 4, !dbg !22560
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %86, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.176, i64 0, i64 0), i32 %88) #11, !dbg !22561
  br label %if.end121, !dbg !22561

if.end121:                                        ; preds = %if.then118, %if.end115
  %89 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22562
  %icount122 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %89, i32 0, i32 4, !dbg !22564
  %brk = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount122, i32 0, i32 9, !dbg !22565
  %90 = load i32, i32* %brk, align 4, !dbg !22565
  %tobool123 = icmp ne i32 %90, 0, !dbg !22562
  br i1 %tobool123, label %if.then124, label %if.end127, !dbg !22566

if.then124:                                       ; preds = %if.end121
  %91 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22567
  %92 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22568
  %icount125 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %92, i32 0, i32 4, !dbg !22569
  %brk126 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount125, i32 0, i32 9, !dbg !22570
  %93 = load i32, i32* %brk126, align 4, !dbg !22570
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %91, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.177, i64 0, i64 0), i32 %93) #11, !dbg !22571
  br label %if.end127, !dbg !22571

if.end127:                                        ; preds = %if.then124, %if.end121
  %94 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22572
  %icount128 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %94, i32 0, i32 4, !dbg !22574
  %overrun = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount128, i32 0, i32 8, !dbg !22575
  %95 = load i32, i32* %overrun, align 8, !dbg !22575
  %tobool129 = icmp ne i32 %95, 0, !dbg !22572
  br i1 %tobool129, label %if.then130, label %if.end133, !dbg !22576

if.then130:                                       ; preds = %if.end127
  %96 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22577
  %97 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22578
  %icount131 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %97, i32 0, i32 4, !dbg !22579
  %overrun132 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount131, i32 0, i32 8, !dbg !22580
  %98 = load i32, i32* %overrun132, align 8, !dbg !22580
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %96, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.178, i64 0, i64 0), i32 %98) #11, !dbg !22581
  br label %if.end133, !dbg !22581

if.end133:                                        ; preds = %if.then130, %if.end127
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.end107
  %99 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22582
  %arraydecay135 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !22583
  %add.ptr = getelementptr i8, i8* %arraydecay135, i64 1, !dbg !22584
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %99, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.179, i64 0, i64 0), i8* %add.ptr) #11, !dbg !22585
  %100 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22586
  %101 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22587
  %tx_active = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %101, i32 0, i32 52, !dbg !22588
  %102 = load i8, i8* %tx_active, align 4, !dbg !22588
  %tobool136 = trunc i8 %102 to i1, !dbg !22588
  %conv137 = zext i1 %tobool136 to i32, !dbg !22587
  %103 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22589
  %bh_requested = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %103, i32 0, i32 25, !dbg !22590
  %104 = load i8, i8* %bh_requested, align 8, !dbg !22590
  %tobool138 = trunc i8 %104 to i1, !dbg !22590
  %conv139 = zext i1 %tobool138 to i32, !dbg !22589
  %105 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22591
  %bh_running = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %105, i32 0, i32 23, !dbg !22592
  %106 = load i8, i8* %bh_running, align 8, !dbg !22592
  %tobool140 = trunc i8 %106 to i1, !dbg !22592
  %conv141 = zext i1 %tobool140 to i32, !dbg !22591
  %107 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22593
  %pending_bh = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %107, i32 0, i32 22, !dbg !22594
  %108 = load i32, i32* %pending_bh, align 4, !dbg !22594
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %100, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.180, i64 0, i64 0), i32 %conv137, i32 %conv139, i32 %conv141, i32 %108) #11, !dbg !22595
  br label %do.body142, !dbg !22596

do.body142:                                       ; preds = %if.end134
  br label %do.body143, !dbg !22597

do.body143:                                       ; preds = %do.body142
  call void @llvm.dbg.declare(metadata i64* %__dummy144, metadata !22598, metadata !DIExpression()), !dbg !22600
  call void @llvm.dbg.declare(metadata i64* %__dummy2145, metadata !22601, metadata !DIExpression()), !dbg !22600
  %cmp146 = icmp eq i64* %__dummy144, %__dummy2145, !dbg !22600
  %conv147 = zext i1 %cmp146 to i32, !dbg !22600
  store i32 1, i32* %tmp148, align 4, !dbg !22600
  %109 = load i32, i32* %tmp148, align 4, !dbg !22600
  br label %do.body149, !dbg !22602

do.body149:                                       ; preds = %do.body143
  br label %do.body150, !dbg !22603

do.body150:                                       ; preds = %do.body149
  br label %do.body151, !dbg !22604

do.body151:                                       ; preds = %do.body150
  call void @llvm.dbg.declare(metadata i64* %__dummy152, metadata !22606, metadata !DIExpression()), !dbg !22609
  call void @llvm.dbg.declare(metadata i64* %__dummy2153, metadata !22610, metadata !DIExpression()), !dbg !22609
  %cmp154 = icmp eq i64* %__dummy152, %__dummy2153, !dbg !22609
  %conv155 = zext i1 %cmp154 to i32, !dbg !22609
  store i32 1, i32* %tmp156, align 4, !dbg !22609
  %110 = load i32, i32* %tmp156, align 4, !dbg !22609
  %call157 = call i64 @arch_local_irq_save() #11, !dbg !22611
  store i64 %call157, i64* %flags, align 8, !dbg !22611
  br label %do.end158, !dbg !22611

do.end158:                                        ; preds = %do.body151
  br label %do.end159, !dbg !22604

do.end159:                                        ; preds = %do.end158
  br label %do.body160, !dbg !22603

do.body160:                                       ; preds = %do.end159
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22612, !srcloc !22613
  br label %do.body161, !dbg !22612

do.body161:                                       ; preds = %do.body160
  %111 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22614
  %irq_spinlock162 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %111, i32 0, i32 17, !dbg !22614
  store %struct.spinlock* %irq_spinlock162, %struct.spinlock** %lock.addr.i200, align 8
  %112 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i200, align 8, !dbg !22615
  %113 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %112, i32 0, i32 0, !dbg !22616
  %rlock.i201 = bitcast %union.anon.1* %113 to %struct.raw_spinlock*, !dbg !22616
  br label %do.end164, !dbg !22614

do.end164:                                        ; preds = %do.body161
  br label %do.end165, !dbg !22612

do.end165:                                        ; preds = %do.end164
  br label %do.end166, !dbg !22603

do.end166:                                        ; preds = %do.end165
  br label %do.end167, !dbg !22602

do.end167:                                        ; preds = %do.end166
  br label %do.end168, !dbg !22597

do.end168:                                        ; preds = %do.end167
  call void @llvm.dbg.declare(metadata i16* %Tcsr, metadata !22617, metadata !DIExpression()), !dbg !22619
  %114 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22620
  %call169 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %114, i16 zeroext 52) #11, !dbg !22621
  store i16 %call169, i16* %Tcsr, align 2, !dbg !22619
  call void @llvm.dbg.declare(metadata i16* %Tdmr, metadata !22622, metadata !DIExpression()), !dbg !22623
  %115 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22624
  %call170 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %115, i16 zeroext 2) #11, !dbg !22625
  store i16 %call170, i16* %Tdmr, align 2, !dbg !22623
  call void @llvm.dbg.declare(metadata i16* %Ticr, metadata !22626, metadata !DIExpression()), !dbg !22627
  %116 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22628
  %call171 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %116, i16 zeroext 54) #11, !dbg !22629
  store i16 %call171, i16* %Ticr, align 2, !dbg !22627
  call void @llvm.dbg.declare(metadata i16* %Rscr, metadata !22630, metadata !DIExpression()), !dbg !22631
  %117 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22632
  %call172 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %117, i16 zeroext 36) #11, !dbg !22633
  store i16 %call172, i16* %Rscr, align 2, !dbg !22631
  call void @llvm.dbg.declare(metadata i16* %Rdmr, metadata !22634, metadata !DIExpression()), !dbg !22635
  %118 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22636
  %call173 = call zeroext i16 @usc_InDmaReg(%struct.mgsl_struct* %118, i16 zeroext 130) #11, !dbg !22637
  store i16 %call173, i16* %Rdmr, align 2, !dbg !22635
  call void @llvm.dbg.declare(metadata i16* %Ricr, metadata !22638, metadata !DIExpression()), !dbg !22639
  %119 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22640
  %call174 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %119, i16 zeroext 38) #11, !dbg !22641
  store i16 %call174, i16* %Ricr, align 2, !dbg !22639
  call void @llvm.dbg.declare(metadata i16* %Icr, metadata !22642, metadata !DIExpression()), !dbg !22643
  %120 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22644
  %call175 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %120, i16 zeroext 24) #11, !dbg !22645
  store i16 %call175, i16* %Icr, align 2, !dbg !22643
  call void @llvm.dbg.declare(metadata i16* %Dccr, metadata !22646, metadata !DIExpression()), !dbg !22647
  %121 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22648
  %call176 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %121, i16 zeroext 26) #11, !dbg !22649
  store i16 %call176, i16* %Dccr, align 2, !dbg !22647
  call void @llvm.dbg.declare(metadata i16* %Tmr, metadata !22650, metadata !DIExpression()), !dbg !22651
  %122 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22652
  %call177 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %122, i16 zeroext 50) #11, !dbg !22653
  store i16 %call177, i16* %Tmr, align 2, !dbg !22651
  call void @llvm.dbg.declare(metadata i16* %Tccr, metadata !22654, metadata !DIExpression()), !dbg !22655
  %123 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22656
  %call178 = call zeroext i16 @usc_InReg(%struct.mgsl_struct* %123, i16 zeroext 60) #11, !dbg !22657
  store i16 %call178, i16* %Tccr, align 2, !dbg !22655
  call void @llvm.dbg.declare(metadata i16* %Ccar, metadata !22658, metadata !DIExpression()), !dbg !22659
  %124 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22660
  %io_base179 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %124, i32 0, i32 59, !dbg !22661
  %125 = load i32, i32* %io_base179, align 4, !dbg !22661
  %add = add i32 %125, 4, !dbg !22662
  %call180 = call zeroext i16 @inw(i32 %add) #11, !dbg !22663
  store i16 %call180, i16* %Ccar, align 2, !dbg !22659
  %126 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !22664
  %127 = load i16, i16* %Tcsr, align 2, !dbg !22665
  %conv181 = zext i16 %127 to i32, !dbg !22665
  %128 = load i16, i16* %Tdmr, align 2, !dbg !22666
  %conv182 = zext i16 %128 to i32, !dbg !22666
  %129 = load i16, i16* %Ticr, align 2, !dbg !22667
  %conv183 = zext i16 %129 to i32, !dbg !22667
  %130 = load i16, i16* %Rscr, align 2, !dbg !22668
  %conv184 = zext i16 %130 to i32, !dbg !22668
  %131 = load i16, i16* %Rdmr, align 2, !dbg !22669
  %conv185 = zext i16 %131 to i32, !dbg !22669
  %132 = load i16, i16* %Ricr, align 2, !dbg !22670
  %conv186 = zext i16 %132 to i32, !dbg !22670
  %133 = load i16, i16* %Icr, align 2, !dbg !22671
  %conv187 = zext i16 %133 to i32, !dbg !22671
  %134 = load i16, i16* %Dccr, align 2, !dbg !22672
  %conv188 = zext i16 %134 to i32, !dbg !22672
  %135 = load i16, i16* %Tmr, align 2, !dbg !22673
  %conv189 = zext i16 %135 to i32, !dbg !22673
  %136 = load i16, i16* %Tccr, align 2, !dbg !22674
  %conv190 = zext i16 %136 to i32, !dbg !22674
  %137 = load i16, i16* %Ccar, align 2, !dbg !22675
  %conv191 = zext i16 %137 to i32, !dbg !22675
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %126, i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.181, i64 0, i64 0), i32 %conv181, i32 %conv182, i32 %conv183, i32 %conv184, i32 %conv185, i32 %conv186, i32 %conv187, i32 %conv188, i32 %conv189, i32 %conv190, i32 %conv191) #11, !dbg !22676
  %138 = load %struct.mgsl_struct*, %struct.mgsl_struct** %info.addr, align 8, !dbg !22677
  %irq_spinlock192 = getelementptr inbounds %struct.mgsl_struct, %struct.mgsl_struct* %138, i32 0, i32 17, !dbg !22678
  %139 = load i64, i64* %flags, align 8, !dbg !22679
  store %struct.spinlock* %irq_spinlock192, %struct.spinlock** %lock.addr.i193, align 8
  store i64 %139, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !9358, metadata !DIExpression()) #10, !dbg !22680
  call void @llvm.dbg.declare(metadata !1587, metadata !9362, metadata !DIExpression()) #10, !dbg !22680
  store i32 1, i32* %tmp.i, align 4, !dbg !22680
  %140 = load i32, i32* %tmp.i, align 4, !dbg !22680
  call void @llvm.dbg.declare(metadata !1587, metadata !9363, metadata !DIExpression()) #10, !dbg !22681
  call void @llvm.dbg.declare(metadata !1587, metadata !9369, metadata !DIExpression()) #10, !dbg !22681
  store i32 1, i32* %tmp8.i, align 4, !dbg !22681
  %141 = load i32, i32* %tmp8.i, align 4, !dbg !22681
  %142 = load i64, i64* %flags.addr.i, align 8, !dbg !22682
  call void @arch_local_irq_restore(i64 %142) #14, !dbg !22682
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !22683, !srcloc !9373
  %143 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i193, align 8, !dbg !22684
  %144 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %143, i32 0, i32 0, !dbg !22684
  %rlock.i194 = bitcast %union.anon.1* %144 to %struct.raw_spinlock*, !dbg !22684
  ret void, !dbg !22685
}

; Function Attrs: noredzone
declare dso_local i8* @strcat(i8*, i8*) #4

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { noredzone nounwind }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!8204}
!llvm.module.flags = !{!8205, !8206, !8207, !8208}
!llvm.ident = !{!8209}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_break_on_load", scope: !2, file: !3, line: 868, type: !8201, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !7523, globals: !7704, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/tty/synclink.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !57, !64, !95, !129, !170, !177, !208, !221, !229, !235, !242, !246, !250, !257, !263, !7368, !5656, !5751, !6211, !6230, !3892, !4134, !4218, !4294, !4302, !7469, !7474, !7505, !7512, !7517}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !31, line: 115, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!32 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!35 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!36 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !31, line: 836, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!39 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !31, line: 860, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63}
!59 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !65, line: 369, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!67 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!77 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!78 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!79 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!80 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!81 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!82 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!83 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!84 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!85 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!86 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!87 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!88 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!89 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!90 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!91 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!92 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!93 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!94 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !96, line: 170, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !96, line: 204, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!131 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!169 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !65, line: 578, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176}
!172 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !96, line: 130, baseType: !7, size: 32, elements: !178)
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!179 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !209, line: 585, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!211 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !209, line: 602, baseType: !7, size: 32, elements: !222)
!222 = !{!223, !224, !225, !226, !227, !228}
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!227 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !209, line: 615, baseType: !7, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234}
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!234 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !209, line: 626, baseType: !7, size: 32, elements: !236)
!236 = !{!237, !238, !239, !240, !241}
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!240 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !209, line: 638, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245}
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !209, line: 647, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249}
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !251, line: 54, baseType: !7, size: 32, elements: !252)
!251 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !31, line: 423, baseType: !7, size: 32, elements: !258)
!258 = !{!259, !260, !261, !262}
!259 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!260 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!261 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!262 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2085, baseType: !7, size: 32, elements: !7462)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !31, line: 1858, size: 15808, elements: !265)
!265 = !{!266, !271, !294, !311, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !328, !336, !337, !338, !339, !340, !341, !342, !343, !344, !370, !380, !381, !382, !387, !388, !392, !395, !6675, !7191, !7195, !7235, !7236, !7237, !7238, !7239, !7240, !7241, !7242, !7243, !7244, !7245, !7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261, !7266, !7267, !7268, !7269, !7270, !7271, !7272, !7275, !7278, !7281, !7284, !7287, !7288, !7301, !7302, !7303, !7304, !7305, !7306, !7313, !7314, !7348, !7349, !7350, !7351, !7352, !7353, !7354, !7355, !7356, !7359, !7360, !7361, !7362, !7363, !7364, !7365, !7366, !7367, !7372, !7373, !7374, !7379, !7416, !7417, !7419, !7420, !7424, !7425, !7426, !7427, !7433, !7435, !7438, !7441, !7443, !7444, !7445, !7446, !7447, !7451, !7454}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !264, file: !31, line: 1859, baseType: !267, size: 128)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 128, elements: !269)
!268 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!269 = !{!270}
!270 = !DISubrange(count: 16)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !264, file: !31, line: 1860, baseType: !272, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !31, line: 938, size: 384, elements: !274)
!274 = !{!275, !283, !289, !291}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !273, file: !31, line: 939, baseType: !276, size: 128)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !277, line: 186, size: 128, elements: !278)
!277 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !276, file: !277, line: 187, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !276, file: !277, line: 187, baseType: !282, size: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !273, file: !31, line: 940, baseType: !284, size: 128, offset: 128)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !277, line: 178, size: 128, elements: !285)
!285 = !{!286, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !277, line: 179, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !277, line: 179, baseType: !287, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !31, line: 941, baseType: !290, size: 64, offset: 256)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !273, file: !31, line: 942, baseType: !292, size: 64, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !264, file: !31, line: 1861, baseType: !295, size: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !31, line: 930, size: 128, elements: !297)
!297 = !{!298, !307}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !296, file: !31, line: 931, baseType: !299, size: 128, align: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !277, line: 216, size: 128, align: 64, elements: !300)
!300 = !{!301, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !299, file: !277, line: 217, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !299, file: !277, line: 218, baseType: !304, size: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !302}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !296, file: !31, line: 932, baseType: !308, offset: 128)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: -1)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !264, file: !31, line: 1866, baseType: !312, size: 64, offset: 256)
!312 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !264, file: !31, line: 1867, baseType: !312, size: 64, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !264, file: !31, line: 1868, baseType: !312, size: 64, offset: 384)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !264, file: !31, line: 1869, baseType: !32, size: 32, offset: 448)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !264, file: !31, line: 1877, baseType: !312, size: 64, offset: 512)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !264, file: !31, line: 1879, baseType: !284, size: 128, offset: 576)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !264, file: !31, line: 1880, baseType: !284, size: 128, offset: 704)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !264, file: !31, line: 1881, baseType: !284, size: 128, offset: 832)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !264, file: !31, line: 1882, baseType: !284, size: 128, offset: 960)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !264, file: !31, line: 1883, baseType: !284, size: 128, offset: 1088)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !264, file: !31, line: 1884, baseType: !284, size: 128, offset: 1216)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !264, file: !31, line: 1889, baseType: !324, size: 256, offset: 1344)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !264, file: !31, line: 1886, size: 256, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !324, file: !31, line: 1887, baseType: !284, size: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !324, file: !31, line: 1888, baseType: !284, size: 128, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !264, file: !31, line: 1891, baseType: !329, size: 64, offset: 1600)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !330, line: 12, baseType: !331)
!330 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !332, line: 23, baseType: !333)
!332 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !334, line: 31, baseType: !335)
!334 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!335 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !264, file: !31, line: 1892, baseType: !329, size: 64, offset: 1664)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !264, file: !31, line: 1893, baseType: !329, size: 64, offset: 1728)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !264, file: !31, line: 1894, baseType: !329, size: 64, offset: 1792)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !264, file: !31, line: 1895, baseType: !329, size: 64, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !264, file: !31, line: 1896, baseType: !329, size: 64, offset: 1920)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !264, file: !31, line: 1897, baseType: !329, size: 64, offset: 1984)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !264, file: !31, line: 1899, baseType: !32, size: 32, offset: 2048)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !264, file: !31, line: 1900, baseType: !32, size: 32, offset: 2080)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !264, file: !31, line: 1902, baseType: !345, size: 1472, offset: 2112)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !31, line: 169, size: 1472, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !345, file: !31, line: 170, baseType: !312, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !345, file: !31, line: 171, baseType: !312, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !345, file: !31, line: 172, baseType: !312, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !345, file: !31, line: 173, baseType: !312, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !345, file: !31, line: 174, baseType: !312, size: 64, offset: 256)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !345, file: !31, line: 175, baseType: !312, size: 64, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !345, file: !31, line: 176, baseType: !312, size: 64, offset: 384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !345, file: !31, line: 177, baseType: !312, size: 64, offset: 448)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !345, file: !31, line: 178, baseType: !312, size: 64, offset: 512)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !345, file: !31, line: 179, baseType: !312, size: 64, offset: 576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !345, file: !31, line: 180, baseType: !312, size: 64, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !345, file: !31, line: 181, baseType: !312, size: 64, offset: 704)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !345, file: !31, line: 182, baseType: !312, size: 64, offset: 768)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !345, file: !31, line: 183, baseType: !312, size: 64, offset: 832)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !345, file: !31, line: 184, baseType: !312, size: 64, offset: 896)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !345, file: !31, line: 185, baseType: !312, size: 64, offset: 960)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !345, file: !31, line: 186, baseType: !312, size: 64, offset: 1024)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !345, file: !31, line: 187, baseType: !312, size: 64, offset: 1088)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !345, file: !31, line: 188, baseType: !312, size: 64, offset: 1152)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !345, file: !31, line: 189, baseType: !312, size: 64, offset: 1216)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !345, file: !31, line: 190, baseType: !312, size: 64, offset: 1280)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !345, file: !31, line: 191, baseType: !312, size: 64, offset: 1344)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !345, file: !31, line: 192, baseType: !312, size: 64, offset: 1408)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !264, file: !31, line: 1904, baseType: !371, size: 64, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !372, line: 13, baseType: !373)
!372 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !277, line: 175, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 173, size: 64, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !374, file: !277, line: 174, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !332, line: 22, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !334, line: 30, baseType: !379)
!379 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !264, file: !31, line: 1905, baseType: !371, size: 64, offset: 3648)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !264, file: !31, line: 1906, baseType: !371, size: 64, offset: 3712)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !264, file: !31, line: 1909, baseType: !383, size: 32, offset: 3776)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !277, line: 168, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 166, size: 32, elements: !385)
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !384, file: !277, line: 167, baseType: !32, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !264, file: !31, line: 1910, baseType: !383, size: 32, offset: 3808)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !264, file: !31, line: 1913, baseType: !389, size: 64, offset: 3840)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !31, line: 1913, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !264, file: !31, line: 1914, baseType: !393, size: 64, offset: 3904)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !31, line: 1914, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !264, file: !31, line: 1916, baseType: !396, size: 64, offset: 3968)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !31, line: 1283, size: 4416, elements: !399)
!399 = !{!400, !404, !408, !409, !410, !573, !577, !582, !586, !587, !592, !593, !716, !721, !725, !731, !735, !767, !775, !779, !784, !788, !789, !795, !799, !803, !807, !808, !830, !834, !849, !860, !864, !873, !877, !878, !882, !903, !907, !911, !915, !919, !926, !930, !948, !952, !1002, !1006, !1011, !1015, !1019, !1023, !1033, !1034, !1043, !1049, !1050, !1054, !1058, !1062, !1066, !1067, !1071, !1072, !6635, !6655, !6659, !6665, !6671}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !398, file: !31, line: 1284, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!32, !290}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !398, file: !31, line: 1285, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !290}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !398, file: !31, line: 1286, baseType: !401, size: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !398, file: !31, line: 1287, baseType: !401, size: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !398, file: !31, line: 1288, baseType: !411, size: 64, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{!414, !415, !290}
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !31, line: 120, baseType: !30)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !417, line: 713, size: 1600, elements: !418)
!417 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!418 = !{!419, !441, !449, !456, !460, !472, !473, !474, !477, !478, !479, !485, !486, !487, !488, !489, !490, !491, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !531, !532, !533, !534, !536, !537, !542, !547, !552, !553, !554, !555, !556, !557, !558, !559, !560, !562, !563, !565, !566, !567}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 714, baseType: !420, size: 192)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 714, size: 192, elements: !421)
!421 = !{!422, !432, !440}
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !420, file: !417, line: 715, baseType: !423, size: 192)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !420, file: !417, line: 715, size: 192, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !417, line: 717, baseType: !415, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !423, file: !417, line: 718, baseType: !415, size: 64, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !423, file: !417, line: 720, baseType: !428, size: 64, offset: 128)
!428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !423, file: !417, line: 720, size: 64, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !428, file: !417, line: 721, baseType: !290, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !428, file: !417, line: 726, baseType: !312, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !420, file: !417, line: 729, baseType: !433, size: 192, align: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !434, line: 24, size: 192, align: 64, elements: !435)
!434 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!435 = !{!436, !437, !439}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !433, file: !434, line: 25, baseType: !312, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !433, file: !434, line: 26, baseType: !438, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !433, file: !434, line: 27, baseType: !438, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !420, file: !417, line: 730, baseType: !284, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 733, baseType: !442, size: 64, offset: 192)
!442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 733, size: 64, elements: !443)
!443 = !{!444, !448}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !442, file: !417, line: 734, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !447, line: 19, flags: DIFlagFwdDecl)
!447 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !442, file: !417, line: 735, baseType: !32, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 738, baseType: !450, size: 64, offset: 256)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 738, size: 64, elements: !451)
!451 = !{!452, !455}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !450, file: !417, line: 739, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !454, line: 29, baseType: !377)
!454 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!455 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !450, file: !417, line: 740, baseType: !331, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !416, file: !417, line: 748, baseType: !457, size: 384, align: 64, offset: 320)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 384, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 48)
!460 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 750, baseType: !461, size: 128, offset: 704)
!461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 750, size: 128, elements: !462)
!462 = !{!463, !471}
!463 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !417, line: 751, baseType: !464, size: 128)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !461, file: !417, line: 751, size: 128, elements: !465)
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !464, file: !417, line: 752, baseType: !312, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !464, file: !417, line: 753, baseType: !468, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{null, !415}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !461, file: !417, line: 755, baseType: !284, size: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !416, file: !417, line: 761, baseType: !7, size: 32, offset: 832)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !416, file: !417, line: 762, baseType: !7, size: 32, offset: 864)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !416, file: !417, line: 763, baseType: !475, size: 16, offset: 896)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !334, line: 24, baseType: !476)
!476 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !416, file: !417, line: 764, baseType: !475, size: 16, offset: 912)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !416, file: !417, line: 769, baseType: !475, size: 16, offset: 928)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !416, file: !417, line: 780, baseType: !480, offset: 944)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, elements: !483)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !334, line: 21, baseType: !482)
!482 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!483 = !{!484}
!484 = !DISubrange(count: 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !416, file: !417, line: 782, baseType: !481, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !416, file: !417, line: 783, baseType: !481, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !416, file: !417, line: 784, baseType: !481, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !416, file: !417, line: 785, baseType: !481, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !416, file: !417, line: 786, baseType: !481, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !416, file: !417, line: 787, baseType: !481, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !416, file: !417, line: 795, baseType: !492, offset: 960)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, elements: !483)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !334, line: 27, baseType: !7)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !416, file: !417, line: 807, baseType: !480, offset: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !416, file: !417, line: 809, baseType: !481, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !416, file: !417, line: 810, baseType: !481, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !416, file: !417, line: 811, baseType: !481, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !416, file: !417, line: 812, baseType: !481, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !416, file: !417, line: 813, baseType: !481, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !416, file: !417, line: 815, baseType: !481, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !416, file: !417, line: 816, baseType: !481, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !416, file: !417, line: 817, baseType: !481, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !416, file: !417, line: 818, baseType: !481, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !416, file: !417, line: 819, baseType: !481, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !416, file: !417, line: 821, baseType: !481, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !416, file: !417, line: 822, baseType: !481, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !416, file: !417, line: 823, baseType: !481, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !416, file: !417, line: 832, baseType: !480, offset: 976)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !416, file: !417, line: 834, baseType: !481, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !416, file: !417, line: 835, baseType: !481, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !416, file: !417, line: 836, baseType: !481, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !416, file: !417, line: 837, baseType: !481, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !416, file: !417, line: 838, baseType: !481, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !416, file: !417, line: 840, baseType: !481, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !416, file: !417, line: 843, baseType: !481, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !416, file: !417, line: 844, baseType: !481, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !416, file: !417, line: 845, baseType: !481, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !416, file: !417, line: 847, baseType: !481, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !416, file: !417, line: 848, baseType: !481, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!520 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 866, baseType: !521, size: 32, offset: 992)
!521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 866, size: 32, elements: !522)
!522 = !{!523, !526}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !521, file: !417, line: 867, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !525, line: 37, baseType: !493)
!525 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !417, line: 868, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !521, file: !417, line: 868, size: 32, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !527, file: !417, line: 869, baseType: !475, size: 16)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !527, file: !417, line: 870, baseType: !475, size: 16, offset: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !416, file: !417, line: 873, baseType: !493, size: 32, offset: 1024)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !416, file: !417, line: 874, baseType: !32, size: 32, offset: 1056)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !416, file: !417, line: 875, baseType: !493, size: 32, offset: 1088)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !416, file: !417, line: 876, baseType: !535, size: 16, offset: 1120)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !525, line: 30, baseType: !475)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !416, file: !417, line: 877, baseType: !475, size: 16, offset: 1136)
!537 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 879, baseType: !538, size: 32, offset: 1152)
!538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 879, size: 32, elements: !539)
!539 = !{!540, !541}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !538, file: !417, line: 880, baseType: !7, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !538, file: !417, line: 881, baseType: !7, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 888, baseType: !543, size: 32, offset: 1184)
!543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 888, size: 32, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !543, file: !417, line: 889, baseType: !493, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !543, file: !417, line: 890, baseType: !493, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 893, baseType: !548, size: 16, offset: 1216)
!548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 893, size: 16, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !548, file: !417, line: 894, baseType: !535, size: 16)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !548, file: !417, line: 895, baseType: !481, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !416, file: !417, line: 898, baseType: !475, size: 16, offset: 1232)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !416, file: !417, line: 899, baseType: !475, size: 16, offset: 1248)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !416, file: !417, line: 900, baseType: !475, size: 16, offset: 1264)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !416, file: !417, line: 902, baseType: !535, size: 16, offset: 1280)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !416, file: !417, line: 903, baseType: !475, size: 16, offset: 1296)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !416, file: !417, line: 904, baseType: !475, size: 16, offset: 1312)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !416, file: !417, line: 905, baseType: !475, size: 16, offset: 1328)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !416, file: !417, line: 908, baseType: !492, offset: 1344)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !416, file: !417, line: 912, baseType: !561, size: 32, offset: 1344)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !417, line: 606, baseType: !7)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !417, line: 913, baseType: !561, size: 32, offset: 1376)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !416, file: !417, line: 914, baseType: !564, size: 64, offset: 1408)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !416, file: !417, line: 915, baseType: !564, size: 64, offset: 1472)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !416, file: !417, line: 916, baseType: !7, size: 32, offset: 1536)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !416, file: !417, line: 917, baseType: !568, size: 32, offset: 1568)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !569, line: 113, baseType: !570)
!569 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !569, line: 111, size: 32, elements: !571)
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !570, file: !569, line: 112, baseType: !383, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !398, file: !31, line: 1290, baseType: !574, size: 64, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!329, !415, !290, !329}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !398, file: !31, line: 1293, baseType: !578, size: 64, offset: 384)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!581, !290, !415, !290}
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !332, line: 19, baseType: !475)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !398, file: !31, line: 1296, baseType: !583, size: 64, offset: 448)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !290, !32}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !398, file: !31, line: 1298, baseType: !405, size: 64, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !398, file: !31, line: 1299, baseType: !588, size: 64, offset: 576)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!32, !290, !591}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !398, file: !31, line: 1301, baseType: !401, size: 64, offset: 640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !398, file: !31, line: 1302, baseType: !594, size: 64, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!32, !290, !597, !32}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !599, line: 234, size: 320, elements: !600)
!599 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!600 = !{!601, !605}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !598, file: !599, line: 239, baseType: !602, size: 128)
!602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 236, size: 128, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !602, file: !599, line: 238, baseType: !267, size: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !598, file: !599, line: 255, baseType: !606, size: 192, offset: 128)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 241, size: 192, elements: !607)
!607 = !{!608, !620, !621, !622, !623, !624, !626, !627, !628, !637, !638, !639, !640}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !606, file: !599, line: 242, baseType: !609, size: 128)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !610, line: 32, size: 128, elements: !611)
!610 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612, !616}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !609, file: !610, line: 33, baseType: !613, size: 16)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !610, line: 26, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !615, line: 10, baseType: !476)
!615 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!616 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !609, file: !610, line: 34, baseType: !617, size: 112, offset: 16)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 112, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 14)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !606, file: !599, line: 243, baseType: !609, size: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !606, file: !599, line: 244, baseType: !609, size: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !606, file: !599, line: 245, baseType: !609, size: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !606, file: !599, line: 246, baseType: !609, size: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !606, file: !599, line: 247, baseType: !625, size: 16)
!625 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !606, file: !599, line: 248, baseType: !32, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !606, file: !599, line: 249, baseType: !32, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !606, file: !599, line: 250, baseType: !629, size: 192)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !599, line: 196, size: 192, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !629, file: !599, line: 197, baseType: !312, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !629, file: !599, line: 198, baseType: !312, size: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !629, file: !599, line: 199, baseType: !476, size: 16, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !629, file: !599, line: 200, baseType: !482, size: 8, offset: 144)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !629, file: !599, line: 201, baseType: !482, size: 8, offset: 152)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !629, file: !599, line: 202, baseType: !482, size: 8, offset: 160)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !606, file: !599, line: 251, baseType: !267, size: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !606, file: !599, line: 252, baseType: !267, size: 128)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !606, file: !599, line: 253, baseType: !591, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !606, file: !599, line: 254, baseType: !641, size: 128)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !599, line: 207, size: 128, elements: !642)
!642 = !{!643, !644, !645}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !641, file: !599, line: 208, baseType: !7, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !641, file: !599, line: 209, baseType: !7, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !641, file: !599, line: 222, baseType: !646, size: 64, offset: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !641, file: !599, line: 210, size: 64, elements: !647)
!647 = !{!648, !656, !663, !675, !681, !688, !699, !707}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !646, file: !599, line: 212, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !651, line: 56, baseType: !652)
!651 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 53, size: 32, elements: !653)
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !652, file: !651, line: 54, baseType: !476, size: 16)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !652, file: !651, line: 55, baseType: !476, size: 16, offset: 16)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !646, file: !599, line: 213, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !651, line: 80, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 77, size: 64, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !659, file: !651, line: 78, baseType: !7, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !659, file: !651, line: 79, baseType: !7, size: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !646, file: !599, line: 214, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !651, line: 66, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 58, size: 192, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !666, file: !651, line: 59, baseType: !7, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !666, file: !651, line: 60, baseType: !7, size: 32, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !666, file: !651, line: 61, baseType: !7, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !666, file: !651, line: 62, baseType: !7, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !666, file: !651, line: 63, baseType: !7, size: 32, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !666, file: !651, line: 64, baseType: !476, size: 16, offset: 160)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !666, file: !651, line: 65, baseType: !476, size: 16, offset: 176)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !646, file: !599, line: 215, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !651, line: 70, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 68, size: 32, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !678, file: !651, line: 69, baseType: !7, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !646, file: !599, line: 216, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !651, line: 75, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 72, size: 160, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !684, file: !651, line: 73, baseType: !7, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !684, file: !651, line: 74, baseType: !267, size: 128, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !646, file: !599, line: 217, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !651, line: 89, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 82, size: 192, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !698}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !691, file: !651, line: 83, baseType: !476, size: 16)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !691, file: !651, line: 84, baseType: !7, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !691, file: !651, line: 85, baseType: !7, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !691, file: !651, line: 86, baseType: !7, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !691, file: !651, line: 87, baseType: !7, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !691, file: !651, line: 88, baseType: !7, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !646, file: !599, line: 220, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !651, line: 44, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 40, size: 96, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !702, file: !651, line: 41, baseType: !7, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !702, file: !651, line: 42, baseType: !7, size: 32, offset: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !702, file: !651, line: 43, baseType: !476, size: 16, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !646, file: !599, line: 221, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !651, line: 51, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 46, size: 128, elements: !711)
!711 = !{!712, !713, !714, !715}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !710, file: !651, line: 47, baseType: !7, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !710, file: !651, line: 48, baseType: !7, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !710, file: !651, line: 49, baseType: !476, size: 16, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !710, file: !651, line: 50, baseType: !7, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !398, file: !31, line: 1304, baseType: !717, size: 64, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!32, !290, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !398, file: !31, line: 1306, baseType: !722, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!32, !290, !32}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !398, file: !31, line: 1308, baseType: !726, size: 64, offset: 896)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!32, !290, !729}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !31, line: 206, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !398, file: !31, line: 1310, baseType: !732, size: 64, offset: 960)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !290, !7}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !398, file: !31, line: 1313, baseType: !736, size: 64, offset: 1024)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !290, !739}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !741, line: 214, size: 1536, elements: !742)
!741 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!742 = !{!743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !740, file: !741, line: 215, baseType: !333, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !740, file: !741, line: 216, baseType: !333, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !740, file: !741, line: 217, baseType: !333, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !740, file: !741, line: 218, baseType: !333, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !740, file: !741, line: 219, baseType: !333, size: 64, offset: 256)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !740, file: !741, line: 220, baseType: !333, size: 64, offset: 320)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !740, file: !741, line: 221, baseType: !333, size: 64, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !740, file: !741, line: 222, baseType: !333, size: 64, offset: 448)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !740, file: !741, line: 223, baseType: !333, size: 64, offset: 512)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !740, file: !741, line: 224, baseType: !333, size: 64, offset: 576)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !740, file: !741, line: 227, baseType: !333, size: 64, offset: 640)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !740, file: !741, line: 228, baseType: !333, size: 64, offset: 704)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !740, file: !741, line: 229, baseType: !333, size: 64, offset: 768)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !740, file: !741, line: 230, baseType: !333, size: 64, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !740, file: !741, line: 231, baseType: !333, size: 64, offset: 896)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !740, file: !741, line: 232, baseType: !333, size: 64, offset: 960)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !740, file: !741, line: 235, baseType: !333, size: 64, offset: 1024)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !740, file: !741, line: 236, baseType: !333, size: 64, offset: 1088)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !740, file: !741, line: 237, baseType: !333, size: 64, offset: 1152)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !740, file: !741, line: 238, baseType: !333, size: 64, offset: 1216)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !740, file: !741, line: 239, baseType: !333, size: 64, offset: 1280)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !740, file: !741, line: 242, baseType: !333, size: 64, offset: 1344)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !740, file: !741, line: 243, baseType: !333, size: 64, offset: 1408)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !740, file: !741, line: 244, baseType: !333, size: 64, offset: 1472)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !398, file: !31, line: 1315, baseType: !768, size: 64, offset: 1088)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!771, !773, !32}
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !277, line: 30, baseType: !772)
!772 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !398, file: !31, line: 1316, baseType: !776, size: 64, offset: 1152)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!32, !32, !773, !591}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !398, file: !31, line: 1319, baseType: !780, size: 64, offset: 1216)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!783, !290}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !398, file: !31, line: 1321, baseType: !785, size: 64, offset: 1280)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!32, !290, !535, !581}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !398, file: !31, line: 1323, baseType: !785, size: 64, offset: 1344)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !398, file: !31, line: 1331, baseType: !790, size: 64, offset: 1408)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!32, !290, !32, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !332, line: 17, baseType: !481)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !398, file: !31, line: 1333, baseType: !796, size: 64, offset: 1472)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!32, !290, !32, !581, !794, !535}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !398, file: !31, line: 1336, baseType: !800, size: 64, offset: 1536)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!32, !290, !32, !32, !32}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !398, file: !31, line: 1339, baseType: !804, size: 64, offset: 1600)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!32, !290, !32, !771}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !398, file: !31, line: 1341, baseType: !804, size: 64, offset: 1664)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !398, file: !31, line: 1343, baseType: !809, size: 64, offset: 1728)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!32, !290, !32, !812}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !814, line: 20, size: 576, elements: !815)
!814 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!815 = !{!816, !817, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !813, file: !814, line: 21, baseType: !493, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !813, file: !814, line: 22, baseType: !818, size: 256, offset: 32)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 256, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !813, file: !814, line: 23, baseType: !493, size: 32, offset: 288)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !813, file: !814, line: 24, baseType: !493, size: 32, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !813, file: !814, line: 25, baseType: !493, size: 32, offset: 352)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !813, file: !814, line: 26, baseType: !493, size: 32, offset: 384)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !813, file: !814, line: 27, baseType: !493, size: 32, offset: 416)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !813, file: !814, line: 28, baseType: !493, size: 32, offset: 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !813, file: !814, line: 29, baseType: !493, size: 32, offset: 480)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !813, file: !814, line: 30, baseType: !493, size: 32, offset: 512)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !813, file: !814, line: 31, baseType: !535, size: 16, offset: 544)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !398, file: !31, line: 1346, baseType: !831, size: 64, offset: 1792)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!32, !290, !32, !32}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !398, file: !31, line: 1348, baseType: !835, size: 64, offset: 1856)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!32, !290, !32, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !814, line: 9, size: 512, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !839, file: !814, line: 10, baseType: !333, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !839, file: !814, line: 11, baseType: !333, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !839, file: !814, line: 12, baseType: !333, size: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !839, file: !814, line: 13, baseType: !333, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !839, file: !814, line: 14, baseType: !333, size: 64, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !839, file: !814, line: 15, baseType: !333, size: 64, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !839, file: !814, line: 16, baseType: !333, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !839, file: !814, line: 17, baseType: !333, size: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !398, file: !31, line: 1352, baseType: !850, size: 64, offset: 1920)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!32, !290, !32, !853}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !856, line: 213, size: 32, elements: !857)
!856 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !855, file: !856, line: 214, baseType: !475, size: 16)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !855, file: !856, line: 215, baseType: !475, size: 16, offset: 16)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !398, file: !31, line: 1355, baseType: !861, size: 64, offset: 1984)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!32, !290, !32, !415}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !398, file: !31, line: 1357, baseType: !865, size: 64, offset: 2048)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!32, !290, !32, !868, !868}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !741, line: 956, size: 128, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !869, file: !741, line: 957, baseType: !493, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !869, file: !741, line: 958, baseType: !333, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !398, file: !31, line: 1361, baseType: !874, size: 64, offset: 2112)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!32, !290, !32, !331, !32}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !398, file: !31, line: 1364, baseType: !804, size: 64, offset: 2176)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !398, file: !31, line: 1367, baseType: !879, size: 64, offset: 2240)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!32, !290, !37, !591}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !398, file: !31, line: 1400, baseType: !883, size: 64, offset: 2304)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!32, !290, !290, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !888, line: 75, size: 384, elements: !889)
!888 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !891, !894, !898, !902}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !887, file: !888, line: 76, baseType: !292, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !887, file: !888, line: 77, baseType: !892, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !887, file: !888, line: 78, baseType: !895, size: 64, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !888, line: 78, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !887, file: !888, line: 79, baseType: !899, size: 160, offset: 192)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 160, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 20)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !887, file: !888, line: 80, baseType: !794, size: 8, offset: 352)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !398, file: !31, line: 1403, baseType: !904, size: 64, offset: 2368)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!32, !290, !290}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !398, file: !31, line: 1405, baseType: !908, size: 64, offset: 2432)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!290, !290, !415, !771}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !398, file: !31, line: 1408, baseType: !912, size: 64, offset: 2496)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!329, !290, !329}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !398, file: !31, line: 1410, baseType: !916, size: 64, offset: 2560)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!32, !290, !329}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !398, file: !31, line: 1412, baseType: !920, size: 64, offset: 2624)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!32, !290, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !925, line: 35, flags: DIFlagFwdDecl)
!925 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !398, file: !31, line: 1414, baseType: !927, size: 64, offset: 2688)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !290, !923}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !398, file: !31, line: 1417, baseType: !931, size: 64, offset: 2752)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!32, !934, !853, !290, !946, !581, !581, !886}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !936, line: 8, size: 96, elements: !937)
!936 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!937 = !{!938, !939, !940, !941, !943, !944, !945}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !935, file: !936, line: 9, baseType: !481, size: 8)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !935, file: !936, line: 10, baseType: !481, size: 8, offset: 8)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !935, file: !936, line: 11, baseType: !475, size: 16, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !935, file: !936, line: 12, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !334, line: 26, baseType: !32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !935, file: !936, line: 13, baseType: !475, size: 16, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !935, file: !936, line: 14, baseType: !481, size: 8, offset: 80)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !935, file: !936, line: 15, baseType: !481, size: 8, offset: 88)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !398, file: !31, line: 1424, baseType: !949, size: 64, offset: 2816)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{!32, !934, !853, !290, !946, !581}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !398, file: !31, line: 1429, baseType: !953, size: 64, offset: 2880)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!32, !415, !956, !290, !290, !1001}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !888, line: 203, size: 1024, elements: !958)
!958 = !{!959, !960, !970, !974, !978, !979, !983, !984, !985, !986, !988, !989, !990, !991}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !957, file: !888, line: 204, baseType: !415, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !957, file: !888, line: 205, baseType: !961, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !856, line: 44, size: 128, elements: !964)
!964 = !{!965, !966, !967, !968, !969}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !963, file: !856, line: 45, baseType: !493, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !963, file: !856, line: 46, baseType: !475, size: 16, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !963, file: !856, line: 47, baseType: !475, size: 16, offset: 48)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !963, file: !856, line: 48, baseType: !493, size: 32, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !963, file: !856, line: 49, baseType: !493, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !957, file: !888, line: 206, baseType: !971, size: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!32, !415, !956}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !957, file: !888, line: 208, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!32, !956}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !957, file: !888, line: 209, baseType: !591, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !957, file: !888, line: 211, baseType: !980, size: 64, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !982, line: 76, flags: DIFlagFwdDecl)
!982 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!983 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !957, file: !888, line: 212, baseType: !886, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !957, file: !888, line: 213, baseType: !581, size: 16, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !957, file: !888, line: 214, baseType: !581, size: 16, offset: 464)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !957, file: !888, line: 215, baseType: !987, size: 32, offset: 480)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !332, line: 21, baseType: !493)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 512)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 544)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !957, file: !888, line: 217, baseType: !771, size: 8, offset: 576)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !957, file: !888, line: 218, baseType: !992, size: 384, offset: 640)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !957, file: !888, line: 218, size: 384, elements: !993)
!993 = !{!994, !996}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !992, file: !888, line: 219, baseType: !995, size: 384)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 384, elements: !458)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !992, file: !888, line: 224, baseType: !997, size: 384)
!997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 384, elements: !999)
!998 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!999 = !{!1000}
!1000 = !DISubrange(count: 6)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !398, file: !31, line: 1434, baseType: !1003, size: 64, offset: 2944)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!32, !415, !853, !290, !946, !581, !987, !987, !886}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !398, file: !31, line: 1440, baseType: !1007, size: 64, offset: 3008)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!32, !290, !1010, !581, !886}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !398, file: !31, line: 1444, baseType: !1012, size: 64, offset: 3072)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!32, !415, !987, !987, !290, !987, !32}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !398, file: !31, line: 1449, baseType: !1016, size: 64, offset: 3136)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!32, !290, !1010, !581}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !398, file: !31, line: 1452, baseType: !1020, size: 64, offset: 3200)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!32, !290, !771}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !398, file: !31, line: 1454, baseType: !1024, size: 64, offset: 3264)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!32, !290, !1027}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !31, line: 820, size: 264, elements: !1029)
!1029 = !{!1030, !1032}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1028, file: !31, line: 821, baseType: !1031, size: 256)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 256, elements: !819)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1028, file: !31, line: 822, baseType: !482, size: 8, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !398, file: !31, line: 1456, baseType: !1024, size: 64, offset: 3328)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !398, file: !31, line: 1458, baseType: !1035, size: 64, offset: 3392)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!32, !290, !1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !277, line: 55, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1041, line: 72, baseType: !1042)
!1041 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1041, line: 16, baseType: !312)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !398, file: !31, line: 1460, baseType: !1044, size: 64, offset: 3456)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !290, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !31, line: 67, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !398, file: !31, line: 1462, baseType: !1044, size: 64, offset: 3520)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !398, file: !31, line: 1464, baseType: !1051, size: 64, offset: 3584)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!591, !290, !290}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !398, file: !31, line: 1466, baseType: !1055, size: 64, offset: 3648)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !290, !591}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !398, file: !31, line: 1469, baseType: !1059, size: 64, offset: 3712)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!32, !290, !32, !987}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !398, file: !31, line: 1472, baseType: !1063, size: 64, offset: 3776)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!32, !773}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !398, file: !31, line: 1473, baseType: !1020, size: 64, offset: 3840)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !398, file: !31, line: 1475, baseType: !1068, size: 64, offset: 3904)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!32, !290, !415}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !398, file: !31, line: 1477, baseType: !583, size: 64, offset: 3968)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !398, file: !31, line: 1479, baseType: !1073, size: 64, offset: 4032)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!32, !290, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !31, line: 894, size: 256, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1077, file: !31, line: 895, baseType: !57, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !31, line: 896, baseType: !1081, size: 192, offset: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1077, file: !31, line: 896, size: 192, elements: !1082)
!1082 = !{!1083, !1092, !6628}
!1083 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 898, baseType: !1084, size: 192)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 898, size: 192, elements: !1085)
!1085 = !{!1086, !1087, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1084, file: !31, line: 899, baseType: !987, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1084, file: !31, line: 900, baseType: !1088, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1090, line: 11, flags: DIFlagFwdDecl)
!1090 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1084, file: !31, line: 901, baseType: !886, size: 64, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 904, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 904, size: 64, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1093, file: !31, line: 905, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !65, line: 222, size: 2560, elements: !1098)
!1098 = !{!1099, !6607, !6608, !6626, !6627}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1097, file: !65, line: 223, baseType: !1100, size: 2048)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !65, line: 141, size: 2048, elements: !1101)
!1101 = !{!1102, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6598, !6599, !6600, !6601, !6602, !6603, !6604, !6605, !6606}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1100, file: !65, line: 145, baseType: !1103, size: 64, align: 512)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !65, line: 54, size: 2368, elements: !1106)
!1106 = !{!1107, !1306, !1311, !6257, !6261, !6265, !6266, !6270, !6276, !6277, !6278, !6279, !6280, !6284, !6288, !6292, !6293, !6294, !6298, !6299, !6311, !6315, !6319, !6331, !6517, !6521, !6525, !6529, !6533, !6537, !6541, !6547, !6551, !6558, !6562, !6564, !6565}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1105, file: !65, line: 56, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!32, !1111}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !96, line: 483, size: 960, align: 64, elements: !1113)
!1113 = !{!1114, !1130, !1141, !1152, !1176, !1182, !1190, !1207, !1220, !1226, !1235, !1240, !1248, !1260, !1280, !1287, !1291, !1295, !1300}
!1114 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 484, baseType: !1115, size: 512)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 484, size: 512, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1115, file: !96, line: 485, baseType: !493, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1115, file: !96, line: 486, baseType: !493, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1115, file: !96, line: 487, baseType: !493, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1115, file: !96, line: 488, baseType: !493, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1115, file: !96, line: 489, baseType: !493, size: 32, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1115, file: !96, line: 492, baseType: !493, size: 32, offset: 160)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1115, file: !96, line: 493, baseType: !493, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1115, file: !96, line: 496, baseType: !267, size: 128, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1115, file: !96, line: 497, baseType: !493, size: 32, offset: 352)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1115, file: !96, line: 498, baseType: !493, size: 32, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1115, file: !96, line: 499, baseType: !493, size: 32, offset: 416)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1115, file: !96, line: 500, baseType: !493, size: 32, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1115, file: !96, line: 501, baseType: !493, size: 32, offset: 480)
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 507, baseType: !1131, size: 256)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 507, size: 256, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1140}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1131, file: !96, line: 508, baseType: !493, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1131, file: !96, line: 509, baseType: !333, size: 64, align: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, scope: !1131, file: !96, line: 510, baseType: !1136, size: 64, offset: 128)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1131, file: !96, line: 510, size: 64, elements: !1137)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1136, file: !96, line: 511, baseType: !333, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1136, file: !96, line: 512, baseType: !333, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1131, file: !96, line: 514, baseType: !333, size: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1112, file: !96, line: 532, baseType: !1142, size: 448)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 517, size: 448, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1142, file: !96, line: 518, baseType: !333, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1142, file: !96, line: 521, baseType: !333, size: 64, align: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1142, file: !96, line: 522, baseType: !333, size: 64, align: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1142, file: !96, line: 523, baseType: !333, size: 64, align: 64, offset: 192)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1142, file: !96, line: 524, baseType: !493, size: 32, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1142, file: !96, line: 529, baseType: !493, size: 32, offset: 288)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1142, file: !96, line: 530, baseType: !333, size: 64, offset: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1142, file: !96, line: 531, baseType: !333, size: 64, offset: 384)
!1152 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 534, baseType: !1153, size: 960)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 534, size: 960, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1153, file: !96, line: 535, baseType: !493, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1153, file: !96, line: 536, baseType: !493, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1153, file: !96, line: 537, baseType: !333, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1153, file: !96, line: 538, baseType: !333, size: 64, align: 64, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1153, file: !96, line: 539, baseType: !493, size: 32, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1153, file: !96, line: 540, baseType: !493, size: 32, offset: 224)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1153, file: !96, line: 541, baseType: !333, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1153, file: !96, line: 542, baseType: !493, size: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1153, file: !96, line: 543, baseType: !493, size: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1153, file: !96, line: 544, baseType: !267, size: 128, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1153, file: !96, line: 545, baseType: !493, size: 32, offset: 512)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1153, file: !96, line: 550, baseType: !493, size: 32, offset: 544)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1153, file: !96, line: 551, baseType: !493, size: 32, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1153, file: !96, line: 552, baseType: !493, size: 32, offset: 608)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1153, file: !96, line: 553, baseType: !333, size: 64, align: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1153, file: !96, line: 554, baseType: !493, size: 32, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1153, file: !96, line: 555, baseType: !493, size: 32, offset: 736)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1153, file: !96, line: 556, baseType: !333, size: 64, align: 64, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1153, file: !96, line: 557, baseType: !493, size: 32, offset: 832)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1153, file: !96, line: 558, baseType: !493, size: 32, offset: 864)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1153, file: !96, line: 559, baseType: !493, size: 32, offset: 896)
!1176 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 562, baseType: !1177, size: 128)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 562, size: 128, elements: !1178)
!1178 = !{!1179, !1180, !1181}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1177, file: !96, line: 563, baseType: !333, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1177, file: !96, line: 564, baseType: !493, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1177, file: !96, line: 565, baseType: !493, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 568, baseType: !1183, size: 160)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 568, size: 160, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1183, file: !96, line: 569, baseType: !493, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1183, file: !96, line: 570, baseType: !493, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1183, file: !96, line: 571, baseType: !493, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1183, file: !96, line: 572, baseType: !493, size: 32, offset: 96)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1183, file: !96, line: 573, baseType: !493, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1112, file: !96, line: 600, baseType: !1191, size: 576)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 579, size: 576, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1191, file: !96, line: 580, baseType: !493, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1191, file: !96, line: 581, baseType: !493, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1191, file: !96, line: 582, baseType: !493, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1191, file: !96, line: 583, baseType: !493, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1191, file: !96, line: 587, baseType: !333, size: 64, align: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1191, file: !96, line: 588, baseType: !333, size: 64, align: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1191, file: !96, line: 589, baseType: !493, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1191, file: !96, line: 590, baseType: !493, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1191, file: !96, line: 591, baseType: !493, size: 32, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1191, file: !96, line: 592, baseType: !493, size: 32, offset: 352)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1191, file: !96, line: 596, baseType: !333, size: 64, align: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1191, file: !96, line: 597, baseType: !333, size: 64, align: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1191, file: !96, line: 598, baseType: !493, size: 32, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1191, file: !96, line: 599, baseType: !493, size: 32, offset: 544)
!1207 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 602, baseType: !1208, size: 96)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 602, size: 96, elements: !1209)
!1209 = !{!1210, !1218, !1219}
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1208, file: !96, line: 603, baseType: !1211, size: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1208, file: !96, line: 603, size: 32, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1211, file: !96, line: 604, baseType: !493, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1211, file: !96, line: 605, baseType: !493, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1211, file: !96, line: 606, baseType: !493, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1211, file: !96, line: 607, baseType: !493, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1211, file: !96, line: 608, baseType: !493, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1208, file: !96, line: 610, baseType: !493, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1208, file: !96, line: 611, baseType: !493, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1112, file: !96, line: 618, baseType: !1221, size: 128)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 614, size: 128, elements: !1222)
!1222 = !{!1223, !1224, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1221, file: !96, line: 615, baseType: !493, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1221, file: !96, line: 616, baseType: !493, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1221, file: !96, line: 617, baseType: !333, size: 64, align: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1112, file: !96, line: 627, baseType: !1227, size: 256)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 620, size: 256, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1227, file: !96, line: 621, baseType: !493, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1227, file: !96, line: 622, baseType: !493, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1227, file: !96, line: 623, baseType: !493, size: 32, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1227, file: !96, line: 624, baseType: !493, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1227, file: !96, line: 625, baseType: !333, size: 64, align: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1227, file: !96, line: 626, baseType: !493, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1112, file: !96, line: 632, baseType: !1236, size: 128)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 629, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !96, line: 630, baseType: !333, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1236, file: !96, line: 631, baseType: !493, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 634, baseType: !1241, size: 256)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 634, size: 256, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1241, file: !96, line: 635, baseType: !333, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1241, file: !96, line: 636, baseType: !333, size: 64, align: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1241, file: !96, line: 637, baseType: !493, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1241, file: !96, line: 638, baseType: !493, size: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1241, file: !96, line: 639, baseType: !493, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1112, file: !96, line: 656, baseType: !1249, size: 384)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 642, size: 384, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1249, file: !96, line: 643, baseType: !493, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1249, file: !96, line: 644, baseType: !493, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1249, file: !96, line: 645, baseType: !493, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1249, file: !96, line: 646, baseType: !493, size: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1249, file: !96, line: 647, baseType: !333, size: 64, align: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1249, file: !96, line: 652, baseType: !493, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1249, file: !96, line: 653, baseType: !493, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1249, file: !96, line: 654, baseType: !333, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1249, file: !96, line: 655, baseType: !333, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1112, file: !96, line: 673, baseType: !1261, size: 256)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 658, size: 256, elements: !1262)
!1262 = !{!1263, !1264, !1269, !1270, !1271}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1261, file: !96, line: 659, baseType: !493, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 660, baseType: !1265, size: 32, offset: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 660, size: 32, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1265, file: !96, line: 661, baseType: !493, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1265, file: !96, line: 662, baseType: !493, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1261, file: !96, line: 664, baseType: !493, size: 32, offset: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1261, file: !96, line: 665, baseType: !493, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 666, baseType: !1272, size: 128, offset: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 666, size: 128, elements: !1273)
!1273 = !{!1274, !1275}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1272, file: !96, line: 667, baseType: !493, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1272, file: !96, line: 668, baseType: !1276, size: 128)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1272, file: !96, line: 668, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1276, file: !96, line: 669, baseType: !333, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1276, file: !96, line: 670, baseType: !493, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1112, file: !96, line: 683, baseType: !1281, size: 128)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 675, size: 128, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1281, file: !96, line: 676, baseType: !493, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1281, file: !96, line: 678, baseType: !493, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1281, file: !96, line: 679, baseType: !493, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1281, file: !96, line: 682, baseType: !493, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1112, file: !96, line: 687, baseType: !1288, size: 32)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 685, size: 32, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1288, file: !96, line: 686, baseType: !493, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1112, file: !96, line: 691, baseType: !1292, size: 32)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 689, size: 32, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1292, file: !96, line: 690, baseType: !493, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1112, file: !96, line: 696, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 693, size: 64, elements: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1296, file: !96, line: 694, baseType: !493, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1296, file: !96, line: 695, baseType: !493, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1112, file: !96, line: 702, baseType: !1301, size: 96)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 698, size: 96, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1301, file: !96, line: 699, baseType: !493, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1301, file: !96, line: 700, baseType: !493, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1301, file: !96, line: 701, baseType: !493, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1105, file: !65, line: 57, baseType: !1307, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!1310, !1111}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1105, file: !65, line: 58, baseType: !1312, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !1310, !1315}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !1317, line: 916, size: 1856, align: 32, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1329, !6207, !6208, !6209, !6210, !6219, !6220, !6221, !6222, !6223, !6224, !6240, !6241, !6250, !6251, !6252, !6253, !6254, !6255, !6256}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1316, file: !1317, line: 920, baseType: !1320, size: 128)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !1317, line: 917, size: 128, elements: !1321)
!1321 = !{!1322, !1328}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1320, file: !1317, line: 918, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1324, line: 58, size: 64, elements: !1325)
!1324 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1323, file: !1324, line: 59, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1320, file: !1317, line: 919, baseType: !299, size: 128, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1316, file: !1317, line: 921, baseType: !1330, size: 128, offset: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1331, line: 8, size: 128, elements: !1332)
!1331 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1330, file: !1331, line: 9, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1336, line: 18, flags: DIFlagFwdDecl)
!1336 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1330, file: !1331, line: 10, baseType: !1338, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1336, line: 89, size: 1536, elements: !1340)
!1340 = !{!1341, !1342, !1352, !1360, !1361, !1374, !6176, !6177, !6189, !6190, !6191, !6192, !6193, !6199, !6200, !6201}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1339, file: !1336, line: 91, baseType: !7, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1339, file: !1336, line: 92, baseType: !1343, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1344, line: 277, baseType: !1345)
!1344 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1344, line: 277, size: 32, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1345, file: !1344, line: 277, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1344, line: 70, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1344, line: 65, size: 32, elements: !1350)
!1350 = !{!1351}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1349, file: !1344, line: 66, baseType: !7, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1339, file: !1336, line: 93, baseType: !1353, size: 128, offset: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1354, line: 38, size: 128, elements: !1355)
!1354 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1355 = !{!1356, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1353, file: !1354, line: 39, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1353, file: !1354, line: 39, baseType: !1359, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1339, file: !1336, line: 94, baseType: !1338, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1339, file: !1336, line: 95, baseType: !1362, size: 128, offset: 256)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1336, line: 47, size: 128, elements: !1363)
!1363 = !{!1364, !1373}
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1362, file: !1336, line: 48, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !1336, line: 48, size: 64, elements: !1366)
!1366 = !{!1367, !1372}
!1367 = !DIDerivedType(tag: DW_TAG_member, scope: !1365, file: !1336, line: 49, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1365, file: !1336, line: 49, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1365, file: !1336, line: 52, baseType: !331, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !1336, line: 54, baseType: !946, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1339, file: !1336, line: 96, baseType: !1375, size: 64, offset: 384)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !1317, line: 610, size: 4224, elements: !1377)
!1377 = !{!1378, !1380, !1381, !1389, !1396, !1397, !1544, !6111, !6112, !6113, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6143, !6144, !6145, !6146, !6147, !6148, !6149, !6154, !6162, !6163, !6164, !6172, !6173, !6174, !6175}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1376, file: !1317, line: 611, baseType: !1379, size: 16)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !277, line: 19, baseType: !476)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1376, file: !1317, line: 612, baseType: !476, size: 16, offset: 16)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1376, file: !1317, line: 613, baseType: !1382, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1383, line: 23, baseType: !1384)
!1383 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 21, size: 32, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1384, file: !1383, line: 22, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !277, line: 32, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1041, line: 49, baseType: !7)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1376, file: !1317, line: 614, baseType: !1390, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1383, line: 28, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 26, size: 32, elements: !1392)
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1391, file: !1383, line: 27, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !277, line: 33, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1041, line: 50, baseType: !7)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1376, file: !1317, line: 615, baseType: !7, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1376, file: !1317, line: 622, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !1317, line: 1864, size: 1536, align: 512, elements: !1401)
!1401 = !{!1402, !1406, !1419, !1423, !1429, !1433, !1437, !1441, !1445, !1449, !1453, !1454, !1460, !1464, !1488, !1517, !1524, !1530, !1535, !1539, !1540}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1400, file: !1317, line: 1865, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!1338, !1375, !1338, !7}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1400, file: !1317, line: 1866, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!292, !1338, !1375, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1412, line: 10, size: 128, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1418}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1411, file: !1412, line: 11, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !591}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1411, file: !1412, line: 12, baseType: !591, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1400, file: !1317, line: 1867, baseType: !1420, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!32, !1375, !32}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1400, file: !1317, line: 1868, baseType: !1424, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!1427, !1375, !32}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !1317, line: 581, flags: DIFlagFwdDecl)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1400, file: !1317, line: 1870, baseType: !1430, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!32, !1338, !1038, !32}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1400, file: !1317, line: 1872, baseType: !1434, size: 64, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!32, !1375, !1338, !1379, !771}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1400, file: !1317, line: 1873, baseType: !1438, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!32, !1338, !1375, !1338}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1400, file: !1317, line: 1874, baseType: !1442, size: 64, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!32, !1375, !1338}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1400, file: !1317, line: 1875, baseType: !1446, size: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!32, !1375, !1338, !292}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1400, file: !1317, line: 1876, baseType: !1450, size: 64, offset: 576)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!32, !1375, !1338, !1379}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1400, file: !1317, line: 1877, baseType: !1442, size: 64, offset: 640)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1400, file: !1317, line: 1878, baseType: !1455, size: 64, offset: 704)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!32, !1375, !1338, !1379, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !277, line: 16, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !277, line: 13, baseType: !987)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1400, file: !1317, line: 1879, baseType: !1461, size: 64, offset: 768)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!32, !1375, !1338, !1375, !1338, !7}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1400, file: !1317, line: 1881, baseType: !1465, size: 64, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!32, !1338, !1468}
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !1317, line: 219, size: 640, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475, !1478, !1485, !1486, !1487}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1469, file: !1317, line: 220, baseType: !7, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1469, file: !1317, line: 221, baseType: !1379, size: 16, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1469, file: !1317, line: 222, baseType: !1382, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1469, file: !1317, line: 223, baseType: !1390, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1469, file: !1317, line: 224, baseType: !1476, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !277, line: 46, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1041, line: 88, baseType: !379)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1469, file: !1317, line: 225, baseType: !1479, size: 128, offset: 192)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1480, line: 13, size: 128, elements: !1481)
!1480 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !{!1482, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1479, file: !1480, line: 14, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1480, line: 8, baseType: !378)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1479, file: !1480, line: 15, baseType: !998, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1469, file: !1317, line: 226, baseType: !1479, size: 128, offset: 320)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1469, file: !1317, line: 227, baseType: !1479, size: 128, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1469, file: !1317, line: 234, baseType: !1315, size: 64, offset: 576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1400, file: !1317, line: 1882, baseType: !1489, size: 64, offset: 896)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!32, !1492, !1494, !987, !7}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1496, line: 22, size: 1152, elements: !1497)
!1496 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1499, !1500, !1501, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1495, file: !1496, line: 23, baseType: !987, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1495, file: !1496, line: 24, baseType: !1379, size: 16, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1495, file: !1496, line: 25, baseType: !7, size: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1495, file: !1496, line: 26, baseType: !1502, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !277, line: 104, baseType: !987)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1495, file: !1496, line: 27, baseType: !331, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1495, file: !1496, line: 28, baseType: !331, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1495, file: !1496, line: 37, baseType: !331, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1495, file: !1496, line: 38, baseType: !1458, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1495, file: !1496, line: 39, baseType: !1458, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1495, file: !1496, line: 40, baseType: !1382, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1495, file: !1496, line: 41, baseType: !1390, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1495, file: !1496, line: 42, baseType: !1476, size: 64, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1495, file: !1496, line: 43, baseType: !1479, size: 128, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1495, file: !1496, line: 44, baseType: !1479, size: 128, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1495, file: !1496, line: 45, baseType: !1479, size: 128, offset: 768)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1495, file: !1496, line: 46, baseType: !1479, size: 128, offset: 896)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1495, file: !1496, line: 47, baseType: !331, size: 64, offset: 1024)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1495, file: !1496, line: 48, baseType: !331, size: 64, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1400, file: !1317, line: 1883, baseType: !1518, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!1521, !1338, !1038, !1039}
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !277, line: 60, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1041, line: 73, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1041, line: 15, baseType: !998)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1400, file: !1317, line: 1884, baseType: !1525, size: 64, offset: 1024)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!32, !1375, !1528, !331, !331}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !1317, line: 50, flags: DIFlagFwdDecl)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1400, file: !1317, line: 1886, baseType: !1531, size: 64, offset: 1088)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!32, !1375, !1534, !32}
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1400, file: !1317, line: 1887, baseType: !1536, size: 64, offset: 1152)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!32, !1375, !1338, !1315, !7, !1379}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1400, file: !1317, line: 1890, baseType: !1450, size: 64, offset: 1216)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1400, file: !1317, line: 1891, baseType: !1541, size: 64, offset: 1280)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!32, !1375, !1427, !32}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1376, file: !1317, line: 623, baseType: !1545, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !1317, line: 1416, size: 9472, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1597, !5714, !5802, !5885, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5901, !5905, !5906, !5909, !5910, !5913, !5914, !5915, !5956, !5983, !5984, !5985, !5986, !5987, !5988, !5991, !5992, !5998, !5999, !6001, !6002, !6003, !6062, !6063, !6078, !6079, !6080, !6081, !6082, !6085, !6086, !6087, !6102, !6103, !6104, !6105, !6106, !6107, !6108, !6109, !6110}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1546, file: !1317, line: 1417, baseType: !284, size: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1546, file: !1317, line: 1418, baseType: !1458, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1546, file: !1317, line: 1419, baseType: !482, size: 8, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1546, file: !1317, line: 1420, baseType: !312, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1546, file: !1317, line: 1421, baseType: !1476, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1546, file: !1317, line: 1422, baseType: !1554, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !1317, line: 2228, size: 576, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1566, !1570, !1574, !1578, !1579, !1580, !1584, !1588, !1589, !1590, !1594, !1595, !1596}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1555, file: !1317, line: 2229, baseType: !292, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1555, file: !1317, line: 2230, baseType: !32, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1555, file: !1317, line: 2238, baseType: !1560, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!32, !1563}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1565, line: 28, flags: DIFlagFwdDecl)
!1565 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1555, file: !1317, line: 2239, baseType: !1567, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !1317, line: 70, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1555, file: !1317, line: 2240, baseType: !1571, size: 64, offset: 256)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!1338, !1554, !32, !292, !591}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1555, file: !1317, line: 2242, baseType: !1575, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{null, !1545}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1555, file: !1317, line: 2243, baseType: !980, size: 64, offset: 384)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !1317, line: 2244, baseType: !1554, size: 64, offset: 448)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1555, file: !1317, line: 2245, baseType: !1581, size: 64, offset: 512)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !277, line: 182, size: 64, elements: !1582)
!1582 = !{!1583}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1581, file: !277, line: 183, baseType: !280, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1555, file: !1317, line: 2247, baseType: !1585, offset: 576)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1586, line: 187, elements: !1587)
!1586 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1587 = !{}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1555, file: !1317, line: 2248, baseType: !1585, offset: 576)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1555, file: !1317, line: 2249, baseType: !1585, offset: 576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1555, file: !1317, line: 2250, baseType: !1591, offset: 576)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 3)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1555, file: !1317, line: 2252, baseType: !1585, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1555, file: !1317, line: 2253, baseType: !1585, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1555, file: !1317, line: 2254, baseType: !1585, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1546, file: !1317, line: 1423, baseType: !1598, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !1317, line: 1935, size: 1472, elements: !1601)
!1601 = !{!1602, !1606, !1610, !1611, !1615, !1621, !1625, !1626, !1627, !1631, !1635, !1636, !1637, !1638, !1644, !1648, !1649, !1712, !1713, !1714, !1715, !5698, !5713}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1600, file: !1317, line: 1936, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1375, !1545}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1600, file: !1317, line: 1937, baseType: !1607, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1375}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1600, file: !1317, line: 1938, baseType: !1607, size: 64, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1600, file: !1317, line: 1940, baseType: !1612, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{null, !1375, !32}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1600, file: !1317, line: 1941, baseType: !1616, size: 64, offset: 256)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!32, !1375, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1600, file: !1317, line: 1942, baseType: !1622, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!32, !1375}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1600, file: !1317, line: 1943, baseType: !1607, size: 64, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1600, file: !1317, line: 1944, baseType: !1575, size: 64, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1600, file: !1317, line: 1945, baseType: !1628, size: 64, offset: 512)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!32, !1545, !32}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1600, file: !1317, line: 1946, baseType: !1632, size: 64, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!32, !1545}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1600, file: !1317, line: 1947, baseType: !1632, size: 64, offset: 640)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1600, file: !1317, line: 1948, baseType: !1632, size: 64, offset: 704)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1600, file: !1317, line: 1949, baseType: !1632, size: 64, offset: 768)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1600, file: !1317, line: 1950, baseType: !1639, size: 64, offset: 832)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!32, !1338, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !1317, line: 57, flags: DIFlagFwdDecl)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1600, file: !1317, line: 1951, baseType: !1645, size: 64, offset: 896)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!32, !1545, !1001, !1038}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1600, file: !1317, line: 1952, baseType: !1575, size: 64, offset: 960)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1600, file: !1317, line: 1954, baseType: !1650, size: 64, offset: 1024)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!32, !1653, !1338}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1655, line: 16, size: 896, elements: !1656)
!1655 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1685, !1707, !1708, !1711}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1654, file: !1655, line: 17, baseType: !1038, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1654, file: !1655, line: 18, baseType: !1039, size: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1654, file: !1655, line: 19, baseType: !1039, size: 64, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1654, file: !1655, line: 20, baseType: !1039, size: 64, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1654, file: !1655, line: 21, baseType: !1039, size: 64, offset: 256)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1654, file: !1655, line: 22, baseType: !1476, size: 64, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1654, file: !1655, line: 23, baseType: !1476, size: 64, offset: 384)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1654, file: !1655, line: 24, baseType: !1665, size: 192, offset: 448)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1666, line: 53, size: 192, elements: !1667)
!1666 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1667 = !{!1668, !1669, !1684}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1665, file: !1666, line: 54, baseType: !371, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1665, file: !1666, line: 55, baseType: !1670, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1671, line: 83, baseType: !1672)
!1671 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1671, line: 71, elements: !1673)
!1673 = !{!1674}
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1671, line: 72, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1671, line: 72, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1675, file: !1671, line: 73, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1671, line: 20, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1678, file: !1671, line: 21, baseType: !1681)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1682, line: 25, baseType: !1683)
!1682 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 25, elements: !1587)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1665, file: !1666, line: 59, baseType: !284, size: 128, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1654, file: !1655, line: 25, baseType: !1686, size: 64, offset: 640)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1655, line: 31, size: 256, elements: !1689)
!1689 = !{!1690, !1695, !1699, !1703}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1688, file: !1655, line: 32, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!591, !1653, !1694}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1688, file: !1655, line: 33, baseType: !1696, size: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1653, !591}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1688, file: !1655, line: 34, baseType: !1700, size: 64, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!591, !1653, !591, !1694}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1688, file: !1655, line: 35, baseType: !1704, size: 64, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!32, !1653, !591}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1654, file: !1655, line: 26, baseType: !32, size: 32, offset: 704)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1654, file: !1655, line: 27, baseType: !1709, size: 64, offset: 768)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1654, file: !1655, line: 28, baseType: !591, size: 64, offset: 832)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1600, file: !1317, line: 1955, baseType: !1650, size: 64, offset: 1088)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1600, file: !1317, line: 1956, baseType: !1650, size: 64, offset: 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1600, file: !1317, line: 1957, baseType: !1650, size: 64, offset: 1216)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1600, file: !1317, line: 1963, baseType: !1716, size: 64, offset: 1280)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!32, !1545, !1719, !1742}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1721, line: 68, size: 512, align: 128, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !5690, !5697}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1720, file: !1721, line: 69, baseType: !312, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 77, baseType: !1725, size: 320, offset: 64)
!1725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 77, size: 320, elements: !1726)
!1726 = !{!1727, !2032, !2037, !2065, !2073, !2079, !5614, !5689}
!1727 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 78, baseType: !1728, size: 320)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 78, size: 320, elements: !1729)
!1729 = !{!1730, !1731, !2030, !2031}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1728, file: !1721, line: 84, baseType: !284, size: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1728, file: !1721, line: 86, baseType: !1732, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !1317, line: 451, size: 1216, align: 64, elements: !1734)
!1734 = !{!1735, !1736, !1744, !1745, !1746, !1754, !1763, !1764, !1765, !1766, !2023, !2024, !2027, !2028, !2029}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1733, file: !1317, line: 452, baseType: !1375, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1733, file: !1317, line: 453, baseType: !1737, size: 128, offset: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1738, line: 292, size: 128, elements: !1739)
!1738 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1739 = !{!1740, !1741, !1743}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1737, file: !1738, line: 293, baseType: !1670)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1737, file: !1738, line: 295, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !277, line: 148, baseType: !7)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1737, file: !1738, line: 296, baseType: !591, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1733, file: !1317, line: 454, baseType: !1742, size: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1733, file: !1317, line: 455, baseType: !383, size: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1733, file: !1317, line: 460, baseType: !1747, size: 128, offset: 256)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !434, line: 125, size: 128, elements: !1748)
!1748 = !{!1749, !1753}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1747, file: !434, line: 126, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !434, line: 31, size: 64, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1750, file: !434, line: 32, baseType: !438, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1747, file: !434, line: 127, baseType: !438, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1733, file: !1317, line: 461, baseType: !1755, size: 256, offset: 384)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1756, line: 35, size: 256, elements: !1757)
!1756 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1757 = !{!1758, !1759, !1760, !1762}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1755, file: !1756, line: 36, baseType: !371, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1755, file: !1756, line: 42, baseType: !371, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1755, file: !1756, line: 46, baseType: !1761, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1671, line: 29, baseType: !1678)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1755, file: !1756, line: 47, baseType: !284, size: 128, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1733, file: !1317, line: 462, baseType: !312, size: 64, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1733, file: !1317, line: 463, baseType: !312, size: 64, offset: 704)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1733, file: !1317, line: 464, baseType: !312, size: 64, offset: 768)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1733, file: !1317, line: 465, baseType: !1767, size: 64, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !1317, line: 367, size: 1408, elements: !1770)
!1770 = !{!1771, !1775, !1779, !1783, !1787, !1791, !1797, !1803, !1807, !1812, !1816, !1820, !1824, !1987, !1991, !1997, !1998, !1999, !2003, !2008, !2012, !2019}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1769, file: !1317, line: 368, baseType: !1772, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!32, !1719, !1619}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1769, file: !1317, line: 369, baseType: !1776, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!32, !1315, !1719}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1769, file: !1317, line: 372, baseType: !1780, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!32, !1732, !1619}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1769, file: !1317, line: 375, baseType: !1784, size: 64, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!32, !1719}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1769, file: !1317, line: 381, baseType: !1788, size: 64, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!32, !1315, !1732, !287, !7}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1769, file: !1317, line: 383, baseType: !1792, size: 64, offset: 320)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{null, !1795}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1317, line: 290, flags: DIFlagFwdDecl)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1769, file: !1317, line: 385, baseType: !1798, size: 64, offset: 384)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!32, !1315, !1732, !1476, !7, !7, !1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1769, file: !1317, line: 388, baseType: !1804, size: 64, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!32, !1315, !1732, !1476, !7, !7, !1719, !591}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1769, file: !1317, line: 393, baseType: !1808, size: 64, offset: 512)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!1811, !1732, !1811}
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !277, line: 125, baseType: !331)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1769, file: !1317, line: 394, baseType: !1813, size: 64, offset: 576)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{null, !1719, !7, !7}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1769, file: !1317, line: 395, baseType: !1817, size: 64, offset: 640)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!32, !1719, !1742}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1769, file: !1317, line: 396, baseType: !1821, size: 64, offset: 704)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{null, !1719}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1769, file: !1317, line: 397, baseType: !1825, size: 64, offset: 768)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1521, !1828, !1848}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !1317, line: 320, size: 384, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1837, !1838, !1839, !1840, !1841}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1829, file: !1317, line: 321, baseType: !1315, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1829, file: !1317, line: 326, baseType: !1476, size: 64, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1829, file: !1317, line: 327, baseType: !1834, size: 64, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null, !1828, !998, !998}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1829, file: !1317, line: 328, baseType: !591, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1829, file: !1317, line: 329, baseType: !32, size: 32, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1829, file: !1317, line: 330, baseType: !581, size: 16, offset: 288)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1829, file: !1317, line: 331, baseType: !581, size: 16, offset: 304)
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !1317, line: 332, baseType: !1842, size: 64, offset: 320)
!1842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1829, file: !1317, line: 332, size: 64, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1842, file: !1317, line: 333, baseType: !7, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1842, file: !1317, line: 334, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1317, line: 334, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1850, line: 29, size: 320, elements: !1851)
!1850 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1851 = !{!1852, !1853, !1854, !1855, !1978}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1849, file: !1850, line: 35, baseType: !7, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1849, file: !1850, line: 36, baseType: !1039, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1849, file: !1850, line: 37, baseType: !1039, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 38, baseType: !1856, size: 64, offset: 192)
!1856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 38, size: 64, elements: !1857)
!1857 = !{!1858, !1866, !1873, !1882}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1856, file: !1850, line: 39, baseType: !1859, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1862, line: 17, size: 128, elements: !1863)
!1862 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1861, file: !1862, line: 19, baseType: !591, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1861, file: !1862, line: 20, baseType: !1040, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1856, file: !1850, line: 40, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1850, line: 15, size: 128, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1869, file: !1850, line: 16, baseType: !591, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1869, file: !1850, line: 17, baseType: !1039, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1856, file: !1850, line: 41, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1877, line: 31, size: 128, elements: !1878)
!1877 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1878 = !{!1879, !1880, !1881}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1876, file: !1877, line: 32, baseType: !1719, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1876, file: !1877, line: 33, baseType: !7, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1876, file: !1877, line: 34, baseType: !7, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1856, file: !1850, line: 42, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1885, line: 57, size: 1088, elements: !1886)
!1885 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1886 = !{!1887, !1888, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1924, !1925, !1952}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1884, file: !1885, line: 58, baseType: !1665, size: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1890, line: 40, baseType: !1891)
!1890 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1890, line: 36, size: 128, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1891, file: !1890, line: 37, baseType: !1670)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1891, file: !1890, line: 38, baseType: !284, size: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1884, file: !1885, line: 60, baseType: !7, size: 32, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1884, file: !1885, line: 61, baseType: !7, size: 32, offset: 480)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1884, file: !1885, line: 62, baseType: !7, size: 32, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1884, file: !1885, line: 63, baseType: !7, size: 32, offset: 544)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1884, file: !1885, line: 67, baseType: !7, size: 32, offset: 576)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1884, file: !1885, line: 68, baseType: !7, size: 32, offset: 608)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1884, file: !1885, line: 69, baseType: !7, size: 32, offset: 640)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1884, file: !1885, line: 70, baseType: !7, size: 32, offset: 672)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1884, file: !1885, line: 71, baseType: !7, size: 32, offset: 704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1884, file: !1885, line: 72, baseType: !7, size: 32, offset: 736)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1884, file: !1885, line: 73, baseType: !1719, size: 64, offset: 768)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1884, file: !1885, line: 74, baseType: !1908, size: 64, offset: 832)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !1317, line: 1314, size: 320, elements: !1910)
!1910 = !{!1911, !1919, !1920, !1921, !1922, !1923}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1909, file: !1317, line: 1315, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1913, line: 20, baseType: !1914)
!1913 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1913, line: 11, elements: !1915)
!1915 = !{!1916}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1914, file: !1913, line: 12, baseType: !1917)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1682, line: 33, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 31, elements: !1587)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1909, file: !1317, line: 1316, baseType: !32, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1909, file: !1317, line: 1317, baseType: !32, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1909, file: !1317, line: 1318, baseType: !1908, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1909, file: !1317, line: 1319, baseType: !1315, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1909, file: !1317, line: 1320, baseType: !299, size: 128, align: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1884, file: !1885, line: 75, baseType: !1908, size: 64, offset: 896)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1884, file: !1885, line: 76, baseType: !1926, size: 64, offset: 960)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1885, line: 26, size: 320, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1932, !1950, !1951}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1927, file: !1885, line: 27, baseType: !1719, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1927, file: !1885, line: 29, baseType: !1933, size: 64, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1885, line: 93, size: 256, elements: !1936)
!1936 = !{!1937, !1941, !1945, !1949}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1935, file: !1885, line: 101, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!32, !1883, !1926}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1935, file: !1885, line: 107, baseType: !1942, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{null, !1883, !1926}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1935, file: !1885, line: 117, baseType: !1946, size: 64, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!771, !1883, !1926}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1935, file: !1885, line: 122, baseType: !1946, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1927, file: !1885, line: 30, baseType: !7, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1927, file: !1885, line: 31, baseType: !312, size: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1884, file: !1885, line: 77, baseType: !1953, size: 64, offset: 1024)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1955, line: 13, size: 896, elements: !1956)
!1955 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1954, file: !1955, line: 14, baseType: !568, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1954, file: !1955, line: 15, baseType: !383, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1954, file: !1955, line: 16, baseType: !383, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1954, file: !1955, line: 21, baseType: !371, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1954, file: !1955, line: 27, baseType: !312, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1954, file: !1955, line: 28, baseType: !312, size: 64, offset: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1954, file: !1955, line: 29, baseType: !371, size: 64, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1954, file: !1955, line: 32, baseType: !276, size: 128, offset: 384)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1954, file: !1955, line: 33, baseType: !1382, size: 32, offset: 512)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1954, file: !1955, line: 37, baseType: !371, size: 64, offset: 576)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1954, file: !1955, line: 44, baseType: !1968, size: 256, offset: 640)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1969, line: 15, size: 256, elements: !1970)
!1969 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1968, file: !1969, line: 16, baseType: !1761)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1968, file: !1969, line: 18, baseType: !32, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1968, file: !1969, line: 19, baseType: !32, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1968, file: !1969, line: 20, baseType: !32, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1968, file: !1969, line: 21, baseType: !32, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1968, file: !1969, line: 22, baseType: !312, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1968, file: !1969, line: 23, baseType: !312, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 44, baseType: !1979, size: 64, offset: 256)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 44, size: 64, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1979, file: !1850, line: 45, baseType: !312, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, scope: !1979, file: !1850, line: 46, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1850, line: 46, size: 64, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1983, file: !1850, line: 47, baseType: !7, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1983, file: !1850, line: 48, baseType: !7, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1769, file: !1317, line: 402, baseType: !1988, size: 64, offset: 832)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!32, !1732, !1719, !1719, !5}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1769, file: !1317, line: 404, baseType: !1992, size: 64, offset: 896)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!771, !1719, !1995}
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1996, line: 305, baseType: !7)
!1996 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1769, file: !1317, line: 405, baseType: !1821, size: 64, offset: 960)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1769, file: !1317, line: 406, baseType: !1784, size: 64, offset: 1024)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1769, file: !1317, line: 407, baseType: !2000, size: 64, offset: 1088)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!32, !1719, !312, !312}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1769, file: !1317, line: 409, baseType: !2004, size: 64, offset: 1152)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{null, !1719, !2007, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1769, file: !1317, line: 410, baseType: !2009, size: 64, offset: 1216)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!32, !1732, !1719}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1769, file: !1317, line: 413, baseType: !2013, size: 64, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!32, !2016, !1315, !2018}
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1317, line: 61, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1769, file: !1317, line: 415, baseType: !2020, size: 64, offset: 1344)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !1315}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1733, file: !1317, line: 466, baseType: !312, size: 64, offset: 896)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1733, file: !1317, line: 467, baseType: !2025, size: 32, offset: 960)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2026, line: 8, baseType: !987)
!2026 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1733, file: !1317, line: 468, baseType: !1670, offset: 992)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1733, file: !1317, line: 469, baseType: !284, size: 128, offset: 1024)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1733, file: !1317, line: 470, baseType: !591, size: 64, offset: 1152)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1728, file: !1721, line: 87, baseType: !312, size: 64, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1728, file: !1721, line: 94, baseType: !312, size: 64, offset: 256)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 96, baseType: !2033, size: 64)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 96, size: 64, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2033, file: !1721, line: 101, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !277, line: 143, baseType: !331)
!2037 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 103, baseType: !2038, size: 320)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 103, size: 320, elements: !2039)
!2039 = !{!2040, !2050, !2053, !2054}
!2040 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 104, baseType: !2041, size: 128)
!2041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 104, size: 128, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2041, file: !1721, line: 105, baseType: !284, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2041, file: !1721, line: 106, baseType: !2045, size: 128)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2041, file: !1721, line: 106, size: 128, elements: !2046)
!2046 = !{!2047, !2048, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !1721, line: 107, baseType: !1719, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2045, file: !1721, line: 109, baseType: !32, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2045, file: !1721, line: 110, baseType: !32, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2038, file: !1721, line: 117, baseType: !2051, size: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1721, line: 117, flags: DIFlagFwdDecl)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2038, file: !1721, line: 119, baseType: !591, size: 64, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 120, baseType: !2055, size: 64, offset: 256)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 120, size: 64, elements: !2056)
!2056 = !{!2057, !2058, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2055, file: !1721, line: 121, baseType: !591, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2055, file: !1721, line: 122, baseType: !312, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !1721, line: 123, baseType: !2060, size: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2055, file: !1721, line: 123, size: 32, elements: !2061)
!2061 = !{!2062, !2063, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2060, file: !1721, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2060, file: !1721, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2060, file: !1721, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 130, baseType: !2066, size: 192)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 130, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2066, file: !1721, line: 131, baseType: !312, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2066, file: !1721, line: 134, baseType: !482, size: 8, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2066, file: !1721, line: 135, baseType: !482, size: 8, offset: 72)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2066, file: !1721, line: 136, baseType: !383, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2066, file: !1721, line: 137, baseType: !7, size: 32, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 139, baseType: !2074, size: 256)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 139, size: 256, elements: !2075)
!2075 = !{!2076, !2077, !2078}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2074, file: !1721, line: 140, baseType: !312, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2074, file: !1721, line: 141, baseType: !383, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2074, file: !1721, line: 143, baseType: !284, size: 128, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 145, baseType: !2080, size: 256)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 145, size: 256, elements: !2081)
!2081 = !{!2082, !2083, !2086, !2087, !5613}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2080, file: !1721, line: 146, baseType: !312, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2080, file: !1721, line: 147, baseType: !2084, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2085, line: 509, baseType: !1719)
!2085 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2080, file: !1721, line: 148, baseType: !312, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !1721, line: 149, baseType: !2088, size: 64, offset: 192)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !1721, line: 149, size: 64, elements: !2089)
!2089 = !{!2090, !5612}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2088, file: !1721, line: 150, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1721, line: 388, size: 7296, elements: !2093)
!2093 = !{!2094, !5611}
!2094 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !1721, line: 389, baseType: !2095, size: 7296)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2092, file: !1721, line: 389, size: 7296, elements: !2096)
!2096 = !{!2097, !2215, !2216, !2217, !2221, !2222, !2223, !2224, !2225, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2266, !2274, !2277, !2316, !2317, !5595, !5596, !5599, !5600, !5601, !5604, !5605, !5606, !5609, !5610}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2095, file: !1721, line: 390, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1721, line: 305, size: 1472, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2115, !2116, !2121, !2122, !2125, !2209, !2210, !2211, !2212, !2213}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2099, file: !1721, line: 308, baseType: !312, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2099, file: !1721, line: 309, baseType: !312, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2099, file: !1721, line: 315, baseType: !433, size: 192, align: 64, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2099, file: !1721, line: 323, baseType: !312, size: 64, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2099, file: !1721, line: 327, baseType: !2091, size: 64, offset: 512)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2099, file: !1721, line: 333, baseType: !2109, size: 64, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2085, line: 284, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2085, line: 284, size: 64, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2110, file: !2085, line: 284, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2114, line: 19, baseType: !312)
!2114 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2099, file: !1721, line: 334, baseType: !312, size: 64, offset: 640)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2099, file: !1721, line: 343, baseType: !2117, size: 256, offset: 704)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2099, file: !1721, line: 340, size: 256, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2117, file: !1721, line: 341, baseType: !433, size: 192, align: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2117, file: !1721, line: 342, baseType: !312, size: 64, offset: 192)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2099, file: !1721, line: 351, baseType: !284, size: 128, offset: 960)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2099, file: !1721, line: 353, baseType: !2123, size: 64, offset: 1088)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1721, line: 353, flags: DIFlagFwdDecl)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2099, file: !1721, line: 356, baseType: !2126, size: 64, offset: 1152)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !2129)
!2129 = !{!2130, !2134, !2135, !2139, !2143, !2183, !2187, !2191, !2195, !2196, !2197, !2201, !2205}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2128, file: !14, line: 558, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null, !2098}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2128, file: !14, line: 559, baseType: !2131, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2128, file: !14, line: 560, baseType: !2136, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!32, !2098, !312}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2128, file: !14, line: 561, baseType: !2140, size: 64, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!32, !2098}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2128, file: !14, line: 562, baseType: !2144, size: 64, offset: 256)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1721, line: 682, baseType: !7)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !2150)
!2150 = !{!2151, !2152, !2153, !2154, !2155, !2156, !2163, !2170, !2176, !2177, !2178, !2180, !2182}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2149, file: !14, line: 509, baseType: !2098, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2149, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2149, file: !14, line: 511, baseType: !1742, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2149, file: !14, line: 512, baseType: !312, size: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2149, file: !14, line: 513, baseType: !312, size: 64, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2149, file: !14, line: 514, baseType: !2157, size: 64, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2085, line: 385, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 385, size: 64, elements: !2160)
!2160 = !{!2161}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2159, file: !2085, line: 385, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2114, line: 15, baseType: !312)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2149, file: !14, line: 516, baseType: !2164, size: 64, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2085, line: 359, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 359, size: 64, elements: !2167)
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2166, file: !2085, line: 359, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2114, line: 16, baseType: !312)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2149, file: !14, line: 519, baseType: !2171, size: 64, offset: 384)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2114, line: 21, baseType: !2172)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2114, line: 21, size: 64, elements: !2173)
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2172, file: !2114, line: 21, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2114, line: 14, baseType: !312)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2149, file: !14, line: 521, baseType: !1719, size: 64, offset: 448)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2149, file: !14, line: 522, baseType: !1719, size: 64, offset: 512)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2149, file: !14, line: 528, baseType: !2179, size: 64, offset: 576)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2149, file: !14, line: 532, baseType: !2181, size: 64, offset: 640)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2149, file: !14, line: 536, baseType: !2084, size: 64, offset: 704)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2128, file: !14, line: 563, baseType: !2184, size: 64, offset: 320)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!2147, !2148, !13}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2128, file: !14, line: 565, baseType: !2188, size: 64, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{null, !2148, !312, !312}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2128, file: !14, line: 567, baseType: !2192, size: 64, offset: 448)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!312, !2098}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2128, file: !14, line: 571, baseType: !2144, size: 64, offset: 512)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2128, file: !14, line: 574, baseType: !2144, size: 64, offset: 576)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2128, file: !14, line: 579, baseType: !2198, size: 64, offset: 640)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!32, !2098, !312, !591, !32, !32}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !14, line: 585, baseType: !2202, size: 64, offset: 704)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!292, !2098}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2128, file: !14, line: 615, baseType: !2206, size: 64, offset: 768)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!1719, !2098, !312}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2099, file: !1721, line: 359, baseType: !312, size: 64, offset: 1216)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2099, file: !1721, line: 361, baseType: !1315, size: 64, offset: 1280)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2099, file: !1721, line: 362, baseType: !591, size: 64, offset: 1344)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2099, file: !1721, line: 365, baseType: !371, size: 64, offset: 1408)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2099, file: !1721, line: 373, baseType: !2214, offset: 1472)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1721, line: 296, elements: !1587)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2095, file: !1721, line: 391, baseType: !1750, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2095, file: !1721, line: 392, baseType: !331, size: 64, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2095, file: !1721, line: 394, baseType: !2218, size: 64, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!312, !1315, !312, !312, !312, !312}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2095, file: !1721, line: 398, baseType: !312, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2095, file: !1721, line: 399, baseType: !312, size: 64, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2095, file: !1721, line: 405, baseType: !312, size: 64, offset: 384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2095, file: !1721, line: 406, baseType: !312, size: 64, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2095, file: !1721, line: 407, baseType: !2226, size: 64, offset: 512)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2085, line: 286, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 286, size: 64, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2228, file: !2085, line: 286, baseType: !2231, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2114, line: 18, baseType: !312)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2095, file: !1721, line: 416, baseType: !383, size: 32, offset: 576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2095, file: !1721, line: 428, baseType: !383, size: 32, offset: 608)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2095, file: !1721, line: 437, baseType: !383, size: 32, offset: 640)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2095, file: !1721, line: 447, baseType: !383, size: 32, offset: 672)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2095, file: !1721, line: 450, baseType: !371, size: 64, offset: 704)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2095, file: !1721, line: 452, baseType: !32, size: 32, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2095, file: !1721, line: 454, baseType: !1670, offset: 800)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2095, file: !1721, line: 457, baseType: !1755, size: 256, offset: 832)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2095, file: !1721, line: 459, baseType: !284, size: 128, offset: 1088)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2095, file: !1721, line: 466, baseType: !312, size: 64, offset: 1216)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2095, file: !1721, line: 467, baseType: !312, size: 64, offset: 1280)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2095, file: !1721, line: 469, baseType: !312, size: 64, offset: 1344)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2095, file: !1721, line: 470, baseType: !312, size: 64, offset: 1408)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2095, file: !1721, line: 471, baseType: !373, size: 64, offset: 1472)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2095, file: !1721, line: 472, baseType: !312, size: 64, offset: 1536)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2095, file: !1721, line: 473, baseType: !312, size: 64, offset: 1600)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2095, file: !1721, line: 474, baseType: !312, size: 64, offset: 1664)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2095, file: !1721, line: 475, baseType: !312, size: 64, offset: 1728)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2095, file: !1721, line: 477, baseType: !1670, offset: 1792)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1792)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1856)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1920)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1984)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2048)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2112)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2176)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2240)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2304)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2368)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2432)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2095, file: !1721, line: 482, baseType: !2263, size: 2816, offset: 2496)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 2816, elements: !2264)
!2264 = !{!2265}
!2265 = !DISubrange(count: 44)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2095, file: !1721, line: 488, baseType: !2267, size: 256, offset: 5312)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2268, line: 60, size: 256, elements: !2269)
!2268 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2267, file: !2268, line: 61, baseType: !2271, size: 256)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 256, elements: !2272)
!2272 = !{!2273}
!2273 = !DISubrange(count: 4)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2095, file: !1721, line: 490, baseType: !2275, size: 64, offset: 5568)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1721, line: 490, flags: DIFlagFwdDecl)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2095, file: !1721, line: 493, baseType: !2278, size: 896, offset: 5632)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2279, line: 53, baseType: !2280)
!2279 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2279, line: 13, size: 896, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2288, !2289, !2290, !2291, !2311, !2312, !2313}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2280, file: !2279, line: 18, baseType: !331, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2280, file: !2279, line: 28, baseType: !373, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2280, file: !2279, line: 31, baseType: !1755, size: 256, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2280, file: !2279, line: 32, baseType: !2286, size: 64, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2279, line: 32, flags: DIFlagFwdDecl)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2280, file: !2279, line: 37, baseType: !476, size: 16, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2280, file: !2279, line: 40, baseType: !1665, size: 192, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2280, file: !2279, line: 41, baseType: !591, size: 64, offset: 704)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2280, file: !2279, line: 42, baseType: !2292, size: 64, offset: 768)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2294)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2295, line: 13, size: 896, elements: !2296)
!2295 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2294, file: !2295, line: 14, baseType: !591, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !2295, line: 15, baseType: !312, size: 64, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2294, file: !2295, line: 19, baseType: !998, size: 64, offset: 256)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2294, file: !2295, line: 21, baseType: !998, size: 64, offset: 320)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2294, file: !2295, line: 22, baseType: !998, size: 64, offset: 384)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2294, file: !2295, line: 23, baseType: !998, size: 64, offset: 448)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2294, file: !2295, line: 24, baseType: !998, size: 64, offset: 512)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2294, file: !2295, line: 25, baseType: !998, size: 64, offset: 576)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2294, file: !2295, line: 26, baseType: !998, size: 64, offset: 640)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2294, file: !2295, line: 27, baseType: !998, size: 64, offset: 704)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2294, file: !2295, line: 28, baseType: !998, size: 64, offset: 768)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2294, file: !2295, line: 29, baseType: !998, size: 64, offset: 832)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2280, file: !2279, line: 44, baseType: !383, size: 32, offset: 832)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2280, file: !2279, line: 50, baseType: !581, size: 16, offset: 864)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2280, file: !2279, line: 51, baseType: !2314, size: 16, offset: 880)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !332, line: 18, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !334, line: 23, baseType: !625)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2095, file: !1721, line: 495, baseType: !312, size: 64, offset: 6528)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2095, file: !1721, line: 497, baseType: !2318, size: 64, offset: 6592)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1721, line: 381, size: 384, elements: !2320)
!2320 = !{!2321, !2322, !5594}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2319, file: !1721, line: 382, baseType: !383, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2319, file: !1721, line: 383, baseType: !2323, size: 128, offset: 64)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1721, line: 376, size: 128, elements: !2324)
!2324 = !{!2325, !5592}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2323, file: !1721, line: 377, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2328, line: 640, size: 48640, elements: !2329)
!2328 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2329 = !{!2330, !2336, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2351, !2369, !2380, !2461, !2462, !2463, !2474, !2475, !2477, !2478, !2479, !2480, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2558, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2885, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2919, !2924, !2973, !2974, !2975, !2976, !2977, !2980, !2983, !2986, !2989, !3705, !5153, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5199, !5200, !5201, !5202, !5203, !5208, !5209, !5210, !5213, !5214, !5217, !5220, !5223, !5226, !5258, !5261, !5262, !5341, !5342, !5345, !5346, !5349, !5350, !5351, !5355, !5356, !5357, !5370, !5371, !5372, !5382, !5387, !5388, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2327, file: !2328, line: 646, baseType: !2331, size: 128)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2332, line: 56, size: 128, elements: !2333)
!2332 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2333 = !{!2334, !2335}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2331, file: !2332, line: 57, baseType: !312, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2331, file: !2332, line: 58, baseType: !987, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2327, file: !2328, line: 649, baseType: !2337, size: 64, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2327, file: !2328, line: 657, baseType: !591, size: 64, offset: 192)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2327, file: !2328, line: 658, baseType: !568, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2327, file: !2328, line: 660, baseType: !7, size: 32, offset: 288)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2327, file: !2328, line: 661, baseType: !7, size: 32, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2327, file: !2328, line: 684, baseType: !32, size: 32, offset: 352)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2327, file: !2328, line: 686, baseType: !32, size: 32, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2327, file: !2328, line: 687, baseType: !32, size: 32, offset: 416)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2327, file: !2328, line: 688, baseType: !32, size: 32, offset: 448)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2327, file: !2328, line: 689, baseType: !7, size: 32, offset: 480)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2327, file: !2328, line: 691, baseType: !2348, size: 64, offset: 512)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!2350 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2328, line: 691, flags: DIFlagFwdDecl)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2327, file: !2328, line: 692, baseType: !2352, size: 832, offset: 576)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2328, line: 451, size: 832, elements: !2353)
!2353 = !{!2354, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2352, file: !2328, line: 453, baseType: !2355, size: 128)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2328, line: 325, size: 128, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2355, file: !2328, line: 326, baseType: !312, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2355, file: !2328, line: 327, baseType: !987, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2352, file: !2328, line: 454, baseType: !433, size: 192, align: 64, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2352, file: !2328, line: 455, baseType: !284, size: 128, offset: 320)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2352, file: !2328, line: 456, baseType: !7, size: 32, offset: 448)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2352, file: !2328, line: 458, baseType: !331, size: 64, offset: 512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2352, file: !2328, line: 459, baseType: !331, size: 64, offset: 576)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2352, file: !2328, line: 460, baseType: !331, size: 64, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2352, file: !2328, line: 461, baseType: !331, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2352, file: !2328, line: 463, baseType: !331, size: 64, offset: 768)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2352, file: !2328, line: 465, baseType: !2368, offset: 832)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2328, line: 415, elements: !1587)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2327, file: !2328, line: 693, baseType: !2370, size: 384, offset: 1408)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2328, line: 489, size: 384, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2370, file: !2328, line: 490, baseType: !284, size: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2370, file: !2328, line: 491, baseType: !312, size: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2370, file: !2328, line: 492, baseType: !312, size: 64, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2370, file: !2328, line: 493, baseType: !7, size: 32, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2370, file: !2328, line: 494, baseType: !476, size: 16, offset: 288)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2370, file: !2328, line: 495, baseType: !476, size: 16, offset: 304)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2370, file: !2328, line: 497, baseType: !2379, size: 64, offset: 320)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2327, file: !2328, line: 697, baseType: !2381, size: 1792, offset: 1792)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2328, line: 507, size: 1792, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2458, !2459}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2381, file: !2328, line: 508, baseType: !433, size: 192, align: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2381, file: !2328, line: 515, baseType: !331, size: 64, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2381, file: !2328, line: 516, baseType: !331, size: 64, offset: 256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2381, file: !2328, line: 517, baseType: !331, size: 64, offset: 320)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2381, file: !2328, line: 518, baseType: !331, size: 64, offset: 384)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2381, file: !2328, line: 519, baseType: !331, size: 64, offset: 448)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2381, file: !2328, line: 526, baseType: !377, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2381, file: !2328, line: 527, baseType: !331, size: 64, offset: 576)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2381, file: !2328, line: 528, baseType: !7, size: 32, offset: 640)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2381, file: !2328, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2381, file: !2328, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2381, file: !2328, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2381, file: !2328, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2381, file: !2328, line: 563, baseType: !2397, size: 512, offset: 704)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !2398)
!2398 = !{!2399, !2405, !2406, !2411, !2454, !2455, !2456, !2457}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !20, line: 119, baseType: !2400, size: 256)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2401, line: 9, size: 256, elements: !2402)
!2401 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2400, file: !2401, line: 10, baseType: !433, size: 192, align: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2400, file: !2401, line: 11, baseType: !453, size: 64, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2397, file: !20, line: 120, baseType: !453, size: 64, offset: 256)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2397, file: !20, line: 121, baseType: !2407, size: 64, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!19, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2397, file: !20, line: 122, baseType: !2412, size: 64, offset: 384)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !2414)
!2414 = !{!2415, !2435, !2436, !2439, !2444, !2445, !2449, !2453}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2413, file: !20, line: 160, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !2418)
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2417, file: !20, line: 215, baseType: !1761)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2417, file: !20, line: 216, baseType: !7, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2417, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2417, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2417, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2417, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2417, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2417, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2417, file: !20, line: 233, baseType: !453, size: 64, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2417, file: !20, line: 234, baseType: !2410, size: 64, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2417, file: !20, line: 235, baseType: !453, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2417, file: !20, line: 236, baseType: !2410, size: 64, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2417, file: !20, line: 237, baseType: !2432, size: 4096, offset: 512)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2413, size: 4096, elements: !2433)
!2433 = !{!2434}
!2434 = !DISubrange(count: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2413, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2413, file: !20, line: 162, baseType: !2437, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !277, line: 27, baseType: !2438)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1041, line: 96, baseType: !32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2413, file: !20, line: 163, baseType: !2440, size: 32, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1344, line: 276, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1344, line: 276, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2441, file: !1344, line: 276, baseType: !1348, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2413, file: !20, line: 164, baseType: !2410, size: 64, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2413, file: !20, line: 165, baseType: !2446, size: 128, offset: 256)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2401, line: 14, size: 128, elements: !2447)
!2447 = !{!2448}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2446, file: !2401, line: 15, baseType: !1747, size: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2413, file: !20, line: 166, baseType: !2450, size: 64, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2413, file: !20, line: 167, baseType: !453, size: 64, offset: 448)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2397, file: !20, line: 123, baseType: !794, size: 8, offset: 448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2397, file: !20, line: 124, baseType: !794, size: 8, offset: 456)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2397, file: !20, line: 125, baseType: !794, size: 8, offset: 464)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2397, file: !20, line: 126, baseType: !794, size: 8, offset: 472)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2381, file: !2328, line: 572, baseType: !2397, size: 512, offset: 1216)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2381, file: !2328, line: 580, baseType: !2460, size: 64, offset: 1728)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2327, file: !2328, line: 721, baseType: !7, size: 32, offset: 3584)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2327, file: !2328, line: 722, baseType: !32, size: 32, offset: 3616)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2327, file: !2328, line: 723, baseType: !2464, size: 64, offset: 3648)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2467, line: 17, baseType: !2468)
!2467 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2467, line: 17, size: 64, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2468, file: !2467, line: 17, baseType: !2471, size: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 1)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2327, file: !2328, line: 724, baseType: !2466, size: 64, offset: 3712)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2327, file: !2328, line: 749, baseType: !2476, offset: 3776)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2328, line: 290, elements: !1587)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2327, file: !2328, line: 751, baseType: !284, size: 128, offset: 3776)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2327, file: !2328, line: 757, baseType: !2091, size: 64, offset: 3904)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2327, file: !2328, line: 758, baseType: !2091, size: 64, offset: 3968)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2327, file: !2328, line: 761, baseType: !2481, size: 320, offset: 4032)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2268, line: 34, size: 320, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2481, file: !2268, line: 35, baseType: !331, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2481, file: !2268, line: 36, baseType: !2485, size: 256, offset: 64)
!2485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2098, size: 256, elements: !2272)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2327, file: !2328, line: 766, baseType: !32, size: 32, offset: 4352)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2327, file: !2328, line: 767, baseType: !32, size: 32, offset: 4384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2327, file: !2328, line: 768, baseType: !32, size: 32, offset: 4416)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2327, file: !2328, line: 770, baseType: !32, size: 32, offset: 4448)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2327, file: !2328, line: 772, baseType: !312, size: 64, offset: 4480)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2327, file: !2328, line: 775, baseType: !7, size: 32, offset: 4544)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2327, file: !2328, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2327, file: !2328, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2327, file: !2328, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2327, file: !2328, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2327, file: !2328, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2327, file: !2328, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2327, file: !2328, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2327, file: !2328, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2327, file: !2328, line: 831, baseType: !312, size: 64, offset: 4672)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2327, file: !2328, line: 833, baseType: !2502, size: 384, offset: 4736)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2503)
!2503 = !{!2504, !2509}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2502, file: !25, line: 26, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!998, !2508}
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2502, file: !25, line: 27, baseType: !2510, size: 320, offset: 64)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2502, file: !25, line: 27, size: 320, elements: !2511)
!2511 = !{!2512, !2522, !2548}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2510, file: !25, line: 36, baseType: !2513, size: 320)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 29, size: 320, elements: !2514)
!2514 = !{!2515, !2517, !2518, !2519, !2520, !2521}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2513, file: !25, line: 30, baseType: !2516, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2513, file: !25, line: 31, baseType: !987, size: 32, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2513, file: !25, line: 32, baseType: !987, size: 32, offset: 96)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2513, file: !25, line: 33, baseType: !987, size: 32, offset: 128)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2513, file: !25, line: 34, baseType: !331, size: 64, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2513, file: !25, line: 35, baseType: !2516, size: 64, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2510, file: !25, line: 46, baseType: !2523, size: 192)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 38, size: 192, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2547}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2523, file: !25, line: 39, baseType: !2437, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2523, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2523, file: !25, line: 41, baseType: !2528, size: 64, offset: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2523, file: !25, line: 41, size: 64, elements: !2529)
!2529 = !{!2530, !2538}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2528, file: !25, line: 42, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2533, line: 7, size: 128, elements: !2534)
!2533 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2534 = !{!2535, !2537}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2532, file: !2533, line: 8, baseType: !2536, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1041, line: 93, baseType: !379)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2532, file: !2533, line: 9, baseType: !379, size: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2528, file: !25, line: 43, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2541, line: 7, size: 64, elements: !2542)
!2541 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2542 = !{!2543, !2546}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2540, file: !2541, line: 8, baseType: !2544, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2541, line: 5, baseType: !2545)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !332, line: 20, baseType: !942)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2540, file: !2541, line: 9, baseType: !2545, size: 32, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2523, file: !25, line: 45, baseType: !331, size: 64, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2510, file: !25, line: 54, baseType: !2549, size: 256)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 48, size: 256, elements: !2550)
!2550 = !{!2551, !2554, !2555, !2556, !2557}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2549, file: !25, line: 49, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2549, file: !25, line: 50, baseType: !32, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2549, file: !25, line: 51, baseType: !32, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2549, file: !25, line: 52, baseType: !312, size: 64, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2549, file: !25, line: 53, baseType: !312, size: 64, offset: 192)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2327, file: !2328, line: 835, baseType: !2559, size: 32, offset: 5120)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !277, line: 22, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1041, line: 28, baseType: !32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2327, file: !2328, line: 836, baseType: !2559, size: 32, offset: 5152)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2327, file: !2328, line: 840, baseType: !312, size: 64, offset: 5184)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2327, file: !2328, line: 849, baseType: !2326, size: 64, offset: 5248)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2327, file: !2328, line: 852, baseType: !2326, size: 64, offset: 5312)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2327, file: !2328, line: 857, baseType: !284, size: 128, offset: 5376)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2327, file: !2328, line: 858, baseType: !284, size: 128, offset: 5504)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2327, file: !2328, line: 859, baseType: !2326, size: 64, offset: 5632)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2327, file: !2328, line: 867, baseType: !284, size: 128, offset: 5696)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2327, file: !2328, line: 868, baseType: !284, size: 128, offset: 5824)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2327, file: !2328, line: 871, baseType: !2571, size: 64, offset: 5952)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !2573, line: 59, size: 768, elements: !2574)
!2573 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2576, !2577, !2578, !2580, !2581, !2582, !2583}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2572, file: !2573, line: 61, baseType: !568, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2572, file: !2573, line: 62, baseType: !7, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2572, file: !2573, line: 63, baseType: !1670, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2572, file: !2573, line: 65, baseType: !2579, size: 256, offset: 64)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 256, elements: !2272)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2572, file: !2573, line: 66, baseType: !1581, size: 64, offset: 320)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2572, file: !2573, line: 68, baseType: !1889, size: 128, offset: 384)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2572, file: !2573, line: 69, baseType: !299, size: 128, align: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2572, file: !2573, line: 70, baseType: !2584, size: 128, offset: 640)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2585, size: 128, elements: !2472)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !2573, line: 54, size: 128, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2585, file: !2573, line: 55, baseType: !32, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2585, file: !2573, line: 56, baseType: !2589, size: 64, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2591, line: 20, size: 1088, elements: !2592)
!2591 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2592 = !{!2593, !2598, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2882, !2883, !2884}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2590, file: !2591, line: 21, baseType: !2594, size: 32)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2595, line: 19, size: 32, elements: !2596)
!2595 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2596 = !{!2597}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2594, file: !2595, line: 20, baseType: !568, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !2590, file: !2591, line: 22, baseType: !2599, size: 192, offset: 64)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2600, line: 19, size: 192, elements: !2601)
!2600 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2601 = !{!2602, !2603, !2604}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2599, file: !2600, line: 20, baseType: !1737, size: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2599, file: !2600, line: 21, baseType: !7, size: 32, offset: 128)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2599, file: !2600, line: 22, baseType: !7, size: 32, offset: 160)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2590, file: !2591, line: 23, baseType: !299, size: 128, align: 64, offset: 256)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !2590, file: !2591, line: 24, baseType: !7, size: 32, offset: 384)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !2590, file: !2591, line: 25, baseType: !2326, size: 64, offset: 448)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !2590, file: !2591, line: 26, baseType: !2051, size: 64, offset: 512)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2590, file: !2591, line: 27, baseType: !7, size: 32, offset: 576)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2590, file: !2591, line: 28, baseType: !2589, size: 64, offset: 640)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2590, file: !2591, line: 32, baseType: !2612, size: 64, offset: 704)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2614, line: 56, size: 4160, elements: !2615)
!2614 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2615 = !{!2616, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2655, !2656, !2657, !2762, !2763, !2775, !2867, !2868, !2880}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2613, file: !2614, line: 57, baseType: !2617, size: 576)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2614, line: 23, size: 576, elements: !2618)
!2618 = !{!2619, !2620}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2617, file: !2614, line: 24, baseType: !987, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2614, line: 25, baseType: !2621, size: 512, offset: 64)
!2621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !2614, line: 25, size: 512, elements: !2622)
!2622 = !{!2623, !2632}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2621, file: !2614, line: 26, baseType: !2624, size: 480)
!2624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2625, size: 480, elements: !2630)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2614, line: 17, size: 96, elements: !2626)
!2626 = !{!2627, !2628, !2629}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2625, file: !2614, line: 18, baseType: !987, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2625, file: !2614, line: 19, baseType: !987, size: 32, offset: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2625, file: !2614, line: 20, baseType: !987, size: 32, offset: 64)
!2630 = !{!2631}
!2631 = !DISubrange(count: 5)
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !2621, file: !2614, line: 27, baseType: !2633, size: 128)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2621, file: !2614, line: 27, size: 128, elements: !2634)
!2634 = !{!2635, !2637}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2633, file: !2614, line: 28, baseType: !2636, size: 64)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2633, file: !2614, line: 29, baseType: !2636, size: 64, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2613, file: !2614, line: 58, baseType: !2617, size: 576, offset: 576)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2613, file: !2614, line: 59, baseType: !2617, size: 576, offset: 1152)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2613, file: !2614, line: 60, baseType: !383, size: 32, offset: 1728)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2613, file: !2614, line: 61, baseType: !2612, size: 64, offset: 1792)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2613, file: !2614, line: 62, baseType: !32, size: 32, offset: 1856)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2613, file: !2614, line: 63, baseType: !1382, size: 32, offset: 1888)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2613, file: !2614, line: 64, baseType: !1390, size: 32, offset: 1920)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2613, file: !2614, line: 65, baseType: !2646, size: 192, offset: 1984)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2647, line: 7, size: 192, elements: !2648)
!2647 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2648 = !{!2649, !2650, !2654}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2646, file: !2647, line: 8, baseType: !371, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2646, file: !2647, line: 9, baseType: !2651, size: 64, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2653)
!2653 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2647, line: 5, flags: DIFlagFwdDecl)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2646, file: !2647, line: 10, baseType: !7, size: 32, offset: 128)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2613, file: !2614, line: 66, baseType: !312, size: 64, offset: 2176)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2613, file: !2614, line: 74, baseType: !284, size: 128, offset: 2240)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2613, file: !2614, line: 75, baseType: !2658, size: 64, offset: 2368)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2660, line: 189, size: 1664, elements: !2661)
!2660 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2661 = !{!2662, !2663, !2666, !2671, !2672, !2675, !2676, !2681, !2682, !2683, !2684, !2686, !2687, !2688, !2689, !2690, !2726, !2747}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2659, file: !2660, line: 190, baseType: !568, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2659, file: !2660, line: 191, baseType: !2664, size: 32, offset: 32)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2660, line: 28, baseType: !2665)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !277, line: 98, baseType: !2545)
!2666 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !2660, line: 192, baseType: !2667, size: 192, offset: 64)
!2667 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2659, file: !2660, line: 192, size: 192, elements: !2668)
!2668 = !{!2669, !2670}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2667, file: !2660, line: 193, baseType: !284, size: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2667, file: !2660, line: 194, baseType: !433, size: 192, align: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2659, file: !2660, line: 199, baseType: !1755, size: 256, offset: 256)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2659, file: !2660, line: 200, baseType: !2673, size: 64, offset: 512)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2660, line: 200, flags: DIFlagFwdDecl)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2659, file: !2660, line: 201, baseType: !591, size: 64, offset: 576)
!2676 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !2660, line: 202, baseType: !2677, size: 64, offset: 640)
!2677 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2659, file: !2660, line: 202, size: 64, elements: !2678)
!2678 = !{!2679, !2680}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2677, file: !2660, line: 203, baseType: !1483, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2677, file: !2660, line: 204, baseType: !1483, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2659, file: !2660, line: 206, baseType: !1483, size: 64, offset: 704)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2659, file: !2660, line: 207, baseType: !1382, size: 32, offset: 768)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2659, file: !2660, line: 208, baseType: !1390, size: 32, offset: 800)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2659, file: !2660, line: 209, baseType: !2685, size: 32, offset: 832)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2660, line: 31, baseType: !1502)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2659, file: !2660, line: 210, baseType: !476, size: 16, offset: 864)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2659, file: !2660, line: 211, baseType: !476, size: 16, offset: 880)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2659, file: !2660, line: 215, baseType: !625, size: 16, offset: 896)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2659, file: !2660, line: 222, baseType: !312, size: 64, offset: 960)
!2690 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !2660, line: 239, baseType: !2691, size: 320, offset: 1024)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2659, file: !2660, line: 239, size: 320, elements: !2692)
!2692 = !{!2693, !2718}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2691, file: !2660, line: 240, baseType: !2694, size: 320)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2660, line: 108, size: 320, elements: !2695)
!2695 = !{!2696, !2697, !2707, !2710, !2717}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2694, file: !2660, line: 110, baseType: !312, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !2660, line: 111, baseType: !2698, size: 64, offset: 64)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !2660, line: 111, size: 64, elements: !2699)
!2699 = !{!2700, !2706}
!2700 = !DIDerivedType(tag: DW_TAG_member, scope: !2698, file: !2660, line: 112, baseType: !2701, size: 64)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2698, file: !2660, line: 112, size: 64, elements: !2702)
!2702 = !{!2703, !2704}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2701, file: !2660, line: 114, baseType: !581, size: 16)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2701, file: !2660, line: 115, baseType: !2705, size: 48, offset: 16)
!2705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 48, elements: !999)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2698, file: !2660, line: 121, baseType: !312, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2694, file: !2660, line: 123, baseType: !2708, size: 64, offset: 128)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2660, line: 96, flags: DIFlagFwdDecl)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2694, file: !2660, line: 124, baseType: !2711, size: 64, offset: 192)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2660, line: 102, size: 192, elements: !2713)
!2713 = !{!2714, !2715, !2716}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2712, file: !2660, line: 103, baseType: !299, size: 128, align: 64)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2712, file: !2660, line: 104, baseType: !568, size: 32, offset: 128)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2712, file: !2660, line: 105, baseType: !771, size: 8, offset: 160)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2694, file: !2660, line: 125, baseType: !292, size: 64, offset: 256)
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !2660, line: 241, baseType: !2719, size: 320)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2691, file: !2660, line: 241, size: 320, elements: !2720)
!2720 = !{!2721, !2722, !2723, !2724, !2725}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2719, file: !2660, line: 242, baseType: !312, size: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2719, file: !2660, line: 243, baseType: !312, size: 64, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2719, file: !2660, line: 244, baseType: !2708, size: 64, offset: 128)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2719, file: !2660, line: 245, baseType: !2711, size: 64, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2719, file: !2660, line: 246, baseType: !1038, size: 64, offset: 256)
!2726 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !2660, line: 254, baseType: !2727, size: 256, offset: 1344)
!2727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2659, file: !2660, line: 254, size: 256, elements: !2728)
!2728 = !{!2729, !2735}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2727, file: !2660, line: 255, baseType: !2730, size: 256)
!2730 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2660, line: 128, size: 256, elements: !2731)
!2731 = !{!2732, !2733}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2730, file: !2660, line: 129, baseType: !591, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2730, file: !2660, line: 130, baseType: !2734, size: 256)
!2734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 256, elements: !2272)
!2735 = !DIDerivedType(tag: DW_TAG_member, scope: !2727, file: !2660, line: 256, baseType: !2736, size: 256)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2727, file: !2660, line: 256, size: 256, elements: !2737)
!2737 = !{!2738, !2739}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2736, file: !2660, line: 258, baseType: !284, size: 128)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2736, file: !2660, line: 259, baseType: !2740, size: 128, offset: 128)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2741, line: 22, size: 128, elements: !2742)
!2741 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2742 = !{!2743, !2746}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2740, file: !2741, line: 23, baseType: !2744, size: 64)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2741, line: 23, flags: DIFlagFwdDecl)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2740, file: !2741, line: 24, baseType: !312, size: 64, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2659, file: !2660, line: 274, baseType: !2748, size: 64, offset: 1600)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2660, line: 170, size: 192, elements: !2750)
!2750 = !{!2751, !2760, !2761}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2749, file: !2660, line: 171, baseType: !2752, size: 64)
!2752 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2660, line: 165, baseType: !2753)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!32, !2658, !2756, !2758, !2658}
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2709)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2730)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2749, file: !2660, line: 172, baseType: !2658, size: 64, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2749, file: !2660, line: 173, baseType: !2708, size: 64, offset: 128)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2613, file: !2614, line: 76, baseType: !1755, size: 256, offset: 2432)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2613, file: !2614, line: 83, baseType: !2764, size: 256, offset: 2688)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2765, line: 102, size: 256, elements: !2766)
!2765 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2766 = !{!2767, !2768, !2769}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2764, file: !2765, line: 103, baseType: !371, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2764, file: !2765, line: 104, baseType: !284, size: 128, offset: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2764, file: !2765, line: 105, baseType: !2770, size: 64, offset: 192)
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2765, line: 21, baseType: !2771)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DISubroutineType(types: !2773)
!2773 = !{null, !2774}
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2613, file: !2614, line: 85, baseType: !2776, size: 768, offset: 2944)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2777, line: 156, size: 768, elements: !2778)
!2777 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2778 = !{!2779, !2784}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2776, file: !2777, line: 157, baseType: !2780, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{!32, !2783}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2776, file: !2777, line: 158, baseType: !2785, size: 704, offset: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2777, line: 150, size: 704, elements: !2786)
!2786 = !{!2787, !2866}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2785, file: !2777, line: 152, baseType: !2788, size: 640)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2777, line: 131, size: 640, elements: !2789)
!2789 = !{!2790, !2823, !2835, !2836, !2856, !2857, !2859, !2865}
!2790 = !DIDerivedType(tag: DW_TAG_member, scope: !2788, file: !2777, line: 132, baseType: !2791, size: 192)
!2791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2788, file: !2777, line: 132, size: 192, elements: !2792)
!2792 = !{!2793, !2822}
!2793 = !DIDerivedType(tag: DW_TAG_member, scope: !2791, file: !2777, line: 133, baseType: !2794, size: 192)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2791, file: !2777, line: 133, size: 192, elements: !2795)
!2795 = !{!2796, !2819, !2820, !2821}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2794, file: !2777, line: 134, baseType: !2797, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2777, line: 112, size: 512, elements: !2799)
!2799 = !{!2800, !2801, !2802, !2803, !2804, !2805, !2811, !2817, !2818}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2798, file: !2777, line: 113, baseType: !292, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2798, file: !2777, line: 114, baseType: !591, size: 64, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2798, file: !2777, line: 115, baseType: !32, size: 32, offset: 128)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2798, file: !2777, line: 116, baseType: !1379, size: 16, offset: 160)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2798, file: !2777, line: 117, baseType: !2797, size: 64, offset: 192)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2798, file: !2777, line: 118, baseType: !2806, size: 64, offset: 256)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2777, line: 47, baseType: !2808)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!32, !2797, !32, !591, !2810, !1694}
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2798, file: !2777, line: 119, baseType: !2812, size: 64, offset: 320)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2777, line: 94, size: 192, elements: !2814)
!2814 = !{!2815, !2816}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2813, file: !2777, line: 95, baseType: !383, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2813, file: !2777, line: 96, baseType: !1889, size: 128, offset: 64)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2798, file: !2777, line: 120, baseType: !591, size: 64, offset: 384)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2798, file: !2777, line: 121, baseType: !591, size: 64, offset: 448)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2794, file: !2777, line: 135, baseType: !32, size: 32, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2794, file: !2777, line: 136, baseType: !32, size: 32, offset: 96)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2794, file: !2777, line: 137, baseType: !32, size: 32, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2791, file: !2777, line: 139, baseType: !299, size: 128, align: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2788, file: !2777, line: 141, baseType: !2824, size: 64, offset: 192)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2826, line: 26, size: 192, elements: !2827)
!2826 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2827 = !{!2828, !2829}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2825, file: !2826, line: 27, baseType: !7, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2825, file: !2826, line: 28, baseType: !2830, size: 128, offset: 64)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2831, line: 43, size: 128, elements: !2832)
!2831 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2832 = !{!2833, !2834}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2830, file: !2831, line: 44, baseType: !1761)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2830, file: !2831, line: 45, baseType: !284, size: 128)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2788, file: !2777, line: 142, baseType: !2797, size: 64, offset: 256)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2788, file: !2777, line: 143, baseType: !2837, size: 64, offset: 320)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2777, line: 161, size: 960, elements: !2839)
!2839 = !{!2840, !2841, !2845, !2852}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2838, file: !2777, line: 162, baseType: !2776, size: 768)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2838, file: !2777, line: 163, baseType: !2842, size: 64, offset: 768)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!2783, !2837}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2838, file: !2777, line: 164, baseType: !2846, size: 64, offset: 832)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{null, !2849, !2797, !2850, !2851}
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2838, file: !2777, line: 167, baseType: !2853, size: 64, offset: 896)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!32, !2849, !2797}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2788, file: !2777, line: 144, baseType: !2783, size: 64, offset: 384)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2788, file: !2777, line: 145, baseType: !2858, size: 64, offset: 448)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2788, file: !2777, line: 146, baseType: !2860, size: 64, offset: 512)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2777, line: 124, size: 256, elements: !2862)
!2862 = !{!2863, !2864}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2861, file: !2777, line: 125, baseType: !433, size: 192, align: 64)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2861, file: !2777, line: 126, baseType: !2849, size: 64, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2788, file: !2777, line: 147, baseType: !1581, size: 64, offset: 576)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2785, file: !2777, line: 153, baseType: !1750, size: 64, offset: 640)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2613, file: !2614, line: 86, baseType: !2849, size: 64, offset: 3712)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2613, file: !2614, line: 88, baseType: !2869, size: 64, offset: 3776)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2614, line: 92, size: 576, elements: !2871)
!2871 = !{!2872, !2873, !2874, !2875, !2876}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2870, file: !2614, line: 93, baseType: !276, size: 128)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2870, file: !2614, line: 94, baseType: !2612, size: 64, offset: 128)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2870, file: !2614, line: 95, baseType: !1382, size: 32, offset: 192)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2870, file: !2614, line: 96, baseType: !32, size: 32, offset: 224)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2870, file: !2614, line: 97, baseType: !2877, size: 320, offset: 256)
!2877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 320, elements: !2878)
!2878 = !{!2879}
!2879 = !DISubrange(count: 10)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2613, file: !2614, line: 89, baseType: !2881, size: 320, offset: 3840)
!2881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 320, elements: !2878)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2590, file: !2591, line: 33, baseType: !2869, size: 64, offset: 768)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !2590, file: !2591, line: 34, baseType: !32, size: 32, offset: 832)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2590, file: !2591, line: 35, baseType: !2646, size: 192, offset: 896)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2327, file: !2328, line: 872, baseType: !2886, size: 512, offset: 6016)
!2886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 512, elements: !2272)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2327, file: !2328, line: 873, baseType: !284, size: 128, offset: 6528)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2327, file: !2328, line: 874, baseType: !284, size: 128, offset: 6656)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2327, file: !2328, line: 876, baseType: !2824, size: 64, offset: 6784)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2327, file: !2328, line: 879, baseType: !1001, size: 64, offset: 6848)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2327, file: !2328, line: 882, baseType: !1001, size: 64, offset: 6912)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2327, file: !2328, line: 884, baseType: !331, size: 64, offset: 6976)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2327, file: !2328, line: 885, baseType: !331, size: 64, offset: 7040)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2327, file: !2328, line: 890, baseType: !331, size: 64, offset: 7104)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2327, file: !2328, line: 891, baseType: !2896, size: 128, offset: 7168)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2328, line: 242, size: 128, elements: !2897)
!2897 = !{!2898, !2899, !2900}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2896, file: !2328, line: 244, baseType: !331, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2896, file: !2328, line: 245, baseType: !331, size: 64, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2896, file: !2328, line: 246, baseType: !1761, offset: 128)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2327, file: !2328, line: 900, baseType: !312, size: 64, offset: 7296)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2327, file: !2328, line: 901, baseType: !312, size: 64, offset: 7360)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2327, file: !2328, line: 904, baseType: !331, size: 64, offset: 7424)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2327, file: !2328, line: 907, baseType: !331, size: 64, offset: 7488)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2327, file: !2328, line: 910, baseType: !312, size: 64, offset: 7552)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2327, file: !2328, line: 911, baseType: !312, size: 64, offset: 7616)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2327, file: !2328, line: 914, baseType: !2908, size: 640, offset: 7680)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2909, line: 123, size: 640, elements: !2910)
!2909 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2910 = !{!2911, !2917, !2918}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2908, file: !2909, line: 124, baseType: !2912, size: 576)
!2912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2913, size: 576, elements: !1592)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2909, line: 108, size: 192, elements: !2914)
!2914 = !{!2915, !2916}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2913, file: !2909, line: 109, baseType: !331, size: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2913, file: !2909, line: 110, baseType: !2446, size: 128, offset: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2908, file: !2909, line: 125, baseType: !7, size: 32, offset: 576)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2908, file: !2909, line: 126, baseType: !7, size: 32, offset: 608)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2327, file: !2328, line: 917, baseType: !2920, size: 192, offset: 8320)
!2920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2909, line: 134, size: 192, elements: !2921)
!2921 = !{!2922, !2923}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2920, file: !2909, line: 135, baseType: !299, size: 128, align: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2920, file: !2909, line: 136, baseType: !7, size: 32, offset: 128)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2327, file: !2328, line: 923, baseType: !2925, size: 64, offset: 8512)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2927)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2928, line: 111, size: 1280, elements: !2929)
!2928 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2929 = !{!2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2968}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2927, file: !2928, line: 112, baseType: !383, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2927, file: !2928, line: 120, baseType: !1382, size: 32, offset: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2927, file: !2928, line: 121, baseType: !1390, size: 32, offset: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2927, file: !2928, line: 122, baseType: !1382, size: 32, offset: 96)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2927, file: !2928, line: 123, baseType: !1390, size: 32, offset: 128)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2927, file: !2928, line: 124, baseType: !1382, size: 32, offset: 160)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2927, file: !2928, line: 125, baseType: !1390, size: 32, offset: 192)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2927, file: !2928, line: 126, baseType: !1382, size: 32, offset: 224)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2927, file: !2928, line: 127, baseType: !1390, size: 32, offset: 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2927, file: !2928, line: 128, baseType: !7, size: 32, offset: 288)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2927, file: !2928, line: 129, baseType: !2941, size: 64, offset: 320)
!2941 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2942, line: 26, baseType: !2943)
!2942 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2942, line: 24, size: 64, elements: !2944)
!2944 = !{!2945}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2943, file: !2942, line: 25, baseType: !2946, size: 64)
!2946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 64, elements: !2947)
!2947 = !{!2948}
!2948 = !DISubrange(count: 2)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2927, file: !2928, line: 130, baseType: !2941, size: 64, offset: 384)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2927, file: !2928, line: 131, baseType: !2941, size: 64, offset: 448)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2927, file: !2928, line: 132, baseType: !2941, size: 64, offset: 512)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2927, file: !2928, line: 133, baseType: !2941, size: 64, offset: 576)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2927, file: !2928, line: 135, baseType: !482, size: 8, offset: 640)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2927, file: !2928, line: 137, baseType: !2658, size: 64, offset: 704)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2927, file: !2928, line: 138, baseType: !2658, size: 64, offset: 768)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2927, file: !2928, line: 139, baseType: !2658, size: 64, offset: 832)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2927, file: !2928, line: 140, baseType: !2658, size: 64, offset: 896)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2927, file: !2928, line: 145, baseType: !1953, size: 64, offset: 960)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2927, file: !2928, line: 146, baseType: !2612, size: 64, offset: 1024)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2927, file: !2928, line: 147, baseType: !2961, size: 64, offset: 1088)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2928, line: 25, size: 64, elements: !2963)
!2963 = !{!2964, !2965, !2966}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2962, file: !2928, line: 26, baseType: !383, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2962, file: !2928, line: 27, baseType: !32, size: 32, offset: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2962, file: !2928, line: 28, baseType: !2967, offset: 64)
!2967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, elements: !483)
!2968 = !DIDerivedType(tag: DW_TAG_member, scope: !2927, file: !2928, line: 149, baseType: !2969, size: 128, offset: 1152)
!2969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2927, file: !2928, line: 149, size: 128, elements: !2970)
!2970 = !{!2971, !2972}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2969, file: !2928, line: 150, baseType: !32, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2969, file: !2928, line: 151, baseType: !299, size: 128, align: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2327, file: !2328, line: 926, baseType: !2925, size: 64, offset: 8576)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2327, file: !2328, line: 929, baseType: !2925, size: 64, offset: 8640)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2327, file: !2328, line: 933, baseType: !2658, size: 64, offset: 8704)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2327, file: !2328, line: 943, baseType: !267, size: 128, offset: 8768)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2327, file: !2328, line: 945, baseType: !2978, size: 64, offset: 8896)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2328, line: 49, flags: DIFlagFwdDecl)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2327, file: !2328, line: 956, baseType: !2981, size: 64, offset: 8960)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2328, line: 45, flags: DIFlagFwdDecl)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2327, file: !2328, line: 959, baseType: !2984, size: 64, offset: 9024)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2328, line: 959, flags: DIFlagFwdDecl)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2327, file: !2328, line: 962, baseType: !2987, size: 64, offset: 9088)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2328, line: 66, flags: DIFlagFwdDecl)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2327, file: !2328, line: 966, baseType: !2990, size: 64, offset: 9152)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2992, line: 31, size: 576, elements: !2993)
!2992 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2993 = !{!2994, !2995, !2998, !3001, !3004, !3005, !3688, !3691, !3692}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2991, file: !2992, line: 32, baseType: !383, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2991, file: !2992, line: 33, baseType: !2996, size: 64, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2992, line: 9, flags: DIFlagFwdDecl)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2991, file: !2992, line: 34, baseType: !2999, size: 64, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2992, line: 10, flags: DIFlagFwdDecl)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2991, file: !2992, line: 35, baseType: !3002, size: 64, offset: 192)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2992, line: 8, flags: DIFlagFwdDecl)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2991, file: !2992, line: 36, baseType: !2589, size: 64, offset: 256)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2991, file: !2992, line: 37, baseType: !3006, size: 64, offset: 320)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !3008, line: 56, size: 16896, elements: !3009)
!3008 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!3009 = !{!3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3031, !3032, !3033, !3034, !3035, !3038, !3040, !3041, !3056, !3057, !3058, !3059, !3069, !3139, !3145, !3151, !3164, !3473, !3627, !3634, !3637, !3660, !3661, !3687}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !3007, file: !3008, line: 60, baseType: !568, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3007, file: !3008, line: 63, baseType: !568, size: 32, offset: 32)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !3007, file: !3008, line: 66, baseType: !1670, offset: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !3007, file: !3008, line: 68, baseType: !7, size: 32, offset: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !3007, file: !3008, line: 70, baseType: !7, size: 32, offset: 96)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !3007, file: !3008, line: 71, baseType: !32, size: 32, offset: 128)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !3007, file: !3008, line: 73, baseType: !1670, offset: 160)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !3007, file: !3008, line: 74, baseType: !383, size: 32, offset: 160)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3007, file: !3008, line: 76, baseType: !284, size: 128, offset: 192)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !3007, file: !3008, line: 77, baseType: !284, size: 128, offset: 320)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !3007, file: !3008, line: 83, baseType: !1323, size: 64, offset: 448)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !3007, file: !3008, line: 86, baseType: !2711, size: 64, offset: 512)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3007, file: !3008, line: 88, baseType: !2612, size: 64, offset: 576)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3007, file: !3008, line: 89, baseType: !2869, size: 64, offset: 640)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !3007, file: !3008, line: 90, baseType: !2599, size: 192, offset: 704)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3007, file: !3008, line: 92, baseType: !2646, size: 192, offset: 896)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !3007, file: !3008, line: 94, baseType: !284, size: 128, offset: 1088)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !3007, file: !3008, line: 95, baseType: !3028, size: 64, offset: 1216)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3030, line: 123, flags: DIFlagFwdDecl)
!3030 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !3007, file: !3008, line: 96, baseType: !3028, size: 64, offset: 1280)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !3007, file: !3008, line: 99, baseType: !2776, size: 768, offset: 1344)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !3007, file: !3008, line: 102, baseType: !445, size: 64, offset: 2112)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !3007, file: !3008, line: 103, baseType: !445, size: 64, offset: 2176)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !3007, file: !3008, line: 105, baseType: !3036, size: 64, offset: 2240)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !3008, line: 48, flags: DIFlagFwdDecl)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !3007, file: !3008, line: 107, baseType: !3039, size: 64, offset: 2304)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !3007, file: !3008, line: 108, baseType: !3039, size: 64, offset: 2368)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !3007, file: !3008, line: 109, baseType: !3042, size: 64, offset: 2432)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3043, line: 70, size: 64, elements: !3044)
!3043 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3044 = !{!3045}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3042, file: !3043, line: 71, baseType: !3046, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3043, line: 54, size: 192, elements: !3048)
!3048 = !{!3049, !3054, !3055}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3047, file: !3043, line: 55, baseType: !3050, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3043, line: 51, baseType: !3051)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DISubroutineType(types: !3053)
!3053 = !{!32, !3046, !312, !591}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3047, file: !3043, line: 56, baseType: !3046, size: 64, offset: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3047, file: !3043, line: 57, baseType: !32, size: 32, offset: 128)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !3007, file: !3008, line: 114, baseType: !987, size: 32, offset: 2496)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !3007, file: !3008, line: 116, baseType: !290, size: 64, offset: 2560)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !3007, file: !3008, line: 119, baseType: !284, size: 128, offset: 2624)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !3007, file: !3008, line: 121, baseType: !3060, size: 256, offset: 2752)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3061, line: 8, size: 256, elements: !3062)
!3061 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3062 = !{!3063, !3064, !3065, !3066}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3060, file: !3061, line: 10, baseType: !2849, size: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3060, file: !3061, line: 12, baseType: !32, size: 32, offset: 64)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3060, file: !3061, line: 15, baseType: !1001, size: 64, offset: 128)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3060, file: !3061, line: 16, baseType: !3067, size: 64, offset: 192)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3061, line: 6, flags: DIFlagFwdDecl)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !3007, file: !3008, line: 122, baseType: !3070, size: 832, offset: 3008)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3071, line: 7, size: 832, elements: !3072)
!3071 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3072 = !{!3073, !3080, !3091, !3099, !3107, !3108, !3116, !3124, !3125, !3126, !3127, !3128, !3134}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3070, file: !3071, line: 8, baseType: !3074, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3076, line: 92, size: 1024, elements: !3077)
!3076 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3077 = !{!3078}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3075, file: !3076, line: 93, baseType: !3079, size: 1024)
!3079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1024, elements: !269)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3070, file: !3071, line: 9, baseType: !3081, size: 64, offset: 64)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3076, line: 51, size: 2368, elements: !3083)
!3083 = !{!3084, !3088}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3082, file: !3076, line: 53, baseType: !3085, size: 2368)
!3085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 2368, elements: !3086)
!3086 = !{!3087}
!3087 = !DISubrange(count: 37)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3082, file: !3076, line: 54, baseType: !3089, offset: 2368)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3090, line: 68, elements: !1587)
!3090 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3070, file: !3071, line: 10, baseType: !3092, size: 64, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 64)
!3093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3076, line: 104, size: 7936, elements: !3094)
!3094 = !{!3095}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3093, file: !3076, line: 105, baseType: !3096, size: 7936)
!3096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 7936, elements: !3097)
!3097 = !{!3098}
!3098 = !DISubrange(count: 124)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3070, file: !3071, line: 11, baseType: !3100, size: 64, offset: 192)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3076, line: 98, size: 576, elements: !3102)
!3102 = !{!3103}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3101, file: !3076, line: 99, baseType: !3104, size: 576)
!3104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 576, elements: !3105)
!3105 = !{!3106}
!3106 = !DISubrange(count: 9)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3070, file: !3071, line: 12, baseType: !3100, size: 64, offset: 256)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3070, file: !3071, line: 13, baseType: !3109, size: 64, offset: 320)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3076, line: 59, size: 1792, elements: !3111)
!3111 = !{!3112}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3110, file: !3076, line: 60, baseType: !3113, size: 1792)
!3113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1792, elements: !3114)
!3114 = !{!3115}
!3115 = !DISubrange(count: 28)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3070, file: !3071, line: 14, baseType: !3117, size: 64, offset: 384)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3076, line: 64, size: 32768, elements: !3119)
!3119 = !{!3120}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3118, file: !3076, line: 65, baseType: !3121, size: 32768)
!3121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 32768, elements: !3122)
!3122 = !{!3123}
!3123 = !DISubrange(count: 512)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3070, file: !3071, line: 17, baseType: !3028, size: 64, offset: 448)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3070, file: !3071, line: 18, baseType: !3100, size: 64, offset: 512)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3070, file: !3071, line: 19, baseType: !3100, size: 64, offset: 576)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3070, file: !3071, line: 20, baseType: !3081, size: 64, offset: 640)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3070, file: !3071, line: 21, baseType: !3129, size: 64, offset: 704)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3076, line: 71, size: 384, elements: !3131)
!3131 = !{!3132}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3130, file: !3076, line: 72, baseType: !3133, size: 384)
!3133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 384, elements: !999)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3070, file: !3071, line: 22, baseType: !3135, size: 64, offset: 768)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3076, line: 81, size: 32768, elements: !3137)
!3137 = !{!3138}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3136, file: !3076, line: 82, baseType: !3121, size: 32768)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !3007, file: !3008, line: 123, baseType: !3140, size: 256, offset: 3840)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3141, line: 11, size: 256, elements: !3142)
!3141 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3142 = !{!3143, !3144}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3140, file: !3141, line: 12, baseType: !1665, size: 192)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3140, file: !3141, line: 13, baseType: !1581, size: 64, offset: 192)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !3007, file: !3008, line: 124, baseType: !3146, size: 128, offset: 4096)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3147, line: 9, size: 128, elements: !3148)
!3147 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3148 = !{!3149, !3150}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3146, file: !3147, line: 10, baseType: !32, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3146, file: !3147, line: 11, baseType: !2849, size: 64, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !3007, file: !3008, line: 125, baseType: !3152, size: 512, offset: 4224)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3153, line: 11, size: 512, elements: !3154)
!3153 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3154 = !{!3155, !3156, !3157, !3158, !3159}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3152, file: !3153, line: 12, baseType: !1750, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3152, file: !3153, line: 13, baseType: !3039, size: 64, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3152, file: !3153, line: 15, baseType: !7, size: 32, offset: 128)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3152, file: !3153, line: 16, baseType: !987, size: 32, offset: 160)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3152, file: !3153, line: 17, baseType: !3160, size: 320, offset: 192)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3043, line: 65, size: 320, elements: !3161)
!3161 = !{!3162, !3163}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3160, file: !3043, line: 66, baseType: !1755, size: 256)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3160, file: !3043, line: 67, baseType: !3046, size: 64, offset: 256)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !3007, file: !3008, line: 126, baseType: !3165, size: 5440, offset: 4736)
!3165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3166, line: 43, size: 5440, elements: !3167)
!3166 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3167 = !{!3168, !3169, !3170, !3171, !3172, !3173, !3176, !3177, !3180, !3181, !3182, !3183, !3184, !3185, !3187, !3188, !3191, !3192, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3417, !3418, !3419, !3420, !3421, !3429, !3430, !3431, !3435, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3455, !3456, !3458, !3459, !3462, !3463, !3464, !3465, !3466}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3165, file: !3166, line: 45, baseType: !2849, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3165, file: !3166, line: 46, baseType: !2849, size: 64, offset: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3165, file: !3166, line: 47, baseType: !2849, size: 64, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3165, file: !3166, line: 48, baseType: !2849, size: 64, offset: 192)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3165, file: !3166, line: 49, baseType: !2849, size: 64, offset: 256)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3165, file: !3166, line: 51, baseType: !3174, size: 64, offset: 320)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3166, line: 16, flags: DIFlagFwdDecl)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3165, file: !3166, line: 52, baseType: !3174, size: 64, offset: 384)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3165, file: !3166, line: 53, baseType: !3178, size: 64, offset: 448)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3166, line: 53, flags: DIFlagFwdDecl)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3165, file: !3166, line: 54, baseType: !1665, size: 192, offset: 512)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3165, file: !3166, line: 62, baseType: !771, size: 8, offset: 704)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3165, file: !3166, line: 66, baseType: !3039, size: 64, offset: 768)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3165, file: !3166, line: 67, baseType: !771, size: 8, offset: 832)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3165, file: !3166, line: 68, baseType: !445, size: 64, offset: 896)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3165, file: !3166, line: 70, baseType: !3186, size: 64, offset: 960)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3165, file: !3166, line: 71, baseType: !445, size: 64, offset: 1024)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3165, file: !3166, line: 73, baseType: !3189, size: 64, offset: 1088)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3166, line: 73, flags: DIFlagFwdDecl)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3165, file: !3166, line: 74, baseType: !3186, size: 64, offset: 1152)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3165, file: !3166, line: 75, baseType: !3193, size: 64, offset: 1216)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3195, line: 9, size: 1728, elements: !3196)
!3195 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3196 = !{!3197, !3198, !3199, !3200, !3201, !3328, !3329, !3330, !3331, !3332}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3194, file: !3195, line: 11, baseType: !998, size: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3194, file: !3195, line: 12, baseType: !998, size: 64, offset: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3194, file: !3195, line: 13, baseType: !32, size: 32, offset: 128)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3194, file: !3195, line: 14, baseType: !32, size: 32, offset: 160)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3194, file: !3195, line: 15, baseType: !3202, size: 64, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 64)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3195, line: 98, size: 960, elements: !3204)
!3204 = !{!3205, !3206, !3278, !3282, !3283, !3284, !3285, !3326, !3327}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3203, file: !3195, line: 99, baseType: !7, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3203, file: !3195, line: 101, baseType: !3207, size: 64, offset: 64)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{null, !3210, !3276}
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3195, line: 77, size: 1408, elements: !3212)
!3212 = !{!3213, !3219, !3252, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3211, file: !3195, line: 78, baseType: !3214, size: 64)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3215, line: 17, size: 64, elements: !3216)
!3215 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3216 = !{!3217}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3214, file: !3215, line: 18, baseType: !3218, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3211, file: !3195, line: 82, baseType: !3220, size: 352, offset: 64)
!3220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3211, file: !3195, line: 79, size: 352, elements: !3221)
!3221 = !{!3222, !3232}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3220, file: !3195, line: 80, baseType: !3223, size: 160)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3195, line: 41, size: 160, elements: !3224)
!3224 = !{!3225, !3227, !3228, !3229, !3230, !3231}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3223, file: !3195, line: 42, baseType: !3226, size: 32)
!3226 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !525, line: 32, baseType: !493)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3223, file: !3195, line: 43, baseType: !3226, size: 32, offset: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3223, file: !3195, line: 44, baseType: !987, size: 32, offset: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3223, file: !3195, line: 45, baseType: !987, size: 32, offset: 96)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3223, file: !3195, line: 46, baseType: !535, size: 16, offset: 128)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3223, file: !3195, line: 47, baseType: !581, size: 16, offset: 144)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3220, file: !3195, line: 81, baseType: !3233, size: 352)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3195, line: 50, size: 352, elements: !3234)
!3234 = !{!3235, !3248, !3249, !3250, !3251}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3233, file: !3195, line: 51, baseType: !3236, size: 128)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3237, line: 33, size: 128, elements: !3238)
!3237 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3238 = !{!3239}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3236, file: !3237, line: 40, baseType: !3240, size: 128)
!3240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3236, file: !3237, line: 34, size: 128, elements: !3241)
!3241 = !{!3242, !3244, !3246}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3240, file: !3237, line: 35, baseType: !3243, size: 128)
!3243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 128, elements: !269)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3240, file: !3237, line: 37, baseType: !3245, size: 128)
!3245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 128, elements: !2433)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3240, file: !3237, line: 38, baseType: !3247, size: 128)
!3247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3226, size: 128, elements: !2272)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3233, file: !3195, line: 52, baseType: !3236, size: 128, offset: 128)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3233, file: !3195, line: 53, baseType: !987, size: 32, offset: 256)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3233, file: !3195, line: 54, baseType: !3226, size: 32, offset: 288)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3233, file: !3195, line: 55, baseType: !987, size: 32, offset: 320)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3211, file: !3195, line: 83, baseType: !3253, size: 320, offset: 448)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3254, line: 11, size: 320, elements: !3255)
!3254 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3255 = !{!3256, !3257, !3258, !3263}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3253, file: !3254, line: 16, baseType: !276, size: 128)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3253, file: !3254, line: 17, baseType: !312, size: 64, offset: 128)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3253, file: !3254, line: 18, baseType: !3259, size: 64, offset: 192)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{null, !3262}
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3253, file: !3254, line: 19, baseType: !987, size: 32, offset: 256)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3211, file: !3195, line: 84, baseType: !1670, offset: 768)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3211, file: !3195, line: 85, baseType: !568, size: 32, offset: 768)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3211, file: !3195, line: 86, baseType: !1750, size: 64, offset: 832)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3211, file: !3195, line: 87, baseType: !415, size: 64, offset: 896)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3211, file: !3195, line: 88, baseType: !415, size: 64, offset: 960)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3211, file: !3195, line: 89, baseType: !453, size: 64, offset: 1024)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3211, file: !3195, line: 90, baseType: !32, size: 32, offset: 1088)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3211, file: !3195, line: 91, baseType: !32, size: 32, offset: 1120)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3211, file: !3195, line: 92, baseType: !481, size: 8, offset: 1152)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3211, file: !3195, line: 93, baseType: !581, size: 16, offset: 1168)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3211, file: !3195, line: 94, baseType: !3193, size: 64, offset: 1216)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3211, file: !3195, line: 95, baseType: !299, size: 128, align: 64, offset: 1280)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3203, file: !3195, line: 103, baseType: !3279, size: 64, offset: 128)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{null, !3210}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3203, file: !3195, line: 104, baseType: !3259, size: 64, offset: 192)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3203, file: !3195, line: 105, baseType: !2051, size: 64, offset: 256)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3203, file: !3195, line: 106, baseType: !292, size: 64, offset: 320)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3203, file: !3195, line: 107, baseType: !3286, size: 320, offset: 384)
!3286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3215, line: 56, size: 320, elements: !3287)
!3287 = !{!3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3300, !3302}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3286, file: !3215, line: 57, baseType: !581, size: 16)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3286, file: !3215, line: 58, baseType: !581, size: 16, offset: 16)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3286, file: !3215, line: 59, baseType: !581, size: 16, offset: 32)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3286, file: !3215, line: 60, baseType: !581, size: 16, offset: 48)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3286, file: !3215, line: 61, baseType: !7, size: 32, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3286, file: !3215, line: 62, baseType: !581, size: 16, offset: 96)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3286, file: !3215, line: 63, baseType: !771, size: 8, offset: 112)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3286, file: !3215, line: 64, baseType: !3296, size: 64, offset: 128)
!3296 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3215, line: 38, baseType: !3297)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!987, !3276, !987, !987}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3286, file: !3215, line: 65, baseType: !3301, size: 64, offset: 192)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3215, line: 39, baseType: !3297)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3286, file: !3215, line: 66, baseType: !3303, size: 64, offset: 256)
!3303 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3215, line: 40, baseType: !3304)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!32, !3307, !3276}
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3215, line: 33, size: 128, elements: !3309)
!3309 = !{!3310, !3325}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3308, file: !3215, line: 34, baseType: !3311, size: 64)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3215, line: 81, size: 1024, elements: !3313)
!3313 = !{!3314, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3312, file: !3215, line: 82, baseType: !3315, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3215, line: 26, flags: DIFlagFwdDecl)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3312, file: !3215, line: 83, baseType: !7, size: 32, offset: 64)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3312, file: !3215, line: 84, baseType: !7, size: 32, offset: 96)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3312, file: !3215, line: 85, baseType: !3286, size: 320, offset: 128)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3312, file: !3215, line: 86, baseType: !771, size: 8, offset: 448)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3312, file: !3215, line: 87, baseType: !2764, size: 256, offset: 512)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3312, file: !3215, line: 88, baseType: !1665, size: 192, offset: 768)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3312, file: !3215, line: 89, baseType: !1670, offset: 960)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3312, file: !3215, line: 90, baseType: !383, size: 32, offset: 960)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3308, file: !3215, line: 35, baseType: !3276, size: 64, offset: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3203, file: !3195, line: 108, baseType: !568, size: 32, offset: 704)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3203, file: !3195, line: 109, baseType: !2825, size: 192, offset: 768)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3194, file: !3195, line: 16, baseType: !3006, size: 64, offset: 256)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3194, file: !3195, line: 17, baseType: !771, size: 8, offset: 320)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3194, file: !3195, line: 19, baseType: !3312, size: 1024, offset: 384)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3194, file: !3195, line: 22, baseType: !371, size: 64, offset: 1408)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3194, file: !3195, line: 23, baseType: !2764, size: 256, offset: 1472)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3165, file: !3166, line: 87, baseType: !32, size: 32, offset: 1280)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3165, file: !3166, line: 88, baseType: !32, size: 32, offset: 1312)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3165, file: !3166, line: 89, baseType: !32, size: 32, offset: 1344)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3165, file: !3166, line: 90, baseType: !32, size: 32, offset: 1376)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3165, file: !3166, line: 91, baseType: !32, size: 32, offset: 1408)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3165, file: !3166, line: 92, baseType: !32, size: 32, offset: 1440)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3165, file: !3166, line: 94, baseType: !3340, size: 128, offset: 1472)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3166, line: 21, size: 128, elements: !3341)
!3341 = !{!3342, !3348, !3350}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3340, file: !3166, line: 22, baseType: !3343, size: 32)
!3343 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1344, line: 805, baseType: !3344)
!3344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 798, size: 32, elements: !3345)
!3345 = !{!3346, !3347}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3344, file: !1344, line: 803, baseType: !1343, size: 32)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3344, file: !1344, line: 804, baseType: !1670, offset: 32)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3340, file: !3166, line: 23, baseType: !3349, size: 64, offset: 32)
!3349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 64, elements: !2947)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3340, file: !3166, line: 24, baseType: !771, size: 8, offset: 96)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3165, file: !3166, line: 96, baseType: !32, size: 32, offset: 1600)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3165, file: !3166, line: 97, baseType: !32, size: 32, offset: 1632)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3165, file: !3166, line: 99, baseType: !32, size: 32, offset: 1664)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3165, file: !3166, line: 100, baseType: !32, size: 32, offset: 1696)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3165, file: !3166, line: 101, baseType: !32, size: 32, offset: 1728)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3165, file: !3166, line: 102, baseType: !32, size: 32, offset: 1760)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3165, file: !3166, line: 103, baseType: !32, size: 32, offset: 1792)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3165, file: !3166, line: 104, baseType: !32, size: 32, offset: 1824)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3165, file: !3166, line: 106, baseType: !32, size: 32, offset: 1856)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3165, file: !3166, line: 107, baseType: !32, size: 32, offset: 1888)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3165, file: !3166, line: 111, baseType: !32, size: 32, offset: 1920)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3165, file: !3166, line: 112, baseType: !32, size: 32, offset: 1952)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3165, file: !3166, line: 114, baseType: !32, size: 32, offset: 1984)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3165, file: !3166, line: 116, baseType: !32, size: 32, offset: 2016)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3165, file: !3166, line: 117, baseType: !32, size: 32, offset: 2048)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3165, file: !3166, line: 121, baseType: !32, size: 32, offset: 2080)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3165, file: !3166, line: 122, baseType: !32, size: 32, offset: 2112)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3165, file: !3166, line: 123, baseType: !32, size: 32, offset: 2144)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3165, file: !3166, line: 124, baseType: !32, size: 32, offset: 2176)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3165, file: !3166, line: 125, baseType: !32, size: 32, offset: 2208)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3165, file: !3166, line: 126, baseType: !987, size: 32, offset: 2240)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3165, file: !3166, line: 128, baseType: !32, size: 32, offset: 2272)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3165, file: !3166, line: 129, baseType: !32, size: 32, offset: 2304)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3165, file: !3166, line: 130, baseType: !32, size: 32, offset: 2336)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3165, file: !3166, line: 132, baseType: !32, size: 32, offset: 2368)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3165, file: !3166, line: 133, baseType: !32, size: 32, offset: 2400)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3165, file: !3166, line: 134, baseType: !32, size: 32, offset: 2432)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3165, file: !3166, line: 135, baseType: !32, size: 32, offset: 2464)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3165, file: !3166, line: 136, baseType: !32, size: 32, offset: 2496)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3165, file: !3166, line: 137, baseType: !32, size: 32, offset: 2528)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3165, file: !3166, line: 138, baseType: !32, size: 32, offset: 2560)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3165, file: !3166, line: 139, baseType: !32, size: 32, offset: 2592)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3165, file: !3166, line: 140, baseType: !7, size: 32, offset: 2624)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3165, file: !3166, line: 141, baseType: !32, size: 32, offset: 2656)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3165, file: !3166, line: 142, baseType: !32, size: 32, offset: 2688)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3165, file: !3166, line: 143, baseType: !32, size: 32, offset: 2720)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3165, file: !3166, line: 144, baseType: !32, size: 32, offset: 2752)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3165, file: !3166, line: 145, baseType: !32, size: 32, offset: 2784)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3165, file: !3166, line: 146, baseType: !32, size: 32, offset: 2816)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3165, file: !3166, line: 147, baseType: !32, size: 32, offset: 2848)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3165, file: !3166, line: 148, baseType: !32, size: 32, offset: 2880)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3165, file: !3166, line: 149, baseType: !32, size: 32, offset: 2912)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3165, file: !3166, line: 150, baseType: !32, size: 32, offset: 2944)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3165, file: !3166, line: 151, baseType: !32, size: 32, offset: 2976)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3165, file: !3166, line: 152, baseType: !32, size: 32, offset: 3008)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3165, file: !3166, line: 153, baseType: !32, size: 32, offset: 3040)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3165, file: !3166, line: 154, baseType: !32, size: 32, offset: 3072)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3165, file: !3166, line: 155, baseType: !32, size: 32, offset: 3104)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3165, file: !3166, line: 156, baseType: !32, size: 32, offset: 3136)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3165, file: !3166, line: 157, baseType: !32, size: 32, offset: 3168)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3165, file: !3166, line: 158, baseType: !32, size: 32, offset: 3200)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3165, file: !3166, line: 159, baseType: !32, size: 32, offset: 3232)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3165, file: !3166, line: 160, baseType: !32, size: 32, offset: 3264)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3165, file: !3166, line: 161, baseType: !32, size: 32, offset: 3296)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3165, file: !3166, line: 162, baseType: !32, size: 32, offset: 3328)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3165, file: !3166, line: 163, baseType: !32, size: 32, offset: 3360)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3165, file: !3166, line: 164, baseType: !32, size: 32, offset: 3392)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3165, file: !3166, line: 165, baseType: !32, size: 32, offset: 3424)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3165, file: !3166, line: 166, baseType: !32, size: 32, offset: 3456)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3165, file: !3166, line: 167, baseType: !32, size: 32, offset: 3488)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3165, file: !3166, line: 168, baseType: !32, size: 32, offset: 3520)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3165, file: !3166, line: 169, baseType: !32, size: 32, offset: 3552)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3165, file: !3166, line: 170, baseType: !32, size: 32, offset: 3584)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3165, file: !3166, line: 171, baseType: !32, size: 32, offset: 3616)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3165, file: !3166, line: 172, baseType: !3416, size: 96, offset: 3648)
!3416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 96, elements: !1592)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3165, file: !3166, line: 173, baseType: !3416, size: 96, offset: 3744)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3165, file: !3166, line: 174, baseType: !32, size: 32, offset: 3840)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3165, file: !3166, line: 175, baseType: !312, size: 64, offset: 3904)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3165, file: !3166, line: 176, baseType: !312, size: 64, offset: 3968)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3165, file: !3166, line: 177, baseType: !3422, size: 192, offset: 4032)
!3422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3166, line: 34, size: 192, elements: !3423)
!3423 = !{!3424, !3425, !3428}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3422, file: !3166, line: 35, baseType: !383, size: 32)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3422, file: !3166, line: 37, baseType: !3426, size: 64, offset: 64)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3166, line: 32, flags: DIFlagFwdDecl)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3422, file: !3166, line: 38, baseType: !32, size: 32, offset: 128)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3165, file: !3166, line: 178, baseType: !32, size: 32, offset: 4224)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3165, file: !3166, line: 179, baseType: !32, size: 32, offset: 4256)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3165, file: !3166, line: 180, baseType: !3432, size: 64, offset: 4288)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3434)
!3434 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3166, line: 180, flags: DIFlagFwdDecl)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3165, file: !3166, line: 181, baseType: !3436, size: 64, offset: 4352)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3166, line: 41, flags: DIFlagFwdDecl)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3165, file: !3166, line: 182, baseType: !1670, offset: 4416)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3165, file: !3166, line: 183, baseType: !7, size: 32, offset: 4416)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3165, file: !3166, line: 184, baseType: !383, size: 32, offset: 4448)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3165, file: !3166, line: 185, baseType: !312, size: 64, offset: 4480)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3165, file: !3166, line: 186, baseType: !32, size: 32, offset: 4544)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3165, file: !3166, line: 188, baseType: !32, size: 32, offset: 4576)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3165, file: !3166, line: 189, baseType: !32, size: 32, offset: 4608)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3165, file: !3166, line: 195, baseType: !32, size: 32, offset: 4640)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3165, file: !3166, line: 196, baseType: !32, size: 32, offset: 4672)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3165, file: !3166, line: 197, baseType: !32, size: 32, offset: 4704)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3165, file: !3166, line: 198, baseType: !32, size: 32, offset: 4736)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3165, file: !3166, line: 200, baseType: !3450, size: 96, offset: 4768)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3166, line: 27, size: 96, elements: !3451)
!3451 = !{!3452, !3453}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3450, file: !3166, line: 28, baseType: !3343, size: 32)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3450, file: !3166, line: 29, baseType: !3454, size: 64, offset: 32)
!3454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 64, elements: !2947)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3165, file: !3166, line: 202, baseType: !383, size: 32, offset: 4864)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3165, file: !3166, line: 205, baseType: !3457, size: 64, offset: 4928)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3165, file: !3166, line: 206, baseType: !32, size: 32, offset: 4992)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3165, file: !3166, line: 222, baseType: !3460, size: 64, offset: 5056)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3166, line: 222, flags: DIFlagFwdDecl)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3165, file: !3166, line: 223, baseType: !7, size: 32, offset: 5120)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3165, file: !3166, line: 225, baseType: !3460, size: 64, offset: 5184)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3165, file: !3166, line: 226, baseType: !7, size: 32, offset: 5248)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3165, file: !3166, line: 228, baseType: !383, size: 32, offset: 5280)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3165, file: !3166, line: 229, baseType: !3467, size: 128, offset: 5312)
!3467 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3468, line: 22, baseType: !3469)
!3468 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3468, line: 20, size: 128, elements: !3470)
!3470 = !{!3471}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3469, file: !3468, line: 21, baseType: !3472, size: 128)
!3472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !2947)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !3007, file: !3008, line: 128, baseType: !3474, size: 4608, offset: 10176)
!3474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3475, line: 56, size: 4608, elements: !3476)
!3475 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3476 = !{!3477, !3517, !3520, !3521, !3522, !3523, !3526, !3529, !3532, !3533, !3534, !3537, !3538, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3618, !3619, !3620, !3621}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3474, file: !3475, line: 57, baseType: !3478, size: 1600)
!3478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3475, line: 15, size: 1600, elements: !3479)
!3479 = !{!3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3478, file: !3475, line: 17, baseType: !2849, size: 64)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3478, file: !3475, line: 18, baseType: !2849, size: 64, offset: 64)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3478, file: !3475, line: 19, baseType: !2849, size: 64, offset: 128)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3478, file: !3475, line: 20, baseType: !2849, size: 64, offset: 192)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3478, file: !3475, line: 21, baseType: !2849, size: 64, offset: 256)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3478, file: !3475, line: 23, baseType: !32, size: 32, offset: 320)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3478, file: !3475, line: 24, baseType: !32, size: 32, offset: 352)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3478, file: !3475, line: 25, baseType: !32, size: 32, offset: 384)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3478, file: !3475, line: 26, baseType: !32, size: 32, offset: 416)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3478, file: !3475, line: 27, baseType: !32, size: 32, offset: 448)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3478, file: !3475, line: 28, baseType: !32, size: 32, offset: 480)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3478, file: !3475, line: 29, baseType: !32, size: 32, offset: 512)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3478, file: !3475, line: 30, baseType: !32, size: 32, offset: 544)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3478, file: !3475, line: 31, baseType: !32, size: 32, offset: 576)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3478, file: !3475, line: 32, baseType: !32, size: 32, offset: 608)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3478, file: !3475, line: 33, baseType: !32, size: 32, offset: 640)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3478, file: !3475, line: 34, baseType: !32, size: 32, offset: 672)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3478, file: !3475, line: 35, baseType: !32, size: 32, offset: 704)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3478, file: !3475, line: 36, baseType: !32, size: 32, offset: 736)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3478, file: !3475, line: 37, baseType: !32, size: 32, offset: 768)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3478, file: !3475, line: 38, baseType: !32, size: 32, offset: 800)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3478, file: !3475, line: 39, baseType: !3502, size: 256, offset: 832)
!3502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 256, elements: !2272)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3478, file: !3475, line: 40, baseType: !3457, size: 64, offset: 1088)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3478, file: !3475, line: 41, baseType: !32, size: 32, offset: 1152)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3478, file: !3475, line: 42, baseType: !32, size: 32, offset: 1184)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3478, file: !3475, line: 43, baseType: !32, size: 32, offset: 1216)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3478, file: !3475, line: 44, baseType: !32, size: 32, offset: 1248)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3478, file: !3475, line: 45, baseType: !32, size: 32, offset: 1280)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3478, file: !3475, line: 46, baseType: !32, size: 32, offset: 1312)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3478, file: !3475, line: 47, baseType: !32, size: 32, offset: 1344)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3478, file: !3475, line: 48, baseType: !32, size: 32, offset: 1376)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3478, file: !3475, line: 49, baseType: !32, size: 32, offset: 1408)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3478, file: !3475, line: 50, baseType: !32, size: 32, offset: 1440)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3478, file: !3475, line: 51, baseType: !32, size: 32, offset: 1472)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3478, file: !3475, line: 52, baseType: !32, size: 32, offset: 1504)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3478, file: !3475, line: 53, baseType: !771, size: 8, offset: 1536)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3474, file: !3475, line: 58, baseType: !3518, size: 64, offset: 1600)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3475, line: 58, flags: DIFlagFwdDecl)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3474, file: !3475, line: 59, baseType: !3518, size: 64, offset: 1664)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3474, file: !3475, line: 60, baseType: !3189, size: 64, offset: 1728)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3474, file: !3475, line: 61, baseType: !3193, size: 64, offset: 1792)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3474, file: !3475, line: 71, baseType: !3524, size: 64, offset: 1856)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3475, line: 71, flags: DIFlagFwdDecl)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3474, file: !3475, line: 72, baseType: !3527, size: 64, offset: 1920)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3475, line: 72, flags: DIFlagFwdDecl)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3474, file: !3475, line: 73, baseType: !3530, size: 64, offset: 1984)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3475, line: 73, flags: DIFlagFwdDecl)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3474, file: !3475, line: 74, baseType: !3253, size: 320, offset: 2048)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3474, file: !3475, line: 75, baseType: !3039, size: 64, offset: 2368)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3474, file: !3475, line: 76, baseType: !3535, size: 64, offset: 2432)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3475, line: 76, flags: DIFlagFwdDecl)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3474, file: !3475, line: 77, baseType: !284, size: 128, offset: 2496)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3474, file: !3475, line: 78, baseType: !3539, size: 1088, offset: 2624)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !925, line: 15, size: 1088, elements: !3540)
!3540 = !{!3541, !3542, !3543, !3548, !3554, !3560, !3561, !3565, !3569, !3573, !3577, !3578, !3582, !3586, !3590, !3594, !3598, !3599}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3539, file: !925, line: 16, baseType: !476, size: 16)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3539, file: !925, line: 17, baseType: !7, size: 32, offset: 32)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3539, file: !925, line: 19, baseType: !3544, size: 64, offset: 64)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!32, !3547}
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3539, file: !925, line: 20, baseType: !3549, size: 64, offset: 128)
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 64)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!3552, !3552, !493}
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !417, line: 956, flags: DIFlagFwdDecl)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3539, file: !925, line: 21, baseType: !3555, size: 64, offset: 192)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!7, !3558}
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3553)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3539, file: !925, line: 22, baseType: !3555, size: 64, offset: 256)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3539, file: !925, line: 23, baseType: !3562, size: 64, offset: 320)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!2516, !3552, !312}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3539, file: !925, line: 24, baseType: !3566, size: 64, offset: 384)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{null, !3552}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3539, file: !925, line: 25, baseType: !3570, size: 64, offset: 448)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{null, !3552, !290, !32}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3539, file: !925, line: 27, baseType: !3574, size: 64, offset: 512)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!3552, !3552}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3539, file: !925, line: 28, baseType: !468, size: 64, offset: 576)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3539, file: !925, line: 29, baseType: !3579, size: 64, offset: 640)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{null, !3552, !445, !415, !987, !771}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3539, file: !925, line: 32, baseType: !3583, size: 64, offset: 704)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{null, !3552, !445, !415}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3539, file: !925, line: 34, baseType: !3587, size: 64, offset: 768)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{!32, !3006, !445, !415}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3539, file: !925, line: 35, baseType: !3591, size: 64, offset: 832)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = !DISubroutineType(types: !3593)
!3593 = !{!923, !3558, !415, !3276}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3539, file: !925, line: 38, baseType: !3595, size: 64, offset: 896)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{null, !3558, !3276}
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3539, file: !925, line: 41, baseType: !2051, size: 64, offset: 960)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3539, file: !925, line: 43, baseType: !3600, size: 64, offset: 1024)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3601, line: 97, size: 64, elements: !3602)
!3601 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3602 = !{!3603}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3600, file: !3601, line: 98, baseType: !377, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3474, file: !3475, line: 79, baseType: !1912, offset: 3712)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3474, file: !3475, line: 80, baseType: !1670, offset: 3712)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3474, file: !3475, line: 81, baseType: !7, size: 32, offset: 3712)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3474, file: !3475, line: 82, baseType: !312, size: 64, offset: 3776)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3474, file: !3475, line: 94, baseType: !3186, size: 64, offset: 3840)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3474, file: !3475, line: 95, baseType: !445, size: 64, offset: 3904)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3474, file: !3475, line: 96, baseType: !445, size: 64, offset: 3968)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3474, file: !3475, line: 97, baseType: !445, size: 64, offset: 4032)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3474, file: !3475, line: 98, baseType: !445, size: 64, offset: 4096)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3474, file: !3475, line: 107, baseType: !383, size: 32, offset: 4160)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3474, file: !3475, line: 108, baseType: !383, size: 32, offset: 4192)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3474, file: !3475, line: 109, baseType: !3616, size: 64, offset: 4224)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3475, line: 109, flags: DIFlagFwdDecl)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3474, file: !3475, line: 110, baseType: !3460, size: 64, offset: 4288)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3474, file: !3475, line: 111, baseType: !3460, size: 64, offset: 4352)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3474, file: !3475, line: 112, baseType: !7, size: 32, offset: 4416)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3474, file: !3475, line: 117, baseType: !3622, size: 128, offset: 4480)
!3622 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3474, file: !3475, line: 113, size: 128, elements: !3623)
!3623 = !{!3624, !3625, !3626}
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3622, file: !3475, line: 114, baseType: !1581, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3622, file: !3475, line: 115, baseType: !1670, offset: 64)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3622, file: !3475, line: 116, baseType: !987, size: 32, offset: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !3007, file: !3008, line: 162, baseType: !3628, size: 192, offset: 14784)
!3628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !417, line: 291, size: 192, elements: !3629)
!3629 = !{!3630, !3631, !3632, !3633}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3628, file: !417, line: 293, baseType: !415, size: 64)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3628, file: !417, line: 294, baseType: !415, size: 64, offset: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3628, file: !417, line: 296, baseType: !493, size: 32, offset: 128)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3628, file: !417, line: 297, baseType: !1670, offset: 160)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !3007, file: !3008, line: 164, baseType: !3635, size: 64, offset: 14976)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !3008, line: 47, flags: DIFlagFwdDecl)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !3007, file: !3008, line: 167, baseType: !3638, size: 512, offset: 15040)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3639, line: 14, size: 512, elements: !3640)
!3639 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3640 = !{!3641, !3656, !3658}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3638, file: !3639, line: 16, baseType: !3642, size: 128)
!3642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3643, size: 128, elements: !2947)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !65, line: 1037, size: 128, elements: !3645)
!3645 = !{!3646, !3647}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3644, file: !65, line: 1038, baseType: !299, size: 128, align: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3644, file: !65, line: 1039, baseType: !3648, offset: 128)
!3648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3649, elements: !309)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !65, line: 1032, size: 192, elements: !3650)
!3650 = !{!3651, !3652}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3649, file: !65, line: 1033, baseType: !1088, size: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3649, file: !65, line: 1034, baseType: !3653, size: 128, offset: 64)
!3653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3654, size: 128, elements: !2947)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !65, line: 1034, flags: DIFlagFwdDecl)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3638, file: !3639, line: 17, baseType: !3657, size: 128, offset: 128)
!3657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 128, elements: !2947)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3638, file: !3639, line: 18, baseType: !3659, size: 256, offset: 256)
!3659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !2947)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !3007, file: !3008, line: 174, baseType: !373, size: 64, offset: 15552)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !3007, file: !3008, line: 183, baseType: !3662, size: 1216, offset: 15616)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3663, line: 15, size: 1216, elements: !3664)
!3663 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3664 = !{!3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3678, !3679, !3680, !3683, !3686}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3662, file: !3663, line: 17, baseType: !3028, size: 64)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3662, file: !3663, line: 18, baseType: !3028, size: 64, offset: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3662, file: !3663, line: 19, baseType: !3028, size: 64, offset: 128)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3662, file: !3663, line: 20, baseType: !3028, size: 64, offset: 192)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3662, file: !3663, line: 21, baseType: !3028, size: 64, offset: 256)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3662, file: !3663, line: 22, baseType: !3028, size: 64, offset: 320)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3662, file: !3663, line: 23, baseType: !3028, size: 64, offset: 384)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3662, file: !3663, line: 24, baseType: !3028, size: 64, offset: 448)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3662, file: !3663, line: 25, baseType: !3028, size: 64, offset: 512)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3662, file: !3663, line: 26, baseType: !3028, size: 64, offset: 576)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3662, file: !3663, line: 30, baseType: !3676, size: 64, offset: 640)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3663, line: 11, flags: DIFlagFwdDecl)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3662, file: !3663, line: 31, baseType: !1670, offset: 704)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3662, file: !3663, line: 32, baseType: !3253, size: 320, offset: 704)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3662, file: !3663, line: 33, baseType: !3681, size: 64, offset: 1024)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3663, line: 12, flags: DIFlagFwdDecl)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3662, file: !3663, line: 34, baseType: !3684, size: 64, offset: 1088)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3663, line: 13, flags: DIFlagFwdDecl)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3662, file: !3663, line: 37, baseType: !1581, size: 64, offset: 1152)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !3007, file: !3008, line: 191, baseType: !445, size: 64, offset: 16832)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2991, file: !2992, line: 38, baseType: !3689, size: 64, offset: 384)
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3690, size: 64)
!3690 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2992, line: 38, flags: DIFlagFwdDecl)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2991, file: !2992, line: 39, baseType: !3689, size: 64, offset: 448)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2991, file: !2992, line: 40, baseType: !3693, size: 64, offset: 512)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3695, line: 856, size: 448, elements: !3696)
!3695 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3696 = !{!3697, !3698, !3699, !3700, !3701}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3694, file: !3695, line: 857, baseType: !568, size: 32)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3694, file: !3695, line: 858, baseType: !2646, size: 192, offset: 64)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3694, file: !3695, line: 859, baseType: !2612, size: 64, offset: 256)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3694, file: !3695, line: 860, baseType: !2869, size: 64, offset: 320)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3694, file: !3695, line: 861, baseType: !3702, size: 64, offset: 384)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3704, line: 16, flags: DIFlagFwdDecl)
!3704 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2327, file: !2328, line: 969, baseType: !3706, size: 64, offset: 9216)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3708, line: 82, size: 7296, elements: !3709)
!3708 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3709 = !{!3710, !3711, !3712, !3713, !3714, !3715, !3716, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3745, !3754, !3755, !3757, !3758, !3759, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5139, !5140, !5147, !5148, !5149, !5150, !5151, !5152}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3707, file: !3708, line: 83, baseType: !568, size: 32)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3707, file: !3708, line: 84, baseType: !383, size: 32, offset: 32)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3707, file: !3708, line: 85, baseType: !32, size: 32, offset: 64)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3707, file: !3708, line: 86, baseType: !284, size: 128, offset: 128)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3707, file: !3708, line: 88, baseType: !1889, size: 128, offset: 256)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3707, file: !3708, line: 91, baseType: !2326, size: 64, offset: 384)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3707, file: !3708, line: 94, baseType: !3717, size: 192, offset: 448)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3718, line: 30, size: 192, elements: !3719)
!3718 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3719 = !{!3720, !3721}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3717, file: !3718, line: 31, baseType: !284, size: 128)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3717, file: !3718, line: 32, baseType: !3722, size: 64, offset: 128)
!3722 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3723, line: 25, baseType: !3724)
!3723 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3723, line: 23, size: 64, elements: !3725)
!3725 = !{!3726}
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3724, file: !3723, line: 24, baseType: !2471, size: 64)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3707, file: !3708, line: 97, baseType: !1581, size: 64, offset: 640)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3707, file: !3708, line: 100, baseType: !32, size: 32, offset: 704)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3707, file: !3708, line: 106, baseType: !32, size: 32, offset: 736)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3707, file: !3708, line: 107, baseType: !2326, size: 64, offset: 768)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3707, file: !3708, line: 110, baseType: !32, size: 32, offset: 832)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3707, file: !3708, line: 111, baseType: !7, size: 32, offset: 864)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3707, file: !3708, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3707, file: !3708, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3707, file: !3708, line: 128, baseType: !32, size: 32, offset: 928)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3707, file: !3708, line: 129, baseType: !284, size: 128, offset: 960)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3707, file: !3708, line: 132, baseType: !2397, size: 512, offset: 1088)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3707, file: !3708, line: 133, baseType: !453, size: 64, offset: 1600)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3707, file: !3708, line: 140, baseType: !3740, size: 256, offset: 1664)
!3740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3741, size: 256, elements: !2947)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3708, line: 38, size: 128, elements: !3742)
!3742 = !{!3743, !3744}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3741, file: !3708, line: 39, baseType: !331, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3741, file: !3708, line: 40, baseType: !331, size: 64, offset: 64)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3707, file: !3708, line: 146, baseType: !3746, size: 192, offset: 1920)
!3746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3708, line: 66, size: 192, elements: !3747)
!3747 = !{!3748}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3746, file: !3708, line: 67, baseType: !3749, size: 192)
!3749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3708, line: 47, size: 192, elements: !3750)
!3750 = !{!3751, !3752, !3753}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3749, file: !3708, line: 48, baseType: !373, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3749, file: !3708, line: 49, baseType: !373, size: 64, offset: 64)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3749, file: !3708, line: 50, baseType: !373, size: 64, offset: 128)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3707, file: !3708, line: 150, baseType: !2908, size: 640, offset: 2112)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3707, file: !3708, line: 153, baseType: !3756, size: 256, offset: 2752)
!3756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2571, size: 256, elements: !2272)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3707, file: !3708, line: 159, baseType: !2571, size: 64, offset: 3008)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3707, file: !3708, line: 162, baseType: !32, size: 32, offset: 3072)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3707, file: !3708, line: 164, baseType: !3760, size: 64, offset: 3136)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3762, line: 285, size: 5056, elements: !3763)
!3762 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!3763 = !{!3764, !3765, !3766, !4512, !5013, !5014, !5015, !5024, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3761, file: !3762, line: 286, baseType: !32, size: 32)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3761, file: !3762, line: 287, baseType: !2594, size: 32, offset: 32)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3761, file: !3762, line: 288, baseType: !3767, size: 64, offset: 64)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !3769, line: 461, size: 5568, elements: !3770)
!3769 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!3770 = !{!3771, !4052, !4053, !4056, !4057, !4109, !4205, !4206, !4207, !4208, !4209, !4224, !4331, !4344, !4347, !4348, !4352, !4354, !4355, !4356, !4360, !4366, !4367, !4370, !4374, !4464, !4465, !4466, !4467, !4468, !4500, !4501, !4502, !4505, !4508, !4509, !4510, !4511}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3768, file: !3769, line: 462, baseType: !3772, size: 512)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3773, line: 64, size: 512, elements: !3774)
!3773 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3774 = !{!3775, !3776, !3777, !3779, !3821, !3922, !4046, !4047, !4048, !4049, !4050, !4051}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3772, file: !3773, line: 65, baseType: !292, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3772, file: !3773, line: 66, baseType: !284, size: 128, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3772, file: !3773, line: 67, baseType: !3778, size: 64, offset: 192)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3772, file: !3773, line: 68, baseType: !3780, size: 64, offset: 256)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3773, line: 192, size: 704, elements: !3782)
!3782 = !{!3783, !3784, !3785, !3786}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3781, file: !3773, line: 193, baseType: !284, size: 128)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3781, file: !3773, line: 194, baseType: !1670, offset: 128)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3781, file: !3773, line: 195, baseType: !3772, size: 512, offset: 128)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3781, file: !3773, line: 196, baseType: !3787, size: 64, offset: 640)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3789)
!3789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3773, line: 156, size: 192, elements: !3790)
!3790 = !{!3791, !3796, !3801}
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3789, file: !3773, line: 157, baseType: !3792, size: 64)
!3792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3793)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!32, !3780, !3778}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3789, file: !3773, line: 158, baseType: !3797, size: 64, offset: 64)
!3797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3798)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{!292, !3780, !3778}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3789, file: !3773, line: 159, baseType: !3802, size: 64, offset: 128)
!3802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3803)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DISubroutineType(types: !3805)
!3805 = !{!32, !3780, !3778, !3806}
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3773, line: 148, size: 20736, elements: !3808)
!3808 = !{!3809, !3811, !3815, !3816, !3820}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3807, file: !3773, line: 149, baseType: !3810, size: 192)
!3810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 192, elements: !1592)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3807, file: !3773, line: 150, baseType: !3812, size: 4096, offset: 192)
!3812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 4096, elements: !3813)
!3813 = !{!3814}
!3814 = !DISubrange(count: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3807, file: !3773, line: 151, baseType: !32, size: 32, offset: 4288)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3807, file: !3773, line: 152, baseType: !3817, size: 16384, offset: 4320)
!3817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 16384, elements: !3818)
!3818 = !{!3819}
!3819 = !DISubrange(count: 2048)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3807, file: !3773, line: 153, baseType: !32, size: 32, offset: 20704)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3772, file: !3773, line: 69, baseType: !3822, size: 64, offset: 320)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3773, line: 138, size: 448, elements: !3824)
!3824 = !{!3825, !3829, !3848, !3850, !3883, !3914, !3918}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3823, file: !3773, line: 139, baseType: !3826, size: 64)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{null, !3778}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3823, file: !3773, line: 140, baseType: !3830, size: 64, offset: 64)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3832)
!3832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3833, line: 230, size: 128, elements: !3834)
!3833 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3834 = !{!3835, !3844}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3832, file: !3833, line: 231, baseType: !3836, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!1521, !3778, !3839, !1038}
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3833, line: 30, size: 128, elements: !3841)
!3841 = !{!3842, !3843}
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3840, file: !3833, line: 31, baseType: !292, size: 64)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3840, file: !3833, line: 32, baseType: !1379, size: 16, offset: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3832, file: !3833, line: 232, baseType: !3845, size: 64, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!1521, !3778, !3839, !292, !1039}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3823, file: !3773, line: 141, baseType: !3849, size: 64, offset: 128)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3823, file: !3773, line: 142, baseType: !3851, size: 64, offset: 192)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3854)
!3854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3833, line: 84, size: 320, elements: !3855)
!3855 = !{!3856, !3857, !3861, !3880, !3881}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3854, file: !3833, line: 85, baseType: !292, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3854, file: !3833, line: 86, baseType: !3858, size: 64, offset: 64)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!1379, !3778, !3839, !32}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3854, file: !3833, line: 88, baseType: !3862, size: 64, offset: 128)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!1379, !3778, !3865, !32}
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3833, line: 168, size: 448, elements: !3867)
!3867 = !{!3868, !3869, !3870, !3871, !3875, !3876}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3866, file: !3833, line: 169, baseType: !3840, size: 128)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3866, file: !3833, line: 170, baseType: !1039, size: 64, offset: 128)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3866, file: !3833, line: 171, baseType: !591, size: 64, offset: 192)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3866, file: !3833, line: 172, baseType: !3872, size: 64, offset: 256)
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{!1521, !1315, !3778, !3865, !1038, !1476, !1039}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3866, file: !3833, line: 174, baseType: !3872, size: 64, offset: 320)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3866, file: !3833, line: 176, baseType: !3877, size: 64, offset: 384)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{!32, !1315, !3778, !3865, !2098}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3854, file: !3833, line: 90, baseType: !3849, size: 64, offset: 192)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3854, file: !3833, line: 91, baseType: !3882, size: 64, offset: 256)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3823, file: !3773, line: 143, baseType: !3884, size: 64, offset: 256)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{!3887, !3778}
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3889)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !447, line: 39, size: 384, elements: !3890)
!3890 = !{!3891, !3897, !3901, !3905, !3909, !3913}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3889, file: !447, line: 40, baseType: !3892, size: 32)
!3892 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !447, line: 26, baseType: !7, size: 32, elements: !3893)
!3893 = !{!3894, !3895, !3896}
!3894 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!3895 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!3896 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3889, file: !447, line: 41, baseType: !3898, size: 64, offset: 64)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!771}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3889, file: !447, line: 42, baseType: !3902, size: 64, offset: 128)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{!591}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3889, file: !447, line: 43, baseType: !3906, size: 64, offset: 192)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{!3276, !445}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3889, file: !447, line: 44, baseType: !3910, size: 64, offset: 256)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!3276}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3889, file: !447, line: 45, baseType: !1415, size: 64, offset: 320)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3823, file: !3773, line: 144, baseType: !3915, size: 64, offset: 320)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!3276, !3778}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3823, file: !3773, line: 145, baseType: !3919, size: 64, offset: 384)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{null, !3778, !2850, !2851}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3772, file: !3773, line: 70, baseType: !3923, size: 64, offset: 384)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1565, line: 123, size: 1024, elements: !3925)
!3925 = !{!3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !4039, !4040, !4041, !4042, !4043}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3924, file: !1565, line: 124, baseType: !383, size: 32)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3924, file: !1565, line: 125, baseType: !383, size: 32, offset: 32)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3924, file: !1565, line: 135, baseType: !3923, size: 64, offset: 64)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3924, file: !1565, line: 136, baseType: !292, size: 64, offset: 128)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3924, file: !1565, line: 138, baseType: !433, size: 192, align: 64, offset: 192)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3924, file: !1565, line: 140, baseType: !3276, size: 64, offset: 384)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3924, file: !1565, line: 141, baseType: !7, size: 32, offset: 448)
!3933 = !DIDerivedType(tag: DW_TAG_member, scope: !3924, file: !1565, line: 142, baseType: !3934, size: 256, offset: 512)
!3934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3924, file: !1565, line: 142, size: 256, elements: !3935)
!3935 = !{!3936, !3976, !3980}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3934, file: !1565, line: 143, baseType: !3937, size: 192)
!3937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1565, line: 91, size: 192, elements: !3938)
!3938 = !{!3939, !3940, !3941}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3937, file: !1565, line: 92, baseType: !312, size: 64)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3937, file: !1565, line: 94, baseType: !1750, size: 64, offset: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3937, file: !1565, line: 100, baseType: !3942, size: 64, offset: 128)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1565, line: 180, size: 704, elements: !3944)
!3944 = !{!3945, !3946, !3947, !3948, !3949, !3950, !3974, !3975}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3943, file: !1565, line: 182, baseType: !3923, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3943, file: !1565, line: 183, baseType: !7, size: 32, offset: 64)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3943, file: !1565, line: 186, baseType: !2599, size: 192, offset: 128)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3943, file: !1565, line: 187, baseType: !987, size: 32, offset: 320)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3943, file: !1565, line: 188, baseType: !987, size: 32, offset: 352)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3943, file: !1565, line: 189, baseType: !3951, size: 64, offset: 384)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1565, line: 168, size: 320, elements: !3953)
!3953 = !{!3954, !3958, !3962, !3966, !3970}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3952, file: !1565, line: 169, baseType: !3955, size: 64)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!32, !1653, !3942}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3952, file: !1565, line: 171, baseType: !3959, size: 64, offset: 64)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!32, !3923, !292, !1379}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3952, file: !1565, line: 173, baseType: !3963, size: 64, offset: 128)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 64)
!3964 = !DISubroutineType(types: !3965)
!3965 = !{!32, !3923}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3952, file: !1565, line: 174, baseType: !3967, size: 64, offset: 192)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!32, !3923, !3923, !292}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3952, file: !1565, line: 176, baseType: !3971, size: 64, offset: 256)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{!32, !1653, !3923, !3942}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3943, file: !1565, line: 192, baseType: !284, size: 128, offset: 448)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3943, file: !1565, line: 194, baseType: !1889, size: 128, offset: 576)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3934, file: !1565, line: 144, baseType: !3977, size: 64)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1565, line: 103, size: 64, elements: !3978)
!3978 = !{!3979}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3977, file: !1565, line: 104, baseType: !3923, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3934, file: !1565, line: 145, baseType: !3981, size: 256)
!3981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1565, line: 107, size: 256, elements: !3982)
!3982 = !{!3983, !4034, !4037, !4038}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3981, file: !1565, line: 108, baseType: !3984, size: 64)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3986)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1565, line: 217, size: 768, elements: !3987)
!3987 = !{!3988, !4008, !4012, !4013, !4014, !4015, !4016, !4020, !4021, !4022, !4023, !4030}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3986, file: !1565, line: 222, baseType: !3989, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!32, !3992}
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1565, line: 197, size: 1088, elements: !3994)
!3994 = !{!3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3993, file: !1565, line: 199, baseType: !3923, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3993, file: !1565, line: 200, baseType: !1315, size: 64, offset: 64)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3993, file: !1565, line: 201, baseType: !1653, size: 64, offset: 128)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3993, file: !1565, line: 202, baseType: !591, size: 64, offset: 192)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3993, file: !1565, line: 205, baseType: !1665, size: 192, offset: 256)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3993, file: !1565, line: 206, baseType: !1665, size: 192, offset: 448)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3993, file: !1565, line: 207, baseType: !32, size: 32, offset: 640)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3993, file: !1565, line: 208, baseType: !284, size: 128, offset: 704)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3993, file: !1565, line: 209, baseType: !1038, size: 64, offset: 832)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3993, file: !1565, line: 211, baseType: !1039, size: 64, offset: 896)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3993, file: !1565, line: 212, baseType: !771, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3993, file: !1565, line: 213, baseType: !771, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3993, file: !1565, line: 214, baseType: !2126, size: 64, offset: 1024)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3986, file: !1565, line: 223, baseType: !4009, size: 64, offset: 64)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{null, !3992}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3986, file: !1565, line: 236, baseType: !1704, size: 64, offset: 128)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3986, file: !1565, line: 238, baseType: !1691, size: 64, offset: 192)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3986, file: !1565, line: 239, baseType: !1700, size: 64, offset: 256)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3986, file: !1565, line: 240, baseType: !1696, size: 64, offset: 320)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3986, file: !1565, line: 242, baseType: !4017, size: 64, offset: 384)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!1521, !3992, !1038, !1039, !1476}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3986, file: !1565, line: 252, baseType: !1039, size: 64, offset: 448)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3986, file: !1565, line: 259, baseType: !771, size: 8, offset: 512)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3986, file: !1565, line: 260, baseType: !4017, size: 64, offset: 576)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3986, file: !1565, line: 263, baseType: !4024, size: 64, offset: 640)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!4027, !3992, !4028}
!4027 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !525, line: 52, baseType: !7)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1565, line: 27, flags: DIFlagFwdDecl)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3986, file: !1565, line: 266, baseType: !4031, size: 64, offset: 704)
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4032, size: 64)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{!32, !3992, !2098}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3981, file: !1565, line: 109, baseType: !4035, size: 64, offset: 64)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1565, line: 31, flags: DIFlagFwdDecl)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3981, file: !1565, line: 110, baseType: !1476, size: 64, offset: 128)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3981, file: !1565, line: 111, baseType: !3923, size: 64, offset: 192)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3924, file: !1565, line: 148, baseType: !591, size: 64, offset: 768)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3924, file: !1565, line: 154, baseType: !331, size: 64, offset: 832)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3924, file: !1565, line: 156, baseType: !476, size: 16, offset: 896)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3924, file: !1565, line: 157, baseType: !1379, size: 16, offset: 912)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3924, file: !1565, line: 158, baseType: !4044, size: 64, offset: 960)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1565, line: 32, flags: DIFlagFwdDecl)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3772, file: !3773, line: 71, baseType: !2594, size: 32, offset: 448)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3772, file: !3773, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3772, file: !3773, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3772, file: !3773, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3772, file: !3773, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3772, file: !3773, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3768, file: !3769, line: 463, baseType: !3767, size: 64, offset: 512)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3768, file: !3769, line: 465, baseType: !4054, size: 64, offset: 576)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !3769, line: 36, flags: DIFlagFwdDecl)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3768, file: !3769, line: 467, baseType: !292, size: 64, offset: 640)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3768, file: !3769, line: 468, baseType: !4058, size: 64, offset: 704)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4060)
!4060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !3769, line: 87, size: 384, elements: !4061)
!4061 = !{!4062, !4063, !4064, !4068, !4073, !4077}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4060, file: !3769, line: 88, baseType: !292, size: 64)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4060, file: !3769, line: 89, baseType: !3851, size: 64, offset: 64)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4060, file: !3769, line: 90, baseType: !4065, size: 64, offset: 128)
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{!32, !3767, !3806}
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4060, file: !3769, line: 91, baseType: !4069, size: 64, offset: 192)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!1038, !3767, !4072, !2850, !2851}
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4060, file: !3769, line: 93, baseType: !4074, size: 64, offset: 256)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{null, !3767}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4060, file: !3769, line: 95, baseType: !4078, size: 64, offset: 320)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4080)
!4080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !4081, line: 278, size: 1472, elements: !4082)
!4081 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!4082 = !{!4083, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4080, file: !4081, line: 279, baseType: !4084, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{!32, !3767}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4080, file: !4081, line: 280, baseType: !4074, size: 64, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4080, file: !4081, line: 281, baseType: !4084, size: 64, offset: 128)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4080, file: !4081, line: 282, baseType: !4084, size: 64, offset: 192)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4080, file: !4081, line: 283, baseType: !4084, size: 64, offset: 256)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4080, file: !4081, line: 284, baseType: !4084, size: 64, offset: 320)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4080, file: !4081, line: 285, baseType: !4084, size: 64, offset: 384)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4080, file: !4081, line: 286, baseType: !4084, size: 64, offset: 448)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4080, file: !4081, line: 287, baseType: !4084, size: 64, offset: 512)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4080, file: !4081, line: 288, baseType: !4084, size: 64, offset: 576)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4080, file: !4081, line: 289, baseType: !4084, size: 64, offset: 640)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4080, file: !4081, line: 290, baseType: !4084, size: 64, offset: 704)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4080, file: !4081, line: 291, baseType: !4084, size: 64, offset: 768)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4080, file: !4081, line: 292, baseType: !4084, size: 64, offset: 832)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4080, file: !4081, line: 293, baseType: !4084, size: 64, offset: 896)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4080, file: !4081, line: 294, baseType: !4084, size: 64, offset: 960)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4080, file: !4081, line: 295, baseType: !4084, size: 64, offset: 1024)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4080, file: !4081, line: 296, baseType: !4084, size: 64, offset: 1088)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4080, file: !4081, line: 297, baseType: !4084, size: 64, offset: 1152)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4080, file: !4081, line: 298, baseType: !4084, size: 64, offset: 1216)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4080, file: !4081, line: 299, baseType: !4084, size: 64, offset: 1280)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4080, file: !4081, line: 300, baseType: !4084, size: 64, offset: 1344)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4080, file: !4081, line: 301, baseType: !4084, size: 64, offset: 1408)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3768, file: !3769, line: 470, baseType: !4110, size: 64, offset: 768)
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4112, line: 82, size: 1408, elements: !4113)
!4112 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4113 = !{!4114, !4115, !4116, !4117, !4118, !4119, !4120, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4200, !4203, !4204}
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4111, file: !4112, line: 83, baseType: !292, size: 64)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4111, file: !4112, line: 84, baseType: !292, size: 64, offset: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4111, file: !4112, line: 85, baseType: !3767, size: 64, offset: 128)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4111, file: !4112, line: 86, baseType: !3851, size: 64, offset: 192)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4111, file: !4112, line: 87, baseType: !3851, size: 64, offset: 256)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4111, file: !4112, line: 88, baseType: !3851, size: 64, offset: 320)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4111, file: !4112, line: 90, baseType: !4121, size: 64, offset: 384)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!32, !3767, !4124}
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !4126, line: 95, size: 1152, elements: !4127)
!4126 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!4127 = !{!4128, !4129, !4130, !4131, !4132, !4133, !4139, !4153, !4164, !4165, !4166, !4167, !4168, !4176, !4177, !4178, !4179, !4180, !4181}
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4125, file: !4126, line: 96, baseType: !292, size: 64)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4125, file: !4126, line: 97, baseType: !4110, size: 64, offset: 64)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4125, file: !4126, line: 99, baseType: !980, size: 64, offset: 128)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4125, file: !4126, line: 100, baseType: !292, size: 64, offset: 192)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4125, file: !4126, line: 102, baseType: !771, size: 8, offset: 256)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4125, file: !4126, line: 103, baseType: !4134, size: 32, offset: 288)
!4134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !4126, line: 44, baseType: !7, size: 32, elements: !4135)
!4135 = !{!4136, !4137, !4138}
!4136 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!4137 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!4138 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4125, file: !4126, line: 105, baseType: !4140, size: 64, offset: 320)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4142)
!4142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4143, line: 262, size: 1600, elements: !4144)
!4143 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4144 = !{!4145, !4147, !4148, !4152}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4142, file: !4143, line: 263, baseType: !4146, size: 256)
!4146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !819)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4142, file: !4143, line: 264, baseType: !4146, size: 256, offset: 256)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4142, file: !4143, line: 265, baseType: !4149, size: 1024, offset: 512)
!4149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 1024, elements: !4150)
!4150 = !{!4151}
!4151 = !DISubrange(count: 128)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4142, file: !4143, line: 266, baseType: !3276, size: 64, offset: 1536)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4125, file: !4126, line: 106, baseType: !4154, size: 64, offset: 384)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 64)
!4155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4156)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4143, line: 210, size: 256, elements: !4157)
!4157 = !{!4158, !4160, !4162, !4163}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4156, file: !4143, line: 211, baseType: !4159, size: 72)
!4159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 72, elements: !3105)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4156, file: !4143, line: 212, baseType: !4161, size: 64, offset: 128)
!4161 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4143, line: 14, baseType: !312)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4156, file: !4143, line: 213, baseType: !493, size: 32, offset: 192)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4156, file: !4143, line: 214, baseType: !493, size: 32, offset: 224)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4125, file: !4126, line: 108, baseType: !4084, size: 64, offset: 448)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4125, file: !4126, line: 109, baseType: !4074, size: 64, offset: 512)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4125, file: !4126, line: 110, baseType: !4084, size: 64, offset: 576)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4125, file: !4126, line: 111, baseType: !4074, size: 64, offset: 640)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4125, file: !4126, line: 112, baseType: !4169, size: 64, offset: 704)
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4170, size: 64)
!4170 = !DISubroutineType(types: !4171)
!4171 = !{!32, !3767, !4172}
!4172 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !4081, line: 52, baseType: !4173)
!4173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !4081, line: 50, size: 32, elements: !4174)
!4174 = !{!4175}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4173, file: !4081, line: 51, baseType: !32, size: 32)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4125, file: !4126, line: 113, baseType: !4084, size: 64, offset: 768)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4125, file: !4126, line: 114, baseType: !3851, size: 64, offset: 832)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4125, file: !4126, line: 115, baseType: !3851, size: 64, offset: 896)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4125, file: !4126, line: 117, baseType: !4078, size: 64, offset: 960)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4125, file: !4126, line: 118, baseType: !4074, size: 64, offset: 1024)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4125, file: !4126, line: 120, baseType: !4182, size: 64, offset: 1088)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !4126, line: 120, flags: DIFlagFwdDecl)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4111, file: !4112, line: 91, baseType: !4065, size: 64, offset: 448)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4111, file: !4112, line: 92, baseType: !4084, size: 64, offset: 512)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4111, file: !4112, line: 93, baseType: !4074, size: 64, offset: 576)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4111, file: !4112, line: 94, baseType: !4084, size: 64, offset: 640)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4111, file: !4112, line: 95, baseType: !4074, size: 64, offset: 704)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4111, file: !4112, line: 97, baseType: !4084, size: 64, offset: 768)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4111, file: !4112, line: 98, baseType: !4084, size: 64, offset: 832)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4111, file: !4112, line: 100, baseType: !4169, size: 64, offset: 896)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4111, file: !4112, line: 101, baseType: !4084, size: 64, offset: 960)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4111, file: !4112, line: 103, baseType: !4084, size: 64, offset: 1024)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4111, file: !4112, line: 105, baseType: !4084, size: 64, offset: 1088)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4111, file: !4112, line: 107, baseType: !4078, size: 64, offset: 1152)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4111, file: !4112, line: 109, baseType: !4197, size: 64, offset: 1216)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4199)
!4199 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4112, line: 109, flags: DIFlagFwdDecl)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4111, file: !4112, line: 111, baseType: !4201, size: 64, offset: 1280)
!4201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4202, size: 64)
!4202 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4112, line: 111, flags: DIFlagFwdDecl)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4111, file: !4112, line: 112, baseType: !1585, offset: 1344)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4111, file: !4112, line: 114, baseType: !771, size: 8, offset: 1344)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3768, file: !3769, line: 471, baseType: !4124, size: 64, offset: 832)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3768, file: !3769, line: 473, baseType: !591, size: 64, offset: 896)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3768, file: !3769, line: 475, baseType: !591, size: 64, offset: 960)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3768, file: !3769, line: 480, baseType: !1665, size: 192, offset: 1024)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3768, file: !3769, line: 484, baseType: !4210, size: 576, offset: 1216)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !3769, line: 361, size: 576, elements: !4211)
!4211 = !{!4212, !4213, !4214, !4215, !4216, !4217}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4210, file: !3769, line: 362, baseType: !284, size: 128)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4210, file: !3769, line: 363, baseType: !284, size: 128, offset: 128)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4210, file: !3769, line: 364, baseType: !284, size: 128, offset: 256)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4210, file: !3769, line: 365, baseType: !284, size: 128, offset: 384)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4210, file: !3769, line: 366, baseType: !771, size: 8, offset: 512)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4210, file: !3769, line: 367, baseType: !4218, size: 32, offset: 544)
!4218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !3769, line: 343, baseType: !7, size: 32, elements: !4219)
!4219 = !{!4220, !4221, !4222, !4223}
!4220 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!4221 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!4222 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!4223 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3768, file: !3769, line: 485, baseType: !4225, size: 2304, offset: 1792)
!4225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !4081, line: 565, size: 2304, elements: !4226)
!4226 = !{!4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4301, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4324, !4328}
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4225, file: !4081, line: 566, baseType: !4172, size: 32)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4225, file: !4081, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4225, file: !4081, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4225, file: !4081, line: 569, baseType: !771, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4225, file: !4081, line: 570, baseType: !771, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4225, file: !4081, line: 571, baseType: !771, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4225, file: !4081, line: 572, baseType: !771, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4225, file: !4081, line: 573, baseType: !771, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4225, file: !4081, line: 574, baseType: !771, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4225, file: !4081, line: 575, baseType: !771, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4225, file: !4081, line: 576, baseType: !771, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4225, file: !4081, line: 577, baseType: !987, size: 32, offset: 64)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4225, file: !4081, line: 578, baseType: !1670, offset: 96)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4225, file: !4081, line: 580, baseType: !284, size: 128, offset: 128)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4225, file: !4081, line: 581, baseType: !2825, size: 192, offset: 256)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4225, file: !4081, line: 582, baseType: !4243, size: 64, offset: 448)
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 64)
!4244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4245, line: 43, size: 1472, elements: !4246)
!4245 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4246 = !{!4247, !4248, !4249, !4250, !4251, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4244, file: !4245, line: 44, baseType: !292, size: 64)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4244, file: !4245, line: 45, baseType: !32, size: 32, offset: 64)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4244, file: !4245, line: 46, baseType: !284, size: 128, offset: 128)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4244, file: !4245, line: 47, baseType: !1670, offset: 256)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4244, file: !4245, line: 48, baseType: !4252, size: 64, offset: 256)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !4081, line: 533, flags: DIFlagFwdDecl)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4244, file: !4245, line: 49, baseType: !3253, size: 320, offset: 320)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4244, file: !4245, line: 50, baseType: !312, size: 64, offset: 640)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4244, file: !4245, line: 51, baseType: !453, size: 64, offset: 704)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4244, file: !4245, line: 52, baseType: !453, size: 64, offset: 768)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4244, file: !4245, line: 53, baseType: !453, size: 64, offset: 832)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4244, file: !4245, line: 54, baseType: !453, size: 64, offset: 896)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4244, file: !4245, line: 55, baseType: !453, size: 64, offset: 960)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4244, file: !4245, line: 56, baseType: !312, size: 64, offset: 1024)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4244, file: !4245, line: 57, baseType: !312, size: 64, offset: 1088)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4244, file: !4245, line: 58, baseType: !312, size: 64, offset: 1152)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4244, file: !4245, line: 59, baseType: !312, size: 64, offset: 1216)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4244, file: !4245, line: 60, baseType: !312, size: 64, offset: 1280)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4244, file: !4245, line: 61, baseType: !3767, size: 64, offset: 1344)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4244, file: !4245, line: 62, baseType: !771, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4244, file: !4245, line: 63, baseType: !771, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4225, file: !4081, line: 583, baseType: !771, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4225, file: !4081, line: 584, baseType: !771, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4225, file: !4081, line: 585, baseType: !771, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4225, file: !4081, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4225, file: !4081, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4225, file: !4081, line: 592, baseType: !2397, size: 512, offset: 576)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4225, file: !4081, line: 593, baseType: !331, size: 64, offset: 1088)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4225, file: !4081, line: 594, baseType: !2764, size: 256, offset: 1152)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4225, file: !4081, line: 595, baseType: !1889, size: 128, offset: 1408)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4225, file: !4081, line: 596, baseType: !4252, size: 64, offset: 1536)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4225, file: !4081, line: 597, baseType: !383, size: 32, offset: 1600)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4225, file: !4081, line: 598, baseType: !383, size: 32, offset: 1632)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4225, file: !4081, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4225, file: !4081, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4225, file: !4081, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4225, file: !4081, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4225, file: !4081, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4225, file: !4081, line: 604, baseType: !771, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4225, file: !4081, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4225, file: !4081, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4225, file: !4081, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4225, file: !4081, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4225, file: !4081, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4225, file: !4081, line: 610, baseType: !7, size: 32, offset: 1696)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4225, file: !4081, line: 611, baseType: !4294, size: 32, offset: 1728)
!4294 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !4081, line: 524, baseType: !7, size: 32, elements: !4295)
!4295 = !{!4296, !4297, !4298, !4299, !4300}
!4296 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!4297 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!4298 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!4299 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!4300 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4225, file: !4081, line: 612, baseType: !4302, size: 32, offset: 1760)
!4302 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !4081, line: 502, baseType: !7, size: 32, elements: !4303)
!4303 = !{!4304, !4305, !4306, !4307}
!4304 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!4305 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!4306 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!4307 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4225, file: !4081, line: 613, baseType: !32, size: 32, offset: 1792)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4225, file: !4081, line: 614, baseType: !32, size: 32, offset: 1824)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4225, file: !4081, line: 615, baseType: !331, size: 64, offset: 1856)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4225, file: !4081, line: 616, baseType: !331, size: 64, offset: 1920)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4225, file: !4081, line: 617, baseType: !331, size: 64, offset: 1984)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4225, file: !4081, line: 618, baseType: !331, size: 64, offset: 2048)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4225, file: !4081, line: 620, baseType: !4315, size: 64, offset: 2112)
!4315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4316, size: 64)
!4316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !4081, line: 536, size: 256, elements: !4317)
!4317 = !{!4318, !4319, !4320, !4321}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4316, file: !4081, line: 537, baseType: !1670)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4316, file: !4081, line: 538, baseType: !7, size: 32)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4316, file: !4081, line: 540, baseType: !284, size: 128, offset: 64)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4316, file: !4081, line: 543, baseType: !4322, size: 64, offset: 192)
!4322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4323, size: 64)
!4323 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !4081, line: 534, flags: DIFlagFwdDecl)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4225, file: !4081, line: 621, baseType: !4325, size: 64, offset: 2176)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{null, !3767, !2545}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4225, file: !4081, line: 622, baseType: !4329, size: 64, offset: 2240)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !4081, line: 622, flags: DIFlagFwdDecl)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3768, file: !3769, line: 486, baseType: !4332, size: 64, offset: 4096)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !4081, line: 642, size: 1792, elements: !4334)
!4334 = !{!4335, !4336, !4337, !4341, !4342, !4343}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4333, file: !4081, line: 643, baseType: !4080, size: 1472)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4333, file: !4081, line: 644, baseType: !4084, size: 64, offset: 1472)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4333, file: !4081, line: 645, baseType: !4338, size: 64, offset: 1536)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 64)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{null, !3767, !771}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4333, file: !4081, line: 646, baseType: !4084, size: 64, offset: 1600)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4333, file: !4081, line: 647, baseType: !4074, size: 64, offset: 1664)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4333, file: !4081, line: 648, baseType: !4074, size: 64, offset: 1728)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3768, file: !3769, line: 493, baseType: !4345, size: 64, offset: 4160)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4346 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !3769, line: 493, flags: DIFlagFwdDecl)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3768, file: !3769, line: 499, baseType: !284, size: 128, offset: 4224)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3768, file: !3769, line: 502, baseType: !4349, size: 64, offset: 4352)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4351)
!4351 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !3769, line: 502, flags: DIFlagFwdDecl)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3768, file: !3769, line: 504, baseType: !4353, size: 64, offset: 4416)
!4353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3768, file: !3769, line: 505, baseType: !331, size: 64, offset: 4480)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3768, file: !3769, line: 510, baseType: !331, size: 64, offset: 4544)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3768, file: !3769, line: 511, baseType: !4357, size: 64, offset: 4608)
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4359)
!4359 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !3769, line: 511, flags: DIFlagFwdDecl)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3768, file: !3769, line: 513, baseType: !4361, size: 64, offset: 4672)
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !3769, line: 288, size: 128, elements: !4363)
!4363 = !{!4364, !4365}
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4362, file: !3769, line: 293, baseType: !7, size: 32)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4362, file: !3769, line: 294, baseType: !312, size: 64, offset: 64)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3768, file: !3769, line: 515, baseType: !284, size: 128, offset: 4736)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3768, file: !3769, line: 526, baseType: !4368, offset: 4864)
!4368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4369, line: 5, elements: !1587)
!4369 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3768, file: !3769, line: 528, baseType: !4371, size: 64, offset: 4864)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4373, line: 14, flags: DIFlagFwdDecl)
!4373 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3768, file: !3769, line: 529, baseType: !4375, size: 64, offset: 4928)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4377, line: 17, size: 192, elements: !4378)
!4377 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4378 = !{!4379, !4380, !4463}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4376, file: !4377, line: 18, baseType: !4375, size: 64)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4376, file: !4377, line: 19, baseType: !4381, size: 64, offset: 64)
!4381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4382, size: 64)
!4382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4383)
!4383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4377, line: 110, size: 1152, elements: !4384)
!4384 = !{!4385, !4389, !4393, !4399, !4405, !4409, !4413, !4418, !4422, !4423, !4427, !4431, !4435, !4446, !4447, !4448, !4449, !4459}
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4383, file: !4377, line: 111, baseType: !4386, size: 64)
!4386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4387, size: 64)
!4387 = !DISubroutineType(types: !4388)
!4388 = !{!4375, !4375}
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4383, file: !4377, line: 112, baseType: !4390, size: 64, offset: 64)
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4391, size: 64)
!4391 = !DISubroutineType(types: !4392)
!4392 = !{null, !4375}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4383, file: !4377, line: 113, baseType: !4394, size: 64, offset: 128)
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!771, !4397}
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4376)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4383, file: !4377, line: 114, baseType: !4400, size: 64, offset: 192)
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4401, size: 64)
!4401 = !DISubroutineType(types: !4402)
!4402 = !{!3276, !4397, !4403}
!4403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 64)
!4404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3768)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4383, file: !4377, line: 116, baseType: !4406, size: 64, offset: 256)
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4407, size: 64)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{!771, !4397, !292}
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4383, file: !4377, line: 118, baseType: !4410, size: 64, offset: 320)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 64)
!4411 = !DISubroutineType(types: !4412)
!4412 = !{!32, !4397, !292, !7, !591, !1039}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4383, file: !4377, line: 123, baseType: !4414, size: 64, offset: 384)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!32, !4397, !292, !4417, !1039}
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4383, file: !4377, line: 126, baseType: !4419, size: 64, offset: 448)
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4420, size: 64)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!292, !4397}
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4383, file: !4377, line: 127, baseType: !4419, size: 64, offset: 512)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4383, file: !4377, line: 128, baseType: !4424, size: 64, offset: 576)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = !DISubroutineType(types: !4426)
!4426 = !{!4375, !4397}
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4383, file: !4377, line: 130, baseType: !4428, size: 64, offset: 640)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{!4375, !4397, !4375}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4383, file: !4377, line: 133, baseType: !4432, size: 64, offset: 704)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!4375, !4397, !292}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4383, file: !4377, line: 135, baseType: !4436, size: 64, offset: 768)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DISubroutineType(types: !4438)
!4438 = !{!32, !4397, !292, !292, !7, !7, !4439}
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4377, line: 43, size: 640, elements: !4441)
!4441 = !{!4442, !4443, !4444}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4440, file: !4377, line: 44, baseType: !4375, size: 64)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4440, file: !4377, line: 45, baseType: !7, size: 32, offset: 64)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4440, file: !4377, line: 46, baseType: !4445, size: 512, offset: 128)
!4445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !2433)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4383, file: !4377, line: 140, baseType: !4428, size: 64, offset: 832)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4383, file: !4377, line: 143, baseType: !4424, size: 64, offset: 896)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4383, file: !4377, line: 145, baseType: !4386, size: 64, offset: 960)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4383, file: !4377, line: 146, baseType: !4450, size: 64, offset: 1024)
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4451, size: 64)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{!32, !4397, !4453}
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4377, line: 29, size: 128, elements: !4455)
!4455 = !{!4456, !4457, !4458}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4454, file: !4377, line: 30, baseType: !7, size: 32)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4454, file: !4377, line: 31, baseType: !7, size: 32, offset: 32)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4454, file: !4377, line: 32, baseType: !4397, size: 64, offset: 64)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4383, file: !4377, line: 148, baseType: !4460, size: 64, offset: 1088)
!4460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 64)
!4461 = !DISubroutineType(types: !4462)
!4462 = !{!32, !4397, !3767}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4376, file: !4377, line: 20, baseType: !3767, size: 64, offset: 128)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3768, file: !3769, line: 534, baseType: !1458, size: 32, offset: 4992)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3768, file: !3769, line: 535, baseType: !987, size: 32, offset: 5024)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3768, file: !3769, line: 537, baseType: !1670, offset: 5056)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3768, file: !3769, line: 538, baseType: !284, size: 128, offset: 5056)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3768, file: !3769, line: 540, baseType: !4469, size: 64, offset: 5184)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4471, line: 54, size: 960, elements: !4472)
!4471 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4472 = !{!4473, !4474, !4475, !4476, !4477, !4478, !4479, !4483, !4487, !4488, !4489, !4490, !4494, !4498, !4499}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4470, file: !4471, line: 55, baseType: !292, size: 64)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4470, file: !4471, line: 56, baseType: !980, size: 64, offset: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4470, file: !4471, line: 58, baseType: !3851, size: 64, offset: 128)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4470, file: !4471, line: 59, baseType: !3851, size: 64, offset: 192)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4470, file: !4471, line: 60, baseType: !3778, size: 64, offset: 256)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4470, file: !4471, line: 62, baseType: !4065, size: 64, offset: 320)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4470, file: !4471, line: 63, baseType: !4480, size: 64, offset: 384)
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 64)
!4481 = !DISubroutineType(types: !4482)
!4482 = !{!1038, !3767, !4072}
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4470, file: !4471, line: 65, baseType: !4484, size: 64, offset: 448)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4485 = !DISubroutineType(types: !4486)
!4486 = !{null, !4469}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4470, file: !4471, line: 66, baseType: !4074, size: 64, offset: 512)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4470, file: !4471, line: 68, baseType: !4084, size: 64, offset: 576)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4470, file: !4471, line: 70, baseType: !3887, size: 64, offset: 640)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4470, file: !4471, line: 71, baseType: !4491, size: 64, offset: 704)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{!3276, !3767}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4470, file: !4471, line: 73, baseType: !4495, size: 64, offset: 768)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{null, !3767, !2850, !2851}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4470, file: !4471, line: 75, baseType: !4078, size: 64, offset: 832)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4470, file: !4471, line: 77, baseType: !4201, size: 64, offset: 896)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3768, file: !3769, line: 541, baseType: !3851, size: 64, offset: 5248)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3768, file: !3769, line: 543, baseType: !4074, size: 64, offset: 5312)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3768, file: !3769, line: 544, baseType: !4503, size: 64, offset: 5376)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 64)
!4504 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !3769, line: 45, flags: DIFlagFwdDecl)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3768, file: !3769, line: 545, baseType: !4506, size: 64, offset: 5440)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !3769, line: 47, flags: DIFlagFwdDecl)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3768, file: !3769, line: 547, baseType: !771, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3768, file: !3769, line: 548, baseType: !771, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3768, file: !3769, line: 549, baseType: !771, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3768, file: !3769, line: 550, baseType: !771, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3761, file: !3762, line: 289, baseType: !4513, size: 64, offset: 128)
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!4514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !4515, line: 302, size: 1472, elements: !4516)
!4515 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!4516 = !{!4517, !4518, !4519, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4759, !4760, !4761, !4762, !4764, !4850, !4853, !4854, !5012}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4514, file: !4515, line: 303, baseType: !32, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4514, file: !4515, line: 304, baseType: !2594, size: 32, offset: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !4514, file: !4515, line: 305, baseType: !4520, size: 64, offset: 64)
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4522, size: 64)
!4522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !4523, line: 14, size: 832, elements: !4524)
!4523 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!4524 = !{!4525, !4526, !4527, !4729, !4730, !4731}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4522, file: !4523, line: 15, baseType: !3772, size: 512)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4522, file: !4523, line: 16, baseType: !980, size: 64, offset: 512)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4522, file: !4523, line: 17, baseType: !4528, size: 64, offset: 576)
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 64)
!4529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4530)
!4530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !1317, line: 1822, size: 2048, elements: !4531)
!4531 = !{!4532, !4533, !4537, !4541, !4545, !4546, !4547, !4551, !4564, !4565, !4569, !4573, !4574, !4578, !4579, !4583, !4588, !4589, !4593, !4597, !4689, !4693, !4694, !4698, !4699, !4703, !4707, !4712, !4716, !4720, !4724, !4728}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4530, file: !1317, line: 1823, baseType: !980, size: 64)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4530, file: !1317, line: 1824, baseType: !4534, size: 64, offset: 64)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 64)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!1476, !1315, !1476, !32}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4530, file: !1317, line: 1825, baseType: !4538, size: 64, offset: 128)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!1521, !1315, !1038, !1039, !1694}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4530, file: !1317, line: 1826, baseType: !4542, size: 64, offset: 192)
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4543, size: 64)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!1521, !1315, !292, !1039, !1694}
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4530, file: !1317, line: 1827, baseType: !1825, size: 64, offset: 256)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4530, file: !1317, line: 1828, baseType: !1825, size: 64, offset: 320)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4530, file: !1317, line: 1829, baseType: !4548, size: 64, offset: 384)
!4548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 64)
!4549 = !DISubroutineType(types: !4550)
!4550 = !{!32, !1828, !771}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4530, file: !1317, line: 1830, baseType: !4552, size: 64, offset: 448)
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 64)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{!32, !1315, !4555}
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 64)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !1317, line: 1776, size: 128, elements: !4557)
!4557 = !{!4558, !4563}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4556, file: !1317, line: 1777, baseType: !4559, size: 64)
!4559 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !1317, line: 1773, baseType: !4560)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{!32, !4555, !292, !32, !1476, !331, !7}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4556, file: !1317, line: 1778, baseType: !1476, size: 64, offset: 64)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4530, file: !1317, line: 1831, baseType: !4552, size: 64, offset: 512)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4530, file: !1317, line: 1832, baseType: !4566, size: 64, offset: 576)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 64)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!4027, !1315, !4028}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4530, file: !1317, line: 1833, baseType: !4570, size: 64, offset: 640)
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4571, size: 64)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{!998, !1315, !7, !312}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4530, file: !1317, line: 1834, baseType: !4570, size: 64, offset: 704)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4530, file: !1317, line: 1835, baseType: !4575, size: 64, offset: 768)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!32, !1315, !2098}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4530, file: !1317, line: 1836, baseType: !312, size: 64, offset: 832)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4530, file: !1317, line: 1837, baseType: !4580, size: 64, offset: 896)
!4580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4581, size: 64)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{!32, !1375, !1315}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4530, file: !1317, line: 1838, baseType: !4584, size: 64, offset: 960)
!4584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4585, size: 64)
!4585 = !DISubroutineType(types: !4586)
!4586 = !{!32, !1315, !4587}
!4587 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !1317, line: 1007, baseType: !591)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4530, file: !1317, line: 1839, baseType: !4580, size: 64, offset: 1024)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4530, file: !1317, line: 1840, baseType: !4590, size: 64, offset: 1088)
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4591, size: 64)
!4591 = !DISubroutineType(types: !4592)
!4592 = !{!32, !1315, !1476, !1476, !32}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4530, file: !1317, line: 1841, baseType: !4594, size: 64, offset: 1152)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4595, size: 64)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{!32, !32, !1315, !32}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4530, file: !1317, line: 1842, baseType: !4598, size: 64, offset: 1216)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 64)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!32, !1315, !32, !4601}
!4601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4602, size: 64)
!4602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !1317, line: 1062, size: 1664, elements: !4603)
!4603 = !{!4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4634, !4665}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4602, file: !1317, line: 1063, baseType: !4601, size: 64)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4602, file: !1317, line: 1064, baseType: !284, size: 128, offset: 64)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4602, file: !1317, line: 1065, baseType: !276, size: 128, offset: 192)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4602, file: !1317, line: 1066, baseType: !284, size: 128, offset: 320)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4602, file: !1317, line: 1069, baseType: !284, size: 128, offset: 448)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4602, file: !1317, line: 1072, baseType: !4587, size: 64, offset: 576)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4602, file: !1317, line: 1073, baseType: !7, size: 32, offset: 640)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4602, file: !1317, line: 1074, baseType: !482, size: 8, offset: 672)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4602, file: !1317, line: 1075, baseType: !7, size: 32, offset: 704)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4602, file: !1317, line: 1076, baseType: !32, size: 32, offset: 736)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4602, file: !1317, line: 1077, baseType: !1889, size: 128, offset: 768)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4602, file: !1317, line: 1078, baseType: !1315, size: 64, offset: 896)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4602, file: !1317, line: 1079, baseType: !1476, size: 64, offset: 960)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4602, file: !1317, line: 1080, baseType: !1476, size: 64, offset: 1024)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4602, file: !1317, line: 1082, baseType: !1908, size: 64, offset: 1088)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4602, file: !1317, line: 1084, baseType: !312, size: 64, offset: 1152)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4602, file: !1317, line: 1085, baseType: !312, size: 64, offset: 1216)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4602, file: !1317, line: 1087, baseType: !4622, size: 64, offset: 1280)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4624)
!4624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !1317, line: 1011, size: 128, elements: !4625)
!4625 = !{!4626, !4630}
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4624, file: !1317, line: 1012, baseType: !4627, size: 64)
!4627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4628, size: 64)
!4628 = !DISubroutineType(types: !4629)
!4629 = !{null, !4601, !4601}
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4624, file: !1317, line: 1013, baseType: !4631, size: 64, offset: 64)
!4631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 64)
!4632 = !DISubroutineType(types: !4633)
!4633 = !{null, !4601}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4602, file: !1317, line: 1088, baseType: !4635, size: 64, offset: 1344)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 64)
!4636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4637)
!4637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !1317, line: 1016, size: 512, elements: !4638)
!4638 = !{!4639, !4643, !4647, !4648, !4652, !4656, !4660, !4664}
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4637, file: !1317, line: 1017, baseType: !4640, size: 64)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!4587, !4587}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4637, file: !1317, line: 1018, baseType: !4644, size: 64, offset: 64)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{null, !4587}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4637, file: !1317, line: 1019, baseType: !4631, size: 64, offset: 128)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4637, file: !1317, line: 1020, baseType: !4649, size: 64, offset: 192)
!4649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4650, size: 64)
!4650 = !DISubroutineType(types: !4651)
!4651 = !{!32, !4601, !32}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4637, file: !1317, line: 1021, baseType: !4653, size: 64, offset: 256)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{!771, !4601}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4637, file: !1317, line: 1022, baseType: !4657, size: 64, offset: 320)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!32, !4601, !32, !287}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4637, file: !1317, line: 1023, baseType: !4661, size: 64, offset: 384)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{null, !4601, !1802}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4637, file: !1317, line: 1024, baseType: !4653, size: 64, offset: 448)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4602, file: !1317, line: 1097, baseType: !4666, size: 256, offset: 1408)
!4666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4602, file: !1317, line: 1089, size: 256, elements: !4667)
!4667 = !{!4668, !4677, !4683}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4666, file: !1317, line: 1090, baseType: !4669, size: 256)
!4669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4670, line: 10, size: 256, elements: !4671)
!4670 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4671 = !{!4672, !4673, !4676}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4669, file: !4670, line: 11, baseType: !987, size: 32)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4669, file: !4670, line: 12, baseType: !4674, size: 64, offset: 64)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4670, line: 5, flags: DIFlagFwdDecl)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4669, file: !4670, line: 13, baseType: !284, size: 128, offset: 128)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4666, file: !1317, line: 1091, baseType: !4678, size: 64)
!4678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4670, line: 17, size: 64, elements: !4679)
!4679 = !{!4680}
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4678, file: !4670, line: 18, baseType: !4681, size: 64)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4670, line: 16, flags: DIFlagFwdDecl)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4666, file: !1317, line: 1096, baseType: !4684, size: 192)
!4684 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4666, file: !1317, line: 1092, size: 192, elements: !4685)
!4685 = !{!4686, !4687, !4688}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4684, file: !1317, line: 1093, baseType: !284, size: 128)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4684, file: !1317, line: 1094, baseType: !32, size: 32, offset: 128)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4684, file: !1317, line: 1095, baseType: !7, size: 32, offset: 160)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4530, file: !1317, line: 1843, baseType: !4690, size: 64, offset: 1280)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 64)
!4691 = !DISubroutineType(types: !4692)
!4692 = !{!1521, !1315, !1719, !32, !1039, !1694, !32}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4530, file: !1317, line: 1844, baseType: !2218, size: 64, offset: 1344)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4530, file: !1317, line: 1845, baseType: !4695, size: 64, offset: 1408)
!4695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{!32, !32}
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4530, file: !1317, line: 1846, baseType: !4598, size: 64, offset: 1472)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4530, file: !1317, line: 1847, baseType: !4700, size: 64, offset: 1536)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{!1521, !1883, !1315, !1694, !1039, !7}
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4530, file: !1317, line: 1848, baseType: !4704, size: 64, offset: 1600)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4705, size: 64)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{!1521, !1315, !1694, !1883, !1039, !7}
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4530, file: !1317, line: 1849, baseType: !4708, size: 64, offset: 1664)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{!32, !1315, !998, !4711, !1802}
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4601, size: 64)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4530, file: !1317, line: 1850, baseType: !4713, size: 64, offset: 1728)
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 64)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!998, !1315, !32, !1476, !1476}
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4530, file: !1317, line: 1852, baseType: !4717, size: 64, offset: 1792)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{null, !1653, !1315}
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4530, file: !1317, line: 1856, baseType: !4721, size: 64, offset: 1856)
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 64)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{!1521, !1315, !1476, !1315, !1476, !1039, !7}
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4530, file: !1317, line: 1858, baseType: !4725, size: 64, offset: 1920)
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 64)
!4726 = !DISubroutineType(types: !4727)
!4727 = !{!1476, !1315, !1476, !1315, !1476, !1476, !7}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4530, file: !1317, line: 1861, baseType: !4590, size: 64, offset: 1984)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4522, file: !4523, line: 18, baseType: !284, size: 128, offset: 640)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4522, file: !4523, line: 19, baseType: !1458, size: 32, offset: 768)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4522, file: !4523, line: 20, baseType: !7, size: 32, offset: 800)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4514, file: !4515, line: 306, baseType: !980, size: 64, offset: 128)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !4514, file: !4515, line: 307, baseType: !292, size: 64, offset: 192)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4514, file: !4515, line: 308, baseType: !292, size: 64, offset: 256)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !4514, file: !4515, line: 309, baseType: !32, size: 32, offset: 320)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !4514, file: !4515, line: 310, baseType: !32, size: 32, offset: 352)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !4514, file: !4515, line: 311, baseType: !32, size: 32, offset: 384)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4514, file: !4515, line: 312, baseType: !7, size: 32, offset: 416)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4514, file: !4515, line: 313, baseType: !625, size: 16, offset: 448)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !4514, file: !4515, line: 314, baseType: !625, size: 16, offset: 464)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !4514, file: !4515, line: 315, baseType: !4742, size: 352, offset: 480)
!4742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !4743, line: 32, size: 352, elements: !4744)
!4743 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!4744 = !{!4745, !4747, !4748, !4749, !4750, !4752, !4756, !4758}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !4742, file: !4743, line: 33, baseType: !4746, size: 32)
!4746 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !4743, line: 9, baseType: !7)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !4742, file: !4743, line: 34, baseType: !4746, size: 32, offset: 32)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !4742, file: !4743, line: 35, baseType: !4746, size: 32, offset: 64)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !4742, file: !4743, line: 36, baseType: !4746, size: 32, offset: 96)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !4742, file: !4743, line: 37, baseType: !4751, size: 8, offset: 128)
!4751 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !4743, line: 7, baseType: !482)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !4742, file: !4743, line: 38, baseType: !4753, size: 152, offset: 136)
!4753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4751, size: 152, elements: !4754)
!4754 = !{!4755}
!4755 = !DISubrange(count: 19)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !4742, file: !4743, line: 39, baseType: !4757, size: 32, offset: 288)
!4757 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !4743, line: 8, baseType: !7)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !4742, file: !4743, line: 40, baseType: !4757, size: 32, offset: 320)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4514, file: !4515, line: 316, baseType: !312, size: 64, offset: 832)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !4514, file: !4515, line: 317, baseType: !3028, size: 64, offset: 896)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !4514, file: !4515, line: 318, baseType: !4513, size: 64, offset: 960)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !4514, file: !4515, line: 323, baseType: !4763, size: 64, offset: 1024)
!4763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !4514, file: !4515, line: 324, baseType: !4765, size: 64, offset: 1088)
!4765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4766, size: 64)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !3762, line: 230, size: 2432, elements: !4768)
!4768 = !{!4769, !4799, !4800, !4801, !4823, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4849}
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4767, file: !3762, line: 231, baseType: !4770, size: 1024)
!4770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !3762, line: 85, size: 1024, elements: !4771)
!4771 = !{!4772, !4788, !4789, !4790, !4791, !4792, !4796, !4797, !4798}
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4770, file: !3762, line: 86, baseType: !4773, size: 64)
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4774, size: 64)
!4774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !3762, line: 58, size: 256, elements: !4775)
!4775 = !{!4776, !4781, !4782, !4783, !4784, !4785, !4786}
!4776 = !DIDerivedType(tag: DW_TAG_member, scope: !4774, file: !3762, line: 59, baseType: !4777, size: 64)
!4777 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4774, file: !3762, line: 59, size: 64, elements: !4778)
!4778 = !{!4779, !4780}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4777, file: !3762, line: 60, baseType: !4773, size: 64)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4777, file: !3762, line: 61, baseType: !1323, size: 64)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4774, file: !3762, line: 63, baseType: !32, size: 32, offset: 64)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4774, file: !3762, line: 64, baseType: !32, size: 32, offset: 96)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !4774, file: !3762, line: 65, baseType: !32, size: 32, offset: 128)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4774, file: !3762, line: 66, baseType: !32, size: 32, offset: 160)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4774, file: !3762, line: 67, baseType: !32, size: 32, offset: 192)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4774, file: !3762, line: 69, baseType: !4787, offset: 256)
!4787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, elements: !309)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4770, file: !3762, line: 87, baseType: !2764, size: 256, offset: 64)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4770, file: !3762, line: 88, baseType: !1665, size: 192, offset: 320)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4770, file: !3762, line: 89, baseType: !383, size: 32, offset: 512)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !4770, file: !3762, line: 90, baseType: !4774, size: 256, offset: 576)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4770, file: !3762, line: 91, baseType: !4793, size: 64, offset: 832)
!4793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !1324, line: 54, size: 64, elements: !4794)
!4794 = !{!4795}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4793, file: !1324, line: 55, baseType: !1327, size: 64)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !4770, file: !3762, line: 92, baseType: !383, size: 32, offset: 896)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !4770, file: !3762, line: 93, baseType: !32, size: 32, offset: 928)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4770, file: !3762, line: 94, baseType: !4773, size: 64, offset: 960)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4767, file: !3762, line: 232, baseType: !3760, size: 64, offset: 1024)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !4767, file: !3762, line: 233, baseType: !3760, size: 64, offset: 1088)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4767, file: !3762, line: 234, baseType: !4802, size: 64, offset: 1152)
!4802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4803, size: 64)
!4803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4804)
!4804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !3762, line: 205, size: 320, elements: !4805)
!4805 = !{!4806, !4810, !4814, !4818, !4822}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !4804, file: !3762, line: 207, baseType: !4807, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!32, !4766}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !4804, file: !3762, line: 209, baseType: !4811, size: 64, offset: 64)
!4811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4812, size: 64)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{null, !4766, !32}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4804, file: !3762, line: 213, baseType: !4815, size: 64, offset: 128)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 64)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{null, !4766}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4804, file: !3762, line: 218, baseType: !4819, size: 64, offset: 192)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 64)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{!32, !4766, !3760}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !4804, file: !3762, line: 220, baseType: !4815, size: 64, offset: 256)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !4767, file: !3762, line: 235, baseType: !4824, size: 64, offset: 1216)
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4826)
!4826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !3762, line: 223, size: 128, elements: !4827)
!4827 = !{!4828, !4832}
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4826, file: !3762, line: 224, baseType: !4829, size: 64)
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{!32, !4766, !946, !946, !1039}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4826, file: !3762, line: 225, baseType: !4815, size: 64, offset: 64)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4767, file: !3762, line: 236, baseType: !1670, offset: 1280)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !4767, file: !3762, line: 237, baseType: !32, size: 32, offset: 1280)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4767, file: !3762, line: 238, baseType: !32, size: 32, offset: 1312)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !4767, file: !3762, line: 239, baseType: !1889, size: 128, offset: 1344)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !4767, file: !3762, line: 240, baseType: !1889, size: 128, offset: 1472)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4767, file: !3762, line: 241, baseType: !312, size: 64, offset: 1600)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !4767, file: !3762, line: 242, baseType: !312, size: 64, offset: 1664)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !4767, file: !3762, line: 243, baseType: !482, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !4767, file: !3762, line: 244, baseType: !482, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4767, file: !3762, line: 245, baseType: !1665, size: 192, offset: 1792)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !4767, file: !3762, line: 246, baseType: !1665, size: 192, offset: 1984)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !4767, file: !3762, line: 247, baseType: !564, size: 64, offset: 2176)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !4767, file: !3762, line: 248, baseType: !7, size: 32, offset: 2240)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !4767, file: !3762, line: 249, baseType: !7, size: 32, offset: 2272)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !4767, file: !3762, line: 250, baseType: !32, size: 32, offset: 2304)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4767, file: !3762, line: 253, baseType: !2594, size: 32, offset: 2336)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !4767, file: !3762, line: 254, baseType: !591, size: 64, offset: 2368)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !4514, file: !4515, line: 325, baseType: !4851, size: 64, offset: 1152)
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 64)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !4514, file: !4515, line: 326, baseType: !591, size: 64, offset: 1216)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4514, file: !4515, line: 332, baseType: !4855, size: 64, offset: 1280)
!4855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4856, size: 64)
!4856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4857)
!4857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !4515, line: 254, size: 2176, elements: !4858)
!4858 = !{!4859, !4863, !4867, !4871, !4875, !4879, !4883, !4884, !4888, !4892, !4893, !4897, !4898, !4902, !4906, !4910, !4911, !4912, !4913, !4914, !4915, !4919, !4920, !4921, !4925, !4929, !4930, !4934, !4946, !4959, !4980, !5006, !5007, !5011}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !4857, file: !4515, line: 255, baseType: !4860, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!3760, !4513, !1315, !32}
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !4857, file: !4515, line: 257, baseType: !4864, size: 64, offset: 64)
!4864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4865, size: 64)
!4865 = !DISubroutineType(types: !4866)
!4866 = !{!32, !4513, !3760}
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4857, file: !4515, line: 258, baseType: !4868, size: 64, offset: 128)
!4868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4869, size: 64)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{null, !4513, !3760}
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4857, file: !4515, line: 259, baseType: !4872, size: 64, offset: 192)
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!32, !3760, !1315}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4857, file: !4515, line: 260, baseType: !4876, size: 64, offset: 256)
!4876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4877, size: 64)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{null, !3760, !1315}
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4857, file: !4515, line: 261, baseType: !4880, size: 64, offset: 320)
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4881, size: 64)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{null, !3760}
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4857, file: !4515, line: 262, baseType: !4880, size: 64, offset: 384)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4857, file: !4515, line: 263, baseType: !4885, size: 64, offset: 448)
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4886, size: 64)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!32, !3760, !946, !32}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !4857, file: !4515, line: 265, baseType: !4889, size: 64, offset: 512)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{!32, !3760, !482}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !4857, file: !4515, line: 266, baseType: !4880, size: 64, offset: 576)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !4857, file: !4515, line: 267, baseType: !4894, size: 64, offset: 640)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!32, !3760}
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !4857, file: !4515, line: 268, baseType: !4894, size: 64, offset: 704)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4857, file: !4515, line: 269, baseType: !4899, size: 64, offset: 768)
!4899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4900, size: 64)
!4900 = !DISubroutineType(types: !4901)
!4901 = !{!32, !3760, !7, !312}
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4857, file: !4515, line: 271, baseType: !4903, size: 64, offset: 832)
!4903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4904, size: 64)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!998, !3760, !7, !312}
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4857, file: !4515, line: 273, baseType: !4907, size: 64, offset: 896)
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 64)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{null, !3760, !4852}
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !4857, file: !4515, line: 274, baseType: !4880, size: 64, offset: 960)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !4857, file: !4515, line: 275, baseType: !4880, size: 64, offset: 1024)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4857, file: !4515, line: 276, baseType: !4880, size: 64, offset: 1088)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4857, file: !4515, line: 277, baseType: !4880, size: 64, offset: 1152)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !4857, file: !4515, line: 278, baseType: !4880, size: 64, offset: 1216)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !4857, file: !4515, line: 279, baseType: !4916, size: 64, offset: 1280)
!4916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4917, size: 64)
!4917 = !DISubroutineType(types: !4918)
!4918 = !{!32, !3760, !32}
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4857, file: !4515, line: 280, baseType: !4880, size: 64, offset: 1344)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !4857, file: !4515, line: 281, baseType: !4880, size: 64, offset: 1408)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !4857, file: !4515, line: 282, baseType: !4922, size: 64, offset: 1472)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{null, !3760, !32}
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !4857, file: !4515, line: 283, baseType: !4926, size: 64, offset: 1536)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4927, size: 64)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{null, !3760, !268}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !4857, file: !4515, line: 284, baseType: !4894, size: 64, offset: 1600)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !4857, file: !4515, line: 285, baseType: !4931, size: 64, offset: 1664)
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4932, size: 64)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{!32, !3760, !7, !7}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !4857, file: !4515, line: 287, baseType: !4935, size: 64, offset: 1728)
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4936, size: 64)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!32, !3760, !4938}
!4938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4939, size: 64)
!4939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !4940, line: 15, size: 64, elements: !4941)
!4940 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!4941 = !{!4942, !4943, !4944, !4945}
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !4939, file: !4940, line: 16, baseType: !476, size: 16)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !4939, file: !4940, line: 17, baseType: !476, size: 16, offset: 16)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !4939, file: !4940, line: 18, baseType: !476, size: 16, offset: 32)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !4939, file: !4940, line: 19, baseType: !476, size: 16, offset: 48)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !4857, file: !4515, line: 288, baseType: !4947, size: 64, offset: 1792)
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{!32, !3760, !4950}
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !4952, line: 10, size: 128, elements: !4953)
!4952 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!4953 = !{!4954, !4955, !4956, !4958}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !4951, file: !4952, line: 12, baseType: !475, size: 16)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !4951, file: !4952, line: 13, baseType: !475, size: 16, offset: 16)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !4951, file: !4952, line: 14, baseType: !4957, size: 80, offset: 32)
!4957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 80, elements: !2630)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !4951, file: !4952, line: 15, baseType: !475, size: 16, offset: 112)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !4857, file: !4515, line: 289, baseType: !4960, size: 64, offset: 1856)
!4960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4961, size: 64)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!32, !3760, !4963}
!4963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4964, size: 64)
!4964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !4965, line: 102, size: 640, elements: !4966)
!4965 = !DIFile(filename: "./include/uapi/linux/serial.h", directory: "/home/lizy2001/genbc/linux")
!4966 = !{!4967, !4968, !4969, !4970, !4971, !4972, !4973, !4974, !4975, !4976, !4977, !4978}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4964, file: !4965, line: 103, baseType: !32, size: 32)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4964, file: !4965, line: 103, baseType: !32, size: 32, offset: 32)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4964, file: !4965, line: 103, baseType: !32, size: 32, offset: 64)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4964, file: !4965, line: 103, baseType: !32, size: 32, offset: 96)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4964, file: !4965, line: 104, baseType: !32, size: 32, offset: 128)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4964, file: !4965, line: 104, baseType: !32, size: 32, offset: 160)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4964, file: !4965, line: 105, baseType: !32, size: 32, offset: 192)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4964, file: !4965, line: 105, baseType: !32, size: 32, offset: 224)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4964, file: !4965, line: 105, baseType: !32, size: 32, offset: 256)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4964, file: !4965, line: 105, baseType: !32, size: 32, offset: 288)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4964, file: !4965, line: 106, baseType: !32, size: 32, offset: 320)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4964, file: !4965, line: 107, baseType: !4979, size: 288, offset: 352)
!4979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 288, elements: !3105)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !4857, file: !4515, line: 291, baseType: !4981, size: 64, offset: 1920)
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4982, size: 64)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{!32, !3760, !4984}
!4984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 64)
!4985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !4965, line: 19, size: 576, elements: !4986)
!4986 = !{!4987, !4988, !4989, !4990, !4991, !4992, !4993, !4994, !4995, !4996, !4997, !4999, !5000, !5001, !5002, !5003, !5004, !5005}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4985, file: !4965, line: 20, baseType: !32, size: 32)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !4985, file: !4965, line: 21, baseType: !32, size: 32, offset: 32)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4985, file: !4965, line: 22, baseType: !7, size: 32, offset: 64)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4985, file: !4965, line: 23, baseType: !32, size: 32, offset: 96)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4985, file: !4965, line: 24, baseType: !32, size: 32, offset: 128)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_fifo_size", scope: !4985, file: !4965, line: 25, baseType: !32, size: 32, offset: 160)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !4985, file: !4965, line: 26, baseType: !32, size: 32, offset: 192)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "baud_base", scope: !4985, file: !4965, line: 27, baseType: !32, size: 32, offset: 224)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !4985, file: !4965, line: 28, baseType: !476, size: 16, offset: 256)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "io_type", scope: !4985, file: !4965, line: 29, baseType: !268, size: 8, offset: 272)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_char", scope: !4985, file: !4965, line: 30, baseType: !4998, size: 8, offset: 280)
!4998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 8, elements: !2472)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "hub6", scope: !4985, file: !4965, line: 31, baseType: !32, size: 32, offset: 288)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !4985, file: !4965, line: 32, baseType: !476, size: 16, offset: 320)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait2", scope: !4985, file: !4965, line: 33, baseType: !476, size: 16, offset: 336)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_base", scope: !4985, file: !4965, line: 34, baseType: !564, size: 64, offset: 384)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_reg_shift", scope: !4985, file: !4965, line: 35, baseType: !476, size: 16, offset: 448)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "port_high", scope: !4985, file: !4965, line: 36, baseType: !7, size: 32, offset: 480)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "iomap_base", scope: !4985, file: !4965, line: 37, baseType: !312, size: 64, offset: 512)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !4857, file: !4515, line: 292, baseType: !4981, size: 64, offset: 1984)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4857, file: !4515, line: 293, baseType: !5008, size: 64, offset: 2048)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{null, !3760, !1653}
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !4857, file: !4515, line: 299, baseType: !1704, size: 64, offset: 2112)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !4514, file: !4515, line: 333, baseType: !284, size: 128, offset: 1344)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3761, file: !3762, line: 290, baseType: !4855, size: 64, offset: 192)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3761, file: !3762, line: 291, baseType: !32, size: 32, offset: 256)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !3761, file: !3762, line: 294, baseType: !5016, size: 384, offset: 320)
!5016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !5017, line: 133, size: 384, elements: !5018)
!5017 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!5018 = !{!5019, !5020, !5021, !5022, !5023}
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5016, file: !5017, line: 134, baseType: !371, size: 64)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !5016, file: !5017, line: 135, baseType: !1761, offset: 64)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !5016, file: !5017, line: 136, baseType: !7, size: 32, offset: 64)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !5016, file: !5017, line: 137, baseType: !284, size: 128, offset: 128)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !5016, file: !5017, line: 138, baseType: !284, size: 128, offset: 256)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !3761, file: !3762, line: 295, baseType: !5025, size: 64, offset: 704)
!5025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5026, size: 64)
!5026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !5017, line: 215, size: 128, elements: !5027)
!5027 = !{!5028, !5073}
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5026, file: !5017, line: 216, baseType: !5029, size: 64)
!5029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5030, size: 64)
!5030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !5017, line: 175, size: 1216, elements: !5031)
!5031 = !{!5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5043, !5047, !5051, !5052, !5053, !5057, !5058, !5062, !5063, !5067, !5071, !5072}
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5030, file: !5017, line: 176, baseType: !32, size: 32)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5030, file: !5017, line: 177, baseType: !1038, size: 64, offset: 64)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5030, file: !5017, line: 178, baseType: !32, size: 32, offset: 128)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5030, file: !5017, line: 179, baseType: !32, size: 32, offset: 160)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5030, file: !5017, line: 184, baseType: !4894, size: 64, offset: 192)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !5030, file: !5017, line: 185, baseType: !4880, size: 64, offset: 256)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !5030, file: !5017, line: 186, baseType: !4880, size: 64, offset: 320)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5030, file: !5017, line: 187, baseType: !5040, size: 64, offset: 384)
!5040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5041, size: 64)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!1521, !3760, !1315, !564, !1039}
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5030, file: !5017, line: 189, baseType: !5044, size: 64, offset: 448)
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5045, size: 64)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!1521, !3760, !1315, !946, !1039}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5030, file: !5017, line: 191, baseType: !5048, size: 64, offset: 512)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{!32, !3760, !1315, !7, !312}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5030, file: !5017, line: 193, baseType: !5048, size: 64, offset: 576)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !5030, file: !5017, line: 195, baseType: !4907, size: 64, offset: 640)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5030, file: !5017, line: 196, baseType: !5054, size: 64, offset: 704)
!5054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5055, size: 64)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{!4027, !3760, !1315, !4028}
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !5030, file: !5017, line: 198, baseType: !4894, size: 64, offset: 768)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !5030, file: !5017, line: 203, baseType: !5059, size: 64, offset: 832)
!5059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5060, size: 64)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{null, !3760, !946, !1038, !32}
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !5030, file: !5017, line: 205, baseType: !4880, size: 64, offset: 896)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !5030, file: !5017, line: 206, baseType: !5064, size: 64, offset: 960)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = !DISubroutineType(types: !5066)
!5066 = !{null, !3760, !7}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !5030, file: !5017, line: 207, baseType: !5068, size: 64, offset: 1024)
!5068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 64)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!32, !3760, !946, !1038, !32}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5030, file: !5017, line: 210, baseType: !980, size: 64, offset: 1088)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5030, file: !5017, line: 212, baseType: !32, size: 32, offset: 1152)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !5026, file: !5017, line: 217, baseType: !3760, size: 64, offset: 64)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !3761, file: !3762, line: 297, baseType: !1665, size: 192, offset: 768)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !3761, file: !3762, line: 298, baseType: !1665, size: 192, offset: 960)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !3761, file: !3762, line: 299, baseType: !1665, size: 192, offset: 1152)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !3761, file: !3762, line: 300, baseType: !1755, size: 256, offset: 1344)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !3761, file: !3762, line: 301, baseType: !1665, size: 192, offset: 1600)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !3761, file: !3762, line: 302, baseType: !1670, offset: 1792)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !3761, file: !3762, line: 303, baseType: !1670, offset: 1792)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !3761, file: !3762, line: 305, baseType: !4742, size: 352, offset: 1792)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !3761, file: !3762, line: 305, baseType: !4742, size: 352, offset: 2144)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !3761, file: !3762, line: 306, baseType: !4950, size: 64, offset: 2496)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3761, file: !3762, line: 307, baseType: !5085, size: 512, offset: 2560)
!5085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 512, elements: !3813)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !3761, file: !3762, line: 308, baseType: !2571, size: 64, offset: 3072)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !3761, file: !3762, line: 313, baseType: !2571, size: 64, offset: 3136)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3761, file: !3762, line: 314, baseType: !312, size: 64, offset: 3200)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3761, file: !3762, line: 315, baseType: !32, size: 32, offset: 3264)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !3761, file: !3762, line: 316, baseType: !4939, size: 64, offset: 3296)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !3761, file: !3762, line: 317, baseType: !312, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !3761, file: !3762, line: 318, baseType: !312, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3761, file: !3762, line: 319, baseType: !312, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !3761, file: !3762, line: 320, baseType: !32, size: 32, offset: 3456)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !3761, file: !3762, line: 321, baseType: !312, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !3761, file: !3762, line: 322, baseType: !312, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !3761, file: !3762, line: 323, baseType: !312, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !3761, file: !3762, line: 324, baseType: !7, size: 32, offset: 3584)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !3761, file: !3762, line: 325, baseType: !32, size: 32, offset: 3616)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3761, file: !3762, line: 327, baseType: !3760, size: 64, offset: 3648)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3761, file: !3762, line: 328, baseType: !1908, size: 64, offset: 3712)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !3761, file: !3762, line: 329, baseType: !1889, size: 128, offset: 3776)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !3761, file: !3762, line: 330, baseType: !1889, size: 128, offset: 3904)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !3761, file: !3762, line: 331, baseType: !2764, size: 256, offset: 4032)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !3761, file: !3762, line: 332, baseType: !591, size: 64, offset: 4288)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3761, file: !3762, line: 333, baseType: !591, size: 64, offset: 4352)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !3761, file: !3762, line: 334, baseType: !1670, offset: 4416)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !3761, file: !3762, line: 335, baseType: !284, size: 128, offset: 4416)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !3761, file: !3762, line: 339, baseType: !32, size: 32, offset: 4544)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !3761, file: !3762, line: 340, baseType: !564, size: 64, offset: 4608)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !3761, file: !3762, line: 341, baseType: !32, size: 32, offset: 4672)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !3761, file: !3762, line: 343, baseType: !2764, size: 256, offset: 4736)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3761, file: !3762, line: 344, baseType: !4766, size: 64, offset: 4992)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3707, file: !3708, line: 175, baseType: !3343, size: 32, offset: 3200)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3707, file: !3708, line: 176, baseType: !331, size: 64, offset: 3264)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3707, file: !3708, line: 176, baseType: !331, size: 64, offset: 3328)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3707, file: !3708, line: 176, baseType: !331, size: 64, offset: 3392)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3707, file: !3708, line: 176, baseType: !331, size: 64, offset: 3456)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3707, file: !3708, line: 177, baseType: !331, size: 64, offset: 3520)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3707, file: !3708, line: 178, baseType: !331, size: 64, offset: 3584)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3707, file: !3708, line: 179, baseType: !2896, size: 128, offset: 3648)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3707, file: !3708, line: 180, baseType: !312, size: 64, offset: 3776)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3707, file: !3708, line: 180, baseType: !312, size: 64, offset: 3840)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3707, file: !3708, line: 180, baseType: !312, size: 64, offset: 3904)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3707, file: !3708, line: 180, baseType: !312, size: 64, offset: 3968)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3707, file: !3708, line: 181, baseType: !312, size: 64, offset: 4032)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3707, file: !3708, line: 181, baseType: !312, size: 64, offset: 4096)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3707, file: !3708, line: 181, baseType: !312, size: 64, offset: 4160)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3707, file: !3708, line: 181, baseType: !312, size: 64, offset: 4224)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3707, file: !3708, line: 182, baseType: !312, size: 64, offset: 4288)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3707, file: !3708, line: 182, baseType: !312, size: 64, offset: 4352)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3707, file: !3708, line: 182, baseType: !312, size: 64, offset: 4416)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3707, file: !3708, line: 182, baseType: !312, size: 64, offset: 4480)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3707, file: !3708, line: 183, baseType: !312, size: 64, offset: 4544)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3707, file: !3708, line: 183, baseType: !312, size: 64, offset: 4608)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3707, file: !3708, line: 184, baseType: !5137, offset: 4672)
!5137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !5138, line: 12, elements: !1587)
!5138 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3707, file: !3708, line: 192, baseType: !335, size: 64, offset: 4672)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3707, file: !3708, line: 203, baseType: !5141, size: 2048, offset: 4736)
!5141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5142, size: 2048, elements: !269)
!5142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !5143, line: 43, size: 128, elements: !5144)
!5143 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!5144 = !{!5145, !5146}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !5142, file: !5143, line: 44, baseType: !1042, size: 64)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !5142, file: !5143, line: 45, baseType: !1042, size: 64, offset: 64)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3707, file: !3708, line: 220, baseType: !771, size: 8, offset: 6784)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3707, file: !3708, line: 221, baseType: !625, size: 16, offset: 6800)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3707, file: !3708, line: 222, baseType: !625, size: 16, offset: 6816)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3707, file: !3708, line: 224, baseType: !2091, size: 64, offset: 6848)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3707, file: !3708, line: 227, baseType: !1665, size: 192, offset: 6912)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3707, file: !3708, line: 233, baseType: !1665, size: 192, offset: 7104)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2327, file: !2328, line: 970, baseType: !5154, size: 64, offset: 9280)
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 64)
!5155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3708, line: 20, size: 16576, elements: !5156)
!5156 = !{!5157, !5158, !5159, !5160}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !5155, file: !3708, line: 21, baseType: !1670)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5155, file: !3708, line: 22, baseType: !568, size: 32)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !5155, file: !3708, line: 23, baseType: !1889, size: 128, offset: 64)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !5155, file: !3708, line: 24, baseType: !5161, size: 16384, offset: 192)
!5161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5162, size: 16384, elements: !3813)
!5162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3718, line: 49, size: 256, elements: !5163)
!5163 = !{!5164}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !5162, file: !3718, line: 50, baseType: !5165, size: 256)
!5165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3718, line: 35, size: 256, elements: !5166)
!5166 = !{!5167, !5174, !5175, !5181}
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !5165, file: !3718, line: 37, baseType: !5168, size: 64)
!5168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !5169, line: 19, baseType: !5170)
!5169 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 64)
!5171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !5169, line: 18, baseType: !5172)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{null, !32}
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !5165, file: !3718, line: 38, baseType: !312, size: 64, offset: 64)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !5165, file: !3718, line: 44, baseType: !5176, size: 64, offset: 128)
!5176 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !5169, line: 22, baseType: !5177)
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 64)
!5178 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !5169, line: 21, baseType: !5179)
!5179 = !DISubroutineType(types: !5180)
!5180 = !{null}
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !5165, file: !3718, line: 46, baseType: !3722, size: 64, offset: 192)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2327, file: !2328, line: 971, baseType: !3722, size: 64, offset: 9344)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2327, file: !2328, line: 972, baseType: !3722, size: 64, offset: 9408)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2327, file: !2328, line: 974, baseType: !3722, size: 64, offset: 9472)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2327, file: !2328, line: 975, baseType: !3717, size: 192, offset: 9536)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2327, file: !2328, line: 976, baseType: !312, size: 64, offset: 9728)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2327, file: !2328, line: 977, baseType: !1039, size: 64, offset: 9792)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2327, file: !2328, line: 978, baseType: !7, size: 32, offset: 9856)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2327, file: !2328, line: 980, baseType: !302, size: 64, offset: 9920)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2327, file: !2328, line: 989, baseType: !5191, size: 128, offset: 9984)
!5191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !5192, line: 35, size: 128, elements: !5193)
!5192 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!5193 = !{!5194, !5195, !5196}
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5191, file: !5192, line: 36, baseType: !32, size: 32)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !5191, file: !5192, line: 37, baseType: !383, size: 32, offset: 32)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5191, file: !5192, line: 38, baseType: !5197, size: 64, offset: 64)
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5198, size: 64)
!5198 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !5192, line: 23, flags: DIFlagFwdDecl)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2327, file: !2328, line: 992, baseType: !331, size: 64, offset: 10112)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2327, file: !2328, line: 993, baseType: !331, size: 64, offset: 10176)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2327, file: !2328, line: 996, baseType: !1670, offset: 10240)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2327, file: !2328, line: 999, baseType: !1761, offset: 10240)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2327, file: !2328, line: 1001, baseType: !5204, size: 64, offset: 10240)
!5204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2328, line: 636, size: 64, elements: !5205)
!5205 = !{!5206}
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5204, file: !2328, line: 637, baseType: !5207, size: 64)
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 64)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2327, file: !2328, line: 1005, baseType: !1747, size: 128, offset: 10304)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2327, file: !2328, line: 1007, baseType: !2326, size: 64, offset: 10432)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2327, file: !2328, line: 1009, baseType: !5211, size: 64, offset: 10496)
!5211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5212, size: 64)
!5212 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2328, line: 1009, flags: DIFlagFwdDecl)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2327, file: !2328, line: 1043, baseType: !591, size: 64, offset: 10560)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2327, file: !2328, line: 1046, baseType: !5215, size: 64, offset: 10624)
!5215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5216, size: 64)
!5216 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2328, line: 41, flags: DIFlagFwdDecl)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2327, file: !2328, line: 1050, baseType: !5218, size: 64, offset: 10688)
!5218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5219, size: 64)
!5219 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2328, line: 42, flags: DIFlagFwdDecl)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2327, file: !2328, line: 1054, baseType: !5221, size: 64, offset: 10752)
!5221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5222, size: 64)
!5222 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2328, line: 55, flags: DIFlagFwdDecl)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2327, file: !2328, line: 1056, baseType: !5224, size: 64, offset: 10816)
!5224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5225, size: 64)
!5225 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2328, line: 40, flags: DIFlagFwdDecl)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2327, file: !2328, line: 1058, baseType: !5227, size: 64, offset: 10880)
!5227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5228, size: 64)
!5228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !5229, line: 99, size: 704, elements: !5230)
!5229 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!5230 = !{!5231, !5232, !5233, !5234, !5235, !5236, !5237, !5256, !5257}
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5228, file: !5229, line: 100, baseType: !371, size: 64)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !5228, file: !5229, line: 101, baseType: !383, size: 32, offset: 64)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !5228, file: !5229, line: 102, baseType: !383, size: 32, offset: 96)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5228, file: !5229, line: 105, baseType: !1670, offset: 128)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5228, file: !5229, line: 107, baseType: !476, size: 16, offset: 128)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !5228, file: !5229, line: 109, baseType: !1737, size: 128, offset: 192)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !5228, file: !5229, line: 110, baseType: !5238, size: 64, offset: 320)
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 64)
!5239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !5229, line: 73, size: 448, elements: !5240)
!5240 = !{!5241, !5244, !5245, !5250, !5255}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5239, file: !5229, line: 74, baseType: !5242, size: 64)
!5242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5243, size: 64)
!5243 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !5229, line: 74, flags: DIFlagFwdDecl)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !5239, file: !5229, line: 75, baseType: !5227, size: 64, offset: 64)
!5245 = !DIDerivedType(tag: DW_TAG_member, scope: !5239, file: !5229, line: 83, baseType: !5246, size: 128, offset: 128)
!5246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5239, file: !5229, line: 83, size: 128, elements: !5247)
!5247 = !{!5248, !5249}
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !5246, file: !5229, line: 84, baseType: !284, size: 128)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !5246, file: !5229, line: 85, baseType: !2051, size: 64)
!5250 = !DIDerivedType(tag: DW_TAG_member, scope: !5239, file: !5229, line: 87, baseType: !5251, size: 128, offset: 256)
!5251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5239, file: !5229, line: 87, size: 128, elements: !5252)
!5252 = !{!5253, !5254}
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !5251, file: !5229, line: 88, baseType: !276, size: 128)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !5251, file: !5229, line: 89, baseType: !299, size: 128, align: 64)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5239, file: !5229, line: 92, baseType: !7, size: 32, offset: 384)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5228, file: !5229, line: 111, baseType: !1581, size: 64, offset: 384)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !5228, file: !5229, line: 113, baseType: !2764, size: 256, offset: 448)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2327, file: !2328, line: 1061, baseType: !5259, size: 64, offset: 10944)
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5260, size: 64)
!5260 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2328, line: 43, flags: DIFlagFwdDecl)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2327, file: !2328, line: 1064, baseType: !312, size: 64, offset: 11008)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2327, file: !2328, line: 1065, baseType: !5263, size: 64, offset: 11072)
!5263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5264, size: 64)
!5264 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3718, line: 14, baseType: !5265)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3718, line: 12, size: 384, elements: !5266)
!5266 = !{!5267}
!5267 = !DIDerivedType(tag: DW_TAG_member, scope: !5265, file: !3718, line: 13, baseType: !5268, size: 384)
!5268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5265, file: !3718, line: 13, size: 384, elements: !5269)
!5269 = !{!5270, !5271, !5272, !5273}
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5268, file: !3718, line: 13, baseType: !32, size: 32)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5268, file: !3718, line: 13, baseType: !32, size: 32, offset: 32)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5268, file: !3718, line: 13, baseType: !32, size: 32, offset: 64)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5268, file: !3718, line: 13, baseType: !5274, size: 256, offset: 128)
!5274 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5275, line: 32, size: 256, elements: !5276)
!5275 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5276 = !{!5277, !5282, !5295, !5301, !5310, !5330, !5335}
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5274, file: !5275, line: 37, baseType: !5278, size: 64)
!5278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 34, size: 64, elements: !5279)
!5279 = !{!5280, !5281}
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5278, file: !5275, line: 35, baseType: !2560, size: 32)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5278, file: !5275, line: 36, baseType: !1388, size: 32, offset: 32)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5274, file: !5275, line: 45, baseType: !5283, size: 192)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 40, size: 192, elements: !5284)
!5284 = !{!5285, !5287, !5288, !5294}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5283, file: !5275, line: 41, baseType: !5286, size: 32)
!5286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1041, line: 95, baseType: !32)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5283, file: !5275, line: 42, baseType: !32, size: 32, offset: 32)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5283, file: !5275, line: 43, baseType: !5289, size: 64, offset: 64)
!5289 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5275, line: 11, baseType: !5290)
!5290 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5275, line: 8, size: 64, elements: !5291)
!5291 = !{!5292, !5293}
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5290, file: !5275, line: 9, baseType: !32, size: 32)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5290, file: !5275, line: 10, baseType: !591, size: 64)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5283, file: !5275, line: 44, baseType: !32, size: 32, offset: 128)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5274, file: !5275, line: 52, baseType: !5296, size: 128)
!5296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 48, size: 128, elements: !5297)
!5297 = !{!5298, !5299, !5300}
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5296, file: !5275, line: 49, baseType: !2560, size: 32)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5296, file: !5275, line: 50, baseType: !1388, size: 32, offset: 32)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5296, file: !5275, line: 51, baseType: !5289, size: 64, offset: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5274, file: !5275, line: 61, baseType: !5302, size: 256)
!5302 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 55, size: 256, elements: !5303)
!5303 = !{!5304, !5305, !5306, !5307, !5309}
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5302, file: !5275, line: 56, baseType: !2560, size: 32)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5302, file: !5275, line: 57, baseType: !1388, size: 32, offset: 32)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5302, file: !5275, line: 58, baseType: !32, size: 32, offset: 64)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5302, file: !5275, line: 59, baseType: !5308, size: 64, offset: 128)
!5308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1041, line: 94, baseType: !1523)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5302, file: !5275, line: 60, baseType: !5308, size: 64, offset: 192)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5274, file: !5275, line: 95, baseType: !5311, size: 256)
!5311 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 64, size: 256, elements: !5312)
!5312 = !{!5313, !5314}
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5311, file: !5275, line: 65, baseType: !591, size: 64)
!5314 = !DIDerivedType(tag: DW_TAG_member, scope: !5311, file: !5275, line: 77, baseType: !5315, size: 192, offset: 64)
!5315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5311, file: !5275, line: 77, size: 192, elements: !5316)
!5316 = !{!5317, !5318, !5325}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5315, file: !5275, line: 82, baseType: !625, size: 16)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5315, file: !5275, line: 88, baseType: !5319, size: 192)
!5319 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5315, file: !5275, line: 84, size: 192, elements: !5320)
!5320 = !{!5321, !5323, !5324}
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5319, file: !5275, line: 85, baseType: !5322, size: 64)
!5322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 64, elements: !2433)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5319, file: !5275, line: 86, baseType: !591, size: 64, offset: 64)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5319, file: !5275, line: 87, baseType: !591, size: 64, offset: 128)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5315, file: !5275, line: 93, baseType: !5326, size: 96)
!5326 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5315, file: !5275, line: 90, size: 96, elements: !5327)
!5327 = !{!5328, !5329}
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5326, file: !5275, line: 91, baseType: !5322, size: 64)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5326, file: !5275, line: 92, baseType: !493, size: 32, offset: 64)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5274, file: !5275, line: 101, baseType: !5331, size: 128)
!5331 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 98, size: 128, elements: !5332)
!5332 = !{!5333, !5334}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5331, file: !5275, line: 99, baseType: !998, size: 64)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5331, file: !5275, line: 100, baseType: !32, size: 32, offset: 64)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5274, file: !5275, line: 108, baseType: !5336, size: 128)
!5336 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 104, size: 128, elements: !5337)
!5337 = !{!5338, !5339, !5340}
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5336, file: !5275, line: 105, baseType: !591, size: 64)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5336, file: !5275, line: 106, baseType: !32, size: 32, offset: 64)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5336, file: !5275, line: 107, baseType: !7, size: 32, offset: 96)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2327, file: !2328, line: 1067, baseType: !5137, offset: 11136)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2327, file: !2328, line: 1099, baseType: !5343, size: 64, offset: 11136)
!5343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5344, size: 64)
!5344 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2328, line: 56, flags: DIFlagFwdDecl)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2327, file: !2328, line: 1103, baseType: !284, size: 128, offset: 11200)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2327, file: !2328, line: 1104, baseType: !5347, size: 64, offset: 11328)
!5347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5348, size: 64)
!5348 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2328, line: 46, flags: DIFlagFwdDecl)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2327, file: !2328, line: 1105, baseType: !1665, size: 192, offset: 11392)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2327, file: !2328, line: 1106, baseType: !7, size: 32, offset: 11584)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2327, file: !2328, line: 1109, baseType: !5352, size: 128, offset: 11648)
!5352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5353, size: 128, elements: !2947)
!5353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5354, size: 64)
!5354 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2328, line: 51, flags: DIFlagFwdDecl)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2327, file: !2328, line: 1110, baseType: !1665, size: 192, offset: 11776)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2327, file: !2328, line: 1111, baseType: !284, size: 128, offset: 11968)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2327, file: !2328, line: 1173, baseType: !5358, size: 64, offset: 12096)
!5358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5359, size: 64)
!5359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5360, line: 62, size: 256, align: 256, elements: !5361)
!5360 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5361 = !{!5362, !5363, !5364, !5369}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5359, file: !5360, line: 75, baseType: !493, size: 32)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5359, file: !5360, line: 90, baseType: !493, size: 32, offset: 32)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5359, file: !5360, line: 124, baseType: !5365, size: 64, offset: 64)
!5365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5359, file: !5360, line: 109, size: 64, elements: !5366)
!5366 = !{!5367, !5368}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5365, file: !5360, line: 110, baseType: !333, size: 64)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5365, file: !5360, line: 112, baseType: !333, size: 64)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5359, file: !5360, line: 144, baseType: !493, size: 32, offset: 128)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2327, file: !2328, line: 1174, baseType: !987, size: 32, offset: 12160)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2327, file: !2328, line: 1179, baseType: !312, size: 64, offset: 12224)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2327, file: !2328, line: 1182, baseType: !5373, size: 128, offset: 12288)
!5373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2268, line: 76, size: 128, elements: !5374)
!5374 = !{!5375, !5380, !5381}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5373, file: !2268, line: 85, baseType: !5376, size: 64)
!5376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5377, line: 7, size: 64, elements: !5378)
!5377 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5378 = !{!5379}
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5376, file: !5377, line: 12, baseType: !2468, size: 64)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5373, file: !2268, line: 88, baseType: !771, size: 8, offset: 64)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5373, file: !2268, line: 95, baseType: !771, size: 8, offset: 72)
!5382 = !DIDerivedType(tag: DW_TAG_member, scope: !2327, file: !2328, line: 1184, baseType: !5383, size: 128, offset: 12416)
!5383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2327, file: !2328, line: 1184, size: 128, elements: !5384)
!5384 = !{!5385, !5386}
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5383, file: !2328, line: 1185, baseType: !568, size: 32)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5383, file: !2328, line: 1186, baseType: !299, size: 128, align: 64)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2327, file: !2328, line: 1190, baseType: !1883, size: 64, offset: 12544)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2327, file: !2328, line: 1192, baseType: !5389, size: 128, offset: 12608)
!5389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2268, line: 64, size: 128, elements: !5390)
!5390 = !{!5391, !5392, !5393}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5389, file: !2268, line: 65, baseType: !1719, size: 64)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5389, file: !2268, line: 67, baseType: !493, size: 32, offset: 64)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5389, file: !2268, line: 68, baseType: !493, size: 32, offset: 96)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2327, file: !2328, line: 1206, baseType: !32, size: 32, offset: 12736)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2327, file: !2328, line: 1207, baseType: !32, size: 32, offset: 12768)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2327, file: !2328, line: 1209, baseType: !312, size: 64, offset: 12800)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2327, file: !2328, line: 1219, baseType: !331, size: 64, offset: 12864)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2327, file: !2328, line: 1220, baseType: !331, size: 64, offset: 12928)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2327, file: !2328, line: 1317, baseType: !32, size: 32, offset: 12992)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2327, file: !2328, line: 1319, baseType: !2326, size: 64, offset: 13056)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2327, file: !2328, line: 1322, baseType: !5402, size: 64, offset: 13120)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5404, line: 56, size: 512, elements: !5405)
!5404 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5405 = !{!5406, !5407, !5408, !5409, !5410, !5411, !5412, !5414}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5403, file: !5404, line: 57, baseType: !5402, size: 64)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5403, file: !5404, line: 58, baseType: !591, size: 64, offset: 64)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5403, file: !5404, line: 59, baseType: !312, size: 64, offset: 128)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5403, file: !5404, line: 60, baseType: !312, size: 64, offset: 192)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5403, file: !5404, line: 61, baseType: !1801, size: 64, offset: 256)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5403, file: !5404, line: 62, baseType: !7, size: 32, offset: 320)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5403, file: !5404, line: 63, baseType: !5413, size: 64, offset: 384)
!5413 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !277, line: 153, baseType: !331)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5403, file: !5404, line: 64, baseType: !3276, size: 64, offset: 448)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2327, file: !2328, line: 1326, baseType: !568, size: 32, offset: 13184)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2327, file: !2328, line: 1342, baseType: !591, size: 64, offset: 13248)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2327, file: !2328, line: 1343, baseType: !333, size: 64, offset: 13312)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2327, file: !2328, line: 1344, baseType: !331, size: 64, offset: 13376)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2327, file: !2328, line: 1345, baseType: !333, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2327, file: !2328, line: 1346, baseType: !333, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2327, file: !2328, line: 1347, baseType: !333, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2327, file: !2328, line: 1348, baseType: !299, size: 128, align: 64, offset: 13504)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2327, file: !2328, line: 1358, baseType: !5424, size: 34816, offset: 13824)
!5424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5425, line: 485, size: 34816, elements: !5426)
!5425 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5426 = !{!5427, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5456, !5457, !5458, !5459, !5460, !5461, !5464, !5465, !5466}
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5424, file: !5425, line: 487, baseType: !5428, size: 192)
!5428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5429, size: 192, elements: !1592)
!5429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5430, line: 16, size: 64, elements: !5431)
!5430 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5431 = !{!5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444}
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5429, file: !5430, line: 17, baseType: !581, size: 16)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5429, file: !5430, line: 18, baseType: !581, size: 16, offset: 16)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5429, file: !5430, line: 19, baseType: !581, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5429, file: !5430, line: 19, baseType: !581, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5429, file: !5430, line: 19, baseType: !581, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5429, file: !5430, line: 19, baseType: !581, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5429, file: !5430, line: 19, baseType: !581, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5429, file: !5430, line: 20, baseType: !581, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5429, file: !5430, line: 20, baseType: !581, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5429, file: !5430, line: 20, baseType: !581, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5429, file: !5430, line: 20, baseType: !581, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5429, file: !5430, line: 20, baseType: !581, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5429, file: !5430, line: 20, baseType: !581, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5424, file: !5425, line: 491, baseType: !312, size: 64, offset: 192)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5424, file: !5425, line: 495, baseType: !476, size: 16, offset: 256)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5424, file: !5425, line: 496, baseType: !476, size: 16, offset: 272)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5424, file: !5425, line: 497, baseType: !476, size: 16, offset: 288)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5424, file: !5425, line: 498, baseType: !476, size: 16, offset: 304)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5424, file: !5425, line: 502, baseType: !312, size: 64, offset: 320)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5424, file: !5425, line: 503, baseType: !312, size: 64, offset: 384)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5424, file: !5425, line: 514, baseType: !5453, size: 256, offset: 448)
!5453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5454, size: 256, elements: !2272)
!5454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5455, size: 64)
!5455 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !5425, line: 483, flags: DIFlagFwdDecl)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5424, file: !5425, line: 516, baseType: !312, size: 64, offset: 704)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5424, file: !5425, line: 518, baseType: !312, size: 64, offset: 768)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5424, file: !5425, line: 520, baseType: !312, size: 64, offset: 832)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5424, file: !5425, line: 521, baseType: !312, size: 64, offset: 896)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5424, file: !5425, line: 522, baseType: !312, size: 64, offset: 960)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5424, file: !5425, line: 528, baseType: !5462, size: 64, offset: 1024)
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5463, size: 64)
!5463 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5425, line: 10, flags: DIFlagFwdDecl)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5424, file: !5425, line: 535, baseType: !312, size: 64, offset: 1088)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5424, file: !5425, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5424, file: !5425, line: 540, baseType: !5467, size: 33280, offset: 1536)
!5467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !5468, line: 317, size: 33280, elements: !5469)
!5468 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!5469 = !{!5470, !5471, !5472}
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !5467, file: !5468, line: 330, baseType: !7, size: 32)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !5467, file: !5468, line: 337, baseType: !312, size: 64, offset: 64)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5467, file: !5468, line: 348, baseType: !5473, size: 32768, offset: 512)
!5473 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !5468, line: 304, size: 32768, elements: !5474)
!5474 = !{!5475, !5488, !5525, !5575, !5588}
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !5473, file: !5468, line: 305, baseType: !5476, size: 896)
!5476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !5468, line: 12, size: 896, elements: !5477)
!5477 = !{!5478, !5479, !5480, !5481, !5482, !5483, !5484, !5485, !5487}
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5476, file: !5468, line: 13, baseType: !987, size: 32)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5476, file: !5468, line: 14, baseType: !987, size: 32, offset: 32)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5476, file: !5468, line: 15, baseType: !987, size: 32, offset: 64)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5476, file: !5468, line: 16, baseType: !987, size: 32, offset: 96)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5476, file: !5468, line: 17, baseType: !987, size: 32, offset: 128)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5476, file: !5468, line: 18, baseType: !987, size: 32, offset: 160)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5476, file: !5468, line: 19, baseType: !987, size: 32, offset: 192)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5476, file: !5468, line: 22, baseType: !5486, size: 640, offset: 224)
!5486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 640, elements: !900)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5476, file: !5468, line: 25, baseType: !987, size: 32, offset: 864)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !5473, file: !5468, line: 306, baseType: !5489, size: 4096, align: 128)
!5489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !5468, line: 34, size: 4096, align: 128, elements: !5490)
!5490 = !{!5491, !5492, !5493, !5494, !5495, !5510, !5511, !5512, !5514, !5516, !5520}
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5489, file: !5468, line: 35, baseType: !581, size: 16)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5489, file: !5468, line: 36, baseType: !581, size: 16, offset: 16)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5489, file: !5468, line: 37, baseType: !581, size: 16, offset: 32)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !5489, file: !5468, line: 38, baseType: !581, size: 16, offset: 48)
!5495 = !DIDerivedType(tag: DW_TAG_member, scope: !5489, file: !5468, line: 39, baseType: !5496, size: 128, offset: 64)
!5496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5489, file: !5468, line: 39, size: 128, elements: !5497)
!5497 = !{!5498, !5503}
!5498 = !DIDerivedType(tag: DW_TAG_member, scope: !5496, file: !5468, line: 40, baseType: !5499, size: 128)
!5499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5496, file: !5468, line: 40, size: 128, elements: !5500)
!5500 = !{!5501, !5502}
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !5499, file: !5468, line: 41, baseType: !331, size: 64)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !5499, file: !5468, line: 42, baseType: !331, size: 64, offset: 64)
!5503 = !DIDerivedType(tag: DW_TAG_member, scope: !5496, file: !5468, line: 44, baseType: !5504, size: 128)
!5504 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5496, file: !5468, line: 44, size: 128, elements: !5505)
!5505 = !{!5506, !5507, !5508, !5509}
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5504, file: !5468, line: 45, baseType: !987, size: 32)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5504, file: !5468, line: 46, baseType: !987, size: 32, offset: 32)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5504, file: !5468, line: 47, baseType: !987, size: 32, offset: 64)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5504, file: !5468, line: 48, baseType: !987, size: 32, offset: 96)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !5489, file: !5468, line: 51, baseType: !987, size: 32, offset: 192)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !5489, file: !5468, line: 52, baseType: !987, size: 32, offset: 224)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5489, file: !5468, line: 55, baseType: !5513, size: 1024, offset: 256)
!5513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 1024, elements: !819)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !5489, file: !5468, line: 58, baseType: !5515, size: 2048, offset: 1280)
!5515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 2048, elements: !3813)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5489, file: !5468, line: 60, baseType: !5517, size: 384, offset: 3328)
!5517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 384, elements: !5518)
!5518 = !{!5519}
!5519 = !DISubrange(count: 12)
!5520 = !DIDerivedType(tag: DW_TAG_member, scope: !5489, file: !5468, line: 62, baseType: !5521, size: 384, offset: 3712)
!5521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5489, file: !5468, line: 62, size: 384, elements: !5522)
!5522 = !{!5523, !5524}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !5521, file: !5468, line: 63, baseType: !5517, size: 384)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !5521, file: !5468, line: 64, baseType: !5517, size: 384)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5473, file: !5468, line: 307, baseType: !5526, size: 1088)
!5526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !5468, line: 79, size: 1088, elements: !5527)
!5527 = !{!5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542, !5574}
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5526, file: !5468, line: 80, baseType: !987, size: 32)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5526, file: !5468, line: 81, baseType: !987, size: 32, offset: 32)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5526, file: !5468, line: 82, baseType: !987, size: 32, offset: 64)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5526, file: !5468, line: 83, baseType: !987, size: 32, offset: 96)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5526, file: !5468, line: 84, baseType: !987, size: 32, offset: 128)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5526, file: !5468, line: 85, baseType: !987, size: 32, offset: 160)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5526, file: !5468, line: 86, baseType: !987, size: 32, offset: 192)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5526, file: !5468, line: 88, baseType: !5486, size: 640, offset: 224)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !5526, file: !5468, line: 89, baseType: !794, size: 8, offset: 864)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5526, file: !5468, line: 90, baseType: !794, size: 8, offset: 872)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !5526, file: !5468, line: 91, baseType: !794, size: 8, offset: 880)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !5526, file: !5468, line: 92, baseType: !794, size: 8, offset: 888)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !5526, file: !5468, line: 93, baseType: !794, size: 8, offset: 896)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !5526, file: !5468, line: 94, baseType: !794, size: 8, offset: 904)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5526, file: !5468, line: 95, baseType: !5543, size: 64, offset: 960)
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 64)
!5544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !5545, line: 11, size: 128, elements: !5546)
!5545 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!5546 = !{!5547, !5548}
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !5544, file: !5545, line: 12, baseType: !998, size: 64)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5544, file: !5545, line: 13, baseType: !5549, size: 64, offset: 64)
!5549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5550, size: 64)
!5550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !5551, line: 56, size: 1344, elements: !5552)
!5551 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!5552 = !{!5553, !5554, !5555, !5556, !5557, !5558, !5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573}
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5550, file: !5551, line: 61, baseType: !312, size: 64)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5550, file: !5551, line: 62, baseType: !312, size: 64, offset: 64)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !5550, file: !5551, line: 63, baseType: !312, size: 64, offset: 128)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5550, file: !5551, line: 64, baseType: !312, size: 64, offset: 192)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !5550, file: !5551, line: 65, baseType: !312, size: 64, offset: 256)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !5550, file: !5551, line: 66, baseType: !312, size: 64, offset: 320)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !5550, file: !5551, line: 68, baseType: !312, size: 64, offset: 384)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !5550, file: !5551, line: 69, baseType: !312, size: 64, offset: 448)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !5550, file: !5551, line: 70, baseType: !312, size: 64, offset: 512)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !5550, file: !5551, line: 71, baseType: !312, size: 64, offset: 576)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !5550, file: !5551, line: 72, baseType: !312, size: 64, offset: 640)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !5550, file: !5551, line: 73, baseType: !312, size: 64, offset: 704)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5550, file: !5551, line: 74, baseType: !312, size: 64, offset: 768)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !5550, file: !5551, line: 75, baseType: !312, size: 64, offset: 832)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !5550, file: !5551, line: 76, baseType: !312, size: 64, offset: 896)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !5550, file: !5551, line: 81, baseType: !312, size: 64, offset: 960)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5550, file: !5551, line: 83, baseType: !312, size: 64, offset: 1024)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !5550, file: !5551, line: 84, baseType: !312, size: 64, offset: 1088)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5550, file: !5551, line: 85, baseType: !312, size: 64, offset: 1152)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5550, file: !5551, line: 86, baseType: !312, size: 64, offset: 1216)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !5550, file: !5551, line: 87, baseType: !312, size: 64, offset: 1280)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !5526, file: !5468, line: 96, baseType: !987, size: 32, offset: 1024)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !5473, file: !5468, line: 308, baseType: !5576, size: 4608, align: 512)
!5576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !5468, line: 289, size: 4608, align: 512, elements: !5577)
!5577 = !{!5578, !5579, !5586}
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !5576, file: !5468, line: 290, baseType: !5489, size: 4096, align: 128)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5576, file: !5468, line: 291, baseType: !5580, size: 512, offset: 4096)
!5580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !5468, line: 268, size: 512, elements: !5581)
!5581 = !{!5582, !5583, !5584}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !5580, file: !5468, line: 269, baseType: !331, size: 64)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !5580, file: !5468, line: 270, baseType: !331, size: 64, offset: 64)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5580, file: !5468, line: 271, baseType: !5585, size: 384, offset: 128)
!5585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 384, elements: !999)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !5576, file: !5468, line: 292, baseType: !5587, offset: 4608)
!5587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, elements: !483)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !5473, file: !5468, line: 309, baseType: !5589, size: 32768)
!5589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 32768, elements: !5590)
!5590 = !{!5591}
!5591 = !DISubrange(count: 4096)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2323, file: !1721, line: 378, baseType: !5593, size: 64, offset: 64)
!5593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2319, file: !1721, line: 384, baseType: !2825, size: 192, offset: 192)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2095, file: !1721, line: 500, baseType: !1670, offset: 6656)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2095, file: !1721, line: 501, baseType: !5597, size: 64, offset: 6656)
!5597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5598, size: 64)
!5598 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1721, line: 387, flags: DIFlagFwdDecl)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2095, file: !1721, line: 516, baseType: !2612, size: 64, offset: 6720)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2095, file: !1721, line: 519, baseType: !1315, size: 64, offset: 6784)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2095, file: !1721, line: 521, baseType: !5602, size: 64, offset: 6848)
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5603, size: 64)
!5603 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1721, line: 521, flags: DIFlagFwdDecl)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2095, file: !1721, line: 545, baseType: !383, size: 32, offset: 6912)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2095, file: !1721, line: 548, baseType: !771, size: 8, offset: 6944)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2095, file: !1721, line: 550, baseType: !5607, offset: 6952)
!5607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !5608, line: 142, elements: !1587)
!5608 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2095, file: !1721, line: 554, baseType: !2764, size: 256, offset: 6976)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2095, file: !1721, line: 557, baseType: !987, size: 32, offset: 7232)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2092, file: !1721, line: 565, baseType: !4787, offset: 7296)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2088, file: !1721, line: 151, baseType: !383, size: 32)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2080, file: !1721, line: 156, baseType: !1670, offset: 256)
!5614 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 159, baseType: !5615, size: 128)
!5615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 159, size: 128, elements: !5616)
!5616 = !{!5617, !5688}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !5615, file: !1721, line: 161, baseType: !5618, size: 64)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5619, size: 64)
!5619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !5620, line: 110, size: 1152, elements: !5621)
!5620 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!5621 = !{!5622, !5632, !5653, !5654, !5655, !5662, !5663, !5675, !5676, !5677}
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !5619, file: !5620, line: 111, baseType: !5623, size: 384)
!5623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !5620, line: 19, size: 384, elements: !5624)
!5624 = !{!5625, !5627, !5628, !5629, !5630, !5631}
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !5623, file: !5620, line: 20, baseType: !5626, size: 64)
!5626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !5623, file: !5620, line: 21, baseType: !5626, size: 64, offset: 64)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !5623, file: !5620, line: 22, baseType: !5626, size: 64, offset: 128)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5623, file: !5620, line: 23, baseType: !312, size: 64, offset: 192)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !5623, file: !5620, line: 24, baseType: !312, size: 64, offset: 256)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5623, file: !5620, line: 25, baseType: !312, size: 64, offset: 320)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5619, file: !5620, line: 112, baseType: !5633, size: 64, offset: 384)
!5633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5634, size: 64)
!5634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !5635, line: 105, size: 128, elements: !5636)
!5635 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!5636 = !{!5637, !5638}
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !5634, file: !5635, line: 110, baseType: !312, size: 64)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5634, file: !5635, line: 118, baseType: !5639, size: 64, offset: 64)
!5639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5640, size: 64)
!5640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !5635, line: 95, size: 448, elements: !5641)
!5641 = !{!5642, !5643, !5648, !5649, !5650, !5651, !5652}
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5640, file: !5635, line: 96, baseType: !371, size: 64)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5640, file: !5635, line: 97, baseType: !5644, size: 64, offset: 64)
!5644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5645 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !5635, line: 60, baseType: !5646)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{null, !5633}
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !5640, file: !5635, line: 98, baseType: !5644, size: 64, offset: 128)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !5640, file: !5635, line: 99, baseType: !771, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !5640, file: !5635, line: 100, baseType: !771, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5640, file: !5635, line: 101, baseType: !299, size: 128, align: 64, offset: 256)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5640, file: !5635, line: 102, baseType: !5633, size: 64, offset: 384)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !5619, file: !5620, line: 113, baseType: !5634, size: 128, offset: 448)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5619, file: !5620, line: 114, baseType: !2825, size: 192, offset: 576)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5619, file: !5620, line: 115, baseType: !5656, size: 32, offset: 768)
!5656 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !5620, line: 59, baseType: !7, size: 32, elements: !5657)
!5657 = !{!5658, !5659, !5660, !5661}
!5658 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!5659 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!5660 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!5661 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5619, file: !5620, line: 116, baseType: !7, size: 32, offset: 800)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5619, file: !5620, line: 117, baseType: !5664, size: 64, offset: 832)
!5664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5665, size: 64)
!5665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5666)
!5666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !5620, line: 67, size: 256, elements: !5667)
!5667 = !{!5668, !5669, !5673, !5674}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !5666, file: !5620, line: 73, baseType: !1821, size: 64)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !5666, file: !5620, line: 78, baseType: !5670, size: 64, offset: 64)
!5670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5671, size: 64)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{null, !5618}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !5666, file: !5620, line: 83, baseType: !5670, size: 64, offset: 128)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !5666, file: !5620, line: 89, baseType: !2144, size: 64, offset: 192)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5619, file: !5620, line: 118, baseType: !591, size: 64, offset: 896)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !5619, file: !5620, line: 119, baseType: !32, size: 32, offset: 960)
!5677 = !DIDerivedType(tag: DW_TAG_member, scope: !5619, file: !5620, line: 120, baseType: !5678, size: 128, offset: 1024)
!5678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5619, file: !5620, line: 120, size: 128, elements: !5679)
!5679 = !{!5680, !5686}
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !5678, file: !5620, line: 121, baseType: !5681, size: 128)
!5681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !5682, line: 6, size: 128, elements: !5683)
!5682 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!5683 = !{!5684, !5685}
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5681, file: !5682, line: 7, baseType: !331, size: 64)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5681, file: !5682, line: 8, baseType: !331, size: 64, offset: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !5678, file: !5620, line: 122, baseType: !5687)
!5687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5681, elements: !483)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !5615, file: !1721, line: 162, baseType: !591, size: 64, offset: 64)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1725, file: !1721, line: 176, baseType: !299, size: 128, align: 64)
!5690 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 179, baseType: !5691, size: 32, offset: 384)
!5691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 179, size: 32, elements: !5692)
!5692 = !{!5693, !5694, !5695, !5696}
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !5691, file: !1721, line: 184, baseType: !383, size: 32)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !5691, file: !1721, line: 192, baseType: !7, size: 32)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5691, file: !1721, line: 194, baseType: !7, size: 32)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !5691, file: !1721, line: 195, baseType: !32, size: 32)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1720, file: !1721, line: 199, baseType: !383, size: 32, offset: 416)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1600, file: !1317, line: 1964, baseType: !5699, size: 64, offset: 1344)
!5699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5700, size: 64)
!5700 = !DISubroutineType(types: !5701)
!5701 = !{!998, !1545, !5702}
!5702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5703, size: 64)
!5703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !5704, line: 12, size: 256, elements: !5705)
!5704 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!5705 = !{!5706, !5707, !5708, !5709, !5710}
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !5703, file: !5704, line: 13, baseType: !1742, size: 32)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !5703, file: !5704, line: 16, baseType: !32, size: 32, offset: 32)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !5703, file: !5704, line: 23, baseType: !312, size: 64, offset: 64)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !5703, file: !5704, line: 30, baseType: !312, size: 64, offset: 128)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !5703, file: !5704, line: 33, baseType: !5711, size: 64, offset: 192)
!5711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5712, size: 64)
!5712 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1721, line: 27, flags: DIFlagFwdDecl)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1600, file: !1317, line: 1966, baseType: !5699, size: 64, offset: 1408)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1546, file: !1317, line: 1424, baseType: !5715, size: 64, offset: 448)
!5715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5716, size: 64)
!5716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5717)
!5717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !5718, line: 322, size: 704, elements: !5719)
!5718 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!5719 = !{!5720, !5771, !5775, !5779, !5780, !5781, !5782, !5783, !5788, !5793, !5797}
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !5717, file: !5718, line: 323, baseType: !5721, size: 64)
!5721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5722, size: 64)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{!32, !5724}
!5724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5725, size: 64)
!5725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !5718, line: 294, size: 1600, elements: !5726)
!5726 = !{!5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5756, !5757, !5758}
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !5725, file: !5718, line: 295, baseType: !276, size: 128)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !5725, file: !5718, line: 296, baseType: !284, size: 128, offset: 128)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !5725, file: !5718, line: 297, baseType: !284, size: 128, offset: 256)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !5725, file: !5718, line: 298, baseType: !284, size: 128, offset: 384)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !5725, file: !5718, line: 299, baseType: !1665, size: 192, offset: 512)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !5725, file: !5718, line: 300, baseType: !1670, offset: 704)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !5725, file: !5718, line: 301, baseType: !383, size: 32, offset: 704)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !5725, file: !5718, line: 302, baseType: !1545, size: 64, offset: 768)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !5725, file: !5718, line: 303, baseType: !5736, size: 64, offset: 832)
!5736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !5718, line: 68, size: 64, elements: !5737)
!5737 = !{!5738, !5750}
!5738 = !DIDerivedType(tag: DW_TAG_member, scope: !5736, file: !5718, line: 69, baseType: !5739, size: 32)
!5739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5736, file: !5718, line: 69, size: 32, elements: !5740)
!5740 = !{!5741, !5742, !5743}
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5739, file: !5718, line: 70, baseType: !1382, size: 32)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !5739, file: !5718, line: 71, baseType: !1390, size: 32)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !5739, file: !5718, line: 72, baseType: !5744, size: 32)
!5744 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !5745, line: 24, baseType: !5746)
!5745 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!5746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5745, line: 22, size: 32, elements: !5747)
!5747 = !{!5748}
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5746, file: !5745, line: 23, baseType: !5749, size: 32)
!5749 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !5745, line: 20, baseType: !1388)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5736, file: !5718, line: 74, baseType: !5751, size: 32, offset: 32)
!5751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !5718, line: 54, baseType: !7, size: 32, elements: !5752)
!5752 = !{!5753, !5754, !5755}
!5753 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!5754 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!5755 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !5725, file: !5718, line: 304, baseType: !1476, size: 64, offset: 896)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !5725, file: !5718, line: 305, baseType: !312, size: 64, offset: 960)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !5725, file: !5718, line: 306, baseType: !5759, size: 576, offset: 1024)
!5759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !5718, line: 205, size: 576, elements: !5760)
!5760 = !{!5761, !5763, !5764, !5765, !5766, !5767, !5768, !5769, !5770}
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !5759, file: !5718, line: 206, baseType: !5762, size: 64)
!5762 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !5718, line: 66, baseType: !379)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !5759, file: !5718, line: 207, baseType: !5762, size: 64, offset: 64)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !5759, file: !5718, line: 208, baseType: !5762, size: 64, offset: 128)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !5759, file: !5718, line: 209, baseType: !5762, size: 64, offset: 192)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !5759, file: !5718, line: 210, baseType: !5762, size: 64, offset: 256)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !5759, file: !5718, line: 211, baseType: !5762, size: 64, offset: 320)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !5759, file: !5718, line: 212, baseType: !5762, size: 64, offset: 384)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !5759, file: !5718, line: 213, baseType: !1483, size: 64, offset: 448)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !5759, file: !5718, line: 214, baseType: !1483, size: 64, offset: 512)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !5717, file: !5718, line: 324, baseType: !5772, size: 64, offset: 64)
!5772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5773, size: 64)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{!5724, !1545, !32}
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !5717, file: !5718, line: 325, baseType: !5776, size: 64, offset: 128)
!5776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5777, size: 64)
!5777 = !DISubroutineType(types: !5778)
!5778 = !{null, !5724}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !5717, file: !5718, line: 326, baseType: !5721, size: 64, offset: 192)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !5717, file: !5718, line: 327, baseType: !5721, size: 64, offset: 256)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !5717, file: !5718, line: 328, baseType: !5721, size: 64, offset: 320)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !5717, file: !5718, line: 329, baseType: !1628, size: 64, offset: 384)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !5717, file: !5718, line: 332, baseType: !5784, size: 64, offset: 448)
!5784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5785, size: 64)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{!5787, !1375}
!5787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5762, size: 64)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !5717, file: !5718, line: 333, baseType: !5789, size: 64, offset: 512)
!5789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5790, size: 64)
!5790 = !DISubroutineType(types: !5791)
!5791 = !{!32, !1375, !5792}
!5792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5744, size: 64)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !5717, file: !5718, line: 335, baseType: !5794, size: 64, offset: 576)
!5794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5795, size: 64)
!5795 = !DISubroutineType(types: !5796)
!5796 = !{!32, !1375, !5787}
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !5717, file: !5718, line: 337, baseType: !5798, size: 64, offset: 640)
!5798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5799, size: 64)
!5799 = !DISubroutineType(types: !5800)
!5800 = !{!32, !1545, !5801}
!5801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 64)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1546, file: !1317, line: 1425, baseType: !5803, size: 64, offset: 512)
!5803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5804, size: 64)
!5804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5805)
!5805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !5718, line: 428, size: 704, elements: !5806)
!5806 = !{!5807, !5811, !5812, !5816, !5817, !5818, !5833, !5856, !5860, !5861, !5884}
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !5805, file: !5718, line: 429, baseType: !5808, size: 64)
!5808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5809, size: 64)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{!32, !1545, !32, !32, !1492}
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !5805, file: !5718, line: 430, baseType: !1628, size: 64, offset: 64)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !5805, file: !5718, line: 431, baseType: !5813, size: 64, offset: 128)
!5813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5814, size: 64)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{!32, !1545, !7}
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !5805, file: !5718, line: 432, baseType: !5813, size: 64, offset: 192)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !5805, file: !5718, line: 433, baseType: !1628, size: 64, offset: 256)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !5805, file: !5718, line: 434, baseType: !5819, size: 64, offset: 320)
!5819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5820, size: 64)
!5820 = !DISubroutineType(types: !5821)
!5821 = !{!32, !1545, !32, !5822}
!5822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5823, size: 64)
!5823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !5718, line: 415, size: 256, elements: !5824)
!5824 = !{!5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832}
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !5823, file: !5718, line: 416, baseType: !32, size: 32)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !5823, file: !5718, line: 417, baseType: !7, size: 32, offset: 32)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !5823, file: !5718, line: 418, baseType: !7, size: 32, offset: 64)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !5823, file: !5718, line: 420, baseType: !7, size: 32, offset: 96)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !5823, file: !5718, line: 421, baseType: !7, size: 32, offset: 128)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !5823, file: !5718, line: 422, baseType: !7, size: 32, offset: 160)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !5823, file: !5718, line: 423, baseType: !7, size: 32, offset: 192)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !5823, file: !5718, line: 424, baseType: !7, size: 32, offset: 224)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !5805, file: !5718, line: 435, baseType: !5834, size: 64, offset: 384)
!5834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5835, size: 64)
!5835 = !DISubroutineType(types: !5836)
!5836 = !{!32, !1545, !5736, !5837}
!5837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5838, size: 64)
!5838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !5718, line: 343, size: 960, elements: !5839)
!5839 = !{!5840, !5841, !5842, !5843, !5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !5838, file: !5718, line: 344, baseType: !32, size: 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !5838, file: !5718, line: 345, baseType: !331, size: 64, offset: 64)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !5838, file: !5718, line: 346, baseType: !331, size: 64, offset: 128)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !5838, file: !5718, line: 347, baseType: !331, size: 64, offset: 192)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !5838, file: !5718, line: 348, baseType: !331, size: 64, offset: 256)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !5838, file: !5718, line: 349, baseType: !331, size: 64, offset: 320)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !5838, file: !5718, line: 350, baseType: !331, size: 64, offset: 384)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !5838, file: !5718, line: 351, baseType: !377, size: 64, offset: 448)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !5838, file: !5718, line: 353, baseType: !377, size: 64, offset: 512)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !5838, file: !5718, line: 354, baseType: !32, size: 32, offset: 576)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !5838, file: !5718, line: 355, baseType: !32, size: 32, offset: 608)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !5838, file: !5718, line: 356, baseType: !331, size: 64, offset: 640)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !5838, file: !5718, line: 357, baseType: !331, size: 64, offset: 704)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !5838, file: !5718, line: 358, baseType: !331, size: 64, offset: 768)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !5838, file: !5718, line: 359, baseType: !377, size: 64, offset: 832)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !5838, file: !5718, line: 360, baseType: !32, size: 32, offset: 896)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !5805, file: !5718, line: 436, baseType: !5857, size: 64, offset: 448)
!5857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5858, size: 64)
!5858 = !DISubroutineType(types: !5859)
!5859 = !{!32, !1545, !5801, !5837}
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !5805, file: !5718, line: 438, baseType: !5834, size: 64, offset: 512)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !5805, file: !5718, line: 439, baseType: !5862, size: 64, offset: 576)
!5862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5863, size: 64)
!5863 = !DISubroutineType(types: !5864)
!5864 = !{!32, !1545, !5865}
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5866, size: 64)
!5866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !5718, line: 409, size: 1408, elements: !5867)
!5867 = !{!5868, !5869}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !5866, file: !5718, line: 410, baseType: !7, size: 32)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !5866, file: !5718, line: 411, baseType: !5870, size: 1344, offset: 64)
!5870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5871, size: 1344, elements: !1592)
!5871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !5718, line: 395, size: 448, elements: !5872)
!5872 = !{!5873, !5874, !5875, !5876, !5877, !5878, !5879, !5880, !5881, !5883}
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5871, file: !5718, line: 396, baseType: !7, size: 32)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !5871, file: !5718, line: 397, baseType: !7, size: 32, offset: 32)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !5871, file: !5718, line: 399, baseType: !7, size: 32, offset: 64)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !5871, file: !5718, line: 400, baseType: !7, size: 32, offset: 96)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !5871, file: !5718, line: 401, baseType: !7, size: 32, offset: 128)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !5871, file: !5718, line: 402, baseType: !7, size: 32, offset: 160)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !5871, file: !5718, line: 403, baseType: !7, size: 32, offset: 192)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !5871, file: !5718, line: 404, baseType: !335, size: 64, offset: 256)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !5871, file: !5718, line: 405, baseType: !5882, size: 64, offset: 320)
!5882 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !277, line: 126, baseType: !331)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !5871, file: !5718, line: 406, baseType: !5882, size: 64, offset: 384)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !5805, file: !5718, line: 440, baseType: !5813, size: 64, offset: 640)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1546, file: !1317, line: 1426, baseType: !5886, size: 64, offset: 576)
!5886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5887, size: 64)
!5887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5888)
!5888 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !1317, line: 49, flags: DIFlagFwdDecl)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1546, file: !1317, line: 1427, baseType: !312, size: 64, offset: 640)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1546, file: !1317, line: 1428, baseType: !312, size: 64, offset: 704)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1546, file: !1317, line: 1429, baseType: !312, size: 64, offset: 768)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1546, file: !1317, line: 1430, baseType: !1338, size: 64, offset: 832)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1546, file: !1317, line: 1431, baseType: !1755, size: 256, offset: 896)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1546, file: !1317, line: 1432, baseType: !32, size: 32, offset: 1152)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1546, file: !1317, line: 1433, baseType: !383, size: 32, offset: 1184)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1546, file: !1317, line: 1437, baseType: !5897, size: 64, offset: 1216)
!5897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5898, size: 64)
!5898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5899, size: 64)
!5899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5900)
!5900 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !1317, line: 1437, flags: DIFlagFwdDecl)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1546, file: !1317, line: 1449, baseType: !5902, size: 64, offset: 1280)
!5902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1354, line: 34, size: 64, elements: !5903)
!5903 = !{!5904}
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !5902, file: !1354, line: 35, baseType: !1357, size: 64)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1546, file: !1317, line: 1450, baseType: !284, size: 128, offset: 1344)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1546, file: !1317, line: 1451, baseType: !5907, size: 64, offset: 1472)
!5907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5908, size: 64)
!5908 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1317, line: 699, flags: DIFlagFwdDecl)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1546, file: !1317, line: 1452, baseType: !5224, size: 64, offset: 1536)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1546, file: !1317, line: 1453, baseType: !5911, size: 64, offset: 1600)
!5911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5912, size: 64)
!5912 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1317, line: 1453, flags: DIFlagFwdDecl)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1546, file: !1317, line: 1454, baseType: !276, size: 128, offset: 1664)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1546, file: !1317, line: 1455, baseType: !7, size: 32, offset: 1792)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1546, file: !1317, line: 1456, baseType: !5916, size: 2432, offset: 1856)
!5916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !5718, line: 518, size: 2432, elements: !5917)
!5917 = !{!5918, !5919, !5920, !5922, !5954}
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5916, file: !5718, line: 519, baseType: !7, size: 32)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !5916, file: !5718, line: 520, baseType: !1755, size: 256, offset: 64)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !5916, file: !5718, line: 521, baseType: !5921, size: 192, offset: 320)
!5921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 192, elements: !1592)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5916, file: !5718, line: 522, baseType: !5923, size: 1728, offset: 512)
!5923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5924, size: 1728, elements: !1592)
!5924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !5718, line: 222, size: 576, elements: !5925)
!5925 = !{!5926, !5946, !5947, !5948, !5949, !5950, !5951, !5952, !5953}
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !5924, file: !5718, line: 223, baseType: !5927, size: 64)
!5927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5928, size: 64)
!5928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !5718, line: 443, size: 256, elements: !5929)
!5929 = !{!5930, !5931, !5944, !5945}
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !5928, file: !5718, line: 444, baseType: !32, size: 32)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !5928, file: !5718, line: 445, baseType: !5932, size: 64, offset: 64)
!5932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5933, size: 64)
!5933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5934)
!5934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !5718, line: 310, size: 512, elements: !5935)
!5935 = !{!5936, !5937, !5938, !5939, !5940, !5941, !5942, !5943}
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !5934, file: !5718, line: 311, baseType: !1628, size: 64)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !5934, file: !5718, line: 312, baseType: !1628, size: 64, offset: 64)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !5934, file: !5718, line: 313, baseType: !1628, size: 64, offset: 128)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !5934, file: !5718, line: 314, baseType: !1628, size: 64, offset: 192)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !5934, file: !5718, line: 315, baseType: !5721, size: 64, offset: 256)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !5934, file: !5718, line: 316, baseType: !5721, size: 64, offset: 320)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !5934, file: !5718, line: 317, baseType: !5721, size: 64, offset: 384)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !5934, file: !5718, line: 318, baseType: !5798, size: 64, offset: 448)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !5928, file: !5718, line: 446, baseType: !980, size: 64, offset: 128)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !5928, file: !5718, line: 447, baseType: !5927, size: 64, offset: 192)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !5924, file: !5718, line: 224, baseType: !32, size: 32, offset: 64)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !5924, file: !5718, line: 226, baseType: !284, size: 128, offset: 128)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !5924, file: !5718, line: 227, baseType: !312, size: 64, offset: 256)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !5924, file: !5718, line: 228, baseType: !7, size: 32, offset: 320)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !5924, file: !5718, line: 229, baseType: !7, size: 32, offset: 352)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !5924, file: !5718, line: 230, baseType: !5762, size: 64, offset: 384)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !5924, file: !5718, line: 231, baseType: !5762, size: 64, offset: 448)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !5924, file: !5718, line: 232, baseType: !591, size: 64, offset: 512)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5916, file: !5718, line: 523, baseType: !5955, size: 192, offset: 2240)
!5955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5932, size: 192, elements: !1592)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1546, file: !1317, line: 1458, baseType: !5957, size: 2112, offset: 4288)
!5957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !1317, line: 1410, size: 2112, elements: !5958)
!5958 = !{!5959, !5960, !5961}
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !5957, file: !1317, line: 1411, baseType: !32, size: 32)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !5957, file: !1317, line: 1412, baseType: !1889, size: 128, offset: 64)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !5957, file: !1317, line: 1413, baseType: !5962, size: 1920, offset: 192)
!5962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5963, size: 1920, elements: !1592)
!5963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !5964, line: 12, size: 640, elements: !5965)
!5964 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!5965 = !{!5966, !5974, !5976, !5981, !5982}
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !5963, file: !5964, line: 13, baseType: !5967, size: 320)
!5967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !5968, line: 17, size: 320, elements: !5969)
!5968 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!5969 = !{!5970, !5971, !5972, !5973}
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !5967, file: !5968, line: 18, baseType: !32, size: 32)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !5967, file: !5968, line: 19, baseType: !32, size: 32, offset: 32)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !5967, file: !5968, line: 20, baseType: !1889, size: 128, offset: 64)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !5967, file: !5968, line: 22, baseType: !299, size: 128, align: 64, offset: 192)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !5963, file: !5964, line: 14, baseType: !5975, size: 64, offset: 320)
!5975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !5963, file: !5964, line: 15, baseType: !5977, size: 64, offset: 384)
!5977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !5978, line: 16, size: 64, elements: !5979)
!5978 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!5979 = !{!5980}
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !5977, file: !5978, line: 17, baseType: !2326, size: 64)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !5963, file: !5964, line: 16, baseType: !1889, size: 128, offset: 448)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !5963, file: !5964, line: 17, baseType: !383, size: 32, offset: 576)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1546, file: !1317, line: 1465, baseType: !591, size: 64, offset: 6400)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1546, file: !1317, line: 1468, baseType: !987, size: 32, offset: 6464)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1546, file: !1317, line: 1470, baseType: !1483, size: 64, offset: 6528)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1546, file: !1317, line: 1471, baseType: !1483, size: 64, offset: 6592)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1546, file: !1317, line: 1473, baseType: !493, size: 32, offset: 6656)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1546, file: !1317, line: 1474, baseType: !5989, size: 64, offset: 6720)
!5989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5990, size: 64)
!5990 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !1317, line: 603, flags: DIFlagFwdDecl)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1546, file: !1317, line: 1477, baseType: !4146, size: 256, offset: 6784)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1546, file: !1317, line: 1478, baseType: !5993, size: 128, offset: 7040)
!5993 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !5994, line: 18, baseType: !5995)
!5994 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!5995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5994, line: 16, size: 128, elements: !5996)
!5996 = !{!5997}
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5995, file: !5994, line: 17, baseType: !3243, size: 128)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1546, file: !1317, line: 1480, baseType: !7, size: 32, offset: 7168)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1546, file: !1317, line: 1481, baseType: !6000, size: 32, offset: 7200)
!6000 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !277, line: 150, baseType: !7)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1546, file: !1317, line: 1487, baseType: !1665, size: 192, offset: 7232)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1546, file: !1317, line: 1493, baseType: !292, size: 64, offset: 7424)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1546, file: !1317, line: 1495, baseType: !6004, size: 64, offset: 7488)
!6004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6005, size: 64)
!6005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6006)
!6006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1336, line: 135, size: 1024, align: 512, elements: !6007)
!6007 = !{!6008, !6012, !6013, !6020, !6026, !6030, !6034, !6038, !6039, !6043, !6047, !6052, !6056}
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !6006, file: !1336, line: 136, baseType: !6009, size: 64)
!6009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6010, size: 64)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{!32, !1338, !7}
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !6006, file: !1336, line: 137, baseType: !6009, size: 64, offset: 64)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !6006, file: !1336, line: 138, baseType: !6014, size: 64, offset: 128)
!6014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6015, size: 64)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{!32, !6017, !6019}
!6017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6018, size: 64)
!6018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!6019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !6006, file: !1336, line: 139, baseType: !6021, size: 64, offset: 192)
!6021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6022, size: 64)
!6022 = !DISubroutineType(types: !6023)
!6023 = !{!32, !6017, !7, !292, !6024}
!6024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6025, size: 64)
!6025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !6006, file: !1336, line: 141, baseType: !6027, size: 64, offset: 256)
!6027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6028, size: 64)
!6028 = !DISubroutineType(types: !6029)
!6029 = !{!32, !6017}
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !6006, file: !1336, line: 142, baseType: !6031, size: 64, offset: 320)
!6031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6032, size: 64)
!6032 = !DISubroutineType(types: !6033)
!6033 = !{!32, !1338}
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !6006, file: !1336, line: 143, baseType: !6035, size: 64, offset: 384)
!6035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6036, size: 64)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{null, !1338}
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !6006, file: !1336, line: 144, baseType: !6035, size: 64, offset: 448)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !6006, file: !1336, line: 145, baseType: !6040, size: 64, offset: 512)
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6041, size: 64)
!6041 = !DISubroutineType(types: !6042)
!6042 = !{null, !1338, !1375}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !6006, file: !1336, line: 146, baseType: !6044, size: 64, offset: 576)
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{!1038, !1338, !1038, !32}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !6006, file: !1336, line: 147, baseType: !6048, size: 64, offset: 640)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{!1334, !6051}
!6051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !6006, file: !1336, line: 148, baseType: !6053, size: 64, offset: 704)
!6053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 64)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{!32, !1492, !771}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !6006, file: !1336, line: 149, baseType: !6057, size: 64, offset: 768)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6058, size: 64)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{!1338, !1338, !6060}
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1546, file: !1317, line: 1500, baseType: !32, size: 32, offset: 7552)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1546, file: !1317, line: 1502, baseType: !6064, size: 448, offset: 7616)
!6064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !5704, line: 60, size: 448, elements: !6065)
!6065 = !{!6066, !6071, !6072, !6073, !6074, !6075, !6076}
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6064, file: !5704, line: 61, baseType: !6067, size: 64)
!6067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6068, size: 64)
!6068 = !DISubroutineType(types: !6069)
!6069 = !{!312, !6070, !5702}
!6070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6064, size: 64)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6064, file: !5704, line: 63, baseType: !6067, size: 64, offset: 64)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6064, file: !5704, line: 66, baseType: !998, size: 64, offset: 128)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6064, file: !5704, line: 67, baseType: !32, size: 32, offset: 192)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6064, file: !5704, line: 68, baseType: !7, size: 32, offset: 224)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6064, file: !5704, line: 71, baseType: !284, size: 128, offset: 256)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6064, file: !5704, line: 77, baseType: !6077, size: 64, offset: 384)
!6077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1546, file: !1317, line: 1505, baseType: !371, size: 64, offset: 8064)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1546, file: !1317, line: 1508, baseType: !371, size: 64, offset: 8128)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1546, file: !1317, line: 1511, baseType: !32, size: 32, offset: 8192)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1546, file: !1317, line: 1514, baseType: !2025, size: 32, offset: 8224)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1546, file: !1317, line: 1517, baseType: !6083, size: 64, offset: 8256)
!6083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6084, size: 64)
!6084 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2765, line: 18, flags: DIFlagFwdDecl)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1546, file: !1317, line: 1518, baseType: !1581, size: 64, offset: 8320)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1546, file: !1317, line: 1525, baseType: !2612, size: 64, offset: 8384)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1546, file: !1317, line: 1532, baseType: !6088, size: 64, offset: 8448)
!6088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6089, line: 52, size: 64, elements: !6090)
!6089 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6090 = !{!6091}
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6088, file: !6089, line: 53, baseType: !6092, size: 64)
!6092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6093, size: 64)
!6093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6089, line: 40, size: 256, elements: !6094)
!6094 = !{!6095, !6096, !6101}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6093, file: !6089, line: 42, baseType: !1670)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6093, file: !6089, line: 44, baseType: !6097, size: 192)
!6097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6089, line: 28, size: 192, elements: !6098)
!6098 = !{!6099, !6100}
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6097, file: !6089, line: 29, baseType: !284, size: 128)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6097, file: !6089, line: 31, baseType: !998, size: 64, offset: 128)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6093, file: !6089, line: 49, baseType: !998, size: 64, offset: 192)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1546, file: !1317, line: 1533, baseType: !6088, size: 64, offset: 8512)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1546, file: !1317, line: 1534, baseType: !299, size: 128, align: 64, offset: 8576)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1546, file: !1317, line: 1535, baseType: !2764, size: 256, offset: 8704)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1546, file: !1317, line: 1537, baseType: !1665, size: 192, offset: 8960)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1546, file: !1317, line: 1542, baseType: !32, size: 32, offset: 9152)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1546, file: !1317, line: 1545, baseType: !1670, offset: 9184)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1546, file: !1317, line: 1546, baseType: !284, size: 128, offset: 9216)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1546, file: !1317, line: 1548, baseType: !1670, offset: 9344)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1546, file: !1317, line: 1549, baseType: !284, size: 128, offset: 9344)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1376, file: !1317, line: 624, baseType: !1732, size: 64, offset: 256)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1376, file: !1317, line: 631, baseType: !312, size: 64, offset: 320)
!6113 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 639, baseType: !6114, size: 32, offset: 384)
!6114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 639, size: 32, elements: !6115)
!6115 = !{!6116, !6118}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !6114, file: !1317, line: 640, baseType: !6117, size: 32)
!6117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !6114, file: !1317, line: 641, baseType: !7, size: 32)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1376, file: !1317, line: 643, baseType: !1458, size: 32, offset: 416)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1376, file: !1317, line: 644, baseType: !1476, size: 64, offset: 448)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1376, file: !1317, line: 645, baseType: !1479, size: 128, offset: 512)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1376, file: !1317, line: 646, baseType: !1479, size: 128, offset: 640)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1376, file: !1317, line: 647, baseType: !1479, size: 128, offset: 768)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1376, file: !1317, line: 648, baseType: !1670, offset: 896)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1376, file: !1317, line: 649, baseType: !476, size: 16, offset: 896)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1376, file: !1317, line: 650, baseType: !794, size: 8, offset: 912)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1376, file: !1317, line: 651, baseType: !794, size: 8, offset: 920)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1376, file: !1317, line: 652, baseType: !5882, size: 64, offset: 960)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1376, file: !1317, line: 659, baseType: !312, size: 64, offset: 1024)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1376, file: !1317, line: 660, baseType: !1755, size: 256, offset: 1088)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1376, file: !1317, line: 662, baseType: !312, size: 64, offset: 1344)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1376, file: !1317, line: 663, baseType: !312, size: 64, offset: 1408)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1376, file: !1317, line: 665, baseType: !276, size: 128, offset: 1472)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1376, file: !1317, line: 666, baseType: !284, size: 128, offset: 1600)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1376, file: !1317, line: 675, baseType: !284, size: 128, offset: 1728)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1376, file: !1317, line: 676, baseType: !284, size: 128, offset: 1856)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1376, file: !1317, line: 677, baseType: !284, size: 128, offset: 1984)
!6138 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 678, baseType: !6139, size: 128, offset: 2112)
!6139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 678, size: 128, elements: !6140)
!6140 = !{!6141, !6142}
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !6139, file: !1317, line: 679, baseType: !1581, size: 64)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !6139, file: !1317, line: 680, baseType: !299, size: 128, align: 64)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1376, file: !1317, line: 682, baseType: !373, size: 64, offset: 2240)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1376, file: !1317, line: 683, baseType: !373, size: 64, offset: 2304)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1376, file: !1317, line: 684, baseType: !383, size: 32, offset: 2368)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1376, file: !1317, line: 685, baseType: !383, size: 32, offset: 2400)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1376, file: !1317, line: 686, baseType: !383, size: 32, offset: 2432)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1376, file: !1317, line: 688, baseType: !383, size: 32, offset: 2464)
!6149 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 690, baseType: !6150, size: 64, offset: 2496)
!6150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 690, size: 64, elements: !6151)
!6151 = !{!6152, !6153}
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !6150, file: !1317, line: 691, baseType: !4528, size: 64)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !6150, file: !1317, line: 692, baseType: !1607, size: 64)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1376, file: !1317, line: 694, baseType: !6155, size: 64, offset: 2560)
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6156, size: 64)
!6156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !1317, line: 1100, size: 384, elements: !6157)
!6157 = !{!6158, !6159, !6160, !6161}
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !6156, file: !1317, line: 1101, baseType: !1670)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !6156, file: !1317, line: 1102, baseType: !284, size: 128)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !6156, file: !1317, line: 1103, baseType: !284, size: 128, offset: 128)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !6156, file: !1317, line: 1104, baseType: !284, size: 128, offset: 256)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1376, file: !1317, line: 695, baseType: !1733, size: 1216, align: 64, offset: 2624)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1376, file: !1317, line: 696, baseType: !284, size: 128, offset: 3840)
!6164 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 697, baseType: !6165, size: 64, offset: 3968)
!6165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 697, size: 64, elements: !6166)
!6166 = !{!6167, !6168, !6169, !6170, !6171}
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !6165, file: !1317, line: 698, baseType: !1883, size: 64)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !6165, file: !1317, line: 699, baseType: !5907, size: 64)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !6165, file: !1317, line: 700, baseType: !4521, size: 64)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !6165, file: !1317, line: 701, baseType: !1038, size: 64)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !6165, file: !1317, line: 702, baseType: !7, size: 32)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1376, file: !1317, line: 705, baseType: !493, size: 32, offset: 4032)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1376, file: !1317, line: 708, baseType: !493, size: 32, offset: 4064)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1376, file: !1317, line: 709, baseType: !5989, size: 64, offset: 4096)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1376, file: !1317, line: 720, baseType: !591, size: 64, offset: 4160)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1339, file: !1336, line: 98, baseType: !1031, size: 256, offset: 448)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1339, file: !1336, line: 101, baseType: !6178, size: 32, offset: 704)
!6178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !6179, line: 25, size: 32, elements: !6180)
!6179 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!6180 = !{!6181}
!6181 = !DIDerivedType(tag: DW_TAG_member, scope: !6178, file: !6179, line: 26, baseType: !6182, size: 32)
!6182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6178, file: !6179, line: 26, size: 32, elements: !6183)
!6183 = !{!6184}
!6184 = !DIDerivedType(tag: DW_TAG_member, scope: !6182, file: !6179, line: 30, baseType: !6185, size: 32)
!6185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6182, file: !6179, line: 30, size: 32, elements: !6186)
!6186 = !{!6187, !6188}
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6185, file: !6179, line: 31, baseType: !1670)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6185, file: !6179, line: 32, baseType: !32, size: 32)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1339, file: !1336, line: 102, baseType: !6004, size: 64, offset: 768)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1339, file: !1336, line: 103, baseType: !1545, size: 64, offset: 832)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1339, file: !1336, line: 104, baseType: !312, size: 64, offset: 896)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1339, file: !1336, line: 105, baseType: !591, size: 64, offset: 960)
!6193 = !DIDerivedType(tag: DW_TAG_member, scope: !1339, file: !1336, line: 107, baseType: !6194, size: 128, offset: 1024)
!6194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 107, size: 128, elements: !6195)
!6195 = !{!6196, !6197}
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6194, file: !1336, line: 108, baseType: !284, size: 128)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6194, file: !1336, line: 109, baseType: !6198, size: 64)
!6198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1339, file: !1336, line: 111, baseType: !284, size: 128, offset: 1152)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1339, file: !1336, line: 112, baseType: !284, size: 128, offset: 1280)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1339, file: !1336, line: 120, baseType: !6202, size: 128, offset: 1408)
!6202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 116, size: 128, elements: !6203)
!6203 = !{!6204, !6205, !6206}
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6202, file: !1336, line: 117, baseType: !276, size: 128)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6202, file: !1336, line: 118, baseType: !1353, size: 128)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6202, file: !1336, line: 119, baseType: !299, size: 128, align: 64)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1316, file: !1317, line: 922, baseType: !1375, size: 64, offset: 256)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1316, file: !1317, line: 923, baseType: !4528, size: 64, offset: 320)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1316, file: !1317, line: 929, baseType: !1670, offset: 384)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1316, file: !1317, line: 930, baseType: !6211, size: 32, offset: 384)
!6211 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !1317, line: 296, baseType: !7, size: 32, elements: !6212)
!6212 = !{!6213, !6214, !6215, !6216, !6217, !6218}
!6213 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!6214 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!6215 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!6216 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!6217 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!6218 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1316, file: !1317, line: 931, baseType: !371, size: 64, offset: 448)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1316, file: !1317, line: 932, baseType: !7, size: 32, offset: 512)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1316, file: !1317, line: 933, baseType: !6000, size: 32, offset: 544)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1316, file: !1317, line: 934, baseType: !1665, size: 192, offset: 576)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1316, file: !1317, line: 935, baseType: !1476, size: 64, offset: 768)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1316, file: !1317, line: 936, baseType: !6225, size: 192, offset: 832)
!6225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !1317, line: 885, size: 192, elements: !6226)
!6226 = !{!6227, !6228, !6229, !6237, !6238, !6239}
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6225, file: !1317, line: 886, baseType: !1912)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6225, file: !1317, line: 887, baseType: !2571, size: 64)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6225, file: !1317, line: 888, baseType: !6230, size: 32, offset: 64)
!6230 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !2573, line: 9, baseType: !7, size: 32, elements: !6231)
!6231 = !{!6232, !6233, !6234, !6235, !6236}
!6232 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!6233 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!6234 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!6235 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!6236 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6225, file: !1317, line: 889, baseType: !1382, size: 32, offset: 96)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6225, file: !1317, line: 889, baseType: !1382, size: 32, offset: 128)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6225, file: !1317, line: 890, baseType: !32, size: 32, offset: 160)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1316, file: !1317, line: 937, baseType: !2925, size: 64, offset: 1024)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1316, file: !1317, line: 938, baseType: !6242, size: 256, offset: 1088)
!6242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !1317, line: 896, size: 256, elements: !6243)
!6243 = !{!6244, !6245, !6246, !6247, !6248, !6249}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6242, file: !1317, line: 897, baseType: !312, size: 64)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6242, file: !1317, line: 898, baseType: !7, size: 32, offset: 64)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6242, file: !1317, line: 899, baseType: !7, size: 32, offset: 96)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6242, file: !1317, line: 902, baseType: !7, size: 32, offset: 128)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6242, file: !1317, line: 903, baseType: !7, size: 32, offset: 160)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6242, file: !1317, line: 904, baseType: !1476, size: 64, offset: 192)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1316, file: !1317, line: 940, baseType: !331, size: 64, offset: 1344)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1316, file: !1317, line: 945, baseType: !591, size: 64, offset: 1408)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1316, file: !1317, line: 949, baseType: !284, size: 128, offset: 1472)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1316, file: !1317, line: 950, baseType: !284, size: 128, offset: 1600)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1316, file: !1317, line: 952, baseType: !1732, size: 64, offset: 1728)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1316, file: !1317, line: 953, baseType: !2025, size: 32, offset: 1792)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1316, file: !1317, line: 954, baseType: !2025, size: 32, offset: 1824)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1105, file: !65, line: 59, baseType: !6258, size: 64, offset: 192)
!6258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6259, size: 64)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{null, !1310}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1105, file: !65, line: 60, baseType: !6262, size: 64, offset: 256)
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 64)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{!32, !1310, !591, !591}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1105, file: !65, line: 61, baseType: !6258, size: 64, offset: 320)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1105, file: !65, line: 62, baseType: !6267, size: 64, offset: 384)
!6267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6268, size: 64)
!6268 = !DISubroutineType(types: !6269)
!6269 = !{!591, !1310, !591}
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1105, file: !65, line: 63, baseType: !6271, size: 64, offset: 448)
!6271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6272, size: 64)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!32, !1310, !6274, !1111}
!6274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6275, size: 64)
!6275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1105, file: !65, line: 65, baseType: !6271, size: 64, offset: 512)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1105, file: !65, line: 68, baseType: !6271, size: 64, offset: 576)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1105, file: !65, line: 70, baseType: !6271, size: 64, offset: 640)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1105, file: !65, line: 74, baseType: !6267, size: 64, offset: 704)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1105, file: !65, line: 75, baseType: !6281, size: 64, offset: 768)
!6281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6282, size: 64)
!6282 = !DISubroutineType(types: !6283)
!6283 = !{!32, !1310, !591, !591, !331}
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1105, file: !65, line: 76, baseType: !6285, size: 64, offset: 832)
!6285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6286, size: 64)
!6286 = !DISubroutineType(types: !6287)
!6287 = !{!32, !1310, !591}
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1105, file: !65, line: 77, baseType: !6289, size: 64, offset: 896)
!6289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6290, size: 64)
!6290 = !DISubroutineType(types: !6291)
!6291 = !{!32, !1310, !591, !331}
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1105, file: !65, line: 78, baseType: !6285, size: 64, offset: 960)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1105, file: !65, line: 79, baseType: !6285, size: 64, offset: 1024)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1105, file: !65, line: 82, baseType: !6295, size: 64, offset: 1088)
!6295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6296, size: 64)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!591, !1310, !1315, !32}
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1105, file: !65, line: 84, baseType: !1415, size: 64, offset: 1152)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1105, file: !65, line: 85, baseType: !6300, size: 64, offset: 1216)
!6300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6301, size: 64)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{!32, !1310, !6303}
!6303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6304, size: 64)
!6304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !96, line: 65, size: 64, elements: !6305)
!6305 = !{!6306, !6307, !6308, !6309, !6310}
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !6304, file: !96, line: 66, baseType: !481, size: 8)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !6304, file: !96, line: 67, baseType: !481, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !6304, file: !96, line: 68, baseType: !481, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !6304, file: !96, line: 69, baseType: !2315, size: 16, offset: 16)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !6304, file: !96, line: 70, baseType: !942, size: 32, offset: 32)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1105, file: !65, line: 86, baseType: !6312, size: 64, offset: 1280)
!6312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6313, size: 64)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!987, !591}
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1105, file: !65, line: 87, baseType: !6316, size: 64, offset: 1344)
!6316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6317, size: 64)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{null, !1310, !591, !1653}
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1105, file: !65, line: 89, baseType: !6320, size: 64, offset: 1408)
!6320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6321, size: 64)
!6321 = !DISubroutineType(types: !6322)
!6322 = !{!32, !6323, !6325, !6328, !6328}
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 64)
!6324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!6325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 64)
!6326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6327)
!6327 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !65, line: 32, flags: DIFlagFwdDecl)
!6328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6329, size: 64)
!6329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6330)
!6330 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !65, line: 33, flags: DIFlagFwdDecl)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1105, file: !65, line: 95, baseType: !6332, size: 64, offset: 1472)
!6332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6333, size: 64)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{!32, !1310, !6335}
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6336, size: 64)
!6336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !65, line: 757, size: 4928, elements: !6337)
!6337 = !{!6338, !6339, !6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348, !6349, !6350, !6351, !6359, !6360, !6361, !6401, !6402, !6403, !6404, !6405, !6406, !6407, !6408, !6409, !6410, !6411, !6412, !6413, !6415, !6416, !6435, !6436, !6437, !6446, !6448, !6449, !6450, !6451, !6452, !6454, !6455, !6470, !6472, !6478, !6484, !6492, !6493, !6494, !6495, !6496, !6497, !6505, !6512}
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6336, file: !65, line: 758, baseType: !373, size: 64)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !6336, file: !65, line: 759, baseType: !987, size: 32, offset: 64)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !6336, file: !65, line: 760, baseType: !987, size: 32, offset: 96)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !6336, file: !65, line: 761, baseType: !987, size: 32, offset: 128)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !6336, file: !65, line: 762, baseType: !987, size: 32, offset: 160)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !6336, file: !65, line: 763, baseType: !987, size: 32, offset: 192)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6336, file: !65, line: 764, baseType: !987, size: 32, offset: 224)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !6336, file: !65, line: 765, baseType: !987, size: 32, offset: 256)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !6336, file: !65, line: 766, baseType: !987, size: 32, offset: 288)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !6336, file: !65, line: 767, baseType: !987, size: 32, offset: 320)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !6336, file: !65, line: 768, baseType: !987, size: 32, offset: 352)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !6336, file: !65, line: 769, baseType: !987, size: 32, offset: 384)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !6336, file: !65, line: 770, baseType: !987, size: 32, offset: 416)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !6336, file: !65, line: 771, baseType: !6352, size: 64, offset: 448)
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 64)
!6353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6354)
!6354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !65, line: 751, size: 96, elements: !6355)
!6355 = !{!6356, !6357, !6358}
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6354, file: !65, line: 752, baseType: !987, size: 32)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !6354, file: !65, line: 753, baseType: !64, size: 32, offset: 32)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !6354, file: !65, line: 754, baseType: !987, size: 32, offset: 64)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !6336, file: !65, line: 772, baseType: !1665, size: 192, offset: 512)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !6336, file: !65, line: 773, baseType: !1088, size: 64, offset: 704)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !6336, file: !65, line: 774, baseType: !6362, size: 64, offset: 768)
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 64)
!6363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !65, line: 586, size: 2944, elements: !6364)
!6364 = !{!6365, !6366, !6367, !6368, !6369, !6381, !6382, !6384, !6385, !6386, !6387}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !6363, file: !65, line: 588, baseType: !276, size: 128)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6363, file: !65, line: 590, baseType: !1665, size: 192, offset: 128)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6363, file: !65, line: 591, baseType: !568, size: 32, offset: 320)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6363, file: !65, line: 592, baseType: !331, size: 64, offset: 384)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6363, file: !65, line: 597, baseType: !6370, size: 256, offset: 448)
!6370 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6363, file: !65, line: 593, size: 256, elements: !6371)
!6371 = !{!6372, !6379, !6380}
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !6370, file: !65, line: 594, baseType: !6373, size: 112)
!6373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !65, line: 509, size: 112, elements: !6374)
!6374 = !{!6375, !6376, !6377}
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !6373, file: !65, line: 510, baseType: !794, size: 8)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !6373, file: !65, line: 511, baseType: !794, size: 8, offset: 8)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !6373, file: !65, line: 512, baseType: !6378, size: 96, offset: 16)
!6378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 96, elements: !5518)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6370, file: !65, line: 595, baseType: !591, size: 64, offset: 128)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !6370, file: !65, line: 596, baseType: !771, size: 8, offset: 192)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !6363, file: !65, line: 602, baseType: !1088, size: 64, offset: 704)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !6363, file: !65, line: 604, baseType: !6383, size: 192, offset: 768)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 192, elements: !1592)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !6363, file: !65, line: 606, baseType: !3416, size: 96, offset: 960)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !6363, file: !65, line: 608, baseType: !591, size: 64, offset: 1088)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !6363, file: !65, line: 609, baseType: !331, size: 64, offset: 1152)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !6363, file: !65, line: 610, baseType: !6388, size: 1728, offset: 1216)
!6388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !65, line: 569, size: 1728, elements: !6389)
!6389 = !{!6390, !6391, !6392, !6393, !6394, !6400}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6388, file: !65, line: 570, baseType: !312, size: 64)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6388, file: !65, line: 571, baseType: !312, size: 64, offset: 64)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6388, file: !65, line: 572, baseType: !4149, size: 1024, offset: 128)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !6388, file: !65, line: 573, baseType: !284, size: 128, offset: 1152)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !6388, file: !65, line: 574, baseType: !6395, size: 384, offset: 1280)
!6395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !6396, line: 40, size: 384, elements: !6397)
!6396 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!6397 = !{!6398}
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6395, file: !6396, line: 41, baseType: !6399, size: 384)
!6399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 384, elements: !2947)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6388, file: !65, line: 575, baseType: !771, size: 8, offset: 1664)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !6336, file: !65, line: 775, baseType: !95, size: 32, offset: 832)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !6336, file: !65, line: 776, baseType: !129, size: 32, offset: 864)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !6336, file: !65, line: 777, baseType: !771, size: 8, offset: 896)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !6336, file: !65, line: 778, baseType: !771, size: 8, offset: 904)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !6336, file: !65, line: 779, baseType: !771, size: 8, offset: 912)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !6336, file: !65, line: 780, baseType: !771, size: 8, offset: 920)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !6336, file: !65, line: 781, baseType: !771, size: 8, offset: 928)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !6336, file: !65, line: 782, baseType: !771, size: 8, offset: 936)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !6336, file: !65, line: 783, baseType: !170, size: 32, offset: 960)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !6336, file: !65, line: 784, baseType: !276, size: 128, offset: 1024)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !6336, file: !65, line: 786, baseType: !6328, size: 64, offset: 1152)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !6336, file: !65, line: 788, baseType: !292, size: 64, offset: 1216)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6336, file: !65, line: 789, baseType: !6414, size: 64, offset: 1280)
!6414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !6336, file: !65, line: 790, baseType: !591, size: 64, offset: 1344)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !6336, file: !65, line: 791, baseType: !6417, size: 64, offset: 1408)
!6417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6418, size: 64)
!6418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !65, line: 734, size: 384, elements: !6419)
!6419 = !{!6420, !6421, !6422, !6423, !6431, !6432, !6433, !6434}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !6418, file: !65, line: 735, baseType: !591, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !6418, file: !65, line: 736, baseType: !591, size: 64, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !6418, file: !65, line: 737, baseType: !591, size: 64, offset: 128)
!6423 = !DIDerivedType(tag: DW_TAG_member, scope: !6418, file: !65, line: 738, baseType: !6424, size: 128, offset: 192)
!6424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6418, file: !65, line: 738, size: 128, elements: !6425)
!6425 = !{!6426}
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !6424, file: !65, line: 742, baseType: !6427, size: 128)
!6427 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6424, file: !65, line: 739, size: 128, elements: !6428)
!6428 = !{!6429, !6430}
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !6427, file: !65, line: 740, baseType: !1310, size: 64)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6427, file: !65, line: 741, baseType: !987, size: 32, offset: 64)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !6418, file: !65, line: 744, baseType: !771, size: 8, offset: 320)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !6418, file: !65, line: 745, baseType: !794, size: 8, offset: 328)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !6418, file: !65, line: 746, baseType: !581, size: 16, offset: 336)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !6418, file: !65, line: 747, baseType: !987, size: 32, offset: 352)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !6336, file: !65, line: 792, baseType: !987, size: 32, offset: 1472)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !6336, file: !65, line: 793, baseType: !6388, size: 1728, offset: 1536)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6336, file: !65, line: 794, baseType: !6438, size: 64, offset: 3264)
!6438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6439, size: 64)
!6439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6440)
!6440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !65, line: 432, size: 64, elements: !6441)
!6441 = !{!6442}
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !6440, file: !65, line: 433, baseType: !6443, size: 64)
!6443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6444, size: 64)
!6444 = !DISubroutineType(types: !6445)
!6445 = !{!32, !1088, !6274, !1111}
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !6336, file: !65, line: 795, baseType: !6447, size: 64, offset: 3328)
!6447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !6336, file: !65, line: 796, baseType: !1665, size: 192, offset: 3392)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6336, file: !65, line: 797, baseType: !1088, size: 64, offset: 3584)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6336, file: !65, line: 798, baseType: !1953, size: 64, offset: 3648)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !6336, file: !65, line: 799, baseType: !331, size: 64, offset: 3712)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !6336, file: !65, line: 800, baseType: !6453, size: 128, offset: 3776)
!6453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1310, size: 128, elements: !2947)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6336, file: !65, line: 801, baseType: !267, size: 128, offset: 3904)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !6336, file: !65, line: 805, baseType: !6456, size: 64, offset: 4032)
!6456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6457, size: 64)
!6457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !65, line: 478, size: 576, elements: !6458)
!6458 = !{!6459, !6460, !6461, !6464, !6465, !6466, !6467, !6468, !6469}
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6457, file: !65, line: 479, baseType: !1088, size: 64)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !6457, file: !65, line: 480, baseType: !290, size: 64, offset: 64)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !6457, file: !65, line: 481, baseType: !6462, size: 64, offset: 128)
!6462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6463, size: 64)
!6463 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !65, line: 209, flags: DIFlagFwdDecl)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !6457, file: !65, line: 482, baseType: !591, size: 64, offset: 192)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !6457, file: !65, line: 483, baseType: !284, size: 128, offset: 256)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !6457, file: !65, line: 484, baseType: !771, size: 8, offset: 384)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !6457, file: !65, line: 485, baseType: !771, size: 8, offset: 392)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !6457, file: !65, line: 486, baseType: !591, size: 64, offset: 448)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !6457, file: !65, line: 487, baseType: !987, size: 32, offset: 512)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !6336, file: !65, line: 806, baseType: !6471, size: 64, offset: 4096)
!6471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6327, size: 64)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !6336, file: !65, line: 807, baseType: !6473, size: 64, offset: 4160)
!6473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6474, size: 64)
!6474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !96, line: 4963, size: 64, elements: !6475)
!6475 = !{!6476, !6477}
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !6474, file: !96, line: 4964, baseType: !493, size: 32)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !6474, file: !96, line: 4965, baseType: !493, size: 32, offset: 32)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !6336, file: !65, line: 808, baseType: !6479, size: 64, offset: 4224)
!6479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6480, size: 64)
!6480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !65, line: 724, size: 32, elements: !6481)
!6481 = !{!6482, !6483}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !6480, file: !65, line: 725, baseType: !581, size: 16)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !6480, file: !65, line: 726, baseType: !771, size: 8, offset: 16)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !6336, file: !65, line: 815, baseType: !6485, size: 64, offset: 4288)
!6485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6486, size: 64)
!6486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !96, line: 4971, size: 128, elements: !6487)
!6487 = !{!6488, !6489, !6490, !6491}
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !6486, file: !96, line: 4972, baseType: !493, size: 32)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !6486, file: !96, line: 4973, baseType: !493, size: 32, offset: 32)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !6486, file: !96, line: 4974, baseType: !493, size: 32, offset: 64)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !6486, file: !96, line: 4975, baseType: !493, size: 32, offset: 96)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !6336, file: !65, line: 823, baseType: !1802, size: 64, offset: 4352)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !6336, file: !65, line: 824, baseType: !987, size: 32, offset: 4416)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !6336, file: !65, line: 825, baseType: !987, size: 32, offset: 4448)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !6336, file: !65, line: 830, baseType: !987, size: 32, offset: 4480)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !6336, file: !65, line: 831, baseType: !987, size: 32, offset: 4512)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !6336, file: !65, line: 832, baseType: !6498, size: 64, offset: 4544)
!6498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6499, size: 64)
!6499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !6500, line: 17, size: 96, elements: !6501)
!6500 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!6501 = !{!6502, !6503, !6504}
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !6499, file: !6500, line: 18, baseType: !32, size: 32)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !6499, file: !6500, line: 18, baseType: !32, size: 32, offset: 32)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !6499, file: !6500, line: 18, baseType: !32, size: 32, offset: 64)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !6336, file: !65, line: 833, baseType: !6506, size: 64, offset: 4608)
!6506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6507, size: 64)
!6507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !65, line: 503, size: 128, align: 128, elements: !6508)
!6508 = !{!6509, !6510, !6511}
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !6507, file: !65, line: 504, baseType: !331, size: 64)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !6507, file: !65, line: 505, baseType: !331, size: 64, offset: 64)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6507, file: !65, line: 506, baseType: !3089, offset: 128)
!6512 = !DIDerivedType(tag: DW_TAG_member, scope: !6336, file: !65, line: 834, baseType: !6513, size: 256, offset: 4672)
!6513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6336, file: !65, line: 834, size: 256, elements: !6514)
!6514 = !{!6515, !6516}
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6513, file: !65, line: 835, baseType: !2764, size: 256)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6513, file: !65, line: 836, baseType: !299, size: 128, align: 64)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1105, file: !65, line: 96, baseType: !6518, size: 64, offset: 1536)
!6518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6519, size: 64)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{null, !1310, !6335}
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1105, file: !65, line: 97, baseType: !6522, size: 64, offset: 1600)
!6522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6523, size: 64)
!6523 = !DISubroutineType(types: !6524)
!6524 = !{null, !1310, !987, !1088, !1088}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1105, file: !65, line: 101, baseType: !6526, size: 64, offset: 1664)
!6526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6527, size: 64)
!6527 = !DISubroutineType(types: !6528)
!6528 = !{!32, !6323, !4353, !987}
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1105, file: !65, line: 103, baseType: !6530, size: 64, offset: 1728)
!6530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6531, size: 64)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{!32, !6323, !331, !2516}
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1105, file: !65, line: 105, baseType: !6534, size: 64, offset: 1792)
!6534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6535, size: 64)
!6535 = !DISubroutineType(types: !6536)
!6536 = !{!32, !1310, !2098}
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1105, file: !65, line: 106, baseType: !6538, size: 64, offset: 1856)
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6539, size: 64)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!4027, !1310, !1315, !4028}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1105, file: !65, line: 110, baseType: !6542, size: 64, offset: 1920)
!6542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 64)
!6543 = !DISubroutineType(types: !6544)
!6544 = !{!32, !6545, !591, !987}
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6546, size: 64)
!6546 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !65, line: 38, flags: DIFlagFwdDecl)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1105, file: !65, line: 112, baseType: !6548, size: 64, offset: 1984)
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 64)
!6549 = !DISubroutineType(types: !6550)
!6550 = !{null, !6545, !591, !987}
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1105, file: !65, line: 114, baseType: !6552, size: 64, offset: 2048)
!6552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6553, size: 64)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{!6555, !591}
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6556, size: 64)
!6556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6557, size: 64)
!6557 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !65, line: 37, flags: DIFlagFwdDecl)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1105, file: !65, line: 125, baseType: !6559, size: 64, offset: 2112)
!6559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6560, size: 64)
!6560 = !DISubroutineType(types: !6561)
!6561 = !{!771, !6323, !6323}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1105, file: !65, line: 129, baseType: !6563, size: 64, offset: 2176)
!6563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1105, file: !65, line: 130, baseType: !1001, size: 64, offset: 2240)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1105, file: !65, line: 133, baseType: !6566, size: 64, offset: 2304)
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 64)
!6567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6568)
!6568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !65, line: 46, size: 256, elements: !6569)
!6569 = !{!6570, !6571, !6578, !6580}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !6568, file: !65, line: 47, baseType: !1686, size: 64)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !6568, file: !65, line: 48, baseType: !6572, size: 64, offset: 64)
!6572 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !65, line: 43, baseType: !6573)
!6573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6574, size: 64)
!6574 = !DISubroutineType(types: !6575)
!6575 = !{!32, !591, !6576}
!6576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6577, size: 64)
!6577 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !65, line: 36, flags: DIFlagFwdDecl)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !6568, file: !65, line: 49, baseType: !6579, size: 64, offset: 128)
!6579 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !65, line: 45, baseType: !1415)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !6568, file: !65, line: 50, baseType: !987, size: 32, offset: 192)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1100, file: !65, line: 146, baseType: !1310, size: 64, offset: 64)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1100, file: !65, line: 150, baseType: !177, size: 32, offset: 128)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1100, file: !65, line: 151, baseType: !987, size: 32, offset: 160)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1100, file: !65, line: 152, baseType: !987, size: 32, offset: 192)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1100, file: !65, line: 153, baseType: !987, size: 32, offset: 224)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1100, file: !65, line: 154, baseType: !987, size: 32, offset: 256)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1100, file: !65, line: 155, baseType: !32, size: 32, offset: 288)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1100, file: !65, line: 156, baseType: !987, size: 32, offset: 320)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1100, file: !65, line: 157, baseType: !32, size: 32, offset: 352)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1100, file: !65, line: 158, baseType: !987, size: 32, offset: 384)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1100, file: !65, line: 159, baseType: !987, size: 32, offset: 416)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1100, file: !65, line: 160, baseType: !6471, size: 64, offset: 448)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1100, file: !65, line: 161, baseType: !6594, size: 128, offset: 512)
!6594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !65, line: 136, size: 128, elements: !6595)
!6595 = !{!6596, !6597}
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6594, file: !65, line: 137, baseType: !987, size: 32)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6594, file: !65, line: 138, baseType: !1953, size: 64, offset: 64)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1100, file: !65, line: 162, baseType: !267, size: 128, offset: 640)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1100, file: !65, line: 163, baseType: !987, size: 32, offset: 768)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1100, file: !65, line: 164, baseType: !771, size: 8, offset: 800)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1100, file: !65, line: 165, baseType: !771, size: 8, offset: 808)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1100, file: !65, line: 171, baseType: !373, size: 64, align: 512, offset: 1024)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1100, file: !65, line: 172, baseType: !373, size: 64, offset: 1088)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1100, file: !65, line: 173, baseType: !2764, size: 256, offset: 1152)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1100, file: !65, line: 174, baseType: !1665, size: 192, offset: 1408)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1100, file: !65, line: 175, baseType: !331, size: 64, offset: 1600)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1097, file: !65, line: 224, baseType: !290, size: 64, offset: 2048)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1097, file: !65, line: 225, baseType: !6609, size: 64, offset: 2112)
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6610, size: 64)
!6610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6611)
!6611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !65, line: 212, size: 256, elements: !6612)
!6612 = !{!6613, !6617, !6618, !6622}
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !6611, file: !65, line: 213, baseType: !6614, size: 64)
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6615, size: 64)
!6615 = !DISubroutineType(types: !6616)
!6616 = !{!32, !1096, !591, !591}
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !6611, file: !65, line: 215, baseType: !6614, size: 64, offset: 64)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !6611, file: !65, line: 217, baseType: !6619, size: 64, offset: 128)
!6619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6620, size: 64)
!6620 = !DISubroutineType(types: !6621)
!6621 = !{!32, !1096, !591, !591, !331}
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !6611, file: !65, line: 219, baseType: !6623, size: 64, offset: 192)
!6623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6624, size: 64)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!32, !1096, !591}
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1097, file: !65, line: 226, baseType: !591, size: 64, offset: 2176)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1097, file: !65, line: 227, baseType: !284, size: 128, offset: 2240)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1081, file: !31, line: 911, baseType: !6629, size: 128)
!6629 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 908, size: 128, elements: !6630)
!6630 = !{!6631, !6634}
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !6629, file: !31, line: 909, baseType: !6632, size: 64)
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6633, size: 64)
!6633 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !31, line: 909, flags: DIFlagFwdDecl)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !6629, file: !31, line: 910, baseType: !581, size: 16, offset: 64)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !398, file: !31, line: 1481, baseType: !6636, size: 64, offset: 4096)
!6636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6637, size: 64)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{!32, !290, !32, !6639, !987}
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6640, size: 64)
!6640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6641, size: 64)
!6641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !6642, line: 94, size: 256, elements: !6643)
!6642 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!6643 = !{!6644, !6645, !6646, !6647, !6648, !6649, !6654}
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6641, file: !6642, line: 95, baseType: !591, size: 64)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6641, file: !6642, line: 96, baseType: !581, size: 16, offset: 64)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !6641, file: !6642, line: 97, baseType: !581, size: 16, offset: 80)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !6641, file: !6642, line: 98, baseType: !987, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !6641, file: !6642, line: 99, baseType: !987, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6641, file: !6642, line: 103, baseType: !6650, size: 64, offset: 128)
!6650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !6642, line: 50, size: 64, elements: !6651)
!6651 = !{!6652, !6653}
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6650, file: !6642, line: 51, baseType: !987, size: 32)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6650, file: !6642, line: 52, baseType: !987, size: 32, offset: 32)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !6641, file: !6642, line: 104, baseType: !290, size: 64, offset: 192)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !398, file: !31, line: 1484, baseType: !6656, size: 64, offset: 4160)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 64)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!32, !290, !987, !987}
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !398, file: !31, line: 1486, baseType: !6660, size: 64, offset: 4224)
!6660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6661, size: 64)
!6661 = !DISubroutineType(types: !6662)
!6662 = !{!6663, !290}
!6663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6664, size: 64)
!6664 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !31, line: 1486, flags: DIFlagFwdDecl)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !398, file: !31, line: 1487, baseType: !6666, size: 64, offset: 4288)
!6666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6667, size: 64)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!32, !290, !6669, !32}
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6670, size: 64)
!6670 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !31, line: 56, flags: DIFlagFwdDecl)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !398, file: !31, line: 1489, baseType: !6672, size: 64, offset: 4352)
!6672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6673, size: 64)
!6673 = !DISubroutineType(types: !6674)
!6674 = !{!290, !290}
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !264, file: !31, line: 1917, baseType: !6676, size: 64, offset: 4032)
!6676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6677, size: 64)
!6677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6678)
!6678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !251, line: 421, size: 3904, elements: !6679)
!6679 = !{!6680, !6681, !6701, !6702, !6713, !6725, !6729, !6733, !6737, !6738, !6739, !6756, !6757, !6769, !6770, !6800, !6801, !6817, !6821, !6830, !6841, !6845, !6858, !6862, !6866, !6876, !6877, !6878, !6879, !6883, !6884, !6986, !6990, !7000, !7004, !7005, !7006, !7010, !7018, !7022, !7026, !7042, !7046, !7058, !7062, !7063, !7078, !7090, !7091, !7107, !7108, !7122, !7126, !7130, !7131, !7170, !7176, !7187, !7188, !7189, !7190}
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !6678, file: !251, line: 422, baseType: !987, size: 32)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !6678, file: !251, line: 423, baseType: !6682, size: 64, offset: 64)
!6682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6683, size: 64)
!6683 = !DISubroutineType(types: !6684)
!6684 = !{null, !290, !6685}
!6685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6686, size: 64)
!6686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !209, line: 177, size: 1568, elements: !6687)
!6687 = !{!6688, !6689, !6690, !6691, !6692, !6693, !6694, !6696, !6697, !6698, !6699, !6700}
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6686, file: !209, line: 178, baseType: !493, size: 32)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6686, file: !209, line: 179, baseType: !4146, size: 256, offset: 32)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6686, file: !209, line: 180, baseType: !4146, size: 256, offset: 288)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !6686, file: !209, line: 181, baseType: !4146, size: 256, offset: 544)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !6686, file: !209, line: 182, baseType: !4146, size: 256, offset: 800)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !6686, file: !209, line: 183, baseType: !4146, size: 256, offset: 1056)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !6686, file: !209, line: 184, baseType: !6695, size: 96, offset: 1312)
!6695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 96, elements: !5518)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !6686, file: !209, line: 185, baseType: !493, size: 32, offset: 1408)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6686, file: !209, line: 186, baseType: !493, size: 32, offset: 1440)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !6686, file: !209, line: 187, baseType: !493, size: 32, offset: 1472)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !6686, file: !209, line: 188, baseType: !493, size: 32, offset: 1504)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !6686, file: !209, line: 189, baseType: !493, size: 32, offset: 1536)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !6678, file: !251, line: 424, baseType: !401, size: 64, offset: 128)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !6678, file: !251, line: 425, baseType: !6703, size: 64, offset: 192)
!6703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6704, size: 64)
!6704 = !DISubroutineType(types: !6705)
!6705 = !{null, !290, !6706, !591}
!6706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6707, size: 64)
!6707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !209, line: 310, size: 96, elements: !6708)
!6708 = !{!6709, !6710, !6711, !6712}
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6707, file: !209, line: 311, baseType: !493, size: 32)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6707, file: !209, line: 312, baseType: !493, size: 32, offset: 32)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6707, file: !209, line: 313, baseType: !493, size: 32, offset: 64)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6707, file: !209, line: 314, baseType: !480, offset: 96)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !6678, file: !251, line: 426, baseType: !6714, size: 64, offset: 256)
!6714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6715, size: 64)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{null, !290, !6717}
!6717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6718, size: 64)
!6718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !209, line: 203, size: 160, elements: !6719)
!6719 = !{!6720, !6721, !6722, !6723}
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6718, file: !209, line: 204, baseType: !493, size: 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6718, file: !209, line: 205, baseType: !493, size: 32, offset: 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !6718, file: !209, line: 206, baseType: !493, size: 32, offset: 64)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !6718, file: !209, line: 207, baseType: !6724, size: 48, offset: 96)
!6724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 48, elements: !999)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !6678, file: !251, line: 427, baseType: !6726, size: 64, offset: 320)
!6726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6727, size: 64)
!6727 = !DISubroutineType(types: !6728)
!6728 = !{!32, !290, !6717}
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !6678, file: !251, line: 428, baseType: !6730, size: 64, offset: 384)
!6730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6731, size: 64)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{!987, !290}
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !6678, file: !251, line: 429, baseType: !6734, size: 64, offset: 448)
!6734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6735, size: 64)
!6735 = !DISubroutineType(types: !6736)
!6736 = !{null, !290, !987}
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !6678, file: !251, line: 430, baseType: !401, size: 64, offset: 512)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !6678, file: !251, line: 431, baseType: !6730, size: 64, offset: 576)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !6678, file: !251, line: 432, baseType: !6740, size: 64, offset: 640)
!6740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6741, size: 64)
!6741 = !DISubroutineType(types: !6742)
!6742 = !{!32, !290, !6743}
!6743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6744, size: 64)
!6744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !251, line: 93, size: 64, elements: !6745)
!6745 = !{!6746, !6747}
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !6744, file: !251, line: 94, baseType: !208, size: 32)
!6747 = !DIDerivedType(tag: DW_TAG_member, scope: !6744, file: !251, line: 95, baseType: !6748, size: 32, offset: 32)
!6748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6744, file: !251, line: 95, size: 32, elements: !6749)
!6749 = !{!6750, !6751, !6752, !6753, !6754, !6755}
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6748, file: !251, line: 96, baseType: !221, size: 32)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !6748, file: !251, line: 97, baseType: !229, size: 32)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !6748, file: !251, line: 98, baseType: !235, size: 32)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !6748, file: !251, line: 99, baseType: !242, size: 32)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !6748, file: !251, line: 100, baseType: !246, size: 32)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !6748, file: !251, line: 101, baseType: !794, size: 8)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !6678, file: !251, line: 434, baseType: !401, size: 64, offset: 704)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !6678, file: !251, line: 435, baseType: !6758, size: 64, offset: 768)
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6759, size: 64)
!6759 = !DISubroutineType(types: !6760)
!6760 = !{!32, !290, !6761, !793}
!6761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6762, size: 64)
!6762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !209, line: 335, size: 128, elements: !6763)
!6763 = !{!6764, !6765, !6766, !6767, !6768}
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6762, file: !209, line: 336, baseType: !493, size: 32)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !6762, file: !209, line: 337, baseType: !493, size: 32, offset: 32)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6762, file: !209, line: 338, baseType: !493, size: 32, offset: 64)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6762, file: !209, line: 339, baseType: !493, size: 32, offset: 96)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6762, file: !209, line: 340, baseType: !480, offset: 128)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !6678, file: !251, line: 437, baseType: !6758, size: 64, offset: 832)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !6678, file: !251, line: 439, baseType: !6771, size: 64, offset: 896)
!6771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6772, size: 64)
!6772 = !DISubroutineType(types: !6773)
!6773 = !{!32, !290, !6774}
!6774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6775, size: 64)
!6775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !209, line: 462, size: 736, elements: !6776)
!6776 = !{!6777, !6778, !6779, !6780, !6781, !6782, !6783, !6784, !6785, !6786, !6787, !6788, !6789, !6790, !6791, !6792, !6793, !6794, !6795, !6796, !6797, !6798, !6799}
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6775, file: !209, line: 463, baseType: !493, size: 32)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !6775, file: !209, line: 464, baseType: !493, size: 32, offset: 32)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !6775, file: !209, line: 465, baseType: !493, size: 32, offset: 64)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !6775, file: !209, line: 466, baseType: !493, size: 32, offset: 96)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !6775, file: !209, line: 467, baseType: !493, size: 32, offset: 128)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !6775, file: !209, line: 468, baseType: !493, size: 32, offset: 160)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !6775, file: !209, line: 469, baseType: !493, size: 32, offset: 192)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !6775, file: !209, line: 470, baseType: !493, size: 32, offset: 224)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !6775, file: !209, line: 471, baseType: !493, size: 32, offset: 256)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !6775, file: !209, line: 472, baseType: !493, size: 32, offset: 288)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !6775, file: !209, line: 473, baseType: !493, size: 32, offset: 320)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !6775, file: !209, line: 474, baseType: !493, size: 32, offset: 352)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !6775, file: !209, line: 475, baseType: !493, size: 32, offset: 384)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !6775, file: !209, line: 476, baseType: !493, size: 32, offset: 416)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !6775, file: !209, line: 477, baseType: !493, size: 32, offset: 448)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !6775, file: !209, line: 478, baseType: !493, size: 32, offset: 480)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !6775, file: !209, line: 479, baseType: !493, size: 32, offset: 512)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !6775, file: !209, line: 480, baseType: !493, size: 32, offset: 544)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !6775, file: !209, line: 481, baseType: !493, size: 32, offset: 576)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !6775, file: !209, line: 482, baseType: !493, size: 32, offset: 608)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !6775, file: !209, line: 483, baseType: !493, size: 32, offset: 640)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !6775, file: !209, line: 484, baseType: !493, size: 32, offset: 672)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !6775, file: !209, line: 485, baseType: !493, size: 32, offset: 704)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !6678, file: !251, line: 440, baseType: !6771, size: 64, offset: 960)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !6678, file: !251, line: 441, baseType: !6802, size: 64, offset: 1024)
!6802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6803, size: 64)
!6803 = !DISubroutineType(types: !6804)
!6804 = !{null, !290, !6805}
!6805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6806, size: 64)
!6806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !209, line: 513, size: 288, elements: !6807)
!6807 = !{!6808, !6809, !6810, !6811, !6812, !6813, !6814, !6815, !6816}
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6806, file: !209, line: 514, baseType: !493, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !6806, file: !209, line: 515, baseType: !493, size: 32, offset: 32)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !6806, file: !209, line: 516, baseType: !493, size: 32, offset: 64)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !6806, file: !209, line: 517, baseType: !493, size: 32, offset: 96)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !6806, file: !209, line: 518, baseType: !493, size: 32, offset: 128)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !6806, file: !209, line: 519, baseType: !493, size: 32, offset: 160)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !6806, file: !209, line: 520, baseType: !493, size: 32, offset: 192)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !6806, file: !209, line: 521, baseType: !493, size: 32, offset: 224)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !6806, file: !209, line: 522, baseType: !493, size: 32, offset: 256)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !6678, file: !251, line: 443, baseType: !6818, size: 64, offset: 1088)
!6818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6819, size: 64)
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!32, !290, !6805}
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !6678, file: !251, line: 445, baseType: !6822, size: 64, offset: 1152)
!6822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6823, size: 64)
!6823 = !DISubroutineType(types: !6824)
!6824 = !{null, !290, !6825}
!6825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6826, size: 64)
!6826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !251, line: 260, size: 128, elements: !6827)
!6827 = !{!6828, !6829}
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !6826, file: !251, line: 261, baseType: !331, size: 64)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !6826, file: !251, line: 262, baseType: !331, size: 64, offset: 64)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !6678, file: !251, line: 447, baseType: !6831, size: 64, offset: 1216)
!6831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6832, size: 64)
!6832 = !DISubroutineType(types: !6833)
!6833 = !{null, !290, !6834}
!6834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6835, size: 64)
!6835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !209, line: 575, size: 128, elements: !6836)
!6836 = !{!6837, !6838, !6839, !6840}
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6835, file: !209, line: 576, baseType: !493, size: 32)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6835, file: !209, line: 577, baseType: !493, size: 32, offset: 32)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !6835, file: !209, line: 578, baseType: !493, size: 32, offset: 64)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !6835, file: !209, line: 579, baseType: !493, size: 32, offset: 96)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !6678, file: !251, line: 449, baseType: !6842, size: 64, offset: 1280)
!6842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6843, size: 64)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{!32, !290, !6834}
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !6678, file: !251, line: 451, baseType: !6846, size: 64, offset: 1344)
!6846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6847, size: 64)
!6847 = !DISubroutineType(types: !6848)
!6848 = !{null, !290, !6849, !4353}
!6849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6850, size: 64)
!6850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !209, line: 770, size: 128, elements: !6851)
!6851 = !{!6852, !6853, !6854, !6855, !6856}
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6850, file: !209, line: 771, baseType: !493, size: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6850, file: !209, line: 772, baseType: !493, size: 32, offset: 32)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6850, file: !209, line: 773, baseType: !493, size: 32, offset: 64)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6850, file: !209, line: 774, baseType: !493, size: 32, offset: 96)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6850, file: !209, line: 775, baseType: !6857, offset: 128)
!6857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, elements: !483)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !6678, file: !251, line: 452, baseType: !6859, size: 64, offset: 1408)
!6859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6860, size: 64)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{null, !290, !987, !793}
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !6678, file: !251, line: 453, baseType: !6863, size: 64, offset: 1472)
!6863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6864, size: 64)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!32, !290, !250}
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !6678, file: !251, line: 454, baseType: !6867, size: 64, offset: 1536)
!6867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6868, size: 64)
!6868 = !DISubroutineType(types: !6869)
!6869 = !{null, !290, !6870, !4353}
!6870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6871, size: 64)
!6871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !209, line: 789, size: 64, elements: !6872)
!6872 = !{!6873, !6874, !6875}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6871, file: !209, line: 790, baseType: !493, size: 32)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6871, file: !209, line: 791, baseType: !493, size: 32, offset: 32)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6871, file: !209, line: 792, baseType: !6857, offset: 64)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !6678, file: !251, line: 456, baseType: !401, size: 64, offset: 1600)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6678, file: !251, line: 457, baseType: !405, size: 64, offset: 1664)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !6678, file: !251, line: 458, baseType: !6730, size: 64, offset: 1728)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !6678, file: !251, line: 459, baseType: !6880, size: 64, offset: 1792)
!6880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6881, size: 64)
!6881 = !DISubroutineType(types: !6882)
!6882 = !{!32, !290, !987}
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !6678, file: !251, line: 460, baseType: !722, size: 64, offset: 1856)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !6678, file: !251, line: 461, baseType: !6885, size: 64, offset: 1920)
!6885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 64)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{!32, !290, !6888, !2516}
!6888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6889, size: 64)
!6889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !209, line: 1088, size: 1536, elements: !6890)
!6890 = !{!6891, !6892, !6893, !6894, !6980, !6985}
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6889, file: !209, line: 1089, baseType: !493, size: 32)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6889, file: !209, line: 1090, baseType: !493, size: 32, offset: 32)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6889, file: !209, line: 1091, baseType: !333, size: 64, offset: 64)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !6889, file: !209, line: 1092, baseType: !6895, size: 1344, offset: 128)
!6895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !209, line: 992, size: 1344, elements: !6896)
!6896 = !{!6897, !6898, !6966, !6976, !6977, !6978, !6979}
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6895, file: !209, line: 993, baseType: !493, size: 32)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !6895, file: !209, line: 994, baseType: !6899, size: 416, offset: 32)
!6899 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !209, line: 939, size: 416, elements: !6900)
!6900 = !{!6901, !6909, !6910, !6911, !6918, !6919, !6928, !6936, !6937, !6938, !6945, !6946, !6954, !6962}
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !6899, file: !209, line: 940, baseType: !6902, size: 128)
!6902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !209, line: 845, size: 128, elements: !6903)
!6903 = !{!6904, !6905, !6906, !6907, !6908}
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6902, file: !209, line: 846, baseType: !3226, size: 32)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6902, file: !209, line: 847, baseType: !3226, size: 32, offset: 32)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6902, file: !209, line: 848, baseType: !535, size: 16, offset: 64)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6902, file: !209, line: 849, baseType: !535, size: 16, offset: 80)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6902, file: !209, line: 850, baseType: !481, size: 8, offset: 96)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !6899, file: !209, line: 941, baseType: !6902, size: 128)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !6899, file: !209, line: 942, baseType: !6902, size: 128)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !6899, file: !209, line: 943, baseType: !6912, size: 128)
!6912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !209, line: 862, size: 128, elements: !6913)
!6913 = !{!6914, !6915, !6916, !6917}
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6912, file: !209, line: 863, baseType: !3226, size: 32)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6912, file: !209, line: 864, baseType: !3226, size: 32, offset: 32)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6912, file: !209, line: 865, baseType: !3226, size: 32, offset: 64)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6912, file: !209, line: 866, baseType: !481, size: 8, offset: 96)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !6899, file: !209, line: 944, baseType: !6912, size: 128)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !6899, file: !209, line: 945, baseType: !6920, size: 128)
!6920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !209, line: 880, size: 128, elements: !6921)
!6921 = !{!6922, !6923, !6924, !6925, !6926, !6927}
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6920, file: !209, line: 881, baseType: !3226, size: 32)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6920, file: !209, line: 882, baseType: !3226, size: 32, offset: 32)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6920, file: !209, line: 883, baseType: !3226, size: 32, offset: 64)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6920, file: !209, line: 884, baseType: !481, size: 8, offset: 96)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !6920, file: !209, line: 885, baseType: !481, size: 8, offset: 104)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !6920, file: !209, line: 886, baseType: !481, size: 8, offset: 112)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !6899, file: !209, line: 946, baseType: !6929, size: 320)
!6929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !209, line: 899, size: 320, elements: !6930)
!6930 = !{!6931, !6932, !6933, !6934, !6935}
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6929, file: !209, line: 900, baseType: !3247, size: 128)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6929, file: !209, line: 901, baseType: !3247, size: 128, offset: 128)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6929, file: !209, line: 902, baseType: !535, size: 16, offset: 256)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6929, file: !209, line: 903, baseType: !535, size: 16, offset: 272)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6929, file: !209, line: 904, baseType: !481, size: 8, offset: 288)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !6899, file: !209, line: 947, baseType: !6929, size: 320)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !6899, file: !209, line: 948, baseType: !6929, size: 320)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !6899, file: !209, line: 949, baseType: !6939, size: 320)
!6939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !209, line: 916, size: 320, elements: !6940)
!6940 = !{!6941, !6942, !6943, !6944}
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6939, file: !209, line: 917, baseType: !3247, size: 128)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6939, file: !209, line: 918, baseType: !3247, size: 128, offset: 128)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6939, file: !209, line: 919, baseType: !3226, size: 32, offset: 256)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6939, file: !209, line: 920, baseType: !481, size: 8, offset: 288)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !6899, file: !209, line: 950, baseType: !6939, size: 320)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !6899, file: !209, line: 951, baseType: !6947, size: 320)
!6947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !209, line: 931, size: 320, elements: !6948)
!6948 = !{!6949, !6950, !6951, !6952, !6953}
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6947, file: !209, line: 932, baseType: !3247, size: 128)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6947, file: !209, line: 933, baseType: !3247, size: 128, offset: 128)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6947, file: !209, line: 934, baseType: !3226, size: 32, offset: 256)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6947, file: !209, line: 935, baseType: !481, size: 8, offset: 288)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !6947, file: !209, line: 936, baseType: !481, size: 8, offset: 296)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !6899, file: !209, line: 952, baseType: !6955, size: 112)
!6955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !6956, line: 164, size: 112, elements: !6957)
!6956 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!6957 = !{!6958, !6960, !6961}
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6955, file: !6956, line: 165, baseType: !6959, size: 48)
!6959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 48, elements: !999)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !6955, file: !6956, line: 166, baseType: !6959, size: 48, offset: 48)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !6955, file: !6956, line: 167, baseType: !535, size: 16, offset: 96)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !6899, file: !209, line: 953, baseType: !6963, size: 416)
!6963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 416, elements: !6964)
!6964 = !{!6965}
!6965 = !DISubrange(count: 52)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !6895, file: !209, line: 995, baseType: !6967, size: 160, offset: 448)
!6967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !209, line: 967, size: 160, elements: !6968)
!6968 = !{!6969, !6971, !6972, !6973, !6974}
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6967, file: !209, line: 968, baseType: !6970, size: 16)
!6970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 16, elements: !2947)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6967, file: !209, line: 969, baseType: !6959, size: 48, offset: 16)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !6967, file: !209, line: 970, baseType: !535, size: 16, offset: 64)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !6967, file: !209, line: 971, baseType: !535, size: 16, offset: 80)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6967, file: !209, line: 972, baseType: !6975, size: 64, offset: 96)
!6975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3226, size: 64, elements: !2947)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !6895, file: !209, line: 996, baseType: !6899, size: 416, offset: 608)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !6895, file: !209, line: 997, baseType: !6967, size: 160, offset: 1024)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !6895, file: !209, line: 998, baseType: !333, size: 64, offset: 1216)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !6895, file: !209, line: 999, baseType: !493, size: 32, offset: 1280)
!6980 = !DIDerivedType(tag: DW_TAG_member, scope: !6889, file: !209, line: 1093, baseType: !6981, size: 32, offset: 1472)
!6981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6889, file: !209, line: 1093, size: 32, elements: !6982)
!6982 = !{!6983, !6984}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !6981, file: !209, line: 1094, baseType: !493, size: 32)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !6981, file: !209, line: 1095, baseType: !493, size: 32)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !6889, file: !209, line: 1097, baseType: !492, offset: 1504)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !6678, file: !251, line: 463, baseType: !6987, size: 64, offset: 1984)
!6987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6988, size: 64)
!6988 = !DISubroutineType(types: !6989)
!6989 = !{!32, !290, !6888}
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !6678, file: !251, line: 464, baseType: !6991, size: 64, offset: 2048)
!6991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6992, size: 64)
!6992 = !DISubroutineType(types: !6993)
!6993 = !{!32, !290, !6994}
!6994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6995, size: 64)
!6995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !209, line: 1217, size: 1088, elements: !6996)
!6996 = !{!6997, !6998, !6999}
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6995, file: !209, line: 1218, baseType: !493, size: 32)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !6995, file: !209, line: 1219, baseType: !493, size: 32, offset: 32)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6995, file: !209, line: 1220, baseType: !4149, size: 1024, offset: 64)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !6678, file: !251, line: 465, baseType: !7001, size: 64, offset: 2112)
!7001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7002, size: 64)
!7002 = !DISubroutineType(types: !7003)
!7003 = !{!32, !290, !2516}
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !6678, file: !251, line: 466, baseType: !6730, size: 64, offset: 2176)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !6678, file: !251, line: 467, baseType: !6730, size: 64, offset: 2240)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !6678, file: !251, line: 468, baseType: !7007, size: 64, offset: 2304)
!7007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7008, size: 64)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{!32, !290, !2516, !793, !793}
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !6678, file: !251, line: 470, baseType: !7011, size: 64, offset: 2368)
!7011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7012, size: 64)
!7012 = !DISubroutineType(types: !7013)
!7013 = !{!32, !290, !7014, !7016, !7017}
!7014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7015, size: 64)
!7015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7017, size: 64)
!7017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !6678, file: !251, line: 472, baseType: !7019, size: 64, offset: 2432)
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 64)
!7020 = !DISubroutineType(types: !7021)
!7021 = !{!32, !290, !2516, !793, !793, !987}
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !6678, file: !251, line: 474, baseType: !7023, size: 64, offset: 2496)
!7023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7024, size: 64)
!7024 = !DISubroutineType(types: !7025)
!7025 = !{!32, !290, !7014, !7016, !7017, !2516, !771}
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !6678, file: !251, line: 477, baseType: !7027, size: 64, offset: 2560)
!7027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7028, size: 64)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{null, !290, !7030}
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7031, size: 64)
!7031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !209, line: 541, size: 288, elements: !7032)
!7032 = !{!7033, !7034, !7035, !7036, !7037, !7038, !7039, !7040, !7041}
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7031, file: !209, line: 542, baseType: !493, size: 32)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !7031, file: !209, line: 543, baseType: !493, size: 32, offset: 32)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !7031, file: !209, line: 544, baseType: !493, size: 32, offset: 64)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !7031, file: !209, line: 545, baseType: !493, size: 32, offset: 96)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !7031, file: !209, line: 546, baseType: !493, size: 32, offset: 128)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !7031, file: !209, line: 547, baseType: !493, size: 32, offset: 160)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !7031, file: !209, line: 548, baseType: !493, size: 32, offset: 192)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !7031, file: !209, line: 549, baseType: !493, size: 32, offset: 224)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !7031, file: !209, line: 550, baseType: !493, size: 32, offset: 256)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !6678, file: !251, line: 478, baseType: !7043, size: 64, offset: 2624)
!7043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 64)
!7044 = !DISubroutineType(types: !7045)
!7045 = !{!32, !290, !7030}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !6678, file: !251, line: 479, baseType: !7047, size: 64, offset: 2688)
!7047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7048, size: 64)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!32, !290, !7050}
!7050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7051, size: 64)
!7051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !209, line: 1237, size: 128, elements: !7052)
!7052 = !{!7053, !7054, !7055, !7056, !7057}
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7051, file: !209, line: 1238, baseType: !493, size: 32)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !7051, file: !209, line: 1239, baseType: !493, size: 32, offset: 32)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7051, file: !209, line: 1240, baseType: !493, size: 32, offset: 64)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7051, file: !209, line: 1241, baseType: !493, size: 32, offset: 96)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7051, file: !209, line: 1242, baseType: !480, offset: 128)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !6678, file: !251, line: 480, baseType: !7059, size: 64, offset: 2752)
!7059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7060, size: 64)
!7060 = !DISubroutineType(types: !7061)
!7061 = !{!32, !290, !7050, !591}
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !6678, file: !251, line: 482, baseType: !7047, size: 64, offset: 2816)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !6678, file: !251, line: 483, baseType: !7064, size: 64, offset: 2880)
!7064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7065, size: 64)
!7065 = !DISubroutineType(types: !7066)
!7066 = !{!32, !290, !7067}
!7067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7068, size: 64)
!7068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !209, line: 1317, size: 352, elements: !7069)
!7069 = !{!7070, !7071, !7072, !7073, !7074, !7076, !7077}
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7068, file: !209, line: 1318, baseType: !493, size: 32)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !7068, file: !209, line: 1319, baseType: !493, size: 32, offset: 32)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !7068, file: !209, line: 1320, baseType: !942, size: 32, offset: 64)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !7068, file: !209, line: 1321, baseType: !493, size: 32, offset: 96)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !7068, file: !209, line: 1322, baseType: !7075, size: 96, offset: 128)
!7075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !1592)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !7068, file: !209, line: 1323, baseType: !493, size: 32, offset: 224)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !7068, file: !209, line: 1324, baseType: !7075, size: 96, offset: 256)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !6678, file: !251, line: 484, baseType: !7079, size: 64, offset: 2944)
!7079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7080, size: 64)
!7080 = !DISubroutineType(types: !7081)
!7081 = !{!32, !290, !7082}
!7082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7083, size: 64)
!7083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !209, line: 382, size: 352, elements: !7084)
!7084 = !{!7085, !7086, !7087, !7088}
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7083, file: !209, line: 383, baseType: !493, size: 32)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7083, file: !209, line: 384, baseType: !493, size: 32, offset: 32)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !7083, file: !209, line: 385, baseType: !493, size: 32, offset: 64)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7083, file: !209, line: 386, baseType: !7089, size: 256, offset: 96)
!7089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !2433)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !6678, file: !251, line: 486, baseType: !6758, size: 64, offset: 3008)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !6678, file: !251, line: 488, baseType: !7092, size: 64, offset: 3072)
!7092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7093, size: 64)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{!32, !290, !7095}
!7095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7096, size: 64)
!7096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !209, line: 360, size: 320, elements: !7097)
!7097 = !{!7098, !7099, !7100, !7101, !7102, !7103, !7104, !7105, !7106}
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7096, file: !209, line: 361, baseType: !493, size: 32)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7096, file: !209, line: 362, baseType: !493, size: 32, offset: 32)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !7096, file: !209, line: 363, baseType: !493, size: 32, offset: 64)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !7096, file: !209, line: 364, baseType: !493, size: 32, offset: 96)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !7096, file: !209, line: 365, baseType: !493, size: 32, offset: 128)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !7096, file: !209, line: 366, baseType: !493, size: 32, offset: 160)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !7096, file: !209, line: 367, baseType: !493, size: 32, offset: 192)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !7096, file: !209, line: 368, baseType: !493, size: 32, offset: 224)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7096, file: !209, line: 369, baseType: !2946, size: 64, offset: 256)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !6678, file: !251, line: 489, baseType: !7092, size: 64, offset: 3136)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !6678, file: !251, line: 490, baseType: !7109, size: 64, offset: 3200)
!7109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7110, size: 64)
!7110 = !DISubroutineType(types: !7111)
!7111 = !{!32, !290, !7112, !591}
!7112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7113, size: 64)
!7113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7114)
!7114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !209, line: 244, size: 128, elements: !7115)
!7115 = !{!7116, !7117, !7118, !7119, !7120}
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7114, file: !209, line: 245, baseType: !493, size: 32)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7114, file: !209, line: 246, baseType: !493, size: 32, offset: 32)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !7114, file: !209, line: 247, baseType: !493, size: 32, offset: 64)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7114, file: !209, line: 248, baseType: !493, size: 32, offset: 96)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7114, file: !209, line: 249, baseType: !7121, offset: 128)
!7121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, elements: !483)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !6678, file: !251, line: 492, baseType: !7123, size: 64, offset: 3264)
!7123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7124, size: 64)
!7124 = !DISubroutineType(types: !7125)
!7125 = !{!32, !290, !7112, !3276}
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !6678, file: !251, line: 494, baseType: !7127, size: 64, offset: 3328)
!7127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7128, size: 64)
!7128 = !DISubroutineType(types: !7129)
!7129 = !{!32, !290, !987, !6774}
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !6678, file: !251, line: 496, baseType: !7127, size: 64, offset: 3392)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !6678, file: !251, line: 498, baseType: !7132, size: 64, offset: 3456)
!7132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7133, size: 64)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{!32, !290, !7135}
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7136, size: 64)
!7136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !251, line: 124, size: 768, elements: !7137)
!7137 = !{!7138, !7163}
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7136, file: !251, line: 125, baseType: !7139, size: 384)
!7139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !209, line: 1996, size: 384, elements: !7140)
!7140 = !{!7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148, !7149, !7150, !7153, !7154, !7155, !7156, !7158, !7162}
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7139, file: !209, line: 1997, baseType: !493, size: 32)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !7139, file: !209, line: 1998, baseType: !493, size: 32, offset: 32)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !7139, file: !209, line: 1999, baseType: !481, size: 8, offset: 64)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7139, file: !209, line: 2000, baseType: !481, size: 8, offset: 72)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !7139, file: !209, line: 2001, baseType: !481, size: 8, offset: 80)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !7139, file: !209, line: 2002, baseType: !481, size: 8, offset: 88)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !7139, file: !209, line: 2003, baseType: !481, size: 8, offset: 96)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !7139, file: !209, line: 2004, baseType: !481, size: 8, offset: 104)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !7139, file: !209, line: 2005, baseType: !481, size: 8, offset: 112)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !7139, file: !209, line: 2006, baseType: !7151, size: 8, offset: 120)
!7151 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !334, line: 20, baseType: !7152)
!7152 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !7139, file: !209, line: 2007, baseType: !481, size: 8, offset: 128)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !7139, file: !209, line: 2008, baseType: !481, size: 8, offset: 136)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !7139, file: !209, line: 2009, baseType: !481, size: 8, offset: 144)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !7139, file: !209, line: 2010, baseType: !7157, size: 8, offset: 152)
!7157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 8, elements: !2472)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7139, file: !209, line: 2011, baseType: !7159, size: 224, offset: 160)
!7159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 224, elements: !7160)
!7160 = !{!7161}
!7161 = !DISubrange(count: 7)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !7139, file: !209, line: 2012, baseType: !492, offset: 384)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !7136, file: !251, line: 130, baseType: !7164, size: 384, offset: 384)
!7164 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7136, file: !251, line: 126, size: 384, elements: !7165)
!7165 = !{!7166, !7168, !7169}
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7164, file: !251, line: 127, baseType: !7167, size: 128)
!7167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, elements: !2947)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !7164, file: !251, line: 128, baseType: !7167, size: 128, offset: 128)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !7164, file: !251, line: 129, baseType: !7167, size: 128, offset: 256)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !6678, file: !251, line: 500, baseType: !7171, size: 64, offset: 3520)
!7171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7172, size: 64)
!7172 = !DISubroutineType(types: !7173)
!7173 = !{!32, !290, !7174}
!7174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7175, size: 64)
!7175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7136)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !6678, file: !251, line: 502, baseType: !7177, size: 64, offset: 3584)
!7177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7178, size: 64)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{!32, !290, !7180}
!7180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7181, size: 64)
!7181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !209, line: 1389, size: 128, elements: !7182)
!7182 = !{!7183, !7184, !7185, !7186}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7181, file: !209, line: 1390, baseType: !493, size: 32)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !7181, file: !209, line: 1392, baseType: !493, size: 32, offset: 32)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !7181, file: !209, line: 1393, baseType: !493, size: 32, offset: 64)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7181, file: !209, line: 1394, baseType: !493, size: 32, offset: 96)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !6678, file: !251, line: 504, baseType: !7177, size: 64, offset: 3648)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !6678, file: !251, line: 506, baseType: !6867, size: 64, offset: 3712)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !6678, file: !251, line: 508, baseType: !7109, size: 64, offset: 3776)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !6678, file: !251, line: 510, baseType: !7123, size: 64, offset: 3840)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !264, file: !31, line: 1922, baseType: !7192, size: 64, offset: 4096)
!7192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7193, size: 64)
!7193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7194)
!7194 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !31, line: 1922, flags: DIFlagFwdDecl)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !264, file: !31, line: 1933, baseType: !7196, size: 64, offset: 4160)
!7196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7197, size: 64)
!7197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7198)
!7198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !31, line: 270, size: 384, elements: !7199)
!7199 = !{!7200, !7204, !7210, !7223, !7227, !7231}
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !7198, file: !31, line: 271, baseType: !7201, size: 64)
!7201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7202, size: 64)
!7202 = !DISubroutineType(types: !7203)
!7203 = !{!32, !415, !290, !476, !3276, !3276, !7}
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !7198, file: !31, line: 274, baseType: !7205, size: 64, offset: 64)
!7205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7206, size: 64)
!7206 = !DISubroutineType(types: !7207)
!7207 = !{!32, !7208, !564}
!7208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7209, size: 64)
!7209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !416)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !7198, file: !31, line: 275, baseType: !7211, size: 64, offset: 128)
!7211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7212, size: 64)
!7212 = !DISubroutineType(types: !7213)
!7213 = !{!32, !7214, !7216, !535}
!7214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 64)
!7215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!7216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7217, size: 64)
!7217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !31, line: 244, size: 832, elements: !7218)
!7218 = !{!7219, !7220, !7221}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !7217, file: !31, line: 245, baseType: !7, size: 32)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !7217, file: !31, line: 246, baseType: !3343, size: 32, offset: 32)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !7217, file: !31, line: 254, baseType: !7222, size: 768, offset: 64)
!7222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 768, elements: !5518)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !7198, file: !31, line: 276, baseType: !7224, size: 64, offset: 192)
!7224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7225, size: 64)
!7225 = !DISubroutineType(types: !7226)
!7226 = !{null, !7216, !773, !946}
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !7198, file: !31, line: 279, baseType: !7228, size: 64, offset: 256)
!7228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7229, size: 64)
!7229 = !DISubroutineType(types: !7230)
!7230 = !{!771, !292, !7}
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !7198, file: !31, line: 280, baseType: !7232, size: 64, offset: 320)
!7232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7233, size: 64)
!7233 = !DISubroutineType(types: !7234)
!7234 = !{!535, !7208}
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !264, file: !31, line: 1935, baseType: !7, size: 32, offset: 4224)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !264, file: !31, line: 1936, baseType: !7, size: 32, offset: 4256)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !264, file: !31, line: 1938, baseType: !476, size: 16, offset: 4288)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !264, file: !31, line: 1939, baseType: !476, size: 16, offset: 4304)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !264, file: !31, line: 1941, baseType: !482, size: 8, offset: 4320)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !264, file: !31, line: 1942, baseType: !482, size: 8, offset: 4328)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !264, file: !31, line: 1944, baseType: !482, size: 8, offset: 4336)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !264, file: !31, line: 1945, baseType: !482, size: 8, offset: 4344)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !264, file: !31, line: 1952, baseType: !7, size: 32, offset: 4352)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !264, file: !31, line: 1953, baseType: !7, size: 32, offset: 4384)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !264, file: !31, line: 1954, baseType: !7, size: 32, offset: 4416)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !264, file: !31, line: 1955, baseType: !476, size: 16, offset: 4448)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !264, file: !31, line: 1956, baseType: !476, size: 16, offset: 4464)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !264, file: !31, line: 1957, baseType: !482, size: 8, offset: 4480)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !264, file: !31, line: 1958, baseType: !482, size: 8, offset: 4488)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !264, file: !31, line: 1960, baseType: !476, size: 16, offset: 4496)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !264, file: !31, line: 1961, baseType: !476, size: 16, offset: 4512)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !264, file: !31, line: 1964, baseType: !1031, size: 256, offset: 4528)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !264, file: !31, line: 1965, baseType: !482, size: 8, offset: 4784)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !264, file: !31, line: 1966, baseType: !482, size: 8, offset: 4792)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !264, file: !31, line: 1967, baseType: !482, size: 8, offset: 4800)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !264, file: !31, line: 1968, baseType: !482, size: 8, offset: 4808)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !264, file: !31, line: 1970, baseType: !476, size: 16, offset: 4816)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !264, file: !31, line: 1971, baseType: !476, size: 16, offset: 4832)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !264, file: !31, line: 1972, baseType: !476, size: 16, offset: 4848)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !264, file: !31, line: 1973, baseType: !1670, offset: 4864)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !264, file: !31, line: 1975, baseType: !7262, size: 192, offset: 4864)
!7262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !31, line: 224, size: 192, elements: !7263)
!7263 = !{!7264, !7265}
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7262, file: !31, line: 225, baseType: !284, size: 128)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7262, file: !31, line: 226, baseType: !32, size: 32, offset: 128)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !264, file: !31, line: 1976, baseType: !7262, size: 192, offset: 5056)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !264, file: !31, line: 1977, baseType: !7262, size: 192, offset: 5248)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !264, file: !31, line: 1980, baseType: !3780, size: 64, offset: 5440)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !264, file: !31, line: 1985, baseType: !7, size: 32, offset: 5504)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !264, file: !31, line: 1986, baseType: !7, size: 32, offset: 5536)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !264, file: !31, line: 1987, baseType: !771, size: 8, offset: 5568)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !264, file: !31, line: 1996, baseType: !7273, size: 64, offset: 5632)
!7273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7274, size: 64)
!7274 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !31, line: 1996, flags: DIFlagFwdDecl)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !264, file: !31, line: 2007, baseType: !7276, size: 64, offset: 5696)
!7276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7277, size: 64)
!7277 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !31, line: 2007, flags: DIFlagFwdDecl)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !264, file: !31, line: 2011, baseType: !7279, size: 64, offset: 5760)
!7279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7280, size: 64)
!7280 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !31, line: 2011, flags: DIFlagFwdDecl)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !264, file: !31, line: 2015, baseType: !7282, size: 64, offset: 5824)
!7282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7283, size: 64)
!7283 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !31, line: 62, flags: DIFlagFwdDecl)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !264, file: !31, line: 2016, baseType: !7285, size: 64, offset: 5888)
!7285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7286, size: 64)
!7286 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !31, line: 64, flags: DIFlagFwdDecl)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !264, file: !31, line: 2025, baseType: !564, size: 64, offset: 5952)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !264, file: !31, line: 2027, baseType: !7289, size: 64, offset: 6016)
!7289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7290, size: 64)
!7290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !31, line: 736, size: 1536, elements: !7291)
!7291 = !{!7292, !7293, !7294}
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7290, file: !31, line: 741, baseType: !3772, size: 512)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7290, file: !31, line: 742, baseType: !290, size: 64, offset: 512)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !7290, file: !31, line: 743, baseType: !7295, size: 512, align: 512, offset: 1024)
!7295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !6642, line: 57, size: 512, align: 512, elements: !7296)
!7296 = !{!7297, !7298, !7299, !7300}
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7295, file: !6642, line: 58, baseType: !290, size: 64)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !7295, file: !6642, line: 59, baseType: !987, size: 32, offset: 64)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !7295, file: !6642, line: 60, baseType: !987, size: 32, offset: 96)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !7295, file: !6642, line: 61, baseType: !6650, size: 64, offset: 128)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !264, file: !31, line: 2028, baseType: !7, size: 32, offset: 6080)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !264, file: !31, line: 2029, baseType: !7, size: 32, offset: 6112)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !264, file: !31, line: 2031, baseType: !1088, size: 64, offset: 6144)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !264, file: !31, line: 2032, baseType: !312, size: 64, offset: 6208)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !264, file: !31, line: 2033, baseType: !32, size: 32, offset: 6272)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !264, file: !31, line: 2034, baseType: !7307, size: 64, offset: 6336)
!7307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7308, size: 64)
!7308 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !31, line: 430, baseType: !7309)
!7309 = !DISubroutineType(types: !7310)
!7310 = !{!7311, !7312}
!7311 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !31, line: 429, baseType: !257)
!7312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !264, file: !31, line: 2035, baseType: !591, size: 64, offset: 6400)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !264, file: !31, line: 2040, baseType: !7315, size: 64, offset: 6464)
!7315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7316, size: 64)
!7316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !31, line: 584, size: 1600, elements: !7317)
!7317 = !{!7318, !7319, !7322, !7323, !7324, !7325, !7326, !7327, !7328, !7329, !7330, !7331}
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7316, file: !31, line: 588, baseType: !290, size: 64)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !7316, file: !31, line: 589, baseType: !7320, size: 64, offset: 64)
!7320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7321, size: 64)
!7321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !31, line: 589, flags: DIFlagFwdDecl)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !7316, file: !31, line: 590, baseType: !7320, size: 64, offset: 128)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7316, file: !31, line: 592, baseType: !3772, size: 512, offset: 192)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !7316, file: !31, line: 597, baseType: !312, size: 64, offset: 704)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !7316, file: !31, line: 602, baseType: !312, size: 64, offset: 768)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !7316, file: !31, line: 605, baseType: !290, size: 64, offset: 832)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !7316, file: !31, line: 612, baseType: !1670, offset: 896)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !7316, file: !31, line: 613, baseType: !32, size: 32, offset: 896)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !7316, file: !31, line: 617, baseType: !312, size: 64, offset: 960)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7316, file: !31, line: 619, baseType: !312, size: 64, offset: 1024)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !7316, file: !31, line: 622, baseType: !7332, size: 512, offset: 1088)
!7332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !7333, line: 43, size: 512, elements: !7334)
!7333 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!7334 = !{!7335, !7336, !7337, !7338, !7339, !7340, !7341, !7342, !7343, !7344, !7345, !7346, !7347}
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !7332, file: !7333, line: 45, baseType: !7, size: 32)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !7332, file: !7333, line: 46, baseType: !7, size: 32, offset: 32)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !7332, file: !7333, line: 47, baseType: !7, size: 32, offset: 64)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !7332, file: !7333, line: 51, baseType: !7, size: 32, offset: 96)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !7332, file: !7333, line: 52, baseType: !7, size: 32, offset: 128)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !7332, file: !7333, line: 54, baseType: !7, size: 32, offset: 160)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !7332, file: !7333, line: 55, baseType: !7, size: 32, offset: 192)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !7332, file: !7333, line: 56, baseType: !7, size: 32, offset: 224)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !7332, file: !7333, line: 58, baseType: !7, size: 32, offset: 256)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !7332, file: !7333, line: 59, baseType: !312, size: 64, offset: 320)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !7332, file: !7333, line: 62, baseType: !7, size: 32, offset: 384)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !7332, file: !7333, line: 63, baseType: !7, size: 32, offset: 416)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !7332, file: !7333, line: 64, baseType: !7, size: 32, offset: 448)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !264, file: !31, line: 2045, baseType: !1031, size: 256, offset: 6528)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !264, file: !31, line: 2049, baseType: !276, size: 128, offset: 6784)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !264, file: !31, line: 2054, baseType: !7315, size: 64, offset: 6912)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !264, file: !31, line: 2055, baseType: !7, size: 32, offset: 6976)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !264, file: !31, line: 2056, baseType: !7, size: 32, offset: 7008)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !264, file: !31, line: 2057, baseType: !7320, size: 64, offset: 7040)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !264, file: !31, line: 2058, baseType: !7, size: 32, offset: 7104)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !264, file: !31, line: 2059, baseType: !1670, offset: 7136)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !264, file: !31, line: 2061, baseType: !7357, size: 64, offset: 7168)
!7357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7358, size: 64)
!7358 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !31, line: 879, flags: DIFlagFwdDecl)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !264, file: !31, line: 2075, baseType: !3253, size: 320, offset: 7232)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !264, file: !31, line: 2076, baseType: !32, size: 32, offset: 7552)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !264, file: !31, line: 2078, baseType: !987, size: 32, offset: 7584)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !264, file: !31, line: 2080, baseType: !284, size: 128, offset: 7616)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !264, file: !31, line: 2081, baseType: !1001, size: 64, offset: 7744)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !264, file: !31, line: 2083, baseType: !284, size: 128, offset: 7808)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !264, file: !31, line: 2091, baseType: !263, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !264, file: !31, line: 2093, baseType: !771, size: 8, offset: 7944)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !264, file: !31, line: 2098, baseType: !7368, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!7368 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2095, baseType: !7, size: 32, elements: !7369)
!7369 = !{!7370, !7371}
!7370 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!7371 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !264, file: !31, line: 2100, baseType: !771, size: 8, offset: 7968)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !264, file: !31, line: 2101, baseType: !405, size: 64, offset: 8000)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !264, file: !31, line: 2107, baseType: !7375, size: 64, offset: 8064)
!7375 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !3008, line: 318, baseType: !7376)
!7376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3008, line: 314, size: 64, elements: !7377)
!7377 = !{!7378}
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !7376, file: !3008, line: 316, baseType: !3006, size: 64)
!7379 = !DIDerivedType(tag: DW_TAG_member, scope: !264, file: !31, line: 2110, baseType: !7380, size: 64, offset: 8128)
!7380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !264, file: !31, line: 2110, size: 64, elements: !7381)
!7381 = !{!7382, !7383, !7404, !7413}
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !7380, file: !31, line: 2111, baseType: !591, size: 64)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !7380, file: !31, line: 2112, baseType: !7384, size: 64)
!7384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7385, size: 64)
!7385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !31, line: 2542, size: 128, align: 128, elements: !7386)
!7386 = !{!7387, !7402, !7403}
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !7385, file: !31, line: 2543, baseType: !7388, size: 64)
!7388 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3090, line: 79, baseType: !7389)
!7389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3090, line: 77, size: 64, elements: !7390)
!7390 = !{!7391}
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !7389, file: !3090, line: 78, baseType: !7392, size: 64)
!7392 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !7393, line: 26, baseType: !7394)
!7393 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!7394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7393, line: 24, size: 64, elements: !7395)
!7395 = !{!7396}
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7394, file: !7393, line: 25, baseType: !7397, size: 64)
!7397 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !7398, line: 12, baseType: !7399)
!7398 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!7399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7398, line: 10, size: 64, elements: !7400)
!7400 = !{!7401}
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7399, file: !7398, line: 11, baseType: !371, size: 64)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !7385, file: !31, line: 2544, baseType: !7388, size: 64, offset: 64)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7385, file: !31, line: 2545, baseType: !3089, offset: 128)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !7380, file: !31, line: 2113, baseType: !7405, size: 64)
!7405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7406, size: 64)
!7406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !31, line: 2534, size: 256, align: 256, elements: !7407)
!7407 = !{!7408, !7409, !7410, !7411, !7412}
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7406, file: !31, line: 2535, baseType: !331, size: 64)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7406, file: !31, line: 2536, baseType: !331, size: 64, offset: 64)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7406, file: !31, line: 2537, baseType: !331, size: 64, offset: 128)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7406, file: !31, line: 2538, baseType: !331, size: 64, offset: 192)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7406, file: !31, line: 2539, baseType: !3089, offset: 256)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !7380, file: !31, line: 2114, baseType: !7414, size: 64)
!7414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7415, size: 64)
!7415 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !31, line: 2114, flags: DIFlagFwdDecl)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !31, line: 2124, baseType: !3768, size: 5568, offset: 8192)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !264, file: !31, line: 2125, baseType: !7418, size: 256, offset: 13760)
!7418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3852, size: 256, elements: !2272)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !264, file: !31, line: 2126, baseType: !3852, size: 64, offset: 14016)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !264, file: !31, line: 2128, baseType: !7421, size: 64, offset: 14080)
!7421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7422, size: 64)
!7422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7423)
!7423 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !31, line: 2128, flags: DIFlagFwdDecl)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !264, file: !31, line: 2132, baseType: !7, size: 32, offset: 14144)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !264, file: !31, line: 2134, baseType: !581, size: 16, offset: 14176)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !264, file: !31, line: 2139, baseType: !2314, size: 16, offset: 14192)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !264, file: !31, line: 2140, baseType: !7428, size: 512, offset: 14208)
!7428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7429, size: 512, elements: !269)
!7429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !31, line: 793, size: 32, elements: !7430)
!7430 = !{!7431, !7432}
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7429, file: !31, line: 794, baseType: !581, size: 16)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7429, file: !31, line: 795, baseType: !581, size: 16, offset: 16)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !264, file: !31, line: 2141, baseType: !7434, size: 128, offset: 14720)
!7434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 128, elements: !269)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !264, file: !31, line: 2149, baseType: !7436, size: 64, offset: 14848)
!7436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7437, size: 64)
!7437 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !251, line: 536, flags: DIFlagFwdDecl)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !264, file: !31, line: 2150, baseType: !7439, size: 64, offset: 14912)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7440, size: 64)
!7440 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !31, line: 60, flags: DIFlagFwdDecl)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !264, file: !31, line: 2151, baseType: !7442, size: 64, offset: 14976)
!7442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !264, file: !31, line: 2152, baseType: !7442, size: 64, offset: 15040)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !264, file: !31, line: 2153, baseType: !771, size: 8, offset: 15104)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !264, file: !31, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !264, file: !31, line: 2156, baseType: !284, size: 128, offset: 15168)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !264, file: !31, line: 2162, baseType: !7448, size: 64, offset: 15296)
!7448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7449, size: 64)
!7449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7450)
!7450 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !31, line: 68, flags: DIFlagFwdDecl)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !264, file: !31, line: 2163, baseType: !7452, size: 64, offset: 15360)
!7452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7453, size: 64)
!7453 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !31, line: 69, flags: DIFlagFwdDecl)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !264, file: !31, line: 2166, baseType: !7455, size: 384, offset: 15424)
!7455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7456, size: 384, elements: !1592)
!7456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !31, line: 889, size: 128, elements: !7457)
!7457 = !{!7458, !7459}
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7456, file: !31, line: 890, baseType: !1088, size: 64)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7456, file: !31, line: 891, baseType: !7460, size: 64, offset: 64)
!7460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7461, size: 64)
!7461 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !31, line: 880, flags: DIFlagFwdDecl)
!7462 = !{!7463, !7464, !7465, !7466, !7467, !7468}
!7463 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7464 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7465 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7466 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7467 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7468 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7469 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7470, line: 10, baseType: !7, size: 32, elements: !7471)
!7470 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7471 = !{!7472, !7473}
!7472 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7473 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7474 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2765, line: 30, baseType: !998, size: 64, elements: !7475)
!7475 = !{!7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504}
!7476 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!7477 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!7478 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!7479 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!7480 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!7481 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!7482 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!7483 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!7484 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!7485 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!7486 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!7487 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!7488 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!7489 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!7490 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!7491 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!7492 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!7493 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!7494 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!7495 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!7496 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!7497 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!7498 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!7499 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!7500 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!7501 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!7502 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!7503 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!7504 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!7505 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7506, line: 305, baseType: !7, size: 32, elements: !7507)
!7506 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7507 = !{!7508, !7509, !7510, !7511}
!7508 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7509 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7510 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7511 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7512 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !31, line: 558, baseType: !7, size: 32, elements: !7513)
!7513 = !{!7514, !7515, !7516}
!7514 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!7515 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!7516 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!7517 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !7518, line: 11, baseType: !7, size: 32, elements: !7519)
!7518 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!7519 = !{!7520, !7521, !7522}
!7520 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!7521 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!7522 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!7523 = !{!1742, !312, !591, !7524, !7693, !32, !482, !535, !475, !1038, !3457, !581, !564, !476, !7695, !998, !7696, !7588, !2516, !7698, !7700, !980, !7701, !2326, !7702}
!7524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7525, size: 64)
!7525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mgsl_struct", file: !3, line: 178, size: 8256, elements: !7526)
!7526 = !{!7527, !7528, !7529, !7530, !7531, !7558, !7559, !7560, !7561, !7562, !7563, !7564, !7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583, !7584, !7585, !7586, !7587, !7602, !7603, !7604, !7605, !7606, !7607, !7608, !7609, !7610, !7611, !7612, !7613, !7614, !7620, !7621, !7622, !7623, !7624, !7625, !7626, !7627, !7628, !7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644, !7645, !7662, !7663, !7664, !7665, !7666, !7667, !7668, !7669, !7670, !7671, !7672, !7673, !7674, !7675, !7676, !7677, !7678, !7679, !7690, !7691, !7692}
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !7525, file: !3, line: 179, baseType: !32, size: 32)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7525, file: !3, line: 180, baseType: !4767, size: 2432, offset: 64)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !7525, file: !3, line: 181, baseType: !32, size: 32, offset: 2496)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "hw_version", scope: !7525, file: !3, line: 182, baseType: !32, size: 32, offset: 2528)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "icount", scope: !7525, file: !3, line: 184, baseType: !7532, size: 736, offset: 2560)
!7532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mgsl_icount", file: !7533, line: 213, size: 736, elements: !7534)
!7533 = !DIFile(filename: "./include/uapi/linux/synclink.h", directory: "/home/lizy2001/genbc/linux")
!7534 = !{!7535, !7536, !7537, !7538, !7539, !7540, !7541, !7542, !7543, !7544, !7545, !7546, !7547, !7548, !7549, !7550, !7551, !7552, !7553, !7554, !7555, !7556, !7557}
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !7532, file: !7533, line: 214, baseType: !493, size: 32)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !7532, file: !7533, line: 214, baseType: !493, size: 32, offset: 32)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !7532, file: !7533, line: 214, baseType: !493, size: 32, offset: 64)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !7532, file: !7533, line: 214, baseType: !493, size: 32, offset: 96)
!7539 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !7532, file: !7533, line: 214, baseType: !493, size: 32, offset: 128)
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !7532, file: !7533, line: 214, baseType: !493, size: 32, offset: 160)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !7532, file: !7533, line: 215, baseType: !493, size: 32, offset: 192)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7532, file: !7533, line: 215, baseType: !493, size: 32, offset: 224)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !7532, file: !7533, line: 215, baseType: !493, size: 32, offset: 256)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !7532, file: !7533, line: 215, baseType: !493, size: 32, offset: 288)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !7532, file: !7533, line: 216, baseType: !493, size: 32, offset: 320)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "txok", scope: !7532, file: !7533, line: 217, baseType: !493, size: 32, offset: 352)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "txunder", scope: !7532, file: !7533, line: 218, baseType: !493, size: 32, offset: 384)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "txabort", scope: !7532, file: !7533, line: 219, baseType: !493, size: 32, offset: 416)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "txtimeout", scope: !7532, file: !7533, line: 220, baseType: !493, size: 32, offset: 448)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "rxshort", scope: !7532, file: !7533, line: 221, baseType: !493, size: 32, offset: 480)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "rxlong", scope: !7532, file: !7533, line: 222, baseType: !493, size: 32, offset: 512)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "rxabort", scope: !7532, file: !7533, line: 223, baseType: !493, size: 32, offset: 544)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "rxover", scope: !7532, file: !7533, line: 224, baseType: !493, size: 32, offset: 576)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "rxcrc", scope: !7532, file: !7533, line: 225, baseType: !493, size: 32, offset: 608)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "rxok", scope: !7532, file: !7533, line: 226, baseType: !493, size: 32, offset: 640)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "exithunt", scope: !7532, file: !7533, line: 227, baseType: !493, size: 32, offset: 672)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "rxidle", scope: !7532, file: !7533, line: 228, baseType: !493, size: 32, offset: 704)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7525, file: !3, line: 186, baseType: !32, size: 32, offset: 3296)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "x_char", scope: !7525, file: !3, line: 187, baseType: !32, size: 32, offset: 3328)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "read_status_mask", scope: !7525, file: !3, line: 188, baseType: !581, size: 16, offset: 3360)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_status_mask", scope: !7525, file: !3, line: 189, baseType: !581, size: 16, offset: 3376)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !7525, file: !3, line: 190, baseType: !564, size: 64, offset: 3392)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_head", scope: !7525, file: !3, line: 191, baseType: !32, size: 32, offset: 3456)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_tail", scope: !7525, file: !3, line: 192, baseType: !32, size: 32, offset: 3488)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_cnt", scope: !7525, file: !3, line: 193, baseType: !32, size: 32, offset: 3520)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "status_event_wait_q", scope: !7525, file: !3, line: 195, baseType: !1889, size: 128, offset: 3584)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "event_wait_q", scope: !7525, file: !3, line: 196, baseType: !1889, size: 128, offset: 3712)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timer", scope: !7525, file: !3, line: 197, baseType: !3253, size: 320, offset: 3840)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "next_device", scope: !7525, file: !3, line: 198, baseType: !7524, size: 64, offset: 4160)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "irq_spinlock", scope: !7525, file: !3, line: 200, baseType: !1670, offset: 4224)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !7525, file: !3, line: 201, baseType: !2764, size: 256, offset: 4224)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "EventMask", scope: !7525, file: !3, line: 203, baseType: !987, size: 32, offset: 4480)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "RecordedEvents", scope: !7525, file: !3, line: 204, baseType: !987, size: 32, offset: 4512)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "max_frame_size", scope: !7525, file: !3, line: 206, baseType: !987, size: 32, offset: 4544)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "pending_bh", scope: !7525, file: !3, line: 208, baseType: !987, size: 32, offset: 4576)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "bh_running", scope: !7525, file: !3, line: 210, baseType: !771, size: 8, offset: 4608)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "isr_overflow", scope: !7525, file: !3, line: 211, baseType: !32, size: 32, offset: 4640)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "bh_requested", scope: !7525, file: !3, line: 212, baseType: !771, size: 8, offset: 4672)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_chkcount", scope: !7525, file: !3, line: 214, baseType: !32, size: 32, offset: 4704)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "cts_chkcount", scope: !7525, file: !3, line: 215, baseType: !32, size: 32, offset: 4736)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_chkcount", scope: !7525, file: !3, line: 216, baseType: !32, size: 32, offset: 4768)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "ri_chkcount", scope: !7525, file: !3, line: 217, baseType: !32, size: 32, offset: 4800)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_list", scope: !7525, file: !3, line: 219, baseType: !1038, size: 64, offset: 4864)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_list_phys", scope: !7525, file: !3, line: 220, baseType: !987, size: 32, offset: 4928)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_list_dma_addr", scope: !7525, file: !3, line: 221, baseType: !2036, size: 64, offset: 4992)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buffer_count", scope: !7525, file: !3, line: 223, baseType: !7, size: 32, offset: 5056)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buffer_list", scope: !7525, file: !3, line: 224, baseType: !7588, size: 64, offset: 5120)
!7588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7589, size: 64)
!7589 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMABUFFERENTRY", file: !3, line: 145, baseType: !7590)
!7590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_DMABUFFERENTRY", file: !3, line: 134, size: 320, elements: !7591)
!7591 = !{!7592, !7593, !7595, !7596, !7597, !7598, !7599, !7600, !7601}
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !7590, file: !3, line: 136, baseType: !987, size: 32)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7590, file: !3, line: 137, baseType: !7594, size: 16, offset: 32)
!7594 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !581)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !7590, file: !3, line: 138, baseType: !7594, size: 16, offset: 48)
!7596 = !DIDerivedType(tag: DW_TAG_member, name: "rcc", scope: !7590, file: !3, line: 139, baseType: !7594, size: 16, offset: 64)
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7590, file: !3, line: 140, baseType: !581, size: 16, offset: 80)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7590, file: !3, line: 141, baseType: !987, size: 32, offset: 96)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "virt_addr", scope: !7590, file: !3, line: 142, baseType: !1038, size: 64, offset: 128)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "phys_entry", scope: !7590, file: !3, line: 143, baseType: !987, size: 32, offset: 192)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !7590, file: !3, line: 144, baseType: !2036, size: 64, offset: 256)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "current_rx_buffer", scope: !7525, file: !3, line: 225, baseType: !7, size: 32, offset: 5184)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_dma_buffers", scope: !7525, file: !3, line: 227, baseType: !32, size: 32, offset: 5216)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dma_buffers_used", scope: !7525, file: !3, line: 228, baseType: !32, size: 32, offset: 5248)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "tx_buffer_count", scope: !7525, file: !3, line: 229, baseType: !7, size: 32, offset: 5280)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "tx_buffer_list", scope: !7525, file: !3, line: 230, baseType: !7588, size: 64, offset: 5312)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "start_tx_dma_buffer", scope: !7525, file: !3, line: 231, baseType: !32, size: 32, offset: 5376)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "current_tx_buffer", scope: !7525, file: !3, line: 232, baseType: !32, size: 32, offset: 5408)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "intermediate_rxbuffer", scope: !7525, file: !3, line: 234, baseType: !564, size: 64, offset: 5440)
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_holding_buffers", scope: !7525, file: !3, line: 236, baseType: !32, size: 32, offset: 5504)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "get_tx_holding_index", scope: !7525, file: !3, line: 237, baseType: !32, size: 32, offset: 5536)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "put_tx_holding_index", scope: !7525, file: !3, line: 238, baseType: !32, size: 32, offset: 5568)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "tx_holding_count", scope: !7525, file: !3, line: 239, baseType: !32, size: 32, offset: 5600)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "tx_holding_buffers", scope: !7525, file: !3, line: 240, baseType: !7615, size: 640, offset: 5632)
!7615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7616, size: 640, elements: !2630)
!7616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tx_holding_buffer", file: !3, line: 168, size: 128, elements: !7617)
!7617 = !{!7618, !7619}
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_size", scope: !7616, file: !3, line: 169, baseType: !32, size: 32)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !7616, file: !3, line: 170, baseType: !564, size: 64, offset: 64)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "rx_enabled", scope: !7525, file: !3, line: 242, baseType: !771, size: 8, offset: 6272)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "rx_overflow", scope: !7525, file: !3, line: 243, baseType: !771, size: 8, offset: 6280)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "rx_rcc_underrun", scope: !7525, file: !3, line: 244, baseType: !771, size: 8, offset: 6288)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "tx_enabled", scope: !7525, file: !3, line: 246, baseType: !771, size: 8, offset: 6296)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "tx_active", scope: !7525, file: !3, line: 247, baseType: !771, size: 8, offset: 6304)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "idle_mode", scope: !7525, file: !3, line: 248, baseType: !987, size: 32, offset: 6336)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "cmr_value", scope: !7525, file: !3, line: 250, baseType: !581, size: 16, offset: 6368)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "tcsr_value", scope: !7525, file: !3, line: 251, baseType: !581, size: 16, offset: 6384)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !7525, file: !3, line: 253, baseType: !7629, size: 200, offset: 6400)
!7629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 200, elements: !7630)
!7630 = !{!7631}
!7631 = !DISubrange(count: 25)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7525, file: !3, line: 255, baseType: !482, size: 8, offset: 6600)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !7525, file: !3, line: 256, baseType: !482, size: 8, offset: 6608)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "io_base", scope: !7525, file: !3, line: 258, baseType: !7, size: 32, offset: 6624)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "io_addr_size", scope: !7525, file: !3, line: 259, baseType: !7, size: 32, offset: 6656)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "io_addr_requested", scope: !7525, file: !3, line: 260, baseType: !771, size: 8, offset: 6688)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "irq_level", scope: !7525, file: !3, line: 262, baseType: !7, size: 32, offset: 6720)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags", scope: !7525, file: !3, line: 263, baseType: !312, size: 64, offset: 6784)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "irq_requested", scope: !7525, file: !3, line: 264, baseType: !771, size: 8, offset: 6848)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "dma_level", scope: !7525, file: !3, line: 266, baseType: !7, size: 32, offset: 6880)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "dma_requested", scope: !7525, file: !3, line: 267, baseType: !771, size: 8, offset: 6912)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "mbre_bit", scope: !7525, file: !3, line: 269, baseType: !581, size: 16, offset: 6928)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_bits", scope: !7525, file: !3, line: 270, baseType: !581, size: 16, offset: 6944)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "usc_idle_mode", scope: !7525, file: !3, line: 271, baseType: !581, size: 16, offset: 6960)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !7525, file: !3, line: 273, baseType: !7646, size: 384, offset: 6976)
!7646 = !DIDerivedType(tag: DW_TAG_typedef, name: "MGSL_PARAMS", file: !7533, line: 170, baseType: !7647)
!7647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MGSL_PARAMS", file: !7533, line: 146, size: 384, elements: !7648)
!7648 = !{!7649, !7650, !7651, !7652, !7653, !7654, !7655, !7656, !7657, !7658, !7659, !7660, !7661}
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7647, file: !7533, line: 150, baseType: !312, size: 64)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7647, file: !7533, line: 151, baseType: !482, size: 8, offset: 64)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7647, file: !7533, line: 155, baseType: !476, size: 16, offset: 80)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7647, file: !7533, line: 156, baseType: !482, size: 8, offset: 96)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "clock_speed", scope: !7647, file: !7533, line: 157, baseType: !312, size: 64, offset: 128)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filter", scope: !7647, file: !7533, line: 158, baseType: !482, size: 8, offset: 192)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "crc_type", scope: !7647, file: !7533, line: 159, baseType: !476, size: 16, offset: 208)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "preamble_length", scope: !7647, file: !7533, line: 160, baseType: !482, size: 8, offset: 224)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "preamble", scope: !7647, file: !7533, line: 161, baseType: !482, size: 8, offset: 232)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "data_rate", scope: !7647, file: !7533, line: 165, baseType: !312, size: 64, offset: 256)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !7647, file: !7533, line: 166, baseType: !482, size: 8, offset: 320)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !7647, file: !7533, line: 167, baseType: !482, size: 8, offset: 328)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7647, file: !7533, line: 168, baseType: !482, size: 8, offset: 336)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "serial_signals", scope: !7525, file: !3, line: 275, baseType: !482, size: 8, offset: 7360)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "irq_occurred", scope: !7525, file: !3, line: 277, baseType: !771, size: 8, offset: 7368)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "init_error", scope: !7525, file: !3, line: 278, baseType: !7, size: 32, offset: 7392)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "fDiagnosticsmode", scope: !7525, file: !3, line: 279, baseType: !32, size: 32, offset: 7424)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "last_mem_alloc", scope: !7525, file: !3, line: 281, baseType: !987, size: 32, offset: 7456)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "memory_base", scope: !7525, file: !3, line: 282, baseType: !564, size: 64, offset: 7488)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "phys_memory_base", scope: !7525, file: !3, line: 283, baseType: !987, size: 32, offset: 7552)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "shared_mem_requested", scope: !7525, file: !3, line: 284, baseType: !771, size: 8, offset: 7584)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "lcr_base", scope: !7525, file: !3, line: 286, baseType: !564, size: 64, offset: 7616)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "phys_lcr_base", scope: !7525, file: !3, line: 287, baseType: !987, size: 32, offset: 7680)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "lcr_offset", scope: !7525, file: !3, line: 288, baseType: !987, size: 32, offset: 7712)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "lcr_mem_requested", scope: !7525, file: !3, line: 289, baseType: !771, size: 8, offset: 7744)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "misc_ctrl_value", scope: !7525, file: !3, line: 291, baseType: !987, size: 32, offset: 7776)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "flag_buf", scope: !7525, file: !3, line: 292, baseType: !1038, size: 64, offset: 7808)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "drop_rts_on_tx_done", scope: !7525, file: !3, line: 293, baseType: !771, size: 8, offset: 7872)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "loopmode_insert_requested", scope: !7525, file: !3, line: 295, baseType: !771, size: 8, offset: 7880)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "loopmode_send_done_requested", scope: !7525, file: !3, line: 296, baseType: !771, size: 8, offset: 7888)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "input_signal_events", scope: !7525, file: !3, line: 298, baseType: !7680, size: 256, offset: 7904)
!7680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_input_signal_events", file: !3, line: 155, size: 256, elements: !7681)
!7681 = !{!7682, !7683, !7684, !7685, !7686, !7687, !7688, !7689}
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "ri_up", scope: !7680, file: !3, line: 156, baseType: !32, size: 32)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "ri_down", scope: !7680, file: !3, line: 157, baseType: !32, size: 32, offset: 32)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_up", scope: !7680, file: !3, line: 158, baseType: !32, size: 32, offset: 64)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_down", scope: !7680, file: !3, line: 159, baseType: !32, size: 32, offset: 96)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_up", scope: !7680, file: !3, line: 160, baseType: !32, size: 32, offset: 128)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_down", scope: !7680, file: !3, line: 161, baseType: !32, size: 32, offset: 160)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "cts_up", scope: !7680, file: !3, line: 162, baseType: !32, size: 32, offset: 192)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "cts_down", scope: !7680, file: !3, line: 163, baseType: !32, size: 32, offset: 224)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "netcount", scope: !7525, file: !3, line: 301, baseType: !32, size: 32, offset: 8160)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "netlock", scope: !7525, file: !3, line: 302, baseType: !1670, offset: 8192)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !7525, file: !3, line: 305, baseType: !290, size: 64, offset: 8192)
!7693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7694, size: 64)
!7694 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !287)
!7695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!7696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7697, size: 64)
!7697 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!7698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7699, size: 64)
!7699 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !268)
!7700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!7701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!7702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7703, size: 64)
!7703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7694)
!7704 = !{!7705, !7755, !7758, !7760, !7765, !7767, !7772, !7774, !7779, !7781, !7783, !7785, !7787, !7789, !7794, !7796, !7801, !7803, !7808, !7810, !7815, !7817, !7822, !7824, !7826, !0, !7828, !7833, !7836, !7838, !7840, !7845, !7847, !7849, !7851, !7853, !7855, !7857, !7859, !7861, !7864, !7867, !7869, !7871, !7874, !7876, !7878, !7880, !7882, !7884, !7886, !7888, !8162, !8165, !8170, !8172, !8174, !8176, !8178, !8180, !8187, !8193, !8197, !8199}
!7705 = !DIGlobalVariableExpression(var: !7706, expr: !DIExpression())
!7706 = distinct !DIGlobalVariable(name: "__param_break_on_load", scope: !2, file: !3, line: 868, type: !7707, isLocal: true, isDefinition: true, align: 64)
!7707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7708)
!7708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !7709, line: 69, size: 320, elements: !7710)
!7709 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!7710 = !{!7711, !7712, !7713, !7729, !7731, !7733, !7734}
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7708, file: !7709, line: 70, baseType: !292, size: 64)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !7708, file: !7709, line: 71, baseType: !980, size: 64, offset: 64)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7708, file: !7709, line: 72, baseType: !7714, size: 64, offset: 128)
!7714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7715, size: 64)
!7715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7716)
!7716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !7709, line: 47, size: 256, elements: !7717)
!7717 = !{!7718, !7719, !7724, !7728}
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7716, file: !7709, line: 49, baseType: !7, size: 32)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !7716, file: !7709, line: 51, baseType: !7720, size: 64, offset: 64)
!7720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7721, size: 64)
!7721 = !DISubroutineType(types: !7722)
!7722 = !{!32, !292, !7723}
!7723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7707, size: 64)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !7716, file: !7709, line: 53, baseType: !7725, size: 64, offset: 128)
!7725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7726, size: 64)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{!32, !1038, !7723}
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7716, file: !7709, line: 55, baseType: !1415, size: 64, offset: 192)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !7708, file: !7709, line: 73, baseType: !7730, size: 16, offset: 192)
!7730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !7708, file: !7709, line: 74, baseType: !7732, size: 8, offset: 208)
!7732 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !332, line: 16, baseType: !7151)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7708, file: !7709, line: 75, baseType: !794, size: 8, offset: 216)
!7734 = !DIDerivedType(tag: DW_TAG_member, scope: !7708, file: !7709, line: 76, baseType: !7735, size: 64, offset: 256)
!7735 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7708, file: !7709, line: 76, size: 64, elements: !7736)
!7736 = !{!7737, !7738, !7745}
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7735, file: !7709, line: 77, baseType: !591, size: 64)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !7735, file: !7709, line: 78, baseType: !7739, size: 64)
!7739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7740, size: 64)
!7740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7741)
!7741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !7709, line: 86, size: 128, elements: !7742)
!7742 = !{!7743, !7744}
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !7741, file: !7709, line: 87, baseType: !7, size: 32)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !7741, file: !7709, line: 88, baseType: !1038, size: 64, offset: 64)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !7735, file: !7709, line: 79, baseType: !7746, size: 64)
!7746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7747, size: 64)
!7747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7748)
!7748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !7709, line: 92, size: 256, elements: !7749)
!7749 = !{!7750, !7751, !7752, !7753, !7754}
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !7748, file: !7709, line: 94, baseType: !7, size: 32)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !7748, file: !7709, line: 95, baseType: !7, size: 32, offset: 32)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !7748, file: !7709, line: 96, baseType: !5975, size: 64, offset: 64)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7748, file: !7709, line: 97, baseType: !7714, size: 64, offset: 128)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !7748, file: !7709, line: 98, baseType: !591, size: 64, offset: 192)
!7755 = !DIGlobalVariableExpression(var: !7756, expr: !DIExpression())
!7756 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_break_on_loadtype319", scope: !2, file: !3, line: 868, type: !7757, isLocal: true, isDefinition: true, align: 8)
!7757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 296, elements: !3086)
!7758 = !DIGlobalVariableExpression(var: !7759, expr: !DIExpression())
!7759 = distinct !DIGlobalVariable(name: "__param_ttymajor", scope: !2, file: !3, line: 869, type: !7707, isLocal: true, isDefinition: true, align: 64)
!7760 = !DIGlobalVariableExpression(var: !7761, expr: !DIExpression())
!7761 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ttymajortype320", scope: !2, file: !3, line: 869, type: !7762, isLocal: true, isDefinition: true, align: 8)
!7762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 248, elements: !7763)
!7763 = !{!7764}
!7764 = !DISubrange(count: 31)
!7765 = !DIGlobalVariableExpression(var: !7766, expr: !DIExpression())
!7766 = distinct !DIGlobalVariable(name: "__param_io", scope: !2, file: !3, line: 870, type: !7707, isLocal: true, isDefinition: true, align: 64)
!7767 = !DIGlobalVariableExpression(var: !7768, expr: !DIExpression())
!7768 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_iotype321", scope: !2, file: !3, line: 870, type: !7769, isLocal: true, isDefinition: true, align: 8)
!7769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 272, elements: !7770)
!7770 = !{!7771}
!7771 = !DISubrange(count: 34)
!7772 = !DIGlobalVariableExpression(var: !7773, expr: !DIExpression())
!7773 = distinct !DIGlobalVariable(name: "__param_irq", scope: !2, file: !3, line: 871, type: !7707, isLocal: true, isDefinition: true, align: 64)
!7774 = !DIGlobalVariableExpression(var: !7775, expr: !DIExpression())
!7775 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_irqtype322", scope: !2, file: !3, line: 871, type: !7776, isLocal: true, isDefinition: true, align: 8)
!7776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 280, elements: !7777)
!7777 = !{!7778}
!7778 = !DISubrange(count: 35)
!7779 = !DIGlobalVariableExpression(var: !7780, expr: !DIExpression())
!7780 = distinct !DIGlobalVariable(name: "__param_dma", scope: !2, file: !3, line: 872, type: !7707, isLocal: true, isDefinition: true, align: 64)
!7781 = !DIGlobalVariableExpression(var: !7782, expr: !DIExpression())
!7782 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_dmatype323", scope: !2, file: !3, line: 872, type: !7776, isLocal: true, isDefinition: true, align: 8)
!7783 = !DIGlobalVariableExpression(var: !7784, expr: !DIExpression())
!7784 = distinct !DIGlobalVariable(name: "__param_debug_level", scope: !2, file: !3, line: 873, type: !7707, isLocal: true, isDefinition: true, align: 64)
!7785 = !DIGlobalVariableExpression(var: !7786, expr: !DIExpression())
!7786 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug_leveltype324", scope: !2, file: !3, line: 873, type: !7769, isLocal: true, isDefinition: true, align: 8)
!7787 = !DIGlobalVariableExpression(var: !7788, expr: !DIExpression())
!7788 = distinct !DIGlobalVariable(name: "__param_maxframe", scope: !2, file: !3, line: 874, type: !7707, isLocal: true, isDefinition: true, align: 64)
!7789 = !DIGlobalVariableExpression(var: !7790, expr: !DIExpression())
!7790 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_maxframetype325", scope: !2, file: !3, line: 874, type: !7791, isLocal: true, isDefinition: true, align: 8)
!7791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 320, elements: !7792)
!7792 = !{!7793}
!7793 = !DISubrange(count: 40)
!7794 = !DIGlobalVariableExpression(var: !7795, expr: !DIExpression())
!7795 = distinct !DIGlobalVariable(name: "__param_txdmabufs", scope: !2, file: !3, line: 875, type: !7707, isLocal: true, isDefinition: true, align: 64)
!7796 = !DIGlobalVariableExpression(var: !7797, expr: !DIExpression())
!7797 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_txdmabufstype326", scope: !2, file: !3, line: 875, type: !7798, isLocal: true, isDefinition: true, align: 8)
!7798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 328, elements: !7799)
!7799 = !{!7800}
!7800 = !DISubrange(count: 41)
!7801 = !DIGlobalVariableExpression(var: !7802, expr: !DIExpression())
!7802 = distinct !DIGlobalVariable(name: "__param_txholdbufs", scope: !2, file: !3, line: 876, type: !7707, isLocal: true, isDefinition: true, align: 64)
!7803 = !DIGlobalVariableExpression(var: !7804, expr: !DIExpression())
!7804 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_txholdbufstype327", scope: !2, file: !3, line: 876, type: !7805, isLocal: true, isDefinition: true, align: 8)
!7805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 336, elements: !7806)
!7806 = !{!7807}
!7807 = !DISubrange(count: 42)
!7808 = !DIGlobalVariableExpression(var: !7809, expr: !DIExpression())
!7809 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file328", scope: !2, file: !3, line: 892, type: !7776, isLocal: true, isDefinition: true, align: 8)
!7810 = !DIGlobalVariableExpression(var: !7811, expr: !DIExpression())
!7811 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license329", scope: !2, file: !3, line: 892, type: !7812, isLocal: true, isDefinition: true, align: 8)
!7812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 168, elements: !7813)
!7813 = !{!7814}
!7814 = !DISubrange(count: 21)
!7815 = !DIGlobalVariableExpression(var: !7816, expr: !DIExpression())
!7816 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_synclink_init347", scope: !2, file: !3, line: 4304, type: !591, isLocal: true, isDefinition: true)
!7817 = !DIGlobalVariableExpression(var: !7818, expr: !DIExpression())
!7818 = distinct !DIGlobalVariable(name: "__exitcall_synclink_exit", scope: !2, file: !3, line: 4305, type: !7819, isLocal: true, isDefinition: true)
!7819 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !7820, line: 117, baseType: !7821)
!7820 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!7821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5179, size: 64)
!7822 = !DIGlobalVariableExpression(var: !7823, expr: !DIExpression())
!7823 = distinct !DIGlobalVariable(name: "break_on_load", scope: !2, file: !3, line: 849, type: !771, isLocal: true, isDefinition: true)
!7824 = !DIGlobalVariableExpression(var: !7825, expr: !DIExpression())
!7825 = distinct !DIGlobalVariable(name: "ttymajor", scope: !2, file: !3, line: 855, type: !32, isLocal: true, isDefinition: true)
!7826 = !DIGlobalVariableExpression(var: !7827, expr: !DIExpression())
!7827 = distinct !DIGlobalVariable(name: "debug_level", scope: !2, file: !3, line: 863, type: !32, isLocal: true, isDefinition: true)
!7828 = !DIGlobalVariableExpression(var: !7829, expr: !DIExpression())
!7829 = distinct !DIGlobalVariable(name: "__param_str_ttymajor", scope: !2, file: !3, line: 869, type: !7830, isLocal: true, isDefinition: true)
!7830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 144, elements: !7831)
!7831 = !{!7832}
!7832 = !DISubrange(count: 18)
!7833 = !DIGlobalVariableExpression(var: !7834, expr: !DIExpression())
!7834 = distinct !DIGlobalVariable(name: "__param_str_io", scope: !2, file: !3, line: 870, type: !7835, isLocal: true, isDefinition: true)
!7835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 96, elements: !5518)
!7836 = !DIGlobalVariableExpression(var: !7837, expr: !DIExpression())
!7837 = distinct !DIGlobalVariable(name: "__param_arr_io", scope: !2, file: !3, line: 870, type: !7747, isLocal: true, isDefinition: true)
!7838 = !DIGlobalVariableExpression(var: !7839, expr: !DIExpression())
!7839 = distinct !DIGlobalVariable(name: "io", scope: !2, file: !3, line: 860, type: !2881, isLocal: true, isDefinition: true)
!7840 = !DIGlobalVariableExpression(var: !7841, expr: !DIExpression())
!7841 = distinct !DIGlobalVariable(name: "__param_str_irq", scope: !2, file: !3, line: 871, type: !7842, isLocal: true, isDefinition: true)
!7842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 104, elements: !7843)
!7843 = !{!7844}
!7844 = !DISubrange(count: 13)
!7845 = !DIGlobalVariableExpression(var: !7846, expr: !DIExpression())
!7846 = distinct !DIGlobalVariable(name: "__param_arr_irq", scope: !2, file: !3, line: 871, type: !7747, isLocal: true, isDefinition: true)
!7847 = !DIGlobalVariableExpression(var: !7848, expr: !DIExpression())
!7848 = distinct !DIGlobalVariable(name: "irq", scope: !2, file: !3, line: 861, type: !2881, isLocal: true, isDefinition: true)
!7849 = !DIGlobalVariableExpression(var: !7850, expr: !DIExpression())
!7850 = distinct !DIGlobalVariable(name: "__param_str_dma", scope: !2, file: !3, line: 872, type: !7842, isLocal: true, isDefinition: true)
!7851 = !DIGlobalVariableExpression(var: !7852, expr: !DIExpression())
!7852 = distinct !DIGlobalVariable(name: "__param_arr_dma", scope: !2, file: !3, line: 872, type: !7747, isLocal: true, isDefinition: true)
!7853 = !DIGlobalVariableExpression(var: !7854, expr: !DIExpression())
!7854 = distinct !DIGlobalVariable(name: "dma", scope: !2, file: !3, line: 862, type: !2881, isLocal: true, isDefinition: true)
!7855 = !DIGlobalVariableExpression(var: !7856, expr: !DIExpression())
!7856 = distinct !DIGlobalVariable(name: "__param_str_debug_level", scope: !2, file: !3, line: 873, type: !7812, isLocal: true, isDefinition: true)
!7857 = !DIGlobalVariableExpression(var: !7858, expr: !DIExpression())
!7858 = distinct !DIGlobalVariable(name: "__param_str_maxframe", scope: !2, file: !3, line: 874, type: !7830, isLocal: true, isDefinition: true)
!7859 = !DIGlobalVariableExpression(var: !7860, expr: !DIExpression())
!7860 = distinct !DIGlobalVariable(name: "__param_arr_maxframe", scope: !2, file: !3, line: 874, type: !7747, isLocal: true, isDefinition: true)
!7861 = !DIGlobalVariableExpression(var: !7862, expr: !DIExpression())
!7862 = distinct !DIGlobalVariable(name: "maxframe", scope: !2, file: !3, line: 864, type: !7863, isLocal: true, isDefinition: true)
!7863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 640, elements: !900)
!7864 = !DIGlobalVariableExpression(var: !7865, expr: !DIExpression())
!7865 = distinct !DIGlobalVariable(name: "__param_str_txdmabufs", scope: !2, file: !3, line: 875, type: !7866, isLocal: true, isDefinition: true)
!7866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 152, elements: !4754)
!7867 = !DIGlobalVariableExpression(var: !7868, expr: !DIExpression())
!7868 = distinct !DIGlobalVariable(name: "__param_arr_txdmabufs", scope: !2, file: !3, line: 875, type: !7747, isLocal: true, isDefinition: true)
!7869 = !DIGlobalVariableExpression(var: !7870, expr: !DIExpression())
!7870 = distinct !DIGlobalVariable(name: "txdmabufs", scope: !2, file: !3, line: 865, type: !7863, isLocal: true, isDefinition: true)
!7871 = !DIGlobalVariableExpression(var: !7872, expr: !DIExpression())
!7872 = distinct !DIGlobalVariable(name: "__param_str_txholdbufs", scope: !2, file: !3, line: 876, type: !7873, isLocal: true, isDefinition: true)
!7873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 160, elements: !900)
!7874 = !DIGlobalVariableExpression(var: !7875, expr: !DIExpression())
!7875 = distinct !DIGlobalVariable(name: "__param_arr_txholdbufs", scope: !2, file: !3, line: 876, type: !7747, isLocal: true, isDefinition: true)
!7876 = !DIGlobalVariableExpression(var: !7877, expr: !DIExpression())
!7877 = distinct !DIGlobalVariable(name: "txholdbufs", scope: !2, file: !3, line: 866, type: !7863, isLocal: true, isDefinition: true)
!7878 = !DIGlobalVariableExpression(var: !7879, expr: !DIExpression())
!7879 = distinct !DIGlobalVariable(name: "driver_name", scope: !2, file: !3, line: 878, type: !1038, isLocal: true, isDefinition: true)
!7880 = !DIGlobalVariableExpression(var: !7881, expr: !DIExpression())
!7881 = distinct !DIGlobalVariable(name: "driver_version", scope: !2, file: !3, line: 879, type: !1038, isLocal: true, isDefinition: true)
!7882 = !DIGlobalVariableExpression(var: !7883, expr: !DIExpression())
!7883 = distinct !DIGlobalVariable(name: "serial_driver", scope: !2, file: !3, line: 901, type: !4513, isLocal: true, isDefinition: true)
!7884 = !DIGlobalVariableExpression(var: !7885, expr: !DIExpression())
!7885 = distinct !DIGlobalVariable(name: "mgsl_device_list", scope: !2, file: !3, line: 841, type: !7524, isLocal: true, isDefinition: true)
!7886 = !DIGlobalVariableExpression(var: !7887, expr: !DIExpression())
!7887 = distinct !DIGlobalVariable(name: "pci_registered", scope: !2, file: !3, line: 836, type: !771, isLocal: true, isDefinition: true)
!7888 = !DIGlobalVariableExpression(var: !7889, expr: !DIExpression())
!7889 = distinct !DIGlobalVariable(name: "synclink_pci_driver", scope: !2, file: !3, line: 894, type: !7890, isLocal: true, isDefinition: true)
!7890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !7891, line: 858, size: 2048, elements: !7892)
!7891 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!7892 = !{!7893, !7894, !7895, !7907, !8120, !8124, !8128, !8132, !8133, !8137, !8155, !8156, !8157}
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7890, file: !7891, line: 859, baseType: !284, size: 128)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7890, file: !7891, line: 860, baseType: !292, size: 64, offset: 128)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !7890, file: !7891, line: 861, baseType: !7896, size: 64, offset: 192)
!7896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7897, size: 64)
!7897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7898)
!7898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !4143, line: 38, size: 256, elements: !7899)
!7899 = !{!7900, !7901, !7902, !7903, !7904, !7905, !7906}
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7898, file: !4143, line: 39, baseType: !493, size: 32)
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7898, file: !4143, line: 39, baseType: !493, size: 32, offset: 32)
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !7898, file: !4143, line: 40, baseType: !493, size: 32, offset: 64)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !7898, file: !4143, line: 40, baseType: !493, size: 32, offset: 96)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7898, file: !4143, line: 41, baseType: !493, size: 32, offset: 128)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !7898, file: !4143, line: 41, baseType: !493, size: 32, offset: 160)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7898, file: !4143, line: 42, baseType: !4161, size: 64, offset: 192)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7890, file: !7891, line: 862, baseType: !7908, size: 64, offset: 256)
!7908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7909, size: 64)
!7909 = !DISubroutineType(types: !7910)
!7910 = !{!32, !7911, !7896}
!7911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7912, size: 64)
!7912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !7891, line: 309, size: 19264, elements: !7913)
!7913 = !{!7914, !7915, !7984, !7985, !7986, !7987, !7998, !7999, !8000, !8001, !8002, !8003, !8004, !8005, !8006, !8007, !8008, !8009, !8010, !8011, !8012, !8013, !8014, !8016, !8017, !8018, !8020, !8021, !8022, !8023, !8024, !8025, !8026, !8027, !8028, !8029, !8030, !8031, !8032, !8033, !8034, !8035, !8036, !8037, !8038, !8039, !8042, !8043, !8044, !8045, !8047, !8048, !8049, !8050, !8054, !8055, !8056, !8057, !8058, !8059, !8060, !8061, !8062, !8063, !8064, !8065, !8066, !8067, !8068, !8069, !8070, !8071, !8072, !8073, !8074, !8075, !8076, !8077, !8078, !8079, !8080, !8081, !8082, !8083, !8084, !8085, !8086, !8087, !8088, !8089, !8090, !8091, !8093, !8094, !8096, !8097, !8098, !8099, !8101, !8102, !8103, !8106, !8113, !8114, !8115, !8116, !8117, !8118, !8119}
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !7912, file: !7891, line: 310, baseType: !284, size: 128)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7912, file: !7891, line: 311, baseType: !7916, size: 64, offset: 128)
!7916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7917, size: 64)
!7917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !7891, line: 605, size: 8064, elements: !7918)
!7918 = !{!7919, !7920, !7921, !7922, !7923, !7924, !7925, !7940, !7941, !7942, !7966, !7969, !7970, !7971, !7972, !7973, !7974, !7975, !7976, !7977, !7979, !7980, !7981, !7982, !7983}
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7917, file: !7891, line: 606, baseType: !284, size: 128)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7917, file: !7891, line: 607, baseType: !7916, size: 64, offset: 128)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7917, file: !7891, line: 608, baseType: !284, size: 128, offset: 192)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !7917, file: !7891, line: 609, baseType: !284, size: 128, offset: 320)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !7917, file: !7891, line: 610, baseType: !7911, size: 64, offset: 448)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !7917, file: !7891, line: 611, baseType: !284, size: 128, offset: 512)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7917, file: !7891, line: 613, baseType: !7926, size: 256, offset: 640)
!7926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7927, size: 256, elements: !2272)
!7927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7928, size: 64)
!7928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !7929, line: 20, size: 512, elements: !7930)
!7929 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!7930 = !{!7931, !7933, !7934, !7935, !7936, !7937, !7938, !7939}
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7928, file: !7929, line: 21, baseType: !7932, size: 64)
!7932 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !277, line: 158, baseType: !5413)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7928, file: !7929, line: 22, baseType: !7932, size: 64, offset: 64)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7928, file: !7929, line: 23, baseType: !292, size: 64, offset: 128)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7928, file: !7929, line: 24, baseType: !312, size: 64, offset: 192)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !7928, file: !7929, line: 25, baseType: !312, size: 64, offset: 256)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7928, file: !7929, line: 26, baseType: !7927, size: 64, offset: 320)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !7928, file: !7929, line: 26, baseType: !7927, size: 64, offset: 384)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !7928, file: !7929, line: 26, baseType: !7927, size: 64, offset: 448)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !7917, file: !7891, line: 614, baseType: !284, size: 128, offset: 896)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !7917, file: !7891, line: 615, baseType: !7928, size: 512, offset: 1024)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7917, file: !7891, line: 617, baseType: !7943, size: 64, offset: 1536)
!7943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7944, size: 64)
!7944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !7891, line: 731, size: 320, elements: !7945)
!7945 = !{!7946, !7950, !7954, !7958, !7962}
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !7944, file: !7891, line: 732, baseType: !7947, size: 64)
!7947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7948, size: 64)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!32, !7916}
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !7944, file: !7891, line: 733, baseType: !7951, size: 64, offset: 64)
!7951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7952, size: 64)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{null, !7916}
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !7944, file: !7891, line: 734, baseType: !7955, size: 64, offset: 128)
!7955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7956, size: 64)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!591, !7916, !7, !32}
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7944, file: !7891, line: 735, baseType: !7959, size: 64, offset: 192)
!7959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7960, size: 64)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{!32, !7916, !7, !32, !32, !2516}
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !7944, file: !7891, line: 736, baseType: !7963, size: 64, offset: 256)
!7963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7964, size: 64)
!7964 = !DISubroutineType(types: !7965)
!7965 = !{!32, !7916, !7, !32, !32, !987}
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !7917, file: !7891, line: 618, baseType: !7967, size: 64, offset: 1600)
!7967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7968, size: 64)
!7968 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !7891, line: 537, flags: DIFlagFwdDecl)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7917, file: !7891, line: 619, baseType: !591, size: 64, offset: 1664)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !7917, file: !7891, line: 620, baseType: !3028, size: 64, offset: 1728)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7917, file: !7891, line: 622, baseType: !482, size: 8, offset: 1792)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !7917, file: !7891, line: 623, baseType: !482, size: 8, offset: 1800)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !7917, file: !7891, line: 624, baseType: !482, size: 8, offset: 1808)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !7917, file: !7891, line: 625, baseType: !482, size: 8, offset: 1816)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7917, file: !7891, line: 630, baseType: !457, size: 384, offset: 1824)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !7917, file: !7891, line: 632, baseType: !476, size: 16, offset: 2208)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !7917, file: !7891, line: 633, baseType: !7978, size: 16, offset: 2224)
!7978 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !7891, line: 237, baseType: !476)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !7917, file: !7891, line: 634, baseType: !3767, size: 64, offset: 2240)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7917, file: !7891, line: 635, baseType: !3768, size: 5568, offset: 2304)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !7917, file: !7891, line: 636, baseType: !3865, size: 64, offset: 7872)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !7917, file: !7891, line: 637, baseType: !3865, size: 64, offset: 7936)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !7917, file: !7891, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !7912, file: !7891, line: 312, baseType: !7916, size: 64, offset: 192)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7912, file: !7891, line: 314, baseType: !591, size: 64, offset: 256)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !7912, file: !7891, line: 315, baseType: !3028, size: 64, offset: 320)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !7912, file: !7891, line: 316, baseType: !7988, size: 64, offset: 384)
!7988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7989, size: 64)
!7989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !7891, line: 69, size: 832, elements: !7990)
!7990 = !{!7991, !7992, !7993, !7996, !7997}
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7989, file: !7891, line: 70, baseType: !7916, size: 64)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7989, file: !7891, line: 71, baseType: !284, size: 128, offset: 64)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !7989, file: !7891, line: 72, baseType: !7994, size: 64, offset: 192)
!7994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7995, size: 64)
!7995 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !7891, line: 72, flags: DIFlagFwdDecl)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7989, file: !7891, line: 73, baseType: !482, size: 8, offset: 256)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7989, file: !7891, line: 74, baseType: !3772, size: 512, offset: 320)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !7912, file: !7891, line: 318, baseType: !7, size: 32, offset: 448)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7912, file: !7891, line: 319, baseType: !476, size: 16, offset: 480)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7912, file: !7891, line: 320, baseType: !476, size: 16, offset: 496)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !7912, file: !7891, line: 321, baseType: !476, size: 16, offset: 512)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !7912, file: !7891, line: 322, baseType: !476, size: 16, offset: 528)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7912, file: !7891, line: 323, baseType: !7, size: 32, offset: 544)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !7912, file: !7891, line: 324, baseType: !794, size: 8, offset: 576)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !7912, file: !7891, line: 325, baseType: !794, size: 8, offset: 584)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !7912, file: !7891, line: 330, baseType: !794, size: 8, offset: 592)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !7912, file: !7891, line: 331, baseType: !794, size: 8, offset: 600)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !7912, file: !7891, line: 332, baseType: !794, size: 8, offset: 608)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !7912, file: !7891, line: 333, baseType: !794, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !7912, file: !7891, line: 334, baseType: !794, size: 8, offset: 624)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7912, file: !7891, line: 335, baseType: !794, size: 8, offset: 632)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !7912, file: !7891, line: 336, baseType: !581, size: 16, offset: 640)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !7912, file: !7891, line: 337, baseType: !3457, size: 64, offset: 704)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7912, file: !7891, line: 339, baseType: !8015, size: 64, offset: 768)
!8015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7890, size: 64)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !7912, file: !7891, line: 340, baseType: !331, size: 64, offset: 832)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !7912, file: !7891, line: 346, baseType: !4362, size: 128, offset: 896)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !7912, file: !7891, line: 348, baseType: !8019, size: 32, offset: 1024)
!8019 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !7891, line: 155, baseType: !32)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !7912, file: !7891, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !7912, file: !7891, line: 352, baseType: !794, size: 8, offset: 1064)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !7912, file: !7891, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !7912, file: !7891, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !7912, file: !7891, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !7912, file: !7891, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !7912, file: !7891, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !7912, file: !7891, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !7912, file: !7891, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !7912, file: !7891, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !7912, file: !7891, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !7912, file: !7891, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !7912, file: !7891, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !7912, file: !7891, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !7912, file: !7891, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !7912, file: !7891, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !7912, file: !7891, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !7912, file: !7891, line: 376, baseType: !7, size: 32, offset: 1120)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !7912, file: !7891, line: 377, baseType: !7, size: 32, offset: 1152)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !7912, file: !7891, line: 380, baseType: !8040, size: 64, offset: 1216)
!8040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8041, size: 64)
!8041 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !7891, line: 303, flags: DIFlagFwdDecl)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !7912, file: !7891, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !7912, file: !7891, line: 383, baseType: !32, size: 32, offset: 1312)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !7912, file: !7891, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !7912, file: !7891, line: 387, baseType: !8046, size: 32, offset: 1376)
!8046 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !7891, line: 180, baseType: !7)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7912, file: !7891, line: 388, baseType: !3768, size: 5568, offset: 1408)
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !7912, file: !7891, line: 390, baseType: !32, size: 32, offset: 6976)
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7912, file: !7891, line: 396, baseType: !7, size: 32, offset: 7008)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7912, file: !7891, line: 397, baseType: !8051, size: 8704, offset: 7040)
!8051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7928, size: 8704, elements: !8052)
!8052 = !{!8053}
!8053 = !DISubrange(count: 17)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !7912, file: !7891, line: 399, baseType: !771, size: 8, offset: 15744)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !7912, file: !7891, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !7912, file: !7891, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !7912, file: !7891, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !7912, file: !7891, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !7912, file: !7891, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !7912, file: !7891, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !7912, file: !7891, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !7912, file: !7891, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !7912, file: !7891, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !7912, file: !7891, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !7912, file: !7891, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !7912, file: !7891, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !7912, file: !7891, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !7912, file: !7891, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !7912, file: !7891, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !7912, file: !7891, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !7912, file: !7891, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !7912, file: !7891, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !7912, file: !7891, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !7912, file: !7891, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !7912, file: !7891, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !7912, file: !7891, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !7912, file: !7891, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !7912, file: !7891, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !7912, file: !7891, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !7912, file: !7891, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !7912, file: !7891, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !7912, file: !7891, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !7912, file: !7891, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !7912, file: !7891, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !7912, file: !7891, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !7912, file: !7891, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !7912, file: !7891, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !7912, file: !7891, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !7912, file: !7891, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !7912, file: !7891, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !7912, file: !7891, line: 450, baseType: !8092, size: 16, offset: 15792)
!8092 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !7891, line: 206, baseType: !476)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !7912, file: !7891, line: 451, baseType: !383, size: 32, offset: 15808)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !7912, file: !7891, line: 453, baseType: !8095, size: 512, offset: 15840)
!8095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 512, elements: !269)
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !7912, file: !7891, line: 454, baseType: !1581, size: 64, offset: 16384)
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !7912, file: !7891, line: 455, baseType: !3865, size: 64, offset: 16448)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !7912, file: !7891, line: 456, baseType: !32, size: 32, offset: 16512)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !7912, file: !7891, line: 457, baseType: !8100, size: 1088, offset: 16576)
!8100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3865, size: 1088, elements: !8052)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !7912, file: !7891, line: 458, baseType: !8100, size: 1088, offset: 17664)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !7912, file: !7891, line: 469, baseType: !3851, size: 64, offset: 18752)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !7912, file: !7891, line: 471, baseType: !8104, size: 64, offset: 18816)
!8104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8105, size: 64)
!8105 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !7891, line: 304, flags: DIFlagFwdDecl)
!8106 = !DIDerivedType(tag: DW_TAG_member, scope: !7912, file: !7891, line: 478, baseType: !8107, size: 64, offset: 18880)
!8107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7912, file: !7891, line: 478, size: 64, elements: !8108)
!8108 = !{!8109, !8112}
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !8107, file: !7891, line: 479, baseType: !8110, size: 64)
!8110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8111, size: 64)
!8111 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !7891, line: 305, flags: DIFlagFwdDecl)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !8107, file: !7891, line: 480, baseType: !7911, size: 64)
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !7912, file: !7891, line: 482, baseType: !581, size: 16, offset: 18944)
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !7912, file: !7891, line: 483, baseType: !794, size: 8, offset: 18960)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !7912, file: !7891, line: 497, baseType: !581, size: 16, offset: 18976)
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !7912, file: !7891, line: 498, baseType: !5413, size: 64, offset: 19008)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !7912, file: !7891, line: 499, baseType: !1039, size: 64, offset: 19072)
!8118 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !7912, file: !7891, line: 500, baseType: !1038, size: 64, offset: 19136)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !7912, file: !7891, line: 502, baseType: !312, size: 64, offset: 19200)
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7890, file: !7891, line: 863, baseType: !8121, size: 64, offset: 320)
!8121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8122, size: 64)
!8122 = !DISubroutineType(types: !8123)
!8123 = !{null, !7911}
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7890, file: !7891, line: 864, baseType: !8125, size: 64, offset: 384)
!8125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8126, size: 64)
!8126 = !DISubroutineType(types: !8127)
!8127 = !{!32, !7911, !4172}
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7890, file: !7891, line: 865, baseType: !8129, size: 64, offset: 448)
!8129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8130, size: 64)
!8130 = !DISubroutineType(types: !8131)
!8131 = !{!32, !7911}
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7890, file: !7891, line: 866, baseType: !8121, size: 64, offset: 512)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !7890, file: !7891, line: 867, baseType: !8134, size: 64, offset: 576)
!8134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8135, size: 64)
!8135 = !DISubroutineType(types: !8136)
!8136 = !{!32, !7911, !32}
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !7890, file: !7891, line: 868, baseType: !8138, size: 64, offset: 640)
!8138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8139, size: 64)
!8139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8140)
!8140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !7891, line: 795, size: 384, elements: !8141)
!8141 = !{!8142, !8147, !8151, !8152, !8153, !8154}
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !8140, file: !7891, line: 797, baseType: !8143, size: 64)
!8143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8144, size: 64)
!8144 = !DISubroutineType(types: !8145)
!8145 = !{!8146, !7911, !8046}
!8146 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !7891, line: 772, baseType: !7)
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !8140, file: !7891, line: 801, baseType: !8148, size: 64, offset: 64)
!8148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8149, size: 64)
!8149 = !DISubroutineType(types: !8150)
!8150 = !{!8146, !7911}
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !8140, file: !7891, line: 804, baseType: !8148, size: 64, offset: 128)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !8140, file: !7891, line: 807, baseType: !8121, size: 64, offset: 192)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !8140, file: !7891, line: 808, baseType: !8121, size: 64, offset: 256)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !8140, file: !7891, line: 811, baseType: !8121, size: 64, offset: 320)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7890, file: !7891, line: 869, baseType: !3851, size: 64, offset: 704)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7890, file: !7891, line: 870, baseType: !4125, size: 1152, offset: 768)
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !7890, file: !7891, line: 871, baseType: !8158, size: 128, offset: 1920)
!8158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !7891, line: 759, size: 128, elements: !8159)
!8159 = !{!8160, !8161}
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8158, file: !7891, line: 760, baseType: !1670)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8158, file: !7891, line: 761, baseType: !284, size: 128)
!8162 = !DIGlobalVariableExpression(var: !8163, expr: !DIExpression())
!8163 = distinct !DIGlobalVariable(name: "synclink_pci_tbl", scope: !2, file: !3, line: 885, type: !8164, isLocal: true, isDefinition: true)
!8164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7897, size: 768, elements: !1592)
!8165 = !DIGlobalVariableExpression(var: !8166, expr: !DIExpression())
!8166 = distinct !DIGlobalVariable(name: "__key", scope: !8167, file: !3, line: 4163, type: !1585, isLocal: true, isDefinition: true)
!8167 = distinct !DISubprogram(name: "mgsl_allocate_device", scope: !3, file: !3, line: 4146, type: !8168, scopeLine: 4147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{!7524}
!8170 = !DIGlobalVariableExpression(var: !8171, expr: !DIExpression())
!8171 = distinct !DIGlobalVariable(name: "__key", scope: !8167, file: !3, line: 4164, type: !1585, isLocal: true, isDefinition: true)
!8172 = !DIGlobalVariableExpression(var: !8173, expr: !DIExpression())
!8173 = distinct !DIGlobalVariable(name: "mgsl_port_ops", scope: !2, file: !3, line: 4133, type: !4803, isLocal: true, isDefinition: true)
!8174 = !DIGlobalVariableExpression(var: !8175, expr: !DIExpression())
!8175 = distinct !DIGlobalVariable(name: "default_params", scope: !2, file: !3, line: 113, type: !7646, isLocal: true, isDefinition: true)
!8176 = !DIGlobalVariableExpression(var: !8177, expr: !DIExpression())
!8177 = distinct !DIGlobalVariable(name: "mgsl_device_count", scope: !2, file: !3, line: 842, type: !32, isLocal: true, isDefinition: true)
!8178 = !DIGlobalVariableExpression(var: !8179, expr: !DIExpression())
!8179 = distinct !DIGlobalVariable(name: "hdlcdev_ops", scope: !2, file: !3, line: 7770, type: !397, isLocal: true, isDefinition: true)
!8180 = !DIGlobalVariableExpression(var: !8181, expr: !DIExpression())
!8181 = distinct !DIGlobalVariable(name: "UscIsrTable", scope: !2, file: !3, line: 806, type: !8182, isLocal: true, isDefinition: true)
!8182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8183, size: 448, elements: !7160)
!8183 = !DIDerivedType(tag: DW_TAG_typedef, name: "isr_dispatch_func", file: !3, line: 804, baseType: !8184)
!8184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8185, size: 64)
!8185 = !DISubroutineType(types: !8186)
!8186 = !{null, !7524}
!8187 = !DIGlobalVariableExpression(var: !8188, expr: !DIExpression())
!8188 = distinct !DIGlobalVariable(name: "BitPatterns", scope: !8189, file: !3, line: 7183, type: !8192, isLocal: true, isDefinition: true)
!8189 = distinct !DISubprogram(name: "mgsl_memory_test", scope: !3, file: !3, line: 7181, type: !8190, scopeLine: 7182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8190 = !DISubroutineType(types: !8191)
!8191 = !{!771, !7524}
!8192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 448, elements: !7160)
!8193 = !DIGlobalVariableExpression(var: !8194, expr: !DIExpression())
!8194 = distinct !DIGlobalVariable(name: "BitPatterns", scope: !8195, file: !3, line: 6741, type: !8196, isLocal: true, isDefinition: true)
!8195 = distinct !DISubprogram(name: "mgsl_register_test", scope: !3, file: !3, line: 6739, type: !8190, scopeLine: 6740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 128, elements: !2433)
!8197 = !DIGlobalVariableExpression(var: !8198, expr: !DIExpression())
!8198 = distinct !DIGlobalVariable(name: "Patterncount", scope: !8195, file: !3, line: 6743, type: !7, isLocal: true, isDefinition: true)
!8199 = !DIGlobalVariableExpression(var: !8200, expr: !DIExpression())
!8200 = distinct !DIGlobalVariable(name: "mgsl_ops", scope: !2, file: !3, line: 4177, type: !4856, isLocal: true, isDefinition: true)
!8201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 184, elements: !8202)
!8202 = !{!8203}
!8203 = !DISubrange(count: 23)
!8204 = !{!"rsp"}
!8205 = !{i32 7, !"Dwarf Version", i32 4}
!8206 = !{i32 2, !"Debug Info Version", i32 3}
!8207 = !{i32 1, !"wchar_size", i32 2}
!8208 = !{i32 1, !"Code Model", i32 2}
!8209 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!8210 = distinct !DISubprogram(name: "synclink_exit", scope: !3, file: !3, line: 4299, type: !5179, scopeLine: 4300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8211 = !DILocation(line: 4301, column: 2, scope: !8210)
!8212 = !DILocation(line: 4302, column: 1, scope: !8210)
!8213 = distinct !DISubprogram(name: "synclink_cleanup", scope: !3, file: !3, line: 4241, type: !5179, scopeLine: 4242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8214 = !DILocalVariable(name: "rc", scope: !8213, file: !3, line: 4243, type: !32)
!8215 = !DILocation(line: 4243, column: 6, scope: !8213)
!8216 = !DILocalVariable(name: "info", scope: !8213, file: !3, line: 4244, type: !7524)
!8217 = !DILocation(line: 4244, column: 22, scope: !8213)
!8218 = !DILocalVariable(name: "tmp", scope: !8213, file: !3, line: 4245, type: !7524)
!8219 = !DILocation(line: 4245, column: 22, scope: !8213)
!8220 = !DILocation(line: 4247, column: 31, scope: !8213)
!8221 = !DILocation(line: 4247, column: 44, scope: !8213)
!8222 = !DILocation(line: 4247, column: 2, scope: !8213)
!8223 = !DILocation(line: 4249, column: 6, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 4249, column: 6)
!8225 = !DILocation(line: 4249, column: 6, scope: !8213)
!8226 = !DILocation(line: 4250, column: 30, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8224, file: !3, line: 4249, column: 21)
!8228 = !DILocation(line: 4250, column: 8, scope: !8227)
!8229 = !DILocation(line: 4250, column: 6, scope: !8227)
!8230 = !DILocation(line: 4251, column: 7, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 4251, column: 7)
!8232 = !DILocation(line: 4251, column: 7, scope: !8227)
!8233 = !DILocation(line: 4253, column: 29, scope: !8231)
!8234 = !DILocation(line: 4252, column: 4, scope: !8231)
!8235 = !DILocation(line: 4254, column: 18, scope: !8227)
!8236 = !DILocation(line: 4254, column: 3, scope: !8227)
!8237 = !DILocation(line: 4255, column: 2, scope: !8227)
!8238 = !DILocation(line: 4257, column: 9, scope: !8213)
!8239 = !DILocation(line: 4257, column: 7, scope: !8213)
!8240 = !DILocation(line: 4258, column: 2, scope: !8213)
!8241 = !DILocation(line: 4258, column: 8, scope: !8213)
!8242 = !DILocation(line: 4260, column: 16, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 4258, column: 14)
!8244 = !DILocation(line: 4260, column: 3, scope: !8243)
!8245 = !DILocation(line: 4262, column: 26, scope: !8243)
!8246 = !DILocation(line: 4262, column: 3, scope: !8243)
!8247 = !DILocation(line: 4263, column: 9, scope: !8243)
!8248 = !DILocation(line: 4263, column: 7, scope: !8243)
!8249 = !DILocation(line: 4264, column: 10, scope: !8243)
!8250 = !DILocation(line: 4264, column: 16, scope: !8243)
!8251 = !DILocation(line: 4264, column: 8, scope: !8243)
!8252 = !DILocation(line: 4265, column: 21, scope: !8243)
!8253 = !DILocation(line: 4265, column: 26, scope: !8243)
!8254 = !DILocation(line: 4265, column: 3, scope: !8243)
!8255 = !DILocation(line: 4266, column: 9, scope: !8243)
!8256 = !DILocation(line: 4266, column: 3, scope: !8243)
!8257 = distinct !{!8257, !8240, !8258}
!8258 = !DILocation(line: 4267, column: 2, scope: !8213)
!8259 = !DILocation(line: 4269, column: 6, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 4269, column: 6)
!8261 = !DILocation(line: 4269, column: 6, scope: !8213)
!8262 = !DILocation(line: 4270, column: 3, scope: !8260)
!8263 = !DILocation(line: 4271, column: 1, scope: !8213)
!8264 = distinct !DISubprogram(name: "synclink_init", scope: !3, file: !3, line: 4273, type: !8265, scopeLine: 4274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8265 = !DISubroutineType(types: !8266)
!8266 = !{!32}
!8267 = !DILocalVariable(name: "rc", scope: !8264, file: !3, line: 4275, type: !32)
!8268 = !DILocation(line: 4275, column: 6, scope: !8264)
!8269 = !DILocation(line: 4277, column: 6, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 4277, column: 6)
!8271 = !DILocation(line: 4277, column: 6, scope: !8264)
!8272 = !DILocation(line: 4278, column: 4, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 4277, column: 21)
!8274 = !DILocation(line: 4280, column: 2, scope: !8273)
!8275 = !DILocation(line: 4282, column: 21, scope: !8264)
!8276 = !DILocation(line: 4282, column: 34, scope: !8264)
!8277 = !DILocation(line: 4282, column: 3, scope: !8264)
!8278 = !DILocation(line: 4284, column: 12, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 4284, column: 6)
!8280 = !DILocation(line: 4284, column: 10, scope: !8279)
!8281 = !DILocation(line: 4284, column: 55, scope: !8279)
!8282 = !DILocation(line: 4284, column: 6, scope: !8264)
!8283 = !DILocation(line: 4285, column: 66, scope: !8279)
!8284 = !DILocation(line: 4285, column: 3, scope: !8279)
!8285 = !DILocation(line: 4287, column: 18, scope: !8279)
!8286 = !DILocation(line: 4289, column: 12, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 4289, column: 6)
!8288 = !DILocation(line: 4289, column: 10, scope: !8287)
!8289 = !DILocation(line: 4289, column: 29, scope: !8287)
!8290 = !DILocation(line: 4289, column: 6, scope: !8264)
!8291 = !DILocation(line: 4290, column: 3, scope: !8287)
!8292 = !DILocation(line: 4292, column: 2, scope: !8264)
!8293 = !DILabel(scope: !8264, name: "error", file: !3, line: 4294)
!8294 = !DILocation(line: 4294, column: 1, scope: !8264)
!8295 = !DILocation(line: 4295, column: 2, scope: !8264)
!8296 = !DILocation(line: 4296, column: 9, scope: !8264)
!8297 = !DILocation(line: 4296, column: 2, scope: !8264)
!8298 = !DILocation(line: 4297, column: 1, scope: !8264)
!8299 = distinct !DISubprogram(name: "hdlcdev_exit", scope: !3, file: !3, line: 7833, type: !8185, scopeLine: 7834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8300 = !DILocalVariable(name: "info", arg: 1, scope: !8299, file: !3, line: 7833, type: !7524)
!8301 = !DILocation(line: 7833, column: 46, scope: !8299)
!8302 = !DILocation(line: 7835, column: 25, scope: !8299)
!8303 = !DILocation(line: 7835, column: 31, scope: !8299)
!8304 = !DILocation(line: 7835, column: 2, scope: !8299)
!8305 = !DILocation(line: 7836, column: 14, scope: !8299)
!8306 = !DILocation(line: 7836, column: 20, scope: !8299)
!8307 = !DILocation(line: 7836, column: 2, scope: !8299)
!8308 = !DILocation(line: 7837, column: 2, scope: !8299)
!8309 = !DILocation(line: 7837, column: 8, scope: !8299)
!8310 = !DILocation(line: 7837, column: 15, scope: !8299)
!8311 = !DILocation(line: 7838, column: 1, scope: !8299)
!8312 = distinct !DISubprogram(name: "mgsl_release_resources", scope: !3, file: !3, line: 4027, type: !8185, scopeLine: 4028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8313 = !DILocalVariable(name: "info", arg: 1, scope: !8312, file: !3, line: 4027, type: !7524)
!8314 = !DILocation(line: 4027, column: 56, scope: !8312)
!8315 = !DILocation(line: 4029, column: 7, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4029, column: 7)
!8317 = !DILocation(line: 4029, column: 19, scope: !8316)
!8318 = !DILocation(line: 4029, column: 7, scope: !8312)
!8319 = !DILocation(line: 4031, column: 22, scope: !8316)
!8320 = !DILocation(line: 4031, column: 28, scope: !8316)
!8321 = !DILocation(line: 4030, column: 3, scope: !8316)
!8322 = !DILocation(line: 4033, column: 7, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4033, column: 7)
!8324 = !DILocation(line: 4033, column: 13, scope: !8323)
!8325 = !DILocation(line: 4033, column: 7, scope: !8312)
!8326 = !DILocation(line: 4034, column: 12, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 4033, column: 29)
!8328 = !DILocation(line: 4034, column: 18, scope: !8327)
!8329 = !DILocation(line: 4034, column: 29, scope: !8327)
!8330 = !DILocation(line: 4034, column: 3, scope: !8327)
!8331 = !DILocation(line: 4035, column: 3, scope: !8327)
!8332 = !DILocation(line: 4035, column: 9, scope: !8327)
!8333 = !DILocation(line: 4035, column: 23, scope: !8327)
!8334 = !DILocation(line: 4036, column: 2, scope: !8327)
!8335 = !DILocation(line: 4037, column: 7, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4037, column: 7)
!8337 = !DILocation(line: 4037, column: 13, scope: !8336)
!8338 = !DILocation(line: 4037, column: 7, scope: !8312)
!8339 = !DILocation(line: 4038, column: 15, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 4037, column: 29)
!8341 = !DILocation(line: 4038, column: 21, scope: !8340)
!8342 = !DILocation(line: 4038, column: 3, scope: !8340)
!8343 = !DILocation(line: 4039, column: 12, scope: !8340)
!8344 = !DILocation(line: 4039, column: 18, scope: !8340)
!8345 = !DILocation(line: 4039, column: 3, scope: !8340)
!8346 = !DILocation(line: 4040, column: 3, scope: !8340)
!8347 = !DILocation(line: 4040, column: 9, scope: !8340)
!8348 = !DILocation(line: 4040, column: 23, scope: !8340)
!8349 = !DILocation(line: 4041, column: 2, scope: !8340)
!8350 = !DILocation(line: 4042, column: 24, scope: !8312)
!8351 = !DILocation(line: 4042, column: 2, scope: !8312)
!8352 = !DILocation(line: 4043, column: 41, scope: !8312)
!8353 = !DILocation(line: 4043, column: 2, scope: !8312)
!8354 = !DILocation(line: 4044, column: 46, scope: !8312)
!8355 = !DILocation(line: 4044, column: 7, scope: !8312)
!8356 = !DILocation(line: 4046, column: 7, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4046, column: 7)
!8358 = !DILocation(line: 4046, column: 13, scope: !8357)
!8359 = !DILocation(line: 4046, column: 7, scope: !8312)
!8360 = !DILocation(line: 4047, column: 3, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 4046, column: 33)
!8362 = !DILocation(line: 4048, column: 3, scope: !8361)
!8363 = !DILocation(line: 4048, column: 9, scope: !8361)
!8364 = !DILocation(line: 4048, column: 27, scope: !8361)
!8365 = !DILocation(line: 4049, column: 2, scope: !8361)
!8366 = !DILocation(line: 4050, column: 7, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4050, column: 7)
!8368 = !DILocation(line: 4050, column: 13, scope: !8367)
!8369 = !DILocation(line: 4050, column: 7, scope: !8312)
!8370 = !DILocation(line: 4051, column: 3, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 4050, column: 36)
!8372 = !DILocation(line: 4052, column: 3, scope: !8371)
!8373 = !DILocation(line: 4052, column: 9, scope: !8371)
!8374 = !DILocation(line: 4052, column: 30, scope: !8371)
!8375 = !DILocation(line: 4053, column: 2, scope: !8371)
!8376 = !DILocation(line: 4054, column: 7, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4054, column: 7)
!8378 = !DILocation(line: 4054, column: 13, scope: !8377)
!8379 = !DILocation(line: 4054, column: 7, scope: !8312)
!8380 = !DILocation(line: 4055, column: 3, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8377, file: !3, line: 4054, column: 33)
!8382 = !DILocation(line: 4056, column: 3, scope: !8381)
!8383 = !DILocation(line: 4056, column: 9, scope: !8381)
!8384 = !DILocation(line: 4056, column: 27, scope: !8381)
!8385 = !DILocation(line: 4057, column: 2, scope: !8381)
!8386 = !DILocation(line: 4058, column: 6, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4058, column: 6)
!8388 = !DILocation(line: 4058, column: 12, scope: !8387)
!8389 = !DILocation(line: 4058, column: 6, scope: !8312)
!8390 = !DILocation(line: 4059, column: 11, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 4058, column: 24)
!8392 = !DILocation(line: 4059, column: 17, scope: !8391)
!8393 = !DILocation(line: 4059, column: 3, scope: !8391)
!8394 = !DILocation(line: 4060, column: 3, scope: !8391)
!8395 = !DILocation(line: 4060, column: 9, scope: !8391)
!8396 = !DILocation(line: 4060, column: 21, scope: !8391)
!8397 = !DILocation(line: 4061, column: 2, scope: !8391)
!8398 = !DILocation(line: 4062, column: 6, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4062, column: 6)
!8400 = !DILocation(line: 4062, column: 12, scope: !8399)
!8401 = !DILocation(line: 4062, column: 6, scope: !8312)
!8402 = !DILocation(line: 4063, column: 11, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 4062, column: 21)
!8404 = !DILocation(line: 4063, column: 17, scope: !8403)
!8405 = !DILocation(line: 4063, column: 28, scope: !8403)
!8406 = !DILocation(line: 4063, column: 34, scope: !8403)
!8407 = !DILocation(line: 4063, column: 26, scope: !8403)
!8408 = !DILocation(line: 4063, column: 3, scope: !8403)
!8409 = !DILocation(line: 4064, column: 3, scope: !8403)
!8410 = !DILocation(line: 4064, column: 9, scope: !8403)
!8411 = !DILocation(line: 4064, column: 18, scope: !8403)
!8412 = !DILocation(line: 4065, column: 2, scope: !8403)
!8413 = !DILocation(line: 4067, column: 7, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4067, column: 7)
!8415 = !DILocation(line: 4067, column: 19, scope: !8414)
!8416 = !DILocation(line: 4067, column: 7, scope: !8312)
!8417 = !DILocation(line: 4069, column: 22, scope: !8414)
!8418 = !DILocation(line: 4069, column: 28, scope: !8414)
!8419 = !DILocation(line: 4068, column: 3, scope: !8414)
!8420 = !DILocation(line: 4071, column: 1, scope: !8312)
!8421 = distinct !DISubprogram(name: "disable_dma", scope: !8422, file: !8422, line: 175, type: !8423, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8422 = !DIFile(filename: "./arch/x86/include/asm/dma.h", directory: "/home/lizy2001/genbc/linux")
!8423 = !DISubroutineType(types: !8424)
!8424 = !{null, !7}
!8425 = !DILocalVariable(name: "dmanr", arg: 1, scope: !8421, file: !8422, line: 175, type: !7)
!8426 = !DILocation(line: 175, column: 45, scope: !8421)
!8427 = !DILocation(line: 177, column: 6, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8421, file: !8422, line: 177, column: 6)
!8429 = !DILocation(line: 177, column: 12, scope: !8428)
!8430 = !DILocation(line: 177, column: 6, scope: !8421)
!8431 = !DILocation(line: 178, column: 12, scope: !8428)
!8432 = !DILocation(line: 178, column: 18, scope: !8428)
!8433 = !DILocation(line: 178, column: 3, scope: !8428)
!8434 = !DILocation(line: 180, column: 13, scope: !8428)
!8435 = !DILocation(line: 180, column: 19, scope: !8428)
!8436 = !DILocation(line: 180, column: 24, scope: !8428)
!8437 = !DILocation(line: 180, column: 12, scope: !8428)
!8438 = !DILocation(line: 180, column: 3, scope: !8428)
!8439 = !DILocation(line: 181, column: 1, scope: !8421)
!8440 = distinct !DISubprogram(name: "mgsl_free_dma_buffers", scope: !3, file: !3, line: 3763, type: !8185, scopeLine: 3764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8441 = !DILocalVariable(name: "info", arg: 1, scope: !8440, file: !3, line: 3763, type: !7524)
!8442 = !DILocation(line: 3763, column: 56, scope: !8440)
!8443 = !DILocation(line: 3765, column: 26, scope: !8440)
!8444 = !DILocation(line: 3765, column: 32, scope: !8440)
!8445 = !DILocation(line: 3765, column: 38, scope: !8440)
!8446 = !DILocation(line: 3765, column: 54, scope: !8440)
!8447 = !DILocation(line: 3765, column: 60, scope: !8440)
!8448 = !DILocation(line: 3765, column: 2, scope: !8440)
!8449 = !DILocation(line: 3766, column: 26, scope: !8440)
!8450 = !DILocation(line: 3766, column: 32, scope: !8440)
!8451 = !DILocation(line: 3766, column: 38, scope: !8440)
!8452 = !DILocation(line: 3766, column: 54, scope: !8440)
!8453 = !DILocation(line: 3766, column: 60, scope: !8440)
!8454 = !DILocation(line: 3766, column: 2, scope: !8440)
!8455 = !DILocation(line: 3767, column: 32, scope: !8440)
!8456 = !DILocation(line: 3767, column: 2, scope: !8440)
!8457 = !DILocation(line: 3769, column: 1, scope: !8440)
!8458 = distinct !DISubprogram(name: "mgsl_free_intermediate_rxbuffer_memory", scope: !3, file: !3, line: 3810, type: !8185, scopeLine: 3811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8459 = !DILocalVariable(name: "info", arg: 1, scope: !8458, file: !3, line: 3810, type: !7524)
!8460 = !DILocation(line: 3810, column: 72, scope: !8458)
!8461 = !DILocation(line: 3812, column: 8, scope: !8458)
!8462 = !DILocation(line: 3812, column: 14, scope: !8458)
!8463 = !DILocation(line: 3812, column: 2, scope: !8458)
!8464 = !DILocation(line: 3813, column: 2, scope: !8458)
!8465 = !DILocation(line: 3813, column: 8, scope: !8458)
!8466 = !DILocation(line: 3813, column: 30, scope: !8458)
!8467 = !DILocation(line: 3814, column: 8, scope: !8458)
!8468 = !DILocation(line: 3814, column: 14, scope: !8458)
!8469 = !DILocation(line: 3814, column: 2, scope: !8458)
!8470 = !DILocation(line: 3815, column: 2, scope: !8458)
!8471 = !DILocation(line: 3815, column: 8, scope: !8458)
!8472 = !DILocation(line: 3815, column: 17, scope: !8458)
!8473 = !DILocation(line: 3817, column: 1, scope: !8458)
!8474 = distinct !DISubprogram(name: "mgsl_free_intermediate_txbuffer_memory", scope: !3, file: !3, line: 3868, type: !8185, scopeLine: 3869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8475 = !DILocalVariable(name: "info", arg: 1, scope: !8474, file: !3, line: 3868, type: !7524)
!8476 = !DILocation(line: 3868, column: 72, scope: !8474)
!8477 = !DILocalVariable(name: "i", scope: !8474, file: !3, line: 3870, type: !32)
!8478 = !DILocation(line: 3870, column: 6, scope: !8474)
!8479 = !DILocation(line: 3872, column: 9, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 3872, column: 2)
!8481 = !DILocation(line: 3872, column: 8, scope: !8480)
!8482 = !DILocation(line: 3872, column: 13, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 3872, column: 2)
!8484 = !DILocation(line: 3872, column: 15, scope: !8483)
!8485 = !DILocation(line: 3872, column: 21, scope: !8483)
!8486 = !DILocation(line: 3872, column: 14, scope: !8483)
!8487 = !DILocation(line: 3872, column: 2, scope: !8480)
!8488 = !DILocation(line: 3873, column: 9, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 3872, column: 51)
!8490 = !DILocation(line: 3873, column: 15, scope: !8489)
!8491 = !DILocation(line: 3873, column: 34, scope: !8489)
!8492 = !DILocation(line: 3873, column: 37, scope: !8489)
!8493 = !DILocation(line: 3873, column: 3, scope: !8489)
!8494 = !DILocation(line: 3874, column: 3, scope: !8489)
!8495 = !DILocation(line: 3874, column: 9, scope: !8489)
!8496 = !DILocation(line: 3874, column: 28, scope: !8489)
!8497 = !DILocation(line: 3874, column: 31, scope: !8489)
!8498 = !DILocation(line: 3874, column: 38, scope: !8489)
!8499 = !DILocation(line: 3875, column: 2, scope: !8489)
!8500 = !DILocation(line: 3872, column: 45, scope: !8483)
!8501 = !DILocation(line: 3872, column: 2, scope: !8483)
!8502 = distinct !{!8502, !8487, !8503}
!8503 = !DILocation(line: 3875, column: 2, scope: !8480)
!8504 = !DILocation(line: 3877, column: 2, scope: !8474)
!8505 = !DILocation(line: 3877, column: 8, scope: !8474)
!8506 = !DILocation(line: 3877, column: 29, scope: !8474)
!8507 = !DILocation(line: 3878, column: 2, scope: !8474)
!8508 = !DILocation(line: 3878, column: 8, scope: !8474)
!8509 = !DILocation(line: 3878, column: 29, scope: !8474)
!8510 = !DILocation(line: 3879, column: 2, scope: !8474)
!8511 = !DILocation(line: 3879, column: 8, scope: !8474)
!8512 = !DILocation(line: 3879, column: 25, scope: !8474)
!8513 = !DILocation(line: 3881, column: 1, scope: !8474)
!8514 = distinct !DISubprogram(name: "outb", scope: !8515, file: !8515, line: 334, type: !8516, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8515 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!8516 = !DISubroutineType(types: !8517)
!8517 = !{null, !482, !32}
!8518 = !DILocalVariable(name: "value", arg: 1, scope: !8514, file: !8515, line: 334, type: !482)
!8519 = !DILocation(line: 334, column: 1, scope: !8514)
!8520 = !DILocalVariable(name: "port", arg: 2, scope: !8514, file: !8515, line: 334, type: !32)
!8521 = !{i32 -2143173378}
!8522 = distinct !DISubprogram(name: "mgsl_free_frame_memory", scope: !3, file: !3, line: 3742, type: !8523, scopeLine: 3743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8523 = !DISubroutineType(types: !8524)
!8524 = !{null, !7524, !7588, !32}
!8525 = !DILocalVariable(name: "info", arg: 1, scope: !8522, file: !3, line: 3742, type: !7524)
!8526 = !DILocation(line: 3742, column: 56, scope: !8522)
!8527 = !DILocalVariable(name: "BufferList", arg: 2, scope: !8522, file: !3, line: 3742, type: !7588)
!8528 = !DILocation(line: 3742, column: 78, scope: !8522)
!8529 = !DILocalVariable(name: "Buffercount", arg: 3, scope: !8522, file: !3, line: 3742, type: !32)
!8530 = !DILocation(line: 3742, column: 94, scope: !8522)
!8531 = !DILocalVariable(name: "i", scope: !8522, file: !3, line: 3744, type: !32)
!8532 = !DILocation(line: 3744, column: 6, scope: !8522)
!8533 = !DILocation(line: 3746, column: 7, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 3746, column: 7)
!8535 = !DILocation(line: 3746, column: 7, scope: !8522)
!8536 = !DILocation(line: 3747, column: 11, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 3747, column: 3)
!8538 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 3746, column: 20)
!8539 = !DILocation(line: 3747, column: 9, scope: !8537)
!8540 = !DILocation(line: 3747, column: 17, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 3747, column: 3)
!8542 = !DILocation(line: 3747, column: 21, scope: !8541)
!8543 = !DILocation(line: 3747, column: 19, scope: !8541)
!8544 = !DILocation(line: 3747, column: 3, scope: !8537)
!8545 = !DILocation(line: 3748, column: 9, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 3748, column: 9)
!8547 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 3747, column: 41)
!8548 = !DILocation(line: 3748, column: 20, scope: !8546)
!8549 = !DILocation(line: 3748, column: 23, scope: !8546)
!8550 = !DILocation(line: 3748, column: 9, scope: !8547)
!8551 = !DILocation(line: 3749, column: 5, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 3748, column: 35)
!8553 = !DILocation(line: 3749, column: 16, scope: !8552)
!8554 = !DILocation(line: 3749, column: 19, scope: !8552)
!8555 = !DILocation(line: 3749, column: 29, scope: !8552)
!8556 = !DILocation(line: 3750, column: 4, scope: !8552)
!8557 = !DILocation(line: 3751, column: 3, scope: !8547)
!8558 = !DILocation(line: 3747, column: 36, scope: !8541)
!8559 = !DILocation(line: 3747, column: 3, scope: !8541)
!8560 = distinct !{!8560, !8544, !8561}
!8561 = !DILocation(line: 3751, column: 3, scope: !8537)
!8562 = !DILocation(line: 3752, column: 2, scope: !8538)
!8563 = !DILocation(line: 3754, column: 1, scope: !8522)
!8564 = distinct !DISubprogram(name: "mgsl_free_buffer_list_memory", scope: !3, file: !3, line: 3688, type: !8185, scopeLine: 3689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8565 = !DILocalVariable(name: "info", arg: 1, scope: !8564, file: !3, line: 3688, type: !7524)
!8566 = !DILocation(line: 3688, column: 63, scope: !8564)
!8567 = !DILocation(line: 3690, column: 2, scope: !8564)
!8568 = !DILocation(line: 3690, column: 8, scope: !8564)
!8569 = !DILocation(line: 3690, column: 20, scope: !8564)
!8570 = !DILocation(line: 3691, column: 2, scope: !8564)
!8571 = !DILocation(line: 3691, column: 8, scope: !8564)
!8572 = !DILocation(line: 3691, column: 23, scope: !8564)
!8573 = !DILocation(line: 3692, column: 2, scope: !8564)
!8574 = !DILocation(line: 3692, column: 8, scope: !8564)
!8575 = !DILocation(line: 3692, column: 23, scope: !8564)
!8576 = !DILocation(line: 3694, column: 1, scope: !8564)
!8577 = distinct !DISubprogram(name: "synclink_init_one", scope: !3, file: !3, line: 7843, type: !7909, scopeLine: 7845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8578 = !DILocalVariable(name: "dev", arg: 1, scope: !8577, file: !3, line: 7843, type: !7911)
!8579 = !DILocation(line: 7843, column: 47, scope: !8577)
!8580 = !DILocalVariable(name: "ent", arg: 2, scope: !8577, file: !3, line: 7844, type: !7896)
!8581 = !DILocation(line: 7844, column: 34, scope: !8577)
!8582 = !DILocalVariable(name: "info", scope: !8577, file: !3, line: 7846, type: !7524)
!8583 = !DILocation(line: 7846, column: 22, scope: !8577)
!8584 = !DILocation(line: 7848, column: 24, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8577, file: !3, line: 7848, column: 6)
!8586 = !DILocation(line: 7848, column: 6, scope: !8585)
!8587 = !DILocation(line: 7848, column: 6, scope: !8577)
!8588 = !DILocation(line: 7849, column: 44, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 7848, column: 30)
!8590 = !DILocation(line: 7849, column: 3, scope: !8589)
!8591 = !DILocation(line: 7850, column: 3, scope: !8589)
!8592 = !DILocation(line: 7853, column: 9, scope: !8577)
!8593 = !DILocation(line: 7853, column: 7, scope: !8577)
!8594 = !DILocation(line: 7854, column: 7, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8577, file: !3, line: 7854, column: 6)
!8596 = !DILocation(line: 7854, column: 6, scope: !8577)
!8597 = !DILocation(line: 7855, column: 3, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 7854, column: 13)
!8599 = !DILocation(line: 7856, column: 3, scope: !8598)
!8600 = !DILocation(line: 7861, column: 18, scope: !8577)
!8601 = !DILocation(line: 7861, column: 2, scope: !8577)
!8602 = !DILocation(line: 7861, column: 8, scope: !8577)
!8603 = !DILocation(line: 7861, column: 16, scope: !8577)
!8604 = !DILocation(line: 7862, column: 20, scope: !8577)
!8605 = !DILocation(line: 7862, column: 25, scope: !8577)
!8606 = !DILocation(line: 7862, column: 2, scope: !8577)
!8607 = !DILocation(line: 7862, column: 8, scope: !8577)
!8608 = !DILocation(line: 7862, column: 18, scope: !8577)
!8609 = !DILocation(line: 7863, column: 27, scope: !8577)
!8610 = !DILocation(line: 7863, column: 2, scope: !8577)
!8611 = !DILocation(line: 7863, column: 8, scope: !8577)
!8612 = !DILocation(line: 7863, column: 25, scope: !8577)
!8613 = !DILocation(line: 7869, column: 24, scope: !8577)
!8614 = !DILocation(line: 7869, column: 2, scope: !8577)
!8615 = !DILocation(line: 7869, column: 8, scope: !8577)
!8616 = !DILocation(line: 7869, column: 22, scope: !8577)
!8617 = !DILocation(line: 7870, column: 24, scope: !8577)
!8618 = !DILocation(line: 7870, column: 30, scope: !8577)
!8619 = !DILocation(line: 7870, column: 44, scope: !8577)
!8620 = !DILocation(line: 7870, column: 2, scope: !8577)
!8621 = !DILocation(line: 7870, column: 8, scope: !8577)
!8622 = !DILocation(line: 7870, column: 22, scope: !8577)
!8623 = !DILocation(line: 7871, column: 2, scope: !8577)
!8624 = !DILocation(line: 7871, column: 8, scope: !8577)
!8625 = !DILocation(line: 7871, column: 22, scope: !8577)
!8626 = !DILocation(line: 7873, column: 2, scope: !8577)
!8627 = !DILocation(line: 7873, column: 8, scope: !8577)
!8628 = !DILocation(line: 7873, column: 21, scope: !8577)
!8629 = !DILocation(line: 7874, column: 2, scope: !8577)
!8630 = !DILocation(line: 7874, column: 8, scope: !8577)
!8631 = !DILocation(line: 7874, column: 18, scope: !8577)
!8632 = !DILocation(line: 7876, column: 6, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8577, file: !3, line: 7876, column: 6)
!8634 = !DILocation(line: 7876, column: 11, scope: !8633)
!8635 = !DILocation(line: 7876, column: 18, scope: !8633)
!8636 = !DILocation(line: 7876, column: 6, scope: !8577)
!8637 = !DILocation(line: 7878, column: 3, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 7876, column: 29)
!8639 = !DILocation(line: 7878, column: 9, scope: !8638)
!8640 = !DILocation(line: 7878, column: 25, scope: !8638)
!8641 = !DILocation(line: 7879, column: 3, scope: !8638)
!8642 = !DILocation(line: 7879, column: 9, scope: !8638)
!8643 = !DILocation(line: 7879, column: 20, scope: !8638)
!8644 = !DILocation(line: 7880, column: 2, scope: !8638)
!8645 = !DILocation(line: 7886, column: 3, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 7880, column: 9)
!8647 = !DILocation(line: 7886, column: 9, scope: !8646)
!8648 = !DILocation(line: 7886, column: 25, scope: !8646)
!8649 = !DILocation(line: 7887, column: 3, scope: !8646)
!8650 = !DILocation(line: 7887, column: 9, scope: !8646)
!8651 = !DILocation(line: 7887, column: 20, scope: !8646)
!8652 = !DILocation(line: 7890, column: 18, scope: !8577)
!8653 = !DILocation(line: 7890, column: 2, scope: !8577)
!8654 = !DILocation(line: 7892, column: 2, scope: !8577)
!8655 = !DILocation(line: 7893, column: 1, scope: !8577)
!8656 = distinct !DISubprogram(name: "synclink_remove_one", scope: !3, file: !3, line: 7895, type: !8122, scopeLine: 7896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8657 = !DILocalVariable(name: "dev", arg: 1, scope: !8656, file: !3, line: 7895, type: !7911)
!8658 = !DILocation(line: 7895, column: 50, scope: !8656)
!8659 = !DILocation(line: 7897, column: 1, scope: !8656)
!8660 = !DILocalVariable(name: "lock", arg: 1, scope: !8661, file: !8662, line: 327, type: !2181)
!8661 = distinct !DISubprogram(name: "spinlock_check", scope: !8662, file: !8662, line: 327, type: !8663, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8662 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8663 = !DISubroutineType(types: !8664)
!8664 = !{!8665, !2181}
!8665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!8666 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !8667)
!8667 = distinct !DILocation(line: 4166, column: 3, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 4166, column: 3)
!8669 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 4155, column: 9)
!8670 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 4153, column: 6)
!8671 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !8672)
!8672 = distinct !DILocation(line: 4165, column: 3, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 4165, column: 3)
!8674 = !DILocalVariable(name: "info", scope: !8167, file: !3, line: 4148, type: !7524)
!8675 = !DILocation(line: 4148, column: 22, scope: !8167)
!8676 = !DILocation(line: 4150, column: 9, scope: !8167)
!8677 = !DILocation(line: 4150, column: 7, scope: !8167)
!8678 = !DILocation(line: 4153, column: 7, scope: !8670)
!8679 = !DILocation(line: 4153, column: 6, scope: !8167)
!8680 = !DILocation(line: 4154, column: 3, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 4153, column: 13)
!8682 = !DILocation(line: 4155, column: 2, scope: !8681)
!8683 = !DILocation(line: 4156, column: 18, scope: !8669)
!8684 = !DILocation(line: 4156, column: 24, scope: !8669)
!8685 = !DILocation(line: 4156, column: 3, scope: !8669)
!8686 = !DILocation(line: 4157, column: 3, scope: !8669)
!8687 = !DILocation(line: 4157, column: 9, scope: !8669)
!8688 = !DILocation(line: 4157, column: 14, scope: !8669)
!8689 = !DILocation(line: 4157, column: 18, scope: !8669)
!8690 = !DILocation(line: 4158, column: 3, scope: !8669)
!8691 = !DILocation(line: 4158, column: 9, scope: !8669)
!8692 = !DILocation(line: 4158, column: 15, scope: !8669)
!8693 = !DILocation(line: 4159, column: 3, scope: !8669)
!8694 = !DILocation(line: 4159, column: 3, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 4159, column: 3)
!8696 = !DILocation(line: 4160, column: 3, scope: !8669)
!8697 = !DILocation(line: 4160, column: 9, scope: !8669)
!8698 = !DILocation(line: 4160, column: 24, scope: !8669)
!8699 = !DILocation(line: 4161, column: 3, scope: !8669)
!8700 = !DILocation(line: 4161, column: 9, scope: !8669)
!8701 = !DILocation(line: 4161, column: 14, scope: !8669)
!8702 = !DILocation(line: 4161, column: 26, scope: !8669)
!8703 = !DILocation(line: 4162, column: 3, scope: !8669)
!8704 = !DILocation(line: 4162, column: 9, scope: !8669)
!8705 = !DILocation(line: 4162, column: 14, scope: !8669)
!8706 = !DILocation(line: 4162, column: 27, scope: !8669)
!8707 = !DILocation(line: 4163, column: 3, scope: !8669)
!8708 = !DILocation(line: 4163, column: 3, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 4163, column: 3)
!8710 = !DILocation(line: 4164, column: 3, scope: !8669)
!8711 = !DILocation(line: 4164, column: 3, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 4164, column: 3)
!8713 = !DILocation(line: 4165, column: 3, scope: !8669)
!8714 = !DILocation(line: 4165, column: 3, scope: !8673)
!8715 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !8672)
!8716 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !8672)
!8717 = !DILocation(line: 4166, column: 3, scope: !8669)
!8718 = !DILocation(line: 4166, column: 3, scope: !8668)
!8719 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !8667)
!8720 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !8667)
!8721 = !DILocation(line: 4167, column: 11, scope: !8669)
!8722 = !DILocation(line: 4167, column: 17, scope: !8669)
!8723 = !DILocation(line: 4167, column: 3, scope: !8669)
!8724 = !DILocation(line: 4168, column: 3, scope: !8669)
!8725 = !DILocation(line: 4168, column: 9, scope: !8669)
!8726 = !DILocation(line: 4168, column: 19, scope: !8669)
!8727 = !DILocation(line: 4169, column: 3, scope: !8669)
!8728 = !DILocation(line: 4169, column: 9, scope: !8669)
!8729 = !DILocation(line: 4169, column: 28, scope: !8669)
!8730 = !DILocation(line: 4170, column: 3, scope: !8669)
!8731 = !DILocation(line: 4170, column: 9, scope: !8669)
!8732 = !DILocation(line: 4170, column: 32, scope: !8669)
!8733 = !DILocation(line: 4173, column: 9, scope: !8167)
!8734 = !DILocation(line: 4173, column: 2, scope: !8167)
!8735 = distinct !DISubprogram(name: "mgsl_add_device", scope: !3, file: !3, line: 4081, type: !8185, scopeLine: 4082, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8736 = !DILocalVariable(name: "info", arg: 1, scope: !8735, file: !3, line: 4081, type: !7524)
!8737 = !DILocation(line: 4081, column: 50, scope: !8735)
!8738 = !DILocation(line: 4083, column: 2, scope: !8735)
!8739 = !DILocation(line: 4083, column: 8, scope: !8735)
!8740 = !DILocation(line: 4083, column: 20, scope: !8735)
!8741 = !DILocation(line: 4084, column: 15, scope: !8735)
!8742 = !DILocation(line: 4084, column: 2, scope: !8735)
!8743 = !DILocation(line: 4084, column: 8, scope: !8735)
!8744 = !DILocation(line: 4084, column: 13, scope: !8735)
!8745 = !DILocation(line: 4085, column: 10, scope: !8735)
!8746 = !DILocation(line: 4085, column: 16, scope: !8735)
!8747 = !DILocation(line: 4085, column: 38, scope: !8735)
!8748 = !DILocation(line: 4085, column: 44, scope: !8735)
!8749 = !DILocation(line: 4085, column: 2, scope: !8735)
!8750 = !DILocation(line: 4087, column: 6, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 4087, column: 6)
!8752 = !DILocation(line: 4087, column: 12, scope: !8751)
!8753 = !DILocation(line: 4087, column: 17, scope: !8751)
!8754 = !DILocation(line: 4087, column: 6, scope: !8735)
!8755 = !DILocation(line: 4088, column: 16, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 4088, column: 7)
!8757 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 4087, column: 38)
!8758 = !DILocation(line: 4088, column: 22, scope: !8756)
!8759 = !DILocation(line: 4088, column: 7, scope: !8756)
!8760 = !DILocation(line: 4088, column: 7, scope: !8757)
!8761 = !DILocation(line: 4089, column: 36, scope: !8756)
!8762 = !DILocation(line: 4089, column: 42, scope: !8756)
!8763 = !DILocation(line: 4089, column: 27, scope: !8756)
!8764 = !DILocation(line: 4089, column: 4, scope: !8756)
!8765 = !DILocation(line: 4089, column: 10, scope: !8756)
!8766 = !DILocation(line: 4089, column: 25, scope: !8756)
!8767 = !DILocation(line: 4091, column: 17, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 4091, column: 7)
!8769 = !DILocation(line: 4091, column: 23, scope: !8768)
!8770 = !DILocation(line: 4091, column: 7, scope: !8768)
!8771 = !DILocation(line: 4091, column: 7, scope: !8757)
!8772 = !DILocation(line: 4092, column: 41, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8768, file: !3, line: 4091, column: 30)
!8774 = !DILocation(line: 4092, column: 47, scope: !8773)
!8775 = !DILocation(line: 4092, column: 31, scope: !8773)
!8776 = !DILocation(line: 4092, column: 4, scope: !8773)
!8777 = !DILocation(line: 4092, column: 10, scope: !8773)
!8778 = !DILocation(line: 4092, column: 29, scope: !8773)
!8779 = !DILocation(line: 4093, column: 8, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8773, file: !3, line: 4093, column: 8)
!8781 = !DILocation(line: 4093, column: 14, scope: !8780)
!8782 = !DILocation(line: 4093, column: 33, scope: !8780)
!8783 = !DILocation(line: 4093, column: 8, scope: !8773)
!8784 = !DILocation(line: 4094, column: 5, scope: !8780)
!8785 = !DILocation(line: 4094, column: 11, scope: !8780)
!8786 = !DILocation(line: 4094, column: 30, scope: !8780)
!8787 = !DILocation(line: 4095, column: 3, scope: !8773)
!8788 = !DILocation(line: 4097, column: 18, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 4097, column: 7)
!8790 = !DILocation(line: 4097, column: 24, scope: !8789)
!8791 = !DILocation(line: 4097, column: 7, scope: !8789)
!8792 = !DILocation(line: 4097, column: 7, scope: !8757)
!8793 = !DILocation(line: 4098, column: 46, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8789, file: !3, line: 4097, column: 31)
!8795 = !DILocation(line: 4098, column: 52, scope: !8794)
!8796 = !DILocation(line: 4098, column: 35, scope: !8794)
!8797 = !DILocation(line: 4098, column: 4, scope: !8794)
!8798 = !DILocation(line: 4098, column: 10, scope: !8794)
!8799 = !DILocation(line: 4098, column: 33, scope: !8794)
!8800 = !DILocation(line: 4099, column: 8, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 4099, column: 8)
!8802 = !DILocation(line: 4099, column: 14, scope: !8801)
!8803 = !DILocation(line: 4099, column: 37, scope: !8801)
!8804 = !DILocation(line: 4099, column: 8, scope: !8794)
!8805 = !DILocation(line: 4100, column: 5, scope: !8801)
!8806 = !DILocation(line: 4100, column: 11, scope: !8801)
!8807 = !DILocation(line: 4100, column: 34, scope: !8801)
!8808 = !DILocation(line: 4101, column: 13, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 4101, column: 13)
!8810 = !DILocation(line: 4101, column: 19, scope: !8809)
!8811 = !DILocation(line: 4101, column: 42, scope: !8809)
!8812 = !DILocation(line: 4101, column: 13, scope: !8801)
!8813 = !DILocation(line: 4102, column: 5, scope: !8809)
!8814 = !DILocation(line: 4102, column: 11, scope: !8809)
!8815 = !DILocation(line: 4102, column: 34, scope: !8809)
!8816 = !DILocation(line: 4103, column: 3, scope: !8794)
!8817 = !DILocation(line: 4104, column: 2, scope: !8757)
!8818 = !DILocation(line: 4106, column: 19, scope: !8735)
!8819 = !DILocation(line: 4108, column: 8, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 4108, column: 7)
!8821 = !DILocation(line: 4108, column: 7, scope: !8735)
!8822 = !DILocation(line: 4109, column: 22, scope: !8820)
!8823 = !DILocation(line: 4109, column: 20, scope: !8820)
!8824 = !DILocation(line: 4109, column: 3, scope: !8820)
!8825 = !DILocalVariable(name: "current_dev", scope: !8826, file: !3, line: 4111, type: !7524)
!8826 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 4110, column: 7)
!8827 = !DILocation(line: 4111, column: 23, scope: !8826)
!8828 = !DILocation(line: 4111, column: 37, scope: !8826)
!8829 = !DILocation(line: 4112, column: 3, scope: !8826)
!8830 = !DILocation(line: 4112, column: 10, scope: !8826)
!8831 = !DILocation(line: 4112, column: 23, scope: !8826)
!8832 = !DILocation(line: 4113, column: 18, scope: !8826)
!8833 = !DILocation(line: 4113, column: 31, scope: !8826)
!8834 = !DILocation(line: 4113, column: 16, scope: !8826)
!8835 = distinct !{!8835, !8829, !8833}
!8836 = !DILocation(line: 4114, column: 30, scope: !8826)
!8837 = !DILocation(line: 4114, column: 3, scope: !8826)
!8838 = !DILocation(line: 4114, column: 16, scope: !8826)
!8839 = !DILocation(line: 4114, column: 28, scope: !8826)
!8840 = !DILocation(line: 4117, column: 7, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 4117, column: 7)
!8842 = !DILocation(line: 4117, column: 13, scope: !8841)
!8843 = !DILocation(line: 4117, column: 28, scope: !8841)
!8844 = !DILocation(line: 4117, column: 7, scope: !8735)
!8845 = !DILocation(line: 4118, column: 3, scope: !8841)
!8846 = !DILocation(line: 4118, column: 9, scope: !8841)
!8847 = !DILocation(line: 4118, column: 24, scope: !8841)
!8848 = !DILocation(line: 4119, column: 12, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8841, file: !3, line: 4119, column: 12)
!8850 = !DILocation(line: 4119, column: 18, scope: !8849)
!8851 = !DILocation(line: 4119, column: 33, scope: !8849)
!8852 = !DILocation(line: 4119, column: 12, scope: !8841)
!8853 = !DILocation(line: 4120, column: 3, scope: !8849)
!8854 = !DILocation(line: 4120, column: 9, scope: !8849)
!8855 = !DILocation(line: 4120, column: 24, scope: !8849)
!8856 = !DILocation(line: 4123, column: 3, scope: !8735)
!8857 = !DILocation(line: 4123, column: 9, scope: !8735)
!8858 = !DILocation(line: 4123, column: 20, scope: !8735)
!8859 = !DILocation(line: 4123, column: 25, scope: !8735)
!8860 = !DILocation(line: 4123, column: 31, scope: !8735)
!8861 = !DILocation(line: 4123, column: 44, scope: !8735)
!8862 = !DILocation(line: 4123, column: 50, scope: !8735)
!8863 = !DILocation(line: 4123, column: 59, scope: !8735)
!8864 = !DILocation(line: 4123, column: 65, scope: !8735)
!8865 = !DILocation(line: 4124, column: 3, scope: !8735)
!8866 = !DILocation(line: 4124, column: 9, scope: !8735)
!8867 = !DILocation(line: 4124, column: 27, scope: !8735)
!8868 = !DILocation(line: 4124, column: 33, scope: !8735)
!8869 = !DILocation(line: 4125, column: 8, scope: !8735)
!8870 = !DILocation(line: 4125, column: 14, scope: !8735)
!8871 = !DILocation(line: 4122, column: 2, scope: !8735)
!8872 = !DILocation(line: 4128, column: 15, scope: !8735)
!8873 = !DILocation(line: 4128, column: 2, scope: !8735)
!8874 = !DILocation(line: 4131, column: 1, scope: !8735)
!8875 = distinct !DISubprogram(name: "kzalloc", scope: !7506, file: !7506, line: 662, type: !8876, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8876 = !DISubroutineType(types: !8877)
!8877 = !{!591, !1039, !1742}
!8878 = !DILocalVariable(name: "s", arg: 1, scope: !8879, file: !7506, line: 445, type: !2051)
!8879 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7506, file: !7506, line: 445, type: !8880, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{!591, !2051, !1742, !1039}
!8882 = !DILocation(line: 445, column: 72, scope: !8879, inlinedAt: !8883)
!8883 = distinct !DILocation(line: 552, column: 10, scope: !8884, inlinedAt: !8887)
!8884 = distinct !DILexicalBlock(scope: !8885, file: !7506, line: 540, column: 34)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !7506, line: 540, column: 6)
!8886 = distinct !DISubprogram(name: "kmalloc", scope: !7506, file: !7506, line: 538, type: !8876, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8887 = distinct !DILocation(line: 664, column: 9, scope: !8875)
!8888 = !DILocalVariable(name: "flags", arg: 2, scope: !8879, file: !7506, line: 446, type: !1742)
!8889 = !DILocation(line: 446, column: 9, scope: !8879, inlinedAt: !8883)
!8890 = !DILocalVariable(name: "size", arg: 3, scope: !8879, file: !7506, line: 446, type: !1039)
!8891 = !DILocation(line: 446, column: 23, scope: !8879, inlinedAt: !8883)
!8892 = !DILocalVariable(name: "ret", scope: !8879, file: !7506, line: 448, type: !591)
!8893 = !DILocation(line: 448, column: 8, scope: !8879, inlinedAt: !8883)
!8894 = !DILocalVariable(name: "flags", arg: 1, scope: !8895, file: !7506, line: 318, type: !1742)
!8895 = distinct !DISubprogram(name: "kmalloc_type", scope: !7506, file: !7506, line: 318, type: !8896, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8896 = !DISubroutineType(types: !8897)
!8897 = !{!7505, !1742}
!8898 = !DILocation(line: 318, column: 67, scope: !8895, inlinedAt: !8899)
!8899 = distinct !DILocation(line: 553, column: 20, scope: !8884, inlinedAt: !8887)
!8900 = !DILocalVariable(name: "size", arg: 1, scope: !8901, file: !7506, line: 346, type: !1039)
!8901 = distinct !DISubprogram(name: "kmalloc_index", scope: !7506, file: !7506, line: 346, type: !8902, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8902 = !DISubroutineType(types: !8903)
!8903 = !{!7, !1039}
!8904 = !DILocation(line: 346, column: 58, scope: !8901, inlinedAt: !8905)
!8905 = distinct !DILocation(line: 547, column: 11, scope: !8884, inlinedAt: !8887)
!8906 = !DILocalVariable(name: "size", arg: 1, scope: !8907, file: !7506, line: 472, type: !1039)
!8907 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7506, file: !7506, line: 472, type: !8908, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8908 = !DISubroutineType(types: !8909)
!8909 = !{!591, !1039, !1742, !7}
!8910 = !DILocation(line: 472, column: 28, scope: !8907, inlinedAt: !8911)
!8911 = distinct !DILocation(line: 481, column: 9, scope: !8912, inlinedAt: !8913)
!8912 = distinct !DISubprogram(name: "kmalloc_large", scope: !7506, file: !7506, line: 478, type: !8876, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8913 = distinct !DILocation(line: 545, column: 11, scope: !8914, inlinedAt: !8887)
!8914 = distinct !DILexicalBlock(scope: !8884, file: !7506, line: 544, column: 7)
!8915 = !DILocalVariable(name: "flags", arg: 2, scope: !8907, file: !7506, line: 472, type: !1742)
!8916 = !DILocation(line: 472, column: 40, scope: !8907, inlinedAt: !8911)
!8917 = !DILocalVariable(name: "order", arg: 3, scope: !8907, file: !7506, line: 472, type: !7)
!8918 = !DILocation(line: 472, column: 60, scope: !8907, inlinedAt: !8911)
!8919 = !DILocalVariable(name: "size", arg: 1, scope: !8912, file: !7506, line: 478, type: !1039)
!8920 = !DILocation(line: 478, column: 51, scope: !8912, inlinedAt: !8913)
!8921 = !DILocalVariable(name: "flags", arg: 2, scope: !8912, file: !7506, line: 478, type: !1742)
!8922 = !DILocation(line: 478, column: 63, scope: !8912, inlinedAt: !8913)
!8923 = !DILocalVariable(name: "order", scope: !8912, file: !7506, line: 480, type: !7)
!8924 = !DILocation(line: 480, column: 15, scope: !8912, inlinedAt: !8913)
!8925 = !DILocalVariable(name: "size", arg: 1, scope: !8886, file: !7506, line: 538, type: !1039)
!8926 = !DILocation(line: 538, column: 45, scope: !8886, inlinedAt: !8887)
!8927 = !DILocalVariable(name: "flags", arg: 2, scope: !8886, file: !7506, line: 538, type: !1742)
!8928 = !DILocation(line: 538, column: 57, scope: !8886, inlinedAt: !8887)
!8929 = !DILocalVariable(name: "index", scope: !8884, file: !7506, line: 542, type: !7)
!8930 = !DILocation(line: 542, column: 16, scope: !8884, inlinedAt: !8887)
!8931 = !DILocalVariable(name: "size", arg: 1, scope: !8875, file: !7506, line: 662, type: !1039)
!8932 = !DILocation(line: 662, column: 36, scope: !8875)
!8933 = !DILocalVariable(name: "flags", arg: 2, scope: !8875, file: !7506, line: 662, type: !1742)
!8934 = !DILocation(line: 662, column: 48, scope: !8875)
!8935 = !DILocation(line: 664, column: 17, scope: !8875)
!8936 = !DILocation(line: 664, column: 23, scope: !8875)
!8937 = !DILocation(line: 664, column: 29, scope: !8875)
!8938 = !DILocation(line: 540, column: 27, scope: !8885, inlinedAt: !8887)
!8939 = !DILocation(line: 540, column: 6, scope: !8885, inlinedAt: !8887)
!8940 = !DILocation(line: 540, column: 6, scope: !8886, inlinedAt: !8887)
!8941 = !DILocation(line: 544, column: 7, scope: !8914, inlinedAt: !8887)
!8942 = !DILocation(line: 544, column: 12, scope: !8914, inlinedAt: !8887)
!8943 = !DILocation(line: 544, column: 7, scope: !8884, inlinedAt: !8887)
!8944 = !DILocation(line: 545, column: 25, scope: !8914, inlinedAt: !8887)
!8945 = !DILocation(line: 545, column: 31, scope: !8914, inlinedAt: !8887)
!8946 = !DILocation(line: 480, column: 33, scope: !8912, inlinedAt: !8913)
!8947 = !DILocation(line: 480, column: 23, scope: !8912, inlinedAt: !8913)
!8948 = !DILocation(line: 481, column: 29, scope: !8912, inlinedAt: !8913)
!8949 = !DILocation(line: 481, column: 35, scope: !8912, inlinedAt: !8913)
!8950 = !DILocation(line: 481, column: 42, scope: !8912, inlinedAt: !8913)
!8951 = !DILocation(line: 474, column: 23, scope: !8907, inlinedAt: !8911)
!8952 = !DILocation(line: 474, column: 29, scope: !8907, inlinedAt: !8911)
!8953 = !DILocation(line: 474, column: 36, scope: !8907, inlinedAt: !8911)
!8954 = !DILocation(line: 474, column: 9, scope: !8907, inlinedAt: !8911)
!8955 = !DILocation(line: 545, column: 4, scope: !8914, inlinedAt: !8887)
!8956 = !DILocation(line: 547, column: 25, scope: !8884, inlinedAt: !8887)
!8957 = !DILocation(line: 348, column: 7, scope: !8958, inlinedAt: !8905)
!8958 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 348, column: 6)
!8959 = !DILocation(line: 348, column: 6, scope: !8901, inlinedAt: !8905)
!8960 = !DILocation(line: 349, column: 3, scope: !8958, inlinedAt: !8905)
!8961 = !DILocation(line: 351, column: 6, scope: !8962, inlinedAt: !8905)
!8962 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 351, column: 6)
!8963 = !DILocation(line: 351, column: 11, scope: !8962, inlinedAt: !8905)
!8964 = !DILocation(line: 351, column: 6, scope: !8901, inlinedAt: !8905)
!8965 = !DILocation(line: 352, column: 3, scope: !8962, inlinedAt: !8905)
!8966 = !DILocation(line: 354, column: 32, scope: !8967, inlinedAt: !8905)
!8967 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 354, column: 6)
!8968 = !DILocation(line: 354, column: 37, scope: !8967, inlinedAt: !8905)
!8969 = !DILocation(line: 354, column: 42, scope: !8967, inlinedAt: !8905)
!8970 = !DILocation(line: 354, column: 45, scope: !8967, inlinedAt: !8905)
!8971 = !DILocation(line: 354, column: 50, scope: !8967, inlinedAt: !8905)
!8972 = !DILocation(line: 354, column: 6, scope: !8901, inlinedAt: !8905)
!8973 = !DILocation(line: 355, column: 3, scope: !8967, inlinedAt: !8905)
!8974 = !DILocation(line: 356, column: 32, scope: !8975, inlinedAt: !8905)
!8975 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 356, column: 6)
!8976 = !DILocation(line: 356, column: 37, scope: !8975, inlinedAt: !8905)
!8977 = !DILocation(line: 356, column: 43, scope: !8975, inlinedAt: !8905)
!8978 = !DILocation(line: 356, column: 46, scope: !8975, inlinedAt: !8905)
!8979 = !DILocation(line: 356, column: 51, scope: !8975, inlinedAt: !8905)
!8980 = !DILocation(line: 356, column: 6, scope: !8901, inlinedAt: !8905)
!8981 = !DILocation(line: 357, column: 3, scope: !8975, inlinedAt: !8905)
!8982 = !DILocation(line: 358, column: 6, scope: !8983, inlinedAt: !8905)
!8983 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 358, column: 6)
!8984 = !DILocation(line: 358, column: 11, scope: !8983, inlinedAt: !8905)
!8985 = !DILocation(line: 358, column: 6, scope: !8901, inlinedAt: !8905)
!8986 = !DILocation(line: 358, column: 26, scope: !8983, inlinedAt: !8905)
!8987 = !DILocation(line: 359, column: 6, scope: !8988, inlinedAt: !8905)
!8988 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 359, column: 6)
!8989 = !DILocation(line: 359, column: 11, scope: !8988, inlinedAt: !8905)
!8990 = !DILocation(line: 359, column: 6, scope: !8901, inlinedAt: !8905)
!8991 = !DILocation(line: 359, column: 26, scope: !8988, inlinedAt: !8905)
!8992 = !DILocation(line: 360, column: 6, scope: !8993, inlinedAt: !8905)
!8993 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 360, column: 6)
!8994 = !DILocation(line: 360, column: 11, scope: !8993, inlinedAt: !8905)
!8995 = !DILocation(line: 360, column: 6, scope: !8901, inlinedAt: !8905)
!8996 = !DILocation(line: 360, column: 26, scope: !8993, inlinedAt: !8905)
!8997 = !DILocation(line: 361, column: 6, scope: !8998, inlinedAt: !8905)
!8998 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 361, column: 6)
!8999 = !DILocation(line: 361, column: 11, scope: !8998, inlinedAt: !8905)
!9000 = !DILocation(line: 361, column: 6, scope: !8901, inlinedAt: !8905)
!9001 = !DILocation(line: 361, column: 26, scope: !8998, inlinedAt: !8905)
!9002 = !DILocation(line: 362, column: 6, scope: !9003, inlinedAt: !8905)
!9003 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 362, column: 6)
!9004 = !DILocation(line: 362, column: 11, scope: !9003, inlinedAt: !8905)
!9005 = !DILocation(line: 362, column: 6, scope: !8901, inlinedAt: !8905)
!9006 = !DILocation(line: 362, column: 26, scope: !9003, inlinedAt: !8905)
!9007 = !DILocation(line: 363, column: 6, scope: !9008, inlinedAt: !8905)
!9008 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 363, column: 6)
!9009 = !DILocation(line: 363, column: 11, scope: !9008, inlinedAt: !8905)
!9010 = !DILocation(line: 363, column: 6, scope: !8901, inlinedAt: !8905)
!9011 = !DILocation(line: 363, column: 26, scope: !9008, inlinedAt: !8905)
!9012 = !DILocation(line: 364, column: 6, scope: !9013, inlinedAt: !8905)
!9013 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 364, column: 6)
!9014 = !DILocation(line: 364, column: 11, scope: !9013, inlinedAt: !8905)
!9015 = !DILocation(line: 364, column: 6, scope: !8901, inlinedAt: !8905)
!9016 = !DILocation(line: 364, column: 26, scope: !9013, inlinedAt: !8905)
!9017 = !DILocation(line: 365, column: 6, scope: !9018, inlinedAt: !8905)
!9018 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 365, column: 6)
!9019 = !DILocation(line: 365, column: 11, scope: !9018, inlinedAt: !8905)
!9020 = !DILocation(line: 365, column: 6, scope: !8901, inlinedAt: !8905)
!9021 = !DILocation(line: 365, column: 26, scope: !9018, inlinedAt: !8905)
!9022 = !DILocation(line: 366, column: 6, scope: !9023, inlinedAt: !8905)
!9023 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 366, column: 6)
!9024 = !DILocation(line: 366, column: 11, scope: !9023, inlinedAt: !8905)
!9025 = !DILocation(line: 366, column: 6, scope: !8901, inlinedAt: !8905)
!9026 = !DILocation(line: 366, column: 26, scope: !9023, inlinedAt: !8905)
!9027 = !DILocation(line: 367, column: 6, scope: !9028, inlinedAt: !8905)
!9028 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 367, column: 6)
!9029 = !DILocation(line: 367, column: 11, scope: !9028, inlinedAt: !8905)
!9030 = !DILocation(line: 367, column: 6, scope: !8901, inlinedAt: !8905)
!9031 = !DILocation(line: 367, column: 26, scope: !9028, inlinedAt: !8905)
!9032 = !DILocation(line: 368, column: 6, scope: !9033, inlinedAt: !8905)
!9033 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 368, column: 6)
!9034 = !DILocation(line: 368, column: 11, scope: !9033, inlinedAt: !8905)
!9035 = !DILocation(line: 368, column: 6, scope: !8901, inlinedAt: !8905)
!9036 = !DILocation(line: 368, column: 26, scope: !9033, inlinedAt: !8905)
!9037 = !DILocation(line: 369, column: 6, scope: !9038, inlinedAt: !8905)
!9038 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 369, column: 6)
!9039 = !DILocation(line: 369, column: 11, scope: !9038, inlinedAt: !8905)
!9040 = !DILocation(line: 369, column: 6, scope: !8901, inlinedAt: !8905)
!9041 = !DILocation(line: 369, column: 26, scope: !9038, inlinedAt: !8905)
!9042 = !DILocation(line: 370, column: 6, scope: !9043, inlinedAt: !8905)
!9043 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 370, column: 6)
!9044 = !DILocation(line: 370, column: 11, scope: !9043, inlinedAt: !8905)
!9045 = !DILocation(line: 370, column: 6, scope: !8901, inlinedAt: !8905)
!9046 = !DILocation(line: 370, column: 26, scope: !9043, inlinedAt: !8905)
!9047 = !DILocation(line: 371, column: 6, scope: !9048, inlinedAt: !8905)
!9048 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 371, column: 6)
!9049 = !DILocation(line: 371, column: 11, scope: !9048, inlinedAt: !8905)
!9050 = !DILocation(line: 371, column: 6, scope: !8901, inlinedAt: !8905)
!9051 = !DILocation(line: 371, column: 26, scope: !9048, inlinedAt: !8905)
!9052 = !DILocation(line: 372, column: 6, scope: !9053, inlinedAt: !8905)
!9053 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 372, column: 6)
!9054 = !DILocation(line: 372, column: 11, scope: !9053, inlinedAt: !8905)
!9055 = !DILocation(line: 372, column: 6, scope: !8901, inlinedAt: !8905)
!9056 = !DILocation(line: 372, column: 26, scope: !9053, inlinedAt: !8905)
!9057 = !DILocation(line: 373, column: 6, scope: !9058, inlinedAt: !8905)
!9058 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 373, column: 6)
!9059 = !DILocation(line: 373, column: 11, scope: !9058, inlinedAt: !8905)
!9060 = !DILocation(line: 373, column: 6, scope: !8901, inlinedAt: !8905)
!9061 = !DILocation(line: 373, column: 26, scope: !9058, inlinedAt: !8905)
!9062 = !DILocation(line: 374, column: 6, scope: !9063, inlinedAt: !8905)
!9063 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 374, column: 6)
!9064 = !DILocation(line: 374, column: 11, scope: !9063, inlinedAt: !8905)
!9065 = !DILocation(line: 374, column: 6, scope: !8901, inlinedAt: !8905)
!9066 = !DILocation(line: 374, column: 26, scope: !9063, inlinedAt: !8905)
!9067 = !DILocation(line: 375, column: 6, scope: !9068, inlinedAt: !8905)
!9068 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 375, column: 6)
!9069 = !DILocation(line: 375, column: 11, scope: !9068, inlinedAt: !8905)
!9070 = !DILocation(line: 375, column: 6, scope: !8901, inlinedAt: !8905)
!9071 = !DILocation(line: 375, column: 27, scope: !9068, inlinedAt: !8905)
!9072 = !DILocation(line: 376, column: 6, scope: !9073, inlinedAt: !8905)
!9073 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 376, column: 6)
!9074 = !DILocation(line: 376, column: 11, scope: !9073, inlinedAt: !8905)
!9075 = !DILocation(line: 376, column: 6, scope: !8901, inlinedAt: !8905)
!9076 = !DILocation(line: 376, column: 32, scope: !9073, inlinedAt: !8905)
!9077 = !DILocation(line: 377, column: 6, scope: !9078, inlinedAt: !8905)
!9078 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 377, column: 6)
!9079 = !DILocation(line: 377, column: 11, scope: !9078, inlinedAt: !8905)
!9080 = !DILocation(line: 377, column: 6, scope: !8901, inlinedAt: !8905)
!9081 = !DILocation(line: 377, column: 32, scope: !9078, inlinedAt: !8905)
!9082 = !DILocation(line: 378, column: 6, scope: !9083, inlinedAt: !8905)
!9083 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 378, column: 6)
!9084 = !DILocation(line: 378, column: 11, scope: !9083, inlinedAt: !8905)
!9085 = !DILocation(line: 378, column: 6, scope: !8901, inlinedAt: !8905)
!9086 = !DILocation(line: 378, column: 32, scope: !9083, inlinedAt: !8905)
!9087 = !DILocation(line: 379, column: 6, scope: !9088, inlinedAt: !8905)
!9088 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 379, column: 6)
!9089 = !DILocation(line: 379, column: 11, scope: !9088, inlinedAt: !8905)
!9090 = !DILocation(line: 379, column: 6, scope: !8901, inlinedAt: !8905)
!9091 = !DILocation(line: 379, column: 33, scope: !9088, inlinedAt: !8905)
!9092 = !DILocation(line: 380, column: 6, scope: !9093, inlinedAt: !8905)
!9093 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 380, column: 6)
!9094 = !DILocation(line: 380, column: 11, scope: !9093, inlinedAt: !8905)
!9095 = !DILocation(line: 380, column: 6, scope: !8901, inlinedAt: !8905)
!9096 = !DILocation(line: 380, column: 33, scope: !9093, inlinedAt: !8905)
!9097 = !DILocation(line: 381, column: 6, scope: !9098, inlinedAt: !8905)
!9098 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 381, column: 6)
!9099 = !DILocation(line: 381, column: 11, scope: !9098, inlinedAt: !8905)
!9100 = !DILocation(line: 381, column: 6, scope: !8901, inlinedAt: !8905)
!9101 = !DILocation(line: 381, column: 33, scope: !9098, inlinedAt: !8905)
!9102 = !DILocation(line: 382, column: 2, scope: !9103, inlinedAt: !8905)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !7506, line: 382, column: 2)
!9104 = distinct !DILexicalBlock(scope: !8901, file: !7506, line: 382, column: 2)
!9105 = !{i32 -2143029658, i32 -2143029629, i32 -2143029583, i32 -2143029525, i32 -2143029471, i32 -2143029417, i32 -2143029362, i32 -2143029331}
!9106 = !DILocation(line: 382, column: 2, scope: !9107, inlinedAt: !8905)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !7506, line: 382, column: 2)
!9108 = distinct !DILexicalBlock(scope: !9104, file: !7506, line: 382, column: 2)
!9109 = !{i32 -2143028888, i32 -2143028881, i32 -2143028827, i32 -2143028796, i32 -2143028766}
!9110 = !DILocation(line: 382, column: 2, scope: !9108, inlinedAt: !8905)
!9111 = !DILocation(line: 386, column: 1, scope: !8901, inlinedAt: !8905)
!9112 = !DILocation(line: 547, column: 9, scope: !8884, inlinedAt: !8887)
!9113 = !DILocation(line: 549, column: 8, scope: !9114, inlinedAt: !8887)
!9114 = distinct !DILexicalBlock(scope: !8884, file: !7506, line: 549, column: 7)
!9115 = !DILocation(line: 549, column: 7, scope: !8884, inlinedAt: !8887)
!9116 = !DILocation(line: 550, column: 4, scope: !9114, inlinedAt: !8887)
!9117 = !DILocation(line: 553, column: 33, scope: !8884, inlinedAt: !8887)
!9118 = !DILocation(line: 325, column: 6, scope: !9119, inlinedAt: !8899)
!9119 = distinct !DILexicalBlock(scope: !8895, file: !7506, line: 325, column: 6)
!9120 = !DILocation(line: 325, column: 6, scope: !8895, inlinedAt: !8899)
!9121 = !DILocation(line: 326, column: 3, scope: !9119, inlinedAt: !8899)
!9122 = !DILocation(line: 332, column: 9, scope: !8895, inlinedAt: !8899)
!9123 = !DILocation(line: 332, column: 15, scope: !8895, inlinedAt: !8899)
!9124 = !DILocation(line: 332, column: 2, scope: !8895, inlinedAt: !8899)
!9125 = !DILocation(line: 336, column: 1, scope: !8895, inlinedAt: !8899)
!9126 = !DILocation(line: 553, column: 5, scope: !8884, inlinedAt: !8887)
!9127 = !DILocation(line: 553, column: 41, scope: !8884, inlinedAt: !8887)
!9128 = !DILocation(line: 554, column: 5, scope: !8884, inlinedAt: !8887)
!9129 = !DILocation(line: 554, column: 12, scope: !8884, inlinedAt: !8887)
!9130 = !DILocation(line: 448, column: 31, scope: !8879, inlinedAt: !8883)
!9131 = !DILocation(line: 448, column: 34, scope: !8879, inlinedAt: !8883)
!9132 = !DILocation(line: 448, column: 14, scope: !8879, inlinedAt: !8883)
!9133 = !DILocation(line: 450, column: 22, scope: !8879, inlinedAt: !8883)
!9134 = !DILocation(line: 450, column: 25, scope: !8879, inlinedAt: !8883)
!9135 = !DILocation(line: 450, column: 30, scope: !8879, inlinedAt: !8883)
!9136 = !DILocation(line: 450, column: 36, scope: !8879, inlinedAt: !8883)
!9137 = !DILocation(line: 450, column: 8, scope: !8879, inlinedAt: !8883)
!9138 = !DILocation(line: 450, column: 6, scope: !8879, inlinedAt: !8883)
!9139 = !DILocation(line: 451, column: 9, scope: !8879, inlinedAt: !8883)
!9140 = !DILocation(line: 552, column: 3, scope: !8884, inlinedAt: !8887)
!9141 = !DILocation(line: 557, column: 19, scope: !8886, inlinedAt: !8887)
!9142 = !DILocation(line: 557, column: 25, scope: !8886, inlinedAt: !8887)
!9143 = !DILocation(line: 557, column: 9, scope: !8886, inlinedAt: !8887)
!9144 = !DILocation(line: 557, column: 2, scope: !8886, inlinedAt: !8887)
!9145 = !DILocation(line: 558, column: 1, scope: !8886, inlinedAt: !8887)
!9146 = !DILocation(line: 664, column: 2, scope: !8875)
!9147 = distinct !DISubprogram(name: "__init_work", scope: !2765, file: !2765, line: 215, type: !9148, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9148 = !DISubroutineType(types: !9149)
!9149 = !{null, !2774, !32}
!9150 = !DILocalVariable(name: "work", arg: 1, scope: !9147, file: !2765, line: 215, type: !2774)
!9151 = !DILocation(line: 215, column: 52, scope: !9147)
!9152 = !DILocalVariable(name: "onstack", arg: 2, scope: !9147, file: !2765, line: 215, type: !32)
!9153 = !DILocation(line: 215, column: 62, scope: !9147)
!9154 = !DILocation(line: 215, column: 73, scope: !9147)
!9155 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !9156, file: !9156, line: 33, type: !9157, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9156 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!9157 = !DISubroutineType(types: !9158)
!9158 = !{null, !287}
!9159 = !DILocalVariable(name: "list", arg: 1, scope: !9155, file: !9156, line: 33, type: !287)
!9160 = !DILocation(line: 33, column: 53, scope: !9155)
!9161 = !DILocation(line: 35, column: 2, scope: !9155)
!9162 = !DILocation(line: 35, column: 2, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9155, file: !9156, line: 35, column: 2)
!9164 = !DILocation(line: 35, column: 2, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9163, file: !9156, line: 35, column: 2)
!9166 = !DILocation(line: 35, column: 2, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9163, file: !9156, line: 35, column: 2)
!9168 = !DILocation(line: 36, column: 15, scope: !9155)
!9169 = !DILocation(line: 36, column: 2, scope: !9155)
!9170 = !DILocation(line: 36, column: 8, scope: !9155)
!9171 = !DILocation(line: 36, column: 13, scope: !9155)
!9172 = !DILocation(line: 37, column: 1, scope: !9155)
!9173 = distinct !DISubprogram(name: "mgsl_bh_handler", scope: !3, file: !3, line: 1053, type: !2772, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9174 = !DILocalVariable(name: "work", arg: 1, scope: !9173, file: !3, line: 1053, type: !2774)
!9175 = !DILocation(line: 1053, column: 49, scope: !9173)
!9176 = !DILocalVariable(name: "info", scope: !9173, file: !3, line: 1055, type: !7524)
!9177 = !DILocation(line: 1055, column: 22, scope: !9173)
!9178 = !DILocalVariable(name: "__mptr", scope: !9179, file: !3, line: 1056, type: !591)
!9179 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 1056, column: 3)
!9180 = !DILocation(line: 1056, column: 3, scope: !9179)
!9181 = !DILocation(line: 1056, column: 3, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 1056, column: 3)
!9183 = !DILocalVariable(name: "action", scope: !9173, file: !3, line: 1057, type: !32)
!9184 = !DILocation(line: 1057, column: 6, scope: !9173)
!9185 = !DILocation(line: 1059, column: 7, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 1059, column: 7)
!9187 = !DILocation(line: 1059, column: 19, scope: !9186)
!9188 = !DILocation(line: 1059, column: 7, scope: !9173)
!9189 = !DILocation(line: 1061, column: 22, scope: !9186)
!9190 = !DILocation(line: 1061, column: 28, scope: !9186)
!9191 = !DILocation(line: 1060, column: 3, scope: !9186)
!9192 = !DILocation(line: 1063, column: 2, scope: !9173)
!9193 = !DILocation(line: 1063, column: 8, scope: !9173)
!9194 = !DILocation(line: 1063, column: 19, scope: !9173)
!9195 = !DILocation(line: 1065, column: 2, scope: !9173)
!9196 = !DILocation(line: 1065, column: 33, scope: !9173)
!9197 = !DILocation(line: 1065, column: 18, scope: !9173)
!9198 = !DILocation(line: 1065, column: 16, scope: !9173)
!9199 = !DILocation(line: 1065, column: 40, scope: !9173)
!9200 = !DILocation(line: 1068, column: 8, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 1068, column: 8)
!9202 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 1065, column: 46)
!9203 = !DILocation(line: 1068, column: 20, scope: !9201)
!9204 = !DILocation(line: 1068, column: 8, scope: !9202)
!9205 = !DILocation(line: 1070, column: 23, scope: !9201)
!9206 = !DILocation(line: 1069, column: 4, scope: !9201)
!9207 = !DILocation(line: 1072, column: 11, scope: !9202)
!9208 = !DILocation(line: 1072, column: 3, scope: !9202)
!9209 = !DILocation(line: 1075, column: 20, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 1072, column: 19)
!9211 = !DILocation(line: 1075, column: 4, scope: !9210)
!9212 = !DILocation(line: 1076, column: 4, scope: !9210)
!9213 = !DILocation(line: 1078, column: 21, scope: !9210)
!9214 = !DILocation(line: 1078, column: 4, scope: !9210)
!9215 = !DILocation(line: 1079, column: 4, scope: !9210)
!9216 = !DILocation(line: 1081, column: 19, scope: !9210)
!9217 = !DILocation(line: 1081, column: 4, scope: !9210)
!9218 = !DILocation(line: 1082, column: 4, scope: !9210)
!9219 = !DILocation(line: 1085, column: 43, scope: !9210)
!9220 = !DILocation(line: 1085, column: 4, scope: !9210)
!9221 = !DILocation(line: 1086, column: 4, scope: !9210)
!9222 = distinct !{!9222, !9195, !9223}
!9223 = !DILocation(line: 1088, column: 2, scope: !9173)
!9224 = !DILocation(line: 1090, column: 7, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 1090, column: 7)
!9226 = !DILocation(line: 1090, column: 19, scope: !9225)
!9227 = !DILocation(line: 1090, column: 7, scope: !9173)
!9228 = !DILocation(line: 1092, column: 22, scope: !9225)
!9229 = !DILocation(line: 1092, column: 28, scope: !9225)
!9230 = !DILocation(line: 1091, column: 3, scope: !9225)
!9231 = !DILocation(line: 1093, column: 1, scope: !9173)
!9232 = distinct !DISubprogram(name: "get_order", scope: !9233, file: !9233, line: 29, type: !9234, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9233 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9234 = !DISubroutineType(types: !9235)
!9235 = !{!32, !312}
!9236 = !DILocalVariable(name: "x", arg: 1, scope: !9237, file: !9238, line: 366, type: !333)
!9237 = distinct !DISubprogram(name: "fls64", scope: !9238, file: !9238, line: 366, type: !9239, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9238 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9239 = !DISubroutineType(types: !9240)
!9240 = !{!32, !333}
!9241 = !DILocation(line: 366, column: 40, scope: !9237, inlinedAt: !9242)
!9242 = distinct !DILocation(line: 46, column: 9, scope: !9232)
!9243 = !DILocalVariable(name: "bitpos", scope: !9237, file: !9238, line: 368, type: !32)
!9244 = !DILocation(line: 368, column: 6, scope: !9237, inlinedAt: !9242)
!9245 = !DILocalVariable(name: "size", arg: 1, scope: !9232, file: !9233, line: 29, type: !312)
!9246 = !DILocation(line: 29, column: 63, scope: !9232)
!9247 = !DILocation(line: 31, column: 27, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9232, file: !9233, line: 31, column: 6)
!9249 = !DILocation(line: 31, column: 6, scope: !9248)
!9250 = !DILocation(line: 31, column: 6, scope: !9232)
!9251 = !DILocation(line: 32, column: 8, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9253, file: !9233, line: 32, column: 7)
!9253 = distinct !DILexicalBlock(scope: !9248, file: !9233, line: 31, column: 34)
!9254 = !DILocation(line: 32, column: 7, scope: !9253)
!9255 = !DILocation(line: 33, column: 4, scope: !9252)
!9256 = !DILocation(line: 35, column: 7, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9253, file: !9233, line: 35, column: 7)
!9258 = !DILocation(line: 35, column: 12, scope: !9257)
!9259 = !DILocation(line: 35, column: 7, scope: !9253)
!9260 = !DILocation(line: 36, column: 4, scope: !9257)
!9261 = !DILocation(line: 38, column: 10, scope: !9253)
!9262 = !DILocation(line: 38, column: 28, scope: !9253)
!9263 = !DILocation(line: 38, column: 41, scope: !9253)
!9264 = !DILocation(line: 38, column: 3, scope: !9253)
!9265 = !DILocation(line: 41, column: 6, scope: !9232)
!9266 = !DILocation(line: 42, column: 7, scope: !9232)
!9267 = !DILocation(line: 46, column: 15, scope: !9232)
!9268 = !DILocation(line: 374, column: 2, scope: !9237, inlinedAt: !9242)
!9269 = !DILocation(line: 376, column: 14, scope: !9237, inlinedAt: !9242)
!9270 = !{i32 524859}
!9271 = !DILocation(line: 377, column: 9, scope: !9237, inlinedAt: !9242)
!9272 = !DILocation(line: 377, column: 16, scope: !9237, inlinedAt: !9242)
!9273 = !DILocation(line: 46, column: 2, scope: !9232)
!9274 = !DILocation(line: 48, column: 1, scope: !9232)
!9275 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9276, file: !9276, line: 30, type: !9277, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9276 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9277 = !DISubroutineType(types: !9278)
!9278 = !{!32, !331}
!9279 = !DILocation(line: 366, column: 40, scope: !9237, inlinedAt: !9280)
!9280 = distinct !DILocation(line: 32, column: 9, scope: !9275)
!9281 = !DILocation(line: 368, column: 6, scope: !9237, inlinedAt: !9280)
!9282 = !DILocalVariable(name: "n", arg: 1, scope: !9275, file: !9276, line: 30, type: !331)
!9283 = !DILocation(line: 30, column: 21, scope: !9275)
!9284 = !DILocation(line: 32, column: 15, scope: !9275)
!9285 = !DILocation(line: 374, column: 2, scope: !9237, inlinedAt: !9280)
!9286 = !DILocation(line: 376, column: 14, scope: !9237, inlinedAt: !9280)
!9287 = !DILocation(line: 377, column: 9, scope: !9237, inlinedAt: !9280)
!9288 = !DILocation(line: 377, column: 16, scope: !9237, inlinedAt: !9280)
!9289 = !DILocation(line: 32, column: 18, scope: !9275)
!9290 = !DILocation(line: 32, column: 2, scope: !9275)
!9291 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !9292, file: !9292, line: 137, type: !9293, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9292 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!9293 = !DISubroutineType(types: !9294)
!9294 = !{!591, !2051, !3276, !1039, !1742}
!9295 = !DILocalVariable(name: "s", arg: 1, scope: !9291, file: !9292, line: 137, type: !2051)
!9296 = !DILocation(line: 137, column: 54, scope: !9291)
!9297 = !DILocalVariable(name: "object", arg: 2, scope: !9291, file: !9292, line: 137, type: !3276)
!9298 = !DILocation(line: 137, column: 69, scope: !9291)
!9299 = !DILocalVariable(name: "size", arg: 3, scope: !9291, file: !9292, line: 138, type: !1039)
!9300 = !DILocation(line: 138, column: 12, scope: !9291)
!9301 = !DILocalVariable(name: "flags", arg: 4, scope: !9291, file: !9292, line: 138, type: !1742)
!9302 = !DILocation(line: 138, column: 24, scope: !9291)
!9303 = !DILocation(line: 140, column: 17, scope: !9291)
!9304 = !DILocation(line: 140, column: 2, scope: !9291)
!9305 = distinct !DISubprogram(name: "carrier_raised", scope: !3, file: !3, line: 3207, type: !4808, scopeLine: 3208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9306 = !DILocalVariable(name: "lock", arg: 1, scope: !9307, file: !8662, line: 407, type: !2181)
!9307 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !8662, file: !8662, line: 407, type: !9308, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9308 = !DISubroutineType(types: !9309)
!9309 = !{null, !2181, !312}
!9310 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !9311)
!9311 = distinct !DILocation(line: 3214, column: 2, scope: !9305)
!9312 = !DILocalVariable(name: "flags", arg: 2, scope: !9307, file: !8662, line: 407, type: !312)
!9313 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !9311)
!9314 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !9315)
!9315 = distinct !DILocation(line: 3212, column: 2, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 3212, column: 2)
!9317 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 3212, column: 2)
!9318 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 3212, column: 2)
!9319 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 3212, column: 2)
!9320 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 3212, column: 2)
!9321 = !DILocalVariable(name: "port", arg: 1, scope: !9305, file: !3, line: 3207, type: !4766)
!9322 = !DILocation(line: 3207, column: 44, scope: !9305)
!9323 = !DILocalVariable(name: "flags", scope: !9305, file: !3, line: 3209, type: !312)
!9324 = !DILocation(line: 3209, column: 16, scope: !9305)
!9325 = !DILocalVariable(name: "info", scope: !9305, file: !3, line: 3210, type: !7524)
!9326 = !DILocation(line: 3210, column: 22, scope: !9305)
!9327 = !DILocalVariable(name: "__mptr", scope: !9328, file: !3, line: 3210, type: !591)
!9328 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 3210, column: 29)
!9329 = !DILocation(line: 3210, column: 29, scope: !9328)
!9330 = !DILocation(line: 3210, column: 29, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 3210, column: 29)
!9332 = !DILocation(line: 3212, column: 2, scope: !9305)
!9333 = !DILocation(line: 3212, column: 2, scope: !9320)
!9334 = !DILocalVariable(name: "__dummy", scope: !9335, file: !3, line: 3212, type: !312)
!9335 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 3212, column: 2)
!9336 = !DILocation(line: 3212, column: 2, scope: !9335)
!9337 = !DILocalVariable(name: "__dummy2", scope: !9335, file: !3, line: 3212, type: !312)
!9338 = !DILocation(line: 3212, column: 2, scope: !9319)
!9339 = !DILocation(line: 3212, column: 2, scope: !9318)
!9340 = !DILocation(line: 3212, column: 2, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9318, file: !3, line: 3212, column: 2)
!9342 = !DILocalVariable(name: "__dummy", scope: !9343, file: !3, line: 3212, type: !312)
!9343 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 3212, column: 2)
!9344 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 3212, column: 2)
!9345 = !DILocation(line: 3212, column: 2, scope: !9343)
!9346 = !DILocalVariable(name: "__dummy2", scope: !9343, file: !3, line: 3212, type: !312)
!9347 = !DILocation(line: 3212, column: 2, scope: !9344)
!9348 = !DILocation(line: 3212, column: 2, scope: !9317)
!9349 = !{i32 -2139384994}
!9350 = !DILocation(line: 3212, column: 2, scope: !9316)
!9351 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !9315)
!9352 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !9315)
!9353 = !DILocation(line: 3213, column: 26, scope: !9305)
!9354 = !DILocation(line: 3213, column: 3, scope: !9305)
!9355 = !DILocation(line: 3214, column: 26, scope: !9305)
!9356 = !DILocation(line: 3214, column: 32, scope: !9305)
!9357 = !DILocation(line: 3214, column: 46, scope: !9305)
!9358 = !DILocalVariable(name: "__dummy", scope: !9359, file: !8662, line: 409, type: !312)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !8662, line: 409, column: 2)
!9360 = distinct !DILexicalBlock(scope: !9307, file: !8662, line: 409, column: 2)
!9361 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !9311)
!9362 = !DILocalVariable(name: "__dummy2", scope: !9359, file: !8662, line: 409, type: !312)
!9363 = !DILocalVariable(name: "__dummy", scope: !9364, file: !8662, line: 409, type: !312)
!9364 = distinct !DILexicalBlock(scope: !9365, file: !8662, line: 409, column: 2)
!9365 = distinct !DILexicalBlock(scope: !9366, file: !8662, line: 409, column: 2)
!9366 = distinct !DILexicalBlock(scope: !9367, file: !8662, line: 409, column: 2)
!9367 = distinct !DILexicalBlock(scope: !9360, file: !8662, line: 409, column: 2)
!9368 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !9311)
!9369 = !DILocalVariable(name: "__dummy2", scope: !9364, file: !8662, line: 409, type: !312)
!9370 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !9311)
!9371 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !9311)
!9372 = distinct !DILexicalBlock(scope: !9367, file: !8662, line: 409, column: 2)
!9373 = !{i32 -2145249531}
!9374 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !9311)
!9375 = distinct !DILexicalBlock(scope: !9372, file: !8662, line: 409, column: 2)
!9376 = !DILocation(line: 3215, column: 10, scope: !9305)
!9377 = !DILocation(line: 3215, column: 16, scope: !9305)
!9378 = !DILocation(line: 3215, column: 31, scope: !9305)
!9379 = !DILocation(line: 3215, column: 9, scope: !9305)
!9380 = !DILocation(line: 3215, column: 2, scope: !9305)
!9381 = distinct !DISubprogram(name: "dtr_rts", scope: !3, file: !3, line: 3218, type: !4812, scopeLine: 3219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9382 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !9383)
!9383 = distinct !DILocation(line: 3229, column: 2, scope: !9381)
!9384 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !9383)
!9385 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !9386)
!9386 = distinct !DILocation(line: 3223, column: 2, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9388, file: !3, line: 3223, column: 2)
!9388 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 3223, column: 2)
!9389 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 3223, column: 2)
!9390 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 3223, column: 2)
!9391 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 3223, column: 2)
!9392 = !DILocalVariable(name: "port", arg: 1, scope: !9381, file: !3, line: 3218, type: !4766)
!9393 = !DILocation(line: 3218, column: 38, scope: !9381)
!9394 = !DILocalVariable(name: "on", arg: 2, scope: !9381, file: !3, line: 3218, type: !32)
!9395 = !DILocation(line: 3218, column: 48, scope: !9381)
!9396 = !DILocalVariable(name: "info", scope: !9381, file: !3, line: 3220, type: !7524)
!9397 = !DILocation(line: 3220, column: 22, scope: !9381)
!9398 = !DILocalVariable(name: "__mptr", scope: !9399, file: !3, line: 3220, type: !591)
!9399 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 3220, column: 29)
!9400 = !DILocation(line: 3220, column: 29, scope: !9399)
!9401 = !DILocation(line: 3220, column: 29, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9399, file: !3, line: 3220, column: 29)
!9403 = !DILocalVariable(name: "flags", scope: !9381, file: !3, line: 3221, type: !312)
!9404 = !DILocation(line: 3221, column: 16, scope: !9381)
!9405 = !DILocation(line: 3223, column: 2, scope: !9381)
!9406 = !DILocation(line: 3223, column: 2, scope: !9391)
!9407 = !DILocalVariable(name: "__dummy", scope: !9408, file: !3, line: 3223, type: !312)
!9408 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 3223, column: 2)
!9409 = !DILocation(line: 3223, column: 2, scope: !9408)
!9410 = !DILocalVariable(name: "__dummy2", scope: !9408, file: !3, line: 3223, type: !312)
!9411 = !DILocation(line: 3223, column: 2, scope: !9390)
!9412 = !DILocation(line: 3223, column: 2, scope: !9389)
!9413 = !DILocation(line: 3223, column: 2, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 3223, column: 2)
!9415 = !DILocalVariable(name: "__dummy", scope: !9416, file: !3, line: 3223, type: !312)
!9416 = distinct !DILexicalBlock(scope: !9417, file: !3, line: 3223, column: 2)
!9417 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 3223, column: 2)
!9418 = !DILocation(line: 3223, column: 2, scope: !9416)
!9419 = !DILocalVariable(name: "__dummy2", scope: !9416, file: !3, line: 3223, type: !312)
!9420 = !DILocation(line: 3223, column: 2, scope: !9417)
!9421 = !DILocation(line: 3223, column: 2, scope: !9388)
!9422 = !{i32 -2139382456}
!9423 = !DILocation(line: 3223, column: 2, scope: !9387)
!9424 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !9386)
!9425 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !9386)
!9426 = !DILocation(line: 3224, column: 6, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 3224, column: 6)
!9428 = !DILocation(line: 3224, column: 6, scope: !9381)
!9429 = !DILocation(line: 3225, column: 3, scope: !9427)
!9430 = !DILocation(line: 3225, column: 9, scope: !9427)
!9431 = !DILocation(line: 3225, column: 24, scope: !9427)
!9432 = !DILocation(line: 3227, column: 3, scope: !9427)
!9433 = !DILocation(line: 3227, column: 9, scope: !9427)
!9434 = !DILocation(line: 3227, column: 24, scope: !9427)
!9435 = !DILocation(line: 3228, column: 26, scope: !9381)
!9436 = !DILocation(line: 3228, column: 3, scope: !9381)
!9437 = !DILocation(line: 3229, column: 26, scope: !9381)
!9438 = !DILocation(line: 3229, column: 32, scope: !9381)
!9439 = !DILocation(line: 3229, column: 45, scope: !9381)
!9440 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !9383)
!9441 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !9383)
!9442 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !9383)
!9443 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !9383)
!9444 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !9383)
!9445 = !DILocation(line: 3230, column: 1, scope: !9381)
!9446 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !9447, file: !9447, line: 666, type: !9448, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9447 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!312}
!9450 = !DILocalVariable(name: "f", scope: !9446, file: !9447, line: 668, type: !312)
!9451 = !DILocation(line: 668, column: 16, scope: !9446)
!9452 = !DILocation(line: 670, column: 6, scope: !9446)
!9453 = !DILocation(line: 670, column: 4, scope: !9446)
!9454 = !DILocation(line: 671, column: 2, scope: !9446)
!9455 = !DILocation(line: 672, column: 9, scope: !9446)
!9456 = !DILocation(line: 672, column: 2, scope: !9446)
!9457 = distinct !DISubprogram(name: "usc_get_serial_signals", scope: !3, file: !3, line: 6016, type: !8185, scopeLine: 6017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9458 = !DILocalVariable(name: "info", arg: 1, scope: !9457, file: !3, line: 6016, type: !7524)
!9459 = !DILocation(line: 6016, column: 57, scope: !9457)
!9460 = !DILocalVariable(name: "status", scope: !9457, file: !3, line: 6018, type: !581)
!9461 = !DILocation(line: 6018, column: 6, scope: !9457)
!9462 = !DILocation(line: 6021, column: 2, scope: !9457)
!9463 = !DILocation(line: 6021, column: 8, scope: !9457)
!9464 = !DILocation(line: 6021, column: 23, scope: !9457)
!9465 = !DILocation(line: 6026, column: 22, scope: !9457)
!9466 = !DILocation(line: 6026, column: 11, scope: !9457)
!9467 = !DILocation(line: 6026, column: 9, scope: !9457)
!9468 = !DILocation(line: 6030, column: 7, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 6030, column: 7)
!9470 = !DILocation(line: 6030, column: 14, scope: !9469)
!9471 = !DILocation(line: 6030, column: 7, scope: !9457)
!9472 = !DILocation(line: 6031, column: 3, scope: !9469)
!9473 = !DILocation(line: 6031, column: 9, scope: !9469)
!9474 = !DILocation(line: 6031, column: 24, scope: !9469)
!9475 = !DILocation(line: 6033, column: 7, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 6033, column: 7)
!9477 = !DILocation(line: 6033, column: 14, scope: !9476)
!9478 = !DILocation(line: 6033, column: 7, scope: !9457)
!9479 = !DILocation(line: 6034, column: 3, scope: !9476)
!9480 = !DILocation(line: 6034, column: 9, scope: !9476)
!9481 = !DILocation(line: 6034, column: 24, scope: !9476)
!9482 = !DILocation(line: 6036, column: 7, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 6036, column: 7)
!9484 = !DILocation(line: 6036, column: 14, scope: !9483)
!9485 = !DILocation(line: 6036, column: 7, scope: !9457)
!9486 = !DILocation(line: 6037, column: 3, scope: !9483)
!9487 = !DILocation(line: 6037, column: 9, scope: !9483)
!9488 = !DILocation(line: 6037, column: 24, scope: !9483)
!9489 = !DILocation(line: 6039, column: 7, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 6039, column: 7)
!9491 = !DILocation(line: 6039, column: 14, scope: !9490)
!9492 = !DILocation(line: 6039, column: 7, scope: !9457)
!9493 = !DILocation(line: 6040, column: 3, scope: !9490)
!9494 = !DILocation(line: 6040, column: 9, scope: !9490)
!9495 = !DILocation(line: 6040, column: 24, scope: !9490)
!9496 = !DILocation(line: 6042, column: 1, scope: !9457)
!9497 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !9447, file: !9447, line: 646, type: !9448, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9498 = !DILocalVariable(name: "__ret", scope: !9499, file: !9447, line: 648, type: !312)
!9499 = distinct !DILexicalBlock(scope: !9497, file: !9447, line: 648, column: 9)
!9500 = !DILocation(line: 648, column: 9, scope: !9499)
!9501 = !DILocalVariable(name: "__edi", scope: !9499, file: !9447, line: 648, type: !312)
!9502 = !DILocalVariable(name: "__esi", scope: !9499, file: !9447, line: 648, type: !312)
!9503 = !DILocalVariable(name: "__edx", scope: !9499, file: !9447, line: 648, type: !312)
!9504 = !DILocalVariable(name: "__ecx", scope: !9499, file: !9447, line: 648, type: !312)
!9505 = !DILocalVariable(name: "__eax", scope: !9499, file: !9447, line: 648, type: !312)
!9506 = !DILocation(line: 648, column: 9, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9508, file: !9447, line: 648, column: 9)
!9508 = distinct !DILexicalBlock(scope: !9499, file: !9447, line: 648, column: 9)
!9509 = !{i32 -2145563100, i32 -2145560785, i32 -2145560551, i32 -2145560500, i32 -2145560472, i32 -2145560447, i32 -2145560763, i32 -2145560750, i32 -2145560312, i32 -2145560193, i32 -2145560658, i32 -2145560631, i32 -2145560603, i32 -2145560573}
!9510 = !DILocalVariable(name: "__mask", scope: !9511, file: !9447, line: 648, type: !312)
!9511 = distinct !DILexicalBlock(scope: !9507, file: !9447, line: 648, column: 9)
!9512 = !DILocation(line: 648, column: 9, scope: !9511)
!9513 = !DILocation(line: 648, column: 9, scope: !9508)
!9514 = !DILocation(line: 648, column: 2, scope: !9497)
!9515 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !9447, file: !9447, line: 656, type: !5179, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9516 = !DILocalVariable(name: "__edi", scope: !9517, file: !9447, line: 658, type: !312)
!9517 = distinct !DILexicalBlock(scope: !9515, file: !9447, line: 658, column: 2)
!9518 = !DILocation(line: 658, column: 2, scope: !9517)
!9519 = !DILocalVariable(name: "__esi", scope: !9517, file: !9447, line: 658, type: !312)
!9520 = !DILocalVariable(name: "__edx", scope: !9517, file: !9447, line: 658, type: !312)
!9521 = !DILocalVariable(name: "__ecx", scope: !9517, file: !9447, line: 658, type: !312)
!9522 = !DILocalVariable(name: "__eax", scope: !9517, file: !9447, line: 658, type: !312)
!9523 = !{i32 -2145556006, i32 -2145555274, i32 -2145555040, i32 -2145554989, i32 -2145554961, i32 -2145554936, i32 -2145555252, i32 -2145555239, i32 -2145554801, i32 -2145554682, i32 -2145555147, i32 -2145555120, i32 -2145555092, i32 -2145555062}
!9524 = !DILocation(line: 659, column: 1, scope: !9515)
!9525 = distinct !DISubprogram(name: "usc_InReg", scope: !3, file: !3, line: 4459, type: !9526, scopeLine: 4460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9526 = !DISubroutineType(types: !9527)
!9527 = !{!581, !7524, !581}
!9528 = !DILocalVariable(name: "info", arg: 1, scope: !9525, file: !3, line: 4459, type: !7524)
!9529 = !DILocation(line: 4459, column: 43, scope: !9525)
!9530 = !DILocalVariable(name: "RegAddr", arg: 2, scope: !9525, file: !3, line: 4459, type: !581)
!9531 = !DILocation(line: 4459, column: 53, scope: !9525)
!9532 = !DILocation(line: 4461, column: 8, scope: !9525)
!9533 = !DILocation(line: 4461, column: 18, scope: !9525)
!9534 = !DILocation(line: 4461, column: 24, scope: !9525)
!9535 = !DILocation(line: 4461, column: 16, scope: !9525)
!9536 = !DILocation(line: 4461, column: 39, scope: !9525)
!9537 = !DILocation(line: 4461, column: 45, scope: !9525)
!9538 = !DILocation(line: 4461, column: 53, scope: !9525)
!9539 = !DILocation(line: 4461, column: 2, scope: !9525)
!9540 = !DILocation(line: 4462, column: 14, scope: !9525)
!9541 = !DILocation(line: 4462, column: 20, scope: !9525)
!9542 = !DILocation(line: 4462, column: 28, scope: !9525)
!9543 = !DILocation(line: 4462, column: 9, scope: !9525)
!9544 = !DILocation(line: 4462, column: 2, scope: !9525)
!9545 = distinct !DISubprogram(name: "outw", scope: !8515, file: !8515, line: 335, type: !9546, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9546 = !DISubroutineType(types: !9547)
!9547 = !{null, !476, !32}
!9548 = !DILocalVariable(name: "value", arg: 1, scope: !9545, file: !8515, line: 335, type: !476)
!9549 = !DILocation(line: 335, column: 1, scope: !9545)
!9550 = !DILocalVariable(name: "port", arg: 2, scope: !9545, file: !8515, line: 335, type: !32)
!9551 = !{i32 -2143170635}
!9552 = distinct !DISubprogram(name: "inw", scope: !8515, file: !8515, line: 335, type: !9553, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9553 = !DISubroutineType(types: !9554)
!9554 = !{!476, !32}
!9555 = !DILocalVariable(name: "port", arg: 1, scope: !9552, file: !8515, line: 335, type: !32)
!9556 = !DILocation(line: 335, column: 1, scope: !9552)
!9557 = !DILocalVariable(name: "value", scope: !9552, file: !8515, line: 335, type: !476)
!9558 = !{i32 -2143170433}
!9559 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !9447, file: !9447, line: 651, type: !9560, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{null, !312}
!9562 = !DILocalVariable(name: "f", arg: 1, scope: !9559, file: !9447, line: 651, type: !312)
!9563 = !DILocation(line: 651, column: 65, scope: !9559)
!9564 = !DILocalVariable(name: "__edi", scope: !9565, file: !9447, line: 653, type: !312)
!9565 = distinct !DILexicalBlock(scope: !9559, file: !9447, line: 653, column: 2)
!9566 = !DILocation(line: 653, column: 2, scope: !9565)
!9567 = !DILocalVariable(name: "__esi", scope: !9565, file: !9447, line: 653, type: !312)
!9568 = !DILocalVariable(name: "__edx", scope: !9565, file: !9447, line: 653, type: !312)
!9569 = !DILocalVariable(name: "__ecx", scope: !9565, file: !9447, line: 653, type: !312)
!9570 = !DILocalVariable(name: "__eax", scope: !9565, file: !9447, line: 653, type: !312)
!9571 = !{i32 -2145558633, i32 -2145557883, i32 -2145557649, i32 -2145557598, i32 -2145557570, i32 -2145557545, i32 -2145557861, i32 -2145557848, i32 -2145557410, i32 -2145557291, i32 -2145557756, i32 -2145557729, i32 -2145557701, i32 -2145557671}
!9572 = !DILocation(line: 654, column: 1, scope: !9559)
!9573 = distinct !DISubprogram(name: "usc_set_serial_signals", scope: !3, file: !3, line: 6052, type: !8185, scopeLine: 6053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9574 = !DILocalVariable(name: "info", arg: 1, scope: !9573, file: !3, line: 6052, type: !7524)
!9575 = !DILocation(line: 6052, column: 57, scope: !9573)
!9576 = !DILocalVariable(name: "Control", scope: !9573, file: !3, line: 6054, type: !581)
!9577 = !DILocation(line: 6054, column: 6, scope: !9573)
!9578 = !DILocalVariable(name: "V24Out", scope: !9573, file: !3, line: 6055, type: !482)
!9579 = !DILocation(line: 6055, column: 16, scope: !9573)
!9580 = !DILocation(line: 6055, column: 25, scope: !9573)
!9581 = !DILocation(line: 6055, column: 31, scope: !9573)
!9582 = !DILocation(line: 6059, column: 23, scope: !9573)
!9583 = !DILocation(line: 6059, column: 12, scope: !9573)
!9584 = !DILocation(line: 6059, column: 10, scope: !9573)
!9585 = !DILocation(line: 6061, column: 7, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 6061, column: 7)
!9587 = !DILocation(line: 6061, column: 14, scope: !9586)
!9588 = !DILocation(line: 6061, column: 7, scope: !9573)
!9589 = !DILocation(line: 6062, column: 11, scope: !9586)
!9590 = !DILocation(line: 6062, column: 3, scope: !9586)
!9591 = !DILocation(line: 6064, column: 11, scope: !9586)
!9592 = !DILocation(line: 6066, column: 7, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 6066, column: 7)
!9594 = !DILocation(line: 6066, column: 14, scope: !9593)
!9595 = !DILocation(line: 6066, column: 7, scope: !9573)
!9596 = !DILocation(line: 6067, column: 11, scope: !9593)
!9597 = !DILocation(line: 6067, column: 3, scope: !9593)
!9598 = !DILocation(line: 6069, column: 11, scope: !9593)
!9599 = !DILocation(line: 6071, column: 14, scope: !9573)
!9600 = !DILocation(line: 6071, column: 25, scope: !9573)
!9601 = !DILocation(line: 6071, column: 2, scope: !9573)
!9602 = !DILocation(line: 6073, column: 1, scope: !9573)
!9603 = distinct !DISubprogram(name: "usc_OutReg", scope: !3, file: !3, line: 4435, type: !9604, scopeLine: 4436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9604 = !DISubroutineType(types: !9605)
!9605 = !{null, !7524, !581, !581}
!9606 = !DILocalVariable(name: "info", arg: 1, scope: !9603, file: !3, line: 4435, type: !7524)
!9607 = !DILocation(line: 4435, column: 45, scope: !9603)
!9608 = !DILocalVariable(name: "RegAddr", arg: 2, scope: !9603, file: !3, line: 4435, type: !581)
!9609 = !DILocation(line: 4435, column: 55, scope: !9603)
!9610 = !DILocalVariable(name: "RegValue", arg: 3, scope: !9603, file: !3, line: 4435, type: !581)
!9611 = !DILocation(line: 4435, column: 68, scope: !9603)
!9612 = !DILocation(line: 4437, column: 8, scope: !9603)
!9613 = !DILocation(line: 4437, column: 18, scope: !9603)
!9614 = !DILocation(line: 4437, column: 24, scope: !9603)
!9615 = !DILocation(line: 4437, column: 16, scope: !9603)
!9616 = !DILocation(line: 4437, column: 39, scope: !9603)
!9617 = !DILocation(line: 4437, column: 45, scope: !9603)
!9618 = !DILocation(line: 4437, column: 53, scope: !9603)
!9619 = !DILocation(line: 4437, column: 2, scope: !9603)
!9620 = !DILocation(line: 4438, column: 8, scope: !9603)
!9621 = !DILocation(line: 4438, column: 18, scope: !9603)
!9622 = !DILocation(line: 4438, column: 24, scope: !9603)
!9623 = !DILocation(line: 4438, column: 32, scope: !9603)
!9624 = !DILocation(line: 4438, column: 2, scope: !9603)
!9625 = !DILocation(line: 4441, column: 7, scope: !9603)
!9626 = !DILocation(line: 4441, column: 13, scope: !9603)
!9627 = !DILocation(line: 4441, column: 21, scope: !9603)
!9628 = !DILocation(line: 4441, column: 2, scope: !9603)
!9629 = !DILocation(line: 4443, column: 1, scope: !9603)
!9630 = distinct !DISubprogram(name: "mgsl_bh_action", scope: !3, file: !3, line: 1021, type: !9631, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9631 = !DISubroutineType(types: !9632)
!9632 = !{!32, !7524}
!9633 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !9634)
!9634 = distinct !DILocation(line: 1045, column: 2, scope: !9630)
!9635 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !9634)
!9636 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !9637)
!9637 = distinct !DILocation(line: 1026, column: 2, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 1026, column: 2)
!9639 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 1026, column: 2)
!9640 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 1026, column: 2)
!9641 = distinct !DILexicalBlock(scope: !9642, file: !3, line: 1026, column: 2)
!9642 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 1026, column: 2)
!9643 = !DILocalVariable(name: "info", arg: 1, scope: !9630, file: !3, line: 1021, type: !7524)
!9644 = !DILocation(line: 1021, column: 47, scope: !9630)
!9645 = !DILocalVariable(name: "flags", scope: !9630, file: !3, line: 1023, type: !312)
!9646 = !DILocation(line: 1023, column: 16, scope: !9630)
!9647 = !DILocalVariable(name: "rc", scope: !9630, file: !3, line: 1024, type: !32)
!9648 = !DILocation(line: 1024, column: 6, scope: !9630)
!9649 = !DILocation(line: 1026, column: 2, scope: !9630)
!9650 = !DILocation(line: 1026, column: 2, scope: !9642)
!9651 = !DILocalVariable(name: "__dummy", scope: !9652, file: !3, line: 1026, type: !312)
!9652 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 1026, column: 2)
!9653 = !DILocation(line: 1026, column: 2, scope: !9652)
!9654 = !DILocalVariable(name: "__dummy2", scope: !9652, file: !3, line: 1026, type: !312)
!9655 = !DILocation(line: 1026, column: 2, scope: !9641)
!9656 = !DILocation(line: 1026, column: 2, scope: !9640)
!9657 = !DILocation(line: 1026, column: 2, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 1026, column: 2)
!9659 = !DILocalVariable(name: "__dummy", scope: !9660, file: !3, line: 1026, type: !312)
!9660 = distinct !DILexicalBlock(scope: !9661, file: !3, line: 1026, column: 2)
!9661 = distinct !DILexicalBlock(scope: !9658, file: !3, line: 1026, column: 2)
!9662 = !DILocation(line: 1026, column: 2, scope: !9660)
!9663 = !DILocalVariable(name: "__dummy2", scope: !9660, file: !3, line: 1026, type: !312)
!9664 = !DILocation(line: 1026, column: 2, scope: !9661)
!9665 = !DILocation(line: 1026, column: 2, scope: !9639)
!9666 = !{i32 -2139464936}
!9667 = !DILocation(line: 1026, column: 2, scope: !9638)
!9668 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !9637)
!9669 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !9637)
!9670 = !DILocation(line: 1028, column: 6, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 1028, column: 6)
!9672 = !DILocation(line: 1028, column: 12, scope: !9671)
!9673 = !DILocation(line: 1028, column: 23, scope: !9671)
!9674 = !DILocation(line: 1028, column: 6, scope: !9630)
!9675 = !DILocation(line: 1029, column: 3, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9671, file: !3, line: 1028, column: 37)
!9677 = !DILocation(line: 1029, column: 9, scope: !9676)
!9678 = !DILocation(line: 1029, column: 20, scope: !9676)
!9679 = !DILocation(line: 1030, column: 6, scope: !9676)
!9680 = !DILocation(line: 1031, column: 2, scope: !9676)
!9681 = !DILocation(line: 1031, column: 13, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9671, file: !3, line: 1031, column: 13)
!9683 = !DILocation(line: 1031, column: 19, scope: !9682)
!9684 = !DILocation(line: 1031, column: 30, scope: !9682)
!9685 = !DILocation(line: 1031, column: 13, scope: !9671)
!9686 = !DILocation(line: 1032, column: 3, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 1031, column: 45)
!9688 = !DILocation(line: 1032, column: 9, scope: !9687)
!9689 = !DILocation(line: 1032, column: 20, scope: !9687)
!9690 = !DILocation(line: 1033, column: 6, scope: !9687)
!9691 = !DILocation(line: 1034, column: 2, scope: !9687)
!9692 = !DILocation(line: 1034, column: 13, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 1034, column: 13)
!9694 = !DILocation(line: 1034, column: 19, scope: !9693)
!9695 = !DILocation(line: 1034, column: 30, scope: !9693)
!9696 = !DILocation(line: 1034, column: 13, scope: !9682)
!9697 = !DILocation(line: 1035, column: 3, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9693, file: !3, line: 1034, column: 43)
!9699 = !DILocation(line: 1035, column: 9, scope: !9698)
!9700 = !DILocation(line: 1035, column: 20, scope: !9698)
!9701 = !DILocation(line: 1036, column: 6, scope: !9698)
!9702 = !DILocation(line: 1037, column: 2, scope: !9698)
!9703 = !DILocation(line: 1039, column: 7, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 1039, column: 6)
!9705 = !DILocation(line: 1039, column: 6, scope: !9630)
!9706 = !DILocation(line: 1041, column: 3, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 1039, column: 11)
!9708 = !DILocation(line: 1041, column: 9, scope: !9707)
!9709 = !DILocation(line: 1041, column: 20, scope: !9707)
!9710 = !DILocation(line: 1042, column: 3, scope: !9707)
!9711 = !DILocation(line: 1042, column: 9, scope: !9707)
!9712 = !DILocation(line: 1042, column: 22, scope: !9707)
!9713 = !DILocation(line: 1043, column: 2, scope: !9707)
!9714 = !DILocation(line: 1045, column: 26, scope: !9630)
!9715 = !DILocation(line: 1045, column: 32, scope: !9630)
!9716 = !DILocation(line: 1045, column: 45, scope: !9630)
!9717 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !9634)
!9718 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !9634)
!9719 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !9634)
!9720 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !9634)
!9721 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !9634)
!9722 = !DILocation(line: 1047, column: 9, scope: !9630)
!9723 = !DILocation(line: 1047, column: 2, scope: !9630)
!9724 = distinct !DISubprogram(name: "mgsl_bh_receive", scope: !3, file: !3, line: 1095, type: !8185, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9725 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !9726)
!9726 = distinct !DILocation(line: 1110, column: 4, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 1106, column: 30)
!9728 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 1106, column: 7)
!9729 = distinct !DILexicalBlock(scope: !9724, file: !3, line: 1105, column: 2)
!9730 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !9726)
!9731 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !9732)
!9732 = distinct !DILocation(line: 1108, column: 4, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9734, file: !3, line: 1108, column: 4)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 1108, column: 4)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 1108, column: 4)
!9736 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 1108, column: 4)
!9737 = distinct !DILexicalBlock(scope: !9727, file: !3, line: 1108, column: 4)
!9738 = !DILocalVariable(name: "info", arg: 1, scope: !9724, file: !3, line: 1095, type: !7524)
!9739 = !DILocation(line: 1095, column: 49, scope: !9724)
!9740 = !DILocalVariable(name: "get_rx_frame", scope: !9724, file: !3, line: 1097, type: !9741)
!9741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8190, size: 64)
!9742 = !DILocation(line: 1097, column: 9, scope: !9724)
!9743 = !DILocation(line: 1098, column: 4, scope: !9724)
!9744 = !DILocation(line: 1098, column: 10, scope: !9724)
!9745 = !DILocation(line: 1098, column: 17, scope: !9724)
!9746 = !DILocation(line: 1098, column: 22, scope: !9724)
!9747 = !DILocation(line: 1100, column: 7, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9724, file: !3, line: 1100, column: 7)
!9749 = !DILocation(line: 1100, column: 19, scope: !9748)
!9750 = !DILocation(line: 1100, column: 7, scope: !9724)
!9751 = !DILocation(line: 1102, column: 22, scope: !9748)
!9752 = !DILocation(line: 1102, column: 28, scope: !9748)
!9753 = !DILocation(line: 1101, column: 3, scope: !9748)
!9754 = !DILocation(line: 1104, column: 2, scope: !9724)
!9755 = !DILocation(line: 1106, column: 7, scope: !9728)
!9756 = !DILocation(line: 1106, column: 13, scope: !9728)
!9757 = !DILocation(line: 1106, column: 7, scope: !9729)
!9758 = !DILocalVariable(name: "flags", scope: !9727, file: !3, line: 1107, type: !312)
!9759 = !DILocation(line: 1107, column: 18, scope: !9727)
!9760 = !DILocation(line: 1108, column: 4, scope: !9727)
!9761 = !DILocation(line: 1108, column: 4, scope: !9737)
!9762 = !DILocalVariable(name: "__dummy", scope: !9763, file: !3, line: 1108, type: !312)
!9763 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 1108, column: 4)
!9764 = !DILocation(line: 1108, column: 4, scope: !9763)
!9765 = !DILocalVariable(name: "__dummy2", scope: !9763, file: !3, line: 1108, type: !312)
!9766 = !DILocation(line: 1108, column: 4, scope: !9736)
!9767 = !DILocation(line: 1108, column: 4, scope: !9735)
!9768 = !DILocation(line: 1108, column: 4, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 1108, column: 4)
!9770 = !DILocalVariable(name: "__dummy", scope: !9771, file: !3, line: 1108, type: !312)
!9771 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 1108, column: 4)
!9772 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1108, column: 4)
!9773 = !DILocation(line: 1108, column: 4, scope: !9771)
!9774 = !DILocalVariable(name: "__dummy2", scope: !9771, file: !3, line: 1108, type: !312)
!9775 = !DILocation(line: 1108, column: 4, scope: !9772)
!9776 = !DILocation(line: 1108, column: 4, scope: !9734)
!9777 = !{i32 -2139462249}
!9778 = !DILocation(line: 1108, column: 4, scope: !9733)
!9779 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !9732)
!9780 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !9732)
!9781 = !DILocation(line: 1109, column: 23, scope: !9727)
!9782 = !DILocation(line: 1109, column: 4, scope: !9727)
!9783 = !DILocation(line: 1110, column: 28, scope: !9727)
!9784 = !DILocation(line: 1110, column: 34, scope: !9727)
!9785 = !DILocation(line: 1110, column: 47, scope: !9727)
!9786 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !9726)
!9787 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !9726)
!9788 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !9726)
!9789 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !9726)
!9790 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !9726)
!9791 = !DILocation(line: 1111, column: 4, scope: !9727)
!9792 = !DILocation(line: 1113, column: 2, scope: !9729)
!9793 = !DILocation(line: 1113, column: 10, scope: !9724)
!9794 = !DILocation(line: 1113, column: 23, scope: !9724)
!9795 = distinct !{!9795, !9754, !9796}
!9796 = !DILocation(line: 1113, column: 28, scope: !9724)
!9797 = !DILocation(line: 1114, column: 1, scope: !9724)
!9798 = distinct !DISubprogram(name: "mgsl_bh_transmit", scope: !3, file: !3, line: 1116, type: !8185, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9799 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !9800)
!9800 = distinct !DILocation(line: 1134, column: 2, scope: !9798)
!9801 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !9800)
!9802 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !9803)
!9803 = distinct !DILocation(line: 1131, column: 2, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 1131, column: 2)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 1131, column: 2)
!9806 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 1131, column: 2)
!9807 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 1131, column: 2)
!9808 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 1131, column: 2)
!9809 = !DILocalVariable(name: "info", arg: 1, scope: !9798, file: !3, line: 1116, type: !7524)
!9810 = !DILocation(line: 1116, column: 50, scope: !9798)
!9811 = !DILocalVariable(name: "tty", scope: !9798, file: !3, line: 1118, type: !3760)
!9812 = !DILocation(line: 1118, column: 21, scope: !9798)
!9813 = !DILocation(line: 1118, column: 27, scope: !9798)
!9814 = !DILocation(line: 1118, column: 33, scope: !9798)
!9815 = !DILocation(line: 1118, column: 38, scope: !9798)
!9816 = !DILocalVariable(name: "flags", scope: !9798, file: !3, line: 1119, type: !312)
!9817 = !DILocation(line: 1119, column: 16, scope: !9798)
!9818 = !DILocation(line: 1121, column: 7, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 1121, column: 7)
!9820 = !DILocation(line: 1121, column: 19, scope: !9819)
!9821 = !DILocation(line: 1121, column: 7, scope: !9798)
!9822 = !DILocation(line: 1123, column: 22, scope: !9819)
!9823 = !DILocation(line: 1123, column: 28, scope: !9819)
!9824 = !DILocation(line: 1122, column: 3, scope: !9819)
!9825 = !DILocation(line: 1125, column: 6, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 1125, column: 6)
!9827 = !DILocation(line: 1125, column: 6, scope: !9798)
!9828 = !DILocation(line: 1126, column: 14, scope: !9826)
!9829 = !DILocation(line: 1126, column: 3, scope: !9826)
!9830 = !DILocation(line: 1131, column: 2, scope: !9798)
!9831 = !DILocation(line: 1131, column: 2, scope: !9808)
!9832 = !DILocalVariable(name: "__dummy", scope: !9833, file: !3, line: 1131, type: !312)
!9833 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 1131, column: 2)
!9834 = !DILocation(line: 1131, column: 2, scope: !9833)
!9835 = !DILocalVariable(name: "__dummy2", scope: !9833, file: !3, line: 1131, type: !312)
!9836 = !DILocation(line: 1131, column: 2, scope: !9807)
!9837 = !DILocation(line: 1131, column: 2, scope: !9806)
!9838 = !DILocation(line: 1131, column: 2, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 1131, column: 2)
!9840 = !DILocalVariable(name: "__dummy", scope: !9841, file: !3, line: 1131, type: !312)
!9841 = distinct !DILexicalBlock(scope: !9842, file: !3, line: 1131, column: 2)
!9842 = distinct !DILexicalBlock(scope: !9839, file: !3, line: 1131, column: 2)
!9843 = !DILocation(line: 1131, column: 2, scope: !9841)
!9844 = !DILocalVariable(name: "__dummy2", scope: !9841, file: !3, line: 1131, type: !312)
!9845 = !DILocation(line: 1131, column: 2, scope: !9842)
!9846 = !DILocation(line: 1131, column: 2, scope: !9805)
!9847 = !{i32 -2139461142}
!9848 = !DILocation(line: 1131, column: 2, scope: !9804)
!9849 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !9803)
!9850 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !9803)
!9851 = !DILocation(line: 1132, column: 9, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 1132, column: 8)
!9853 = !DILocation(line: 1132, column: 15, scope: !9852)
!9854 = !DILocation(line: 1132, column: 25, scope: !9852)
!9855 = !DILocation(line: 1132, column: 28, scope: !9852)
!9856 = !DILocation(line: 1132, column: 34, scope: !9852)
!9857 = !DILocation(line: 1132, column: 8, scope: !9798)
!9858 = !DILocation(line: 1133, column: 28, scope: !9852)
!9859 = !DILocation(line: 1133, column: 4, scope: !9852)
!9860 = !DILocation(line: 1134, column: 26, scope: !9798)
!9861 = !DILocation(line: 1134, column: 32, scope: !9798)
!9862 = !DILocation(line: 1134, column: 45, scope: !9798)
!9863 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !9800)
!9864 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !9800)
!9865 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !9800)
!9866 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !9800)
!9867 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !9800)
!9868 = !DILocation(line: 1135, column: 1, scope: !9798)
!9869 = distinct !DISubprogram(name: "mgsl_bh_status", scope: !3, file: !3, line: 1137, type: !8185, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9870 = !DILocalVariable(name: "info", arg: 1, scope: !9869, file: !3, line: 1137, type: !7524)
!9871 = !DILocation(line: 1137, column: 48, scope: !9869)
!9872 = !DILocation(line: 1139, column: 7, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9869, file: !3, line: 1139, column: 7)
!9874 = !DILocation(line: 1139, column: 19, scope: !9873)
!9875 = !DILocation(line: 1139, column: 7, scope: !9869)
!9876 = !DILocation(line: 1141, column: 22, scope: !9873)
!9877 = !DILocation(line: 1141, column: 28, scope: !9873)
!9878 = !DILocation(line: 1140, column: 3, scope: !9873)
!9879 = !DILocation(line: 1143, column: 2, scope: !9869)
!9880 = !DILocation(line: 1143, column: 8, scope: !9869)
!9881 = !DILocation(line: 1143, column: 20, scope: !9869)
!9882 = !DILocation(line: 1144, column: 2, scope: !9869)
!9883 = !DILocation(line: 1144, column: 8, scope: !9869)
!9884 = !DILocation(line: 1144, column: 21, scope: !9869)
!9885 = !DILocation(line: 1145, column: 2, scope: !9869)
!9886 = !DILocation(line: 1145, column: 8, scope: !9869)
!9887 = !DILocation(line: 1145, column: 21, scope: !9869)
!9888 = !DILocation(line: 1146, column: 2, scope: !9869)
!9889 = !DILocation(line: 1146, column: 8, scope: !9869)
!9890 = !DILocation(line: 1146, column: 21, scope: !9869)
!9891 = !DILocation(line: 1147, column: 1, scope: !9869)
!9892 = distinct !DISubprogram(name: "mgsl_get_rx_frame", scope: !3, file: !3, line: 6302, type: !8190, scopeLine: 6303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9893 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !9894)
!9894 = distinct !DILocation(line: 6471, column: 4, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 6471, column: 4)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 6471, column: 4)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 6471, column: 4)
!9898 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 6471, column: 4)
!9899 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 6471, column: 4)
!9900 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 6470, column: 43)
!9901 = distinct !DILexicalBlock(scope: !9902, file: !3, line: 6469, column: 8)
!9902 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 6463, column: 47)
!9903 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 6463, column: 7)
!9904 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !9905)
!9905 = distinct !DILocation(line: 6348, column: 5, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 6345, column: 27)
!9907 = distinct !DILexicalBlock(scope: !9908, file: !3, line: 6345, column: 9)
!9908 = distinct !DILexicalBlock(scope: !9909, file: !3, line: 6339, column: 33)
!9909 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 6339, column: 8)
!9910 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 6322, column: 50)
!9911 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !9905)
!9912 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !9913)
!9913 = distinct !DILocation(line: 6473, column: 4, scope: !9900)
!9914 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !9913)
!9915 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !9916)
!9916 = distinct !DILocation(line: 6346, column: 5, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 6346, column: 5)
!9918 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 6346, column: 5)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 6346, column: 5)
!9920 = distinct !DILexicalBlock(scope: !9921, file: !3, line: 6346, column: 5)
!9921 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 6346, column: 5)
!9922 = !DILocalVariable(name: "info", arg: 1, scope: !9892, file: !3, line: 6302, type: !7524)
!9923 = !DILocation(line: 6302, column: 51, scope: !9892)
!9924 = !DILocalVariable(name: "StartIndex", scope: !9892, file: !3, line: 6304, type: !7)
!9925 = !DILocation(line: 6304, column: 15, scope: !9892)
!9926 = !DILocalVariable(name: "EndIndex", scope: !9892, file: !3, line: 6304, type: !7)
!9927 = !DILocation(line: 6304, column: 27, scope: !9892)
!9928 = !DILocalVariable(name: "status", scope: !9892, file: !3, line: 6305, type: !476)
!9929 = !DILocation(line: 6305, column: 17, scope: !9892)
!9930 = !DILocalVariable(name: "pBufEntry", scope: !9892, file: !3, line: 6306, type: !7588)
!9931 = !DILocation(line: 6306, column: 18, scope: !9892)
!9932 = !DILocalVariable(name: "framesize", scope: !9892, file: !3, line: 6307, type: !7)
!9933 = !DILocation(line: 6307, column: 15, scope: !9892)
!9934 = !DILocalVariable(name: "ReturnCode", scope: !9892, file: !3, line: 6308, type: !771)
!9935 = !DILocation(line: 6308, column: 7, scope: !9892)
!9936 = !DILocalVariable(name: "flags", scope: !9892, file: !3, line: 6309, type: !312)
!9937 = !DILocation(line: 6309, column: 16, scope: !9892)
!9938 = !DILocalVariable(name: "tty", scope: !9892, file: !3, line: 6310, type: !3760)
!9939 = !DILocation(line: 6310, column: 21, scope: !9892)
!9940 = !DILocation(line: 6310, column: 27, scope: !9892)
!9941 = !DILocation(line: 6310, column: 33, scope: !9892)
!9942 = !DILocation(line: 6310, column: 38, scope: !9892)
!9943 = !DILocalVariable(name: "return_frame", scope: !9892, file: !3, line: 6311, type: !771)
!9944 = !DILocation(line: 6311, column: 7, scope: !9892)
!9945 = !DILocation(line: 6320, column: 26, scope: !9892)
!9946 = !DILocation(line: 6320, column: 32, scope: !9892)
!9947 = !DILocation(line: 6320, column: 24, scope: !9892)
!9948 = !DILocation(line: 6320, column: 13, scope: !9892)
!9949 = !DILocation(line: 6322, column: 2, scope: !9892)
!9950 = !DILocation(line: 6322, column: 10, scope: !9892)
!9951 = !DILocation(line: 6322, column: 16, scope: !9892)
!9952 = !DILocation(line: 6322, column: 31, scope: !9892)
!9953 = !DILocation(line: 6322, column: 41, scope: !9892)
!9954 = !DILocation(line: 6322, column: 9, scope: !9892)
!9955 = !DILocation(line: 6330, column: 8, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 6330, column: 8)
!9957 = !DILocation(line: 6330, column: 14, scope: !9956)
!9958 = !DILocation(line: 6330, column: 29, scope: !9956)
!9959 = !DILocation(line: 6330, column: 39, scope: !9956)
!9960 = !DILocation(line: 6330, column: 8, scope: !9910)
!9961 = !DILocation(line: 6331, column: 4, scope: !9956)
!9962 = !DILocation(line: 6334, column: 11, scope: !9910)
!9963 = !DILocation(line: 6335, column: 8, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 6335, column: 8)
!9965 = !DILocation(line: 6335, column: 20, scope: !9964)
!9966 = !DILocation(line: 6335, column: 26, scope: !9964)
!9967 = !DILocation(line: 6335, column: 17, scope: !9964)
!9968 = !DILocation(line: 6335, column: 8, scope: !9910)
!9969 = !DILocation(line: 6336, column: 13, scope: !9964)
!9970 = !DILocation(line: 6336, column: 4, scope: !9964)
!9971 = !DILocation(line: 6339, column: 8, scope: !9909)
!9972 = !DILocation(line: 6339, column: 20, scope: !9909)
!9973 = !DILocation(line: 6339, column: 17, scope: !9909)
!9974 = !DILocation(line: 6339, column: 8, scope: !9910)
!9975 = !DILocation(line: 6345, column: 9, scope: !9907)
!9976 = !DILocation(line: 6345, column: 15, scope: !9907)
!9977 = !DILocation(line: 6345, column: 9, scope: !9908)
!9978 = !DILocation(line: 6346, column: 5, scope: !9906)
!9979 = !DILocation(line: 6346, column: 5, scope: !9921)
!9980 = !DILocalVariable(name: "__dummy", scope: !9981, file: !3, line: 6346, type: !312)
!9981 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 6346, column: 5)
!9982 = !DILocation(line: 6346, column: 5, scope: !9981)
!9983 = !DILocalVariable(name: "__dummy2", scope: !9981, file: !3, line: 6346, type: !312)
!9984 = !DILocation(line: 6346, column: 5, scope: !9920)
!9985 = !DILocation(line: 6346, column: 5, scope: !9919)
!9986 = !DILocation(line: 6346, column: 5, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 6346, column: 5)
!9988 = !DILocalVariable(name: "__dummy", scope: !9989, file: !3, line: 6346, type: !312)
!9989 = distinct !DILexicalBlock(scope: !9990, file: !3, line: 6346, column: 5)
!9990 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 6346, column: 5)
!9991 = !DILocation(line: 6346, column: 5, scope: !9989)
!9992 = !DILocalVariable(name: "__dummy2", scope: !9989, file: !3, line: 6346, type: !312)
!9993 = !DILocation(line: 6346, column: 5, scope: !9990)
!9994 = !DILocation(line: 6346, column: 5, scope: !9918)
!9995 = !{i32 -2139354326}
!9996 = !DILocation(line: 6346, column: 5, scope: !9917)
!9997 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !9916)
!9998 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !9916)
!9999 = !DILocation(line: 6347, column: 24, scope: !9906)
!10000 = !DILocation(line: 6347, column: 5, scope: !9906)
!10001 = !DILocation(line: 6348, column: 29, scope: !9906)
!10002 = !DILocation(line: 6348, column: 35, scope: !9906)
!10003 = !DILocation(line: 6348, column: 48, scope: !9906)
!10004 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !9905)
!10005 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !9905)
!10006 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !9905)
!10007 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !9905)
!10008 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !9905)
!10009 = !DILocation(line: 6349, column: 4, scope: !9906)
!10010 = !DILocation(line: 6350, column: 4, scope: !9908)
!10011 = distinct !{!10011, !9949, !10012}
!10012 = !DILocation(line: 6352, column: 2, scope: !9892)
!10013 = !DILocation(line: 6357, column: 11, scope: !9892)
!10014 = !DILocation(line: 6357, column: 17, scope: !9892)
!10015 = !DILocation(line: 6357, column: 32, scope: !9892)
!10016 = !DILocation(line: 6357, column: 42, scope: !9892)
!10017 = !DILocation(line: 6357, column: 9, scope: !9892)
!10018 = !DILocation(line: 6359, column: 7, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 6359, column: 7)
!10020 = !DILocation(line: 6359, column: 14, scope: !10019)
!10021 = !DILocation(line: 6359, column: 7, scope: !9892)
!10022 = !DILocation(line: 6361, column: 8, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 6361, column: 8)
!10024 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 6360, column: 43)
!10025 = !DILocation(line: 6361, column: 15, scope: !10023)
!10026 = !DILocation(line: 6361, column: 8, scope: !10024)
!10027 = !DILocation(line: 6362, column: 4, scope: !10023)
!10028 = !DILocation(line: 6362, column: 10, scope: !10023)
!10029 = !DILocation(line: 6362, column: 17, scope: !10023)
!10030 = !DILocation(line: 6362, column: 24, scope: !10023)
!10031 = !DILocation(line: 6363, column: 13, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 6363, column: 13)
!10033 = !DILocation(line: 6363, column: 20, scope: !10032)
!10034 = !DILocation(line: 6363, column: 13, scope: !10023)
!10035 = !DILocation(line: 6364, column: 4, scope: !10032)
!10036 = !DILocation(line: 6364, column: 10, scope: !10032)
!10037 = !DILocation(line: 6364, column: 17, scope: !10032)
!10038 = !DILocation(line: 6364, column: 24, scope: !10032)
!10039 = !DILocation(line: 6365, column: 13, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 6365, column: 13)
!10041 = !DILocation(line: 6365, column: 20, scope: !10040)
!10042 = !DILocation(line: 6365, column: 13, scope: !10032)
!10043 = !DILocation(line: 6366, column: 4, scope: !10040)
!10044 = !DILocation(line: 6366, column: 10, scope: !10040)
!10045 = !DILocation(line: 6366, column: 17, scope: !10040)
!10046 = !DILocation(line: 6366, column: 23, scope: !10040)
!10047 = !DILocation(line: 6368, column: 4, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 6367, column: 8)
!10049 = !DILocation(line: 6368, column: 10, scope: !10048)
!10050 = !DILocation(line: 6368, column: 17, scope: !10048)
!10051 = !DILocation(line: 6368, column: 22, scope: !10048)
!10052 = !DILocation(line: 6369, column: 9, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10048, file: !3, line: 6369, column: 9)
!10054 = !DILocation(line: 6369, column: 15, scope: !10053)
!10055 = !DILocation(line: 6369, column: 22, scope: !10053)
!10056 = !DILocation(line: 6369, column: 31, scope: !10053)
!10057 = !DILocation(line: 6369, column: 9, scope: !10048)
!10058 = !DILocation(line: 6370, column: 18, scope: !10053)
!10059 = !DILocation(line: 6370, column: 5, scope: !10053)
!10060 = !DILocation(line: 6372, column: 13, scope: !10024)
!10061 = !DILocation(line: 6375, column: 4, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 6374, column: 3)
!10063 = !DILocation(line: 6375, column: 10, scope: !10062)
!10064 = !DILocation(line: 6375, column: 18, scope: !10062)
!10065 = !DILocation(line: 6375, column: 24, scope: !10062)
!10066 = !DILocation(line: 6375, column: 33, scope: !10062)
!10067 = !DILocation(line: 6376, column: 4, scope: !10062)
!10068 = !DILocation(line: 6376, column: 10, scope: !10062)
!10069 = !DILocation(line: 6376, column: 18, scope: !10062)
!10070 = !DILocation(line: 6376, column: 24, scope: !10062)
!10071 = !DILocation(line: 6376, column: 39, scope: !10062)
!10072 = !DILocation(line: 6379, column: 2, scope: !10024)
!10073 = !DILocation(line: 6380, column: 16, scope: !10019)
!10074 = !DILocation(line: 6382, column: 7, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 6382, column: 7)
!10076 = !DILocation(line: 6382, column: 7, scope: !9892)
!10077 = !DILocation(line: 6389, column: 27, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 6382, column: 22)
!10079 = !DILocation(line: 6389, column: 33, scope: !10078)
!10080 = !DILocation(line: 6389, column: 48, scope: !10078)
!10081 = !DILocation(line: 6389, column: 58, scope: !10078)
!10082 = !DILocation(line: 6389, column: 25, scope: !10078)
!10083 = !DILocation(line: 6389, column: 13, scope: !10078)
!10084 = !DILocation(line: 6392, column: 8, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 6392, column: 8)
!10086 = !DILocation(line: 6392, column: 14, scope: !10085)
!10087 = !DILocation(line: 6392, column: 21, scope: !10085)
!10088 = !DILocation(line: 6392, column: 30, scope: !10085)
!10089 = !DILocation(line: 6392, column: 8, scope: !10078)
!10090 = !DILocation(line: 6393, column: 14, scope: !10085)
!10091 = !DILocation(line: 6393, column: 4, scope: !10085)
!10092 = !DILocation(line: 6394, column: 13, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 6394, column: 13)
!10094 = !DILocation(line: 6394, column: 19, scope: !10093)
!10095 = !DILocation(line: 6394, column: 26, scope: !10093)
!10096 = !DILocation(line: 6394, column: 35, scope: !10093)
!10097 = !DILocation(line: 6394, column: 13, scope: !10085)
!10098 = !DILocation(line: 6395, column: 14, scope: !10093)
!10099 = !DILocation(line: 6395, column: 4, scope: !10093)
!10100 = !DILocation(line: 6396, column: 2, scope: !10078)
!10101 = !DILocation(line: 6398, column: 7, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 6398, column: 7)
!10103 = !DILocation(line: 6398, column: 19, scope: !10102)
!10104 = !DILocation(line: 6398, column: 7, scope: !9892)
!10105 = !DILocation(line: 6400, column: 22, scope: !10102)
!10106 = !DILocation(line: 6400, column: 28, scope: !10102)
!10107 = !DILocation(line: 6400, column: 40, scope: !10102)
!10108 = !DILocation(line: 6400, column: 47, scope: !10102)
!10109 = !DILocation(line: 6399, column: 3, scope: !10102)
!10110 = !DILocation(line: 6402, column: 7, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 6402, column: 7)
!10112 = !DILocation(line: 6402, column: 19, scope: !10111)
!10113 = !DILocation(line: 6402, column: 7, scope: !9892)
!10114 = !DILocation(line: 6403, column: 20, scope: !10111)
!10115 = !DILocation(line: 6403, column: 25, scope: !10111)
!10116 = !DILocation(line: 6403, column: 31, scope: !10111)
!10117 = !DILocation(line: 6403, column: 46, scope: !10111)
!10118 = !DILocation(line: 6403, column: 58, scope: !10111)
!10119 = !DILocalVariable(name: "__UNIQUE_ID___x348", scope: !10120, file: !3, line: 6404, type: !32)
!10120 = distinct !DILexicalBlock(scope: !10111, file: !3, line: 6404, column: 4)
!10121 = !DILocation(line: 6404, column: 4, scope: !10120)
!10122 = !DILocalVariable(name: "__UNIQUE_ID___y349", scope: !10120, file: !3, line: 6404, type: !32)
!10123 = !DILocation(line: 6403, column: 3, scope: !10111)
!10124 = !DILocation(line: 6406, column: 6, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 6406, column: 6)
!10126 = !DILocation(line: 6406, column: 6, scope: !9892)
!10127 = !DILocation(line: 6407, column: 11, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 6407, column: 8)
!10129 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 6406, column: 17)
!10130 = !DILocation(line: 6407, column: 17, scope: !10128)
!10131 = !DILocation(line: 6407, column: 24, scope: !10128)
!10132 = !DILocation(line: 6407, column: 33, scope: !10128)
!10133 = !DILocation(line: 6407, column: 55, scope: !10128)
!10134 = !DILocation(line: 6408, column: 7, scope: !10128)
!10135 = !DILocation(line: 6408, column: 16, scope: !10128)
!10136 = !DILocation(line: 6408, column: 22, scope: !10128)
!10137 = !DILocation(line: 6408, column: 28, scope: !10128)
!10138 = !DILocation(line: 6408, column: 20, scope: !10128)
!10139 = !DILocation(line: 6408, column: 46, scope: !10128)
!10140 = !DILocation(line: 6409, column: 5, scope: !10128)
!10141 = !DILocation(line: 6409, column: 17, scope: !10128)
!10142 = !DILocation(line: 6409, column: 23, scope: !10128)
!10143 = !DILocation(line: 6409, column: 15, scope: !10128)
!10144 = !DILocation(line: 6407, column: 8, scope: !10129)
!10145 = !DILocation(line: 6410, column: 4, scope: !10128)
!10146 = !DILocation(line: 6410, column: 10, scope: !10128)
!10147 = !DILocation(line: 6410, column: 17, scope: !10128)
!10148 = !DILocation(line: 6410, column: 23, scope: !10128)
!10149 = !DILocalVariable(name: "copy_count", scope: !10150, file: !3, line: 6413, type: !32)
!10150 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 6411, column: 8)
!10151 = !DILocation(line: 6413, column: 8, scope: !10150)
!10152 = !DILocation(line: 6413, column: 21, scope: !10150)
!10153 = !DILocalVariable(name: "index", scope: !10150, file: !3, line: 6414, type: !32)
!10154 = !DILocation(line: 6414, column: 8, scope: !10150)
!10155 = !DILocation(line: 6414, column: 16, scope: !10150)
!10156 = !DILocalVariable(name: "ptmp", scope: !10150, file: !3, line: 6415, type: !564)
!10157 = !DILocation(line: 6415, column: 19, scope: !10150)
!10158 = !DILocation(line: 6415, column: 26, scope: !10150)
!10159 = !DILocation(line: 6415, column: 32, scope: !10150)
!10160 = !DILocation(line: 6417, column: 11, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 6417, column: 9)
!10162 = !DILocation(line: 6417, column: 18, scope: !10161)
!10163 = !DILocation(line: 6417, column: 9, scope: !10150)
!10164 = !DILocation(line: 6418, column: 5, scope: !10161)
!10165 = !DILocation(line: 6418, column: 11, scope: !10161)
!10166 = !DILocation(line: 6418, column: 18, scope: !10161)
!10167 = !DILocation(line: 6418, column: 22, scope: !10161)
!10168 = !DILocation(line: 6420, column: 4, scope: !10150)
!10169 = !DILocation(line: 6420, column: 10, scope: !10150)
!10170 = !DILocalVariable(name: "partial_count", scope: !10171, file: !3, line: 6421, type: !32)
!10171 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 6420, column: 22)
!10172 = !DILocation(line: 6421, column: 9, scope: !10171)
!10173 = !DILocation(line: 6422, column: 10, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 6422, column: 10)
!10175 = !DILocation(line: 6422, column: 21, scope: !10174)
!10176 = !DILocation(line: 6422, column: 10, scope: !10171)
!10177 = !DILocation(line: 6423, column: 20, scope: !10174)
!10178 = !DILocation(line: 6423, column: 6, scope: !10174)
!10179 = !DILocation(line: 6425, column: 22, scope: !10174)
!10180 = !DILocation(line: 6425, column: 20, scope: !10174)
!10181 = !DILocation(line: 6427, column: 19, scope: !10171)
!10182 = !DILocation(line: 6427, column: 25, scope: !10171)
!10183 = !DILocation(line: 6427, column: 40, scope: !10171)
!10184 = !DILocation(line: 6427, column: 15, scope: !10171)
!10185 = !DILocation(line: 6428, column: 13, scope: !10171)
!10186 = !DILocation(line: 6428, column: 19, scope: !10171)
!10187 = !DILocation(line: 6428, column: 30, scope: !10171)
!10188 = !DILocation(line: 6428, column: 41, scope: !10171)
!10189 = !DILocation(line: 6428, column: 5, scope: !10171)
!10190 = !DILocation(line: 6429, column: 13, scope: !10171)
!10191 = !DILocation(line: 6429, column: 10, scope: !10171)
!10192 = !DILocation(line: 6430, column: 19, scope: !10171)
!10193 = !DILocation(line: 6430, column: 16, scope: !10171)
!10194 = !DILocation(line: 6432, column: 10, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 6432, column: 10)
!10196 = !DILocation(line: 6432, column: 21, scope: !10195)
!10197 = !DILocation(line: 6432, column: 27, scope: !10195)
!10198 = !DILocation(line: 6432, column: 18, scope: !10195)
!10199 = !DILocation(line: 6432, column: 10, scope: !10171)
!10200 = !DILocation(line: 6433, column: 12, scope: !10195)
!10201 = !DILocation(line: 6433, column: 6, scope: !10195)
!10202 = distinct !{!10202, !10168, !10203}
!10203 = !DILocation(line: 6434, column: 4, scope: !10150)
!10204 = !DILocation(line: 6436, column: 9, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 6436, column: 9)
!10206 = !DILocation(line: 6436, column: 15, scope: !10205)
!10207 = !DILocation(line: 6436, column: 22, scope: !10205)
!10208 = !DILocation(line: 6436, column: 31, scope: !10205)
!10209 = !DILocation(line: 6436, column: 9, scope: !10150)
!10210 = !DILocation(line: 6437, column: 5, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 6436, column: 54)
!10212 = !DILocation(line: 6438, column: 14, scope: !10211)
!10213 = !DILocation(line: 6438, column: 21, scope: !10211)
!10214 = !DILocation(line: 6438, column: 13, scope: !10211)
!10215 = !DILocation(line: 6438, column: 6, scope: !10211)
!10216 = !DILocation(line: 6438, column: 11, scope: !10211)
!10217 = !DILocation(line: 6442, column: 10, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 6442, column: 10)
!10219 = !DILocation(line: 6442, column: 22, scope: !10218)
!10220 = !DILocation(line: 6442, column: 10, scope: !10211)
!10221 = !DILocation(line: 6444, column: 25, scope: !10218)
!10222 = !DILocation(line: 6444, column: 31, scope: !10218)
!10223 = !DILocation(line: 6445, column: 8, scope: !10218)
!10224 = !DILocation(line: 6445, column: 7, scope: !10218)
!10225 = !DILocation(line: 6443, column: 6, scope: !10218)
!10226 = !DILocation(line: 6446, column: 4, scope: !10211)
!10227 = !DILocation(line: 6449, column: 8, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 6449, column: 8)
!10229 = !DILocation(line: 6449, column: 14, scope: !10228)
!10230 = !DILocation(line: 6449, column: 8, scope: !10150)
!10231 = !DILocation(line: 6450, column: 16, scope: !10228)
!10232 = !DILocation(line: 6450, column: 21, scope: !10228)
!10233 = !DILocation(line: 6450, column: 27, scope: !10228)
!10234 = !DILocation(line: 6450, column: 49, scope: !10228)
!10235 = !DILocation(line: 6450, column: 5, scope: !10228)
!10236 = !DILocation(line: 6453, column: 23, scope: !10228)
!10237 = !DILocation(line: 6453, column: 28, scope: !10228)
!10238 = !DILocation(line: 6453, column: 34, scope: !10228)
!10239 = !DILocation(line: 6453, column: 57, scope: !10228)
!10240 = !DILocation(line: 6453, column: 63, scope: !10228)
!10241 = !DILocation(line: 6453, column: 73, scope: !10228)
!10242 = !DILocation(line: 6453, column: 5, scope: !10228)
!10243 = !DILocation(line: 6455, column: 2, scope: !10129)
!10244 = !DILocation(line: 6457, column: 30, scope: !9892)
!10245 = !DILocation(line: 6457, column: 36, scope: !9892)
!10246 = !DILocation(line: 6457, column: 48, scope: !9892)
!10247 = !DILocation(line: 6457, column: 2, scope: !9892)
!10248 = !DILocation(line: 6459, column: 13, scope: !9892)
!10249 = !DILocation(line: 6459, column: 2, scope: !9892)
!10250 = !DILabel(scope: !9892, name: "Cleanup", file: !3, line: 6461)
!10251 = !DILocation(line: 6461, column: 1, scope: !9892)
!10252 = !DILocation(line: 6463, column: 7, scope: !9903)
!10253 = !DILocation(line: 6463, column: 13, scope: !9903)
!10254 = !DILocation(line: 6463, column: 24, scope: !9903)
!10255 = !DILocation(line: 6463, column: 27, scope: !9903)
!10256 = !DILocation(line: 6463, column: 33, scope: !9903)
!10257 = !DILocation(line: 6463, column: 7, scope: !9892)
!10258 = !DILocation(line: 6469, column: 9, scope: !9901)
!10259 = !DILocation(line: 6469, column: 15, scope: !9901)
!10260 = !DILocation(line: 6469, column: 30, scope: !9901)
!10261 = !DILocation(line: 6469, column: 40, scope: !9901)
!10262 = !DILocation(line: 6469, column: 47, scope: !9901)
!10263 = !DILocation(line: 6470, column: 4, scope: !9901)
!10264 = !DILocation(line: 6470, column: 10, scope: !9901)
!10265 = !DILocation(line: 6470, column: 25, scope: !9901)
!10266 = !DILocation(line: 6470, column: 35, scope: !9901)
!10267 = !DILocation(line: 6469, column: 8, scope: !9902)
!10268 = !DILocation(line: 6471, column: 4, scope: !9900)
!10269 = !DILocation(line: 6471, column: 4, scope: !9899)
!10270 = !DILocalVariable(name: "__dummy", scope: !10271, file: !3, line: 6471, type: !312)
!10271 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 6471, column: 4)
!10272 = !DILocation(line: 6471, column: 4, scope: !10271)
!10273 = !DILocalVariable(name: "__dummy2", scope: !10271, file: !3, line: 6471, type: !312)
!10274 = !DILocation(line: 6471, column: 4, scope: !9898)
!10275 = !DILocation(line: 6471, column: 4, scope: !9897)
!10276 = !DILocation(line: 6471, column: 4, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 6471, column: 4)
!10278 = !DILocalVariable(name: "__dummy", scope: !10279, file: !3, line: 6471, type: !312)
!10279 = distinct !DILexicalBlock(scope: !10280, file: !3, line: 6471, column: 4)
!10280 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 6471, column: 4)
!10281 = !DILocation(line: 6471, column: 4, scope: !10279)
!10282 = !DILocalVariable(name: "__dummy2", scope: !10279, file: !3, line: 6471, type: !312)
!10283 = !DILocation(line: 6471, column: 4, scope: !10280)
!10284 = !DILocation(line: 6471, column: 4, scope: !9896)
!10285 = !{i32 -2139351389}
!10286 = !DILocation(line: 6471, column: 4, scope: !9895)
!10287 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !9894)
!10288 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !9894)
!10289 = !DILocation(line: 6472, column: 23, scope: !9900)
!10290 = !DILocation(line: 6472, column: 4, scope: !9900)
!10291 = !DILocation(line: 6473, column: 28, scope: !9900)
!10292 = !DILocation(line: 6473, column: 34, scope: !9900)
!10293 = !DILocation(line: 6473, column: 47, scope: !9900)
!10294 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !9913)
!10295 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !9913)
!10296 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !9913)
!10297 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !9913)
!10298 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !9913)
!10299 = !DILocation(line: 6474, column: 3, scope: !9900)
!10300 = !DILocation(line: 6475, column: 2, scope: !9902)
!10301 = !DILocation(line: 6477, column: 9, scope: !9892)
!10302 = !DILocation(line: 6477, column: 2, scope: !9892)
!10303 = distinct !DISubprogram(name: "mgsl_get_raw_rx_frame", scope: !3, file: !3, line: 6500, type: !8190, scopeLine: 6501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10304 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !10305)
!10305 = distinct !DILocation(line: 6645, column: 4, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 6642, column: 47)
!10307 = distinct !DILexicalBlock(scope: !10308, file: !3, line: 6641, column: 8)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !3, line: 6635, column: 47)
!10309 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 6635, column: 7)
!10310 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !10305)
!10311 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !10312)
!10312 = distinct !DILocation(line: 6643, column: 4, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10314, file: !3, line: 6643, column: 4)
!10314 = distinct !DILexicalBlock(scope: !10315, file: !3, line: 6643, column: 4)
!10315 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 6643, column: 4)
!10316 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 6643, column: 4)
!10317 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 6643, column: 4)
!10318 = !DILocalVariable(name: "info", arg: 1, scope: !10303, file: !3, line: 6500, type: !7524)
!10319 = !DILocation(line: 6500, column: 55, scope: !10303)
!10320 = !DILocalVariable(name: "CurrentIndex", scope: !10303, file: !3, line: 6502, type: !7)
!10321 = !DILocation(line: 6502, column: 15, scope: !10303)
!10322 = !DILocalVariable(name: "NextIndex", scope: !10303, file: !3, line: 6502, type: !7)
!10323 = !DILocation(line: 6502, column: 29, scope: !10303)
!10324 = !DILocalVariable(name: "status", scope: !10303, file: !3, line: 6503, type: !476)
!10325 = !DILocation(line: 6503, column: 17, scope: !10303)
!10326 = !DILocalVariable(name: "pBufEntry", scope: !10303, file: !3, line: 6504, type: !7588)
!10327 = !DILocation(line: 6504, column: 18, scope: !10303)
!10328 = !DILocalVariable(name: "framesize", scope: !10303, file: !3, line: 6505, type: !7)
!10329 = !DILocation(line: 6505, column: 15, scope: !10303)
!10330 = !DILocalVariable(name: "ReturnCode", scope: !10303, file: !3, line: 6506, type: !771)
!10331 = !DILocation(line: 6506, column: 7, scope: !10303)
!10332 = !DILocalVariable(name: "flags", scope: !10303, file: !3, line: 6507, type: !312)
!10333 = !DILocation(line: 6507, column: 16, scope: !10303)
!10334 = !DILocalVariable(name: "tty", scope: !10303, file: !3, line: 6508, type: !3760)
!10335 = !DILocation(line: 6508, column: 21, scope: !10303)
!10336 = !DILocation(line: 6508, column: 27, scope: !10303)
!10337 = !DILocation(line: 6508, column: 33, scope: !10303)
!10338 = !DILocation(line: 6508, column: 38, scope: !10303)
!10339 = !DILocation(line: 6525, column: 29, scope: !10303)
!10340 = !DILocation(line: 6525, column: 35, scope: !10303)
!10341 = !DILocation(line: 6525, column: 27, scope: !10303)
!10342 = !DILocation(line: 6525, column: 15, scope: !10303)
!10343 = !DILocation(line: 6526, column: 2, scope: !10303)
!10344 = !DILocation(line: 6527, column: 7, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 6527, column: 7)
!10346 = !DILocation(line: 6527, column: 20, scope: !10345)
!10347 = !DILocation(line: 6527, column: 26, scope: !10345)
!10348 = !DILocation(line: 6527, column: 17, scope: !10345)
!10349 = !DILocation(line: 6527, column: 7, scope: !10303)
!10350 = !DILocation(line: 6528, column: 13, scope: !10345)
!10351 = !DILocation(line: 6528, column: 3, scope: !10345)
!10352 = !DILocation(line: 6530, column: 7, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 6530, column: 7)
!10354 = !DILocation(line: 6530, column: 13, scope: !10353)
!10355 = !DILocation(line: 6530, column: 28, scope: !10353)
!10356 = !DILocation(line: 6530, column: 42, scope: !10353)
!10357 = !DILocation(line: 6530, column: 49, scope: !10353)
!10358 = !DILocation(line: 6530, column: 54, scope: !10353)
!10359 = !DILocation(line: 6531, column: 4, scope: !10353)
!10360 = !DILocation(line: 6531, column: 10, scope: !10353)
!10361 = !DILocation(line: 6531, column: 25, scope: !10353)
!10362 = !DILocation(line: 6531, column: 39, scope: !10353)
!10363 = !DILocation(line: 6531, column: 45, scope: !10353)
!10364 = !DILocation(line: 6531, column: 50, scope: !10353)
!10365 = !DILocation(line: 6532, column: 4, scope: !10353)
!10366 = !DILocation(line: 6532, column: 10, scope: !10353)
!10367 = !DILocation(line: 6532, column: 25, scope: !10353)
!10368 = !DILocation(line: 6532, column: 36, scope: !10353)
!10369 = !DILocation(line: 6532, column: 42, scope: !10353)
!10370 = !DILocation(line: 6530, column: 7, scope: !10303)
!10371 = !DILocation(line: 6540, column: 12, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 6532, column: 49)
!10373 = !DILocation(line: 6540, column: 18, scope: !10372)
!10374 = !DILocation(line: 6540, column: 33, scope: !10372)
!10375 = !DILocation(line: 6540, column: 47, scope: !10372)
!10376 = !DILocation(line: 6540, column: 10, scope: !10372)
!10377 = !DILocation(line: 6542, column: 8, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 6542, column: 8)
!10379 = !DILocation(line: 6542, column: 15, scope: !10378)
!10380 = !DILocation(line: 6542, column: 8, scope: !10372)
!10381 = !DILocation(line: 6544, column: 9, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 6544, column: 9)
!10383 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 6543, column: 44)
!10384 = !DILocation(line: 6544, column: 16, scope: !10382)
!10385 = !DILocation(line: 6544, column: 9, scope: !10383)
!10386 = !DILocation(line: 6545, column: 5, scope: !10382)
!10387 = !DILocation(line: 6545, column: 11, scope: !10382)
!10388 = !DILocation(line: 6545, column: 18, scope: !10382)
!10389 = !DILocation(line: 6545, column: 25, scope: !10382)
!10390 = !DILocation(line: 6546, column: 14, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10382, file: !3, line: 6546, column: 14)
!10392 = !DILocation(line: 6546, column: 21, scope: !10391)
!10393 = !DILocation(line: 6546, column: 14, scope: !10382)
!10394 = !DILocation(line: 6547, column: 5, scope: !10391)
!10395 = !DILocation(line: 6547, column: 11, scope: !10391)
!10396 = !DILocation(line: 6547, column: 18, scope: !10391)
!10397 = !DILocation(line: 6547, column: 25, scope: !10391)
!10398 = !DILocation(line: 6548, column: 14, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 6548, column: 14)
!10400 = !DILocation(line: 6548, column: 21, scope: !10399)
!10401 = !DILocation(line: 6548, column: 14, scope: !10391)
!10402 = !DILocation(line: 6549, column: 5, scope: !10399)
!10403 = !DILocation(line: 6549, column: 11, scope: !10399)
!10404 = !DILocation(line: 6549, column: 18, scope: !10399)
!10405 = !DILocation(line: 6549, column: 24, scope: !10399)
!10406 = !DILocation(line: 6551, column: 5, scope: !10399)
!10407 = !DILocation(line: 6551, column: 11, scope: !10399)
!10408 = !DILocation(line: 6551, column: 18, scope: !10399)
!10409 = !DILocation(line: 6551, column: 23, scope: !10399)
!10410 = !DILocation(line: 6552, column: 14, scope: !10383)
!10411 = !DILocation(line: 6553, column: 3, scope: !10383)
!10412 = !DILocation(line: 6577, column: 9, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 6577, column: 9)
!10414 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 6553, column: 10)
!10415 = !DILocation(line: 6577, column: 9, scope: !10414)
!10416 = !DILocation(line: 6589, column: 10, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 6589, column: 10)
!10418 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 6577, column: 18)
!10419 = !DILocation(line: 6589, column: 16, scope: !10417)
!10420 = !DILocation(line: 6589, column: 31, scope: !10417)
!10421 = !DILocation(line: 6589, column: 45, scope: !10417)
!10422 = !DILocation(line: 6589, column: 10, scope: !10418)
!10423 = !DILocation(line: 6590, column: 30, scope: !10417)
!10424 = !DILocation(line: 6590, column: 36, scope: !10417)
!10425 = !DILocation(line: 6590, column: 51, scope: !10417)
!10426 = !DILocation(line: 6590, column: 65, scope: !10417)
!10427 = !DILocation(line: 6590, column: 28, scope: !10417)
!10428 = !DILocation(line: 6590, column: 16, scope: !10417)
!10429 = !DILocation(line: 6590, column: 6, scope: !10417)
!10430 = !DILocation(line: 6592, column: 16, scope: !10417)
!10431 = !DILocation(line: 6593, column: 4, scope: !10418)
!10432 = !DILocation(line: 6595, column: 15, scope: !10413)
!10433 = !DILocation(line: 6598, column: 8, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 6598, column: 8)
!10435 = !DILocation(line: 6598, column: 18, scope: !10434)
!10436 = !DILocation(line: 6598, column: 8, scope: !10372)
!10437 = !DILocation(line: 6605, column: 16, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 6598, column: 36)
!10439 = !DILocation(line: 6605, column: 26, scope: !10438)
!10440 = !DILocation(line: 6605, column: 14, scope: !10438)
!10441 = !DILocation(line: 6606, column: 3, scope: !10438)
!10442 = !DILocation(line: 6609, column: 8, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 6609, column: 8)
!10444 = !DILocation(line: 6609, column: 20, scope: !10443)
!10445 = !DILocation(line: 6609, column: 8, scope: !10372)
!10446 = !DILocation(line: 6611, column: 23, scope: !10443)
!10447 = !DILocation(line: 6611, column: 29, scope: !10443)
!10448 = !DILocation(line: 6611, column: 41, scope: !10443)
!10449 = !DILocation(line: 6611, column: 48, scope: !10443)
!10450 = !DILocation(line: 6610, column: 4, scope: !10443)
!10451 = !DILocation(line: 6613, column: 8, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 6613, column: 8)
!10453 = !DILocation(line: 6613, column: 20, scope: !10452)
!10454 = !DILocation(line: 6613, column: 8, scope: !10372)
!10455 = !DILocation(line: 6614, column: 21, scope: !10452)
!10456 = !DILocation(line: 6614, column: 26, scope: !10452)
!10457 = !DILocation(line: 6614, column: 32, scope: !10452)
!10458 = !DILocation(line: 6614, column: 47, scope: !10452)
!10459 = !DILocation(line: 6614, column: 61, scope: !10452)
!10460 = !DILocalVariable(name: "__UNIQUE_ID___x350", scope: !10461, file: !3, line: 6615, type: !32)
!10461 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 6615, column: 5)
!10462 = !DILocation(line: 6615, column: 5, scope: !10461)
!10463 = !DILocalVariable(name: "__UNIQUE_ID___y351", scope: !10461, file: !3, line: 6615, type: !32)
!10464 = !DILocation(line: 6614, column: 4, scope: !10452)
!10465 = !DILocation(line: 6617, column: 7, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 6617, column: 7)
!10467 = !DILocation(line: 6617, column: 7, scope: !10372)
!10468 = !DILocation(line: 6621, column: 18, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10466, file: !3, line: 6617, column: 18)
!10470 = !DILocation(line: 6621, column: 24, scope: !10469)
!10471 = !DILocation(line: 6621, column: 39, scope: !10469)
!10472 = !DILocation(line: 6621, column: 14, scope: !10469)
!10473 = !DILocation(line: 6622, column: 12, scope: !10469)
!10474 = !DILocation(line: 6622, column: 18, scope: !10469)
!10475 = !DILocation(line: 6622, column: 41, scope: !10469)
!10476 = !DILocation(line: 6622, column: 52, scope: !10469)
!10477 = !DILocation(line: 6622, column: 63, scope: !10469)
!10478 = !DILocation(line: 6622, column: 4, scope: !10469)
!10479 = !DILocation(line: 6623, column: 4, scope: !10469)
!10480 = !DILocation(line: 6623, column: 10, scope: !10469)
!10481 = !DILocation(line: 6623, column: 17, scope: !10469)
!10482 = !DILocation(line: 6623, column: 21, scope: !10469)
!10483 = !DILocation(line: 6625, column: 22, scope: !10469)
!10484 = !DILocation(line: 6625, column: 27, scope: !10469)
!10485 = !DILocation(line: 6625, column: 33, scope: !10469)
!10486 = !DILocation(line: 6625, column: 56, scope: !10469)
!10487 = !DILocation(line: 6625, column: 62, scope: !10469)
!10488 = !DILocation(line: 6625, column: 72, scope: !10469)
!10489 = !DILocation(line: 6625, column: 4, scope: !10469)
!10490 = !DILocation(line: 6626, column: 3, scope: !10469)
!10491 = !DILocation(line: 6629, column: 31, scope: !10372)
!10492 = !DILocation(line: 6629, column: 37, scope: !10372)
!10493 = !DILocation(line: 6629, column: 51, scope: !10372)
!10494 = !DILocation(line: 6629, column: 3, scope: !10372)
!10495 = !DILocation(line: 6631, column: 14, scope: !10372)
!10496 = !DILocation(line: 6632, column: 2, scope: !10372)
!10497 = !DILocation(line: 6635, column: 7, scope: !10309)
!10498 = !DILocation(line: 6635, column: 13, scope: !10309)
!10499 = !DILocation(line: 6635, column: 24, scope: !10309)
!10500 = !DILocation(line: 6635, column: 27, scope: !10309)
!10501 = !DILocation(line: 6635, column: 33, scope: !10309)
!10502 = !DILocation(line: 6635, column: 7, scope: !10303)
!10503 = !DILocation(line: 6641, column: 9, scope: !10307)
!10504 = !DILocation(line: 6641, column: 15, scope: !10307)
!10505 = !DILocation(line: 6641, column: 30, scope: !10307)
!10506 = !DILocation(line: 6641, column: 44, scope: !10307)
!10507 = !DILocation(line: 6641, column: 51, scope: !10307)
!10508 = !DILocation(line: 6642, column: 4, scope: !10307)
!10509 = !DILocation(line: 6642, column: 10, scope: !10307)
!10510 = !DILocation(line: 6642, column: 25, scope: !10307)
!10511 = !DILocation(line: 6642, column: 39, scope: !10307)
!10512 = !DILocation(line: 6641, column: 8, scope: !10308)
!10513 = !DILocation(line: 6643, column: 4, scope: !10306)
!10514 = !DILocation(line: 6643, column: 4, scope: !10317)
!10515 = !DILocalVariable(name: "__dummy", scope: !10516, file: !3, line: 6643, type: !312)
!10516 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 6643, column: 4)
!10517 = !DILocation(line: 6643, column: 4, scope: !10516)
!10518 = !DILocalVariable(name: "__dummy2", scope: !10516, file: !3, line: 6643, type: !312)
!10519 = !DILocation(line: 6643, column: 4, scope: !10316)
!10520 = !DILocation(line: 6643, column: 4, scope: !10315)
!10521 = !DILocation(line: 6643, column: 4, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10315, file: !3, line: 6643, column: 4)
!10523 = !DILocalVariable(name: "__dummy", scope: !10524, file: !3, line: 6643, type: !312)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 6643, column: 4)
!10525 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 6643, column: 4)
!10526 = !DILocation(line: 6643, column: 4, scope: !10524)
!10527 = !DILocalVariable(name: "__dummy2", scope: !10524, file: !3, line: 6643, type: !312)
!10528 = !DILocation(line: 6643, column: 4, scope: !10525)
!10529 = !DILocation(line: 6643, column: 4, scope: !10314)
!10530 = !{i32 -2139348531}
!10531 = !DILocation(line: 6643, column: 4, scope: !10313)
!10532 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !10312)
!10533 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !10312)
!10534 = !DILocation(line: 6644, column: 23, scope: !10306)
!10535 = !DILocation(line: 6644, column: 4, scope: !10306)
!10536 = !DILocation(line: 6645, column: 28, scope: !10306)
!10537 = !DILocation(line: 6645, column: 34, scope: !10306)
!10538 = !DILocation(line: 6645, column: 47, scope: !10306)
!10539 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !10305)
!10540 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !10305)
!10541 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !10305)
!10542 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !10305)
!10543 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !10305)
!10544 = !DILocation(line: 6646, column: 3, scope: !10306)
!10545 = !DILocation(line: 6647, column: 2, scope: !10308)
!10546 = !DILocation(line: 6649, column: 9, scope: !10303)
!10547 = !DILocation(line: 6649, column: 2, scope: !10303)
!10548 = distinct !DISubprogram(name: "usc_start_receiver", scope: !3, file: !3, line: 5312, type: !8185, scopeLine: 5313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10549 = !DILocalVariable(name: "info", arg: 1, scope: !10548, file: !3, line: 5312, type: !7524)
!10550 = !DILocation(line: 5312, column: 53, scope: !10548)
!10551 = !DILocalVariable(name: "phys_addr", scope: !10548, file: !3, line: 5314, type: !987)
!10552 = !DILocation(line: 5314, column: 6, scope: !10548)
!10553 = !DILocation(line: 5316, column: 6, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 5316, column: 6)
!10555 = !DILocation(line: 5316, column: 18, scope: !10554)
!10556 = !DILocation(line: 5316, column: 6, scope: !10548)
!10557 = !DILocation(line: 5318, column: 24, scope: !10554)
!10558 = !DILocation(line: 5318, column: 30, scope: !10554)
!10559 = !DILocation(line: 5317, column: 3, scope: !10554)
!10560 = !DILocation(line: 5320, column: 29, scope: !10548)
!10561 = !DILocation(line: 5320, column: 2, scope: !10548)
!10562 = !DILocation(line: 5321, column: 21, scope: !10548)
!10563 = !DILocation(line: 5321, column: 2, scope: !10548)
!10564 = !DILocation(line: 5323, column: 14, scope: !10548)
!10565 = !DILocation(line: 5323, column: 42, scope: !10548)
!10566 = !DILocation(line: 5323, column: 32, scope: !10548)
!10567 = !DILocation(line: 5323, column: 53, scope: !10548)
!10568 = !DILocation(line: 5323, column: 26, scope: !10548)
!10569 = !DILocation(line: 5323, column: 2, scope: !10548)
!10570 = !DILocation(line: 5324, column: 13, scope: !10548)
!10571 = !DILocation(line: 5324, column: 2, scope: !10548)
!10572 = !DILocation(line: 5326, column: 7, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 5326, column: 7)
!10574 = !DILocation(line: 5326, column: 13, scope: !10573)
!10575 = !DILocation(line: 5326, column: 20, scope: !10573)
!10576 = !DILocation(line: 5326, column: 25, scope: !10573)
!10577 = !DILocation(line: 5326, column: 43, scope: !10573)
!10578 = !DILocation(line: 5327, column: 3, scope: !10573)
!10579 = !DILocation(line: 5327, column: 9, scope: !10573)
!10580 = !DILocation(line: 5327, column: 16, scope: !10573)
!10581 = !DILocation(line: 5327, column: 21, scope: !10573)
!10582 = !DILocation(line: 5326, column: 7, scope: !10548)
!10583 = !DILocation(line: 5333, column: 15, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10573, file: !3, line: 5327, column: 40)
!10585 = !DILocation(line: 5333, column: 21, scope: !10584)
!10586 = !DILocation(line: 5333, column: 39, scope: !10584)
!10587 = !DILocation(line: 5333, column: 13, scope: !10584)
!10588 = !DILocation(line: 5334, column: 18, scope: !10584)
!10589 = !DILocation(line: 5334, column: 36, scope: !10584)
!10590 = !DILocation(line: 5334, column: 31, scope: !10584)
!10591 = !DILocation(line: 5334, column: 3, scope: !10584)
!10592 = !DILocation(line: 5335, column: 18, scope: !10584)
!10593 = !DILocation(line: 5335, column: 37, scope: !10584)
!10594 = !DILocation(line: 5335, column: 47, scope: !10584)
!10595 = !DILocation(line: 5335, column: 31, scope: !10584)
!10596 = !DILocation(line: 5335, column: 3, scope: !10584)
!10597 = !DILocation(line: 5337, column: 3, scope: !10584)
!10598 = !DILocation(line: 5338, column: 3, scope: !10584)
!10599 = !DILocation(line: 5339, column: 3, scope: !10584)
!10600 = !DILocation(line: 5344, column: 18, scope: !10584)
!10601 = !DILocation(line: 5344, column: 3, scope: !10584)
!10602 = !DILocation(line: 5345, column: 18, scope: !10584)
!10603 = !DILocation(line: 5345, column: 49, scope: !10584)
!10604 = !DILocation(line: 5345, column: 36, scope: !10584)
!10605 = !DILocation(line: 5345, column: 60, scope: !10584)
!10606 = !DILocation(line: 5345, column: 30, scope: !10584)
!10607 = !DILocation(line: 5345, column: 3, scope: !10584)
!10608 = !DILocation(line: 5346, column: 15, scope: !10584)
!10609 = !DILocation(line: 5346, column: 3, scope: !10584)
!10610 = !DILocation(line: 5347, column: 8, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 5347, column: 8)
!10612 = !DILocation(line: 5347, column: 14, scope: !10611)
!10613 = !DILocation(line: 5347, column: 21, scope: !10611)
!10614 = !DILocation(line: 5347, column: 27, scope: !10611)
!10615 = !DILocation(line: 5347, column: 8, scope: !10584)
!10616 = !DILocation(line: 5348, column: 4, scope: !10611)
!10617 = !DILocation(line: 5350, column: 4, scope: !10611)
!10618 = !DILocation(line: 5351, column: 2, scope: !10584)
!10619 = !DILocation(line: 5352, column: 3, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10573, file: !3, line: 5351, column: 9)
!10621 = !DILocation(line: 5353, column: 3, scope: !10620)
!10622 = !DILocation(line: 5354, column: 3, scope: !10620)
!10623 = !DILocation(line: 5356, column: 14, scope: !10620)
!10624 = !DILocation(line: 5356, column: 3, scope: !10620)
!10625 = !DILocation(line: 5357, column: 3, scope: !10620)
!10626 = !DILocation(line: 5359, column: 3, scope: !10620)
!10627 = !DILocation(line: 5362, column: 14, scope: !10548)
!10628 = !DILocation(line: 5362, column: 2, scope: !10548)
!10629 = !DILocation(line: 5364, column: 2, scope: !10548)
!10630 = !DILocation(line: 5364, column: 8, scope: !10548)
!10631 = !DILocation(line: 5364, column: 19, scope: !10548)
!10632 = !DILocation(line: 5366, column: 1, scope: !10548)
!10633 = distinct !DISubprogram(name: "mgsl_trace_block", scope: !3, file: !3, line: 7281, type: !10634, scopeLine: 7282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10634 = !DISubroutineType(types: !10635)
!10635 = !{null, !7524, !292, !32, !32}
!10636 = !DILocalVariable(name: "info", arg: 1, scope: !10633, file: !3, line: 7281, type: !7524)
!10637 = !DILocation(line: 7281, column: 50, scope: !10633)
!10638 = !DILocalVariable(name: "data", arg: 2, scope: !10633, file: !3, line: 7281, type: !292)
!10639 = !DILocation(line: 7281, column: 67, scope: !10633)
!10640 = !DILocalVariable(name: "count", arg: 3, scope: !10633, file: !3, line: 7281, type: !32)
!10641 = !DILocation(line: 7281, column: 77, scope: !10633)
!10642 = !DILocalVariable(name: "xmit", arg: 4, scope: !10633, file: !3, line: 7281, type: !32)
!10643 = !DILocation(line: 7281, column: 88, scope: !10633)
!10644 = !DILocalVariable(name: "i", scope: !10633, file: !3, line: 7283, type: !32)
!10645 = !DILocation(line: 7283, column: 6, scope: !10633)
!10646 = !DILocalVariable(name: "linecount", scope: !10633, file: !3, line: 7284, type: !32)
!10647 = !DILocation(line: 7284, column: 6, scope: !10633)
!10648 = !DILocation(line: 7285, column: 6, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10633, file: !3, line: 7285, column: 6)
!10650 = !DILocation(line: 7285, column: 6, scope: !10633)
!10651 = !DILocation(line: 7286, column: 26, scope: !10649)
!10652 = !DILocation(line: 7286, column: 32, scope: !10649)
!10653 = !DILocation(line: 7286, column: 3, scope: !10649)
!10654 = !DILocation(line: 7288, column: 26, scope: !10649)
!10655 = !DILocation(line: 7288, column: 32, scope: !10649)
!10656 = !DILocation(line: 7288, column: 3, scope: !10649)
!10657 = !DILocation(line: 7290, column: 2, scope: !10633)
!10658 = !DILocation(line: 7290, column: 8, scope: !10633)
!10659 = !DILocation(line: 7291, column: 7, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 7291, column: 7)
!10661 = distinct !DILexicalBlock(scope: !10633, file: !3, line: 7290, column: 15)
!10662 = !DILocation(line: 7291, column: 13, scope: !10660)
!10663 = !DILocation(line: 7291, column: 7, scope: !10661)
!10664 = !DILocation(line: 7292, column: 14, scope: !10660)
!10665 = !DILocation(line: 7292, column: 4, scope: !10660)
!10666 = !DILocation(line: 7294, column: 16, scope: !10660)
!10667 = !DILocation(line: 7294, column: 14, scope: !10660)
!10668 = !DILocation(line: 7296, column: 8, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 7296, column: 3)
!10670 = !DILocation(line: 7296, column: 7, scope: !10669)
!10671 = !DILocation(line: 7296, column: 11, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 7296, column: 3)
!10673 = !DILocation(line: 7296, column: 13, scope: !10672)
!10674 = !DILocation(line: 7296, column: 12, scope: !10672)
!10675 = !DILocation(line: 7296, column: 3, scope: !10669)
!10676 = !DILocation(line: 7297, column: 34, scope: !10672)
!10677 = !DILocation(line: 7297, column: 39, scope: !10672)
!10678 = !DILocation(line: 7297, column: 19, scope: !10672)
!10679 = !DILocation(line: 7297, column: 4, scope: !10672)
!10680 = !DILocation(line: 7296, column: 24, scope: !10672)
!10681 = !DILocation(line: 7296, column: 3, scope: !10672)
!10682 = distinct !{!10682, !10675, !10683}
!10683 = !DILocation(line: 7297, column: 41, scope: !10669)
!10684 = !DILocation(line: 7298, column: 3, scope: !10661)
!10685 = !DILocation(line: 7298, column: 8, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !3, line: 7298, column: 3)
!10687 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 7298, column: 3)
!10688 = !DILocation(line: 7298, column: 9, scope: !10686)
!10689 = !DILocation(line: 7298, column: 3, scope: !10687)
!10690 = !DILocation(line: 7299, column: 4, scope: !10686)
!10691 = !DILocation(line: 7298, column: 14, scope: !10686)
!10692 = !DILocation(line: 7298, column: 3, scope: !10686)
!10693 = distinct !{!10693, !10689, !10694}
!10694 = !DILocation(line: 7299, column: 16, scope: !10687)
!10695 = !DILocation(line: 7300, column: 8, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 7300, column: 3)
!10697 = !DILocation(line: 7300, column: 7, scope: !10696)
!10698 = !DILocation(line: 7300, column: 11, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 7300, column: 3)
!10700 = !DILocation(line: 7300, column: 13, scope: !10699)
!10701 = !DILocation(line: 7300, column: 12, scope: !10699)
!10702 = !DILocation(line: 7300, column: 3, scope: !10696)
!10703 = !DILocation(line: 7301, column: 8, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10705, file: !3, line: 7301, column: 8)
!10705 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 7300, column: 28)
!10706 = !DILocation(line: 7301, column: 13, scope: !10704)
!10707 = !DILocation(line: 7301, column: 15, scope: !10704)
!10708 = !DILocation(line: 7301, column: 21, scope: !10704)
!10709 = !DILocation(line: 7301, column: 24, scope: !10704)
!10710 = !DILocation(line: 7301, column: 29, scope: !10704)
!10711 = !DILocation(line: 7301, column: 31, scope: !10704)
!10712 = !DILocation(line: 7301, column: 8, scope: !10705)
!10713 = !DILocation(line: 7302, column: 17, scope: !10704)
!10714 = !DILocation(line: 7302, column: 22, scope: !10704)
!10715 = !DILocation(line: 7302, column: 5, scope: !10704)
!10716 = !DILocation(line: 7304, column: 5, scope: !10704)
!10717 = !DILocation(line: 7305, column: 3, scope: !10705)
!10718 = !DILocation(line: 7300, column: 24, scope: !10699)
!10719 = !DILocation(line: 7300, column: 3, scope: !10699)
!10720 = distinct !{!10720, !10702, !10721}
!10721 = !DILocation(line: 7305, column: 3, scope: !10696)
!10722 = !DILocation(line: 7306, column: 3, scope: !10661)
!10723 = !DILocation(line: 7308, column: 12, scope: !10661)
!10724 = !DILocation(line: 7308, column: 9, scope: !10661)
!10725 = !DILocation(line: 7309, column: 12, scope: !10661)
!10726 = !DILocation(line: 7309, column: 9, scope: !10661)
!10727 = distinct !{!10727, !10657, !10728}
!10728 = !DILocation(line: 7310, column: 2, scope: !10633)
!10729 = !DILocation(line: 7311, column: 1, scope: !10633)
!10730 = distinct !DISubprogram(name: "hdlcdev_rx", scope: !3, file: !3, line: 7745, type: !10731, scopeLine: 7746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10731 = !DISubroutineType(types: !10732)
!10732 = !{null, !7524, !1038, !32}
!10733 = !DILocalVariable(name: "info", arg: 1, scope: !10730, file: !3, line: 7745, type: !7524)
!10734 = !DILocation(line: 7745, column: 44, scope: !10730)
!10735 = !DILocalVariable(name: "buf", arg: 2, scope: !10730, file: !3, line: 7745, type: !1038)
!10736 = !DILocation(line: 7745, column: 56, scope: !10730)
!10737 = !DILocalVariable(name: "size", arg: 3, scope: !10730, file: !3, line: 7745, type: !32)
!10738 = !DILocation(line: 7745, column: 65, scope: !10730)
!10739 = !DILocalVariable(name: "skb", scope: !10730, file: !3, line: 7747, type: !415)
!10740 = !DILocation(line: 7747, column: 18, scope: !10730)
!10741 = !DILocation(line: 7747, column: 38, scope: !10730)
!10742 = !DILocation(line: 7747, column: 24, scope: !10730)
!10743 = !DILocalVariable(name: "dev", scope: !10730, file: !3, line: 7748, type: !290)
!10744 = !DILocation(line: 7748, column: 21, scope: !10730)
!10745 = !DILocation(line: 7748, column: 27, scope: !10730)
!10746 = !DILocation(line: 7748, column: 33, scope: !10730)
!10747 = !DILocation(line: 7750, column: 6, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 7750, column: 6)
!10749 = !DILocation(line: 7750, column: 18, scope: !10748)
!10750 = !DILocation(line: 7750, column: 6, scope: !10730)
!10751 = !DILocation(line: 7751, column: 30, scope: !10748)
!10752 = !DILocation(line: 7751, column: 35, scope: !10748)
!10753 = !DILocation(line: 7751, column: 3, scope: !10748)
!10754 = !DILocation(line: 7753, column: 6, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 7753, column: 6)
!10756 = !DILocation(line: 7753, column: 10, scope: !10755)
!10757 = !DILocation(line: 7753, column: 6, scope: !10730)
!10758 = !DILocation(line: 7755, column: 10, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10755, file: !3, line: 7753, column: 19)
!10760 = !DILocation(line: 7755, column: 15, scope: !10759)
!10761 = !DILocation(line: 7754, column: 3, scope: !10759)
!10762 = !DILocation(line: 7756, column: 3, scope: !10759)
!10763 = !DILocation(line: 7756, column: 8, scope: !10759)
!10764 = !DILocation(line: 7756, column: 14, scope: !10759)
!10765 = !DILocation(line: 7756, column: 24, scope: !10759)
!10766 = !DILocation(line: 7757, column: 3, scope: !10759)
!10767 = !DILocation(line: 7760, column: 15, scope: !10730)
!10768 = !DILocation(line: 7760, column: 20, scope: !10730)
!10769 = !DILocation(line: 7760, column: 25, scope: !10730)
!10770 = !DILocation(line: 7760, column: 2, scope: !10730)
!10771 = !DILocation(line: 7762, column: 34, scope: !10730)
!10772 = !DILocation(line: 7762, column: 39, scope: !10730)
!10773 = !DILocation(line: 7762, column: 18, scope: !10730)
!10774 = !DILocation(line: 7762, column: 2, scope: !10730)
!10775 = !DILocation(line: 7762, column: 7, scope: !10730)
!10776 = !DILocation(line: 7762, column: 16, scope: !10730)
!10777 = !DILocation(line: 7764, column: 2, scope: !10730)
!10778 = !DILocation(line: 7764, column: 7, scope: !10730)
!10779 = !DILocation(line: 7764, column: 13, scope: !10730)
!10780 = !DILocation(line: 7764, column: 23, scope: !10730)
!10781 = !DILocation(line: 7765, column: 25, scope: !10730)
!10782 = !DILocation(line: 7765, column: 2, scope: !10730)
!10783 = !DILocation(line: 7765, column: 7, scope: !10730)
!10784 = !DILocation(line: 7765, column: 13, scope: !10730)
!10785 = !DILocation(line: 7765, column: 22, scope: !10730)
!10786 = !DILocation(line: 7767, column: 11, scope: !10730)
!10787 = !DILocation(line: 7767, column: 2, scope: !10730)
!10788 = !DILocation(line: 7768, column: 1, scope: !10730)
!10789 = distinct !DISubprogram(name: "ldisc_receive_buf", scope: !3, file: !3, line: 954, type: !10790, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{null, !3760, !10792, !1038, !32}
!10792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10793, size: 64)
!10793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !481)
!10794 = !DILocalVariable(name: "tty", arg: 1, scope: !10789, file: !3, line: 954, type: !3760)
!10795 = !DILocation(line: 954, column: 50, scope: !10789)
!10796 = !DILocalVariable(name: "data", arg: 2, scope: !10789, file: !3, line: 955, type: !10792)
!10797 = !DILocation(line: 955, column: 22, scope: !10789)
!10798 = !DILocalVariable(name: "flags", arg: 3, scope: !10789, file: !3, line: 955, type: !1038)
!10799 = !DILocation(line: 955, column: 34, scope: !10789)
!10800 = !DILocalVariable(name: "count", arg: 4, scope: !10789, file: !3, line: 955, type: !32)
!10801 = !DILocation(line: 955, column: 45, scope: !10789)
!10802 = !DILocalVariable(name: "ld", scope: !10789, file: !3, line: 957, type: !5025)
!10803 = !DILocation(line: 957, column: 20, scope: !10789)
!10804 = !DILocation(line: 958, column: 7, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 958, column: 6)
!10806 = !DILocation(line: 958, column: 6, scope: !10789)
!10807 = !DILocation(line: 959, column: 3, scope: !10805)
!10808 = !DILocation(line: 960, column: 21, scope: !10789)
!10809 = !DILocation(line: 960, column: 7, scope: !10789)
!10810 = !DILocation(line: 960, column: 5, scope: !10789)
!10811 = !DILocation(line: 961, column: 6, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 961, column: 6)
!10813 = !DILocation(line: 961, column: 6, scope: !10789)
!10814 = !DILocation(line: 962, column: 7, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !3, line: 962, column: 7)
!10816 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 961, column: 10)
!10817 = !DILocation(line: 962, column: 11, scope: !10815)
!10818 = !DILocation(line: 962, column: 16, scope: !10815)
!10819 = !DILocation(line: 962, column: 7, scope: !10816)
!10820 = !DILocation(line: 963, column: 4, scope: !10815)
!10821 = !DILocation(line: 963, column: 8, scope: !10815)
!10822 = !DILocation(line: 963, column: 13, scope: !10815)
!10823 = !DILocation(line: 963, column: 25, scope: !10815)
!10824 = !DILocation(line: 963, column: 30, scope: !10815)
!10825 = !DILocation(line: 963, column: 36, scope: !10815)
!10826 = !DILocation(line: 963, column: 43, scope: !10815)
!10827 = !DILocation(line: 964, column: 19, scope: !10816)
!10828 = !DILocation(line: 964, column: 3, scope: !10816)
!10829 = !DILocation(line: 965, column: 2, scope: !10816)
!10830 = !DILocation(line: 966, column: 1, scope: !10789)
!10831 = distinct !DISubprogram(name: "mgsl_free_rx_frame_buffers", scope: !3, file: !3, line: 6259, type: !10832, scopeLine: 6260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10832 = !DISubroutineType(types: !10833)
!10833 = !{null, !7524, !7, !7}
!10834 = !DILocalVariable(name: "info", arg: 1, scope: !10831, file: !3, line: 6259, type: !7524)
!10835 = !DILocation(line: 6259, column: 61, scope: !10831)
!10836 = !DILocalVariable(name: "StartIndex", arg: 2, scope: !10831, file: !3, line: 6259, type: !7)
!10837 = !DILocation(line: 6259, column: 80, scope: !10831)
!10838 = !DILocalVariable(name: "EndIndex", arg: 3, scope: !10831, file: !3, line: 6259, type: !7)
!10839 = !DILocation(line: 6259, column: 105, scope: !10831)
!10840 = !DILocalVariable(name: "Done", scope: !10831, file: !3, line: 6261, type: !771)
!10841 = !DILocation(line: 6261, column: 7, scope: !10831)
!10842 = !DILocalVariable(name: "pBufEntry", scope: !10831, file: !3, line: 6262, type: !7588)
!10843 = !DILocation(line: 6262, column: 18, scope: !10831)
!10844 = !DILocalVariable(name: "Index", scope: !10831, file: !3, line: 6263, type: !7)
!10845 = !DILocation(line: 6263, column: 15, scope: !10831)
!10846 = !DILocation(line: 6268, column: 10, scope: !10831)
!10847 = !DILocation(line: 6268, column: 8, scope: !10831)
!10848 = !DILocation(line: 6270, column: 2, scope: !10831)
!10849 = !DILocation(line: 6270, column: 10, scope: !10831)
!10850 = !DILocation(line: 6270, column: 9, scope: !10831)
!10851 = !DILocation(line: 6271, column: 17, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 6270, column: 17)
!10853 = !DILocation(line: 6271, column: 23, scope: !10852)
!10854 = !DILocation(line: 6271, column: 38, scope: !10852)
!10855 = !DILocation(line: 6271, column: 13, scope: !10852)
!10856 = !DILocation(line: 6273, column: 8, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 6273, column: 8)
!10858 = !DILocation(line: 6273, column: 17, scope: !10857)
!10859 = !DILocation(line: 6273, column: 14, scope: !10857)
!10860 = !DILocation(line: 6273, column: 8, scope: !10852)
!10861 = !DILocation(line: 6275, column: 9, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 6273, column: 28)
!10863 = !DILocation(line: 6276, column: 3, scope: !10862)
!10864 = !DILocation(line: 6281, column: 24, scope: !10852)
!10865 = !DILocation(line: 6281, column: 35, scope: !10852)
!10866 = !DILocation(line: 6281, column: 3, scope: !10852)
!10867 = !DILocation(line: 6281, column: 43, scope: !10852)
!10868 = !DILocation(line: 6284, column: 8, scope: !10852)
!10869 = !DILocation(line: 6285, column: 8, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 6285, column: 8)
!10871 = !DILocation(line: 6285, column: 17, scope: !10870)
!10872 = !DILocation(line: 6285, column: 23, scope: !10870)
!10873 = !DILocation(line: 6285, column: 14, scope: !10870)
!10874 = !DILocation(line: 6285, column: 8, scope: !10852)
!10875 = !DILocation(line: 6286, column: 10, scope: !10870)
!10876 = !DILocation(line: 6286, column: 4, scope: !10870)
!10877 = distinct !{!10877, !10848, !10878}
!10878 = !DILocation(line: 6287, column: 2, scope: !10831)
!10879 = !DILocation(line: 6290, column: 28, scope: !10831)
!10880 = !DILocation(line: 6290, column: 2, scope: !10831)
!10881 = !DILocation(line: 6290, column: 8, scope: !10831)
!10882 = !DILocation(line: 6290, column: 26, scope: !10831)
!10883 = !DILocation(line: 6292, column: 1, scope: !10831)
!10884 = distinct !DISubprogram(name: "dev_alloc_skb", scope: !417, file: !417, line: 2837, type: !10885, scopeLine: 2838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10885 = !DISubroutineType(types: !10886)
!10886 = !{!415, !7}
!10887 = !DILocalVariable(name: "length", arg: 1, scope: !10884, file: !417, line: 2837, type: !7)
!10888 = !DILocation(line: 2837, column: 58, scope: !10884)
!10889 = !DILocation(line: 2839, column: 32, scope: !10884)
!10890 = !DILocation(line: 2839, column: 9, scope: !10884)
!10891 = !DILocation(line: 2839, column: 2, scope: !10884)
!10892 = distinct !DISubprogram(name: "skb_put_data", scope: !417, file: !417, line: 2270, type: !10893, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10893 = !DISubroutineType(types: !10894)
!10894 = !{!591, !415, !3276, !7}
!10895 = !DILocalVariable(name: "skb", arg: 1, scope: !10892, file: !417, line: 2270, type: !415)
!10896 = !DILocation(line: 2270, column: 50, scope: !10892)
!10897 = !DILocalVariable(name: "data", arg: 2, scope: !10892, file: !417, line: 2270, type: !3276)
!10898 = !DILocation(line: 2270, column: 67, scope: !10892)
!10899 = !DILocalVariable(name: "len", arg: 3, scope: !10892, file: !417, line: 2271, type: !7)
!10900 = !DILocation(line: 2271, column: 19, scope: !10892)
!10901 = !DILocalVariable(name: "tmp", scope: !10892, file: !417, line: 2273, type: !591)
!10902 = !DILocation(line: 2273, column: 8, scope: !10892)
!10903 = !DILocation(line: 2273, column: 22, scope: !10892)
!10904 = !DILocation(line: 2273, column: 27, scope: !10892)
!10905 = !DILocation(line: 2273, column: 14, scope: !10892)
!10906 = !DILocation(line: 2275, column: 9, scope: !10892)
!10907 = !DILocation(line: 2275, column: 14, scope: !10892)
!10908 = !DILocation(line: 2275, column: 20, scope: !10892)
!10909 = !DILocation(line: 2275, column: 2, scope: !10892)
!10910 = !DILocation(line: 2277, column: 9, scope: !10892)
!10911 = !DILocation(line: 2277, column: 2, scope: !10892)
!10912 = distinct !DISubprogram(name: "hdlc_type_trans", scope: !10913, file: !10913, line: 101, type: !10914, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10913 = !DIFile(filename: "./include/linux/hdlc.h", directory: "/home/lizy2001/genbc/linux")
!10914 = !DISubroutineType(types: !10915)
!10915 = !{!535, !415, !290}
!10916 = !DILocalVariable(name: "skb", arg: 1, scope: !10912, file: !10913, line: 101, type: !415)
!10917 = !DILocation(line: 101, column: 58, scope: !10912)
!10918 = !DILocalVariable(name: "dev", arg: 2, scope: !10912, file: !10913, line: 102, type: !290)
!10919 = !DILocation(line: 102, column: 26, scope: !10912)
!10920 = !DILocalVariable(name: "hdlc", scope: !10912, file: !10913, line: 104, type: !10921)
!10921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10922, size: 64)
!10922 = !DIDerivedType(tag: DW_TAG_typedef, name: "hdlc_device", file: !10913, line: 50, baseType: !10923)
!10923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdlc_device", file: !10913, line: 35, size: 384, elements: !10924)
!10924 = !{!10925, !10929, !10930, !10954, !10955, !10956, !10957, !10958}
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !10923, file: !10913, line: 37, baseType: !10926, size: 64)
!10926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10927, size: 64)
!10927 = !DISubroutineType(types: !10928)
!10928 = !{!32, !290, !476, !476}
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "xmit", scope: !10923, file: !10913, line: 41, baseType: !411, size: 64, offset: 64)
!10930 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !10923, file: !10913, line: 44, baseType: !10931, size: 64, offset: 128)
!10931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10932, size: 64)
!10932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10933)
!10933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdlc_proto", file: !10913, line: 19, size: 704, elements: !10934)
!10934 = !{!10935, !10936, !10937, !10938, !10939, !10940, !10944, !10946, !10950, !10951, !10952}
!10935 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !10933, file: !10913, line: 20, baseType: !401, size: 64)
!10936 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !10933, file: !10913, line: 21, baseType: !405, size: 64, offset: 64)
!10937 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10933, file: !10913, line: 22, baseType: !405, size: 64, offset: 128)
!10938 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !10933, file: !10913, line: 23, baseType: !405, size: 64, offset: 192)
!10939 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !10933, file: !10913, line: 24, baseType: !405, size: 64, offset: 256)
!10940 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !10933, file: !10913, line: 25, baseType: !10941, size: 64, offset: 320)
!10941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10942, size: 64)
!10942 = !DISubroutineType(types: !10943)
!10943 = !{!32, !290, !597}
!10944 = !DIDerivedType(tag: DW_TAG_member, name: "type_trans", scope: !10933, file: !10913, line: 26, baseType: !10945, size: 64, offset: 384)
!10945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10914, size: 64)
!10946 = !DIDerivedType(tag: DW_TAG_member, name: "netif_rx", scope: !10933, file: !10913, line: 27, baseType: !10947, size: 64, offset: 448)
!10947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10948, size: 64)
!10948 = !DISubroutineType(types: !10949)
!10949 = !{!32, !415}
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "xmit", scope: !10933, file: !10913, line: 28, baseType: !411, size: 64, offset: 512)
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !10933, file: !10913, line: 29, baseType: !980, size: 64, offset: 576)
!10952 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10933, file: !10913, line: 30, baseType: !10953, size: 64, offset: 640)
!10953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10933, size: 64)
!10954 = !DIDerivedType(tag: DW_TAG_member, name: "carrier", scope: !10923, file: !10913, line: 45, baseType: !32, size: 32, offset: 192)
!10955 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !10923, file: !10913, line: 46, baseType: !32, size: 32, offset: 224)
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "state_lock", scope: !10923, file: !10913, line: 47, baseType: !1670, offset: 256)
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10923, file: !10913, line: 48, baseType: !591, size: 64, offset: 256)
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !10923, file: !10913, line: 49, baseType: !591, size: 64, offset: 320)
!10959 = !DILocation(line: 104, column: 15, scope: !10912)
!10960 = !DILocation(line: 104, column: 34, scope: !10912)
!10961 = !DILocation(line: 104, column: 22, scope: !10912)
!10962 = !DILocation(line: 106, column: 13, scope: !10912)
!10963 = !DILocation(line: 106, column: 2, scope: !10912)
!10964 = !DILocation(line: 106, column: 7, scope: !10912)
!10965 = !DILocation(line: 106, column: 11, scope: !10912)
!10966 = !DILocation(line: 107, column: 23, scope: !10912)
!10967 = !DILocation(line: 107, column: 2, scope: !10912)
!10968 = !DILocation(line: 109, column: 6, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10912, file: !10913, line: 109, column: 6)
!10970 = !DILocation(line: 109, column: 12, scope: !10969)
!10971 = !DILocation(line: 109, column: 19, scope: !10969)
!10972 = !DILocation(line: 109, column: 6, scope: !10912)
!10973 = !DILocation(line: 110, column: 10, scope: !10969)
!10974 = !DILocation(line: 110, column: 16, scope: !10969)
!10975 = !DILocation(line: 110, column: 23, scope: !10969)
!10976 = !DILocation(line: 110, column: 34, scope: !10969)
!10977 = !DILocation(line: 110, column: 39, scope: !10969)
!10978 = !DILocation(line: 110, column: 3, scope: !10969)
!10979 = !DILocation(line: 112, column: 3, scope: !10969)
!10980 = !DILocation(line: 113, column: 1, scope: !10912)
!10981 = distinct !DISubprogram(name: "netdev_alloc_skb", scope: !417, file: !417, line: 2823, type: !10982, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10982 = !DISubroutineType(types: !10983)
!10983 = !{!415, !290, !7}
!10984 = !DILocalVariable(name: "dev", arg: 1, scope: !10981, file: !417, line: 2823, type: !290)
!10985 = !DILocation(line: 2823, column: 67, scope: !10981)
!10986 = !DILocalVariable(name: "length", arg: 2, scope: !10981, file: !417, line: 2824, type: !7)
!10987 = !DILocation(line: 2824, column: 26, scope: !10981)
!10988 = !DILocation(line: 2826, column: 28, scope: !10981)
!10989 = !DILocation(line: 2826, column: 33, scope: !10981)
!10990 = !DILocation(line: 2826, column: 9, scope: !10981)
!10991 = !DILocation(line: 2826, column: 2, scope: !10981)
!10992 = distinct !DISubprogram(name: "dev_to_hdlc", scope: !10913, file: !10913, line: 69, type: !10993, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10993 = !DISubroutineType(types: !10994)
!10994 = !{!10995, !290}
!10995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10923, size: 64)
!10996 = !DILocalVariable(name: "dev", arg: 1, scope: !10992, file: !10913, line: 69, type: !290)
!10997 = !DILocation(line: 69, column: 66, scope: !10992)
!10998 = !DILocation(line: 71, column: 21, scope: !10992)
!10999 = !DILocation(line: 71, column: 9, scope: !10992)
!11000 = !DILocation(line: 71, column: 2, scope: !10992)
!11001 = distinct !DISubprogram(name: "skb_reset_mac_header", scope: !417, file: !417, line: 2556, type: !469, scopeLine: 2557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11002 = !DILocalVariable(name: "skb", arg: 1, scope: !11001, file: !417, line: 2556, type: !415)
!11003 = !DILocation(line: 2556, column: 57, scope: !11001)
!11004 = !DILocation(line: 2558, column: 20, scope: !11001)
!11005 = !DILocation(line: 2558, column: 25, scope: !11001)
!11006 = !DILocation(line: 2558, column: 32, scope: !11001)
!11007 = !DILocation(line: 2558, column: 37, scope: !11001)
!11008 = !DILocation(line: 2558, column: 30, scope: !11001)
!11009 = !DILocation(line: 2558, column: 2, scope: !11001)
!11010 = !DILocation(line: 2558, column: 7, scope: !11001)
!11011 = !DILocation(line: 2558, column: 18, scope: !11001)
!11012 = !DILocation(line: 2559, column: 1, scope: !11001)
!11013 = distinct !DISubprogram(name: "netdev_priv", scope: !31, file: !31, line: 2322, type: !11014, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11014 = !DISubroutineType(types: !11015)
!11015 = !{!591, !773}
!11016 = !DILocalVariable(name: "dev", arg: 1, scope: !11013, file: !31, line: 2322, type: !773)
!11017 = !DILocation(line: 2322, column: 58, scope: !11013)
!11018 = !DILocation(line: 2324, column: 17, scope: !11013)
!11019 = !DILocation(line: 2324, column: 9, scope: !11013)
!11020 = !DILocation(line: 2324, column: 21, scope: !11013)
!11021 = !DILocation(line: 2324, column: 2, scope: !11013)
!11022 = distinct !DISubprogram(name: "mgsl_reset_rx_dma_buffers", scope: !3, file: !3, line: 6231, type: !8185, scopeLine: 6232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11023 = !DILocalVariable(name: "info", arg: 1, scope: !11022, file: !3, line: 6231, type: !7524)
!11024 = !DILocation(line: 6231, column: 60, scope: !11022)
!11025 = !DILocalVariable(name: "i", scope: !11022, file: !3, line: 6233, type: !7)
!11026 = !DILocation(line: 6233, column: 15, scope: !11022)
!11027 = !DILocation(line: 6235, column: 10, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 6235, column: 2)
!11029 = !DILocation(line: 6235, column: 8, scope: !11028)
!11030 = !DILocation(line: 6235, column: 15, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 6235, column: 2)
!11032 = !DILocation(line: 6235, column: 19, scope: !11031)
!11033 = !DILocation(line: 6235, column: 25, scope: !11031)
!11034 = !DILocation(line: 6235, column: 17, scope: !11031)
!11035 = !DILocation(line: 6235, column: 2, scope: !11028)
!11036 = !DILocation(line: 6236, column: 24, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11031, file: !3, line: 6235, column: 48)
!11038 = !DILocation(line: 6236, column: 30, scope: !11037)
!11039 = !DILocation(line: 6236, column: 45, scope: !11037)
!11040 = !DILocation(line: 6236, column: 48, scope: !11037)
!11041 = !DILocation(line: 6236, column: 3, scope: !11037)
!11042 = !DILocation(line: 6236, column: 56, scope: !11037)
!11043 = !DILocation(line: 6239, column: 2, scope: !11037)
!11044 = !DILocation(line: 6235, column: 43, scope: !11031)
!11045 = !DILocation(line: 6235, column: 2, scope: !11031)
!11046 = distinct !{!11046, !11035, !11047}
!11047 = !DILocation(line: 6239, column: 2, scope: !11028)
!11048 = !DILocation(line: 6241, column: 2, scope: !11022)
!11049 = !DILocation(line: 6241, column: 8, scope: !11022)
!11050 = !DILocation(line: 6241, column: 26, scope: !11022)
!11051 = !DILocation(line: 6243, column: 1, scope: !11022)
!11052 = distinct !DISubprogram(name: "usc_stop_receiver", scope: !3, file: !3, line: 5279, type: !8185, scopeLine: 5280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11053 = !DILocalVariable(name: "info", arg: 1, scope: !11052, file: !3, line: 5279, type: !7524)
!11054 = !DILocation(line: 5279, column: 52, scope: !11052)
!11055 = !DILocation(line: 5281, column: 6, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !11052, file: !3, line: 5281, column: 6)
!11057 = !DILocation(line: 5281, column: 18, scope: !11056)
!11058 = !DILocation(line: 5281, column: 6, scope: !11052)
!11059 = !DILocation(line: 5283, column: 24, scope: !11056)
!11060 = !DILocation(line: 5283, column: 30, scope: !11056)
!11061 = !DILocation(line: 5282, column: 3, scope: !11056)
!11062 = !DILocation(line: 5287, column: 14, scope: !11052)
!11063 = !DILocation(line: 5287, column: 2, scope: !11052)
!11064 = !DILocation(line: 5289, column: 2, scope: !11052)
!11065 = !DILocation(line: 5290, column: 2, scope: !11052)
!11066 = !DILocation(line: 5291, column: 2, scope: !11052)
!11067 = !DILocation(line: 5293, column: 2, scope: !11052)
!11068 = !DILocation(line: 5296, column: 14, scope: !11052)
!11069 = !DILocation(line: 5296, column: 42, scope: !11052)
!11070 = !DILocation(line: 5296, column: 32, scope: !11052)
!11071 = !DILocation(line: 5296, column: 53, scope: !11052)
!11072 = !DILocation(line: 5296, column: 26, scope: !11052)
!11073 = !DILocation(line: 5296, column: 2, scope: !11052)
!11074 = !DILocation(line: 5297, column: 13, scope: !11052)
!11075 = !DILocation(line: 5297, column: 2, scope: !11052)
!11076 = !DILocation(line: 5299, column: 2, scope: !11052)
!11077 = !DILocation(line: 5299, column: 8, scope: !11052)
!11078 = !DILocation(line: 5299, column: 19, scope: !11052)
!11079 = !DILocation(line: 5300, column: 2, scope: !11052)
!11080 = !DILocation(line: 5300, column: 8, scope: !11052)
!11081 = !DILocation(line: 5300, column: 20, scope: !11052)
!11082 = !DILocation(line: 5301, column: 2, scope: !11052)
!11083 = !DILocation(line: 5301, column: 8, scope: !11052)
!11084 = !DILocation(line: 5301, column: 24, scope: !11052)
!11085 = !DILocation(line: 5303, column: 1, scope: !11052)
!11086 = distinct !DISubprogram(name: "usc_RTCmd", scope: !3, file: !3, line: 4328, type: !11087, scopeLine: 4329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11087 = !DISubroutineType(types: !11088)
!11088 = !{null, !7524, !581}
!11089 = !DILocalVariable(name: "info", arg: 1, scope: !11086, file: !3, line: 4328, type: !7524)
!11090 = !DILocation(line: 4328, column: 44, scope: !11086)
!11091 = !DILocalVariable(name: "Cmd", arg: 2, scope: !11086, file: !3, line: 4328, type: !581)
!11092 = !DILocation(line: 4328, column: 54, scope: !11086)
!11093 = !DILocation(line: 4333, column: 8, scope: !11086)
!11094 = !DILocation(line: 4333, column: 14, scope: !11086)
!11095 = !DILocation(line: 4333, column: 20, scope: !11086)
!11096 = !DILocation(line: 4333, column: 12, scope: !11086)
!11097 = !DILocation(line: 4333, column: 35, scope: !11086)
!11098 = !DILocation(line: 4333, column: 41, scope: !11086)
!11099 = !DILocation(line: 4333, column: 49, scope: !11086)
!11100 = !DILocation(line: 4333, column: 2, scope: !11086)
!11101 = !DILocation(line: 4336, column: 7, scope: !11086)
!11102 = !DILocation(line: 4336, column: 13, scope: !11086)
!11103 = !DILocation(line: 4336, column: 21, scope: !11086)
!11104 = !DILocation(line: 4336, column: 2, scope: !11086)
!11105 = !DILocation(line: 4338, column: 1, scope: !11086)
!11106 = distinct !DISubprogram(name: "usc_OutDmaReg", scope: !3, file: !3, line: 4380, type: !9604, scopeLine: 4381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11107 = !DILocalVariable(name: "info", arg: 1, scope: !11106, file: !3, line: 4380, type: !7524)
!11108 = !DILocation(line: 4380, column: 48, scope: !11106)
!11109 = !DILocalVariable(name: "RegAddr", arg: 2, scope: !11106, file: !3, line: 4380, type: !581)
!11110 = !DILocation(line: 4380, column: 58, scope: !11106)
!11111 = !DILocalVariable(name: "RegValue", arg: 3, scope: !11106, file: !3, line: 4380, type: !581)
!11112 = !DILocation(line: 4380, column: 71, scope: !11106)
!11113 = !DILocation(line: 4385, column: 8, scope: !11106)
!11114 = !DILocation(line: 4385, column: 18, scope: !11106)
!11115 = !DILocation(line: 4385, column: 24, scope: !11106)
!11116 = !DILocation(line: 4385, column: 16, scope: !11106)
!11117 = !DILocation(line: 4385, column: 34, scope: !11106)
!11118 = !DILocation(line: 4385, column: 40, scope: !11106)
!11119 = !DILocation(line: 4385, column: 2, scope: !11106)
!11120 = !DILocation(line: 4386, column: 8, scope: !11106)
!11121 = !DILocation(line: 4386, column: 18, scope: !11106)
!11122 = !DILocation(line: 4386, column: 24, scope: !11106)
!11123 = !DILocation(line: 4386, column: 2, scope: !11106)
!11124 = !DILocation(line: 4389, column: 7, scope: !11106)
!11125 = !DILocation(line: 4389, column: 13, scope: !11106)
!11126 = !DILocation(line: 4389, column: 2, scope: !11106)
!11127 = !DILocation(line: 4391, column: 1, scope: !11106)
!11128 = distinct !DISubprogram(name: "usc_InDmaReg", scope: !3, file: !3, line: 4408, type: !9526, scopeLine: 4409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11129 = !DILocalVariable(name: "info", arg: 1, scope: !11128, file: !3, line: 4408, type: !7524)
!11130 = !DILocation(line: 4408, column: 46, scope: !11128)
!11131 = !DILocalVariable(name: "RegAddr", arg: 2, scope: !11128, file: !3, line: 4408, type: !581)
!11132 = !DILocation(line: 4408, column: 56, scope: !11128)
!11133 = !DILocation(line: 4413, column: 8, scope: !11128)
!11134 = !DILocation(line: 4413, column: 18, scope: !11128)
!11135 = !DILocation(line: 4413, column: 24, scope: !11128)
!11136 = !DILocation(line: 4413, column: 16, scope: !11128)
!11137 = !DILocation(line: 4413, column: 34, scope: !11128)
!11138 = !DILocation(line: 4413, column: 40, scope: !11128)
!11139 = !DILocation(line: 4413, column: 2, scope: !11128)
!11140 = !DILocation(line: 4414, column: 14, scope: !11128)
!11141 = !DILocation(line: 4414, column: 20, scope: !11128)
!11142 = !DILocation(line: 4414, column: 9, scope: !11128)
!11143 = !DILocation(line: 4414, column: 2, scope: !11128)
!11144 = distinct !DISubprogram(name: "usc_DmaCmd", scope: !3, file: !3, line: 4354, type: !11087, scopeLine: 4355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11145 = !DILocalVariable(name: "info", arg: 1, scope: !11144, file: !3, line: 4354, type: !7524)
!11146 = !DILocation(line: 4354, column: 45, scope: !11144)
!11147 = !DILocalVariable(name: "Cmd", arg: 2, scope: !11144, file: !3, line: 4354, type: !581)
!11148 = !DILocation(line: 4354, column: 55, scope: !11144)
!11149 = !DILocation(line: 4357, column: 8, scope: !11144)
!11150 = !DILocation(line: 4357, column: 14, scope: !11144)
!11151 = !DILocation(line: 4357, column: 20, scope: !11144)
!11152 = !DILocation(line: 4357, column: 12, scope: !11144)
!11153 = !DILocation(line: 4357, column: 30, scope: !11144)
!11154 = !DILocation(line: 4357, column: 36, scope: !11144)
!11155 = !DILocation(line: 4357, column: 2, scope: !11144)
!11156 = !DILocation(line: 4360, column: 7, scope: !11144)
!11157 = !DILocation(line: 4360, column: 13, scope: !11144)
!11158 = !DILocation(line: 4360, column: 2, scope: !11144)
!11159 = !DILocation(line: 4362, column: 1, scope: !11144)
!11160 = distinct !DISubprogram(name: "usc_loopmode_send_done", scope: !3, file: !3, line: 7375, type: !8185, scopeLine: 7376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11161 = !DILocalVariable(name: "info", arg: 1, scope: !11160, file: !3, line: 7375, type: !7524)
!11162 = !DILocation(line: 7375, column: 58, scope: !11160)
!11163 = !DILocation(line: 7377, column: 3, scope: !11160)
!11164 = !DILocation(line: 7377, column: 9, scope: !11160)
!11165 = !DILocation(line: 7377, column: 38, scope: !11160)
!11166 = !DILocation(line: 7379, column: 3, scope: !11160)
!11167 = !DILocation(line: 7379, column: 9, scope: !11160)
!11168 = !DILocation(line: 7379, column: 19, scope: !11160)
!11169 = !DILocation(line: 7380, column: 14, scope: !11160)
!11170 = !DILocation(line: 7380, column: 25, scope: !11160)
!11171 = !DILocation(line: 7380, column: 31, scope: !11160)
!11172 = !DILocation(line: 7380, column: 3, scope: !11160)
!11173 = !DILocation(line: 7381, column: 1, scope: !11160)
!11174 = distinct !DISubprogram(name: "hdlcdev_init", scope: !3, file: !3, line: 7786, type: !9631, scopeLine: 7787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11175 = !DILocalVariable(name: "info", arg: 1, scope: !11174, file: !3, line: 7786, type: !7524)
!11176 = !DILocation(line: 7786, column: 45, scope: !11174)
!11177 = !DILocalVariable(name: "rc", scope: !11174, file: !3, line: 7788, type: !32)
!11178 = !DILocation(line: 7788, column: 6, scope: !11174)
!11179 = !DILocalVariable(name: "dev", scope: !11174, file: !3, line: 7789, type: !290)
!11180 = !DILocation(line: 7789, column: 21, scope: !11174)
!11181 = !DILocalVariable(name: "hdlc", scope: !11174, file: !3, line: 7790, type: !10921)
!11182 = !DILocation(line: 7790, column: 15, scope: !11174)
!11183 = !DILocation(line: 7794, column: 22, scope: !11174)
!11184 = !DILocation(line: 7794, column: 8, scope: !11174)
!11185 = !DILocation(line: 7794, column: 6, scope: !11174)
!11186 = !DILocation(line: 7795, column: 7, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11174, file: !3, line: 7795, column: 6)
!11188 = !DILocation(line: 7795, column: 6, scope: !11174)
!11189 = !DILocation(line: 7796, column: 3, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 7795, column: 12)
!11191 = !DILocation(line: 7797, column: 3, scope: !11190)
!11192 = !DILocation(line: 7801, column: 19, scope: !11174)
!11193 = !DILocation(line: 7801, column: 25, scope: !11174)
!11194 = !DILocation(line: 7801, column: 2, scope: !11174)
!11195 = !DILocation(line: 7801, column: 7, scope: !11174)
!11196 = !DILocation(line: 7801, column: 17, scope: !11174)
!11197 = !DILocation(line: 7802, column: 19, scope: !11174)
!11198 = !DILocation(line: 7802, column: 25, scope: !11174)
!11199 = !DILocation(line: 7802, column: 2, scope: !11174)
!11200 = !DILocation(line: 7802, column: 7, scope: !11174)
!11201 = !DILocation(line: 7802, column: 17, scope: !11174)
!11202 = !DILocation(line: 7803, column: 19, scope: !11174)
!11203 = !DILocation(line: 7803, column: 25, scope: !11174)
!11204 = !DILocation(line: 7803, column: 2, scope: !11174)
!11205 = !DILocation(line: 7803, column: 7, scope: !11174)
!11206 = !DILocation(line: 7803, column: 17, scope: !11174)
!11207 = !DILocation(line: 7806, column: 2, scope: !11174)
!11208 = !DILocation(line: 7806, column: 7, scope: !11174)
!11209 = !DILocation(line: 7806, column: 22, scope: !11174)
!11210 = !DILocation(line: 7807, column: 2, scope: !11174)
!11211 = !DILocation(line: 7807, column: 7, scope: !11174)
!11212 = !DILocation(line: 7807, column: 22, scope: !11174)
!11213 = !DILocation(line: 7808, column: 2, scope: !11174)
!11214 = !DILocation(line: 7808, column: 7, scope: !11174)
!11215 = !DILocation(line: 7808, column: 22, scope: !11174)
!11216 = !DILocation(line: 7811, column: 29, scope: !11174)
!11217 = !DILocation(line: 7811, column: 17, scope: !11174)
!11218 = !DILocation(line: 7811, column: 15, scope: !11174)
!11219 = !DILocation(line: 7812, column: 2, scope: !11174)
!11220 = !DILocation(line: 7812, column: 8, scope: !11174)
!11221 = !DILocation(line: 7812, column: 15, scope: !11174)
!11222 = !DILocation(line: 7813, column: 2, scope: !11174)
!11223 = !DILocation(line: 7813, column: 8, scope: !11174)
!11224 = !DILocation(line: 7813, column: 15, scope: !11174)
!11225 = !DILocation(line: 7816, column: 7, scope: !11174)
!11226 = !DILocation(line: 7816, column: 5, scope: !11174)
!11227 = !DILocation(line: 7817, column: 6, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11174, file: !3, line: 7817, column: 6)
!11229 = !DILocation(line: 7817, column: 6, scope: !11174)
!11230 = !DILocation(line: 7818, column: 3, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11228, file: !3, line: 7817, column: 10)
!11232 = !DILocation(line: 7819, column: 15, scope: !11231)
!11233 = !DILocation(line: 7819, column: 3, scope: !11231)
!11234 = !DILocation(line: 7820, column: 10, scope: !11231)
!11235 = !DILocation(line: 7820, column: 3, scope: !11231)
!11236 = !DILocation(line: 7823, column: 17, scope: !11174)
!11237 = !DILocation(line: 7823, column: 2, scope: !11174)
!11238 = !DILocation(line: 7823, column: 8, scope: !11174)
!11239 = !DILocation(line: 7823, column: 15, scope: !11174)
!11240 = !DILocation(line: 7824, column: 2, scope: !11174)
!11241 = !DILocation(line: 7825, column: 1, scope: !11174)
!11242 = distinct !DISubprogram(name: "hdlcdev_attach", scope: !3, file: !3, line: 7431, type: !10927, scopeLine: 7433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11243 = !DILocalVariable(name: "dev", arg: 1, scope: !11242, file: !3, line: 7431, type: !290)
!11244 = !DILocation(line: 7431, column: 46, scope: !11242)
!11245 = !DILocalVariable(name: "encoding", arg: 2, scope: !11242, file: !3, line: 7431, type: !476)
!11246 = !DILocation(line: 7431, column: 66, scope: !11242)
!11247 = !DILocalVariable(name: "parity", arg: 3, scope: !11242, file: !3, line: 7432, type: !476)
!11248 = !DILocation(line: 7432, column: 21, scope: !11242)
!11249 = !DILocalVariable(name: "info", scope: !11242, file: !3, line: 7434, type: !7524)
!11250 = !DILocation(line: 7434, column: 22, scope: !11242)
!11251 = !DILocation(line: 7434, column: 29, scope: !11242)
!11252 = !DILocalVariable(name: "new_encoding", scope: !11242, file: !3, line: 7435, type: !482)
!11253 = !DILocation(line: 7435, column: 17, scope: !11242)
!11254 = !DILocalVariable(name: "new_crctype", scope: !11242, file: !3, line: 7436, type: !476)
!11255 = !DILocation(line: 7436, column: 17, scope: !11242)
!11256 = !DILocation(line: 7439, column: 6, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11242, file: !3, line: 7439, column: 6)
!11258 = !DILocation(line: 7439, column: 12, scope: !11257)
!11259 = !DILocation(line: 7439, column: 17, scope: !11257)
!11260 = !DILocation(line: 7439, column: 6, scope: !11242)
!11261 = !DILocation(line: 7440, column: 3, scope: !11257)
!11262 = !DILocation(line: 7442, column: 10, scope: !11242)
!11263 = !DILocation(line: 7442, column: 2, scope: !11242)
!11264 = !DILocation(line: 7444, column: 41, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11242, file: !3, line: 7443, column: 2)
!11266 = !DILocation(line: 7444, column: 62, scope: !11265)
!11267 = !DILocation(line: 7445, column: 41, scope: !11265)
!11268 = !DILocation(line: 7445, column: 69, scope: !11265)
!11269 = !DILocation(line: 7446, column: 41, scope: !11265)
!11270 = !DILocation(line: 7446, column: 71, scope: !11265)
!11271 = !DILocation(line: 7447, column: 41, scope: !11265)
!11272 = !DILocation(line: 7447, column: 72, scope: !11265)
!11273 = !DILocation(line: 7448, column: 41, scope: !11265)
!11274 = !DILocation(line: 7448, column: 72, scope: !11265)
!11275 = !DILocation(line: 7449, column: 11, scope: !11265)
!11276 = !DILocation(line: 7452, column: 10, scope: !11242)
!11277 = !DILocation(line: 7452, column: 2, scope: !11242)
!11278 = !DILocation(line: 7454, column: 43, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11242, file: !3, line: 7453, column: 2)
!11280 = !DILocation(line: 7454, column: 60, scope: !11279)
!11281 = !DILocation(line: 7455, column: 43, scope: !11279)
!11282 = !DILocation(line: 7455, column: 64, scope: !11279)
!11283 = !DILocation(line: 7456, column: 43, scope: !11279)
!11284 = !DILocation(line: 7456, column: 64, scope: !11279)
!11285 = !DILocation(line: 7457, column: 11, scope: !11279)
!11286 = !DILocation(line: 7460, column: 26, scope: !11242)
!11287 = !DILocation(line: 7460, column: 2, scope: !11242)
!11288 = !DILocation(line: 7460, column: 8, scope: !11242)
!11289 = !DILocation(line: 7460, column: 15, scope: !11242)
!11290 = !DILocation(line: 7460, column: 24, scope: !11242)
!11291 = !DILocation(line: 7461, column: 26, scope: !11242)
!11292 = !DILocation(line: 7461, column: 2, scope: !11242)
!11293 = !DILocation(line: 7461, column: 8, scope: !11242)
!11294 = !DILocation(line: 7461, column: 15, scope: !11242)
!11295 = !DILocation(line: 7461, column: 24, scope: !11242)
!11296 = !DILocation(line: 7464, column: 6, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11242, file: !3, line: 7464, column: 6)
!11298 = !DILocation(line: 7464, column: 12, scope: !11297)
!11299 = !DILocation(line: 7464, column: 6, scope: !11242)
!11300 = !DILocation(line: 7465, column: 19, scope: !11297)
!11301 = !DILocation(line: 7465, column: 3, scope: !11297)
!11302 = !DILocation(line: 7467, column: 2, scope: !11242)
!11303 = !DILocation(line: 7468, column: 1, scope: !11242)
!11304 = distinct !DISubprogram(name: "hdlcdev_xmit", scope: !3, file: !3, line: 7475, type: !412, scopeLine: 7477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11305 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !11306)
!11306 = distinct !DILocation(line: 7505, column: 2, scope: !11304)
!11307 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !11306)
!11308 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !11309)
!11309 = distinct !DILocation(line: 7502, column: 2, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 7502, column: 2)
!11311 = distinct !DILexicalBlock(scope: !11312, file: !3, line: 7502, column: 2)
!11312 = distinct !DILexicalBlock(scope: !11313, file: !3, line: 7502, column: 2)
!11313 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 7502, column: 2)
!11314 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 7502, column: 2)
!11315 = !DILocalVariable(name: "skb", arg: 1, scope: !11304, file: !3, line: 7475, type: !415)
!11316 = !DILocation(line: 7475, column: 49, scope: !11304)
!11317 = !DILocalVariable(name: "dev", arg: 2, scope: !11304, file: !3, line: 7476, type: !290)
!11318 = !DILocation(line: 7476, column: 30, scope: !11304)
!11319 = !DILocalVariable(name: "info", scope: !11304, file: !3, line: 7478, type: !7524)
!11320 = !DILocation(line: 7478, column: 22, scope: !11304)
!11321 = !DILocation(line: 7478, column: 29, scope: !11304)
!11322 = !DILocalVariable(name: "flags", scope: !11304, file: !3, line: 7479, type: !312)
!11323 = !DILocation(line: 7479, column: 16, scope: !11304)
!11324 = !DILocation(line: 7481, column: 6, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 7481, column: 6)
!11326 = !DILocation(line: 7481, column: 18, scope: !11325)
!11327 = !DILocation(line: 7481, column: 6, scope: !11304)
!11328 = !DILocation(line: 7482, column: 50, scope: !11325)
!11329 = !DILocation(line: 7482, column: 55, scope: !11325)
!11330 = !DILocation(line: 7482, column: 3, scope: !11325)
!11331 = !DILocation(line: 7485, column: 19, scope: !11304)
!11332 = !DILocation(line: 7485, column: 2, scope: !11304)
!11333 = !DILocation(line: 7488, column: 19, scope: !11304)
!11334 = !DILocation(line: 7488, column: 24, scope: !11304)
!11335 = !DILocation(line: 7488, column: 2, scope: !11304)
!11336 = !DILocation(line: 7488, column: 8, scope: !11304)
!11337 = !DILocation(line: 7488, column: 17, scope: !11304)
!11338 = !DILocation(line: 7489, column: 26, scope: !11304)
!11339 = !DILocation(line: 7489, column: 32, scope: !11304)
!11340 = !DILocation(line: 7489, column: 37, scope: !11304)
!11341 = !DILocation(line: 7489, column: 43, scope: !11304)
!11342 = !DILocation(line: 7489, column: 48, scope: !11304)
!11343 = !DILocation(line: 7489, column: 2, scope: !11304)
!11344 = !DILocation(line: 7492, column: 2, scope: !11304)
!11345 = !DILocation(line: 7492, column: 7, scope: !11304)
!11346 = !DILocation(line: 7492, column: 13, scope: !11304)
!11347 = !DILocation(line: 7492, column: 23, scope: !11304)
!11348 = !DILocation(line: 7493, column: 25, scope: !11304)
!11349 = !DILocation(line: 7493, column: 30, scope: !11304)
!11350 = !DILocation(line: 7493, column: 2, scope: !11304)
!11351 = !DILocation(line: 7493, column: 7, scope: !11304)
!11352 = !DILocation(line: 7493, column: 13, scope: !11304)
!11353 = !DILocation(line: 7493, column: 22, scope: !11304)
!11354 = !DILocation(line: 7496, column: 2, scope: !11304)
!11355 = !DILocation(line: 7499, column: 21, scope: !11304)
!11356 = !DILocation(line: 7499, column: 2, scope: !11304)
!11357 = !DILocation(line: 7502, column: 2, scope: !11304)
!11358 = !DILocation(line: 7502, column: 2, scope: !11314)
!11359 = !DILocalVariable(name: "__dummy", scope: !11360, file: !3, line: 7502, type: !312)
!11360 = distinct !DILexicalBlock(scope: !11313, file: !3, line: 7502, column: 2)
!11361 = !DILocation(line: 7502, column: 2, scope: !11360)
!11362 = !DILocalVariable(name: "__dummy2", scope: !11360, file: !3, line: 7502, type: !312)
!11363 = !DILocation(line: 7502, column: 2, scope: !11313)
!11364 = !DILocation(line: 7502, column: 2, scope: !11312)
!11365 = !DILocation(line: 7502, column: 2, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11312, file: !3, line: 7502, column: 2)
!11367 = !DILocalVariable(name: "__dummy", scope: !11368, file: !3, line: 7502, type: !312)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 7502, column: 2)
!11369 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 7502, column: 2)
!11370 = !DILocation(line: 7502, column: 2, scope: !11368)
!11371 = !DILocalVariable(name: "__dummy2", scope: !11368, file: !3, line: 7502, type: !312)
!11372 = !DILocation(line: 7502, column: 2, scope: !11369)
!11373 = !DILocation(line: 7502, column: 2, scope: !11311)
!11374 = !{i32 -2139325678}
!11375 = !DILocation(line: 7502, column: 2, scope: !11310)
!11376 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !11309)
!11377 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !11309)
!11378 = !DILocation(line: 7503, column: 7, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 7503, column: 6)
!11380 = !DILocation(line: 7503, column: 13, scope: !11379)
!11381 = !DILocation(line: 7503, column: 6, scope: !11304)
!11382 = !DILocation(line: 7504, column: 26, scope: !11379)
!11383 = !DILocation(line: 7504, column: 4, scope: !11379)
!11384 = !DILocation(line: 7505, column: 26, scope: !11304)
!11385 = !DILocation(line: 7505, column: 32, scope: !11304)
!11386 = !DILocation(line: 7505, column: 45, scope: !11304)
!11387 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !11306)
!11388 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !11306)
!11389 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !11306)
!11390 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !11306)
!11391 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !11306)
!11392 = !DILocation(line: 7507, column: 2, scope: !11304)
!11393 = distinct !DISubprogram(name: "hdlcdev_open", scope: !3, file: !3, line: 7518, type: !402, scopeLine: 7519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11394 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !11395)
!11395 = distinct !DILocation(line: 7559, column: 2, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 7559, column: 2)
!11397 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 7559, column: 2)
!11398 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 7559, column: 2)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 7559, column: 2)
!11400 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 7559, column: 2)
!11401 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !11402)
!11402 = distinct !DILocation(line: 7546, column: 3, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11404, file: !3, line: 7543, column: 33)
!11404 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 7543, column: 6)
!11405 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !11402)
!11406 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !11407)
!11407 = distinct !DILocation(line: 7544, column: 3, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 7544, column: 3)
!11409 = distinct !DILexicalBlock(scope: !11410, file: !3, line: 7544, column: 3)
!11410 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 7544, column: 3)
!11411 = distinct !DILexicalBlock(scope: !11412, file: !3, line: 7544, column: 3)
!11412 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 7544, column: 3)
!11413 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !11414)
!11414 = distinct !DILocation(line: 7540, column: 2, scope: !11393)
!11415 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !11414)
!11416 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !11417)
!11417 = distinct !DILocation(line: 7536, column: 3, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !3, line: 7534, column: 52)
!11419 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 7534, column: 6)
!11420 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !11417)
!11421 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !11422)
!11422 = distinct !DILocation(line: 7561, column: 2, scope: !11393)
!11423 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !11422)
!11424 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !11425)
!11425 = distinct !DILocation(line: 7533, column: 2, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 7533, column: 2)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 7533, column: 2)
!11428 = distinct !DILexicalBlock(scope: !11429, file: !3, line: 7533, column: 2)
!11429 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 7533, column: 2)
!11430 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 7533, column: 2)
!11431 = !DILocalVariable(name: "dev", arg: 1, scope: !11393, file: !3, line: 7518, type: !290)
!11432 = !DILocation(line: 7518, column: 44, scope: !11393)
!11433 = !DILocalVariable(name: "info", scope: !11393, file: !3, line: 7520, type: !7524)
!11434 = !DILocation(line: 7520, column: 22, scope: !11393)
!11435 = !DILocation(line: 7520, column: 29, scope: !11393)
!11436 = !DILocalVariable(name: "rc", scope: !11393, file: !3, line: 7521, type: !32)
!11437 = !DILocation(line: 7521, column: 6, scope: !11393)
!11438 = !DILocalVariable(name: "flags", scope: !11393, file: !3, line: 7522, type: !312)
!11439 = !DILocation(line: 7522, column: 16, scope: !11393)
!11440 = !DILocation(line: 7524, column: 6, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 7524, column: 6)
!11442 = !DILocation(line: 7524, column: 18, scope: !11441)
!11443 = !DILocation(line: 7524, column: 6, scope: !11393)
!11444 = !DILocation(line: 7525, column: 43, scope: !11441)
!11445 = !DILocation(line: 7525, column: 48, scope: !11441)
!11446 = !DILocation(line: 7525, column: 3, scope: !11441)
!11447 = !DILocation(line: 7528, column: 17, scope: !11393)
!11448 = !DILocation(line: 7528, column: 7, scope: !11393)
!11449 = !DILocation(line: 7528, column: 5, scope: !11393)
!11450 = !DILocation(line: 7529, column: 6, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 7529, column: 6)
!11452 = !DILocation(line: 7529, column: 6, scope: !11393)
!11453 = !DILocation(line: 7530, column: 10, scope: !11451)
!11454 = !DILocation(line: 7530, column: 3, scope: !11451)
!11455 = !DILocation(line: 7533, column: 2, scope: !11393)
!11456 = !DILocation(line: 7533, column: 2, scope: !11430)
!11457 = !DILocalVariable(name: "__dummy", scope: !11458, file: !3, line: 7533, type: !312)
!11458 = distinct !DILexicalBlock(scope: !11429, file: !3, line: 7533, column: 2)
!11459 = !DILocation(line: 7533, column: 2, scope: !11458)
!11460 = !DILocalVariable(name: "__dummy2", scope: !11458, file: !3, line: 7533, type: !312)
!11461 = !DILocation(line: 7533, column: 2, scope: !11429)
!11462 = !DILocation(line: 7533, column: 2, scope: !11428)
!11463 = !DILocation(line: 7533, column: 2, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11428, file: !3, line: 7533, column: 2)
!11465 = !DILocalVariable(name: "__dummy", scope: !11466, file: !3, line: 7533, type: !312)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 7533, column: 2)
!11467 = distinct !DILexicalBlock(scope: !11464, file: !3, line: 7533, column: 2)
!11468 = !DILocation(line: 7533, column: 2, scope: !11466)
!11469 = !DILocalVariable(name: "__dummy2", scope: !11466, file: !3, line: 7533, type: !312)
!11470 = !DILocation(line: 7533, column: 2, scope: !11467)
!11471 = !DILocation(line: 7533, column: 2, scope: !11427)
!11472 = !{i32 -2139324574}
!11473 = !DILocation(line: 7533, column: 2, scope: !11426)
!11474 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !11425)
!11475 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !11425)
!11476 = !DILocation(line: 7534, column: 6, scope: !11419)
!11477 = !DILocation(line: 7534, column: 12, scope: !11419)
!11478 = !DILocation(line: 7534, column: 17, scope: !11419)
!11479 = !DILocation(line: 7534, column: 23, scope: !11419)
!11480 = !DILocation(line: 7534, column: 28, scope: !11419)
!11481 = !DILocation(line: 7534, column: 31, scope: !11419)
!11482 = !DILocation(line: 7534, column: 37, scope: !11419)
!11483 = !DILocation(line: 7534, column: 46, scope: !11419)
!11484 = !DILocation(line: 7534, column: 6, scope: !11393)
!11485 = !DILocation(line: 7535, column: 57, scope: !11418)
!11486 = !DILocation(line: 7535, column: 62, scope: !11418)
!11487 = !DILocation(line: 7535, column: 3, scope: !11418)
!11488 = !DILocation(line: 7536, column: 27, scope: !11418)
!11489 = !DILocation(line: 7536, column: 33, scope: !11418)
!11490 = !DILocation(line: 7536, column: 42, scope: !11418)
!11491 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !11417)
!11492 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !11417)
!11493 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !11417)
!11494 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !11417)
!11495 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !11417)
!11496 = !DILocation(line: 7537, column: 3, scope: !11418)
!11497 = !DILocation(line: 7539, column: 2, scope: !11393)
!11498 = !DILocation(line: 7539, column: 8, scope: !11393)
!11499 = !DILocation(line: 7539, column: 16, scope: !11393)
!11500 = !DILocation(line: 7540, column: 26, scope: !11393)
!11501 = !DILocation(line: 7540, column: 32, scope: !11393)
!11502 = !DILocation(line: 7540, column: 41, scope: !11393)
!11503 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !11414)
!11504 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !11414)
!11505 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !11414)
!11506 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !11414)
!11507 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !11414)
!11508 = !DILocation(line: 7543, column: 20, scope: !11404)
!11509 = !DILocation(line: 7543, column: 12, scope: !11404)
!11510 = !DILocation(line: 7543, column: 10, scope: !11404)
!11511 = !DILocation(line: 7543, column: 27, scope: !11404)
!11512 = !DILocation(line: 7543, column: 6, scope: !11393)
!11513 = !DILocation(line: 7544, column: 3, scope: !11403)
!11514 = !DILocation(line: 7544, column: 3, scope: !11412)
!11515 = !DILocalVariable(name: "__dummy", scope: !11516, file: !3, line: 7544, type: !312)
!11516 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 7544, column: 3)
!11517 = !DILocation(line: 7544, column: 3, scope: !11516)
!11518 = !DILocalVariable(name: "__dummy2", scope: !11516, file: !3, line: 7544, type: !312)
!11519 = !DILocation(line: 7544, column: 3, scope: !11411)
!11520 = !DILocation(line: 7544, column: 3, scope: !11410)
!11521 = !DILocation(line: 7544, column: 3, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11410, file: !3, line: 7544, column: 3)
!11523 = !DILocalVariable(name: "__dummy", scope: !11524, file: !3, line: 7544, type: !312)
!11524 = distinct !DILexicalBlock(scope: !11525, file: !3, line: 7544, column: 3)
!11525 = distinct !DILexicalBlock(scope: !11522, file: !3, line: 7544, column: 3)
!11526 = !DILocation(line: 7544, column: 3, scope: !11524)
!11527 = !DILocalVariable(name: "__dummy2", scope: !11524, file: !3, line: 7544, type: !312)
!11528 = !DILocation(line: 7544, column: 3, scope: !11525)
!11529 = !DILocation(line: 7544, column: 3, scope: !11409)
!11530 = !{i32 -2139323511}
!11531 = !DILocation(line: 7544, column: 3, scope: !11408)
!11532 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !11407)
!11533 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !11407)
!11534 = !DILocation(line: 7545, column: 3, scope: !11403)
!11535 = !DILocation(line: 7545, column: 9, scope: !11403)
!11536 = !DILocation(line: 7545, column: 17, scope: !11403)
!11537 = !DILocation(line: 7546, column: 27, scope: !11403)
!11538 = !DILocation(line: 7546, column: 33, scope: !11403)
!11539 = !DILocation(line: 7546, column: 42, scope: !11403)
!11540 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !11402)
!11541 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !11402)
!11542 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !11402)
!11543 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !11402)
!11544 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !11402)
!11545 = !DILocation(line: 7547, column: 10, scope: !11403)
!11546 = !DILocation(line: 7547, column: 3, scope: !11403)
!11547 = !DILocation(line: 7551, column: 2, scope: !11393)
!11548 = !DILocation(line: 7551, column: 8, scope: !11393)
!11549 = !DILocation(line: 7551, column: 23, scope: !11393)
!11550 = !DILocation(line: 7552, column: 18, scope: !11393)
!11551 = !DILocation(line: 7552, column: 2, scope: !11393)
!11552 = !DILocation(line: 7555, column: 21, scope: !11393)
!11553 = !DILocation(line: 7555, column: 2, scope: !11393)
!11554 = !DILocation(line: 7556, column: 20, scope: !11393)
!11555 = !DILocation(line: 7556, column: 2, scope: !11393)
!11556 = !DILocation(line: 7559, column: 2, scope: !11393)
!11557 = !DILocation(line: 7559, column: 2, scope: !11400)
!11558 = !DILocalVariable(name: "__dummy", scope: !11559, file: !3, line: 7559, type: !312)
!11559 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 7559, column: 2)
!11560 = !DILocation(line: 7559, column: 2, scope: !11559)
!11561 = !DILocalVariable(name: "__dummy2", scope: !11559, file: !3, line: 7559, type: !312)
!11562 = !DILocation(line: 7559, column: 2, scope: !11399)
!11563 = !DILocation(line: 7559, column: 2, scope: !11398)
!11564 = !DILocation(line: 7559, column: 2, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 7559, column: 2)
!11566 = !DILocalVariable(name: "__dummy", scope: !11567, file: !3, line: 7559, type: !312)
!11567 = distinct !DILexicalBlock(scope: !11568, file: !3, line: 7559, column: 2)
!11568 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 7559, column: 2)
!11569 = !DILocation(line: 7559, column: 2, scope: !11567)
!11570 = !DILocalVariable(name: "__dummy2", scope: !11567, file: !3, line: 7559, type: !312)
!11571 = !DILocation(line: 7559, column: 2, scope: !11568)
!11572 = !DILocation(line: 7559, column: 2, scope: !11397)
!11573 = !{i32 -2139322436}
!11574 = !DILocation(line: 7559, column: 2, scope: !11396)
!11575 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !11395)
!11576 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !11395)
!11577 = !DILocation(line: 7560, column: 25, scope: !11393)
!11578 = !DILocation(line: 7560, column: 2, scope: !11393)
!11579 = !DILocation(line: 7561, column: 26, scope: !11393)
!11580 = !DILocation(line: 7561, column: 32, scope: !11393)
!11581 = !DILocation(line: 7561, column: 46, scope: !11393)
!11582 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !11422)
!11583 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !11422)
!11584 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !11422)
!11585 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !11422)
!11586 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !11422)
!11587 = !DILocation(line: 7562, column: 6, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 7562, column: 6)
!11589 = !DILocation(line: 7562, column: 12, scope: !11588)
!11590 = !DILocation(line: 7562, column: 27, scope: !11588)
!11591 = !DILocation(line: 7562, column: 6, scope: !11393)
!11592 = !DILocation(line: 7563, column: 20, scope: !11588)
!11593 = !DILocation(line: 7563, column: 3, scope: !11588)
!11594 = !DILocation(line: 7565, column: 21, scope: !11588)
!11595 = !DILocation(line: 7565, column: 3, scope: !11588)
!11596 = !DILocation(line: 7566, column: 2, scope: !11393)
!11597 = !DILocation(line: 7567, column: 1, scope: !11393)
!11598 = distinct !DISubprogram(name: "hdlcdev_close", scope: !3, file: !3, line: 7577, type: !402, scopeLine: 7578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11599 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !11600)
!11600 = distinct !DILocation(line: 7594, column: 2, scope: !11598)
!11601 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !11600)
!11602 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !11603)
!11603 = distinct !DILocation(line: 7592, column: 2, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11605, file: !3, line: 7592, column: 2)
!11605 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 7592, column: 2)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !3, line: 7592, column: 2)
!11607 = distinct !DILexicalBlock(scope: !11608, file: !3, line: 7592, column: 2)
!11608 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 7592, column: 2)
!11609 = !DILocalVariable(name: "dev", arg: 1, scope: !11598, file: !3, line: 7577, type: !290)
!11610 = !DILocation(line: 7577, column: 45, scope: !11598)
!11611 = !DILocalVariable(name: "info", scope: !11598, file: !3, line: 7579, type: !7524)
!11612 = !DILocation(line: 7579, column: 22, scope: !11598)
!11613 = !DILocation(line: 7579, column: 29, scope: !11598)
!11614 = !DILocalVariable(name: "flags", scope: !11598, file: !3, line: 7580, type: !312)
!11615 = !DILocation(line: 7580, column: 16, scope: !11598)
!11616 = !DILocation(line: 7582, column: 6, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 7582, column: 6)
!11618 = !DILocation(line: 7582, column: 18, scope: !11617)
!11619 = !DILocation(line: 7582, column: 6, scope: !11598)
!11620 = !DILocation(line: 7583, column: 44, scope: !11617)
!11621 = !DILocation(line: 7583, column: 49, scope: !11617)
!11622 = !DILocation(line: 7583, column: 3, scope: !11617)
!11623 = !DILocation(line: 7585, column: 19, scope: !11598)
!11624 = !DILocation(line: 7585, column: 2, scope: !11598)
!11625 = !DILocation(line: 7588, column: 11, scope: !11598)
!11626 = !DILocation(line: 7588, column: 2, scope: !11598)
!11627 = !DILocation(line: 7590, column: 13, scope: !11598)
!11628 = !DILocation(line: 7590, column: 2, scope: !11598)
!11629 = !DILocation(line: 7592, column: 2, scope: !11598)
!11630 = !DILocation(line: 7592, column: 2, scope: !11608)
!11631 = !DILocalVariable(name: "__dummy", scope: !11632, file: !3, line: 7592, type: !312)
!11632 = distinct !DILexicalBlock(scope: !11607, file: !3, line: 7592, column: 2)
!11633 = !DILocation(line: 7592, column: 2, scope: !11632)
!11634 = !DILocalVariable(name: "__dummy2", scope: !11632, file: !3, line: 7592, type: !312)
!11635 = !DILocation(line: 7592, column: 2, scope: !11607)
!11636 = !DILocation(line: 7592, column: 2, scope: !11606)
!11637 = !DILocation(line: 7592, column: 2, scope: !11638)
!11638 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 7592, column: 2)
!11639 = !DILocalVariable(name: "__dummy", scope: !11640, file: !3, line: 7592, type: !312)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 7592, column: 2)
!11641 = distinct !DILexicalBlock(scope: !11638, file: !3, line: 7592, column: 2)
!11642 = !DILocation(line: 7592, column: 2, scope: !11640)
!11643 = !DILocalVariable(name: "__dummy2", scope: !11640, file: !3, line: 7592, type: !312)
!11644 = !DILocation(line: 7592, column: 2, scope: !11641)
!11645 = !DILocation(line: 7592, column: 2, scope: !11605)
!11646 = !{i32 -2139321327}
!11647 = !DILocation(line: 7592, column: 2, scope: !11604)
!11648 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !11603)
!11649 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !11603)
!11650 = !DILocation(line: 7593, column: 2, scope: !11598)
!11651 = !DILocation(line: 7593, column: 8, scope: !11598)
!11652 = !DILocation(line: 7593, column: 16, scope: !11598)
!11653 = !DILocation(line: 7594, column: 26, scope: !11598)
!11654 = !DILocation(line: 7594, column: 32, scope: !11598)
!11655 = !DILocation(line: 7594, column: 41, scope: !11598)
!11656 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !11600)
!11657 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !11600)
!11658 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !11600)
!11659 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !11600)
!11660 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !11600)
!11661 = !DILocation(line: 7596, column: 2, scope: !11598)
!11662 = distinct !DISubprogram(name: "hdlcdev_ioctl", scope: !3, file: !3, line: 7607, type: !595, scopeLine: 7608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11663 = !DILocalVariable(name: "addr", arg: 1, scope: !11664, file: !11665, line: 138, type: !3276)
!11664 = distinct !DISubprogram(name: "check_copy_size", scope: !11665, file: !11665, line: 138, type: !11666, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11665 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!11666 = !DISubroutineType(types: !11667)
!11667 = !{!771, !3276, !1039, !771}
!11668 = !DILocation(line: 138, column: 29, scope: !11664, inlinedAt: !11669)
!11669 = distinct !DILocation(line: 191, column: 6, scope: !11670, inlinedAt: !11675)
!11670 = distinct !DILexicalBlock(scope: !11672, file: !11671, line: 191, column: 6)
!11671 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!11672 = distinct !DISubprogram(name: "copy_from_user", scope: !11671, file: !11671, line: 189, type: !11673, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11673 = !DISubroutineType(types: !11674)
!11674 = !{!312, !591, !3276, !312}
!11675 = distinct !DILocation(line: 7659, column: 7, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 7659, column: 7)
!11677 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 7625, column: 33)
!11678 = !DILocalVariable(name: "bytes", arg: 2, scope: !11664, file: !11665, line: 138, type: !1039)
!11679 = !DILocation(line: 138, column: 42, scope: !11664, inlinedAt: !11669)
!11680 = !DILocalVariable(name: "is_source", arg: 3, scope: !11664, file: !11665, line: 138, type: !771)
!11681 = !DILocation(line: 138, column: 54, scope: !11664, inlinedAt: !11669)
!11682 = !DILocalVariable(name: "sz", scope: !11664, file: !11665, line: 140, type: !32)
!11683 = !DILocation(line: 140, column: 6, scope: !11664, inlinedAt: !11669)
!11684 = !DILocalVariable(name: "__ret_warn_on", scope: !11685, file: !11665, line: 150, type: !32)
!11685 = distinct !DILexicalBlock(scope: !11686, file: !11665, line: 150, column: 6)
!11686 = distinct !DILexicalBlock(scope: !11664, file: !11665, line: 150, column: 6)
!11687 = !DILocation(line: 150, column: 6, scope: !11685, inlinedAt: !11669)
!11688 = !DILocalVariable(name: "to", arg: 1, scope: !11672, file: !11671, line: 189, type: !591)
!11689 = !DILocation(line: 189, column: 22, scope: !11672, inlinedAt: !11675)
!11690 = !DILocalVariable(name: "from", arg: 2, scope: !11672, file: !11671, line: 189, type: !3276)
!11691 = !DILocation(line: 189, column: 45, scope: !11672, inlinedAt: !11675)
!11692 = !DILocalVariable(name: "n", arg: 3, scope: !11672, file: !11671, line: 189, type: !312)
!11693 = !DILocation(line: 189, column: 65, scope: !11672, inlinedAt: !11675)
!11694 = !DILocation(line: 138, column: 29, scope: !11664, inlinedAt: !11695)
!11695 = distinct !DILocation(line: 199, column: 6, scope: !11696, inlinedAt: !11698)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !11671, line: 199, column: 6)
!11697 = distinct !DISubprogram(name: "copy_to_user", scope: !11671, file: !11671, line: 197, type: !11673, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11698 = distinct !DILocation(line: 7651, column: 7, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 7651, column: 7)
!11700 = !DILocation(line: 138, column: 42, scope: !11664, inlinedAt: !11695)
!11701 = !DILocation(line: 138, column: 54, scope: !11664, inlinedAt: !11695)
!11702 = !DILocation(line: 140, column: 6, scope: !11664, inlinedAt: !11695)
!11703 = !DILocation(line: 150, column: 6, scope: !11685, inlinedAt: !11695)
!11704 = !DILocalVariable(name: "to", arg: 1, scope: !11697, file: !11671, line: 197, type: !591)
!11705 = !DILocation(line: 197, column: 27, scope: !11697, inlinedAt: !11698)
!11706 = !DILocalVariable(name: "from", arg: 2, scope: !11697, file: !11671, line: 197, type: !3276)
!11707 = !DILocation(line: 197, column: 43, scope: !11697, inlinedAt: !11698)
!11708 = !DILocalVariable(name: "n", arg: 3, scope: !11697, file: !11671, line: 197, type: !312)
!11709 = !DILocation(line: 197, column: 63, scope: !11697, inlinedAt: !11698)
!11710 = !DILocalVariable(name: "dev", arg: 1, scope: !11662, file: !3, line: 7607, type: !290)
!11711 = !DILocation(line: 7607, column: 45, scope: !11662)
!11712 = !DILocalVariable(name: "ifr", arg: 2, scope: !11662, file: !3, line: 7607, type: !597)
!11713 = !DILocation(line: 7607, column: 64, scope: !11662)
!11714 = !DILocalVariable(name: "cmd", arg: 3, scope: !11662, file: !3, line: 7607, type: !32)
!11715 = !DILocation(line: 7607, column: 73, scope: !11662)
!11716 = !DILocalVariable(name: "size", scope: !11662, file: !3, line: 7609, type: !11717)
!11717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!11718 = !DILocation(line: 7609, column: 15, scope: !11662)
!11719 = !DILocalVariable(name: "new_line", scope: !11662, file: !3, line: 7610, type: !701)
!11720 = !DILocation(line: 7610, column: 23, scope: !11662)
!11721 = !DILocalVariable(name: "line", scope: !11662, file: !3, line: 7611, type: !700)
!11722 = !DILocation(line: 7611, column: 31, scope: !11662)
!11723 = !DILocation(line: 7611, column: 38, scope: !11662)
!11724 = !DILocation(line: 7611, column: 43, scope: !11662)
!11725 = !DILocation(line: 7611, column: 56, scope: !11662)
!11726 = !DILocation(line: 7611, column: 65, scope: !11662)
!11727 = !DILocalVariable(name: "info", scope: !11662, file: !3, line: 7612, type: !7524)
!11728 = !DILocation(line: 7612, column: 22, scope: !11662)
!11729 = !DILocation(line: 7612, column: 29, scope: !11662)
!11730 = !DILocalVariable(name: "flags", scope: !11662, file: !3, line: 7613, type: !7)
!11731 = !DILocation(line: 7613, column: 15, scope: !11662)
!11732 = !DILocation(line: 7615, column: 6, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 7615, column: 6)
!11734 = !DILocation(line: 7615, column: 18, scope: !11733)
!11735 = !DILocation(line: 7615, column: 6, scope: !11662)
!11736 = !DILocation(line: 7616, column: 44, scope: !11733)
!11737 = !DILocation(line: 7616, column: 49, scope: !11733)
!11738 = !DILocation(line: 7616, column: 3, scope: !11733)
!11739 = !DILocation(line: 7619, column: 6, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 7619, column: 6)
!11741 = !DILocation(line: 7619, column: 12, scope: !11740)
!11742 = !DILocation(line: 7619, column: 17, scope: !11740)
!11743 = !DILocation(line: 7619, column: 6, scope: !11662)
!11744 = !DILocation(line: 7620, column: 3, scope: !11740)
!11745 = !DILocation(line: 7622, column: 6, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11662, file: !3, line: 7622, column: 6)
!11747 = !DILocation(line: 7622, column: 10, scope: !11746)
!11748 = !DILocation(line: 7622, column: 6, scope: !11662)
!11749 = !DILocation(line: 7623, column: 21, scope: !11746)
!11750 = !DILocation(line: 7623, column: 26, scope: !11746)
!11751 = !DILocation(line: 7623, column: 31, scope: !11746)
!11752 = !DILocation(line: 7623, column: 10, scope: !11746)
!11753 = !DILocation(line: 7623, column: 3, scope: !11746)
!11754 = !DILocation(line: 7625, column: 9, scope: !11662)
!11755 = !DILocation(line: 7625, column: 14, scope: !11662)
!11756 = !DILocation(line: 7625, column: 27, scope: !11662)
!11757 = !DILocation(line: 7625, column: 2, scope: !11662)
!11758 = !DILocation(line: 7628, column: 3, scope: !11677)
!11759 = !DILocation(line: 7628, column: 8, scope: !11677)
!11760 = !DILocation(line: 7628, column: 21, scope: !11677)
!11761 = !DILocation(line: 7628, column: 26, scope: !11677)
!11762 = !DILocation(line: 7629, column: 7, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 7629, column: 7)
!11764 = !DILocation(line: 7629, column: 12, scope: !11763)
!11765 = !DILocation(line: 7629, column: 25, scope: !11763)
!11766 = !DILocation(line: 7629, column: 30, scope: !11763)
!11767 = !DILocation(line: 7629, column: 7, scope: !11677)
!11768 = !DILocation(line: 7630, column: 4, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11763, file: !3, line: 7629, column: 38)
!11770 = !DILocation(line: 7630, column: 9, scope: !11769)
!11771 = !DILocation(line: 7630, column: 22, scope: !11769)
!11772 = !DILocation(line: 7630, column: 27, scope: !11769)
!11773 = !DILocation(line: 7631, column: 4, scope: !11769)
!11774 = !DILocation(line: 7634, column: 11, scope: !11677)
!11775 = !DILocation(line: 7634, column: 17, scope: !11677)
!11776 = !DILocation(line: 7634, column: 24, scope: !11677)
!11777 = !DILocation(line: 7634, column: 30, scope: !11677)
!11778 = !DILocation(line: 7634, column: 9, scope: !11677)
!11779 = !DILocation(line: 7639, column: 3, scope: !11677)
!11780 = !DILocation(line: 7640, column: 11, scope: !11677)
!11781 = !DILocation(line: 7640, column: 3, scope: !11677)
!11782 = !DILocation(line: 7641, column: 64, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 7640, column: 17)
!11784 = !DILocation(line: 7641, column: 75, scope: !11783)
!11785 = !DILocation(line: 7641, column: 88, scope: !11783)
!11786 = !DILocation(line: 7642, column: 64, scope: !11783)
!11787 = !DILocation(line: 7642, column: 75, scope: !11783)
!11788 = !DILocation(line: 7642, column: 88, scope: !11783)
!11789 = !DILocation(line: 7643, column: 64, scope: !11783)
!11790 = !DILocation(line: 7643, column: 75, scope: !11783)
!11791 = !DILocation(line: 7643, column: 90, scope: !11783)
!11792 = !DILocation(line: 7644, column: 64, scope: !11783)
!11793 = !DILocation(line: 7644, column: 75, scope: !11783)
!11794 = !DILocation(line: 7644, column: 93, scope: !11783)
!11795 = !DILocation(line: 7645, column: 21, scope: !11783)
!11796 = !DILocation(line: 7645, column: 32, scope: !11783)
!11797 = !DILocation(line: 7646, column: 3, scope: !11783)
!11798 = !DILocation(line: 7648, column: 25, scope: !11677)
!11799 = !DILocation(line: 7648, column: 31, scope: !11677)
!11800 = !DILocation(line: 7648, column: 38, scope: !11677)
!11801 = !DILocation(line: 7648, column: 12, scope: !11677)
!11802 = !DILocation(line: 7648, column: 23, scope: !11677)
!11803 = !DILocation(line: 7649, column: 25, scope: !11677)
!11804 = !DILocation(line: 7649, column: 31, scope: !11677)
!11805 = !DILocation(line: 7649, column: 38, scope: !11677)
!11806 = !DILocation(line: 7649, column: 12, scope: !11677)
!11807 = !DILocation(line: 7649, column: 23, scope: !11677)
!11808 = !DILocation(line: 7651, column: 20, scope: !11699)
!11809 = !DILocation(line: 7651, column: 26, scope: !11699)
!11810 = !DILocation(line: 199, column: 6, scope: !11696, inlinedAt: !11698)
!11811 = !DILocation(line: 141, column: 6, scope: !11812, inlinedAt: !11695)
!11812 = distinct !DILexicalBlock(scope: !11664, file: !11665, line: 141, column: 6)
!11813 = !DILocation(line: 0, scope: !11812, inlinedAt: !11695)
!11814 = !DILocation(line: 141, column: 6, scope: !11664, inlinedAt: !11695)
!11815 = !DILocation(line: 142, column: 29, scope: !11816, inlinedAt: !11695)
!11816 = distinct !DILexicalBlock(scope: !11817, file: !11665, line: 142, column: 7)
!11817 = distinct !DILexicalBlock(scope: !11812, file: !11665, line: 141, column: 39)
!11818 = !DILocation(line: 142, column: 8, scope: !11816, inlinedAt: !11695)
!11819 = !DILocation(line: 142, column: 7, scope: !11817, inlinedAt: !11695)
!11820 = !DILocation(line: 143, column: 18, scope: !11816, inlinedAt: !11695)
!11821 = !DILocation(line: 143, column: 22, scope: !11816, inlinedAt: !11695)
!11822 = !DILocation(line: 143, column: 4, scope: !11816, inlinedAt: !11695)
!11823 = !DILocation(line: 144, column: 12, scope: !11824, inlinedAt: !11695)
!11824 = distinct !DILexicalBlock(scope: !11816, file: !11665, line: 144, column: 12)
!11825 = !DILocation(line: 144, column: 12, scope: !11816, inlinedAt: !11695)
!11826 = !DILocation(line: 145, column: 4, scope: !11824, inlinedAt: !11695)
!11827 = !DILocation(line: 147, column: 4, scope: !11824, inlinedAt: !11695)
!11828 = !DILocation(line: 148, column: 3, scope: !11817, inlinedAt: !11695)
!11829 = !DILocation(line: 150, column: 6, scope: !11830, inlinedAt: !11695)
!11830 = distinct !DILexicalBlock(scope: !11685, file: !11665, line: 150, column: 6)
!11831 = !DILocation(line: 150, column: 6, scope: !11832, inlinedAt: !11695)
!11832 = distinct !DILexicalBlock(scope: !11833, file: !11665, line: 150, column: 6)
!11833 = distinct !DILexicalBlock(scope: !11830, file: !11665, line: 150, column: 6)
!11834 = !{i32 -2145331973, i32 -2145331944, i32 -2145331898, i32 -2145331840, i32 -2145331786, i32 -2145331732, i32 -2145331677, i32 -2145331646}
!11835 = !DILocation(line: 150, column: 6, scope: !11836, inlinedAt: !11695)
!11836 = distinct !DILexicalBlock(scope: !11833, file: !11665, line: 150, column: 6)
!11837 = !{i32 -2145331226, i32 -2145331219, i32 -2145331167, i32 -2145331136, i32 -2145331106}
!11838 = !DILocation(line: 150, column: 6, scope: !11833, inlinedAt: !11695)
!11839 = !DILocation(line: 150, column: 6, scope: !11686, inlinedAt: !11695)
!11840 = !DILocation(line: 150, column: 6, scope: !11664, inlinedAt: !11695)
!11841 = !DILocation(line: 151, column: 3, scope: !11686, inlinedAt: !11695)
!11842 = !DILocation(line: 152, column: 20, scope: !11664, inlinedAt: !11695)
!11843 = !DILocation(line: 152, column: 26, scope: !11664, inlinedAt: !11695)
!11844 = !DILocation(line: 152, column: 33, scope: !11664, inlinedAt: !11695)
!11845 = !DILocation(line: 152, column: 2, scope: !11664, inlinedAt: !11695)
!11846 = !DILocation(line: 153, column: 2, scope: !11664, inlinedAt: !11695)
!11847 = !DILocation(line: 154, column: 1, scope: !11664, inlinedAt: !11695)
!11848 = !DILocation(line: 199, column: 6, scope: !11697, inlinedAt: !11698)
!11849 = !DILocation(line: 200, column: 21, scope: !11696, inlinedAt: !11698)
!11850 = !DILocation(line: 200, column: 25, scope: !11696, inlinedAt: !11698)
!11851 = !DILocation(line: 200, column: 31, scope: !11696, inlinedAt: !11698)
!11852 = !DILocation(line: 200, column: 7, scope: !11696, inlinedAt: !11698)
!11853 = !DILocation(line: 200, column: 5, scope: !11696, inlinedAt: !11698)
!11854 = !DILocation(line: 200, column: 3, scope: !11696, inlinedAt: !11698)
!11855 = !DILocation(line: 201, column: 9, scope: !11697, inlinedAt: !11698)
!11856 = !DILocation(line: 7651, column: 7, scope: !11699)
!11857 = !DILocation(line: 7651, column: 7, scope: !11677)
!11858 = !DILocation(line: 7652, column: 4, scope: !11699)
!11859 = !DILocation(line: 7653, column: 3, scope: !11677)
!11860 = !DILocation(line: 7657, column: 7, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 7657, column: 6)
!11862 = !DILocation(line: 7657, column: 6, scope: !11677)
!11863 = !DILocation(line: 7658, column: 4, scope: !11861)
!11864 = !DILocation(line: 7659, column: 22, scope: !11676)
!11865 = !DILocation(line: 7659, column: 33, scope: !11676)
!11866 = !DILocation(line: 191, column: 6, scope: !11670, inlinedAt: !11675)
!11867 = !DILocation(line: 141, column: 6, scope: !11812, inlinedAt: !11669)
!11868 = !DILocation(line: 0, scope: !11812, inlinedAt: !11669)
!11869 = !DILocation(line: 141, column: 6, scope: !11664, inlinedAt: !11669)
!11870 = !DILocation(line: 142, column: 29, scope: !11816, inlinedAt: !11669)
!11871 = !DILocation(line: 142, column: 8, scope: !11816, inlinedAt: !11669)
!11872 = !DILocation(line: 142, column: 7, scope: !11817, inlinedAt: !11669)
!11873 = !DILocation(line: 143, column: 18, scope: !11816, inlinedAt: !11669)
!11874 = !DILocation(line: 143, column: 22, scope: !11816, inlinedAt: !11669)
!11875 = !DILocation(line: 143, column: 4, scope: !11816, inlinedAt: !11669)
!11876 = !DILocation(line: 144, column: 12, scope: !11824, inlinedAt: !11669)
!11877 = !DILocation(line: 144, column: 12, scope: !11816, inlinedAt: !11669)
!11878 = !DILocation(line: 145, column: 4, scope: !11824, inlinedAt: !11669)
!11879 = !DILocation(line: 147, column: 4, scope: !11824, inlinedAt: !11669)
!11880 = !DILocation(line: 148, column: 3, scope: !11817, inlinedAt: !11669)
!11881 = !DILocation(line: 150, column: 6, scope: !11830, inlinedAt: !11669)
!11882 = !DILocation(line: 150, column: 6, scope: !11832, inlinedAt: !11669)
!11883 = !DILocation(line: 150, column: 6, scope: !11836, inlinedAt: !11669)
!11884 = !DILocation(line: 150, column: 6, scope: !11833, inlinedAt: !11669)
!11885 = !DILocation(line: 150, column: 6, scope: !11686, inlinedAt: !11669)
!11886 = !DILocation(line: 150, column: 6, scope: !11664, inlinedAt: !11669)
!11887 = !DILocation(line: 151, column: 3, scope: !11686, inlinedAt: !11669)
!11888 = !DILocation(line: 152, column: 20, scope: !11664, inlinedAt: !11669)
!11889 = !DILocation(line: 152, column: 26, scope: !11664, inlinedAt: !11669)
!11890 = !DILocation(line: 152, column: 33, scope: !11664, inlinedAt: !11669)
!11891 = !DILocation(line: 152, column: 2, scope: !11664, inlinedAt: !11669)
!11892 = !DILocation(line: 153, column: 2, scope: !11664, inlinedAt: !11669)
!11893 = !DILocation(line: 154, column: 1, scope: !11664, inlinedAt: !11669)
!11894 = !DILocation(line: 191, column: 6, scope: !11672, inlinedAt: !11675)
!11895 = !DILocation(line: 192, column: 23, scope: !11670, inlinedAt: !11675)
!11896 = !DILocation(line: 192, column: 27, scope: !11670, inlinedAt: !11675)
!11897 = !DILocation(line: 192, column: 33, scope: !11670, inlinedAt: !11675)
!11898 = !DILocation(line: 192, column: 7, scope: !11670, inlinedAt: !11675)
!11899 = !DILocation(line: 192, column: 5, scope: !11670, inlinedAt: !11675)
!11900 = !DILocation(line: 192, column: 3, scope: !11670, inlinedAt: !11675)
!11901 = !DILocation(line: 193, column: 9, scope: !11672, inlinedAt: !11675)
!11902 = !DILocation(line: 7659, column: 7, scope: !11676)
!11903 = !DILocation(line: 7659, column: 7, scope: !11677)
!11904 = !DILocation(line: 7660, column: 4, scope: !11676)
!11905 = !DILocation(line: 7662, column: 20, scope: !11677)
!11906 = !DILocation(line: 7662, column: 3, scope: !11677)
!11907 = !DILocation(line: 7664, column: 30, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 7663, column: 3)
!11909 = !DILocation(line: 7664, column: 77, scope: !11908)
!11910 = !DILocation(line: 7665, column: 30, scope: !11908)
!11911 = !DILocation(line: 7665, column: 77, scope: !11908)
!11912 = !DILocation(line: 7666, column: 30, scope: !11908)
!11913 = !DILocation(line: 7666, column: 77, scope: !11908)
!11914 = !DILocation(line: 7667, column: 30, scope: !11908)
!11915 = !DILocation(line: 7667, column: 77, scope: !11908)
!11916 = !DILocation(line: 7668, column: 32, scope: !11908)
!11917 = !DILocation(line: 7668, column: 38, scope: !11908)
!11918 = !DILocation(line: 7668, column: 45, scope: !11908)
!11919 = !DILocation(line: 7668, column: 51, scope: !11908)
!11920 = !DILocation(line: 7668, column: 30, scope: !11908)
!11921 = !DILocation(line: 7672, column: 58, scope: !11908)
!11922 = !DILocation(line: 7673, column: 12, scope: !11908)
!11923 = !DILocation(line: 7676, column: 16, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 7676, column: 7)
!11925 = !DILocation(line: 7676, column: 7, scope: !11924)
!11926 = !DILocation(line: 7676, column: 25, scope: !11924)
!11927 = !DILocation(line: 7676, column: 30, scope: !11924)
!11928 = !DILocation(line: 7676, column: 42, scope: !11924)
!11929 = !DILocation(line: 7676, column: 33, scope: !11924)
!11930 = !DILocation(line: 7676, column: 51, scope: !11924)
!11931 = !DILocation(line: 7676, column: 7, scope: !11677)
!11932 = !DILocation(line: 7677, column: 4, scope: !11924)
!11933 = !DILocation(line: 7679, column: 3, scope: !11677)
!11934 = !DILocation(line: 7679, column: 9, scope: !11677)
!11935 = !DILocation(line: 7679, column: 16, scope: !11677)
!11936 = !DILocation(line: 7679, column: 22, scope: !11677)
!11937 = !DILocation(line: 7683, column: 25, scope: !11677)
!11938 = !DILocation(line: 7683, column: 3, scope: !11677)
!11939 = !DILocation(line: 7683, column: 9, scope: !11677)
!11940 = !DILocation(line: 7683, column: 16, scope: !11677)
!11941 = !DILocation(line: 7683, column: 22, scope: !11677)
!11942 = !DILocation(line: 7685, column: 36, scope: !11677)
!11943 = !DILocation(line: 7685, column: 27, scope: !11677)
!11944 = !DILocation(line: 7685, column: 3, scope: !11677)
!11945 = !DILocation(line: 7685, column: 9, scope: !11677)
!11946 = !DILocation(line: 7685, column: 16, scope: !11677)
!11947 = !DILocation(line: 7685, column: 25, scope: !11677)
!11948 = !DILocation(line: 7687, column: 7, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 7687, column: 7)
!11950 = !DILocation(line: 7687, column: 13, scope: !11949)
!11951 = !DILocation(line: 7687, column: 7, scope: !11677)
!11952 = !DILocation(line: 7688, column: 40, scope: !11949)
!11953 = !DILocation(line: 7688, column: 31, scope: !11949)
!11954 = !DILocation(line: 7688, column: 4, scope: !11949)
!11955 = !DILocation(line: 7688, column: 10, scope: !11949)
!11956 = !DILocation(line: 7688, column: 17, scope: !11949)
!11957 = !DILocation(line: 7688, column: 29, scope: !11949)
!11958 = !DILocation(line: 7690, column: 4, scope: !11949)
!11959 = !DILocation(line: 7690, column: 10, scope: !11949)
!11960 = !DILocation(line: 7690, column: 17, scope: !11949)
!11961 = !DILocation(line: 7690, column: 29, scope: !11949)
!11962 = !DILocation(line: 7693, column: 7, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11677, file: !3, line: 7693, column: 7)
!11964 = !DILocation(line: 7693, column: 13, scope: !11963)
!11965 = !DILocation(line: 7693, column: 7, scope: !11677)
!11966 = !DILocation(line: 7694, column: 20, scope: !11963)
!11967 = !DILocation(line: 7694, column: 4, scope: !11963)
!11968 = !DILocation(line: 7695, column: 3, scope: !11677)
!11969 = !DILocation(line: 7698, column: 21, scope: !11677)
!11970 = !DILocation(line: 7698, column: 26, scope: !11677)
!11971 = !DILocation(line: 7698, column: 31, scope: !11677)
!11972 = !DILocation(line: 7698, column: 10, scope: !11677)
!11973 = !DILocation(line: 7698, column: 3, scope: !11677)
!11974 = !DILocation(line: 7700, column: 1, scope: !11662)
!11975 = distinct !DISubprogram(name: "hdlcdev_tx_timeout", scope: !3, file: !3, line: 7707, type: !733, scopeLine: 7708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11976 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !11977)
!11977 = distinct !DILocation(line: 7720, column: 2, scope: !11975)
!11978 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !11977)
!11979 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !11980)
!11980 = distinct !DILocation(line: 7718, column: 2, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 7718, column: 2)
!11982 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 7718, column: 2)
!11983 = distinct !DILexicalBlock(scope: !11984, file: !3, line: 7718, column: 2)
!11984 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 7718, column: 2)
!11985 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 7718, column: 2)
!11986 = !DILocalVariable(name: "dev", arg: 1, scope: !11975, file: !3, line: 7707, type: !290)
!11987 = !DILocation(line: 7707, column: 51, scope: !11975)
!11988 = !DILocalVariable(name: "txqueue", arg: 2, scope: !11975, file: !3, line: 7707, type: !7)
!11989 = !DILocation(line: 7707, column: 69, scope: !11975)
!11990 = !DILocalVariable(name: "info", scope: !11975, file: !3, line: 7709, type: !7524)
!11991 = !DILocation(line: 7709, column: 22, scope: !11975)
!11992 = !DILocation(line: 7709, column: 29, scope: !11975)
!11993 = !DILocalVariable(name: "flags", scope: !11975, file: !3, line: 7710, type: !312)
!11994 = !DILocation(line: 7710, column: 16, scope: !11975)
!11995 = !DILocation(line: 7712, column: 6, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 7712, column: 6)
!11997 = !DILocation(line: 7712, column: 18, scope: !11996)
!11998 = !DILocation(line: 7712, column: 6, scope: !11975)
!11999 = !DILocation(line: 7713, column: 37, scope: !11996)
!12000 = !DILocation(line: 7713, column: 42, scope: !11996)
!12001 = !DILocation(line: 7713, column: 3, scope: !11996)
!12002 = !DILocation(line: 7715, column: 2, scope: !11975)
!12003 = !DILocation(line: 7715, column: 7, scope: !11975)
!12004 = !DILocation(line: 7715, column: 13, scope: !11975)
!12005 = !DILocation(line: 7715, column: 22, scope: !11975)
!12006 = !DILocation(line: 7716, column: 2, scope: !11975)
!12007 = !DILocation(line: 7716, column: 7, scope: !11975)
!12008 = !DILocation(line: 7716, column: 13, scope: !11975)
!12009 = !DILocation(line: 7716, column: 30, scope: !11975)
!12010 = !DILocation(line: 7718, column: 2, scope: !11975)
!12011 = !DILocation(line: 7718, column: 2, scope: !11985)
!12012 = !DILocalVariable(name: "__dummy", scope: !12013, file: !3, line: 7718, type: !312)
!12013 = distinct !DILexicalBlock(scope: !11984, file: !3, line: 7718, column: 2)
!12014 = !DILocation(line: 7718, column: 2, scope: !12013)
!12015 = !DILocalVariable(name: "__dummy2", scope: !12013, file: !3, line: 7718, type: !312)
!12016 = !DILocation(line: 7718, column: 2, scope: !11984)
!12017 = !DILocation(line: 7718, column: 2, scope: !11983)
!12018 = !DILocation(line: 7718, column: 2, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 7718, column: 2)
!12020 = !DILocalVariable(name: "__dummy", scope: !12021, file: !3, line: 7718, type: !312)
!12021 = distinct !DILexicalBlock(scope: !12022, file: !3, line: 7718, column: 2)
!12022 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 7718, column: 2)
!12023 = !DILocation(line: 7718, column: 2, scope: !12021)
!12024 = !DILocalVariable(name: "__dummy2", scope: !12021, file: !3, line: 7718, type: !312)
!12025 = !DILocation(line: 7718, column: 2, scope: !12022)
!12026 = !DILocation(line: 7718, column: 2, scope: !11982)
!12027 = !{i32 -2139319698}
!12028 = !DILocation(line: 7718, column: 2, scope: !11981)
!12029 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !11980)
!12030 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !11980)
!12031 = !DILocation(line: 7719, column: 23, scope: !11975)
!12032 = !DILocation(line: 7719, column: 2, scope: !11975)
!12033 = !DILocation(line: 7720, column: 26, scope: !11975)
!12034 = !DILocation(line: 7720, column: 32, scope: !11975)
!12035 = !DILocation(line: 7720, column: 45, scope: !11975)
!12036 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !11977)
!12037 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !11977)
!12038 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !11977)
!12039 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !11977)
!12040 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !11977)
!12041 = !DILocation(line: 7722, column: 19, scope: !11975)
!12042 = !DILocation(line: 7722, column: 2, scope: !11975)
!12043 = !DILocation(line: 7723, column: 1, scope: !11975)
!12044 = distinct !DISubprogram(name: "startup", scope: !3, file: !3, line: 1746, type: !9631, scopeLine: 1747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12045 = !DILocalVariable(name: "info", arg: 1, scope: !12044, file: !3, line: 1746, type: !7524)
!12046 = !DILocation(line: 1746, column: 41, scope: !12044)
!12047 = !DILocalVariable(name: "retval", scope: !12044, file: !3, line: 1748, type: !32)
!12048 = !DILocation(line: 1748, column: 6, scope: !12044)
!12049 = !DILocation(line: 1750, column: 7, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 1750, column: 7)
!12051 = !DILocation(line: 1750, column: 19, scope: !12050)
!12052 = !DILocation(line: 1750, column: 7, scope: !12044)
!12053 = !DILocation(line: 1751, column: 56, scope: !12050)
!12054 = !DILocation(line: 1751, column: 62, scope: !12050)
!12055 = !DILocation(line: 1751, column: 3, scope: !12050)
!12056 = !DILocation(line: 1753, column: 28, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 1753, column: 6)
!12058 = !DILocation(line: 1753, column: 34, scope: !12057)
!12059 = !DILocation(line: 1753, column: 6, scope: !12057)
!12060 = !DILocation(line: 1753, column: 6, scope: !12044)
!12061 = !DILocation(line: 1754, column: 3, scope: !12057)
!12062 = !DILocation(line: 1756, column: 7, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 1756, column: 6)
!12064 = !DILocation(line: 1756, column: 13, scope: !12063)
!12065 = !DILocation(line: 1756, column: 6, scope: !12044)
!12066 = !DILocation(line: 1758, column: 37, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 1756, column: 23)
!12068 = !DILocation(line: 1758, column: 20, scope: !12067)
!12069 = !DILocation(line: 1758, column: 3, scope: !12067)
!12070 = !DILocation(line: 1758, column: 9, scope: !12067)
!12071 = !DILocation(line: 1758, column: 18, scope: !12067)
!12072 = !DILocation(line: 1759, column: 8, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12067, file: !3, line: 1759, column: 7)
!12074 = !DILocation(line: 1759, column: 14, scope: !12073)
!12075 = !DILocation(line: 1759, column: 7, scope: !12067)
!12076 = !DILocation(line: 1761, column: 23, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12073, file: !3, line: 1759, column: 24)
!12078 = !DILocation(line: 1761, column: 29, scope: !12077)
!12079 = !DILocation(line: 1760, column: 4, scope: !12077)
!12080 = !DILocation(line: 1762, column: 4, scope: !12077)
!12081 = !DILocation(line: 1764, column: 2, scope: !12067)
!12082 = !DILocation(line: 1766, column: 2, scope: !12044)
!12083 = !DILocation(line: 1766, column: 8, scope: !12044)
!12084 = !DILocation(line: 1766, column: 19, scope: !12044)
!12085 = !DILocation(line: 1768, column: 10, scope: !12044)
!12086 = !DILocation(line: 1768, column: 16, scope: !12044)
!12087 = !DILocation(line: 1768, column: 2, scope: !12044)
!12088 = !DILocation(line: 1770, column: 2, scope: !12044)
!12089 = !DILocation(line: 1773, column: 32, scope: !12044)
!12090 = !DILocation(line: 1773, column: 11, scope: !12044)
!12091 = !DILocation(line: 1773, column: 9, scope: !12044)
!12092 = !DILocation(line: 1776, column: 8, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 1776, column: 7)
!12094 = !DILocation(line: 1776, column: 7, scope: !12044)
!12095 = !DILocation(line: 1777, column: 30, scope: !12093)
!12096 = !DILocation(line: 1777, column: 12, scope: !12093)
!12097 = !DILocation(line: 1777, column: 10, scope: !12093)
!12098 = !DILocation(line: 1777, column: 3, scope: !12093)
!12099 = !DILocation(line: 1779, column: 7, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 1779, column: 7)
!12101 = !DILocation(line: 1779, column: 7, scope: !12044)
!12102 = !DILocation(line: 1780, column: 9, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 1780, column: 9)
!12104 = distinct !DILexicalBlock(scope: !12100, file: !3, line: 1779, column: 16)
!12105 = !DILocation(line: 1780, column: 32, scope: !12103)
!12106 = !DILocation(line: 1780, column: 35, scope: !12103)
!12107 = !DILocation(line: 1780, column: 41, scope: !12103)
!12108 = !DILocation(line: 1780, column: 46, scope: !12103)
!12109 = !DILocation(line: 1780, column: 9, scope: !12104)
!12110 = !DILocation(line: 1781, column: 27, scope: !12103)
!12111 = !DILocation(line: 1781, column: 33, scope: !12103)
!12112 = !DILocation(line: 1781, column: 38, scope: !12103)
!12113 = !DILocation(line: 1781, column: 43, scope: !12103)
!12114 = !DILocation(line: 1781, column: 4, scope: !12103)
!12115 = !DILocation(line: 1782, column: 26, scope: !12104)
!12116 = !DILocation(line: 1782, column: 3, scope: !12104)
!12117 = !DILocation(line: 1783, column: 12, scope: !12104)
!12118 = !DILocation(line: 1783, column: 5, scope: !12104)
!12119 = !DILocation(line: 1787, column: 21, scope: !12044)
!12120 = !DILocation(line: 1787, column: 2, scope: !12044)
!12121 = !DILocation(line: 1789, column: 6, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 1789, column: 6)
!12123 = !DILocation(line: 1789, column: 12, scope: !12122)
!12124 = !DILocation(line: 1789, column: 17, scope: !12122)
!12125 = !DILocation(line: 1789, column: 6, scope: !12044)
!12126 = !DILocation(line: 1790, column: 28, scope: !12122)
!12127 = !DILocation(line: 1790, column: 34, scope: !12122)
!12128 = !DILocation(line: 1790, column: 39, scope: !12122)
!12129 = !DILocation(line: 1790, column: 44, scope: !12122)
!12130 = !DILocation(line: 1790, column: 3, scope: !12122)
!12131 = !DILocation(line: 1792, column: 28, scope: !12044)
!12132 = !DILocation(line: 1792, column: 34, scope: !12044)
!12133 = !DILocation(line: 1792, column: 2, scope: !12044)
!12134 = !DILocation(line: 1794, column: 2, scope: !12044)
!12135 = !DILocation(line: 1795, column: 1, scope: !12044)
!12136 = distinct !DISubprogram(name: "mgsl_program_hw", scope: !3, file: !3, line: 1860, type: !8185, scopeLine: 1861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12137 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !12138)
!12138 = distinct !DILocation(line: 1891, column: 2, scope: !12136)
!12139 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !12138)
!12140 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !12141)
!12141 = distinct !DILocation(line: 1864, column: 2, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12143, file: !3, line: 1864, column: 2)
!12143 = distinct !DILexicalBlock(scope: !12144, file: !3, line: 1864, column: 2)
!12144 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 1864, column: 2)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !3, line: 1864, column: 2)
!12146 = distinct !DILexicalBlock(scope: !12136, file: !3, line: 1864, column: 2)
!12147 = !DILocalVariable(name: "info", arg: 1, scope: !12136, file: !3, line: 1860, type: !7524)
!12148 = !DILocation(line: 1860, column: 49, scope: !12136)
!12149 = !DILocalVariable(name: "flags", scope: !12136, file: !3, line: 1862, type: !312)
!12150 = !DILocation(line: 1862, column: 16, scope: !12136)
!12151 = !DILocation(line: 1864, column: 2, scope: !12136)
!12152 = !DILocation(line: 1864, column: 2, scope: !12146)
!12153 = !DILocalVariable(name: "__dummy", scope: !12154, file: !3, line: 1864, type: !312)
!12154 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 1864, column: 2)
!12155 = !DILocation(line: 1864, column: 2, scope: !12154)
!12156 = !DILocalVariable(name: "__dummy2", scope: !12154, file: !3, line: 1864, type: !312)
!12157 = !DILocation(line: 1864, column: 2, scope: !12145)
!12158 = !DILocation(line: 1864, column: 2, scope: !12144)
!12159 = !DILocation(line: 1864, column: 2, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12144, file: !3, line: 1864, column: 2)
!12161 = !DILocalVariable(name: "__dummy", scope: !12162, file: !3, line: 1864, type: !312)
!12162 = distinct !DILexicalBlock(scope: !12163, file: !3, line: 1864, column: 2)
!12163 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 1864, column: 2)
!12164 = !DILocation(line: 1864, column: 2, scope: !12162)
!12165 = !DILocalVariable(name: "__dummy2", scope: !12162, file: !3, line: 1864, type: !312)
!12166 = !DILocation(line: 1864, column: 2, scope: !12163)
!12167 = !DILocation(line: 1864, column: 2, scope: !12143)
!12168 = !{i32 -2139453903}
!12169 = !DILocation(line: 1864, column: 2, scope: !12142)
!12170 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !12141)
!12171 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !12141)
!12172 = !DILocation(line: 1866, column: 20, scope: !12136)
!12173 = !DILocation(line: 1866, column: 2, scope: !12136)
!12174 = !DILocation(line: 1867, column: 23, scope: !12136)
!12175 = !DILocation(line: 1867, column: 2, scope: !12136)
!12176 = !DILocation(line: 1868, column: 37, scope: !12136)
!12177 = !DILocation(line: 1868, column: 43, scope: !12136)
!12178 = !DILocation(line: 1868, column: 53, scope: !12136)
!12179 = !DILocation(line: 1868, column: 19, scope: !12136)
!12180 = !DILocation(line: 1868, column: 25, scope: !12136)
!12181 = !DILocation(line: 1868, column: 35, scope: !12136)
!12182 = !DILocation(line: 1868, column: 2, scope: !12136)
!12183 = !DILocation(line: 1868, column: 8, scope: !12136)
!12184 = !DILocation(line: 1868, column: 17, scope: !12136)
!12185 = !DILocation(line: 1870, column: 6, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12136, file: !3, line: 1870, column: 6)
!12187 = !DILocation(line: 1870, column: 12, scope: !12186)
!12188 = !DILocation(line: 1870, column: 19, scope: !12186)
!12189 = !DILocation(line: 1870, column: 24, scope: !12186)
!12190 = !DILocation(line: 1870, column: 42, scope: !12186)
!12191 = !DILocation(line: 1871, column: 6, scope: !12186)
!12192 = !DILocation(line: 1871, column: 12, scope: !12186)
!12193 = !DILocation(line: 1871, column: 19, scope: !12186)
!12194 = !DILocation(line: 1871, column: 24, scope: !12186)
!12195 = !DILocation(line: 1871, column: 41, scope: !12186)
!12196 = !DILocation(line: 1872, column: 6, scope: !12186)
!12197 = !DILocation(line: 1872, column: 12, scope: !12186)
!12198 = !DILocation(line: 1870, column: 6, scope: !12136)
!12199 = !DILocation(line: 1873, column: 21, scope: !12186)
!12200 = !DILocation(line: 1873, column: 3, scope: !12186)
!12201 = !DILocation(line: 1875, column: 22, scope: !12186)
!12202 = !DILocation(line: 1875, column: 3, scope: !12186)
!12203 = !DILocation(line: 1877, column: 25, scope: !12136)
!12204 = !DILocation(line: 1877, column: 2, scope: !12136)
!12205 = !DILocation(line: 1879, column: 2, scope: !12136)
!12206 = !DILocation(line: 1879, column: 8, scope: !12136)
!12207 = !DILocation(line: 1879, column: 21, scope: !12136)
!12208 = !DILocation(line: 1880, column: 2, scope: !12136)
!12209 = !DILocation(line: 1880, column: 8, scope: !12136)
!12210 = !DILocation(line: 1880, column: 21, scope: !12136)
!12211 = !DILocation(line: 1881, column: 2, scope: !12136)
!12212 = !DILocation(line: 1881, column: 8, scope: !12136)
!12213 = !DILocation(line: 1881, column: 20, scope: !12136)
!12214 = !DILocation(line: 1882, column: 2, scope: !12136)
!12215 = !DILocation(line: 1882, column: 8, scope: !12136)
!12216 = !DILocation(line: 1882, column: 21, scope: !12136)
!12217 = !DILocation(line: 1884, column: 2, scope: !12136)
!12218 = !DILocation(line: 1885, column: 2, scope: !12136)
!12219 = !DILocation(line: 1886, column: 25, scope: !12136)
!12220 = !DILocation(line: 1886, column: 2, scope: !12136)
!12221 = !DILocation(line: 1888, column: 6, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12136, file: !3, line: 1888, column: 6)
!12223 = !DILocation(line: 1888, column: 12, scope: !12222)
!12224 = !DILocation(line: 1888, column: 21, scope: !12222)
!12225 = !DILocation(line: 1888, column: 24, scope: !12222)
!12226 = !DILocation(line: 1888, column: 30, scope: !12222)
!12227 = !DILocation(line: 1888, column: 35, scope: !12222)
!12228 = !DILocation(line: 1888, column: 40, scope: !12222)
!12229 = !DILocation(line: 1888, column: 48, scope: !12222)
!12230 = !DILocation(line: 1888, column: 56, scope: !12222)
!12231 = !DILocation(line: 1888, column: 6, scope: !12136)
!12232 = !DILocation(line: 1889, column: 22, scope: !12222)
!12233 = !DILocation(line: 1889, column: 3, scope: !12222)
!12234 = !DILocation(line: 1891, column: 26, scope: !12136)
!12235 = !DILocation(line: 1891, column: 32, scope: !12136)
!12236 = !DILocation(line: 1891, column: 45, scope: !12136)
!12237 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !12138)
!12238 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !12138)
!12239 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !12138)
!12240 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !12138)
!12241 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !12138)
!12242 = !DILocation(line: 1892, column: 1, scope: !12136)
!12243 = distinct !DISubprogram(name: "netif_trans_update", scope: !31, file: !31, line: 4223, type: !406, scopeLine: 4224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12244 = !DILocalVariable(name: "dev", arg: 1, scope: !12243, file: !31, line: 4223, type: !290)
!12245 = !DILocation(line: 4223, column: 58, scope: !12243)
!12246 = !DILocalVariable(name: "txq", scope: !12243, file: !31, line: 4225, type: !7315)
!12247 = !DILocation(line: 4225, column: 23, scope: !12243)
!12248 = !DILocation(line: 4225, column: 49, scope: !12243)
!12249 = !DILocation(line: 4225, column: 29, scope: !12243)
!12250 = !DILocation(line: 4227, column: 6, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12243, file: !31, line: 4227, column: 6)
!12252 = !DILocation(line: 4227, column: 11, scope: !12251)
!12253 = !DILocation(line: 4227, column: 26, scope: !12251)
!12254 = !DILocation(line: 4227, column: 23, scope: !12251)
!12255 = !DILocation(line: 4227, column: 6, scope: !12243)
!12256 = !DILocation(line: 4228, column: 22, scope: !12251)
!12257 = !DILocation(line: 4228, column: 3, scope: !12251)
!12258 = !DILocation(line: 4228, column: 8, scope: !12251)
!12259 = !DILocation(line: 4228, column: 20, scope: !12251)
!12260 = !DILocation(line: 4229, column: 1, scope: !12243)
!12261 = distinct !DISubprogram(name: "netif_start_queue", scope: !31, file: !31, line: 3285, type: !406, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12262 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !12263, file: !31, line: 3274, type: !7315)
!12263 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !31, file: !31, line: 3274, type: !12264, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12264 = !DISubroutineType(types: !12265)
!12265 = !{null, !7315}
!12266 = !DILocation(line: 3274, column: 71, scope: !12263, inlinedAt: !12267)
!12267 = distinct !DILocation(line: 3287, column: 2, scope: !12261)
!12268 = !DILocalVariable(name: "dev", arg: 1, scope: !12261, file: !31, line: 3285, type: !290)
!12269 = !DILocation(line: 3285, column: 57, scope: !12261)
!12270 = !DILocation(line: 3287, column: 43, scope: !12261)
!12271 = !DILocation(line: 3287, column: 23, scope: !12261)
!12272 = !DILocation(line: 3276, column: 37, scope: !12263, inlinedAt: !12267)
!12273 = !DILocation(line: 3276, column: 48, scope: !12263, inlinedAt: !12267)
!12274 = !DILocation(line: 3276, column: 2, scope: !12263, inlinedAt: !12267)
!12275 = !DILocation(line: 3288, column: 1, scope: !12261)
!12276 = distinct !DISubprogram(name: "tty_port_initialized", scope: !3762, file: !3762, line: 664, type: !12277, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12277 = !DISubroutineType(types: !12278)
!12278 = !{!771, !4766}
!12279 = !DILocalVariable(name: "port", arg: 1, scope: !12276, file: !3762, line: 664, type: !4766)
!12280 = !DILocation(line: 664, column: 58, scope: !12276)
!12281 = !DILocation(line: 666, column: 41, scope: !12276)
!12282 = !DILocation(line: 666, column: 47, scope: !12276)
!12283 = !DILocation(line: 666, column: 9, scope: !12276)
!12284 = !DILocation(line: 666, column: 2, scope: !12276)
!12285 = distinct !DISubprogram(name: "mgsl_tx_timeout", scope: !3, file: !3, line: 7321, type: !3260, scopeLine: 7322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12286 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !12287)
!12287 = distinct !DILocation(line: 7341, column: 2, scope: !12285)
!12288 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !12287)
!12289 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !12290)
!12290 = distinct !DILocation(line: 7334, column: 2, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12292, file: !3, line: 7334, column: 2)
!12292 = distinct !DILexicalBlock(scope: !12293, file: !3, line: 7334, column: 2)
!12293 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 7334, column: 2)
!12294 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 7334, column: 2)
!12295 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 7334, column: 2)
!12296 = !DILocalVariable(name: "t", arg: 1, scope: !12285, file: !3, line: 7321, type: !3262)
!12297 = !DILocation(line: 7321, column: 48, scope: !12285)
!12298 = !DILocalVariable(name: "info", scope: !12285, file: !3, line: 7323, type: !7524)
!12299 = !DILocation(line: 7323, column: 22, scope: !12285)
!12300 = !DILocalVariable(name: "__mptr", scope: !12301, file: !3, line: 7323, type: !591)
!12301 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 7323, column: 29)
!12302 = !DILocation(line: 7323, column: 29, scope: !12301)
!12303 = !DILocation(line: 7323, column: 29, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12301, file: !3, line: 7323, column: 29)
!12305 = !DILocalVariable(name: "flags", scope: !12285, file: !3, line: 7324, type: !312)
!12306 = !DILocation(line: 7324, column: 16, scope: !12285)
!12307 = !DILocation(line: 7326, column: 7, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 7326, column: 7)
!12309 = !DILocation(line: 7326, column: 19, scope: !12308)
!12310 = !DILocation(line: 7326, column: 7, scope: !12285)
!12311 = !DILocation(line: 7328, column: 22, scope: !12308)
!12312 = !DILocation(line: 7328, column: 28, scope: !12308)
!12313 = !DILocation(line: 7327, column: 3, scope: !12308)
!12314 = !DILocation(line: 7329, column: 5, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 7329, column: 5)
!12316 = !DILocation(line: 7329, column: 11, scope: !12315)
!12317 = !DILocation(line: 7329, column: 21, scope: !12315)
!12318 = !DILocation(line: 7330, column: 6, scope: !12315)
!12319 = !DILocation(line: 7330, column: 12, scope: !12315)
!12320 = !DILocation(line: 7330, column: 19, scope: !12315)
!12321 = !DILocation(line: 7330, column: 24, scope: !12315)
!12322 = !DILocation(line: 7330, column: 42, scope: !12315)
!12323 = !DILocation(line: 7331, column: 6, scope: !12315)
!12324 = !DILocation(line: 7331, column: 12, scope: !12315)
!12325 = !DILocation(line: 7331, column: 19, scope: !12315)
!12326 = !DILocation(line: 7331, column: 24, scope: !12315)
!12327 = !DILocation(line: 7329, column: 5, scope: !12285)
!12328 = !DILocation(line: 7332, column: 3, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 7331, column: 44)
!12330 = !DILocation(line: 7332, column: 9, scope: !12329)
!12331 = !DILocation(line: 7332, column: 16, scope: !12329)
!12332 = !DILocation(line: 7332, column: 25, scope: !12329)
!12333 = !DILocation(line: 7333, column: 2, scope: !12329)
!12334 = !DILocation(line: 7334, column: 2, scope: !12285)
!12335 = !DILocation(line: 7334, column: 2, scope: !12295)
!12336 = !DILocalVariable(name: "__dummy", scope: !12337, file: !3, line: 7334, type: !312)
!12337 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 7334, column: 2)
!12338 = !DILocation(line: 7334, column: 2, scope: !12337)
!12339 = !DILocalVariable(name: "__dummy2", scope: !12337, file: !3, line: 7334, type: !312)
!12340 = !DILocation(line: 7334, column: 2, scope: !12294)
!12341 = !DILocation(line: 7334, column: 2, scope: !12293)
!12342 = !DILocation(line: 7334, column: 2, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12293, file: !3, line: 7334, column: 2)
!12344 = !DILocalVariable(name: "__dummy", scope: !12345, file: !3, line: 7334, type: !312)
!12345 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 7334, column: 2)
!12346 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 7334, column: 2)
!12347 = !DILocation(line: 7334, column: 2, scope: !12345)
!12348 = !DILocalVariable(name: "__dummy2", scope: !12345, file: !3, line: 7334, type: !312)
!12349 = !DILocation(line: 7334, column: 2, scope: !12346)
!12350 = !DILocation(line: 7334, column: 2, scope: !12292)
!12351 = !{i32 -2139328079}
!12352 = !DILocation(line: 7334, column: 2, scope: !12291)
!12353 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !12290)
!12354 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !12290)
!12355 = !DILocation(line: 7335, column: 2, scope: !12285)
!12356 = !DILocation(line: 7335, column: 8, scope: !12285)
!12357 = !DILocation(line: 7335, column: 18, scope: !12285)
!12358 = !DILocation(line: 7336, column: 37, scope: !12285)
!12359 = !DILocation(line: 7336, column: 43, scope: !12285)
!12360 = !DILocation(line: 7336, column: 53, scope: !12285)
!12361 = !DILocation(line: 7336, column: 19, scope: !12285)
!12362 = !DILocation(line: 7336, column: 25, scope: !12285)
!12363 = !DILocation(line: 7336, column: 35, scope: !12285)
!12364 = !DILocation(line: 7336, column: 2, scope: !12285)
!12365 = !DILocation(line: 7336, column: 8, scope: !12285)
!12366 = !DILocation(line: 7336, column: 17, scope: !12285)
!12367 = !DILocation(line: 7338, column: 7, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 7338, column: 7)
!12369 = !DILocation(line: 7338, column: 13, scope: !12368)
!12370 = !DILocation(line: 7338, column: 20, scope: !12368)
!12371 = !DILocation(line: 7338, column: 26, scope: !12368)
!12372 = !DILocation(line: 7338, column: 7, scope: !12285)
!12373 = !DILocation(line: 7339, column: 33, scope: !12368)
!12374 = !DILocation(line: 7339, column: 3, scope: !12368)
!12375 = !DILocation(line: 7341, column: 26, scope: !12285)
!12376 = !DILocation(line: 7341, column: 32, scope: !12285)
!12377 = !DILocation(line: 7341, column: 45, scope: !12285)
!12378 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !12287)
!12379 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !12287)
!12380 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !12287)
!12381 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !12287)
!12382 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !12287)
!12383 = !DILocation(line: 7344, column: 6, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 7344, column: 6)
!12385 = !DILocation(line: 7344, column: 12, scope: !12384)
!12386 = !DILocation(line: 7344, column: 6, scope: !12285)
!12387 = !DILocation(line: 7345, column: 19, scope: !12384)
!12388 = !DILocation(line: 7345, column: 3, scope: !12384)
!12389 = !DILocation(line: 7348, column: 20, scope: !12384)
!12390 = !DILocation(line: 7348, column: 3, scope: !12384)
!12391 = !DILocation(line: 7350, column: 1, scope: !12285)
!12392 = distinct !DISubprogram(name: "mgsl_claim_resources", scope: !3, file: !3, line: 3963, type: !9631, scopeLine: 3964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12393 = !DILocalVariable(name: "info", arg: 1, scope: !12392, file: !3, line: 3963, type: !7524)
!12394 = !DILocation(line: 3963, column: 53, scope: !12392)
!12395 = !DILocation(line: 3965, column: 6, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 3965, column: 6)
!12397 = !DILocation(line: 3965, column: 66, scope: !12396)
!12398 = !DILocation(line: 3965, column: 6, scope: !12392)
!12399 = !DILocation(line: 3967, column: 22, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12396, file: !3, line: 3965, column: 75)
!12401 = !DILocation(line: 3967, column: 28, scope: !12400)
!12402 = !DILocation(line: 3967, column: 41, scope: !12400)
!12403 = !DILocation(line: 3967, column: 47, scope: !12400)
!12404 = !DILocation(line: 3966, column: 3, scope: !12400)
!12405 = !DILocation(line: 3968, column: 3, scope: !12400)
!12406 = !DILocation(line: 3970, column: 2, scope: !12392)
!12407 = !DILocation(line: 3970, column: 8, scope: !12392)
!12408 = !DILocation(line: 3970, column: 26, scope: !12392)
!12409 = !DILocation(line: 3972, column: 19, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 3972, column: 7)
!12411 = !DILocation(line: 3972, column: 25, scope: !12410)
!12412 = !DILocation(line: 3972, column: 50, scope: !12410)
!12413 = !DILocation(line: 3972, column: 56, scope: !12410)
!12414 = !DILocation(line: 3973, column: 3, scope: !12410)
!12415 = !DILocation(line: 3973, column: 9, scope: !12410)
!12416 = !DILocation(line: 3973, column: 22, scope: !12410)
!12417 = !DILocation(line: 3972, column: 7, scope: !12410)
!12418 = !DILocation(line: 3973, column: 29, scope: !12410)
!12419 = !DILocation(line: 3972, column: 7, scope: !12392)
!12420 = !DILocation(line: 3975, column: 22, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12410, file: !3, line: 3973, column: 35)
!12422 = !DILocation(line: 3975, column: 28, scope: !12421)
!12423 = !DILocation(line: 3975, column: 41, scope: !12421)
!12424 = !DILocation(line: 3975, column: 47, scope: !12421)
!12425 = !DILocation(line: 3974, column: 3, scope: !12421)
!12426 = !DILocation(line: 3976, column: 3, scope: !12421)
!12427 = !DILocation(line: 3978, column: 2, scope: !12392)
!12428 = !DILocation(line: 3978, column: 8, scope: !12392)
!12429 = !DILocation(line: 3978, column: 22, scope: !12392)
!12430 = !DILocation(line: 3980, column: 6, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 3980, column: 6)
!12432 = !DILocation(line: 3980, column: 68, scope: !12431)
!12433 = !DILocation(line: 3980, column: 6, scope: !12392)
!12434 = !DILocation(line: 3982, column: 22, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 3980, column: 77)
!12436 = !DILocation(line: 3982, column: 28, scope: !12435)
!12437 = !DILocation(line: 3982, column: 41, scope: !12435)
!12438 = !DILocation(line: 3982, column: 47, scope: !12435)
!12439 = !DILocation(line: 3981, column: 3, scope: !12435)
!12440 = !DILocation(line: 3983, column: 3, scope: !12435)
!12441 = !DILocation(line: 3985, column: 2, scope: !12392)
!12442 = !DILocation(line: 3985, column: 8, scope: !12392)
!12443 = !DILocation(line: 3985, column: 29, scope: !12392)
!12444 = !DILocation(line: 3986, column: 6, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 3986, column: 6)
!12446 = !DILocation(line: 3986, column: 80, scope: !12445)
!12447 = !DILocation(line: 3986, column: 6, scope: !12392)
!12448 = !DILocation(line: 3988, column: 22, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12445, file: !3, line: 3986, column: 89)
!12450 = !DILocation(line: 3988, column: 28, scope: !12449)
!12451 = !DILocation(line: 3988, column: 41, scope: !12449)
!12452 = !DILocation(line: 3988, column: 47, scope: !12449)
!12453 = !DILocation(line: 3988, column: 63, scope: !12449)
!12454 = !DILocation(line: 3988, column: 69, scope: !12449)
!12455 = !DILocation(line: 3988, column: 61, scope: !12449)
!12456 = !DILocation(line: 3987, column: 3, scope: !12449)
!12457 = !DILocation(line: 3989, column: 3, scope: !12449)
!12458 = !DILocation(line: 3991, column: 2, scope: !12392)
!12459 = !DILocation(line: 3991, column: 8, scope: !12392)
!12460 = !DILocation(line: 3991, column: 26, scope: !12392)
!12461 = !DILocation(line: 3993, column: 30, scope: !12392)
!12462 = !DILocation(line: 3993, column: 36, scope: !12392)
!12463 = !DILocation(line: 3993, column: 22, scope: !12392)
!12464 = !DILocation(line: 3993, column: 2, scope: !12392)
!12465 = !DILocation(line: 3993, column: 8, scope: !12392)
!12466 = !DILocation(line: 3993, column: 20, scope: !12392)
!12467 = !DILocation(line: 3994, column: 7, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 3994, column: 6)
!12469 = !DILocation(line: 3994, column: 13, scope: !12468)
!12470 = !DILocation(line: 3994, column: 6, scope: !12392)
!12471 = !DILocation(line: 3996, column: 22, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12468, file: !3, line: 3994, column: 26)
!12473 = !DILocation(line: 3996, column: 28, scope: !12472)
!12474 = !DILocation(line: 3996, column: 41, scope: !12472)
!12475 = !DILocation(line: 3996, column: 47, scope: !12472)
!12476 = !DILocation(line: 3995, column: 3, scope: !12472)
!12477 = !DILocation(line: 3997, column: 3, scope: !12472)
!12478 = !DILocation(line: 4000, column: 25, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 4000, column: 7)
!12480 = !DILocation(line: 4000, column: 8, scope: !12479)
!12481 = !DILocation(line: 4000, column: 7, scope: !12392)
!12482 = !DILocation(line: 4002, column: 22, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 4000, column: 33)
!12484 = !DILocation(line: 4002, column: 28, scope: !12483)
!12485 = !DILocation(line: 4002, column: 41, scope: !12483)
!12486 = !DILocation(line: 4002, column: 47, scope: !12483)
!12487 = !DILocation(line: 4001, column: 3, scope: !12483)
!12488 = !DILocation(line: 4003, column: 3, scope: !12483)
!12489 = !DILocation(line: 4006, column: 27, scope: !12392)
!12490 = !DILocation(line: 4006, column: 33, scope: !12392)
!12491 = !DILocation(line: 4006, column: 19, scope: !12392)
!12492 = !DILocation(line: 4006, column: 2, scope: !12392)
!12493 = !DILocation(line: 4006, column: 8, scope: !12392)
!12494 = !DILocation(line: 4006, column: 17, scope: !12392)
!12495 = !DILocation(line: 4007, column: 7, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 4007, column: 6)
!12497 = !DILocation(line: 4007, column: 13, scope: !12496)
!12498 = !DILocation(line: 4007, column: 6, scope: !12392)
!12499 = !DILocation(line: 4009, column: 22, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12496, file: !3, line: 4007, column: 23)
!12501 = !DILocation(line: 4009, column: 28, scope: !12500)
!12502 = !DILocation(line: 4009, column: 41, scope: !12500)
!12503 = !DILocation(line: 4009, column: 47, scope: !12500)
!12504 = !DILocation(line: 4008, column: 3, scope: !12500)
!12505 = !DILocation(line: 4010, column: 3, scope: !12500)
!12506 = !DILocation(line: 4012, column: 20, scope: !12392)
!12507 = !DILocation(line: 4012, column: 26, scope: !12392)
!12508 = !DILocation(line: 4012, column: 2, scope: !12392)
!12509 = !DILocation(line: 4012, column: 8, scope: !12392)
!12510 = !DILocation(line: 4012, column: 17, scope: !12392)
!12511 = !DILocation(line: 4014, column: 33, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 4014, column: 7)
!12513 = !DILocation(line: 4014, column: 7, scope: !12512)
!12514 = !DILocation(line: 4014, column: 39, scope: !12512)
!12515 = !DILocation(line: 4014, column: 7, scope: !12392)
!12516 = !DILocation(line: 4016, column: 22, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12512, file: !3, line: 4014, column: 45)
!12518 = !DILocation(line: 4016, column: 28, scope: !12517)
!12519 = !DILocation(line: 4016, column: 41, scope: !12517)
!12520 = !DILocation(line: 4016, column: 47, scope: !12517)
!12521 = !DILocation(line: 4015, column: 3, scope: !12517)
!12522 = !DILocation(line: 4017, column: 3, scope: !12517)
!12523 = !DILocation(line: 4020, column: 2, scope: !12392)
!12524 = !DILabel(scope: !12392, name: "errout", file: !3, line: 4021)
!12525 = !DILocation(line: 4021, column: 1, scope: !12392)
!12526 = !DILocation(line: 4022, column: 25, scope: !12392)
!12527 = !DILocation(line: 4022, column: 2, scope: !12392)
!12528 = !DILocation(line: 4023, column: 2, scope: !12392)
!12529 = !DILocation(line: 4025, column: 1, scope: !12392)
!12530 = distinct !DISubprogram(name: "mgsl_adapter_test", scope: !3, file: !3, line: 7139, type: !9631, scopeLine: 7140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12531 = !DILocalVariable(name: "info", arg: 1, scope: !12530, file: !3, line: 7139, type: !7524)
!12532 = !DILocation(line: 7139, column: 51, scope: !12530)
!12533 = !DILocation(line: 7141, column: 7, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 7141, column: 7)
!12535 = !DILocation(line: 7141, column: 19, scope: !12534)
!12536 = !DILocation(line: 7141, column: 7, scope: !12530)
!12537 = !DILocation(line: 7143, column: 22, scope: !12534)
!12538 = !DILocation(line: 7143, column: 28, scope: !12534)
!12539 = !DILocation(line: 7142, column: 3, scope: !12534)
!12540 = !DILocation(line: 7145, column: 28, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 7145, column: 7)
!12542 = !DILocation(line: 7145, column: 8, scope: !12541)
!12543 = !DILocation(line: 7145, column: 7, scope: !12530)
!12544 = !DILocation(line: 7146, column: 3, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12541, file: !3, line: 7145, column: 37)
!12546 = !DILocation(line: 7146, column: 9, scope: !12545)
!12547 = !DILocation(line: 7146, column: 20, scope: !12545)
!12548 = !DILocation(line: 7148, column: 22, scope: !12545)
!12549 = !DILocation(line: 7148, column: 28, scope: !12545)
!12550 = !DILocation(line: 7148, column: 58, scope: !12545)
!12551 = !DILocation(line: 7148, column: 64, scope: !12545)
!12552 = !DILocation(line: 7148, column: 41, scope: !12545)
!12553 = !DILocation(line: 7147, column: 3, scope: !12545)
!12554 = !DILocation(line: 7149, column: 3, scope: !12545)
!12555 = !DILocation(line: 7152, column: 23, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 7152, column: 7)
!12557 = !DILocation(line: 7152, column: 8, scope: !12556)
!12558 = !DILocation(line: 7152, column: 7, scope: !12530)
!12559 = !DILocation(line: 7153, column: 3, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 7152, column: 32)
!12561 = !DILocation(line: 7153, column: 9, scope: !12560)
!12562 = !DILocation(line: 7153, column: 20, scope: !12560)
!12563 = !DILocation(line: 7155, column: 22, scope: !12560)
!12564 = !DILocation(line: 7155, column: 28, scope: !12560)
!12565 = !DILocation(line: 7155, column: 58, scope: !12560)
!12566 = !DILocation(line: 7155, column: 64, scope: !12560)
!12567 = !DILocation(line: 7155, column: 41, scope: !12560)
!12568 = !DILocation(line: 7154, column: 3, scope: !12560)
!12569 = !DILocation(line: 7156, column: 3, scope: !12560)
!12570 = !DILocation(line: 7159, column: 23, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 7159, column: 7)
!12572 = !DILocation(line: 7159, column: 8, scope: !12571)
!12573 = !DILocation(line: 7159, column: 7, scope: !12530)
!12574 = !DILocation(line: 7160, column: 3, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12571, file: !3, line: 7159, column: 32)
!12576 = !DILocation(line: 7160, column: 9, scope: !12575)
!12577 = !DILocation(line: 7160, column: 20, scope: !12575)
!12578 = !DILocation(line: 7162, column: 22, scope: !12575)
!12579 = !DILocation(line: 7162, column: 28, scope: !12575)
!12580 = !DILocation(line: 7162, column: 58, scope: !12575)
!12581 = !DILocation(line: 7162, column: 64, scope: !12575)
!12582 = !DILocation(line: 7162, column: 41, scope: !12575)
!12583 = !DILocation(line: 7161, column: 3, scope: !12575)
!12584 = !DILocation(line: 7163, column: 3, scope: !12575)
!12585 = !DILocation(line: 7166, column: 7, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 7166, column: 7)
!12587 = !DILocation(line: 7166, column: 19, scope: !12586)
!12588 = !DILocation(line: 7166, column: 7, scope: !12530)
!12589 = !DILocation(line: 7168, column: 22, scope: !12586)
!12590 = !DILocation(line: 7168, column: 28, scope: !12586)
!12591 = !DILocation(line: 7167, column: 3, scope: !12586)
!12592 = !DILocation(line: 7170, column: 2, scope: !12530)
!12593 = !DILocation(line: 7172, column: 1, scope: !12530)
!12594 = distinct !DISubprogram(name: "set_bit", scope: !12595, file: !12595, line: 26, type: !12596, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12595 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12596 = !DISubroutineType(types: !12597)
!12597 = !{null, !998, !7696}
!12598 = !DILocalVariable(name: "nr", arg: 1, scope: !12599, file: !9238, line: 52, type: !998)
!12599 = distinct !DISubprogram(name: "arch_set_bit", scope: !9238, file: !9238, line: 52, type: !12596, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12600 = !DILocation(line: 52, column: 19, scope: !12599, inlinedAt: !12601)
!12601 = distinct !DILocation(line: 29, column: 2, scope: !12594)
!12602 = !DILocalVariable(name: "addr", arg: 2, scope: !12599, file: !9238, line: 52, type: !7696)
!12603 = !DILocation(line: 52, column: 47, scope: !12599, inlinedAt: !12601)
!12604 = !DILocalVariable(name: "v", arg: 1, scope: !12605, file: !12606, line: 84, type: !12609)
!12605 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !12606, file: !12606, line: 84, type: !12607, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12606 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12607 = !DISubroutineType(types: !12608)
!12608 = !{null, !12609, !1039}
!12609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12610, size: 64)
!12610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12611)
!12611 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!12612 = !DILocation(line: 84, column: 74, scope: !12605, inlinedAt: !12613)
!12613 = distinct !DILocation(line: 28, column: 2, scope: !12594)
!12614 = !DILocalVariable(name: "size", arg: 2, scope: !12605, file: !12606, line: 84, type: !1039)
!12615 = !DILocation(line: 84, column: 84, scope: !12605, inlinedAt: !12613)
!12616 = !DILocalVariable(name: "nr", arg: 1, scope: !12594, file: !12595, line: 26, type: !998)
!12617 = !DILocation(line: 26, column: 33, scope: !12594)
!12618 = !DILocalVariable(name: "addr", arg: 2, scope: !12594, file: !12595, line: 26, type: !7696)
!12619 = !DILocation(line: 26, column: 61, scope: !12594)
!12620 = !DILocation(line: 28, column: 26, scope: !12594)
!12621 = !DILocation(line: 28, column: 33, scope: !12594)
!12622 = !DILocation(line: 28, column: 31, scope: !12594)
!12623 = !DILocation(line: 86, column: 20, scope: !12605, inlinedAt: !12613)
!12624 = !DILocation(line: 86, column: 23, scope: !12605, inlinedAt: !12613)
!12625 = !DILocation(line: 86, column: 2, scope: !12605, inlinedAt: !12613)
!12626 = !DILocation(line: 87, column: 2, scope: !12605, inlinedAt: !12613)
!12627 = !DILocation(line: 29, column: 15, scope: !12594)
!12628 = !DILocation(line: 29, column: 19, scope: !12594)
!12629 = !DILocation(line: 54, column: 27, scope: !12630, inlinedAt: !12601)
!12630 = distinct !DILexicalBlock(scope: !12599, file: !9238, line: 54, column: 6)
!12631 = !DILocation(line: 54, column: 6, scope: !12630, inlinedAt: !12601)
!12632 = !DILocation(line: 54, column: 6, scope: !12599, inlinedAt: !12601)
!12633 = !DILocation(line: 56, column: 6, scope: !12634, inlinedAt: !12601)
!12634 = distinct !DILexicalBlock(scope: !12630, file: !9238, line: 54, column: 32)
!12635 = !DILocation(line: 57, column: 12, scope: !12634, inlinedAt: !12601)
!12636 = !DILocation(line: 55, column: 3, scope: !12634, inlinedAt: !12601)
!12637 = !{i32 -2146927362}
!12638 = !DILocation(line: 59, column: 2, scope: !12634, inlinedAt: !12601)
!12639 = !DILocation(line: 61, column: 8, scope: !12640, inlinedAt: !12601)
!12640 = distinct !DILexicalBlock(scope: !12630, file: !9238, line: 59, column: 9)
!12641 = !DILocation(line: 61, column: 32, scope: !12640, inlinedAt: !12601)
!12642 = !DILocation(line: 60, column: 3, scope: !12640, inlinedAt: !12601)
!12643 = !{i32 -2146927230}
!12644 = !DILocation(line: 30, column: 1, scope: !12594)
!12645 = distinct !DISubprogram(name: "mgsl_change_params", scope: !3, file: !3, line: 1896, type: !8185, scopeLine: 1897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12646 = !DILocalVariable(name: "info", arg: 1, scope: !12645, file: !3, line: 1896, type: !7524)
!12647 = !DILocation(line: 1896, column: 52, scope: !12645)
!12648 = !DILocalVariable(name: "cflag", scope: !12645, file: !3, line: 1898, type: !7)
!12649 = !DILocation(line: 1898, column: 11, scope: !12645)
!12650 = !DILocalVariable(name: "bits_per_char", scope: !12645, file: !3, line: 1899, type: !32)
!12651 = !DILocation(line: 1899, column: 6, scope: !12645)
!12652 = !DILocation(line: 1901, column: 7, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1901, column: 6)
!12654 = !DILocation(line: 1901, column: 13, scope: !12653)
!12655 = !DILocation(line: 1901, column: 18, scope: !12653)
!12656 = !DILocation(line: 1901, column: 6, scope: !12645)
!12657 = !DILocation(line: 1902, column: 3, scope: !12653)
!12658 = !DILocation(line: 1904, column: 6, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1904, column: 6)
!12660 = !DILocation(line: 1904, column: 18, scope: !12659)
!12661 = !DILocation(line: 1904, column: 6, scope: !12645)
!12662 = !DILocation(line: 1906, column: 24, scope: !12659)
!12663 = !DILocation(line: 1906, column: 30, scope: !12659)
!12664 = !DILocation(line: 1905, column: 3, scope: !12659)
!12665 = !DILocation(line: 1908, column: 10, scope: !12645)
!12666 = !DILocation(line: 1908, column: 16, scope: !12645)
!12667 = !DILocation(line: 1908, column: 21, scope: !12645)
!12668 = !DILocation(line: 1908, column: 26, scope: !12645)
!12669 = !DILocation(line: 1908, column: 34, scope: !12645)
!12670 = !DILocation(line: 1908, column: 8, scope: !12645)
!12671 = !DILocation(line: 1912, column: 7, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1912, column: 7)
!12673 = !DILocation(line: 1912, column: 13, scope: !12672)
!12674 = !DILocation(line: 1912, column: 7, scope: !12645)
!12675 = !DILocation(line: 1913, column: 3, scope: !12672)
!12676 = !DILocation(line: 1913, column: 9, scope: !12672)
!12677 = !DILocation(line: 1913, column: 24, scope: !12672)
!12678 = !DILocation(line: 1915, column: 3, scope: !12672)
!12679 = !DILocation(line: 1915, column: 9, scope: !12672)
!12680 = !DILocation(line: 1915, column: 24, scope: !12672)
!12681 = !DILocation(line: 1919, column: 10, scope: !12645)
!12682 = !DILocation(line: 1919, column: 16, scope: !12645)
!12683 = !DILocation(line: 1919, column: 2, scope: !12645)
!12684 = !DILocation(line: 1920, column: 18, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1919, column: 25)
!12686 = !DILocation(line: 1920, column: 24, scope: !12685)
!12687 = !DILocation(line: 1920, column: 31, scope: !12685)
!12688 = !DILocation(line: 1920, column: 41, scope: !12685)
!12689 = !DILocation(line: 1920, column: 46, scope: !12685)
!12690 = !DILocation(line: 1921, column: 18, scope: !12685)
!12691 = !DILocation(line: 1921, column: 24, scope: !12685)
!12692 = !DILocation(line: 1921, column: 31, scope: !12685)
!12693 = !DILocation(line: 1921, column: 41, scope: !12685)
!12694 = !DILocation(line: 1921, column: 46, scope: !12685)
!12695 = !DILocation(line: 1922, column: 18, scope: !12685)
!12696 = !DILocation(line: 1922, column: 24, scope: !12685)
!12697 = !DILocation(line: 1922, column: 31, scope: !12685)
!12698 = !DILocation(line: 1922, column: 41, scope: !12685)
!12699 = !DILocation(line: 1922, column: 46, scope: !12685)
!12700 = !DILocation(line: 1923, column: 18, scope: !12685)
!12701 = !DILocation(line: 1923, column: 24, scope: !12685)
!12702 = !DILocation(line: 1923, column: 31, scope: !12685)
!12703 = !DILocation(line: 1923, column: 41, scope: !12685)
!12704 = !DILocation(line: 1923, column: 46, scope: !12685)
!12705 = !DILocation(line: 1925, column: 18, scope: !12685)
!12706 = !DILocation(line: 1925, column: 24, scope: !12685)
!12707 = !DILocation(line: 1925, column: 31, scope: !12685)
!12708 = !DILocation(line: 1925, column: 41, scope: !12685)
!12709 = !DILocation(line: 1925, column: 46, scope: !12685)
!12710 = !DILocation(line: 1928, column: 6, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1928, column: 6)
!12712 = !DILocation(line: 1928, column: 12, scope: !12711)
!12713 = !DILocation(line: 1928, column: 6, scope: !12645)
!12714 = !DILocation(line: 1929, column: 3, scope: !12711)
!12715 = !DILocation(line: 1929, column: 9, scope: !12711)
!12716 = !DILocation(line: 1929, column: 16, scope: !12711)
!12717 = !DILocation(line: 1929, column: 26, scope: !12711)
!12718 = !DILocation(line: 1931, column: 3, scope: !12711)
!12719 = !DILocation(line: 1931, column: 9, scope: !12711)
!12720 = !DILocation(line: 1931, column: 16, scope: !12711)
!12721 = !DILocation(line: 1931, column: 26, scope: !12711)
!12722 = !DILocation(line: 1933, column: 2, scope: !12645)
!12723 = !DILocation(line: 1933, column: 8, scope: !12645)
!12724 = !DILocation(line: 1933, column: 15, scope: !12645)
!12725 = !DILocation(line: 1933, column: 22, scope: !12645)
!12726 = !DILocation(line: 1934, column: 6, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1934, column: 6)
!12728 = !DILocation(line: 1934, column: 12, scope: !12727)
!12729 = !DILocation(line: 1934, column: 6, scope: !12645)
!12730 = !DILocation(line: 1935, column: 7, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 1935, column: 7)
!12732 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 1934, column: 22)
!12733 = !DILocation(line: 1935, column: 13, scope: !12731)
!12734 = !DILocation(line: 1935, column: 7, scope: !12732)
!12735 = !DILocation(line: 1936, column: 4, scope: !12731)
!12736 = !DILocation(line: 1936, column: 10, scope: !12731)
!12737 = !DILocation(line: 1936, column: 17, scope: !12731)
!12738 = !DILocation(line: 1936, column: 24, scope: !12731)
!12739 = !DILocation(line: 1938, column: 4, scope: !12731)
!12740 = !DILocation(line: 1938, column: 10, scope: !12731)
!12741 = !DILocation(line: 1938, column: 17, scope: !12731)
!12742 = !DILocation(line: 1938, column: 24, scope: !12731)
!12743 = !DILocation(line: 1940, column: 7, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 1940, column: 7)
!12745 = !DILocation(line: 1940, column: 13, scope: !12744)
!12746 = !DILocation(line: 1940, column: 7, scope: !12732)
!12747 = !DILocation(line: 1941, column: 4, scope: !12744)
!12748 = !DILocation(line: 1941, column: 10, scope: !12744)
!12749 = !DILocation(line: 1941, column: 17, scope: !12744)
!12750 = !DILocation(line: 1941, column: 24, scope: !12744)
!12751 = !DILocation(line: 1943, column: 2, scope: !12732)
!12752 = !DILocation(line: 1948, column: 18, scope: !12645)
!12753 = !DILocation(line: 1948, column: 24, scope: !12645)
!12754 = !DILocation(line: 1948, column: 31, scope: !12645)
!12755 = !DILocation(line: 1949, column: 4, scope: !12645)
!12756 = !DILocation(line: 1949, column: 10, scope: !12645)
!12757 = !DILocation(line: 1949, column: 17, scope: !12645)
!12758 = !DILocation(line: 1948, column: 41, scope: !12645)
!12759 = !DILocation(line: 1949, column: 27, scope: !12645)
!12760 = !DILocation(line: 1948, column: 16, scope: !12645)
!12761 = !DILocation(line: 1955, column: 6, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1955, column: 6)
!12763 = !DILocation(line: 1955, column: 12, scope: !12762)
!12764 = !DILocation(line: 1955, column: 19, scope: !12762)
!12765 = !DILocation(line: 1955, column: 29, scope: !12762)
!12766 = !DILocation(line: 1955, column: 6, scope: !12645)
!12767 = !DILocation(line: 1956, column: 46, scope: !12762)
!12768 = !DILocation(line: 1956, column: 52, scope: !12762)
!12769 = !DILocation(line: 1956, column: 57, scope: !12762)
!12770 = !DILocation(line: 1956, column: 28, scope: !12762)
!12771 = !DILocation(line: 1956, column: 3, scope: !12762)
!12772 = !DILocation(line: 1956, column: 9, scope: !12762)
!12773 = !DILocation(line: 1956, column: 16, scope: !12762)
!12774 = !DILocation(line: 1956, column: 26, scope: !12762)
!12775 = !DILocation(line: 1958, column: 7, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1958, column: 7)
!12777 = !DILocation(line: 1958, column: 13, scope: !12776)
!12778 = !DILocation(line: 1958, column: 20, scope: !12776)
!12779 = !DILocation(line: 1958, column: 7, scope: !12645)
!12780 = !DILocation(line: 1959, column: 26, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12776, file: !3, line: 1958, column: 32)
!12782 = !DILocation(line: 1959, column: 25, scope: !12781)
!12783 = !DILocation(line: 1959, column: 19, scope: !12781)
!12784 = !DILocation(line: 1960, column: 5, scope: !12781)
!12785 = !DILocation(line: 1960, column: 11, scope: !12781)
!12786 = !DILocation(line: 1960, column: 18, scope: !12781)
!12787 = !DILocation(line: 1959, column: 41, scope: !12781)
!12788 = !DILocation(line: 1959, column: 3, scope: !12781)
!12789 = !DILocation(line: 1959, column: 9, scope: !12781)
!12790 = !DILocation(line: 1959, column: 17, scope: !12781)
!12791 = !DILocation(line: 1961, column: 2, scope: !12781)
!12792 = !DILocation(line: 1962, column: 2, scope: !12645)
!12793 = !DILocation(line: 1962, column: 8, scope: !12645)
!12794 = !DILocation(line: 1962, column: 16, scope: !12645)
!12795 = !DILocation(line: 1964, column: 25, scope: !12645)
!12796 = !DILocation(line: 1964, column: 31, scope: !12645)
!12797 = !DILocation(line: 1964, column: 37, scope: !12645)
!12798 = !DILocation(line: 1964, column: 43, scope: !12645)
!12799 = !DILocation(line: 1964, column: 2, scope: !12645)
!12800 = !DILocation(line: 1965, column: 30, scope: !12645)
!12801 = !DILocation(line: 1965, column: 36, scope: !12645)
!12802 = !DILocation(line: 1965, column: 43, scope: !12645)
!12803 = !DILocation(line: 1965, column: 42, scope: !12645)
!12804 = !DILocation(line: 1965, column: 49, scope: !12645)
!12805 = !DILocation(line: 1965, column: 2, scope: !12645)
!12806 = !DILocation(line: 1969, column: 2, scope: !12645)
!12807 = !DILocation(line: 1969, column: 8, scope: !12645)
!12808 = !DILocation(line: 1969, column: 25, scope: !12645)
!12809 = !DILocation(line: 1970, column: 6, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1970, column: 6)
!12811 = !DILocation(line: 1970, column: 6, scope: !12645)
!12812 = !DILocation(line: 1971, column: 3, scope: !12810)
!12813 = !DILocation(line: 1971, column: 9, scope: !12810)
!12814 = !DILocation(line: 1971, column: 26, scope: !12810)
!12815 = !DILocation(line: 1972, column: 7, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1972, column: 7)
!12817 = !DILocation(line: 1972, column: 32, scope: !12816)
!12818 = !DILocation(line: 1972, column: 35, scope: !12816)
!12819 = !DILocation(line: 1972, column: 7, scope: !12645)
!12820 = !DILocation(line: 1973, column: 4, scope: !12816)
!12821 = !DILocation(line: 1973, column: 10, scope: !12816)
!12822 = !DILocation(line: 1973, column: 27, scope: !12816)
!12823 = !DILocation(line: 1975, column: 6, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1975, column: 6)
!12825 = !DILocation(line: 1975, column: 6, scope: !12645)
!12826 = !DILocation(line: 1976, column: 3, scope: !12824)
!12827 = !DILocation(line: 1976, column: 9, scope: !12824)
!12828 = !DILocation(line: 1976, column: 28, scope: !12824)
!12829 = !DILocation(line: 1977, column: 6, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12645, file: !3, line: 1977, column: 6)
!12831 = !DILocation(line: 1977, column: 6, scope: !12645)
!12832 = !DILocation(line: 1978, column: 3, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 1977, column: 32)
!12834 = !DILocation(line: 1978, column: 9, scope: !12833)
!12835 = !DILocation(line: 1978, column: 28, scope: !12833)
!12836 = !DILocation(line: 1982, column: 7, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12833, file: !3, line: 1982, column: 7)
!12838 = !DILocation(line: 1982, column: 7, scope: !12833)
!12839 = !DILocation(line: 1983, column: 4, scope: !12837)
!12840 = !DILocation(line: 1983, column: 10, scope: !12837)
!12841 = !DILocation(line: 1983, column: 29, scope: !12837)
!12842 = !DILocation(line: 1984, column: 2, scope: !12833)
!12843 = !DILocation(line: 1986, column: 18, scope: !12645)
!12844 = !DILocation(line: 1986, column: 2, scope: !12645)
!12845 = !DILocation(line: 1988, column: 1, scope: !12645)
!12846 = distinct !DISubprogram(name: "clear_bit", scope: !12595, file: !12595, line: 39, type: !12596, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12847 = !DILocalVariable(name: "nr", arg: 1, scope: !12848, file: !9238, line: 72, type: !998)
!12848 = distinct !DISubprogram(name: "arch_clear_bit", scope: !9238, file: !9238, line: 72, type: !12596, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12849 = !DILocation(line: 72, column: 21, scope: !12848, inlinedAt: !12850)
!12850 = distinct !DILocation(line: 42, column: 2, scope: !12846)
!12851 = !DILocalVariable(name: "addr", arg: 2, scope: !12848, file: !9238, line: 72, type: !7696)
!12852 = !DILocation(line: 72, column: 49, scope: !12848, inlinedAt: !12850)
!12853 = !DILocation(line: 84, column: 74, scope: !12605, inlinedAt: !12854)
!12854 = distinct !DILocation(line: 41, column: 2, scope: !12846)
!12855 = !DILocation(line: 84, column: 84, scope: !12605, inlinedAt: !12854)
!12856 = !DILocalVariable(name: "nr", arg: 1, scope: !12846, file: !12595, line: 39, type: !998)
!12857 = !DILocation(line: 39, column: 35, scope: !12846)
!12858 = !DILocalVariable(name: "addr", arg: 2, scope: !12846, file: !12595, line: 39, type: !7696)
!12859 = !DILocation(line: 39, column: 63, scope: !12846)
!12860 = !DILocation(line: 41, column: 26, scope: !12846)
!12861 = !DILocation(line: 41, column: 33, scope: !12846)
!12862 = !DILocation(line: 41, column: 31, scope: !12846)
!12863 = !DILocation(line: 86, column: 20, scope: !12605, inlinedAt: !12854)
!12864 = !DILocation(line: 86, column: 23, scope: !12605, inlinedAt: !12854)
!12865 = !DILocation(line: 86, column: 2, scope: !12605, inlinedAt: !12854)
!12866 = !DILocation(line: 87, column: 2, scope: !12605, inlinedAt: !12854)
!12867 = !DILocation(line: 42, column: 17, scope: !12846)
!12868 = !DILocation(line: 42, column: 21, scope: !12846)
!12869 = !DILocation(line: 74, column: 27, scope: !12870, inlinedAt: !12850)
!12870 = distinct !DILexicalBlock(scope: !12848, file: !9238, line: 74, column: 6)
!12871 = !DILocation(line: 74, column: 6, scope: !12870, inlinedAt: !12850)
!12872 = !DILocation(line: 74, column: 6, scope: !12848, inlinedAt: !12850)
!12873 = !DILocation(line: 76, column: 6, scope: !12874, inlinedAt: !12850)
!12874 = distinct !DILexicalBlock(scope: !12870, file: !9238, line: 74, column: 32)
!12875 = !DILocation(line: 77, column: 13, scope: !12874, inlinedAt: !12850)
!12876 = !DILocation(line: 77, column: 12, scope: !12874, inlinedAt: !12850)
!12877 = !DILocation(line: 75, column: 3, scope: !12874, inlinedAt: !12850)
!12878 = !{i32 -2146926408}
!12879 = !DILocation(line: 78, column: 2, scope: !12874, inlinedAt: !12850)
!12880 = !DILocation(line: 80, column: 8, scope: !12881, inlinedAt: !12850)
!12881 = distinct !DILexicalBlock(scope: !12870, file: !9238, line: 78, column: 9)
!12882 = !DILocation(line: 80, column: 32, scope: !12881, inlinedAt: !12850)
!12883 = !DILocation(line: 79, column: 3, scope: !12881, inlinedAt: !12850)
!12884 = !{i32 -2146926276}
!12885 = !DILocation(line: 43, column: 1, scope: !12846)
!12886 = distinct !DISubprogram(name: "tty_port_set_initialized", scope: !3762, file: !3762, line: 669, type: !12887, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12887 = !DISubroutineType(types: !12888)
!12888 = !{null, !4766, !771}
!12889 = !DILocalVariable(name: "port", arg: 1, scope: !12886, file: !3762, line: 669, type: !4766)
!12890 = !DILocation(line: 669, column: 62, scope: !12886)
!12891 = !DILocalVariable(name: "val", arg: 2, scope: !12886, file: !3762, line: 669, type: !771)
!12892 = !DILocation(line: 669, column: 73, scope: !12886)
!12893 = !DILocation(line: 671, column: 6, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12886, file: !3762, line: 671, column: 6)
!12895 = !DILocation(line: 671, column: 6, scope: !12886)
!12896 = !DILocation(line: 672, column: 34, scope: !12894)
!12897 = !DILocation(line: 672, column: 40, scope: !12894)
!12898 = !DILocation(line: 672, column: 3, scope: !12894)
!12899 = !DILocation(line: 674, column: 36, scope: !12894)
!12900 = !DILocation(line: 674, column: 42, scope: !12894)
!12901 = !DILocation(line: 674, column: 3, scope: !12894)
!12902 = !DILocation(line: 675, column: 1, scope: !12886)
!12903 = distinct !DISubprogram(name: "test_bit", scope: !12904, file: !12904, line: 132, type: !12905, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12904 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12905 = !DISubroutineType(types: !12906)
!12906 = !{!771, !998, !12907}
!12907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12908, size: 64)
!12908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7697)
!12909 = !DILocalVariable(name: "nr", arg: 1, scope: !12910, file: !9238, line: 210, type: !998)
!12910 = distinct !DISubprogram(name: "variable_test_bit", scope: !9238, file: !9238, line: 210, type: !12905, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12911 = !DILocation(line: 210, column: 52, scope: !12910, inlinedAt: !12912)
!12912 = distinct !DILocation(line: 135, column: 9, scope: !12903)
!12913 = !DILocalVariable(name: "addr", arg: 2, scope: !12910, file: !9238, line: 210, type: !12907)
!12914 = !DILocation(line: 210, column: 86, scope: !12910, inlinedAt: !12912)
!12915 = !DILocalVariable(name: "oldbit", scope: !12910, file: !9238, line: 212, type: !771)
!12916 = !DILocation(line: 212, column: 7, scope: !12910, inlinedAt: !12912)
!12917 = !DILocalVariable(name: "nr", arg: 1, scope: !12918, file: !9238, line: 204, type: !998)
!12918 = distinct !DISubprogram(name: "constant_test_bit", scope: !9238, file: !9238, line: 204, type: !12905, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12919 = !DILocation(line: 204, column: 52, scope: !12918, inlinedAt: !12920)
!12920 = distinct !DILocation(line: 135, column: 9, scope: !12903)
!12921 = !DILocalVariable(name: "addr", arg: 2, scope: !12918, file: !9238, line: 204, type: !12907)
!12922 = !DILocation(line: 204, column: 86, scope: !12918, inlinedAt: !12920)
!12923 = !DILocalVariable(name: "v", arg: 1, scope: !12924, file: !12606, line: 69, type: !12609)
!12924 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !12606, file: !12606, line: 69, type: !12607, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12925 = !DILocation(line: 69, column: 73, scope: !12924, inlinedAt: !12926)
!12926 = distinct !DILocation(line: 134, column: 2, scope: !12903)
!12927 = !DILocalVariable(name: "size", arg: 2, scope: !12924, file: !12606, line: 69, type: !1039)
!12928 = !DILocation(line: 69, column: 83, scope: !12924, inlinedAt: !12926)
!12929 = !DILocalVariable(name: "nr", arg: 1, scope: !12903, file: !12904, line: 132, type: !998)
!12930 = !DILocation(line: 132, column: 34, scope: !12903)
!12931 = !DILocalVariable(name: "addr", arg: 2, scope: !12903, file: !12904, line: 132, type: !12907)
!12932 = !DILocation(line: 132, column: 68, scope: !12903)
!12933 = !DILocation(line: 134, column: 25, scope: !12903)
!12934 = !DILocation(line: 134, column: 32, scope: !12903)
!12935 = !DILocation(line: 134, column: 30, scope: !12903)
!12936 = !DILocation(line: 71, column: 19, scope: !12924, inlinedAt: !12926)
!12937 = !DILocation(line: 71, column: 22, scope: !12924, inlinedAt: !12926)
!12938 = !DILocation(line: 71, column: 2, scope: !12924, inlinedAt: !12926)
!12939 = !DILocation(line: 72, column: 2, scope: !12924, inlinedAt: !12926)
!12940 = !DILocation(line: 135, column: 9, scope: !12903)
!12941 = !DILocation(line: 206, column: 19, scope: !12918, inlinedAt: !12920)
!12942 = !DILocation(line: 206, column: 22, scope: !12918, inlinedAt: !12920)
!12943 = !DILocation(line: 206, column: 15, scope: !12918, inlinedAt: !12920)
!12944 = !DILocation(line: 207, column: 4, scope: !12918, inlinedAt: !12920)
!12945 = !DILocation(line: 207, column: 9, scope: !12918, inlinedAt: !12920)
!12946 = !DILocation(line: 207, column: 12, scope: !12918, inlinedAt: !12920)
!12947 = !DILocation(line: 206, column: 44, scope: !12918, inlinedAt: !12920)
!12948 = !DILocation(line: 207, column: 37, scope: !12918, inlinedAt: !12920)
!12949 = !DILocation(line: 217, column: 33, scope: !12910, inlinedAt: !12912)
!12950 = !DILocation(line: 217, column: 46, scope: !12910, inlinedAt: !12912)
!12951 = !DILocation(line: 214, column: 2, scope: !12910, inlinedAt: !12912)
!12952 = !{i32 -2146918114, i32 -2146918054}
!12953 = !DILocation(line: 219, column: 9, scope: !12910, inlinedAt: !12912)
!12954 = !DILocation(line: 135, column: 2, scope: !12903)
!12955 = distinct !DISubprogram(name: "kasan_check_read", scope: !12956, file: !12956, line: 34, type: !12957, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12956 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12957 = !DISubroutineType(types: !12958)
!12958 = !{!771, !12609, !7}
!12959 = !DILocalVariable(name: "p", arg: 1, scope: !12955, file: !12956, line: 34, type: !12609)
!12960 = !DILocation(line: 34, column: 58, scope: !12955)
!12961 = !DILocalVariable(name: "size", arg: 2, scope: !12955, file: !12956, line: 34, type: !7)
!12962 = !DILocation(line: 34, column: 74, scope: !12955)
!12963 = !DILocation(line: 36, column: 2, scope: !12955)
!12964 = distinct !DISubprogram(name: "kcsan_check_access", scope: !12965, file: !12965, line: 178, type: !12966, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12965 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12966 = !DISubroutineType(types: !12967)
!12967 = !{null, !12609, !1039, !32}
!12968 = !DILocalVariable(name: "ptr", arg: 1, scope: !12964, file: !12965, line: 178, type: !12609)
!12969 = !DILocation(line: 178, column: 60, scope: !12964)
!12970 = !DILocalVariable(name: "size", arg: 2, scope: !12964, file: !12965, line: 178, type: !1039)
!12971 = !DILocation(line: 178, column: 72, scope: !12964)
!12972 = !DILocalVariable(name: "type", arg: 3, scope: !12964, file: !12965, line: 179, type: !32)
!12973 = !DILocation(line: 179, column: 15, scope: !12964)
!12974 = !DILocation(line: 179, column: 23, scope: !12964)
!12975 = distinct !DISubprogram(name: "usc_loopmode_cancel_transmit", scope: !3, file: !3, line: 7385, type: !8185, scopeLine: 7386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12976 = !DILocalVariable(name: "info", arg: 1, scope: !12975, file: !3, line: 7385, type: !7524)
!12977 = !DILocation(line: 7385, column: 64, scope: !12975)
!12978 = !DILocation(line: 7388, column: 14, scope: !12975)
!12979 = !DILocation(line: 7388, column: 3, scope: !12975)
!12980 = !DILocation(line: 7389, column: 15, scope: !12975)
!12981 = !DILocation(line: 7389, column: 3, scope: !12975)
!12982 = !DILocation(line: 7390, column: 28, scope: !12975)
!12983 = !DILocation(line: 7390, column: 4, scope: !12975)
!12984 = !DILocation(line: 7391, column: 1, scope: !12975)
!12985 = distinct !DISubprogram(name: "hdlcdev_tx_done", scope: !3, file: !3, line: 7731, type: !8185, scopeLine: 7732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12986 = !DILocalVariable(name: "info", arg: 1, scope: !12985, file: !3, line: 7731, type: !7524)
!12987 = !DILocation(line: 7731, column: 49, scope: !12985)
!12988 = !DILocation(line: 7733, column: 26, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 7733, column: 6)
!12990 = !DILocation(line: 7733, column: 32, scope: !12989)
!12991 = !DILocation(line: 7733, column: 6, scope: !12989)
!12992 = !DILocation(line: 7733, column: 6, scope: !12985)
!12993 = !DILocation(line: 7734, column: 20, scope: !12989)
!12994 = !DILocation(line: 7734, column: 26, scope: !12989)
!12995 = !DILocation(line: 7734, column: 3, scope: !12989)
!12996 = !DILocation(line: 7735, column: 1, scope: !12985)
!12997 = distinct !DISubprogram(name: "netif_queue_stopped", scope: !31, file: !31, line: 3354, type: !12998, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12998 = !DISubroutineType(types: !12999)
!12999 = !{!771, !773}
!13000 = !DILocalVariable(name: "dev", arg: 1, scope: !12997, file: !31, line: 3354, type: !773)
!13001 = !DILocation(line: 3354, column: 65, scope: !12997)
!13002 = !DILocation(line: 3356, column: 52, scope: !12997)
!13003 = !DILocation(line: 3356, column: 32, scope: !12997)
!13004 = !DILocation(line: 3356, column: 9, scope: !12997)
!13005 = !DILocation(line: 3356, column: 2, scope: !12997)
!13006 = distinct !DISubprogram(name: "netif_wake_queue", scope: !31, file: !31, line: 3309, type: !406, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13007 = !DILocalVariable(name: "dev", arg: 1, scope: !13006, file: !31, line: 3309, type: !290)
!13008 = !DILocation(line: 3309, column: 56, scope: !13006)
!13009 = !DILocation(line: 3311, column: 42, scope: !13006)
!13010 = !DILocation(line: 3311, column: 22, scope: !13006)
!13011 = !DILocation(line: 3311, column: 2, scope: !13006)
!13012 = !DILocation(line: 3312, column: 1, scope: !13006)
!13013 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !31, file: !31, line: 3343, type: !13014, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13014 = !DISubroutineType(types: !13015)
!13015 = !{!771, !13016}
!13016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13017, size: 64)
!13017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7316)
!13018 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !13013, file: !31, line: 3343, type: !13016)
!13019 = !DILocation(line: 3343, column: 70, scope: !13013)
!13020 = !DILocation(line: 3345, column: 43, scope: !13013)
!13021 = !DILocation(line: 3345, column: 54, scope: !13013)
!13022 = !DILocation(line: 3345, column: 9, scope: !13013)
!13023 = !DILocation(line: 3345, column: 2, scope: !13013)
!13024 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !31, file: !31, line: 2234, type: !13025, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13025 = !DISubroutineType(types: !13026)
!13026 = !{!7315, !773, !7}
!13027 = !DILocalVariable(name: "dev", arg: 1, scope: !13024, file: !31, line: 2234, type: !773)
!13028 = !DILocation(line: 2234, column: 67, scope: !13024)
!13029 = !DILocalVariable(name: "index", arg: 2, scope: !13024, file: !31, line: 2235, type: !7)
!13030 = !DILocation(line: 2235, column: 20, scope: !13024)
!13031 = !DILocation(line: 2237, column: 10, scope: !13024)
!13032 = !DILocation(line: 2237, column: 15, scope: !13024)
!13033 = !DILocation(line: 2237, column: 19, scope: !13024)
!13034 = !DILocation(line: 2237, column: 2, scope: !13024)
!13035 = distinct !DISubprogram(name: "request_irq", scope: !3030, file: !3030, line: 157, type: !13036, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13036 = !DISubroutineType(types: !13037)
!13037 = !{!32, !7, !13038, !312, !292, !591}
!13038 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !3030, line: 92, baseType: !13039)
!13039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13040, size: 64)
!13040 = !DISubroutineType(types: !13041)
!13041 = !{!13042, !32, !591}
!13042 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !7518, line: 17, baseType: !7517)
!13043 = !DILocalVariable(name: "irq", arg: 1, scope: !13035, file: !3030, line: 157, type: !7)
!13044 = !DILocation(line: 157, column: 26, scope: !13035)
!13045 = !DILocalVariable(name: "handler", arg: 2, scope: !13035, file: !3030, line: 157, type: !13038)
!13046 = !DILocation(line: 157, column: 45, scope: !13035)
!13047 = !DILocalVariable(name: "flags", arg: 3, scope: !13035, file: !3030, line: 157, type: !312)
!13048 = !DILocation(line: 157, column: 68, scope: !13035)
!13049 = !DILocalVariable(name: "name", arg: 4, scope: !13035, file: !3030, line: 158, type: !292)
!13050 = !DILocation(line: 158, column: 18, scope: !13035)
!13051 = !DILocalVariable(name: "dev", arg: 5, scope: !13035, file: !3030, line: 158, type: !591)
!13052 = !DILocation(line: 158, column: 30, scope: !13035)
!13053 = !DILocation(line: 160, column: 30, scope: !13035)
!13054 = !DILocation(line: 160, column: 35, scope: !13035)
!13055 = !DILocation(line: 160, column: 50, scope: !13035)
!13056 = !DILocation(line: 160, column: 57, scope: !13035)
!13057 = !DILocation(line: 160, column: 63, scope: !13035)
!13058 = !DILocation(line: 160, column: 9, scope: !13035)
!13059 = !DILocation(line: 160, column: 2, scope: !13035)
!13060 = distinct !DISubprogram(name: "mgsl_interrupt", scope: !3, file: !3, line: 1677, type: !13040, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13061 = !DILocalVariable(name: "lock", arg: 1, scope: !13062, file: !8662, line: 392, type: !2181)
!13062 = distinct !DISubprogram(name: "spin_unlock", scope: !8662, file: !8662, line: 392, type: !13063, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13063 = !DISubroutineType(types: !13064)
!13064 = !{null, !2181}
!13065 = !DILocation(line: 392, column: 53, scope: !13062, inlinedAt: !13066)
!13066 = distinct !DILocation(line: 1730, column: 2, scope: !13060)
!13067 = !DILocalVariable(name: "lock", arg: 1, scope: !13068, file: !8662, line: 352, type: !2181)
!13068 = distinct !DISubprogram(name: "spin_lock", scope: !8662, file: !8662, line: 352, type: !13063, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13069 = !DILocation(line: 352, column: 51, scope: !13068, inlinedAt: !13070)
!13070 = distinct !DILocation(line: 1687, column: 2, scope: !13060)
!13071 = !DILocalVariable(name: "dummy", arg: 1, scope: !13060, file: !3, line: 1677, type: !32)
!13072 = !DILocation(line: 1677, column: 39, scope: !13060)
!13073 = !DILocalVariable(name: "dev_id", arg: 2, scope: !13060, file: !3, line: 1677, type: !591)
!13074 = !DILocation(line: 1677, column: 52, scope: !13060)
!13075 = !DILocalVariable(name: "info", scope: !13060, file: !3, line: 1679, type: !7524)
!13076 = !DILocation(line: 1679, column: 22, scope: !13060)
!13077 = !DILocation(line: 1679, column: 29, scope: !13060)
!13078 = !DILocalVariable(name: "UscVector", scope: !13060, file: !3, line: 1680, type: !581)
!13079 = !DILocation(line: 1680, column: 6, scope: !13060)
!13080 = !DILocalVariable(name: "DmaVector", scope: !13060, file: !3, line: 1681, type: !581)
!13081 = !DILocation(line: 1681, column: 6, scope: !13060)
!13082 = !DILocation(line: 1683, column: 7, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13060, file: !3, line: 1683, column: 7)
!13084 = !DILocation(line: 1683, column: 19, scope: !13083)
!13085 = !DILocation(line: 1683, column: 7, scope: !13060)
!13086 = !DILocation(line: 1685, column: 24, scope: !13083)
!13087 = !DILocation(line: 1685, column: 30, scope: !13083)
!13088 = !DILocation(line: 1684, column: 3, scope: !13083)
!13089 = !DILocation(line: 1687, column: 13, scope: !13060)
!13090 = !DILocation(line: 1687, column: 19, scope: !13060)
!13091 = !DILocation(line: 354, column: 2, scope: !13092, inlinedAt: !13070)
!13092 = distinct !DILexicalBlock(scope: !13068, file: !8662, line: 354, column: 2)
!13093 = !{i32 -2145254218}
!13094 = !DILocation(line: 354, column: 2, scope: !13095, inlinedAt: !13070)
!13095 = distinct !DILexicalBlock(scope: !13092, file: !8662, line: 354, column: 2)
!13096 = !DILocation(line: 1689, column: 2, scope: !13060)
!13097 = !DILocation(line: 1691, column: 25, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13099, file: !3, line: 1689, column: 10)
!13099 = distinct !DILexicalBlock(scope: !13100, file: !3, line: 1689, column: 2)
!13100 = distinct !DILexicalBlock(scope: !13060, file: !3, line: 1689, column: 2)
!13101 = !DILocation(line: 1691, column: 15, scope: !13098)
!13102 = !DILocation(line: 1691, column: 36, scope: !13098)
!13103 = !DILocation(line: 1691, column: 13, scope: !13098)
!13104 = !DILocation(line: 1692, column: 28, scope: !13098)
!13105 = !DILocation(line: 1692, column: 15, scope: !13098)
!13106 = !DILocation(line: 1692, column: 13, scope: !13098)
!13107 = !DILocation(line: 1694, column: 8, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 1694, column: 8)
!13109 = !DILocation(line: 1694, column: 20, scope: !13108)
!13110 = !DILocation(line: 1694, column: 8, scope: !13098)
!13111 = !DILocation(line: 1696, column: 23, scope: !13108)
!13112 = !DILocation(line: 1696, column: 29, scope: !13108)
!13113 = !DILocation(line: 1696, column: 41, scope: !13108)
!13114 = !DILocation(line: 1696, column: 51, scope: !13108)
!13115 = !DILocation(line: 1695, column: 4, scope: !13108)
!13116 = !DILocation(line: 1698, column: 9, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 1698, column: 8)
!13118 = !DILocation(line: 1698, column: 19, scope: !13117)
!13119 = !DILocation(line: 1698, column: 23, scope: !13117)
!13120 = !DILocation(line: 1698, column: 8, scope: !13098)
!13121 = !DILocation(line: 1699, column: 4, scope: !13117)
!13122 = !DILocation(line: 1702, column: 8, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 1702, column: 8)
!13124 = !DILocation(line: 1702, column: 8, scope: !13098)
!13125 = !DILocation(line: 1703, column: 18, scope: !13123)
!13126 = !DILocation(line: 1703, column: 6, scope: !13123)
!13127 = !DILocation(line: 1703, column: 30, scope: !13123)
!13128 = !DILocation(line: 1703, column: 4, scope: !13123)
!13129 = !DILocation(line: 1704, column: 14, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 1704, column: 13)
!13131 = !DILocation(line: 1704, column: 23, scope: !13130)
!13132 = !DILocation(line: 1704, column: 38, scope: !13130)
!13133 = !DILocation(line: 1704, column: 13, scope: !13123)
!13134 = !DILocation(line: 1705, column: 26, scope: !13130)
!13135 = !DILocation(line: 1705, column: 4, scope: !13130)
!13136 = !DILocation(line: 1707, column: 25, scope: !13130)
!13137 = !DILocation(line: 1707, column: 4, scope: !13130)
!13138 = !DILocation(line: 1709, column: 8, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 1709, column: 8)
!13140 = !DILocation(line: 1709, column: 14, scope: !13139)
!13141 = !DILocation(line: 1709, column: 8, scope: !13098)
!13142 = !DILocation(line: 1711, column: 25, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13139, file: !3, line: 1709, column: 29)
!13144 = !DILocation(line: 1711, column: 31, scope: !13143)
!13145 = !DILocation(line: 1711, column: 44, scope: !13143)
!13146 = !DILocation(line: 1711, column: 50, scope: !13143)
!13147 = !DILocation(line: 1710, column: 4, scope: !13143)
!13148 = !DILocation(line: 1712, column: 4, scope: !13143)
!13149 = !DILocation(line: 1713, column: 4, scope: !13143)
!13150 = !DILocation(line: 1714, column: 4, scope: !13143)
!13151 = !DILocation(line: 1689, column: 2, scope: !13099)
!13152 = distinct !{!13152, !13153, !13154}
!13153 = !DILocation(line: 1689, column: 2, scope: !13100)
!13154 = !DILocation(line: 1716, column: 2, scope: !13100)
!13155 = !DILocation(line: 1722, column: 7, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13060, file: !3, line: 1722, column: 7)
!13157 = !DILocation(line: 1722, column: 13, scope: !13156)
!13158 = !DILocation(line: 1722, column: 24, scope: !13156)
!13159 = !DILocation(line: 1722, column: 28, scope: !13156)
!13160 = !DILocation(line: 1722, column: 34, scope: !13156)
!13161 = !DILocation(line: 1722, column: 45, scope: !13156)
!13162 = !DILocation(line: 1722, column: 49, scope: !13156)
!13163 = !DILocation(line: 1722, column: 55, scope: !13156)
!13164 = !DILocation(line: 1722, column: 7, scope: !13060)
!13165 = !DILocation(line: 1723, column: 8, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 1723, column: 8)
!13167 = distinct !DILexicalBlock(scope: !13156, file: !3, line: 1722, column: 70)
!13168 = !DILocation(line: 1723, column: 20, scope: !13166)
!13169 = !DILocation(line: 1723, column: 8, scope: !13167)
!13170 = !DILocation(line: 1725, column: 23, scope: !13166)
!13171 = !DILocation(line: 1725, column: 29, scope: !13166)
!13172 = !DILocation(line: 1724, column: 4, scope: !13166)
!13173 = !DILocation(line: 1726, column: 18, scope: !13167)
!13174 = !DILocation(line: 1726, column: 24, scope: !13167)
!13175 = !DILocation(line: 1726, column: 3, scope: !13167)
!13176 = !DILocation(line: 1727, column: 3, scope: !13167)
!13177 = !DILocation(line: 1727, column: 9, scope: !13167)
!13178 = !DILocation(line: 1727, column: 22, scope: !13167)
!13179 = !DILocation(line: 1728, column: 2, scope: !13167)
!13180 = !DILocation(line: 1730, column: 15, scope: !13060)
!13181 = !DILocation(line: 1730, column: 21, scope: !13060)
!13182 = !DILocation(line: 394, column: 2, scope: !13183, inlinedAt: !13066)
!13183 = distinct !DILexicalBlock(scope: !13062, file: !8662, line: 394, column: 2)
!13184 = !{i32 -2145251857}
!13185 = !DILocation(line: 394, column: 2, scope: !13186, inlinedAt: !13066)
!13186 = distinct !DILexicalBlock(scope: !13183, file: !8662, line: 394, column: 2)
!13187 = !DILocation(line: 1732, column: 7, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13060, file: !3, line: 1732, column: 7)
!13189 = !DILocation(line: 1732, column: 19, scope: !13188)
!13190 = !DILocation(line: 1732, column: 7, scope: !13060)
!13191 = !DILocation(line: 1734, column: 24, scope: !13188)
!13192 = !DILocation(line: 1734, column: 30, scope: !13188)
!13193 = !DILocation(line: 1733, column: 3, scope: !13188)
!13194 = !DILocation(line: 1736, column: 2, scope: !13060)
!13195 = !DILocalVariable(name: "info", arg: 1, scope: !8189, file: !3, line: 7181, type: !7524)
!13196 = !DILocation(line: 7181, column: 51, scope: !8189)
!13197 = !DILocalVariable(name: "Patterncount", scope: !8189, file: !3, line: 7185, type: !312)
!13198 = !DILocation(line: 7185, column: 16, scope: !8189)
!13199 = !DILocalVariable(name: "i", scope: !8189, file: !3, line: 7186, type: !312)
!13200 = !DILocation(line: 7186, column: 16, scope: !8189)
!13201 = !DILocalVariable(name: "TestLimit", scope: !8189, file: !3, line: 7187, type: !312)
!13202 = !DILocation(line: 7187, column: 16, scope: !8189)
!13203 = !DILocalVariable(name: "TestAddr", scope: !8189, file: !3, line: 7188, type: !3457)
!13204 = !DILocation(line: 7188, column: 18, scope: !8189)
!13205 = !DILocation(line: 7190, column: 30, scope: !8189)
!13206 = !DILocation(line: 7190, column: 36, scope: !8189)
!13207 = !DILocation(line: 7190, column: 13, scope: !8189)
!13208 = !DILocation(line: 7190, column: 11, scope: !8189)
!13209 = !DILocation(line: 7194, column: 10, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 7194, column: 2)
!13211 = !DILocation(line: 7194, column: 8, scope: !13210)
!13212 = !DILocation(line: 7194, column: 16, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13210, file: !3, line: 7194, column: 2)
!13214 = !DILocation(line: 7194, column: 20, scope: !13213)
!13215 = !DILocation(line: 7194, column: 18, scope: !13213)
!13216 = !DILocation(line: 7194, column: 2, scope: !13210)
!13217 = !DILocation(line: 7195, column: 27, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13213, file: !3, line: 7194, column: 41)
!13219 = !DILocation(line: 7195, column: 15, scope: !13218)
!13220 = !DILocation(line: 7195, column: 4, scope: !13218)
!13221 = !DILocation(line: 7195, column: 13, scope: !13218)
!13222 = !DILocation(line: 7196, column: 9, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13218, file: !3, line: 7196, column: 8)
!13224 = !DILocation(line: 7196, column: 8, scope: !13223)
!13225 = !DILocation(line: 7196, column: 33, scope: !13223)
!13226 = !DILocation(line: 7196, column: 21, scope: !13223)
!13227 = !DILocation(line: 7196, column: 18, scope: !13223)
!13228 = !DILocation(line: 7196, column: 8, scope: !13218)
!13229 = !DILocation(line: 7197, column: 4, scope: !13223)
!13230 = !DILocation(line: 7198, column: 2, scope: !13218)
!13231 = !DILocation(line: 7194, column: 36, scope: !13213)
!13232 = !DILocation(line: 7194, column: 2, scope: !13213)
!13233 = distinct !{!13233, !13216, !13234}
!13234 = !DILocation(line: 7198, column: 2, scope: !13210)
!13235 = !DILocation(line: 7203, column: 10, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 7203, column: 2)
!13237 = !DILocation(line: 7203, column: 8, scope: !13236)
!13238 = !DILocation(line: 7203, column: 16, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13236, file: !3, line: 7203, column: 2)
!13240 = !DILocation(line: 7203, column: 20, scope: !13239)
!13241 = !DILocation(line: 7203, column: 18, scope: !13239)
!13242 = !DILocation(line: 7203, column: 2, scope: !13236)
!13243 = !DILocation(line: 7204, column: 15, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13239, file: !3, line: 7203, column: 38)
!13245 = !DILocation(line: 7204, column: 17, scope: !13244)
!13246 = !DILocation(line: 7204, column: 4, scope: !13244)
!13247 = !DILocation(line: 7204, column: 13, scope: !13244)
!13248 = !DILocation(line: 7205, column: 11, scope: !13244)
!13249 = !DILocation(line: 7206, column: 2, scope: !13244)
!13250 = !DILocation(line: 7203, column: 33, scope: !13239)
!13251 = !DILocation(line: 7203, column: 2, scope: !13239)
!13252 = distinct !{!13252, !13242, !13253}
!13253 = !DILocation(line: 7206, column: 2, scope: !13236)
!13254 = !DILocation(line: 7208, column: 30, scope: !8189)
!13255 = !DILocation(line: 7208, column: 36, scope: !8189)
!13256 = !DILocation(line: 7208, column: 13, scope: !8189)
!13257 = !DILocation(line: 7208, column: 11, scope: !8189)
!13258 = !DILocation(line: 7210, column: 10, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 7210, column: 2)
!13260 = !DILocation(line: 7210, column: 8, scope: !13259)
!13261 = !DILocation(line: 7210, column: 16, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13259, file: !3, line: 7210, column: 2)
!13263 = !DILocation(line: 7210, column: 20, scope: !13262)
!13264 = !DILocation(line: 7210, column: 18, scope: !13262)
!13265 = !DILocation(line: 7210, column: 2, scope: !13259)
!13266 = !DILocation(line: 7211, column: 9, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13268, file: !3, line: 7211, column: 8)
!13268 = distinct !DILexicalBlock(scope: !13262, file: !3, line: 7210, column: 38)
!13269 = !DILocation(line: 7211, column: 8, scope: !13267)
!13270 = !DILocation(line: 7211, column: 21, scope: !13267)
!13271 = !DILocation(line: 7211, column: 23, scope: !13267)
!13272 = !DILocation(line: 7211, column: 18, scope: !13267)
!13273 = !DILocation(line: 7211, column: 8, scope: !13268)
!13274 = !DILocation(line: 7212, column: 4, scope: !13267)
!13275 = !DILocation(line: 7213, column: 11, scope: !13268)
!13276 = !DILocation(line: 7214, column: 2, scope: !13268)
!13277 = !DILocation(line: 7210, column: 33, scope: !13262)
!13278 = !DILocation(line: 7210, column: 2, scope: !13262)
!13279 = distinct !{!13279, !13265, !13280}
!13280 = !DILocation(line: 7214, column: 2, scope: !13259)
!13281 = !DILocation(line: 7216, column: 10, scope: !8189)
!13282 = !DILocation(line: 7216, column: 16, scope: !8189)
!13283 = !DILocation(line: 7216, column: 2, scope: !8189)
!13284 = !DILocation(line: 7218, column: 2, scope: !8189)
!13285 = !DILocation(line: 7220, column: 1, scope: !8189)
!13286 = distinct !DISubprogram(name: "mgsl_allocate_dma_buffers", scope: !3, file: !3, line: 3537, type: !9631, scopeLine: 3538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13287 = !DILocalVariable(name: "info", arg: 1, scope: !13286, file: !3, line: 3537, type: !7524)
!13288 = !DILocation(line: 3537, column: 58, scope: !13286)
!13289 = !DILocalVariable(name: "BuffersPerFrame", scope: !13286, file: !3, line: 3539, type: !476)
!13290 = !DILocation(line: 3539, column: 17, scope: !13286)
!13291 = !DILocation(line: 3541, column: 2, scope: !13286)
!13292 = !DILocation(line: 3541, column: 8, scope: !13286)
!13293 = !DILocation(line: 3541, column: 23, scope: !13286)
!13294 = !DILocation(line: 3548, column: 37, scope: !13286)
!13295 = !DILocation(line: 3548, column: 43, scope: !13286)
!13296 = !DILocation(line: 3548, column: 57, scope: !13286)
!13297 = !DILocation(line: 3548, column: 20, scope: !13286)
!13298 = !DILocation(line: 3548, column: 18, scope: !13286)
!13299 = !DILocation(line: 3549, column: 7, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 3549, column: 7)
!13301 = !DILocation(line: 3549, column: 13, scope: !13300)
!13302 = !DILocation(line: 3549, column: 28, scope: !13300)
!13303 = !DILocation(line: 3549, column: 7, scope: !13286)
!13304 = !DILocation(line: 3550, column: 18, scope: !13300)
!13305 = !DILocation(line: 3550, column: 3, scope: !13300)
!13306 = !DILocation(line: 3571, column: 26, scope: !13286)
!13307 = !DILocation(line: 3571, column: 32, scope: !13286)
!13308 = !DILocation(line: 3571, column: 53, scope: !13286)
!13309 = !DILocation(line: 3571, column: 51, scope: !13286)
!13310 = !DILocation(line: 3571, column: 2, scope: !13286)
!13311 = !DILocation(line: 3571, column: 8, scope: !13286)
!13312 = !DILocation(line: 3571, column: 24, scope: !13286)
!13313 = !DILocation(line: 3572, column: 31, scope: !13286)
!13314 = !DILocation(line: 3572, column: 37, scope: !13286)
!13315 = !DILocation(line: 3572, column: 29, scope: !13286)
!13316 = !DILocation(line: 3572, column: 2, scope: !13286)
!13317 = !DILocation(line: 3572, column: 8, scope: !13286)
!13318 = !DILocation(line: 3572, column: 24, scope: !13286)
!13319 = !DILocation(line: 3574, column: 7, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 3574, column: 7)
!13321 = !DILocation(line: 3574, column: 19, scope: !13320)
!13322 = !DILocation(line: 3574, column: 7, scope: !13286)
!13323 = !DILocation(line: 3576, column: 23, scope: !13320)
!13324 = !DILocation(line: 3576, column: 29, scope: !13320)
!13325 = !DILocation(line: 3576, column: 45, scope: !13320)
!13326 = !DILocation(line: 3576, column: 51, scope: !13320)
!13327 = !DILocation(line: 3575, column: 3, scope: !13320)
!13328 = !DILocation(line: 3578, column: 38, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13286, file: !3, line: 3578, column: 7)
!13330 = !DILocation(line: 3578, column: 7, scope: !13329)
!13331 = !DILocation(line: 3578, column: 45, scope: !13329)
!13332 = !DILocation(line: 3578, column: 49, scope: !13329)
!13333 = !DILocation(line: 3579, column: 29, scope: !13329)
!13334 = !DILocation(line: 3579, column: 35, scope: !13329)
!13335 = !DILocation(line: 3579, column: 41, scope: !13329)
!13336 = !DILocation(line: 3579, column: 57, scope: !13329)
!13337 = !DILocation(line: 3579, column: 63, scope: !13329)
!13338 = !DILocation(line: 3579, column: 5, scope: !13329)
!13339 = !DILocation(line: 3579, column: 80, scope: !13329)
!13340 = !DILocation(line: 3579, column: 84, scope: !13329)
!13341 = !DILocation(line: 3580, column: 29, scope: !13329)
!13342 = !DILocation(line: 3580, column: 35, scope: !13329)
!13343 = !DILocation(line: 3580, column: 41, scope: !13329)
!13344 = !DILocation(line: 3580, column: 57, scope: !13329)
!13345 = !DILocation(line: 3580, column: 63, scope: !13329)
!13346 = !DILocation(line: 3580, column: 5, scope: !13329)
!13347 = !DILocation(line: 3580, column: 80, scope: !13329)
!13348 = !DILocation(line: 3580, column: 84, scope: !13329)
!13349 = !DILocation(line: 3581, column: 45, scope: !13329)
!13350 = !DILocation(line: 3581, column: 5, scope: !13329)
!13351 = !DILocation(line: 3581, column: 51, scope: !13329)
!13352 = !DILocation(line: 3581, column: 56, scope: !13329)
!13353 = !DILocation(line: 3582, column: 45, scope: !13329)
!13354 = !DILocation(line: 3582, column: 5, scope: !13329)
!13355 = !DILocation(line: 3582, column: 51, scope: !13329)
!13356 = !DILocation(line: 3578, column: 7, scope: !13286)
!13357 = !DILocation(line: 3583, column: 3, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13329, file: !3, line: 3582, column: 57)
!13359 = !DILocation(line: 3584, column: 3, scope: !13358)
!13360 = !DILocation(line: 3587, column: 29, scope: !13286)
!13361 = !DILocation(line: 3587, column: 2, scope: !13286)
!13362 = !DILocation(line: 3588, column: 31, scope: !13286)
!13363 = !DILocation(line: 3588, column: 4, scope: !13286)
!13364 = !DILocation(line: 3590, column: 2, scope: !13286)
!13365 = !DILocation(line: 3592, column: 1, scope: !13286)
!13366 = distinct !DISubprogram(name: "mgsl_isr_transmit_dma", scope: !3, file: !3, line: 1634, type: !8185, scopeLine: 1635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13367 = !DILocalVariable(name: "info", arg: 1, scope: !13366, file: !3, line: 1634, type: !7524)
!13368 = !DILocation(line: 1634, column: 56, scope: !13366)
!13369 = !DILocalVariable(name: "status", scope: !13366, file: !3, line: 1636, type: !581)
!13370 = !DILocation(line: 1636, column: 6, scope: !13366)
!13371 = !DILocation(line: 1639, column: 16, scope: !13366)
!13372 = !DILocation(line: 1639, column: 2, scope: !13366)
!13373 = !DILocation(line: 1644, column: 25, scope: !13366)
!13374 = !DILocation(line: 1644, column: 11, scope: !13366)
!13375 = !DILocation(line: 1644, column: 9, scope: !13366)
!13376 = !DILocation(line: 1646, column: 7, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13366, file: !3, line: 1646, column: 7)
!13378 = !DILocation(line: 1646, column: 19, scope: !13377)
!13379 = !DILocation(line: 1646, column: 7, scope: !13366)
!13380 = !DILocation(line: 1648, column: 22, scope: !13377)
!13381 = !DILocation(line: 1648, column: 28, scope: !13377)
!13382 = !DILocation(line: 1648, column: 40, scope: !13377)
!13383 = !DILocation(line: 1647, column: 3, scope: !13377)
!13384 = !DILocation(line: 1650, column: 7, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13366, file: !3, line: 1650, column: 7)
!13386 = !DILocation(line: 1650, column: 14, scope: !13385)
!13387 = !DILocation(line: 1650, column: 7, scope: !13366)
!13388 = !DILocation(line: 1651, column: 5, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1650, column: 23)
!13390 = !DILocation(line: 1651, column: 11, scope: !13389)
!13391 = !DILocation(line: 1651, column: 3, scope: !13389)
!13392 = !DILocation(line: 1656, column: 36, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 1656, column: 8)
!13394 = !DILocation(line: 1656, column: 8, scope: !13393)
!13395 = !DILocation(line: 1656, column: 8, scope: !13389)
!13396 = !DILocation(line: 1660, column: 4, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13393, file: !3, line: 1656, column: 44)
!13398 = !DILocation(line: 1660, column: 10, scope: !13397)
!13399 = !DILocation(line: 1660, column: 21, scope: !13397)
!13400 = !DILocation(line: 1661, column: 3, scope: !13397)
!13401 = !DILocation(line: 1662, column: 2, scope: !13389)
!13402 = !DILocation(line: 1664, column: 1, scope: !13366)
!13403 = distinct !DISubprogram(name: "mgsl_isr_receive_dma", scope: !3, file: !3, line: 1590, type: !8185, scopeLine: 1591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13404 = !DILocalVariable(name: "info", arg: 1, scope: !13403, file: !3, line: 1590, type: !7524)
!13405 = !DILocation(line: 1590, column: 55, scope: !13403)
!13406 = !DILocalVariable(name: "status", scope: !13403, file: !3, line: 1592, type: !581)
!13407 = !DILocation(line: 1592, column: 6, scope: !13403)
!13408 = !DILocation(line: 1595, column: 17, scope: !13403)
!13409 = !DILocation(line: 1595, column: 2, scope: !13403)
!13410 = !DILocation(line: 1599, column: 25, scope: !13403)
!13411 = !DILocation(line: 1599, column: 11, scope: !13403)
!13412 = !DILocation(line: 1599, column: 9, scope: !13403)
!13413 = !DILocation(line: 1601, column: 7, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13403, file: !3, line: 1601, column: 7)
!13415 = !DILocation(line: 1601, column: 19, scope: !13414)
!13416 = !DILocation(line: 1601, column: 7, scope: !13403)
!13417 = !DILocation(line: 1603, column: 22, scope: !13414)
!13418 = !DILocation(line: 1603, column: 28, scope: !13414)
!13419 = !DILocation(line: 1603, column: 40, scope: !13414)
!13420 = !DILocation(line: 1602, column: 3, scope: !13414)
!13421 = !DILocation(line: 1605, column: 2, scope: !13403)
!13422 = !DILocation(line: 1605, column: 8, scope: !13403)
!13423 = !DILocation(line: 1605, column: 19, scope: !13403)
!13424 = !DILocation(line: 1607, column: 7, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13403, file: !3, line: 1607, column: 7)
!13426 = !DILocation(line: 1607, column: 14, scope: !13425)
!13427 = !DILocation(line: 1607, column: 7, scope: !13403)
!13428 = !DILocation(line: 1608, column: 3, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13425, file: !3, line: 1607, column: 23)
!13430 = !DILocation(line: 1608, column: 9, scope: !13429)
!13431 = !DILocation(line: 1608, column: 21, scope: !13429)
!13432 = !DILocation(line: 1609, column: 3, scope: !13429)
!13433 = !DILocation(line: 1609, column: 9, scope: !13429)
!13434 = !DILocation(line: 1609, column: 16, scope: !13429)
!13435 = !DILocation(line: 1609, column: 27, scope: !13429)
!13436 = !DILocation(line: 1610, column: 2, scope: !13429)
!13437 = !DILocation(line: 1612, column: 1, scope: !13403)
!13438 = distinct !DISubprogram(name: "schedule_work", scope: !2765, file: !2765, line: 566, type: !13439, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13439 = !DISubroutineType(types: !13440)
!13440 = !{!771, !2774}
!13441 = !DILocalVariable(name: "work", arg: 1, scope: !13438, file: !2765, line: 566, type: !2774)
!13442 = !DILocation(line: 566, column: 54, scope: !13438)
!13443 = !DILocation(line: 568, column: 20, scope: !13438)
!13444 = !DILocation(line: 568, column: 31, scope: !13438)
!13445 = !DILocation(line: 568, column: 9, scope: !13438)
!13446 = !DILocation(line: 568, column: 2, scope: !13438)
!13447 = distinct !DISubprogram(name: "mgsl_isr_null", scope: !3, file: !3, line: 1566, type: !8185, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13448 = !DILocalVariable(name: "info", arg: 1, scope: !13447, file: !3, line: 1566, type: !7524)
!13449 = !DILocation(line: 1566, column: 48, scope: !13447)
!13450 = !DILocation(line: 1569, column: 1, scope: !13447)
!13451 = distinct !DISubprogram(name: "mgsl_isr_misc", scope: !3, file: !3, line: 1530, type: !8185, scopeLine: 1531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13452 = !DILocalVariable(name: "info", arg: 1, scope: !13451, file: !3, line: 1530, type: !7524)
!13453 = !DILocation(line: 1530, column: 48, scope: !13451)
!13454 = !DILocalVariable(name: "status", scope: !13451, file: !3, line: 1532, type: !581)
!13455 = !DILocation(line: 1532, column: 6, scope: !13451)
!13456 = !DILocation(line: 1532, column: 26, scope: !13451)
!13457 = !DILocation(line: 1532, column: 15, scope: !13451)
!13458 = !DILocation(line: 1534, column: 7, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13451, file: !3, line: 1534, column: 7)
!13460 = !DILocation(line: 1534, column: 19, scope: !13459)
!13461 = !DILocation(line: 1534, column: 7, scope: !13451)
!13462 = !DILocation(line: 1536, column: 22, scope: !13459)
!13463 = !DILocation(line: 1535, column: 3, scope: !13459)
!13464 = !DILocation(line: 1538, column: 7, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13451, file: !3, line: 1538, column: 6)
!13466 = !DILocation(line: 1538, column: 14, scope: !13465)
!13467 = !DILocation(line: 1538, column: 41, scope: !13465)
!13468 = !DILocation(line: 1539, column: 7, scope: !13465)
!13469 = !DILocation(line: 1539, column: 13, scope: !13465)
!13470 = !DILocation(line: 1539, column: 20, scope: !13465)
!13471 = !DILocation(line: 1539, column: 25, scope: !13465)
!13472 = !DILocation(line: 1538, column: 6, scope: !13451)
!13473 = !DILocation(line: 1542, column: 3, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13465, file: !3, line: 1539, column: 45)
!13475 = !DILocation(line: 1543, column: 14, scope: !13474)
!13476 = !DILocation(line: 1543, column: 3, scope: !13474)
!13477 = !DILocation(line: 1544, column: 3, scope: !13474)
!13478 = !DILocation(line: 1545, column: 3, scope: !13474)
!13479 = !DILocation(line: 1546, column: 3, scope: !13474)
!13480 = !DILocation(line: 1549, column: 3, scope: !13474)
!13481 = !DILocation(line: 1549, column: 9, scope: !13474)
!13482 = !DILocation(line: 1549, column: 20, scope: !13474)
!13483 = !DILocation(line: 1550, column: 3, scope: !13474)
!13484 = !DILocation(line: 1550, column: 9, scope: !13474)
!13485 = !DILocation(line: 1550, column: 25, scope: !13474)
!13486 = !DILocation(line: 1551, column: 2, scope: !13474)
!13487 = !DILocation(line: 1553, column: 2, scope: !13451)
!13488 = !DILocation(line: 1554, column: 2, scope: !13451)
!13489 = !DILocation(line: 1556, column: 1, scope: !13451)
!13490 = distinct !DISubprogram(name: "mgsl_isr_io_pin", scope: !3, file: !3, line: 1277, type: !8185, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13491 = !DILocalVariable(name: "info", arg: 1, scope: !13490, file: !3, line: 1277, type: !7524)
!13492 = !DILocation(line: 1277, column: 50, scope: !13490)
!13493 = !DILocalVariable(name: "icount", scope: !13490, file: !3, line: 1279, type: !13494)
!13494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7532, size: 64)
!13495 = !DILocation(line: 1279, column: 23, scope: !13490)
!13496 = !DILocalVariable(name: "status", scope: !13490, file: !3, line: 1280, type: !581)
!13497 = !DILocation(line: 1280, column: 6, scope: !13490)
!13498 = !DILocation(line: 1280, column: 26, scope: !13490)
!13499 = !DILocation(line: 1280, column: 15, scope: !13490)
!13500 = !DILocation(line: 1282, column: 7, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13490, file: !3, line: 1282, column: 7)
!13502 = !DILocation(line: 1282, column: 19, scope: !13501)
!13503 = !DILocation(line: 1282, column: 7, scope: !13490)
!13504 = !DILocation(line: 1284, column: 22, scope: !13501)
!13505 = !DILocation(line: 1283, column: 3, scope: !13501)
!13506 = !DILocation(line: 1286, column: 2, scope: !13490)
!13507 = !DILocation(line: 1287, column: 2, scope: !13490)
!13508 = !DILocation(line: 1289, column: 6, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13490, file: !3, line: 1289, column: 6)
!13510 = !DILocation(line: 1289, column: 13, scope: !13509)
!13511 = !DILocation(line: 1289, column: 6, scope: !13490)
!13512 = !DILocation(line: 1291, column: 13, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13509, file: !3, line: 1290, column: 66)
!13514 = !DILocation(line: 1291, column: 19, scope: !13513)
!13515 = !DILocation(line: 1291, column: 10, scope: !13513)
!13516 = !DILocation(line: 1293, column: 7, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 1293, column: 7)
!13518 = !DILocation(line: 1293, column: 14, scope: !13517)
!13519 = !DILocation(line: 1293, column: 7, scope: !13513)
!13520 = !DILocation(line: 1294, column: 9, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 1294, column: 8)
!13522 = distinct !DILexicalBlock(scope: !13517, file: !3, line: 1293, column: 39)
!13523 = !DILocation(line: 1294, column: 15, scope: !13521)
!13524 = !DILocation(line: 1294, column: 27, scope: !13521)
!13525 = !DILocation(line: 1294, column: 30, scope: !13521)
!13526 = !DILocation(line: 1294, column: 8, scope: !13522)
!13527 = !DILocation(line: 1295, column: 5, scope: !13521)
!13528 = !DILocation(line: 1296, column: 4, scope: !13522)
!13529 = !DILocation(line: 1296, column: 12, scope: !13522)
!13530 = !DILocation(line: 1296, column: 15, scope: !13522)
!13531 = !DILocation(line: 1297, column: 9, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 1297, column: 9)
!13533 = !DILocation(line: 1297, column: 16, scope: !13532)
!13534 = !DILocation(line: 1297, column: 9, scope: !13522)
!13535 = !DILocation(line: 1298, column: 5, scope: !13532)
!13536 = !DILocation(line: 1298, column: 11, scope: !13532)
!13537 = !DILocation(line: 1298, column: 31, scope: !13532)
!13538 = !DILocation(line: 1298, column: 36, scope: !13532)
!13539 = !DILocation(line: 1300, column: 5, scope: !13532)
!13540 = !DILocation(line: 1300, column: 11, scope: !13532)
!13541 = !DILocation(line: 1300, column: 31, scope: !13532)
!13542 = !DILocation(line: 1300, column: 38, scope: !13532)
!13543 = !DILocation(line: 1301, column: 3, scope: !13522)
!13544 = !DILocation(line: 1302, column: 7, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 1302, column: 7)
!13546 = !DILocation(line: 1302, column: 14, scope: !13545)
!13547 = !DILocation(line: 1302, column: 7, scope: !13513)
!13548 = !DILocation(line: 1303, column: 9, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13550, file: !3, line: 1303, column: 8)
!13550 = distinct !DILexicalBlock(scope: !13545, file: !3, line: 1302, column: 40)
!13551 = !DILocation(line: 1303, column: 15, scope: !13549)
!13552 = !DILocation(line: 1303, column: 28, scope: !13549)
!13553 = !DILocation(line: 1303, column: 31, scope: !13549)
!13554 = !DILocation(line: 1303, column: 8, scope: !13550)
!13555 = !DILocation(line: 1304, column: 5, scope: !13549)
!13556 = !DILocation(line: 1305, column: 4, scope: !13550)
!13557 = !DILocation(line: 1305, column: 12, scope: !13550)
!13558 = !DILocation(line: 1305, column: 15, scope: !13550)
!13559 = !DILocation(line: 1306, column: 9, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13550, file: !3, line: 1306, column: 9)
!13561 = !DILocation(line: 1306, column: 16, scope: !13560)
!13562 = !DILocation(line: 1306, column: 9, scope: !13550)
!13563 = !DILocation(line: 1307, column: 5, scope: !13560)
!13564 = !DILocation(line: 1307, column: 11, scope: !13560)
!13565 = !DILocation(line: 1307, column: 31, scope: !13560)
!13566 = !DILocation(line: 1307, column: 37, scope: !13560)
!13567 = !DILocation(line: 1309, column: 5, scope: !13560)
!13568 = !DILocation(line: 1309, column: 11, scope: !13560)
!13569 = !DILocation(line: 1309, column: 31, scope: !13560)
!13570 = !DILocation(line: 1309, column: 39, scope: !13560)
!13571 = !DILocation(line: 1310, column: 3, scope: !13550)
!13572 = !DILocation(line: 1311, column: 7, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 1311, column: 7)
!13574 = !DILocation(line: 1311, column: 14, scope: !13573)
!13575 = !DILocation(line: 1311, column: 7, scope: !13513)
!13576 = !DILocation(line: 1312, column: 9, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 1312, column: 8)
!13578 = distinct !DILexicalBlock(scope: !13573, file: !3, line: 1311, column: 40)
!13579 = !DILocation(line: 1312, column: 15, scope: !13577)
!13580 = !DILocation(line: 1312, column: 28, scope: !13577)
!13581 = !DILocation(line: 1312, column: 31, scope: !13577)
!13582 = !DILocation(line: 1312, column: 8, scope: !13578)
!13583 = !DILocation(line: 1313, column: 5, scope: !13577)
!13584 = !DILocation(line: 1314, column: 4, scope: !13578)
!13585 = !DILocation(line: 1314, column: 12, scope: !13578)
!13586 = !DILocation(line: 1314, column: 15, scope: !13578)
!13587 = !DILocation(line: 1315, column: 8, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 1315, column: 8)
!13589 = !DILocation(line: 1315, column: 15, scope: !13588)
!13590 = !DILocation(line: 1315, column: 8, scope: !13578)
!13591 = !DILocation(line: 1316, column: 5, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 1315, column: 33)
!13593 = !DILocation(line: 1316, column: 11, scope: !13592)
!13594 = !DILocation(line: 1316, column: 31, scope: !13592)
!13595 = !DILocation(line: 1316, column: 37, scope: !13592)
!13596 = !DILocation(line: 1317, column: 4, scope: !13592)
!13597 = !DILocation(line: 1318, column: 5, scope: !13588)
!13598 = !DILocation(line: 1318, column: 11, scope: !13588)
!13599 = !DILocation(line: 1318, column: 31, scope: !13588)
!13600 = !DILocation(line: 1318, column: 39, scope: !13588)
!13601 = !DILocation(line: 1320, column: 8, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13578, file: !3, line: 1320, column: 8)
!13603 = !DILocation(line: 1320, column: 14, scope: !13602)
!13604 = !DILocation(line: 1320, column: 8, scope: !13578)
!13605 = !DILocation(line: 1321, column: 9, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 1321, column: 9)
!13607 = distinct !DILexicalBlock(scope: !13602, file: !3, line: 1320, column: 24)
!13608 = !DILocation(line: 1321, column: 16, scope: !13606)
!13609 = !DILocation(line: 1321, column: 9, scope: !13607)
!13610 = !DILocation(line: 1322, column: 23, scope: !13606)
!13611 = !DILocation(line: 1322, column: 29, scope: !13606)
!13612 = !DILocation(line: 1322, column: 6, scope: !13606)
!13613 = !DILocation(line: 1324, column: 24, scope: !13606)
!13614 = !DILocation(line: 1324, column: 30, scope: !13606)
!13615 = !DILocation(line: 1324, column: 6, scope: !13606)
!13616 = !DILocation(line: 1325, column: 4, scope: !13607)
!13617 = !DILocation(line: 1327, column: 3, scope: !13578)
!13618 = !DILocation(line: 1328, column: 7, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 1328, column: 7)
!13620 = !DILocation(line: 1328, column: 14, scope: !13619)
!13621 = !DILocation(line: 1328, column: 7, scope: !13513)
!13622 = !DILocation(line: 1330, column: 9, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13624, file: !3, line: 1330, column: 8)
!13624 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 1329, column: 3)
!13625 = !DILocation(line: 1330, column: 15, scope: !13623)
!13626 = !DILocation(line: 1330, column: 28, scope: !13623)
!13627 = !DILocation(line: 1330, column: 31, scope: !13623)
!13628 = !DILocation(line: 1330, column: 8, scope: !13624)
!13629 = !DILocation(line: 1331, column: 5, scope: !13623)
!13630 = !DILocation(line: 1332, column: 4, scope: !13624)
!13631 = !DILocation(line: 1332, column: 12, scope: !13624)
!13632 = !DILocation(line: 1332, column: 15, scope: !13624)
!13633 = !DILocation(line: 1333, column: 9, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13624, file: !3, line: 1333, column: 9)
!13635 = !DILocation(line: 1333, column: 16, scope: !13634)
!13636 = !DILocation(line: 1333, column: 9, scope: !13624)
!13637 = !DILocation(line: 1334, column: 5, scope: !13634)
!13638 = !DILocation(line: 1334, column: 11, scope: !13634)
!13639 = !DILocation(line: 1334, column: 31, scope: !13634)
!13640 = !DILocation(line: 1334, column: 37, scope: !13634)
!13641 = !DILocation(line: 1336, column: 5, scope: !13634)
!13642 = !DILocation(line: 1336, column: 11, scope: !13634)
!13643 = !DILocation(line: 1336, column: 31, scope: !13634)
!13644 = !DILocation(line: 1336, column: 39, scope: !13634)
!13645 = !DILocation(line: 1337, column: 3, scope: !13624)
!13646 = !DILocation(line: 1338, column: 3, scope: !13513)
!13647 = !DILocation(line: 1339, column: 3, scope: !13513)
!13648 = !DILocation(line: 1341, column: 31, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 1341, column: 7)
!13650 = !DILocation(line: 1341, column: 37, scope: !13649)
!13651 = !DILocation(line: 1341, column: 7, scope: !13649)
!13652 = !DILocation(line: 1341, column: 43, scope: !13649)
!13653 = !DILocation(line: 1342, column: 9, scope: !13649)
!13654 = !DILocation(line: 1342, column: 16, scope: !13649)
!13655 = !DILocation(line: 1341, column: 7, scope: !13513)
!13656 = !DILocation(line: 1343, column: 9, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 1343, column: 9)
!13658 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 1342, column: 44)
!13659 = !DILocation(line: 1343, column: 21, scope: !13657)
!13660 = !DILocation(line: 1343, column: 9, scope: !13658)
!13661 = !DILocation(line: 1344, column: 31, scope: !13657)
!13662 = !DILocation(line: 1344, column: 37, scope: !13657)
!13663 = !DILocation(line: 1345, column: 13, scope: !13657)
!13664 = !DILocation(line: 1345, column: 20, scope: !13657)
!13665 = !DILocation(line: 1345, column: 12, scope: !13657)
!13666 = !DILocation(line: 1344, column: 5, scope: !13657)
!13667 = !DILocation(line: 1346, column: 8, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 1346, column: 8)
!13669 = !DILocation(line: 1346, column: 15, scope: !13668)
!13670 = !DILocation(line: 1346, column: 8, scope: !13658)
!13671 = !DILocation(line: 1347, column: 5, scope: !13668)
!13672 = !DILocation(line: 1349, column: 10, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13674, file: !3, line: 1349, column: 10)
!13674 = distinct !DILexicalBlock(scope: !13668, file: !3, line: 1348, column: 9)
!13675 = !DILocation(line: 1349, column: 22, scope: !13673)
!13676 = !DILocation(line: 1349, column: 10, scope: !13674)
!13677 = !DILocation(line: 1350, column: 6, scope: !13673)
!13678 = !DILocation(line: 1351, column: 9, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13674, file: !3, line: 1351, column: 9)
!13680 = !DILocation(line: 1351, column: 15, scope: !13679)
!13681 = !DILocation(line: 1351, column: 20, scope: !13679)
!13682 = !DILocation(line: 1351, column: 9, scope: !13674)
!13683 = !DILocation(line: 1352, column: 17, scope: !13679)
!13684 = !DILocation(line: 1352, column: 23, scope: !13679)
!13685 = !DILocation(line: 1352, column: 28, scope: !13679)
!13686 = !DILocation(line: 1352, column: 6, scope: !13679)
!13687 = !DILocation(line: 1354, column: 3, scope: !13658)
!13688 = !DILocation(line: 1356, column: 29, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 1356, column: 7)
!13690 = !DILocation(line: 1356, column: 35, scope: !13689)
!13691 = !DILocation(line: 1356, column: 7, scope: !13689)
!13692 = !DILocation(line: 1356, column: 41, scope: !13689)
!13693 = !DILocation(line: 1357, column: 9, scope: !13689)
!13694 = !DILocation(line: 1357, column: 16, scope: !13689)
!13695 = !DILocation(line: 1356, column: 7, scope: !13513)
!13696 = !DILocation(line: 1358, column: 8, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13698, file: !3, line: 1358, column: 8)
!13698 = distinct !DILexicalBlock(scope: !13689, file: !3, line: 1357, column: 44)
!13699 = !DILocation(line: 1358, column: 14, scope: !13697)
!13700 = !DILocation(line: 1358, column: 19, scope: !13697)
!13701 = !DILocation(line: 1358, column: 24, scope: !13697)
!13702 = !DILocation(line: 1358, column: 8, scope: !13698)
!13703 = !DILocation(line: 1359, column: 9, scope: !13704)
!13704 = distinct !DILexicalBlock(scope: !13705, file: !3, line: 1359, column: 9)
!13705 = distinct !DILexicalBlock(scope: !13697, file: !3, line: 1358, column: 36)
!13706 = !DILocation(line: 1359, column: 16, scope: !13704)
!13707 = !DILocation(line: 1359, column: 9, scope: !13705)
!13708 = !DILocation(line: 1360, column: 11, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 1360, column: 11)
!13710 = distinct !DILexicalBlock(scope: !13704, file: !3, line: 1359, column: 34)
!13711 = !DILocation(line: 1360, column: 23, scope: !13709)
!13712 = !DILocation(line: 1360, column: 11, scope: !13710)
!13713 = !DILocation(line: 1361, column: 7, scope: !13709)
!13714 = !DILocation(line: 1362, column: 6, scope: !13710)
!13715 = !DILocation(line: 1362, column: 12, scope: !13710)
!13716 = !DILocation(line: 1362, column: 17, scope: !13710)
!13717 = !DILocation(line: 1362, column: 22, scope: !13710)
!13718 = !DILocation(line: 1362, column: 33, scope: !13710)
!13719 = !DILocation(line: 1363, column: 28, scope: !13710)
!13720 = !DILocation(line: 1363, column: 6, scope: !13710)
!13721 = !DILocation(line: 1364, column: 6, scope: !13710)
!13722 = !DILocation(line: 1364, column: 12, scope: !13710)
!13723 = !DILocation(line: 1364, column: 23, scope: !13710)
!13724 = !DILocation(line: 1365, column: 6, scope: !13710)
!13725 = !DILocation(line: 1367, column: 4, scope: !13705)
!13726 = !DILocation(line: 1368, column: 11, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13728, file: !3, line: 1368, column: 9)
!13728 = distinct !DILexicalBlock(scope: !13697, file: !3, line: 1367, column: 11)
!13729 = !DILocation(line: 1368, column: 18, scope: !13727)
!13730 = !DILocation(line: 1368, column: 9, scope: !13728)
!13731 = !DILocation(line: 1369, column: 11, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13733, file: !3, line: 1369, column: 11)
!13733 = distinct !DILexicalBlock(scope: !13727, file: !3, line: 1368, column: 37)
!13734 = !DILocation(line: 1369, column: 23, scope: !13732)
!13735 = !DILocation(line: 1369, column: 11, scope: !13733)
!13736 = !DILocation(line: 1370, column: 7, scope: !13732)
!13737 = !DILocation(line: 1371, column: 10, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13733, file: !3, line: 1371, column: 10)
!13739 = !DILocation(line: 1371, column: 16, scope: !13738)
!13740 = !DILocation(line: 1371, column: 21, scope: !13738)
!13741 = !DILocation(line: 1371, column: 10, scope: !13733)
!13742 = !DILocation(line: 1372, column: 7, scope: !13738)
!13743 = !DILocation(line: 1372, column: 13, scope: !13738)
!13744 = !DILocation(line: 1372, column: 18, scope: !13738)
!13745 = !DILocation(line: 1372, column: 23, scope: !13738)
!13746 = !DILocation(line: 1372, column: 34, scope: !13738)
!13747 = !DILocation(line: 1373, column: 27, scope: !13733)
!13748 = !DILocation(line: 1373, column: 6, scope: !13733)
!13749 = !DILocation(line: 1374, column: 5, scope: !13733)
!13750 = !DILocation(line: 1376, column: 3, scope: !13698)
!13751 = !DILocation(line: 1377, column: 2, scope: !13513)
!13752 = !DILocation(line: 1379, column: 2, scope: !13490)
!13753 = !DILocation(line: 1379, column: 8, scope: !13490)
!13754 = !DILocation(line: 1379, column: 19, scope: !13490)
!13755 = !DILocation(line: 1382, column: 7, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13490, file: !3, line: 1382, column: 7)
!13757 = !DILocation(line: 1382, column: 14, scope: !13756)
!13758 = !DILocation(line: 1382, column: 7, scope: !13490)
!13759 = !DILocation(line: 1383, column: 15, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13756, file: !3, line: 1382, column: 40)
!13761 = !DILocation(line: 1384, column: 31, scope: !13760)
!13762 = !DILocation(line: 1384, column: 21, scope: !13760)
!13763 = !DILocation(line: 1384, column: 42, scope: !13760)
!13764 = !DILocation(line: 1384, column: 4, scope: !13760)
!13765 = !DILocation(line: 1383, column: 3, scope: !13760)
!13766 = !DILocation(line: 1385, column: 3, scope: !13760)
!13767 = !DILocation(line: 1386, column: 3, scope: !13760)
!13768 = !DILocation(line: 1386, column: 9, scope: !13760)
!13769 = !DILocation(line: 1386, column: 22, scope: !13760)
!13770 = !DILocation(line: 1387, column: 2, scope: !13760)
!13771 = !DILocation(line: 1389, column: 1, scope: !13490)
!13772 = distinct !DISubprogram(name: "mgsl_isr_transmit_data", scope: !3, file: !3, line: 1398, type: !8185, scopeLine: 1399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13773 = !DILocalVariable(name: "info", arg: 1, scope: !13772, file: !3, line: 1398, type: !7524)
!13774 = !DILocation(line: 1398, column: 57, scope: !13772)
!13775 = !DILocation(line: 1400, column: 7, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 1400, column: 7)
!13777 = !DILocation(line: 1400, column: 19, scope: !13776)
!13778 = !DILocation(line: 1400, column: 7, scope: !13772)
!13779 = !DILocation(line: 1402, column: 22, scope: !13776)
!13780 = !DILocation(line: 1402, column: 28, scope: !13776)
!13781 = !DILocation(line: 1401, column: 3, scope: !13776)
!13782 = !DILocation(line: 1404, column: 2, scope: !13772)
!13783 = !DILocation(line: 1406, column: 6, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 1406, column: 6)
!13785 = !DILocation(line: 1406, column: 12, scope: !13784)
!13786 = !DILocation(line: 1406, column: 17, scope: !13784)
!13787 = !DILocation(line: 1406, column: 22, scope: !13784)
!13788 = !DILocation(line: 1406, column: 30, scope: !13784)
!13789 = !DILocation(line: 1406, column: 33, scope: !13784)
!13790 = !DILocation(line: 1406, column: 39, scope: !13784)
!13791 = !DILocation(line: 1406, column: 44, scope: !13784)
!13792 = !DILocation(line: 1406, column: 49, scope: !13784)
!13793 = !DILocation(line: 1406, column: 6, scope: !13772)
!13794 = !DILocation(line: 1407, column: 24, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13784, file: !3, line: 1406, column: 61)
!13796 = !DILocation(line: 1407, column: 3, scope: !13795)
!13797 = !DILocation(line: 1408, column: 3, scope: !13795)
!13798 = !DILocation(line: 1411, column: 7, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 1411, column: 7)
!13800 = !DILocation(line: 1411, column: 13, scope: !13799)
!13801 = !DILocation(line: 1411, column: 7, scope: !13772)
!13802 = !DILocation(line: 1412, column: 20, scope: !13799)
!13803 = !DILocation(line: 1412, column: 3, scope: !13799)
!13804 = !DILocation(line: 1414, column: 3, scope: !13799)
!13805 = !DILocation(line: 1414, column: 9, scope: !13799)
!13806 = !DILocation(line: 1414, column: 19, scope: !13799)
!13807 = !DILocation(line: 1416, column: 6, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 1416, column: 6)
!13809 = !DILocation(line: 1416, column: 12, scope: !13808)
!13810 = !DILocation(line: 1416, column: 21, scope: !13808)
!13811 = !DILocation(line: 1416, column: 6, scope: !13772)
!13812 = !DILocation(line: 1417, column: 3, scope: !13808)
!13813 = !DILocation(line: 1417, column: 9, scope: !13808)
!13814 = !DILocation(line: 1417, column: 20, scope: !13808)
!13815 = !DILocation(line: 1419, column: 1, scope: !13772)
!13816 = distinct !DISubprogram(name: "mgsl_isr_transmit_status", scope: !3, file: !3, line: 1210, type: !8185, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13817 = !DILocalVariable(name: "info", arg: 1, scope: !13816, file: !3, line: 1210, type: !7524)
!13818 = !DILocation(line: 1210, column: 59, scope: !13816)
!13819 = !DILocalVariable(name: "status", scope: !13816, file: !3, line: 1212, type: !581)
!13820 = !DILocation(line: 1212, column: 6, scope: !13816)
!13821 = !DILocation(line: 1212, column: 26, scope: !13816)
!13822 = !DILocation(line: 1212, column: 15, scope: !13816)
!13823 = !DILocation(line: 1214, column: 7, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 1214, column: 7)
!13825 = !DILocation(line: 1214, column: 19, scope: !13824)
!13826 = !DILocation(line: 1214, column: 7, scope: !13816)
!13827 = !DILocation(line: 1216, column: 22, scope: !13824)
!13828 = !DILocation(line: 1215, column: 3, scope: !13824)
!13829 = !DILocation(line: 1218, column: 2, scope: !13816)
!13830 = !DILocation(line: 1219, column: 2, scope: !13816)
!13831 = !DILocation(line: 1221, column: 7, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 1221, column: 7)
!13833 = !DILocation(line: 1221, column: 14, scope: !13832)
!13834 = !DILocation(line: 1221, column: 7, scope: !13816)
!13835 = !DILocation(line: 1228, column: 16, scope: !13836)
!13836 = distinct !DILexicalBlock(scope: !13832, file: !3, line: 1222, column: 2)
!13837 = !DILocation(line: 1228, column: 4, scope: !13836)
!13838 = !DILocation(line: 1229, column: 15, scope: !13836)
!13839 = !DILocation(line: 1229, column: 4, scope: !13836)
!13840 = !DILocation(line: 1230, column: 2, scope: !13836)
!13841 = !DILocation(line: 1232, column: 7, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 1232, column: 7)
!13843 = !DILocation(line: 1232, column: 14, scope: !13842)
!13844 = !DILocation(line: 1232, column: 7, scope: !13816)
!13845 = !DILocation(line: 1233, column: 3, scope: !13842)
!13846 = !DILocation(line: 1233, column: 9, scope: !13842)
!13847 = !DILocation(line: 1233, column: 16, scope: !13842)
!13848 = !DILocation(line: 1233, column: 20, scope: !13842)
!13849 = !DILocation(line: 1234, column: 12, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13842, file: !3, line: 1234, column: 12)
!13851 = !DILocation(line: 1234, column: 19, scope: !13850)
!13852 = !DILocation(line: 1234, column: 12, scope: !13842)
!13853 = !DILocation(line: 1235, column: 3, scope: !13850)
!13854 = !DILocation(line: 1235, column: 9, scope: !13850)
!13855 = !DILocation(line: 1235, column: 16, scope: !13850)
!13856 = !DILocation(line: 1235, column: 23, scope: !13850)
!13857 = !DILocation(line: 1236, column: 12, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 1236, column: 12)
!13859 = !DILocation(line: 1236, column: 19, scope: !13858)
!13860 = !DILocation(line: 1236, column: 12, scope: !13850)
!13861 = !DILocation(line: 1237, column: 3, scope: !13858)
!13862 = !DILocation(line: 1237, column: 9, scope: !13858)
!13863 = !DILocation(line: 1237, column: 16, scope: !13858)
!13864 = !DILocation(line: 1237, column: 23, scope: !13858)
!13865 = !DILocation(line: 1239, column: 3, scope: !13858)
!13866 = !DILocation(line: 1239, column: 9, scope: !13858)
!13867 = !DILocation(line: 1239, column: 16, scope: !13858)
!13868 = !DILocation(line: 1239, column: 23, scope: !13858)
!13869 = !DILocation(line: 1241, column: 2, scope: !13816)
!13870 = !DILocation(line: 1241, column: 8, scope: !13816)
!13871 = !DILocation(line: 1241, column: 18, scope: !13816)
!13872 = !DILocation(line: 1242, column: 37, scope: !13816)
!13873 = !DILocation(line: 1242, column: 43, scope: !13816)
!13874 = !DILocation(line: 1242, column: 53, scope: !13816)
!13875 = !DILocation(line: 1242, column: 19, scope: !13816)
!13876 = !DILocation(line: 1242, column: 25, scope: !13816)
!13877 = !DILocation(line: 1242, column: 35, scope: !13816)
!13878 = !DILocation(line: 1242, column: 2, scope: !13816)
!13879 = !DILocation(line: 1242, column: 8, scope: !13816)
!13880 = !DILocation(line: 1242, column: 17, scope: !13816)
!13881 = !DILocation(line: 1243, column: 13, scope: !13816)
!13882 = !DILocation(line: 1243, column: 19, scope: !13816)
!13883 = !DILocation(line: 1243, column: 2, scope: !13816)
!13884 = !DILocation(line: 1245, column: 7, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 1245, column: 7)
!13886 = !DILocation(line: 1245, column: 13, scope: !13885)
!13887 = !DILocation(line: 1245, column: 7, scope: !13816)
!13888 = !DILocation(line: 1246, column: 27, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13885, file: !3, line: 1245, column: 35)
!13890 = !DILocation(line: 1246, column: 3, scope: !13889)
!13891 = !DILocation(line: 1247, column: 8, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13889, file: !3, line: 1247, column: 8)
!13893 = !DILocation(line: 1247, column: 14, scope: !13892)
!13894 = !DILocation(line: 1247, column: 29, scope: !13892)
!13895 = !DILocation(line: 1247, column: 8, scope: !13889)
!13896 = !DILocation(line: 1248, column: 4, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13892, file: !3, line: 1247, column: 50)
!13898 = !DILocation(line: 1248, column: 10, scope: !13897)
!13899 = !DILocation(line: 1248, column: 25, scope: !13897)
!13900 = !DILocation(line: 1249, column: 28, scope: !13897)
!13901 = !DILocation(line: 1249, column: 4, scope: !13897)
!13902 = !DILocation(line: 1250, column: 3, scope: !13897)
!13903 = !DILocation(line: 1251, column: 3, scope: !13889)
!13904 = !DILocation(line: 1251, column: 9, scope: !13889)
!13905 = !DILocation(line: 1251, column: 29, scope: !13889)
!13906 = !DILocation(line: 1252, column: 2, scope: !13889)
!13907 = !DILocation(line: 1255, column: 6, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 1255, column: 6)
!13909 = !DILocation(line: 1255, column: 12, scope: !13908)
!13910 = !DILocation(line: 1255, column: 6, scope: !13816)
!13911 = !DILocation(line: 1256, column: 19, scope: !13908)
!13912 = !DILocation(line: 1256, column: 3, scope: !13908)
!13913 = !DILocation(line: 1260, column: 7, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13915, file: !3, line: 1260, column: 7)
!13915 = distinct !DILexicalBlock(scope: !13908, file: !3, line: 1259, column: 2)
!13916 = !DILocation(line: 1260, column: 13, scope: !13914)
!13917 = !DILocation(line: 1260, column: 18, scope: !13914)
!13918 = !DILocation(line: 1260, column: 23, scope: !13914)
!13919 = !DILocation(line: 1260, column: 31, scope: !13914)
!13920 = !DILocation(line: 1260, column: 34, scope: !13914)
!13921 = !DILocation(line: 1260, column: 40, scope: !13914)
!13922 = !DILocation(line: 1260, column: 45, scope: !13914)
!13923 = !DILocation(line: 1260, column: 50, scope: !13914)
!13924 = !DILocation(line: 1260, column: 7, scope: !13915)
!13925 = !DILocation(line: 1261, column: 25, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13914, file: !3, line: 1260, column: 62)
!13927 = !DILocation(line: 1261, column: 4, scope: !13926)
!13928 = !DILocation(line: 1262, column: 4, scope: !13926)
!13929 = !DILocation(line: 1264, column: 3, scope: !13915)
!13930 = !DILocation(line: 1264, column: 9, scope: !13915)
!13931 = !DILocation(line: 1264, column: 20, scope: !13915)
!13932 = !DILocation(line: 1267, column: 1, scope: !13816)
!13933 = distinct !DISubprogram(name: "mgsl_isr_receive_data", scope: !3, file: !3, line: 1430, type: !8185, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13934 = !DILocalVariable(name: "info", arg: 1, scope: !13933, file: !3, line: 1430, type: !7524)
!13935 = !DILocation(line: 1430, column: 56, scope: !13933)
!13936 = !DILocalVariable(name: "Fifocount", scope: !13933, file: !3, line: 1432, type: !32)
!13937 = !DILocation(line: 1432, column: 6, scope: !13933)
!13938 = !DILocalVariable(name: "status", scope: !13933, file: !3, line: 1433, type: !581)
!13939 = !DILocation(line: 1433, column: 6, scope: !13933)
!13940 = !DILocalVariable(name: "work", scope: !13933, file: !3, line: 1434, type: !32)
!13941 = !DILocation(line: 1434, column: 6, scope: !13933)
!13942 = !DILocalVariable(name: "DataByte", scope: !13933, file: !3, line: 1435, type: !482)
!13943 = !DILocation(line: 1435, column: 16, scope: !13933)
!13944 = !DILocalVariable(name: "icount", scope: !13933, file: !3, line: 1436, type: !13494)
!13945 = !DILocation(line: 1436, column: 23, scope: !13933)
!13946 = !DILocation(line: 1436, column: 33, scope: !13933)
!13947 = !DILocation(line: 1436, column: 39, scope: !13933)
!13948 = !DILocation(line: 1438, column: 7, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13933, file: !3, line: 1438, column: 7)
!13950 = !DILocation(line: 1438, column: 19, scope: !13949)
!13951 = !DILocation(line: 1438, column: 7, scope: !13933)
!13952 = !DILocation(line: 1439, column: 3, scope: !13949)
!13953 = !DILocation(line: 1442, column: 2, scope: !13933)
!13954 = !DILocation(line: 1445, column: 2, scope: !13933)
!13955 = !DILocation(line: 1449, column: 14, scope: !13933)
!13956 = !DILocation(line: 1449, column: 50, scope: !13933)
!13957 = !DILocation(line: 1449, column: 40, scope: !13933)
!13958 = !DILocation(line: 1449, column: 70, scope: !13933)
!13959 = !DILocation(line: 1449, column: 34, scope: !13933)
!13960 = !DILocation(line: 1449, column: 2, scope: !13933)
!13961 = !DILocation(line: 1453, column: 2, scope: !13933)
!13962 = !DILocation(line: 1453, column: 33, scope: !13933)
!13963 = !DILocation(line: 1453, column: 23, scope: !13933)
!13964 = !DILocation(line: 1453, column: 44, scope: !13933)
!13965 = !DILocation(line: 1453, column: 20, scope: !13933)
!13966 = !DILocalVariable(name: "flag", scope: !13967, file: !3, line: 1454, type: !32)
!13967 = distinct !DILexicalBlock(scope: !13933, file: !3, line: 1453, column: 53)
!13968 = !DILocation(line: 1454, column: 7, scope: !13967)
!13969 = !DILocation(line: 1457, column: 14, scope: !13967)
!13970 = !DILocation(line: 1457, column: 20, scope: !13967)
!13971 = !DILocation(line: 1457, column: 28, scope: !13967)
!13972 = !DILocation(line: 1457, column: 10, scope: !13967)
!13973 = !DILocation(line: 1457, column: 36, scope: !13967)
!13974 = !DILocation(line: 1457, column: 46, scope: !13967)
!13975 = !DILocation(line: 1457, column: 9, scope: !13967)
!13976 = !DILocation(line: 1458, column: 9, scope: !13967)
!13977 = !DILocation(line: 1458, column: 15, scope: !13967)
!13978 = !DILocation(line: 1458, column: 23, scope: !13967)
!13979 = !DILocation(line: 1457, column: 3, scope: !13967)
!13980 = !DILocation(line: 1459, column: 19, scope: !13967)
!13981 = !DILocation(line: 1459, column: 25, scope: !13967)
!13982 = !DILocation(line: 1459, column: 33, scope: !13967)
!13983 = !DILocation(line: 1459, column: 14, scope: !13967)
!13984 = !DILocation(line: 1459, column: 12, scope: !13967)
!13985 = !DILocation(line: 1462, column: 22, scope: !13967)
!13986 = !DILocation(line: 1462, column: 12, scope: !13967)
!13987 = !DILocation(line: 1462, column: 10, scope: !13967)
!13988 = !DILocation(line: 1463, column: 8, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13967, file: !3, line: 1463, column: 8)
!13990 = !DILocation(line: 1463, column: 15, scope: !13989)
!13991 = !DILocation(line: 1463, column: 8, scope: !13967)
!13992 = !DILocation(line: 1465, column: 4, scope: !13989)
!13993 = !DILocation(line: 1467, column: 3, scope: !13967)
!13994 = !DILocation(line: 1467, column: 11, scope: !13967)
!13995 = !DILocation(line: 1467, column: 13, scope: !13967)
!13996 = !DILocation(line: 1469, column: 8, scope: !13967)
!13997 = !DILocation(line: 1470, column: 8, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13967, file: !3, line: 1470, column: 8)
!13999 = !DILocation(line: 1470, column: 15, scope: !13998)
!14000 = !DILocation(line: 1470, column: 8, scope: !13967)
!14001 = !DILocation(line: 1472, column: 26, scope: !14002)
!14002 = distinct !DILexicalBlock(scope: !13998, file: !3, line: 1471, column: 51)
!14003 = !DILocation(line: 1472, column: 4, scope: !14002)
!14004 = !DILocation(line: 1474, column: 9, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !14002, file: !3, line: 1474, column: 9)
!14006 = !DILocation(line: 1474, column: 16, scope: !14005)
!14007 = !DILocation(line: 1474, column: 9, scope: !14002)
!14008 = !DILocation(line: 1475, column: 12, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14005, file: !3, line: 1474, column: 44)
!14010 = !DILocation(line: 1476, column: 5, scope: !14009)
!14011 = !DILocation(line: 1476, column: 13, scope: !14009)
!14012 = !DILocation(line: 1476, column: 16, scope: !14009)
!14013 = !DILocation(line: 1477, column: 4, scope: !14009)
!14014 = !DILocation(line: 1477, column: 15, scope: !14015)
!14015 = distinct !DILexicalBlock(scope: !14005, file: !3, line: 1477, column: 15)
!14016 = !DILocation(line: 1477, column: 22, scope: !14015)
!14017 = !DILocation(line: 1477, column: 15, scope: !14005)
!14018 = !DILocation(line: 1478, column: 5, scope: !14015)
!14019 = !DILocation(line: 1478, column: 13, scope: !14015)
!14020 = !DILocation(line: 1478, column: 19, scope: !14015)
!14021 = !DILocation(line: 1479, column: 13, scope: !14022)
!14022 = distinct !DILexicalBlock(scope: !14015, file: !3, line: 1479, column: 13)
!14023 = !DILocation(line: 1479, column: 20, scope: !14022)
!14024 = !DILocation(line: 1479, column: 13, scope: !14015)
!14025 = !DILocation(line: 1480, column: 5, scope: !14022)
!14026 = !DILocation(line: 1480, column: 13, scope: !14022)
!14027 = !DILocation(line: 1480, column: 18, scope: !14022)
!14028 = !DILocation(line: 1481, column: 13, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14022, file: !3, line: 1481, column: 13)
!14030 = !DILocation(line: 1481, column: 20, scope: !14029)
!14031 = !DILocation(line: 1481, column: 13, scope: !14022)
!14032 = !DILocation(line: 1484, column: 15, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14029, file: !3, line: 1481, column: 40)
!14034 = !DILocation(line: 1484, column: 5, scope: !14033)
!14035 = !DILocation(line: 1485, column: 5, scope: !14033)
!14036 = !DILocation(line: 1485, column: 13, scope: !14033)
!14037 = !DILocation(line: 1485, column: 20, scope: !14033)
!14038 = !DILocation(line: 1486, column: 4, scope: !14033)
!14039 = !DILocation(line: 1489, column: 8, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14002, file: !3, line: 1489, column: 8)
!14041 = !DILocation(line: 1489, column: 17, scope: !14040)
!14042 = !DILocation(line: 1489, column: 23, scope: !14040)
!14043 = !DILocation(line: 1489, column: 15, scope: !14040)
!14044 = !DILocation(line: 1489, column: 8, scope: !14002)
!14045 = !DILocation(line: 1490, column: 5, scope: !14040)
!14046 = distinct !{!14046, !13961, !14047}
!14047 = !DILocation(line: 1511, column: 2, scope: !13933)
!14048 = !DILocation(line: 1492, column: 14, scope: !14002)
!14049 = !DILocation(line: 1492, column: 20, scope: !14002)
!14050 = !DILocation(line: 1492, column: 11, scope: !14002)
!14051 = !DILocation(line: 1494, column: 8, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14002, file: !3, line: 1494, column: 8)
!14053 = !DILocation(line: 1494, column: 15, scope: !14052)
!14054 = !DILocation(line: 1494, column: 8, scope: !14002)
!14055 = !DILocation(line: 1495, column: 10, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14052, file: !3, line: 1494, column: 42)
!14057 = !DILocation(line: 1496, column: 9, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14056, file: !3, line: 1496, column: 9)
!14059 = !DILocation(line: 1496, column: 15, scope: !14058)
!14060 = !DILocation(line: 1496, column: 20, scope: !14058)
!14061 = !DILocation(line: 1496, column: 26, scope: !14058)
!14062 = !DILocation(line: 1496, column: 9, scope: !14056)
!14063 = !DILocation(line: 1497, column: 13, scope: !14058)
!14064 = !DILocation(line: 1497, column: 19, scope: !14058)
!14065 = !DILocation(line: 1497, column: 24, scope: !14058)
!14066 = !DILocation(line: 1497, column: 6, scope: !14058)
!14067 = !DILocation(line: 1498, column: 4, scope: !14056)
!14068 = !DILocation(line: 1498, column: 15, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14052, file: !3, line: 1498, column: 15)
!14070 = !DILocation(line: 1498, column: 22, scope: !14069)
!14071 = !DILocation(line: 1498, column: 15, scope: !14052)
!14072 = !DILocation(line: 1499, column: 10, scope: !14069)
!14073 = !DILocation(line: 1499, column: 5, scope: !14069)
!14074 = !DILocation(line: 1500, column: 13, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14069, file: !3, line: 1500, column: 13)
!14076 = !DILocation(line: 1500, column: 20, scope: !14075)
!14077 = !DILocation(line: 1500, column: 13, scope: !14069)
!14078 = !DILocation(line: 1501, column: 10, scope: !14075)
!14079 = !DILocation(line: 1501, column: 5, scope: !14075)
!14080 = !DILocation(line: 1502, column: 3, scope: !14002)
!14081 = !DILocation(line: 1503, column: 25, scope: !13967)
!14082 = !DILocation(line: 1503, column: 31, scope: !13967)
!14083 = !DILocation(line: 1503, column: 37, scope: !13967)
!14084 = !DILocation(line: 1503, column: 47, scope: !13967)
!14085 = !DILocation(line: 1503, column: 3, scope: !13967)
!14086 = !DILocation(line: 1504, column: 7, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !13967, file: !3, line: 1504, column: 7)
!14088 = !DILocation(line: 1504, column: 14, scope: !14087)
!14089 = !DILocation(line: 1504, column: 7, scope: !13967)
!14090 = !DILocation(line: 1509, column: 34, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14087, file: !3, line: 1504, column: 34)
!14092 = !DILocation(line: 1509, column: 40, scope: !14091)
!14093 = !DILocation(line: 1509, column: 12, scope: !14091)
!14094 = !DILocation(line: 1509, column: 9, scope: !14091)
!14095 = !DILocation(line: 1510, column: 3, scope: !14091)
!14096 = !DILocation(line: 1513, column: 7, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !13933, file: !3, line: 1513, column: 7)
!14098 = !DILocation(line: 1513, column: 19, scope: !14097)
!14099 = !DILocation(line: 1513, column: 7, scope: !13933)
!14100 = !DILocation(line: 1515, column: 22, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14097, file: !3, line: 1513, column: 40)
!14102 = !DILocation(line: 1515, column: 30, scope: !14101)
!14103 = !DILocation(line: 1515, column: 33, scope: !14101)
!14104 = !DILocation(line: 1515, column: 41, scope: !14101)
!14105 = !DILocation(line: 1516, column: 4, scope: !14101)
!14106 = !DILocation(line: 1516, column: 12, scope: !14101)
!14107 = !DILocation(line: 1516, column: 19, scope: !14101)
!14108 = !DILocation(line: 1516, column: 27, scope: !14101)
!14109 = !DILocation(line: 1516, column: 33, scope: !14101)
!14110 = !DILocation(line: 1516, column: 41, scope: !14101)
!14111 = !DILocation(line: 1514, column: 3, scope: !14101)
!14112 = !DILocation(line: 1517, column: 2, scope: !14101)
!14113 = !DILocation(line: 1519, column: 5, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !13933, file: !3, line: 1519, column: 5)
!14115 = !DILocation(line: 1519, column: 5, scope: !13933)
!14116 = !DILocation(line: 1520, column: 25, scope: !14114)
!14117 = !DILocation(line: 1520, column: 31, scope: !14114)
!14118 = !DILocation(line: 1520, column: 3, scope: !14114)
!14119 = !DILocation(line: 1521, column: 1, scope: !13933)
!14120 = distinct !DISubprogram(name: "mgsl_isr_receive_status", scope: !3, file: !3, line: 1158, type: !8185, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14121 = !DILocalVariable(name: "info", arg: 1, scope: !14120, file: !3, line: 1158, type: !7524)
!14122 = !DILocation(line: 1158, column: 58, scope: !14120)
!14123 = !DILocalVariable(name: "status", scope: !14120, file: !3, line: 1160, type: !581)
!14124 = !DILocation(line: 1160, column: 6, scope: !14120)
!14125 = !DILocation(line: 1160, column: 26, scope: !14120)
!14126 = !DILocation(line: 1160, column: 15, scope: !14120)
!14127 = !DILocation(line: 1162, column: 7, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14120, file: !3, line: 1162, column: 7)
!14129 = !DILocation(line: 1162, column: 19, scope: !14128)
!14130 = !DILocation(line: 1162, column: 7, scope: !14120)
!14131 = !DILocation(line: 1164, column: 22, scope: !14128)
!14132 = !DILocation(line: 1163, column: 3, scope: !14128)
!14133 = !DILocation(line: 1166, column: 9, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14120, file: !3, line: 1166, column: 8)
!14135 = !DILocation(line: 1166, column: 16, scope: !14134)
!14136 = !DILocation(line: 1166, column: 43, scope: !14134)
!14137 = !DILocation(line: 1167, column: 3, scope: !14134)
!14138 = !DILocation(line: 1167, column: 9, scope: !14134)
!14139 = !DILocation(line: 1167, column: 35, scope: !14134)
!14140 = !DILocation(line: 1168, column: 24, scope: !14134)
!14141 = !DILocation(line: 1168, column: 4, scope: !14134)
!14142 = !DILocation(line: 1166, column: 8, scope: !14120)
!14143 = !DILocation(line: 1170, column: 5, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14134, file: !3, line: 1169, column: 3)
!14145 = !DILocation(line: 1170, column: 11, scope: !14144)
!14146 = !DILocation(line: 1170, column: 18, scope: !14144)
!14147 = !DILocation(line: 1170, column: 3, scope: !14144)
!14148 = !DILocation(line: 1171, column: 4, scope: !14144)
!14149 = !DILocation(line: 1171, column: 10, scope: !14144)
!14150 = !DILocation(line: 1171, column: 36, scope: !14144)
!14151 = !DILocation(line: 1174, column: 3, scope: !14144)
!14152 = !DILocation(line: 1174, column: 9, scope: !14144)
!14153 = !DILocation(line: 1174, column: 19, scope: !14144)
!14154 = !DILocation(line: 1175, column: 15, scope: !14144)
!14155 = !DILocation(line: 1175, column: 26, scope: !14144)
!14156 = !DILocation(line: 1175, column: 32, scope: !14144)
!14157 = !DILocation(line: 1175, column: 4, scope: !14144)
!14158 = !DILocation(line: 1178, column: 15, scope: !14144)
!14159 = !DILocation(line: 1179, column: 16, scope: !14144)
!14160 = !DILocation(line: 1179, column: 6, scope: !14144)
!14161 = !DILocation(line: 1179, column: 28, scope: !14144)
!14162 = !DILocation(line: 1179, column: 5, scope: !14144)
!14163 = !DILocation(line: 1178, column: 4, scope: !14144)
!14164 = !DILocation(line: 1180, column: 3, scope: !14144)
!14165 = !DILocation(line: 1182, column: 6, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14120, file: !3, line: 1182, column: 6)
!14167 = !DILocation(line: 1182, column: 13, scope: !14166)
!14168 = !DILocation(line: 1182, column: 6, scope: !14120)
!14169 = !DILocation(line: 1183, column: 7, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14171, file: !3, line: 1183, column: 7)
!14171 = distinct !DILexicalBlock(scope: !14166, file: !3, line: 1182, column: 64)
!14172 = !DILocation(line: 1183, column: 14, scope: !14170)
!14173 = !DILocation(line: 1183, column: 7, scope: !14171)
!14174 = !DILocation(line: 1184, column: 4, scope: !14170)
!14175 = !DILocation(line: 1184, column: 10, scope: !14170)
!14176 = !DILocation(line: 1184, column: 17, scope: !14170)
!14177 = !DILocation(line: 1184, column: 25, scope: !14170)
!14178 = !DILocation(line: 1185, column: 7, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14171, file: !3, line: 1185, column: 7)
!14180 = !DILocation(line: 1185, column: 14, scope: !14179)
!14181 = !DILocation(line: 1185, column: 7, scope: !14171)
!14182 = !DILocation(line: 1186, column: 4, scope: !14179)
!14183 = !DILocation(line: 1186, column: 10, scope: !14179)
!14184 = !DILocation(line: 1186, column: 17, scope: !14179)
!14185 = !DILocation(line: 1186, column: 23, scope: !14179)
!14186 = !DILocation(line: 1187, column: 3, scope: !14171)
!14187 = !DILocation(line: 1188, column: 2, scope: !14171)
!14188 = !DILocation(line: 1190, column: 6, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14120, file: !3, line: 1190, column: 6)
!14190 = !DILocation(line: 1190, column: 13, scope: !14189)
!14191 = !DILocation(line: 1190, column: 6, scope: !14120)
!14192 = !DILocation(line: 1191, column: 3, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14189, file: !3, line: 1190, column: 32)
!14194 = !DILocation(line: 1191, column: 9, scope: !14193)
!14195 = !DILocation(line: 1191, column: 16, scope: !14193)
!14196 = !DILocation(line: 1191, column: 22, scope: !14193)
!14197 = !DILocation(line: 1192, column: 31, scope: !14193)
!14198 = !DILocation(line: 1192, column: 3, scope: !14193)
!14199 = !DILocation(line: 1193, column: 2, scope: !14193)
!14200 = !DILocation(line: 1195, column: 2, scope: !14120)
!14201 = !DILocation(line: 1196, column: 2, scope: !14120)
!14202 = !DILocation(line: 1198, column: 1, scope: !14120)
!14203 = distinct !DISubprogram(name: "tty_port_check_carrier", scope: !3762, file: !3762, line: 638, type: !12277, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14204 = !DILocalVariable(name: "port", arg: 1, scope: !14203, file: !3762, line: 638, type: !4766)
!14205 = !DILocation(line: 638, column: 60, scope: !14203)
!14206 = !DILocation(line: 640, column: 38, scope: !14203)
!14207 = !DILocation(line: 640, column: 44, scope: !14203)
!14208 = !DILocation(line: 640, column: 9, scope: !14203)
!14209 = !DILocation(line: 640, column: 2, scope: !14203)
!14210 = distinct !DISubprogram(name: "tty_port_cts_enabled", scope: !3762, file: !3762, line: 612, type: !12277, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14211 = !DILocalVariable(name: "port", arg: 1, scope: !14210, file: !3762, line: 612, type: !4766)
!14212 = !DILocation(line: 612, column: 58, scope: !14210)
!14213 = !DILocation(line: 614, column: 38, scope: !14210)
!14214 = !DILocation(line: 614, column: 44, scope: !14210)
!14215 = !DILocation(line: 614, column: 9, scope: !14210)
!14216 = !DILocation(line: 614, column: 2, scope: !14210)
!14217 = distinct !DISubprogram(name: "usc_start_transmitter", scope: !3, file: !3, line: 5376, type: !8185, scopeLine: 5377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14218 = !DILocalVariable(name: "m", arg: 1, scope: !14219, file: !14220, line: 363, type: !6117)
!14219 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !14220, file: !14220, line: 363, type: !14221, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14220 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!14221 = !DISubroutineType(types: !14222)
!14222 = !{!312, !6117}
!14223 = !DILocation(line: 363, column: 74, scope: !14219, inlinedAt: !14224)
!14224 = distinct !DILocation(line: 5460, column: 6, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14226, file: !3, line: 5410, column: 10)
!14226 = distinct !DILexicalBlock(scope: !14227, file: !3, line: 5403, column: 8)
!14227 = distinct !DILexicalBlock(scope: !14228, file: !3, line: 5385, column: 24)
!14228 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 5385, column: 7)
!14229 = !DILocalVariable(name: "info", arg: 1, scope: !14217, file: !3, line: 5376, type: !7524)
!14230 = !DILocation(line: 5376, column: 56, scope: !14217)
!14231 = !DILocalVariable(name: "phys_addr", scope: !14217, file: !3, line: 5378, type: !987)
!14232 = !DILocation(line: 5378, column: 6, scope: !14217)
!14233 = !DILocalVariable(name: "FrameSize", scope: !14217, file: !3, line: 5379, type: !7)
!14234 = !DILocation(line: 5379, column: 15, scope: !14217)
!14235 = !DILocation(line: 5381, column: 6, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 5381, column: 6)
!14237 = !DILocation(line: 5381, column: 18, scope: !14236)
!14238 = !DILocation(line: 5381, column: 6, scope: !14217)
!14239 = !DILocation(line: 5383, column: 24, scope: !14236)
!14240 = !DILocation(line: 5383, column: 30, scope: !14236)
!14241 = !DILocation(line: 5382, column: 3, scope: !14236)
!14242 = !DILocation(line: 5385, column: 7, scope: !14228)
!14243 = !DILocation(line: 5385, column: 13, scope: !14228)
!14244 = !DILocation(line: 5385, column: 7, scope: !14217)
!14245 = !DILocation(line: 5391, column: 3, scope: !14227)
!14246 = !DILocation(line: 5391, column: 9, scope: !14227)
!14247 = !DILocation(line: 5391, column: 29, scope: !14227)
!14248 = !DILocation(line: 5393, column: 8, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14227, file: !3, line: 5393, column: 8)
!14250 = !DILocation(line: 5393, column: 14, scope: !14249)
!14251 = !DILocation(line: 5393, column: 21, scope: !14249)
!14252 = !DILocation(line: 5393, column: 27, scope: !14249)
!14253 = !DILocation(line: 5393, column: 8, scope: !14227)
!14254 = !DILocation(line: 5394, column: 28, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 5393, column: 50)
!14256 = !DILocation(line: 5394, column: 4, scope: !14255)
!14257 = !DILocation(line: 5395, column: 11, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14255, file: !3, line: 5395, column: 9)
!14259 = !DILocation(line: 5395, column: 17, scope: !14258)
!14260 = !DILocation(line: 5395, column: 32, scope: !14258)
!14261 = !DILocation(line: 5395, column: 9, scope: !14255)
!14262 = !DILocation(line: 5396, column: 5, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 5395, column: 54)
!14264 = !DILocation(line: 5396, column: 11, scope: !14263)
!14265 = !DILocation(line: 5396, column: 26, scope: !14263)
!14266 = !DILocation(line: 5397, column: 29, scope: !14263)
!14267 = !DILocation(line: 5397, column: 5, scope: !14263)
!14268 = !DILocation(line: 5398, column: 5, scope: !14263)
!14269 = !DILocation(line: 5398, column: 11, scope: !14263)
!14270 = !DILocation(line: 5398, column: 31, scope: !14263)
!14271 = !DILocation(line: 5399, column: 4, scope: !14263)
!14272 = !DILocation(line: 5400, column: 3, scope: !14255)
!14273 = !DILocation(line: 5403, column: 8, scope: !14226)
!14274 = !DILocation(line: 5403, column: 14, scope: !14226)
!14275 = !DILocation(line: 5403, column: 21, scope: !14226)
!14276 = !DILocation(line: 5403, column: 26, scope: !14226)
!14277 = !DILocation(line: 5403, column: 8, scope: !14227)
!14278 = !DILocation(line: 5404, column: 10, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14280, file: !3, line: 5404, column: 9)
!14280 = distinct !DILexicalBlock(scope: !14226, file: !3, line: 5403, column: 47)
!14281 = !DILocation(line: 5404, column: 16, scope: !14279)
!14282 = !DILocation(line: 5404, column: 9, scope: !14280)
!14283 = !DILocation(line: 5405, column: 5, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 5404, column: 28)
!14285 = !DILocation(line: 5406, column: 5, scope: !14284)
!14286 = !DILocation(line: 5407, column: 5, scope: !14284)
!14287 = !DILocation(line: 5408, column: 21, scope: !14284)
!14288 = !DILocation(line: 5408, column: 5, scope: !14284)
!14289 = !DILocation(line: 5409, column: 4, scope: !14284)
!14290 = !DILocation(line: 5410, column: 3, scope: !14280)
!14291 = !DILocation(line: 5412, column: 16, scope: !14225)
!14292 = !DILocation(line: 5412, column: 4, scope: !14225)
!14293 = !DILocation(line: 5417, column: 16, scope: !14225)
!14294 = !DILocation(line: 5417, column: 22, scope: !14225)
!14295 = !DILocation(line: 5417, column: 37, scope: !14225)
!14296 = !DILocation(line: 5417, column: 43, scope: !14225)
!14297 = !DILocation(line: 5417, column: 64, scope: !14225)
!14298 = !DILocation(line: 5417, column: 14, scope: !14225)
!14299 = !DILocation(line: 5423, column: 13, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14225, file: !3, line: 5423, column: 13)
!14301 = !DILocation(line: 5423, column: 19, scope: !14300)
!14302 = !DILocation(line: 5423, column: 26, scope: !14300)
!14303 = !DILocation(line: 5423, column: 31, scope: !14300)
!14304 = !DILocation(line: 5423, column: 13, scope: !14225)
!14305 = !DILocation(line: 5424, column: 5, scope: !14300)
!14306 = !DILocation(line: 5424, column: 11, scope: !14300)
!14307 = !DILocation(line: 5424, column: 26, scope: !14300)
!14308 = !DILocation(line: 5424, column: 32, scope: !14300)
!14309 = !DILocation(line: 5424, column: 53, scope: !14300)
!14310 = !DILocation(line: 5424, column: 57, scope: !14300)
!14311 = !DILocation(line: 5428, column: 16, scope: !14225)
!14312 = !DILocation(line: 5428, column: 33, scope: !14225)
!14313 = !DILocation(line: 5428, column: 28, scope: !14225)
!14314 = !DILocation(line: 5428, column: 4, scope: !14225)
!14315 = !DILocation(line: 5430, column: 15, scope: !14225)
!14316 = !DILocation(line: 5430, column: 4, scope: !14225)
!14317 = !DILocation(line: 5433, column: 16, scope: !14225)
!14318 = !DILocation(line: 5433, column: 22, scope: !14225)
!14319 = !DILocation(line: 5433, column: 37, scope: !14225)
!14320 = !DILocation(line: 5433, column: 43, scope: !14225)
!14321 = !DILocation(line: 5433, column: 64, scope: !14225)
!14322 = !DILocation(line: 5433, column: 14, scope: !14225)
!14323 = !DILocation(line: 5434, column: 19, scope: !14225)
!14324 = !DILocation(line: 5434, column: 37, scope: !14225)
!14325 = !DILocation(line: 5434, column: 32, scope: !14225)
!14326 = !DILocation(line: 5434, column: 4, scope: !14225)
!14327 = !DILocation(line: 5435, column: 19, scope: !14225)
!14328 = !DILocation(line: 5435, column: 38, scope: !14225)
!14329 = !DILocation(line: 5435, column: 48, scope: !14225)
!14330 = !DILocation(line: 5435, column: 32, scope: !14225)
!14331 = !DILocation(line: 5435, column: 4, scope: !14225)
!14332 = !DILocation(line: 5437, column: 4, scope: !14225)
!14333 = !DILocation(line: 5438, column: 4, scope: !14225)
!14334 = !DILocation(line: 5439, column: 4, scope: !14225)
!14335 = !DILocation(line: 5441, column: 9, scope: !14336)
!14336 = distinct !DILexicalBlock(scope: !14225, file: !3, line: 5441, column: 9)
!14337 = !DILocation(line: 5441, column: 15, scope: !14336)
!14338 = !DILocation(line: 5441, column: 22, scope: !14336)
!14339 = !DILocation(line: 5441, column: 27, scope: !14336)
!14340 = !DILocation(line: 5441, column: 44, scope: !14336)
!14341 = !DILocation(line: 5442, column: 6, scope: !14336)
!14342 = !DILocation(line: 5442, column: 12, scope: !14336)
!14343 = !DILocation(line: 5442, column: 31, scope: !14336)
!14344 = !DILocation(line: 5441, column: 9, scope: !14225)
!14345 = !DILocation(line: 5450, column: 22, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14336, file: !3, line: 5442, column: 37)
!14347 = !DILocation(line: 5450, column: 7, scope: !14346)
!14348 = !DILocation(line: 5451, column: 22, scope: !14346)
!14349 = !DILocation(line: 5451, column: 53, scope: !14346)
!14350 = !DILocation(line: 5451, column: 40, scope: !14346)
!14351 = !DILocation(line: 5451, column: 64, scope: !14346)
!14352 = !DILocation(line: 5451, column: 34, scope: !14346)
!14353 = !DILocation(line: 5451, column: 7, scope: !14346)
!14354 = !DILocation(line: 5452, column: 4, scope: !14346)
!14355 = !DILocation(line: 5455, column: 16, scope: !14225)
!14356 = !DILocation(line: 5455, column: 4, scope: !14225)
!14357 = !DILocation(line: 5457, column: 4, scope: !14225)
!14358 = !DILocation(line: 5459, column: 15, scope: !14225)
!14359 = !DILocation(line: 5459, column: 21, scope: !14225)
!14360 = !DILocation(line: 5459, column: 31, scope: !14225)
!14361 = !DILocation(line: 365, column: 27, scope: !14362, inlinedAt: !14224)
!14362 = distinct !DILexicalBlock(scope: !14219, file: !14220, line: 365, column: 6)
!14363 = !DILocation(line: 365, column: 6, scope: !14362, inlinedAt: !14224)
!14364 = !DILocation(line: 365, column: 6, scope: !14219, inlinedAt: !14224)
!14365 = !DILocation(line: 366, column: 12, scope: !14366, inlinedAt: !14224)
!14366 = distinct !DILexicalBlock(scope: !14367, file: !14220, line: 366, column: 7)
!14367 = distinct !DILexicalBlock(scope: !14362, file: !14220, line: 365, column: 31)
!14368 = !DILocation(line: 366, column: 14, scope: !14366, inlinedAt: !14224)
!14369 = !DILocation(line: 366, column: 7, scope: !14367, inlinedAt: !14224)
!14370 = !DILocation(line: 367, column: 4, scope: !14366, inlinedAt: !14224)
!14371 = !DILocation(line: 368, column: 28, scope: !14367, inlinedAt: !14224)
!14372 = !DILocation(line: 368, column: 10, scope: !14367, inlinedAt: !14224)
!14373 = !DILocation(line: 368, column: 3, scope: !14367, inlinedAt: !14224)
!14374 = !DILocation(line: 370, column: 29, scope: !14375, inlinedAt: !14224)
!14375 = distinct !DILexicalBlock(scope: !14362, file: !14220, line: 369, column: 9)
!14376 = !DILocation(line: 370, column: 10, scope: !14375, inlinedAt: !14224)
!14377 = !DILocation(line: 370, column: 3, scope: !14375, inlinedAt: !14224)
!14378 = !DILocation(line: 372, column: 1, scope: !14219, inlinedAt: !14224)
!14379 = !DILocation(line: 5459, column: 39, scope: !14225)
!14380 = !DILocation(line: 5459, column: 4, scope: !14225)
!14381 = !DILocation(line: 5462, column: 3, scope: !14227)
!14382 = !DILocation(line: 5462, column: 9, scope: !14227)
!14383 = !DILocation(line: 5462, column: 19, scope: !14227)
!14384 = !DILocation(line: 5463, column: 2, scope: !14227)
!14385 = !DILocation(line: 5465, column: 8, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 5465, column: 7)
!14387 = !DILocation(line: 5465, column: 14, scope: !14386)
!14388 = !DILocation(line: 5465, column: 7, scope: !14217)
!14389 = !DILocation(line: 5466, column: 3, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14386, file: !3, line: 5465, column: 27)
!14391 = !DILocation(line: 5466, column: 9, scope: !14390)
!14392 = !DILocation(line: 5466, column: 20, scope: !14390)
!14393 = !DILocation(line: 5467, column: 8, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14390, file: !3, line: 5467, column: 8)
!14395 = !DILocation(line: 5467, column: 14, scope: !14394)
!14396 = !DILocation(line: 5467, column: 21, scope: !14394)
!14397 = !DILocation(line: 5467, column: 27, scope: !14394)
!14398 = !DILocation(line: 5467, column: 8, scope: !14390)
!14399 = !DILocation(line: 5468, column: 4, scope: !14394)
!14400 = !DILocation(line: 5470, column: 4, scope: !14394)
!14401 = !DILocation(line: 5471, column: 2, scope: !14390)
!14402 = !DILocation(line: 5473, column: 1, scope: !14217)
!14403 = distinct !DISubprogram(name: "usc_stop_transmitter", scope: !3, file: !3, line: 5482, type: !8185, scopeLine: 5483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14404 = !DILocalVariable(name: "info", arg: 1, scope: !14403, file: !3, line: 5482, type: !7524)
!14405 = !DILocation(line: 5482, column: 55, scope: !14403)
!14406 = !DILocation(line: 5484, column: 6, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14403, file: !3, line: 5484, column: 6)
!14408 = !DILocation(line: 5484, column: 18, scope: !14407)
!14409 = !DILocation(line: 5484, column: 6, scope: !14403)
!14410 = !DILocation(line: 5486, column: 24, scope: !14407)
!14411 = !DILocation(line: 5486, column: 30, scope: !14407)
!14412 = !DILocation(line: 5485, column: 3, scope: !14407)
!14413 = !DILocation(line: 5488, column: 13, scope: !14403)
!14414 = !DILocation(line: 5488, column: 19, scope: !14403)
!14415 = !DILocation(line: 5488, column: 2, scope: !14403)
!14416 = !DILocation(line: 5490, column: 2, scope: !14403)
!14417 = !DILocation(line: 5491, column: 2, scope: !14403)
!14418 = !DILocation(line: 5492, column: 2, scope: !14403)
!14419 = !DILocation(line: 5494, column: 2, scope: !14403)
!14420 = !DILocation(line: 5495, column: 14, scope: !14403)
!14421 = !DILocation(line: 5495, column: 2, scope: !14403)
!14422 = !DILocation(line: 5496, column: 13, scope: !14403)
!14423 = !DILocation(line: 5496, column: 2, scope: !14403)
!14424 = !DILocation(line: 5498, column: 2, scope: !14403)
!14425 = !DILocation(line: 5498, column: 8, scope: !14403)
!14426 = !DILocation(line: 5498, column: 19, scope: !14403)
!14427 = !DILocation(line: 5499, column: 2, scope: !14403)
!14428 = !DILocation(line: 5499, column: 8, scope: !14403)
!14429 = !DILocation(line: 5499, column: 18, scope: !14403)
!14430 = !DILocation(line: 5501, column: 1, scope: !14403)
!14431 = distinct !DISubprogram(name: "usc_load_txfifo", scope: !3, file: !3, line: 5511, type: !8185, scopeLine: 5512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14432 = !DILocalVariable(name: "info", arg: 1, scope: !14431, file: !3, line: 5511, type: !7524)
!14433 = !DILocation(line: 5511, column: 50, scope: !14431)
!14434 = !DILocalVariable(name: "Fifocount", scope: !14431, file: !3, line: 5513, type: !32)
!14435 = !DILocation(line: 5513, column: 6, scope: !14431)
!14436 = !DILocalVariable(name: "TwoBytes", scope: !14431, file: !3, line: 5514, type: !14437)
!14437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 16, elements: !2947)
!14438 = !DILocation(line: 5514, column: 5, scope: !14431)
!14439 = !DILocation(line: 5516, column: 8, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14431, file: !3, line: 5516, column: 7)
!14441 = !DILocation(line: 5516, column: 14, scope: !14440)
!14442 = !DILocation(line: 5516, column: 23, scope: !14440)
!14443 = !DILocation(line: 5516, column: 27, scope: !14440)
!14444 = !DILocation(line: 5516, column: 33, scope: !14440)
!14445 = !DILocation(line: 5516, column: 7, scope: !14431)
!14446 = !DILocation(line: 5517, column: 3, scope: !14440)
!14447 = !DILocation(line: 5520, column: 2, scope: !14431)
!14448 = !DILocation(line: 5524, column: 2, scope: !14431)
!14449 = !DILocation(line: 5524, column: 32, scope: !14431)
!14450 = !DILocation(line: 5524, column: 22, scope: !14431)
!14451 = !DILocation(line: 5524, column: 44, scope: !14431)
!14452 = !DILocation(line: 5524, column: 20, scope: !14431)
!14453 = !DILocation(line: 5524, column: 50, scope: !14431)
!14454 = !DILocation(line: 5524, column: 53, scope: !14431)
!14455 = !DILocation(line: 5524, column: 59, scope: !14431)
!14456 = !DILocation(line: 0, scope: !14431)
!14457 = !DILocation(line: 5528, column: 9, scope: !14458)
!14458 = distinct !DILexicalBlock(scope: !14459, file: !3, line: 5528, column: 8)
!14459 = distinct !DILexicalBlock(scope: !14431, file: !3, line: 5524, column: 70)
!14460 = !DILocation(line: 5528, column: 15, scope: !14458)
!14461 = !DILocation(line: 5528, column: 24, scope: !14458)
!14462 = !DILocation(line: 5528, column: 29, scope: !14458)
!14463 = !DILocation(line: 5528, column: 33, scope: !14458)
!14464 = !DILocation(line: 5528, column: 43, scope: !14458)
!14465 = !DILocation(line: 5528, column: 48, scope: !14458)
!14466 = !DILocation(line: 5528, column: 52, scope: !14458)
!14467 = !DILocation(line: 5528, column: 58, scope: !14458)
!14468 = !DILocation(line: 5528, column: 8, scope: !14459)
!14469 = !DILocation(line: 5531, column: 18, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14458, file: !3, line: 5528, column: 67)
!14471 = !DILocation(line: 5531, column: 24, scope: !14470)
!14472 = !DILocation(line: 5531, column: 33, scope: !14470)
!14473 = !DILocation(line: 5531, column: 39, scope: !14470)
!14474 = !DILocation(line: 5531, column: 48, scope: !14470)
!14475 = !DILocation(line: 5531, column: 4, scope: !14470)
!14476 = !DILocation(line: 5531, column: 16, scope: !14470)
!14477 = !DILocation(line: 5532, column: 22, scope: !14470)
!14478 = !DILocation(line: 5532, column: 28, scope: !14470)
!14479 = !DILocation(line: 5532, column: 38, scope: !14470)
!14480 = !DILocation(line: 5532, column: 4, scope: !14470)
!14481 = !DILocation(line: 5532, column: 10, scope: !14470)
!14482 = !DILocation(line: 5532, column: 20, scope: !14470)
!14483 = !DILocation(line: 5533, column: 18, scope: !14470)
!14484 = !DILocation(line: 5533, column: 24, scope: !14470)
!14485 = !DILocation(line: 5533, column: 33, scope: !14470)
!14486 = !DILocation(line: 5533, column: 39, scope: !14470)
!14487 = !DILocation(line: 5533, column: 48, scope: !14470)
!14488 = !DILocation(line: 5533, column: 4, scope: !14470)
!14489 = !DILocation(line: 5533, column: 16, scope: !14470)
!14490 = !DILocation(line: 5534, column: 22, scope: !14470)
!14491 = !DILocation(line: 5534, column: 28, scope: !14470)
!14492 = !DILocation(line: 5534, column: 38, scope: !14470)
!14493 = !DILocation(line: 5534, column: 4, scope: !14470)
!14494 = !DILocation(line: 5534, column: 10, scope: !14470)
!14495 = !DILocation(line: 5534, column: 20, scope: !14470)
!14496 = !DILocation(line: 5536, column: 10, scope: !14470)
!14497 = !DILocation(line: 5536, column: 30, scope: !14470)
!14498 = !DILocation(line: 5536, column: 36, scope: !14470)
!14499 = !DILocation(line: 5536, column: 44, scope: !14470)
!14500 = !DILocation(line: 5536, column: 46, scope: !14470)
!14501 = !DILocation(line: 5536, column: 4, scope: !14470)
!14502 = !DILocation(line: 5538, column: 4, scope: !14470)
!14503 = !DILocation(line: 5538, column: 10, scope: !14470)
!14504 = !DILocation(line: 5538, column: 19, scope: !14470)
!14505 = !DILocation(line: 5539, column: 4, scope: !14470)
!14506 = !DILocation(line: 5539, column: 10, scope: !14470)
!14507 = !DILocation(line: 5539, column: 17, scope: !14470)
!14508 = !DILocation(line: 5539, column: 20, scope: !14470)
!14509 = !DILocation(line: 5540, column: 3, scope: !14470)
!14510 = !DILocation(line: 5543, column: 16, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !14458, file: !3, line: 5540, column: 10)
!14512 = !DILocation(line: 5543, column: 22, scope: !14511)
!14513 = !DILocation(line: 5543, column: 30, scope: !14511)
!14514 = !DILocation(line: 5543, column: 11, scope: !14511)
!14515 = !DILocation(line: 5543, column: 38, scope: !14511)
!14516 = !DILocation(line: 5543, column: 48, scope: !14511)
!14517 = !DILocation(line: 5543, column: 10, scope: !14511)
!14518 = !DILocation(line: 5544, column: 5, scope: !14511)
!14519 = !DILocation(line: 5544, column: 11, scope: !14511)
!14520 = !DILocation(line: 5544, column: 19, scope: !14511)
!14521 = !DILocation(line: 5543, column: 4, scope: !14511)
!14522 = !DILocation(line: 5546, column: 8, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14511, file: !3, line: 5546, column: 8)
!14524 = !DILocation(line: 5546, column: 14, scope: !14523)
!14525 = !DILocation(line: 5546, column: 8, scope: !14511)
!14526 = !DILocation(line: 5548, column: 11, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 5546, column: 22)
!14528 = !DILocation(line: 5548, column: 17, scope: !14527)
!14529 = !DILocation(line: 5548, column: 24, scope: !14527)
!14530 = !DILocation(line: 5548, column: 30, scope: !14527)
!14531 = !DILocation(line: 5548, column: 38, scope: !14527)
!14532 = !DILocation(line: 5548, column: 5, scope: !14527)
!14533 = !DILocation(line: 5549, column: 5, scope: !14527)
!14534 = !DILocation(line: 5549, column: 11, scope: !14527)
!14535 = !DILocation(line: 5549, column: 18, scope: !14527)
!14536 = !DILocation(line: 5550, column: 4, scope: !14527)
!14537 = !DILocation(line: 5551, column: 11, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14523, file: !3, line: 5550, column: 11)
!14539 = !DILocation(line: 5551, column: 17, scope: !14538)
!14540 = !DILocation(line: 5551, column: 26, scope: !14538)
!14541 = !DILocation(line: 5551, column: 32, scope: !14538)
!14542 = !DILocation(line: 5551, column: 41, scope: !14538)
!14543 = !DILocation(line: 5551, column: 45, scope: !14538)
!14544 = !DILocation(line: 5551, column: 51, scope: !14538)
!14545 = !DILocation(line: 5551, column: 59, scope: !14538)
!14546 = !DILocation(line: 5551, column: 5, scope: !14538)
!14547 = !DILocation(line: 5552, column: 23, scope: !14538)
!14548 = !DILocation(line: 5552, column: 29, scope: !14538)
!14549 = !DILocation(line: 5552, column: 39, scope: !14538)
!14550 = !DILocation(line: 5552, column: 5, scope: !14538)
!14551 = !DILocation(line: 5552, column: 11, scope: !14538)
!14552 = !DILocation(line: 5552, column: 21, scope: !14538)
!14553 = !DILocation(line: 5553, column: 5, scope: !14538)
!14554 = !DILocation(line: 5553, column: 11, scope: !14538)
!14555 = !DILocation(line: 5553, column: 19, scope: !14538)
!14556 = !DILocation(line: 5555, column: 4, scope: !14511)
!14557 = !DILocation(line: 5555, column: 10, scope: !14511)
!14558 = !DILocation(line: 5555, column: 17, scope: !14511)
!14559 = !DILocation(line: 5555, column: 19, scope: !14511)
!14560 = distinct !{!14560, !14448, !14561}
!14561 = !DILocation(line: 5557, column: 2, scope: !14431)
!14562 = !DILocation(line: 5559, column: 1, scope: !14431)
!14563 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !14220, file: !14220, line: 308, type: !14221, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14564 = !DILocalVariable(name: "m", arg: 1, scope: !14563, file: !14220, line: 308, type: !6117)
!14565 = !DILocation(line: 308, column: 66, scope: !14563)
!14566 = !DILocation(line: 310, column: 10, scope: !14563)
!14567 = !DILocation(line: 310, column: 12, scope: !14563)
!14568 = !DILocation(line: 310, column: 34, scope: !14563)
!14569 = !DILocation(line: 310, column: 39, scope: !14563)
!14570 = !DILocation(line: 310, column: 2, scope: !14563)
!14571 = distinct !DISubprogram(name: "inb", scope: !8515, file: !8515, line: 334, type: !14572, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14572 = !DISubroutineType(types: !14573)
!14573 = !{!482, !32}
!14574 = !DILocalVariable(name: "port", arg: 1, scope: !14571, file: !8515, line: 334, type: !32)
!14575 = !DILocation(line: 334, column: 1, scope: !14571)
!14576 = !DILocalVariable(name: "value", scope: !14571, file: !8515, line: 334, type: !482)
!14577 = !{i32 -2143173176}
!14578 = distinct !DISubprogram(name: "tty_insert_flip_char", scope: !14579, file: !14579, line: 18, type: !14580, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14579 = !DIFile(filename: "./include/linux/tty_flip.h", directory: "/home/lizy2001/genbc/linux")
!14580 = !DISubroutineType(types: !14581)
!14581 = !{!32, !4766, !482, !268}
!14582 = !DILocalVariable(name: "port", arg: 1, scope: !14578, file: !14579, line: 18, type: !4766)
!14583 = !DILocation(line: 18, column: 57, scope: !14578)
!14584 = !DILocalVariable(name: "ch", arg: 2, scope: !14578, file: !14579, line: 19, type: !482)
!14585 = !DILocation(line: 19, column: 20, scope: !14578)
!14586 = !DILocalVariable(name: "flag", arg: 3, scope: !14578, file: !14579, line: 19, type: !268)
!14587 = !DILocation(line: 19, column: 29, scope: !14578)
!14588 = !DILocalVariable(name: "tb", scope: !14578, file: !14579, line: 21, type: !4773)
!14589 = !DILocation(line: 21, column: 21, scope: !14578)
!14590 = !DILocation(line: 21, column: 26, scope: !14578)
!14591 = !DILocation(line: 21, column: 32, scope: !14578)
!14592 = !DILocation(line: 21, column: 36, scope: !14578)
!14593 = !DILocalVariable(name: "change", scope: !14578, file: !14579, line: 22, type: !32)
!14594 = !DILocation(line: 22, column: 6, scope: !14578)
!14595 = !DILocation(line: 24, column: 12, scope: !14578)
!14596 = !DILocation(line: 24, column: 16, scope: !14578)
!14597 = !DILocation(line: 24, column: 22, scope: !14578)
!14598 = !DILocation(line: 24, column: 37, scope: !14578)
!14599 = !DILocation(line: 24, column: 41, scope: !14578)
!14600 = !DILocation(line: 24, column: 46, scope: !14578)
!14601 = !DILocation(line: 0, scope: !14578)
!14602 = !DILocation(line: 24, column: 9, scope: !14578)
!14603 = !DILocation(line: 25, column: 7, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14578, file: !14579, line: 25, column: 6)
!14605 = !DILocation(line: 25, column: 14, scope: !14604)
!14606 = !DILocation(line: 25, column: 17, scope: !14604)
!14607 = !DILocation(line: 25, column: 21, scope: !14604)
!14608 = !DILocation(line: 25, column: 28, scope: !14604)
!14609 = !DILocation(line: 25, column: 32, scope: !14604)
!14610 = !DILocation(line: 25, column: 26, scope: !14604)
!14611 = !DILocation(line: 25, column: 6, scope: !14578)
!14612 = !DILocation(line: 26, column: 8, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14614, file: !14579, line: 26, column: 7)
!14614 = distinct !DILexicalBlock(scope: !14604, file: !14579, line: 25, column: 38)
!14615 = !DILocation(line: 26, column: 12, scope: !14613)
!14616 = !DILocation(line: 26, column: 7, scope: !14613)
!14617 = !DILocation(line: 26, column: 18, scope: !14613)
!14618 = !DILocation(line: 26, column: 7, scope: !14614)
!14619 = !DILocation(line: 27, column: 34, scope: !14613)
!14620 = !DILocation(line: 27, column: 18, scope: !14613)
!14621 = !DILocation(line: 27, column: 22, scope: !14613)
!14622 = !DILocation(line: 27, column: 26, scope: !14613)
!14623 = !DILocation(line: 27, column: 5, scope: !14613)
!14624 = !DILocation(line: 27, column: 32, scope: !14613)
!14625 = !DILocation(line: 27, column: 4, scope: !14613)
!14626 = !DILocation(line: 28, column: 35, scope: !14614)
!14627 = !DILocation(line: 28, column: 17, scope: !14614)
!14628 = !DILocation(line: 28, column: 21, scope: !14614)
!14629 = !DILocation(line: 28, column: 25, scope: !14614)
!14630 = !DILocation(line: 28, column: 29, scope: !14614)
!14631 = !DILocation(line: 28, column: 4, scope: !14614)
!14632 = !DILocation(line: 28, column: 33, scope: !14614)
!14633 = !DILocation(line: 29, column: 3, scope: !14614)
!14634 = !DILocation(line: 31, column: 32, scope: !14578)
!14635 = !DILocation(line: 31, column: 38, scope: !14578)
!14636 = !DILocation(line: 31, column: 42, scope: !14578)
!14637 = !DILocation(line: 31, column: 9, scope: !14578)
!14638 = !DILocation(line: 31, column: 2, scope: !14578)
!14639 = !DILocation(line: 32, column: 1, scope: !14578)
!14640 = distinct !DISubprogram(name: "flag_buf_ptr", scope: !3762, file: !3762, line: 80, type: !14641, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14641 = !DISubroutineType(types: !14642)
!14642 = !{!1038, !4773, !32}
!14643 = !DILocalVariable(name: "b", arg: 1, scope: !14640, file: !3762, line: 80, type: !4773)
!14644 = !DILocation(line: 80, column: 53, scope: !14640)
!14645 = !DILocalVariable(name: "ofs", arg: 2, scope: !14640, file: !3762, line: 80, type: !32)
!14646 = !DILocation(line: 80, column: 60, scope: !14640)
!14647 = !DILocation(line: 82, column: 30, scope: !14640)
!14648 = !DILocation(line: 82, column: 33, scope: !14640)
!14649 = !DILocation(line: 82, column: 17, scope: !14640)
!14650 = !DILocation(line: 82, column: 40, scope: !14640)
!14651 = !DILocation(line: 82, column: 43, scope: !14640)
!14652 = !DILocation(line: 82, column: 38, scope: !14640)
!14653 = !DILocation(line: 82, column: 2, scope: !14640)
!14654 = distinct !DISubprogram(name: "char_buf_ptr", scope: !3762, file: !3762, line: 75, type: !14655, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14655 = !DISubroutineType(types: !14656)
!14656 = !{!564, !4773, !32}
!14657 = !DILocalVariable(name: "b", arg: 1, scope: !14654, file: !3762, line: 75, type: !4773)
!14658 = !DILocation(line: 75, column: 62, scope: !14654)
!14659 = !DILocalVariable(name: "ofs", arg: 2, scope: !14654, file: !3762, line: 75, type: !32)
!14660 = !DILocation(line: 75, column: 69, scope: !14654)
!14661 = !DILocation(line: 77, column: 27, scope: !14654)
!14662 = !DILocation(line: 77, column: 30, scope: !14654)
!14663 = !DILocation(line: 77, column: 10, scope: !14654)
!14664 = !DILocation(line: 77, column: 38, scope: !14654)
!14665 = !DILocation(line: 77, column: 36, scope: !14654)
!14666 = !DILocation(line: 77, column: 2, scope: !14654)
!14667 = distinct !DISubprogram(name: "usc_loopmode_active", scope: !3, file: !3, line: 7414, type: !9631, scopeLine: 7415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14668 = !DILocalVariable(name: "info", arg: 1, scope: !14667, file: !3, line: 7414, type: !7524)
!14669 = !DILocation(line: 7414, column: 54, scope: !14667)
!14670 = !DILocation(line: 7416, column: 21, scope: !14667)
!14671 = !DILocation(line: 7416, column: 10, scope: !14667)
!14672 = !DILocation(line: 7416, column: 34, scope: !14667)
!14673 = !DILocation(line: 7416, column: 3, scope: !14667)
!14674 = distinct !DISubprogram(name: "usc_process_rxoverrun_sync", scope: !3, file: !3, line: 5140, type: !8185, scopeLine: 5141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14675 = !DILocalVariable(name: "info", arg: 1, scope: !14674, file: !3, line: 5140, type: !7524)
!14676 = !DILocation(line: 5140, column: 61, scope: !14674)
!14677 = !DILocalVariable(name: "start_index", scope: !14674, file: !3, line: 5142, type: !32)
!14678 = !DILocation(line: 5142, column: 6, scope: !14674)
!14679 = !DILocalVariable(name: "end_index", scope: !14674, file: !3, line: 5143, type: !32)
!14680 = !DILocation(line: 5143, column: 6, scope: !14674)
!14681 = !DILocalVariable(name: "frame_start_index", scope: !14674, file: !3, line: 5144, type: !32)
!14682 = !DILocation(line: 5144, column: 6, scope: !14674)
!14683 = !DILocalVariable(name: "start_of_frame_found", scope: !14674, file: !3, line: 5145, type: !771)
!14684 = !DILocation(line: 5145, column: 7, scope: !14674)
!14685 = !DILocalVariable(name: "end_of_frame_found", scope: !14674, file: !3, line: 5146, type: !771)
!14686 = !DILocation(line: 5146, column: 7, scope: !14674)
!14687 = !DILocalVariable(name: "reprogram_dma", scope: !14674, file: !3, line: 5147, type: !771)
!14688 = !DILocation(line: 5147, column: 7, scope: !14674)
!14689 = !DILocalVariable(name: "buffer_list", scope: !14674, file: !3, line: 5149, type: !7588)
!14690 = !DILocation(line: 5149, column: 18, scope: !14674)
!14691 = !DILocation(line: 5149, column: 32, scope: !14674)
!14692 = !DILocation(line: 5149, column: 38, scope: !14674)
!14693 = !DILocalVariable(name: "phys_addr", scope: !14674, file: !3, line: 5150, type: !987)
!14694 = !DILocation(line: 5150, column: 6, scope: !14674)
!14695 = !DILocation(line: 5152, column: 14, scope: !14674)
!14696 = !DILocation(line: 5152, column: 2, scope: !14674)
!14697 = !DILocation(line: 5153, column: 2, scope: !14674)
!14698 = !DILocation(line: 5154, column: 13, scope: !14674)
!14699 = !DILocation(line: 5154, column: 2, scope: !14674)
!14700 = !DILocation(line: 5159, column: 48, scope: !14674)
!14701 = !DILocation(line: 5159, column: 54, scope: !14674)
!14702 = !DILocation(line: 5159, column: 46, scope: !14674)
!14703 = !DILocation(line: 5159, column: 34, scope: !14674)
!14704 = !DILocation(line: 5159, column: 20, scope: !14674)
!14705 = !DILocation(line: 5166, column: 2, scope: !14674)
!14706 = !DILocation(line: 5166, column: 10, scope: !14674)
!14707 = !DILocation(line: 5166, column: 22, scope: !14674)
!14708 = !DILocation(line: 5166, column: 33, scope: !14674)
!14709 = !DILocation(line: 5166, column: 9, scope: !14674)
!14710 = !DILocation(line: 5171, column: 9, scope: !14711)
!14711 = distinct !DILexicalBlock(scope: !14712, file: !3, line: 5171, column: 8)
!14712 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 5167, column: 2)
!14713 = !DILocation(line: 5171, column: 8, scope: !14712)
!14714 = !DILocation(line: 5173, column: 25, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14711, file: !3, line: 5172, column: 3)
!14716 = !DILocation(line: 5174, column: 24, scope: !14715)
!14717 = !DILocation(line: 5174, column: 22, scope: !14715)
!14718 = !DILocation(line: 5175, column: 23, scope: !14715)
!14719 = !DILocation(line: 5176, column: 3, scope: !14715)
!14720 = !DILocation(line: 5178, column: 8, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14712, file: !3, line: 5178, column: 8)
!14722 = !DILocation(line: 5178, column: 20, scope: !14721)
!14723 = !DILocation(line: 5178, column: 31, scope: !14721)
!14724 = !DILocation(line: 5178, column: 8, scope: !14712)
!14725 = !DILocation(line: 5186, column: 25, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14721, file: !3, line: 5179, column: 3)
!14727 = !DILocation(line: 5187, column: 23, scope: !14726)
!14728 = !DILocation(line: 5188, column: 3, scope: !14726)
!14729 = !DILocation(line: 5191, column: 14, scope: !14712)
!14730 = !DILocation(line: 5192, column: 10, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14712, file: !3, line: 5192, column: 10)
!14732 = !DILocation(line: 5192, column: 23, scope: !14731)
!14733 = !DILocation(line: 5192, column: 29, scope: !14731)
!14734 = !DILocation(line: 5192, column: 20, scope: !14731)
!14735 = !DILocation(line: 5192, column: 10, scope: !14712)
!14736 = !DILocation(line: 5193, column: 16, scope: !14731)
!14737 = !DILocation(line: 5193, column: 6, scope: !14731)
!14738 = !DILocation(line: 5195, column: 8, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14712, file: !3, line: 5195, column: 8)
!14740 = !DILocation(line: 5195, column: 23, scope: !14739)
!14741 = !DILocation(line: 5195, column: 20, scope: !14739)
!14742 = !DILocation(line: 5195, column: 8, scope: !14712)
!14743 = !DILocation(line: 5200, column: 31, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14739, file: !3, line: 5196, column: 3)
!14745 = !DILocation(line: 5200, column: 4, scope: !14744)
!14746 = !DILocation(line: 5201, column: 22, scope: !14744)
!14747 = !DILocation(line: 5202, column: 25, scope: !14744)
!14748 = !DILocation(line: 5203, column: 18, scope: !14744)
!14749 = !DILocation(line: 5204, column: 4, scope: !14744)
!14750 = distinct !{!14750, !14705, !14751}
!14751 = !DILocation(line: 5206, column: 2, scope: !14674)
!14752 = !DILocation(line: 5208, column: 7, scope: !14753)
!14753 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 5208, column: 7)
!14754 = !DILocation(line: 5208, column: 28, scope: !14753)
!14755 = !DILocation(line: 5208, column: 32, scope: !14753)
!14756 = !DILocation(line: 5208, column: 7, scope: !14674)
!14757 = !DILocation(line: 5217, column: 17, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14753, file: !3, line: 5209, column: 2)
!14759 = !DILocation(line: 5217, column: 15, scope: !14758)
!14760 = !DILocation(line: 5219, column: 3, scope: !14758)
!14761 = !DILocation(line: 5221, column: 25, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14758, file: !3, line: 5220, column: 3)
!14763 = !DILocation(line: 5221, column: 31, scope: !14762)
!14764 = !DILocation(line: 5221, column: 57, scope: !14762)
!14765 = !DILocation(line: 5221, column: 61, scope: !14762)
!14766 = !DILocation(line: 5221, column: 4, scope: !14762)
!14767 = !DILocation(line: 5221, column: 69, scope: !14762)
!14768 = !DILocation(line: 5224, column: 11, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14762, file: !3, line: 5224, column: 11)
!14770 = !DILocation(line: 5224, column: 26, scope: !14769)
!14771 = !DILocation(line: 5224, column: 32, scope: !14769)
!14772 = !DILocation(line: 5224, column: 23, scope: !14769)
!14773 = !DILocation(line: 5224, column: 11, scope: !14762)
!14774 = !DILocation(line: 5225, column: 19, scope: !14769)
!14775 = !DILocation(line: 5225, column: 7, scope: !14769)
!14776 = !DILocation(line: 5227, column: 3, scope: !14762)
!14777 = !DILocation(line: 5227, column: 12, scope: !14758)
!14778 = !DILocation(line: 5227, column: 27, scope: !14758)
!14779 = !DILocation(line: 5227, column: 24, scope: !14758)
!14780 = distinct !{!14780, !14760, !14781}
!14781 = !DILocation(line: 5227, column: 37, scope: !14758)
!14782 = !DILocation(line: 5229, column: 17, scope: !14758)
!14783 = !DILocation(line: 5230, column: 2, scope: !14758)
!14784 = !DILocation(line: 5232, column: 7, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 5232, column: 7)
!14786 = !DILocation(line: 5232, column: 7, scope: !14674)
!14787 = !DILocation(line: 5234, column: 3, scope: !14788)
!14788 = distinct !DILexicalBlock(scope: !14785, file: !3, line: 5233, column: 2)
!14789 = !DILocation(line: 5235, column: 3, scope: !14788)
!14790 = !DILocation(line: 5236, column: 3, scope: !14788)
!14791 = !DILocation(line: 5238, column: 3, scope: !14788)
!14792 = !DILocation(line: 5241, column: 15, scope: !14788)
!14793 = !DILocation(line: 5241, column: 43, scope: !14788)
!14794 = !DILocation(line: 5241, column: 33, scope: !14788)
!14795 = !DILocation(line: 5241, column: 54, scope: !14788)
!14796 = !DILocation(line: 5241, column: 27, scope: !14788)
!14797 = !DILocation(line: 5241, column: 3, scope: !14788)
!14798 = !DILocation(line: 5244, column: 15, scope: !14788)
!14799 = !DILocation(line: 5244, column: 21, scope: !14788)
!14800 = !DILocation(line: 5244, column: 36, scope: !14788)
!14801 = !DILocation(line: 5244, column: 55, scope: !14788)
!14802 = !DILocation(line: 5244, column: 13, scope: !14788)
!14803 = !DILocation(line: 5245, column: 18, scope: !14788)
!14804 = !DILocation(line: 5245, column: 36, scope: !14788)
!14805 = !DILocation(line: 5245, column: 31, scope: !14788)
!14806 = !DILocation(line: 5245, column: 3, scope: !14788)
!14807 = !DILocation(line: 5246, column: 18, scope: !14788)
!14808 = !DILocation(line: 5246, column: 37, scope: !14788)
!14809 = !DILocation(line: 5246, column: 47, scope: !14788)
!14810 = !DILocation(line: 5246, column: 31, scope: !14788)
!14811 = !DILocation(line: 5246, column: 3, scope: !14788)
!14812 = !DILocation(line: 5248, column: 3, scope: !14788)
!14813 = !DILocation(line: 5249, column: 3, scope: !14788)
!14814 = !DILocation(line: 5250, column: 3, scope: !14788)
!14815 = !DILocation(line: 5255, column: 18, scope: !14788)
!14816 = !DILocation(line: 5255, column: 3, scope: !14788)
!14817 = !DILocation(line: 5256, column: 18, scope: !14788)
!14818 = !DILocation(line: 5256, column: 49, scope: !14788)
!14819 = !DILocation(line: 5256, column: 36, scope: !14788)
!14820 = !DILocation(line: 5256, column: 60, scope: !14788)
!14821 = !DILocation(line: 5256, column: 30, scope: !14788)
!14822 = !DILocation(line: 5256, column: 3, scope: !14788)
!14823 = !DILocation(line: 5257, column: 15, scope: !14788)
!14824 = !DILocation(line: 5257, column: 3, scope: !14788)
!14825 = !DILocation(line: 5258, column: 8, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14788, file: !3, line: 5258, column: 8)
!14827 = !DILocation(line: 5258, column: 14, scope: !14826)
!14828 = !DILocation(line: 5258, column: 21, scope: !14826)
!14829 = !DILocation(line: 5258, column: 27, scope: !14826)
!14830 = !DILocation(line: 5258, column: 8, scope: !14788)
!14831 = !DILocation(line: 5259, column: 4, scope: !14826)
!14832 = !DILocation(line: 5261, column: 4, scope: !14826)
!14833 = !DILocation(line: 5262, column: 2, scope: !14788)
!14834 = !DILocation(line: 5266, column: 15, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14785, file: !3, line: 5264, column: 2)
!14836 = !DILocation(line: 5266, column: 43, scope: !14835)
!14837 = !DILocation(line: 5266, column: 33, scope: !14835)
!14838 = !DILocation(line: 5266, column: 54, scope: !14835)
!14839 = !DILocation(line: 5266, column: 27, scope: !14835)
!14840 = !DILocation(line: 5266, column: 3, scope: !14835)
!14841 = !DILocation(line: 5267, column: 14, scope: !14835)
!14842 = !DILocation(line: 5267, column: 3, scope: !14835)
!14843 = !DILocation(line: 5270, column: 1, scope: !14674)
!14844 = distinct !DISubprogram(name: "load_next_tx_holding_buffer", scope: !3, file: !3, line: 3898, type: !8190, scopeLine: 3899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14845 = !DILocation(line: 363, column: 74, scope: !14219, inlinedAt: !14846)
!14846 = distinct !DILocation(line: 3922, column: 41, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14848, file: !3, line: 3913, column: 31)
!14848 = distinct !DILexicalBlock(scope: !14849, file: !3, line: 3913, column: 7)
!14849 = distinct !DILexicalBlock(scope: !14850, file: !3, line: 3902, column: 32)
!14850 = distinct !DILexicalBlock(scope: !14844, file: !3, line: 3902, column: 7)
!14851 = !DILocalVariable(name: "info", arg: 1, scope: !14844, file: !3, line: 3898, type: !7524)
!14852 = !DILocation(line: 3898, column: 61, scope: !14844)
!14853 = !DILocalVariable(name: "ret", scope: !14844, file: !3, line: 3900, type: !771)
!14854 = !DILocation(line: 3900, column: 7, scope: !14844)
!14855 = !DILocation(line: 3902, column: 7, scope: !14850)
!14856 = !DILocation(line: 3902, column: 13, scope: !14850)
!14857 = !DILocation(line: 3902, column: 7, scope: !14844)
!14858 = !DILocalVariable(name: "ptx", scope: !14849, file: !3, line: 3906, type: !14859)
!14859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7616, size: 64)
!14860 = !DILocation(line: 3906, column: 29, scope: !14849)
!14861 = !DILocation(line: 3907, column: 5, scope: !14849)
!14862 = !DILocation(line: 3907, column: 11, scope: !14849)
!14863 = !DILocation(line: 3907, column: 30, scope: !14849)
!14864 = !DILocation(line: 3907, column: 36, scope: !14849)
!14865 = !DILocalVariable(name: "num_free", scope: !14849, file: !3, line: 3908, type: !32)
!14866 = !DILocation(line: 3908, column: 7, scope: !14849)
!14867 = !DILocation(line: 3908, column: 42, scope: !14849)
!14868 = !DILocation(line: 3908, column: 18, scope: !14849)
!14869 = !DILocalVariable(name: "num_needed", scope: !14849, file: !3, line: 3909, type: !32)
!14870 = !DILocation(line: 3909, column: 7, scope: !14849)
!14871 = !DILocation(line: 3909, column: 20, scope: !14849)
!14872 = !DILocation(line: 3909, column: 25, scope: !14849)
!14873 = !DILocation(line: 3909, column: 37, scope: !14849)
!14874 = !DILocation(line: 3910, column: 8, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14849, file: !3, line: 3910, column: 8)
!14876 = !DILocation(line: 3910, column: 13, scope: !14875)
!14877 = !DILocation(line: 3910, column: 25, scope: !14875)
!14878 = !DILocation(line: 3910, column: 8, scope: !14849)
!14879 = !DILocation(line: 3911, column: 4, scope: !14875)
!14880 = !DILocation(line: 3913, column: 7, scope: !14848)
!14881 = !DILocation(line: 3913, column: 21, scope: !14848)
!14882 = !DILocation(line: 3913, column: 18, scope: !14848)
!14883 = !DILocation(line: 3913, column: 7, scope: !14849)
!14884 = !DILocation(line: 3914, column: 21, scope: !14847)
!14885 = !DILocation(line: 3914, column: 26, scope: !14847)
!14886 = !DILocation(line: 3914, column: 4, scope: !14847)
!14887 = !DILocation(line: 3914, column: 10, scope: !14847)
!14888 = !DILocation(line: 3914, column: 19, scope: !14847)
!14889 = !DILocation(line: 3915, column: 28, scope: !14847)
!14890 = !DILocation(line: 3915, column: 33, scope: !14847)
!14891 = !DILocation(line: 3915, column: 38, scope: !14847)
!14892 = !DILocation(line: 3915, column: 45, scope: !14847)
!14893 = !DILocation(line: 3915, column: 50, scope: !14847)
!14894 = !DILocation(line: 3915, column: 4, scope: !14847)
!14895 = !DILocation(line: 3917, column: 6, scope: !14847)
!14896 = !DILocation(line: 3917, column: 12, scope: !14847)
!14897 = !DILocation(line: 3917, column: 4, scope: !14847)
!14898 = !DILocation(line: 3918, column: 11, scope: !14899)
!14899 = distinct !DILexicalBlock(scope: !14847, file: !3, line: 3918, column: 9)
!14900 = !DILocation(line: 3918, column: 17, scope: !14899)
!14901 = !DILocation(line: 3918, column: 9, scope: !14899)
!14902 = !DILocation(line: 3918, column: 41, scope: !14899)
!14903 = !DILocation(line: 3918, column: 47, scope: !14899)
!14904 = !DILocation(line: 3918, column: 38, scope: !14899)
!14905 = !DILocation(line: 3918, column: 9, scope: !14847)
!14906 = !DILocation(line: 3919, column: 5, scope: !14899)
!14907 = !DILocation(line: 3919, column: 11, scope: !14899)
!14908 = !DILocation(line: 3919, column: 31, scope: !14899)
!14909 = !DILocation(line: 3922, column: 15, scope: !14847)
!14910 = !DILocation(line: 3922, column: 21, scope: !14847)
!14911 = !DILocation(line: 3922, column: 31, scope: !14847)
!14912 = !DILocation(line: 365, column: 27, scope: !14362, inlinedAt: !14846)
!14913 = !DILocation(line: 365, column: 6, scope: !14362, inlinedAt: !14846)
!14914 = !DILocation(line: 365, column: 6, scope: !14219, inlinedAt: !14846)
!14915 = !DILocation(line: 366, column: 12, scope: !14366, inlinedAt: !14846)
!14916 = !DILocation(line: 366, column: 14, scope: !14366, inlinedAt: !14846)
!14917 = !DILocation(line: 366, column: 7, scope: !14367, inlinedAt: !14846)
!14918 = !DILocation(line: 367, column: 4, scope: !14366, inlinedAt: !14846)
!14919 = !DILocation(line: 368, column: 28, scope: !14367, inlinedAt: !14846)
!14920 = !DILocation(line: 368, column: 10, scope: !14367, inlinedAt: !14846)
!14921 = !DILocation(line: 368, column: 3, scope: !14367, inlinedAt: !14846)
!14922 = !DILocation(line: 370, column: 29, scope: !14375, inlinedAt: !14846)
!14923 = !DILocation(line: 370, column: 10, scope: !14375, inlinedAt: !14846)
!14924 = !DILocation(line: 370, column: 3, scope: !14375, inlinedAt: !14846)
!14925 = !DILocation(line: 372, column: 1, scope: !14219, inlinedAt: !14846)
!14926 = !DILocation(line: 3922, column: 39, scope: !14847)
!14927 = !DILocation(line: 3922, column: 4, scope: !14847)
!14928 = !DILocation(line: 3924, column: 8, scope: !14847)
!14929 = !DILocation(line: 3925, column: 3, scope: !14847)
!14930 = !DILocation(line: 3926, column: 2, scope: !14849)
!14931 = !DILocation(line: 3928, column: 9, scope: !14844)
!14932 = !DILocation(line: 3928, column: 2, scope: !14844)
!14933 = distinct !DISubprogram(name: "num_free_tx_dma_buffers", scope: !3, file: !3, line: 6216, type: !9631, scopeLine: 6217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14934 = !DILocalVariable(name: "info", arg: 1, scope: !14933, file: !3, line: 6216, type: !7524)
!14935 = !DILocation(line: 6216, column: 56, scope: !14933)
!14936 = !DILocation(line: 6218, column: 9, scope: !14933)
!14937 = !DILocation(line: 6218, column: 15, scope: !14933)
!14938 = !DILocation(line: 6218, column: 33, scope: !14933)
!14939 = !DILocation(line: 6218, column: 39, scope: !14933)
!14940 = !DILocation(line: 6218, column: 31, scope: !14933)
!14941 = !DILocation(line: 6218, column: 2, scope: !14933)
!14942 = distinct !DISubprogram(name: "mgsl_load_tx_dma_buffer", scope: !3, file: !3, line: 6665, type: !14943, scopeLine: 6667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14943 = !DISubroutineType(types: !14944)
!14944 = !{null, !7524, !292, !7}
!14945 = !DILocalVariable(name: "info", arg: 1, scope: !14942, file: !3, line: 6665, type: !7524)
!14946 = !DILocation(line: 6665, column: 57, scope: !14942)
!14947 = !DILocalVariable(name: "Buffer", arg: 2, scope: !14942, file: !3, line: 6666, type: !292)
!14948 = !DILocation(line: 6666, column: 15, scope: !14942)
!14949 = !DILocalVariable(name: "BufferSize", arg: 3, scope: !14942, file: !3, line: 6666, type: !7)
!14950 = !DILocation(line: 6666, column: 36, scope: !14942)
!14951 = !DILocalVariable(name: "Copycount", scope: !14942, file: !3, line: 6668, type: !476)
!14952 = !DILocation(line: 6668, column: 17, scope: !14942)
!14953 = !DILocalVariable(name: "i", scope: !14942, file: !3, line: 6669, type: !7)
!14954 = !DILocation(line: 6669, column: 15, scope: !14942)
!14955 = !DILocalVariable(name: "pBufEntry", scope: !14942, file: !3, line: 6670, type: !7588)
!14956 = !DILocation(line: 6670, column: 18, scope: !14942)
!14957 = !DILocation(line: 6672, column: 7, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14942, file: !3, line: 6672, column: 7)
!14959 = !DILocation(line: 6672, column: 19, scope: !14958)
!14960 = !DILocation(line: 6672, column: 7, scope: !14942)
!14961 = !DILocation(line: 6673, column: 20, scope: !14958)
!14962 = !DILocation(line: 6673, column: 25, scope: !14958)
!14963 = !DILocalVariable(name: "__UNIQUE_ID___x352", scope: !14964, file: !3, line: 6673, type: !32)
!14964 = distinct !DILexicalBlock(scope: !14958, file: !3, line: 6673, column: 33)
!14965 = !DILocation(line: 6673, column: 33, scope: !14964)
!14966 = !DILocalVariable(name: "__UNIQUE_ID___y353", scope: !14964, file: !3, line: 6673, type: !32)
!14967 = !DILocation(line: 6673, column: 3, scope: !14958)
!14968 = !DILocation(line: 6675, column: 6, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14942, file: !3, line: 6675, column: 6)
!14970 = !DILocation(line: 6675, column: 12, scope: !14969)
!14971 = !DILocation(line: 6675, column: 19, scope: !14969)
!14972 = !DILocation(line: 6675, column: 25, scope: !14969)
!14973 = !DILocation(line: 6675, column: 6, scope: !14942)
!14974 = !DILocation(line: 6679, column: 4, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14969, file: !3, line: 6675, column: 52)
!14976 = !DILocation(line: 6679, column: 10, scope: !14975)
!14977 = !DILocation(line: 6679, column: 20, scope: !14975)
!14978 = !DILocation(line: 6680, column: 2, scope: !14975)
!14979 = !DILocation(line: 6686, column: 6, scope: !14942)
!14980 = !DILocation(line: 6686, column: 12, scope: !14942)
!14981 = !DILocation(line: 6686, column: 4, scope: !14942)
!14982 = !DILocation(line: 6687, column: 30, scope: !14942)
!14983 = !DILocation(line: 6687, column: 2, scope: !14942)
!14984 = !DILocation(line: 6687, column: 8, scope: !14942)
!14985 = !DILocation(line: 6687, column: 28, scope: !14942)
!14986 = !DILocation(line: 6692, column: 35, scope: !14942)
!14987 = !DILocation(line: 6692, column: 41, scope: !14942)
!14988 = !DILocation(line: 6692, column: 51, scope: !14942)
!14989 = !DILocation(line: 6692, column: 2, scope: !14942)
!14990 = !DILocation(line: 6692, column: 8, scope: !14942)
!14991 = !DILocation(line: 6692, column: 23, scope: !14942)
!14992 = !DILocation(line: 6692, column: 26, scope: !14942)
!14993 = !DILocation(line: 6692, column: 33, scope: !14942)
!14994 = !DILocation(line: 6693, column: 35, scope: !14942)
!14995 = !DILocation(line: 6693, column: 2, scope: !14942)
!14996 = !DILocation(line: 6693, column: 8, scope: !14942)
!14997 = !DILocation(line: 6693, column: 23, scope: !14942)
!14998 = !DILocation(line: 6693, column: 26, scope: !14942)
!14999 = !DILocation(line: 6693, column: 33, scope: !14942)
!15000 = !DILocation(line: 6694, column: 35, scope: !14942)
!15001 = !DILocation(line: 6694, column: 2, scope: !14942)
!15002 = !DILocation(line: 6694, column: 8, scope: !14942)
!15003 = !DILocation(line: 6694, column: 23, scope: !14942)
!15004 = !DILocation(line: 6694, column: 26, scope: !14942)
!15005 = !DILocation(line: 6694, column: 33, scope: !14942)
!15006 = !DILocation(line: 6699, column: 2, scope: !14942)
!15007 = !DILocation(line: 6699, column: 9, scope: !14942)
!15008 = !DILocation(line: 6701, column: 16, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !14942, file: !3, line: 6699, column: 21)
!15010 = !DILocation(line: 6701, column: 22, scope: !15009)
!15011 = !DILocation(line: 6701, column: 38, scope: !15009)
!15012 = !DILocation(line: 6701, column: 13, scope: !15009)
!15013 = !DILocation(line: 6703, column: 8, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15009, file: !3, line: 6703, column: 8)
!15015 = !DILocation(line: 6703, column: 13, scope: !15014)
!15016 = !DILocation(line: 6703, column: 19, scope: !15014)
!15017 = !DILocation(line: 6703, column: 10, scope: !15014)
!15018 = !DILocation(line: 6703, column: 8, scope: !15009)
!15019 = !DILocation(line: 6704, column: 5, scope: !15014)
!15020 = !DILocation(line: 6704, column: 4, scope: !15014)
!15021 = !DILocation(line: 6708, column: 8, scope: !15022)
!15022 = distinct !DILexicalBlock(scope: !15009, file: !3, line: 6708, column: 8)
!15023 = !DILocation(line: 6708, column: 19, scope: !15022)
!15024 = !DILocation(line: 6708, column: 8, scope: !15009)
!15025 = !DILocation(line: 6709, column: 14, scope: !15022)
!15026 = !DILocation(line: 6709, column: 4, scope: !15022)
!15027 = !DILocation(line: 6711, column: 16, scope: !15022)
!15028 = !DILocation(line: 6711, column: 14, scope: !15022)
!15029 = !DILocation(line: 6715, column: 24, scope: !15009)
!15030 = !DILocation(line: 6715, column: 35, scope: !15009)
!15031 = !DILocation(line: 6715, column: 46, scope: !15009)
!15032 = !DILocation(line: 6715, column: 53, scope: !15009)
!15033 = !DILocation(line: 6715, column: 3, scope: !15009)
!15034 = !DILocation(line: 6717, column: 22, scope: !15009)
!15035 = !DILocation(line: 6717, column: 3, scope: !15009)
!15036 = !DILocation(line: 6717, column: 14, scope: !15009)
!15037 = !DILocation(line: 6717, column: 20, scope: !15009)
!15038 = !DILocation(line: 6720, column: 13, scope: !15009)
!15039 = !DILocation(line: 6720, column: 10, scope: !15009)
!15040 = !DILocation(line: 6721, column: 17, scope: !15009)
!15041 = !DILocation(line: 6721, column: 14, scope: !15009)
!15042 = !DILocation(line: 6723, column: 5, scope: !15009)
!15043 = !DILocation(line: 6723, column: 11, scope: !15009)
!15044 = !DILocation(line: 6723, column: 3, scope: !15009)
!15045 = distinct !{!15045, !15006, !15046}
!15046 = !DILocation(line: 6724, column: 2, scope: !14942)
!15047 = !DILocation(line: 6727, column: 28, scope: !14942)
!15048 = !DILocation(line: 6727, column: 2, scope: !14942)
!15049 = !DILocation(line: 6727, column: 8, scope: !14942)
!15050 = !DILocation(line: 6727, column: 26, scope: !14942)
!15051 = !DILocation(line: 6729, column: 1, scope: !14942)
!15052 = distinct !DISubprogram(name: "mgsl_load_pci_memory", scope: !3, file: !3, line: 7259, type: !15053, scopeLine: 7261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15053 = !DISubroutineType(types: !15054)
!15054 = !{null, !1038, !292, !476}
!15055 = !DILocalVariable(name: "TargetPtr", arg: 1, scope: !15052, file: !3, line: 7259, type: !1038)
!15056 = !DILocation(line: 7259, column: 41, scope: !15052)
!15057 = !DILocalVariable(name: "SourcePtr", arg: 2, scope: !15052, file: !3, line: 7259, type: !292)
!15058 = !DILocation(line: 7259, column: 64, scope: !15052)
!15059 = !DILocalVariable(name: "count", arg: 3, scope: !15052, file: !3, line: 7260, type: !476)
!15060 = !DILocation(line: 7260, column: 17, scope: !15052)
!15061 = !DILocalVariable(name: "Intervalcount", scope: !15052, file: !3, line: 7265, type: !476)
!15062 = !DILocation(line: 7265, column: 17, scope: !15052)
!15063 = !DILocation(line: 7265, column: 33, scope: !15052)
!15064 = !DILocation(line: 7265, column: 39, scope: !15052)
!15065 = !DILocalVariable(name: "Index", scope: !15052, file: !3, line: 7266, type: !476)
!15066 = !DILocation(line: 7266, column: 17, scope: !15052)
!15067 = !DILocalVariable(name: "Dummy", scope: !15052, file: !3, line: 7267, type: !312)
!15068 = !DILocation(line: 7267, column: 16, scope: !15052)
!15069 = !DILocation(line: 7269, column: 14, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15052, file: !3, line: 7269, column: 2)
!15071 = !DILocation(line: 7269, column: 8, scope: !15070)
!15072 = !DILocation(line: 7269, column: 20, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15070, file: !3, line: 7269, column: 2)
!15074 = !DILocation(line: 7269, column: 28, scope: !15073)
!15075 = !DILocation(line: 7269, column: 26, scope: !15073)
!15076 = !DILocation(line: 7269, column: 2, scope: !15070)
!15077 = !DILocation(line: 7271, column: 10, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15073, file: !3, line: 7270, column: 2)
!15079 = !DILocation(line: 7271, column: 21, scope: !15078)
!15080 = !DILocation(line: 7271, column: 3, scope: !15078)
!15081 = !DILocation(line: 7272, column: 39, scope: !15078)
!15082 = !DILocation(line: 7272, column: 11, scope: !15078)
!15083 = !DILocation(line: 7272, column: 9, scope: !15078)
!15084 = !DILocation(line: 7273, column: 13, scope: !15078)
!15085 = !DILocation(line: 7274, column: 13, scope: !15078)
!15086 = !DILocation(line: 7275, column: 2, scope: !15078)
!15087 = !DILocation(line: 7269, column: 49, scope: !15073)
!15088 = !DILocation(line: 7269, column: 2, scope: !15073)
!15089 = distinct !{!15089, !15076, !15090}
!15090 = !DILocation(line: 7275, column: 2, scope: !15070)
!15091 = !DILocation(line: 7277, column: 10, scope: !15052)
!15092 = !DILocation(line: 7277, column: 21, scope: !15052)
!15093 = !DILocation(line: 7277, column: 32, scope: !15052)
!15094 = !DILocation(line: 7277, column: 38, scope: !15052)
!15095 = !DILocation(line: 7277, column: 2, scope: !15052)
!15096 = !DILocation(line: 7279, column: 1, scope: !15052)
!15097 = distinct !DISubprogram(name: "queue_work", scope: !2765, file: !2765, line: 504, type: !15098, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15098 = !DISubroutineType(types: !15099)
!15099 = !{!771, !6083, !2774}
!15100 = !DILocalVariable(name: "wq", arg: 1, scope: !15097, file: !2765, line: 504, type: !6083)
!15101 = !DILocation(line: 504, column: 56, scope: !15097)
!15102 = !DILocalVariable(name: "work", arg: 2, scope: !15097, file: !2765, line: 505, type: !2774)
!15103 = !DILocation(line: 505, column: 30, scope: !15097)
!15104 = !DILocation(line: 507, column: 41, scope: !15097)
!15105 = !DILocation(line: 507, column: 45, scope: !15097)
!15106 = !DILocation(line: 507, column: 9, scope: !15097)
!15107 = !DILocation(line: 507, column: 2, scope: !15097)
!15108 = distinct !DISubprogram(name: "mgsl_alloc_buffer_list_memory", scope: !3, file: !3, line: 3617, type: !9631, scopeLine: 3618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15109 = !DILocalVariable(name: "info", arg: 1, scope: !15108, file: !3, line: 3617, type: !7524)
!15110 = !DILocation(line: 3617, column: 63, scope: !15108)
!15111 = !DILocalVariable(name: "i", scope: !15108, file: !3, line: 3619, type: !7)
!15112 = !DILocation(line: 3619, column: 15, scope: !15108)
!15113 = !DILocation(line: 3622, column: 22, scope: !15108)
!15114 = !DILocation(line: 3622, column: 28, scope: !15108)
!15115 = !DILocation(line: 3622, column: 42, scope: !15108)
!15116 = !DILocation(line: 3622, column: 48, scope: !15108)
!15117 = !DILocation(line: 3622, column: 40, scope: !15108)
!15118 = !DILocation(line: 3622, column: 2, scope: !15108)
!15119 = !DILocation(line: 3622, column: 8, scope: !15108)
!15120 = !DILocation(line: 3622, column: 20, scope: !15108)
!15121 = !DILocation(line: 3623, column: 27, scope: !15108)
!15122 = !DILocation(line: 3623, column: 33, scope: !15108)
!15123 = !DILocation(line: 3623, column: 2, scope: !15108)
!15124 = !DILocation(line: 3623, column: 8, scope: !15108)
!15125 = !DILocation(line: 3623, column: 25, scope: !15108)
!15126 = !DILocation(line: 3624, column: 2, scope: !15108)
!15127 = !DILocation(line: 3624, column: 8, scope: !15108)
!15128 = !DILocation(line: 3624, column: 23, scope: !15108)
!15129 = !DILocation(line: 3628, column: 10, scope: !15108)
!15130 = !DILocation(line: 3628, column: 16, scope: !15108)
!15131 = !DILocation(line: 3628, column: 2, scope: !15108)
!15132 = !DILocation(line: 3633, column: 43, scope: !15108)
!15133 = !DILocation(line: 3633, column: 49, scope: !15108)
!15134 = !DILocation(line: 3633, column: 25, scope: !15108)
!15135 = !DILocation(line: 3633, column: 2, scope: !15108)
!15136 = !DILocation(line: 3633, column: 8, scope: !15108)
!15137 = !DILocation(line: 3633, column: 23, scope: !15108)
!15138 = !DILocation(line: 3634, column: 43, scope: !15108)
!15139 = !DILocation(line: 3634, column: 49, scope: !15108)
!15140 = !DILocation(line: 3634, column: 25, scope: !15108)
!15141 = !DILocation(line: 3634, column: 2, scope: !15108)
!15142 = !DILocation(line: 3634, column: 8, scope: !15108)
!15143 = !DILocation(line: 3634, column: 23, scope: !15108)
!15144 = !DILocation(line: 3635, column: 26, scope: !15108)
!15145 = !DILocation(line: 3635, column: 32, scope: !15108)
!15146 = !DILocation(line: 3635, column: 2, scope: !15108)
!15147 = !DILocation(line: 3635, column: 8, scope: !15108)
!15148 = !DILocation(line: 3635, column: 23, scope: !15108)
!15149 = !DILocation(line: 3646, column: 10, scope: !15150)
!15150 = distinct !DILexicalBlock(scope: !15108, file: !3, line: 3646, column: 2)
!15151 = !DILocation(line: 3646, column: 8, scope: !15150)
!15152 = !DILocation(line: 3646, column: 15, scope: !15153)
!15153 = distinct !DILexicalBlock(scope: !15150, file: !3, line: 3646, column: 2)
!15154 = !DILocation(line: 3646, column: 19, scope: !15153)
!15155 = !DILocation(line: 3646, column: 25, scope: !15153)
!15156 = !DILocation(line: 3646, column: 17, scope: !15153)
!15157 = !DILocation(line: 3646, column: 2, scope: !15150)
!15158 = !DILocation(line: 3649, column: 4, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15153, file: !3, line: 3646, column: 48)
!15160 = !DILocation(line: 3649, column: 10, scope: !15159)
!15161 = !DILocation(line: 3649, column: 30, scope: !15159)
!15162 = !DILocation(line: 3649, column: 32, scope: !15159)
!15163 = !DILocation(line: 3649, column: 27, scope: !15159)
!15164 = !DILocation(line: 3648, column: 3, scope: !15159)
!15165 = !DILocation(line: 3648, column: 9, scope: !15159)
!15166 = !DILocation(line: 3648, column: 24, scope: !15159)
!15167 = !DILocation(line: 3648, column: 27, scope: !15159)
!15168 = !DILocation(line: 3648, column: 38, scope: !15159)
!15169 = !DILocation(line: 3654, column: 34, scope: !15159)
!15170 = !DILocation(line: 3654, column: 40, scope: !15159)
!15171 = !DILocation(line: 3654, column: 3, scope: !15159)
!15172 = !DILocation(line: 3654, column: 9, scope: !15159)
!15173 = !DILocation(line: 3654, column: 24, scope: !15159)
!15174 = !DILocation(line: 3654, column: 27, scope: !15159)
!15175 = !DILocation(line: 3654, column: 32, scope: !15159)
!15176 = !DILocation(line: 3656, column: 8, scope: !15177)
!15177 = distinct !DILexicalBlock(scope: !15159, file: !3, line: 3656, column: 8)
!15178 = !DILocation(line: 3656, column: 12, scope: !15177)
!15179 = !DILocation(line: 3656, column: 18, scope: !15177)
!15180 = !DILocation(line: 3656, column: 34, scope: !15177)
!15181 = !DILocation(line: 3656, column: 10, scope: !15177)
!15182 = !DILocation(line: 3656, column: 8, scope: !15159)
!15183 = !DILocation(line: 3657, column: 37, scope: !15177)
!15184 = !DILocation(line: 3657, column: 39, scope: !15177)
!15185 = !DILocation(line: 3657, column: 36, scope: !15177)
!15186 = !DILocation(line: 3657, column: 44, scope: !15177)
!15187 = !DILocation(line: 3657, column: 4, scope: !15177)
!15188 = !DILocation(line: 3657, column: 10, scope: !15177)
!15189 = !DILocation(line: 3657, column: 25, scope: !15177)
!15190 = !DILocation(line: 3657, column: 28, scope: !15177)
!15191 = !DILocation(line: 3657, column: 33, scope: !15177)
!15192 = !DILocation(line: 3658, column: 2, scope: !15159)
!15193 = !DILocation(line: 3646, column: 43, scope: !15153)
!15194 = !DILocation(line: 3646, column: 2, scope: !15153)
!15195 = distinct !{!15195, !15157, !15196}
!15196 = !DILocation(line: 3658, column: 2, scope: !15150)
!15197 = !DILocation(line: 3660, column: 10, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15108, file: !3, line: 3660, column: 2)
!15199 = !DILocation(line: 3660, column: 8, scope: !15198)
!15200 = !DILocation(line: 3660, column: 15, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !15198, file: !3, line: 3660, column: 2)
!15202 = !DILocation(line: 3660, column: 19, scope: !15201)
!15203 = !DILocation(line: 3660, column: 25, scope: !15201)
!15204 = !DILocation(line: 3660, column: 17, scope: !15201)
!15205 = !DILocation(line: 3660, column: 2, scope: !15198)
!15206 = !DILocation(line: 3662, column: 40, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15201, file: !3, line: 3660, column: 48)
!15208 = !DILocation(line: 3662, column: 46, scope: !15207)
!15209 = !DILocation(line: 3663, column: 6, scope: !15207)
!15210 = !DILocation(line: 3663, column: 12, scope: !15207)
!15211 = !DILocation(line: 3663, column: 30, scope: !15207)
!15212 = !DILocation(line: 3663, column: 28, scope: !15207)
!15213 = !DILocation(line: 3663, column: 5, scope: !15207)
!15214 = !DILocation(line: 3663, column: 33, scope: !15207)
!15215 = !DILocation(line: 3662, column: 63, scope: !15207)
!15216 = !DILocation(line: 3662, column: 3, scope: !15207)
!15217 = !DILocation(line: 3662, column: 9, scope: !15207)
!15218 = !DILocation(line: 3662, column: 24, scope: !15207)
!15219 = !DILocation(line: 3662, column: 27, scope: !15207)
!15220 = !DILocation(line: 3662, column: 38, scope: !15207)
!15221 = !DILocation(line: 3668, column: 34, scope: !15207)
!15222 = !DILocation(line: 3668, column: 40, scope: !15207)
!15223 = !DILocation(line: 3669, column: 4, scope: !15207)
!15224 = !DILocation(line: 3669, column: 10, scope: !15207)
!15225 = !DILocation(line: 3669, column: 26, scope: !15207)
!15226 = !DILocation(line: 3668, column: 57, scope: !15207)
!15227 = !DILocation(line: 3668, column: 3, scope: !15207)
!15228 = !DILocation(line: 3668, column: 9, scope: !15207)
!15229 = !DILocation(line: 3668, column: 24, scope: !15207)
!15230 = !DILocation(line: 3668, column: 27, scope: !15207)
!15231 = !DILocation(line: 3668, column: 32, scope: !15207)
!15232 = !DILocation(line: 3671, column: 8, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 3671, column: 8)
!15234 = !DILocation(line: 3671, column: 12, scope: !15233)
!15235 = !DILocation(line: 3671, column: 18, scope: !15233)
!15236 = !DILocation(line: 3671, column: 34, scope: !15233)
!15237 = !DILocation(line: 3671, column: 10, scope: !15233)
!15238 = !DILocation(line: 3671, column: 8, scope: !15207)
!15239 = !DILocation(line: 3672, column: 37, scope: !15233)
!15240 = !DILocation(line: 3672, column: 39, scope: !15233)
!15241 = !DILocation(line: 3672, column: 36, scope: !15233)
!15242 = !DILocation(line: 3672, column: 44, scope: !15233)
!15243 = !DILocation(line: 3672, column: 4, scope: !15233)
!15244 = !DILocation(line: 3672, column: 10, scope: !15233)
!15245 = !DILocation(line: 3672, column: 25, scope: !15233)
!15246 = !DILocation(line: 3672, column: 28, scope: !15233)
!15247 = !DILocation(line: 3672, column: 33, scope: !15233)
!15248 = !DILocation(line: 3673, column: 2, scope: !15207)
!15249 = !DILocation(line: 3660, column: 43, scope: !15201)
!15250 = !DILocation(line: 3660, column: 2, scope: !15201)
!15251 = distinct !{!15251, !15205, !15252}
!15252 = !DILocation(line: 3673, column: 2, scope: !15198)
!15253 = !DILocation(line: 3675, column: 2, scope: !15108)
!15254 = distinct !DISubprogram(name: "mgsl_alloc_frame_memory", scope: !3, file: !3, line: 3712, type: !15255, scopeLine: 3713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15255 = !DISubroutineType(types: !15256)
!15256 = !{!32, !7524, !7588, !32}
!15257 = !DILocalVariable(name: "info", arg: 1, scope: !15254, file: !3, line: 3712, type: !7524)
!15258 = !DILocation(line: 3712, column: 56, scope: !15254)
!15259 = !DILocalVariable(name: "BufferList", arg: 2, scope: !15254, file: !3, line: 3712, type: !7588)
!15260 = !DILocation(line: 3712, column: 77, scope: !15254)
!15261 = !DILocalVariable(name: "Buffercount", arg: 3, scope: !15254, file: !3, line: 3712, type: !32)
!15262 = !DILocation(line: 3712, column: 92, scope: !15254)
!15263 = !DILocalVariable(name: "i", scope: !15254, file: !3, line: 3714, type: !32)
!15264 = !DILocation(line: 3714, column: 6, scope: !15254)
!15265 = !DILocation(line: 3718, column: 10, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15254, file: !3, line: 3718, column: 2)
!15267 = !DILocation(line: 3718, column: 8, scope: !15266)
!15268 = !DILocation(line: 3718, column: 15, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15266, file: !3, line: 3718, column: 2)
!15270 = !DILocation(line: 3718, column: 19, scope: !15269)
!15271 = !DILocation(line: 3718, column: 17, scope: !15269)
!15272 = !DILocation(line: 3718, column: 2, scope: !15266)
!15273 = !DILocation(line: 3719, column: 29, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15269, file: !3, line: 3718, column: 38)
!15275 = !DILocation(line: 3719, column: 35, scope: !15274)
!15276 = !DILocation(line: 3719, column: 49, scope: !15274)
!15277 = !DILocation(line: 3719, column: 55, scope: !15274)
!15278 = !DILocation(line: 3719, column: 47, scope: !15274)
!15279 = !DILocation(line: 3719, column: 3, scope: !15274)
!15280 = !DILocation(line: 3719, column: 14, scope: !15274)
!15281 = !DILocation(line: 3719, column: 17, scope: !15274)
!15282 = !DILocation(line: 3719, column: 27, scope: !15274)
!15283 = !DILocation(line: 3720, column: 29, scope: !15274)
!15284 = !DILocation(line: 3720, column: 35, scope: !15274)
!15285 = !DILocation(line: 3720, column: 3, scope: !15274)
!15286 = !DILocation(line: 3720, column: 14, scope: !15274)
!15287 = !DILocation(line: 3720, column: 17, scope: !15274)
!15288 = !DILocation(line: 3720, column: 27, scope: !15274)
!15289 = !DILocation(line: 3721, column: 3, scope: !15274)
!15290 = !DILocation(line: 3721, column: 9, scope: !15274)
!15291 = !DILocation(line: 3721, column: 24, scope: !15274)
!15292 = !DILocation(line: 3722, column: 2, scope: !15274)
!15293 = !DILocation(line: 3718, column: 33, scope: !15269)
!15294 = !DILocation(line: 3718, column: 2, scope: !15269)
!15295 = distinct !{!15295, !15272, !15296}
!15296 = !DILocation(line: 3722, column: 2, scope: !15266)
!15297 = !DILocation(line: 3724, column: 2, scope: !15254)
!15298 = distinct !DISubprogram(name: "mgsl_alloc_intermediate_rxbuffer_memory", scope: !3, file: !3, line: 3784, type: !9631, scopeLine: 3785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15299 = !DILocation(line: 445, column: 72, scope: !8879, inlinedAt: !15300)
!15300 = distinct !DILocation(line: 552, column: 10, scope: !8884, inlinedAt: !15301)
!15301 = distinct !DILocation(line: 3786, column: 32, scope: !15298)
!15302 = !DILocation(line: 446, column: 9, scope: !8879, inlinedAt: !15300)
!15303 = !DILocation(line: 446, column: 23, scope: !8879, inlinedAt: !15300)
!15304 = !DILocation(line: 448, column: 8, scope: !8879, inlinedAt: !15300)
!15305 = !DILocation(line: 318, column: 67, scope: !8895, inlinedAt: !15306)
!15306 = distinct !DILocation(line: 553, column: 20, scope: !8884, inlinedAt: !15301)
!15307 = !DILocation(line: 346, column: 58, scope: !8901, inlinedAt: !15308)
!15308 = distinct !DILocation(line: 547, column: 11, scope: !8884, inlinedAt: !15301)
!15309 = !DILocation(line: 472, column: 28, scope: !8907, inlinedAt: !15310)
!15310 = distinct !DILocation(line: 481, column: 9, scope: !8912, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 545, column: 11, scope: !8914, inlinedAt: !15301)
!15312 = !DILocation(line: 472, column: 40, scope: !8907, inlinedAt: !15310)
!15313 = !DILocation(line: 472, column: 60, scope: !8907, inlinedAt: !15310)
!15314 = !DILocation(line: 478, column: 51, scope: !8912, inlinedAt: !15311)
!15315 = !DILocation(line: 478, column: 63, scope: !8912, inlinedAt: !15311)
!15316 = !DILocation(line: 480, column: 15, scope: !8912, inlinedAt: !15311)
!15317 = !DILocation(line: 538, column: 45, scope: !8886, inlinedAt: !15301)
!15318 = !DILocation(line: 538, column: 57, scope: !8886, inlinedAt: !15301)
!15319 = !DILocation(line: 542, column: 16, scope: !8884, inlinedAt: !15301)
!15320 = !DILocalVariable(name: "info", arg: 1, scope: !15298, file: !3, line: 3784, type: !7524)
!15321 = !DILocation(line: 3784, column: 72, scope: !15298)
!15322 = !DILocation(line: 3786, column: 40, scope: !15298)
!15323 = !DILocation(line: 3786, column: 46, scope: !15298)
!15324 = !DILocation(line: 540, column: 27, scope: !8885, inlinedAt: !15301)
!15325 = !DILocation(line: 540, column: 6, scope: !8885, inlinedAt: !15301)
!15326 = !DILocation(line: 540, column: 6, scope: !8886, inlinedAt: !15301)
!15327 = !DILocation(line: 544, column: 7, scope: !8914, inlinedAt: !15301)
!15328 = !DILocation(line: 544, column: 12, scope: !8914, inlinedAt: !15301)
!15329 = !DILocation(line: 544, column: 7, scope: !8884, inlinedAt: !15301)
!15330 = !DILocation(line: 545, column: 25, scope: !8914, inlinedAt: !15301)
!15331 = !DILocation(line: 545, column: 31, scope: !8914, inlinedAt: !15301)
!15332 = !DILocation(line: 480, column: 33, scope: !8912, inlinedAt: !15311)
!15333 = !DILocation(line: 480, column: 23, scope: !8912, inlinedAt: !15311)
!15334 = !DILocation(line: 481, column: 29, scope: !8912, inlinedAt: !15311)
!15335 = !DILocation(line: 481, column: 35, scope: !8912, inlinedAt: !15311)
!15336 = !DILocation(line: 481, column: 42, scope: !8912, inlinedAt: !15311)
!15337 = !DILocation(line: 474, column: 23, scope: !8907, inlinedAt: !15310)
!15338 = !DILocation(line: 474, column: 29, scope: !8907, inlinedAt: !15310)
!15339 = !DILocation(line: 474, column: 36, scope: !8907, inlinedAt: !15310)
!15340 = !DILocation(line: 474, column: 9, scope: !8907, inlinedAt: !15310)
!15341 = !DILocation(line: 545, column: 4, scope: !8914, inlinedAt: !15301)
!15342 = !DILocation(line: 547, column: 25, scope: !8884, inlinedAt: !15301)
!15343 = !DILocation(line: 348, column: 7, scope: !8958, inlinedAt: !15308)
!15344 = !DILocation(line: 348, column: 6, scope: !8901, inlinedAt: !15308)
!15345 = !DILocation(line: 349, column: 3, scope: !8958, inlinedAt: !15308)
!15346 = !DILocation(line: 351, column: 6, scope: !8962, inlinedAt: !15308)
!15347 = !DILocation(line: 351, column: 11, scope: !8962, inlinedAt: !15308)
!15348 = !DILocation(line: 351, column: 6, scope: !8901, inlinedAt: !15308)
!15349 = !DILocation(line: 352, column: 3, scope: !8962, inlinedAt: !15308)
!15350 = !DILocation(line: 354, column: 32, scope: !8967, inlinedAt: !15308)
!15351 = !DILocation(line: 354, column: 37, scope: !8967, inlinedAt: !15308)
!15352 = !DILocation(line: 354, column: 42, scope: !8967, inlinedAt: !15308)
!15353 = !DILocation(line: 354, column: 45, scope: !8967, inlinedAt: !15308)
!15354 = !DILocation(line: 354, column: 50, scope: !8967, inlinedAt: !15308)
!15355 = !DILocation(line: 354, column: 6, scope: !8901, inlinedAt: !15308)
!15356 = !DILocation(line: 355, column: 3, scope: !8967, inlinedAt: !15308)
!15357 = !DILocation(line: 356, column: 32, scope: !8975, inlinedAt: !15308)
!15358 = !DILocation(line: 356, column: 37, scope: !8975, inlinedAt: !15308)
!15359 = !DILocation(line: 356, column: 43, scope: !8975, inlinedAt: !15308)
!15360 = !DILocation(line: 356, column: 46, scope: !8975, inlinedAt: !15308)
!15361 = !DILocation(line: 356, column: 51, scope: !8975, inlinedAt: !15308)
!15362 = !DILocation(line: 356, column: 6, scope: !8901, inlinedAt: !15308)
!15363 = !DILocation(line: 357, column: 3, scope: !8975, inlinedAt: !15308)
!15364 = !DILocation(line: 358, column: 6, scope: !8983, inlinedAt: !15308)
!15365 = !DILocation(line: 358, column: 11, scope: !8983, inlinedAt: !15308)
!15366 = !DILocation(line: 358, column: 6, scope: !8901, inlinedAt: !15308)
!15367 = !DILocation(line: 358, column: 26, scope: !8983, inlinedAt: !15308)
!15368 = !DILocation(line: 359, column: 6, scope: !8988, inlinedAt: !15308)
!15369 = !DILocation(line: 359, column: 11, scope: !8988, inlinedAt: !15308)
!15370 = !DILocation(line: 359, column: 6, scope: !8901, inlinedAt: !15308)
!15371 = !DILocation(line: 359, column: 26, scope: !8988, inlinedAt: !15308)
!15372 = !DILocation(line: 360, column: 6, scope: !8993, inlinedAt: !15308)
!15373 = !DILocation(line: 360, column: 11, scope: !8993, inlinedAt: !15308)
!15374 = !DILocation(line: 360, column: 6, scope: !8901, inlinedAt: !15308)
!15375 = !DILocation(line: 360, column: 26, scope: !8993, inlinedAt: !15308)
!15376 = !DILocation(line: 361, column: 6, scope: !8998, inlinedAt: !15308)
!15377 = !DILocation(line: 361, column: 11, scope: !8998, inlinedAt: !15308)
!15378 = !DILocation(line: 361, column: 6, scope: !8901, inlinedAt: !15308)
!15379 = !DILocation(line: 361, column: 26, scope: !8998, inlinedAt: !15308)
!15380 = !DILocation(line: 362, column: 6, scope: !9003, inlinedAt: !15308)
!15381 = !DILocation(line: 362, column: 11, scope: !9003, inlinedAt: !15308)
!15382 = !DILocation(line: 362, column: 6, scope: !8901, inlinedAt: !15308)
!15383 = !DILocation(line: 362, column: 26, scope: !9003, inlinedAt: !15308)
!15384 = !DILocation(line: 363, column: 6, scope: !9008, inlinedAt: !15308)
!15385 = !DILocation(line: 363, column: 11, scope: !9008, inlinedAt: !15308)
!15386 = !DILocation(line: 363, column: 6, scope: !8901, inlinedAt: !15308)
!15387 = !DILocation(line: 363, column: 26, scope: !9008, inlinedAt: !15308)
!15388 = !DILocation(line: 364, column: 6, scope: !9013, inlinedAt: !15308)
!15389 = !DILocation(line: 364, column: 11, scope: !9013, inlinedAt: !15308)
!15390 = !DILocation(line: 364, column: 6, scope: !8901, inlinedAt: !15308)
!15391 = !DILocation(line: 364, column: 26, scope: !9013, inlinedAt: !15308)
!15392 = !DILocation(line: 365, column: 6, scope: !9018, inlinedAt: !15308)
!15393 = !DILocation(line: 365, column: 11, scope: !9018, inlinedAt: !15308)
!15394 = !DILocation(line: 365, column: 6, scope: !8901, inlinedAt: !15308)
!15395 = !DILocation(line: 365, column: 26, scope: !9018, inlinedAt: !15308)
!15396 = !DILocation(line: 366, column: 6, scope: !9023, inlinedAt: !15308)
!15397 = !DILocation(line: 366, column: 11, scope: !9023, inlinedAt: !15308)
!15398 = !DILocation(line: 366, column: 6, scope: !8901, inlinedAt: !15308)
!15399 = !DILocation(line: 366, column: 26, scope: !9023, inlinedAt: !15308)
!15400 = !DILocation(line: 367, column: 6, scope: !9028, inlinedAt: !15308)
!15401 = !DILocation(line: 367, column: 11, scope: !9028, inlinedAt: !15308)
!15402 = !DILocation(line: 367, column: 6, scope: !8901, inlinedAt: !15308)
!15403 = !DILocation(line: 367, column: 26, scope: !9028, inlinedAt: !15308)
!15404 = !DILocation(line: 368, column: 6, scope: !9033, inlinedAt: !15308)
!15405 = !DILocation(line: 368, column: 11, scope: !9033, inlinedAt: !15308)
!15406 = !DILocation(line: 368, column: 6, scope: !8901, inlinedAt: !15308)
!15407 = !DILocation(line: 368, column: 26, scope: !9033, inlinedAt: !15308)
!15408 = !DILocation(line: 369, column: 6, scope: !9038, inlinedAt: !15308)
!15409 = !DILocation(line: 369, column: 11, scope: !9038, inlinedAt: !15308)
!15410 = !DILocation(line: 369, column: 6, scope: !8901, inlinedAt: !15308)
!15411 = !DILocation(line: 369, column: 26, scope: !9038, inlinedAt: !15308)
!15412 = !DILocation(line: 370, column: 6, scope: !9043, inlinedAt: !15308)
!15413 = !DILocation(line: 370, column: 11, scope: !9043, inlinedAt: !15308)
!15414 = !DILocation(line: 370, column: 6, scope: !8901, inlinedAt: !15308)
!15415 = !DILocation(line: 370, column: 26, scope: !9043, inlinedAt: !15308)
!15416 = !DILocation(line: 371, column: 6, scope: !9048, inlinedAt: !15308)
!15417 = !DILocation(line: 371, column: 11, scope: !9048, inlinedAt: !15308)
!15418 = !DILocation(line: 371, column: 6, scope: !8901, inlinedAt: !15308)
!15419 = !DILocation(line: 371, column: 26, scope: !9048, inlinedAt: !15308)
!15420 = !DILocation(line: 372, column: 6, scope: !9053, inlinedAt: !15308)
!15421 = !DILocation(line: 372, column: 11, scope: !9053, inlinedAt: !15308)
!15422 = !DILocation(line: 372, column: 6, scope: !8901, inlinedAt: !15308)
!15423 = !DILocation(line: 372, column: 26, scope: !9053, inlinedAt: !15308)
!15424 = !DILocation(line: 373, column: 6, scope: !9058, inlinedAt: !15308)
!15425 = !DILocation(line: 373, column: 11, scope: !9058, inlinedAt: !15308)
!15426 = !DILocation(line: 373, column: 6, scope: !8901, inlinedAt: !15308)
!15427 = !DILocation(line: 373, column: 26, scope: !9058, inlinedAt: !15308)
!15428 = !DILocation(line: 374, column: 6, scope: !9063, inlinedAt: !15308)
!15429 = !DILocation(line: 374, column: 11, scope: !9063, inlinedAt: !15308)
!15430 = !DILocation(line: 374, column: 6, scope: !8901, inlinedAt: !15308)
!15431 = !DILocation(line: 374, column: 26, scope: !9063, inlinedAt: !15308)
!15432 = !DILocation(line: 375, column: 6, scope: !9068, inlinedAt: !15308)
!15433 = !DILocation(line: 375, column: 11, scope: !9068, inlinedAt: !15308)
!15434 = !DILocation(line: 375, column: 6, scope: !8901, inlinedAt: !15308)
!15435 = !DILocation(line: 375, column: 27, scope: !9068, inlinedAt: !15308)
!15436 = !DILocation(line: 376, column: 6, scope: !9073, inlinedAt: !15308)
!15437 = !DILocation(line: 376, column: 11, scope: !9073, inlinedAt: !15308)
!15438 = !DILocation(line: 376, column: 6, scope: !8901, inlinedAt: !15308)
!15439 = !DILocation(line: 376, column: 32, scope: !9073, inlinedAt: !15308)
!15440 = !DILocation(line: 377, column: 6, scope: !9078, inlinedAt: !15308)
!15441 = !DILocation(line: 377, column: 11, scope: !9078, inlinedAt: !15308)
!15442 = !DILocation(line: 377, column: 6, scope: !8901, inlinedAt: !15308)
!15443 = !DILocation(line: 377, column: 32, scope: !9078, inlinedAt: !15308)
!15444 = !DILocation(line: 378, column: 6, scope: !9083, inlinedAt: !15308)
!15445 = !DILocation(line: 378, column: 11, scope: !9083, inlinedAt: !15308)
!15446 = !DILocation(line: 378, column: 6, scope: !8901, inlinedAt: !15308)
!15447 = !DILocation(line: 378, column: 32, scope: !9083, inlinedAt: !15308)
!15448 = !DILocation(line: 379, column: 6, scope: !9088, inlinedAt: !15308)
!15449 = !DILocation(line: 379, column: 11, scope: !9088, inlinedAt: !15308)
!15450 = !DILocation(line: 379, column: 6, scope: !8901, inlinedAt: !15308)
!15451 = !DILocation(line: 379, column: 33, scope: !9088, inlinedAt: !15308)
!15452 = !DILocation(line: 380, column: 6, scope: !9093, inlinedAt: !15308)
!15453 = !DILocation(line: 380, column: 11, scope: !9093, inlinedAt: !15308)
!15454 = !DILocation(line: 380, column: 6, scope: !8901, inlinedAt: !15308)
!15455 = !DILocation(line: 380, column: 33, scope: !9093, inlinedAt: !15308)
!15456 = !DILocation(line: 381, column: 6, scope: !9098, inlinedAt: !15308)
!15457 = !DILocation(line: 381, column: 11, scope: !9098, inlinedAt: !15308)
!15458 = !DILocation(line: 381, column: 6, scope: !8901, inlinedAt: !15308)
!15459 = !DILocation(line: 381, column: 33, scope: !9098, inlinedAt: !15308)
!15460 = !DILocation(line: 382, column: 2, scope: !9103, inlinedAt: !15308)
!15461 = !DILocation(line: 382, column: 2, scope: !9107, inlinedAt: !15308)
!15462 = !DILocation(line: 382, column: 2, scope: !9108, inlinedAt: !15308)
!15463 = !DILocation(line: 386, column: 1, scope: !8901, inlinedAt: !15308)
!15464 = !DILocation(line: 547, column: 9, scope: !8884, inlinedAt: !15301)
!15465 = !DILocation(line: 549, column: 8, scope: !9114, inlinedAt: !15301)
!15466 = !DILocation(line: 549, column: 7, scope: !8884, inlinedAt: !15301)
!15467 = !DILocation(line: 550, column: 4, scope: !9114, inlinedAt: !15301)
!15468 = !DILocation(line: 553, column: 33, scope: !8884, inlinedAt: !15301)
!15469 = !DILocation(line: 325, column: 6, scope: !9119, inlinedAt: !15306)
!15470 = !DILocation(line: 325, column: 6, scope: !8895, inlinedAt: !15306)
!15471 = !DILocation(line: 326, column: 3, scope: !9119, inlinedAt: !15306)
!15472 = !DILocation(line: 332, column: 9, scope: !8895, inlinedAt: !15306)
!15473 = !DILocation(line: 332, column: 15, scope: !8895, inlinedAt: !15306)
!15474 = !DILocation(line: 332, column: 2, scope: !8895, inlinedAt: !15306)
!15475 = !DILocation(line: 336, column: 1, scope: !8895, inlinedAt: !15306)
!15476 = !DILocation(line: 553, column: 5, scope: !8884, inlinedAt: !15301)
!15477 = !DILocation(line: 553, column: 41, scope: !8884, inlinedAt: !15301)
!15478 = !DILocation(line: 554, column: 5, scope: !8884, inlinedAt: !15301)
!15479 = !DILocation(line: 554, column: 12, scope: !8884, inlinedAt: !15301)
!15480 = !DILocation(line: 448, column: 31, scope: !8879, inlinedAt: !15300)
!15481 = !DILocation(line: 448, column: 34, scope: !8879, inlinedAt: !15300)
!15482 = !DILocation(line: 448, column: 14, scope: !8879, inlinedAt: !15300)
!15483 = !DILocation(line: 450, column: 22, scope: !8879, inlinedAt: !15300)
!15484 = !DILocation(line: 450, column: 25, scope: !8879, inlinedAt: !15300)
!15485 = !DILocation(line: 450, column: 30, scope: !8879, inlinedAt: !15300)
!15486 = !DILocation(line: 450, column: 36, scope: !8879, inlinedAt: !15300)
!15487 = !DILocation(line: 450, column: 8, scope: !8879, inlinedAt: !15300)
!15488 = !DILocation(line: 450, column: 6, scope: !8879, inlinedAt: !15300)
!15489 = !DILocation(line: 451, column: 9, scope: !8879, inlinedAt: !15300)
!15490 = !DILocation(line: 552, column: 3, scope: !8884, inlinedAt: !15301)
!15491 = !DILocation(line: 557, column: 19, scope: !8886, inlinedAt: !15301)
!15492 = !DILocation(line: 557, column: 25, scope: !8886, inlinedAt: !15301)
!15493 = !DILocation(line: 557, column: 9, scope: !8886, inlinedAt: !15301)
!15494 = !DILocation(line: 557, column: 2, scope: !8886, inlinedAt: !15301)
!15495 = !DILocation(line: 558, column: 1, scope: !8886, inlinedAt: !15301)
!15496 = !DILocation(line: 3786, column: 2, scope: !15298)
!15497 = !DILocation(line: 3786, column: 8, scope: !15298)
!15498 = !DILocation(line: 3786, column: 30, scope: !15298)
!15499 = !DILocation(line: 3787, column: 7, scope: !15500)
!15500 = distinct !DILexicalBlock(scope: !15298, file: !3, line: 3787, column: 7)
!15501 = !DILocation(line: 3787, column: 13, scope: !15500)
!15502 = !DILocation(line: 3787, column: 35, scope: !15500)
!15503 = !DILocation(line: 3787, column: 7, scope: !15298)
!15504 = !DILocation(line: 3788, column: 3, scope: !15500)
!15505 = !DILocation(line: 3790, column: 27, scope: !15298)
!15506 = !DILocation(line: 3790, column: 33, scope: !15298)
!15507 = !DILocation(line: 3790, column: 19, scope: !15298)
!15508 = !DILocation(line: 3790, column: 2, scope: !15298)
!15509 = !DILocation(line: 3790, column: 8, scope: !15298)
!15510 = !DILocation(line: 3790, column: 17, scope: !15298)
!15511 = !DILocation(line: 3791, column: 7, scope: !15512)
!15512 = distinct !DILexicalBlock(scope: !15298, file: !3, line: 3791, column: 6)
!15513 = !DILocation(line: 3791, column: 13, scope: !15512)
!15514 = !DILocation(line: 3791, column: 6, scope: !15298)
!15515 = !DILocation(line: 3792, column: 9, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15512, file: !3, line: 3791, column: 23)
!15517 = !DILocation(line: 3792, column: 15, scope: !15516)
!15518 = !DILocation(line: 3792, column: 3, scope: !15516)
!15519 = !DILocation(line: 3793, column: 3, scope: !15516)
!15520 = !DILocation(line: 3793, column: 9, scope: !15516)
!15521 = !DILocation(line: 3793, column: 31, scope: !15516)
!15522 = !DILocation(line: 3794, column: 3, scope: !15516)
!15523 = !DILocation(line: 3796, column: 2, scope: !15298)
!15524 = !DILocation(line: 3798, column: 1, scope: !15298)
!15525 = distinct !DISubprogram(name: "mgsl_alloc_intermediate_txbuffer_memory", scope: !3, file: !3, line: 3832, type: !9631, scopeLine: 3833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15526 = !DILocation(line: 445, column: 72, scope: !8879, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 552, column: 10, scope: !8884, inlinedAt: !15528)
!15528 = distinct !DILocation(line: 3844, column: 4, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15530, file: !3, line: 3842, column: 50)
!15530 = distinct !DILexicalBlock(scope: !15531, file: !3, line: 3842, column: 2)
!15531 = distinct !DILexicalBlock(scope: !15525, file: !3, line: 3842, column: 2)
!15532 = !DILocation(line: 446, column: 9, scope: !8879, inlinedAt: !15527)
!15533 = !DILocation(line: 446, column: 23, scope: !8879, inlinedAt: !15527)
!15534 = !DILocation(line: 448, column: 8, scope: !8879, inlinedAt: !15527)
!15535 = !DILocation(line: 318, column: 67, scope: !8895, inlinedAt: !15536)
!15536 = distinct !DILocation(line: 553, column: 20, scope: !8884, inlinedAt: !15528)
!15537 = !DILocation(line: 346, column: 58, scope: !8901, inlinedAt: !15538)
!15538 = distinct !DILocation(line: 547, column: 11, scope: !8884, inlinedAt: !15528)
!15539 = !DILocation(line: 472, column: 28, scope: !8907, inlinedAt: !15540)
!15540 = distinct !DILocation(line: 481, column: 9, scope: !8912, inlinedAt: !15541)
!15541 = distinct !DILocation(line: 545, column: 11, scope: !8914, inlinedAt: !15528)
!15542 = !DILocation(line: 472, column: 40, scope: !8907, inlinedAt: !15540)
!15543 = !DILocation(line: 472, column: 60, scope: !8907, inlinedAt: !15540)
!15544 = !DILocation(line: 478, column: 51, scope: !8912, inlinedAt: !15541)
!15545 = !DILocation(line: 478, column: 63, scope: !8912, inlinedAt: !15541)
!15546 = !DILocation(line: 480, column: 15, scope: !8912, inlinedAt: !15541)
!15547 = !DILocation(line: 538, column: 45, scope: !8886, inlinedAt: !15528)
!15548 = !DILocation(line: 538, column: 57, scope: !8886, inlinedAt: !15528)
!15549 = !DILocation(line: 542, column: 16, scope: !8884, inlinedAt: !15528)
!15550 = !DILocalVariable(name: "info", arg: 1, scope: !15525, file: !3, line: 3832, type: !7524)
!15551 = !DILocation(line: 3832, column: 72, scope: !15525)
!15552 = !DILocalVariable(name: "i", scope: !15525, file: !3, line: 3834, type: !32)
!15553 = !DILocation(line: 3834, column: 6, scope: !15525)
!15554 = !DILocation(line: 3836, column: 7, scope: !15555)
!15555 = distinct !DILexicalBlock(scope: !15525, file: !3, line: 3836, column: 7)
!15556 = !DILocation(line: 3836, column: 19, scope: !15555)
!15557 = !DILocation(line: 3836, column: 7, scope: !15525)
!15558 = !DILocation(line: 3838, column: 5, scope: !15555)
!15559 = !DILocation(line: 3838, column: 11, scope: !15555)
!15560 = !DILocation(line: 3838, column: 42, scope: !15555)
!15561 = !DILocation(line: 3838, column: 48, scope: !15555)
!15562 = !DILocation(line: 3837, column: 3, scope: !15555)
!15563 = !DILocation(line: 3840, column: 9, scope: !15525)
!15564 = !DILocation(line: 3840, column: 15, scope: !15525)
!15565 = !DILocation(line: 3840, column: 2, scope: !15525)
!15566 = !DILocation(line: 3842, column: 9, scope: !15531)
!15567 = !DILocation(line: 3842, column: 8, scope: !15531)
!15568 = !DILocation(line: 3842, column: 13, scope: !15530)
!15569 = !DILocation(line: 3842, column: 15, scope: !15530)
!15570 = !DILocation(line: 3842, column: 21, scope: !15530)
!15571 = !DILocation(line: 3842, column: 14, scope: !15530)
!15572 = !DILocation(line: 3842, column: 2, scope: !15531)
!15573 = !DILocation(line: 3844, column: 12, scope: !15529)
!15574 = !DILocation(line: 3844, column: 18, scope: !15529)
!15575 = !DILocation(line: 540, column: 27, scope: !8885, inlinedAt: !15528)
!15576 = !DILocation(line: 540, column: 6, scope: !8885, inlinedAt: !15528)
!15577 = !DILocation(line: 540, column: 6, scope: !8886, inlinedAt: !15528)
!15578 = !DILocation(line: 544, column: 7, scope: !8914, inlinedAt: !15528)
!15579 = !DILocation(line: 544, column: 12, scope: !8914, inlinedAt: !15528)
!15580 = !DILocation(line: 544, column: 7, scope: !8884, inlinedAt: !15528)
!15581 = !DILocation(line: 545, column: 25, scope: !8914, inlinedAt: !15528)
!15582 = !DILocation(line: 545, column: 31, scope: !8914, inlinedAt: !15528)
!15583 = !DILocation(line: 480, column: 33, scope: !8912, inlinedAt: !15541)
!15584 = !DILocation(line: 480, column: 23, scope: !8912, inlinedAt: !15541)
!15585 = !DILocation(line: 481, column: 29, scope: !8912, inlinedAt: !15541)
!15586 = !DILocation(line: 481, column: 35, scope: !8912, inlinedAt: !15541)
!15587 = !DILocation(line: 481, column: 42, scope: !8912, inlinedAt: !15541)
!15588 = !DILocation(line: 474, column: 23, scope: !8907, inlinedAt: !15540)
!15589 = !DILocation(line: 474, column: 29, scope: !8907, inlinedAt: !15540)
!15590 = !DILocation(line: 474, column: 36, scope: !8907, inlinedAt: !15540)
!15591 = !DILocation(line: 474, column: 9, scope: !8907, inlinedAt: !15540)
!15592 = !DILocation(line: 545, column: 4, scope: !8914, inlinedAt: !15528)
!15593 = !DILocation(line: 547, column: 25, scope: !8884, inlinedAt: !15528)
!15594 = !DILocation(line: 348, column: 7, scope: !8958, inlinedAt: !15538)
!15595 = !DILocation(line: 348, column: 6, scope: !8901, inlinedAt: !15538)
!15596 = !DILocation(line: 349, column: 3, scope: !8958, inlinedAt: !15538)
!15597 = !DILocation(line: 351, column: 6, scope: !8962, inlinedAt: !15538)
!15598 = !DILocation(line: 351, column: 11, scope: !8962, inlinedAt: !15538)
!15599 = !DILocation(line: 351, column: 6, scope: !8901, inlinedAt: !15538)
!15600 = !DILocation(line: 352, column: 3, scope: !8962, inlinedAt: !15538)
!15601 = !DILocation(line: 354, column: 32, scope: !8967, inlinedAt: !15538)
!15602 = !DILocation(line: 354, column: 37, scope: !8967, inlinedAt: !15538)
!15603 = !DILocation(line: 354, column: 42, scope: !8967, inlinedAt: !15538)
!15604 = !DILocation(line: 354, column: 45, scope: !8967, inlinedAt: !15538)
!15605 = !DILocation(line: 354, column: 50, scope: !8967, inlinedAt: !15538)
!15606 = !DILocation(line: 354, column: 6, scope: !8901, inlinedAt: !15538)
!15607 = !DILocation(line: 355, column: 3, scope: !8967, inlinedAt: !15538)
!15608 = !DILocation(line: 356, column: 32, scope: !8975, inlinedAt: !15538)
!15609 = !DILocation(line: 356, column: 37, scope: !8975, inlinedAt: !15538)
!15610 = !DILocation(line: 356, column: 43, scope: !8975, inlinedAt: !15538)
!15611 = !DILocation(line: 356, column: 46, scope: !8975, inlinedAt: !15538)
!15612 = !DILocation(line: 356, column: 51, scope: !8975, inlinedAt: !15538)
!15613 = !DILocation(line: 356, column: 6, scope: !8901, inlinedAt: !15538)
!15614 = !DILocation(line: 357, column: 3, scope: !8975, inlinedAt: !15538)
!15615 = !DILocation(line: 358, column: 6, scope: !8983, inlinedAt: !15538)
!15616 = !DILocation(line: 358, column: 11, scope: !8983, inlinedAt: !15538)
!15617 = !DILocation(line: 358, column: 6, scope: !8901, inlinedAt: !15538)
!15618 = !DILocation(line: 358, column: 26, scope: !8983, inlinedAt: !15538)
!15619 = !DILocation(line: 359, column: 6, scope: !8988, inlinedAt: !15538)
!15620 = !DILocation(line: 359, column: 11, scope: !8988, inlinedAt: !15538)
!15621 = !DILocation(line: 359, column: 6, scope: !8901, inlinedAt: !15538)
!15622 = !DILocation(line: 359, column: 26, scope: !8988, inlinedAt: !15538)
!15623 = !DILocation(line: 360, column: 6, scope: !8993, inlinedAt: !15538)
!15624 = !DILocation(line: 360, column: 11, scope: !8993, inlinedAt: !15538)
!15625 = !DILocation(line: 360, column: 6, scope: !8901, inlinedAt: !15538)
!15626 = !DILocation(line: 360, column: 26, scope: !8993, inlinedAt: !15538)
!15627 = !DILocation(line: 361, column: 6, scope: !8998, inlinedAt: !15538)
!15628 = !DILocation(line: 361, column: 11, scope: !8998, inlinedAt: !15538)
!15629 = !DILocation(line: 361, column: 6, scope: !8901, inlinedAt: !15538)
!15630 = !DILocation(line: 361, column: 26, scope: !8998, inlinedAt: !15538)
!15631 = !DILocation(line: 362, column: 6, scope: !9003, inlinedAt: !15538)
!15632 = !DILocation(line: 362, column: 11, scope: !9003, inlinedAt: !15538)
!15633 = !DILocation(line: 362, column: 6, scope: !8901, inlinedAt: !15538)
!15634 = !DILocation(line: 362, column: 26, scope: !9003, inlinedAt: !15538)
!15635 = !DILocation(line: 363, column: 6, scope: !9008, inlinedAt: !15538)
!15636 = !DILocation(line: 363, column: 11, scope: !9008, inlinedAt: !15538)
!15637 = !DILocation(line: 363, column: 6, scope: !8901, inlinedAt: !15538)
!15638 = !DILocation(line: 363, column: 26, scope: !9008, inlinedAt: !15538)
!15639 = !DILocation(line: 364, column: 6, scope: !9013, inlinedAt: !15538)
!15640 = !DILocation(line: 364, column: 11, scope: !9013, inlinedAt: !15538)
!15641 = !DILocation(line: 364, column: 6, scope: !8901, inlinedAt: !15538)
!15642 = !DILocation(line: 364, column: 26, scope: !9013, inlinedAt: !15538)
!15643 = !DILocation(line: 365, column: 6, scope: !9018, inlinedAt: !15538)
!15644 = !DILocation(line: 365, column: 11, scope: !9018, inlinedAt: !15538)
!15645 = !DILocation(line: 365, column: 6, scope: !8901, inlinedAt: !15538)
!15646 = !DILocation(line: 365, column: 26, scope: !9018, inlinedAt: !15538)
!15647 = !DILocation(line: 366, column: 6, scope: !9023, inlinedAt: !15538)
!15648 = !DILocation(line: 366, column: 11, scope: !9023, inlinedAt: !15538)
!15649 = !DILocation(line: 366, column: 6, scope: !8901, inlinedAt: !15538)
!15650 = !DILocation(line: 366, column: 26, scope: !9023, inlinedAt: !15538)
!15651 = !DILocation(line: 367, column: 6, scope: !9028, inlinedAt: !15538)
!15652 = !DILocation(line: 367, column: 11, scope: !9028, inlinedAt: !15538)
!15653 = !DILocation(line: 367, column: 6, scope: !8901, inlinedAt: !15538)
!15654 = !DILocation(line: 367, column: 26, scope: !9028, inlinedAt: !15538)
!15655 = !DILocation(line: 368, column: 6, scope: !9033, inlinedAt: !15538)
!15656 = !DILocation(line: 368, column: 11, scope: !9033, inlinedAt: !15538)
!15657 = !DILocation(line: 368, column: 6, scope: !8901, inlinedAt: !15538)
!15658 = !DILocation(line: 368, column: 26, scope: !9033, inlinedAt: !15538)
!15659 = !DILocation(line: 369, column: 6, scope: !9038, inlinedAt: !15538)
!15660 = !DILocation(line: 369, column: 11, scope: !9038, inlinedAt: !15538)
!15661 = !DILocation(line: 369, column: 6, scope: !8901, inlinedAt: !15538)
!15662 = !DILocation(line: 369, column: 26, scope: !9038, inlinedAt: !15538)
!15663 = !DILocation(line: 370, column: 6, scope: !9043, inlinedAt: !15538)
!15664 = !DILocation(line: 370, column: 11, scope: !9043, inlinedAt: !15538)
!15665 = !DILocation(line: 370, column: 6, scope: !8901, inlinedAt: !15538)
!15666 = !DILocation(line: 370, column: 26, scope: !9043, inlinedAt: !15538)
!15667 = !DILocation(line: 371, column: 6, scope: !9048, inlinedAt: !15538)
!15668 = !DILocation(line: 371, column: 11, scope: !9048, inlinedAt: !15538)
!15669 = !DILocation(line: 371, column: 6, scope: !8901, inlinedAt: !15538)
!15670 = !DILocation(line: 371, column: 26, scope: !9048, inlinedAt: !15538)
!15671 = !DILocation(line: 372, column: 6, scope: !9053, inlinedAt: !15538)
!15672 = !DILocation(line: 372, column: 11, scope: !9053, inlinedAt: !15538)
!15673 = !DILocation(line: 372, column: 6, scope: !8901, inlinedAt: !15538)
!15674 = !DILocation(line: 372, column: 26, scope: !9053, inlinedAt: !15538)
!15675 = !DILocation(line: 373, column: 6, scope: !9058, inlinedAt: !15538)
!15676 = !DILocation(line: 373, column: 11, scope: !9058, inlinedAt: !15538)
!15677 = !DILocation(line: 373, column: 6, scope: !8901, inlinedAt: !15538)
!15678 = !DILocation(line: 373, column: 26, scope: !9058, inlinedAt: !15538)
!15679 = !DILocation(line: 374, column: 6, scope: !9063, inlinedAt: !15538)
!15680 = !DILocation(line: 374, column: 11, scope: !9063, inlinedAt: !15538)
!15681 = !DILocation(line: 374, column: 6, scope: !8901, inlinedAt: !15538)
!15682 = !DILocation(line: 374, column: 26, scope: !9063, inlinedAt: !15538)
!15683 = !DILocation(line: 375, column: 6, scope: !9068, inlinedAt: !15538)
!15684 = !DILocation(line: 375, column: 11, scope: !9068, inlinedAt: !15538)
!15685 = !DILocation(line: 375, column: 6, scope: !8901, inlinedAt: !15538)
!15686 = !DILocation(line: 375, column: 27, scope: !9068, inlinedAt: !15538)
!15687 = !DILocation(line: 376, column: 6, scope: !9073, inlinedAt: !15538)
!15688 = !DILocation(line: 376, column: 11, scope: !9073, inlinedAt: !15538)
!15689 = !DILocation(line: 376, column: 6, scope: !8901, inlinedAt: !15538)
!15690 = !DILocation(line: 376, column: 32, scope: !9073, inlinedAt: !15538)
!15691 = !DILocation(line: 377, column: 6, scope: !9078, inlinedAt: !15538)
!15692 = !DILocation(line: 377, column: 11, scope: !9078, inlinedAt: !15538)
!15693 = !DILocation(line: 377, column: 6, scope: !8901, inlinedAt: !15538)
!15694 = !DILocation(line: 377, column: 32, scope: !9078, inlinedAt: !15538)
!15695 = !DILocation(line: 378, column: 6, scope: !9083, inlinedAt: !15538)
!15696 = !DILocation(line: 378, column: 11, scope: !9083, inlinedAt: !15538)
!15697 = !DILocation(line: 378, column: 6, scope: !8901, inlinedAt: !15538)
!15698 = !DILocation(line: 378, column: 32, scope: !9083, inlinedAt: !15538)
!15699 = !DILocation(line: 379, column: 6, scope: !9088, inlinedAt: !15538)
!15700 = !DILocation(line: 379, column: 11, scope: !9088, inlinedAt: !15538)
!15701 = !DILocation(line: 379, column: 6, scope: !8901, inlinedAt: !15538)
!15702 = !DILocation(line: 379, column: 33, scope: !9088, inlinedAt: !15538)
!15703 = !DILocation(line: 380, column: 6, scope: !9093, inlinedAt: !15538)
!15704 = !DILocation(line: 380, column: 11, scope: !9093, inlinedAt: !15538)
!15705 = !DILocation(line: 380, column: 6, scope: !8901, inlinedAt: !15538)
!15706 = !DILocation(line: 380, column: 33, scope: !9093, inlinedAt: !15538)
!15707 = !DILocation(line: 381, column: 6, scope: !9098, inlinedAt: !15538)
!15708 = !DILocation(line: 381, column: 11, scope: !9098, inlinedAt: !15538)
!15709 = !DILocation(line: 381, column: 6, scope: !8901, inlinedAt: !15538)
!15710 = !DILocation(line: 381, column: 33, scope: !9098, inlinedAt: !15538)
!15711 = !DILocation(line: 382, column: 2, scope: !9103, inlinedAt: !15538)
!15712 = !DILocation(line: 382, column: 2, scope: !9107, inlinedAt: !15538)
!15713 = !DILocation(line: 382, column: 2, scope: !9108, inlinedAt: !15538)
!15714 = !DILocation(line: 386, column: 1, scope: !8901, inlinedAt: !15538)
!15715 = !DILocation(line: 547, column: 9, scope: !8884, inlinedAt: !15528)
!15716 = !DILocation(line: 549, column: 8, scope: !9114, inlinedAt: !15528)
!15717 = !DILocation(line: 549, column: 7, scope: !8884, inlinedAt: !15528)
!15718 = !DILocation(line: 550, column: 4, scope: !9114, inlinedAt: !15528)
!15719 = !DILocation(line: 553, column: 33, scope: !8884, inlinedAt: !15528)
!15720 = !DILocation(line: 325, column: 6, scope: !9119, inlinedAt: !15536)
!15721 = !DILocation(line: 325, column: 6, scope: !8895, inlinedAt: !15536)
!15722 = !DILocation(line: 326, column: 3, scope: !9119, inlinedAt: !15536)
!15723 = !DILocation(line: 332, column: 9, scope: !8895, inlinedAt: !15536)
!15724 = !DILocation(line: 332, column: 15, scope: !8895, inlinedAt: !15536)
!15725 = !DILocation(line: 332, column: 2, scope: !8895, inlinedAt: !15536)
!15726 = !DILocation(line: 336, column: 1, scope: !8895, inlinedAt: !15536)
!15727 = !DILocation(line: 553, column: 5, scope: !8884, inlinedAt: !15528)
!15728 = !DILocation(line: 553, column: 41, scope: !8884, inlinedAt: !15528)
!15729 = !DILocation(line: 554, column: 5, scope: !8884, inlinedAt: !15528)
!15730 = !DILocation(line: 554, column: 12, scope: !8884, inlinedAt: !15528)
!15731 = !DILocation(line: 448, column: 31, scope: !8879, inlinedAt: !15527)
!15732 = !DILocation(line: 448, column: 34, scope: !8879, inlinedAt: !15527)
!15733 = !DILocation(line: 448, column: 14, scope: !8879, inlinedAt: !15527)
!15734 = !DILocation(line: 450, column: 22, scope: !8879, inlinedAt: !15527)
!15735 = !DILocation(line: 450, column: 25, scope: !8879, inlinedAt: !15527)
!15736 = !DILocation(line: 450, column: 30, scope: !8879, inlinedAt: !15527)
!15737 = !DILocation(line: 450, column: 36, scope: !8879, inlinedAt: !15527)
!15738 = !DILocation(line: 450, column: 8, scope: !8879, inlinedAt: !15527)
!15739 = !DILocation(line: 450, column: 6, scope: !8879, inlinedAt: !15527)
!15740 = !DILocation(line: 451, column: 9, scope: !8879, inlinedAt: !15527)
!15741 = !DILocation(line: 552, column: 3, scope: !8884, inlinedAt: !15528)
!15742 = !DILocation(line: 557, column: 19, scope: !8886, inlinedAt: !15528)
!15743 = !DILocation(line: 557, column: 25, scope: !8886, inlinedAt: !15528)
!15744 = !DILocation(line: 557, column: 9, scope: !8886, inlinedAt: !15528)
!15745 = !DILocation(line: 557, column: 2, scope: !8886, inlinedAt: !15528)
!15746 = !DILocation(line: 558, column: 1, scope: !8886, inlinedAt: !15528)
!15747 = !DILocation(line: 3843, column: 3, scope: !15529)
!15748 = !DILocation(line: 3843, column: 9, scope: !15529)
!15749 = !DILocation(line: 3843, column: 28, scope: !15529)
!15750 = !DILocation(line: 3843, column: 31, scope: !15529)
!15751 = !DILocation(line: 3843, column: 38, scope: !15529)
!15752 = !DILocation(line: 3845, column: 7, scope: !15753)
!15753 = distinct !DILexicalBlock(scope: !15529, file: !3, line: 3845, column: 7)
!15754 = !DILocation(line: 3845, column: 13, scope: !15753)
!15755 = !DILocation(line: 3845, column: 32, scope: !15753)
!15756 = !DILocation(line: 3845, column: 35, scope: !15753)
!15757 = !DILocation(line: 3845, column: 42, scope: !15753)
!15758 = !DILocation(line: 3845, column: 7, scope: !15529)
!15759 = !DILocation(line: 3846, column: 9, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15761, file: !3, line: 3846, column: 4)
!15761 = distinct !DILexicalBlock(scope: !15753, file: !3, line: 3845, column: 51)
!15762 = !DILocation(line: 3846, column: 14, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15760, file: !3, line: 3846, column: 4)
!15764 = !DILocation(line: 3846, column: 16, scope: !15763)
!15765 = !DILocation(line: 3846, column: 4, scope: !15760)
!15766 = !DILocation(line: 3847, column: 11, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15763, file: !3, line: 3846, column: 27)
!15768 = !DILocation(line: 3847, column: 17, scope: !15767)
!15769 = !DILocation(line: 3847, column: 36, scope: !15767)
!15770 = !DILocation(line: 3847, column: 39, scope: !15767)
!15771 = !DILocation(line: 3847, column: 5, scope: !15767)
!15772 = !DILocation(line: 3848, column: 5, scope: !15767)
!15773 = !DILocation(line: 3848, column: 11, scope: !15767)
!15774 = !DILocation(line: 3848, column: 30, scope: !15767)
!15775 = !DILocation(line: 3848, column: 33, scope: !15767)
!15776 = !DILocation(line: 3848, column: 40, scope: !15767)
!15777 = !DILocation(line: 3849, column: 4, scope: !15767)
!15778 = !DILocation(line: 3846, column: 23, scope: !15763)
!15779 = !DILocation(line: 3846, column: 4, scope: !15763)
!15780 = distinct !{!15780, !15765, !15781}
!15781 = !DILocation(line: 3849, column: 4, scope: !15760)
!15782 = !DILocation(line: 3850, column: 4, scope: !15761)
!15783 = !DILocation(line: 3852, column: 2, scope: !15529)
!15784 = !DILocation(line: 3842, column: 45, scope: !15530)
!15785 = !DILocation(line: 3842, column: 2, scope: !15530)
!15786 = distinct !{!15786, !15572, !15787}
!15787 = !DILocation(line: 3852, column: 2, scope: !15531)
!15788 = !DILocation(line: 3854, column: 2, scope: !15525)
!15789 = !DILocation(line: 3856, column: 1, scope: !15525)
!15790 = distinct !DISubprogram(name: "mgsl_reset_tx_dma_buffers", scope: !3, file: !3, line: 6190, type: !8185, scopeLine: 6191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15791 = !DILocalVariable(name: "info", arg: 1, scope: !15790, file: !3, line: 6190, type: !7524)
!15792 = !DILocation(line: 6190, column: 60, scope: !15790)
!15793 = !DILocalVariable(name: "i", scope: !15790, file: !3, line: 6192, type: !7)
!15794 = !DILocation(line: 6192, column: 15, scope: !15790)
!15795 = !DILocation(line: 6194, column: 10, scope: !15796)
!15796 = distinct !DILexicalBlock(scope: !15790, file: !3, line: 6194, column: 2)
!15797 = !DILocation(line: 6194, column: 8, scope: !15796)
!15798 = !DILocation(line: 6194, column: 15, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15796, file: !3, line: 6194, column: 2)
!15800 = !DILocation(line: 6194, column: 19, scope: !15799)
!15801 = !DILocation(line: 6194, column: 25, scope: !15799)
!15802 = !DILocation(line: 6194, column: 17, scope: !15799)
!15803 = !DILocation(line: 6194, column: 2, scope: !15796)
!15804 = !DILocation(line: 6195, column: 24, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15799, file: !3, line: 6194, column: 48)
!15806 = !DILocation(line: 6195, column: 30, scope: !15805)
!15807 = !DILocation(line: 6195, column: 45, scope: !15805)
!15808 = !DILocation(line: 6195, column: 48, scope: !15805)
!15809 = !DILocation(line: 6195, column: 3, scope: !15805)
!15810 = !DILocation(line: 6195, column: 56, scope: !15805)
!15811 = !DILocation(line: 6196, column: 2, scope: !15805)
!15812 = !DILocation(line: 6194, column: 43, scope: !15799)
!15813 = !DILocation(line: 6194, column: 2, scope: !15799)
!15814 = distinct !{!15814, !15803, !15815}
!15815 = !DILocation(line: 6196, column: 2, scope: !15796)
!15816 = !DILocation(line: 6198, column: 2, scope: !15790)
!15817 = !DILocation(line: 6198, column: 8, scope: !15790)
!15818 = !DILocation(line: 6198, column: 26, scope: !15790)
!15819 = !DILocation(line: 6199, column: 2, scope: !15790)
!15820 = !DILocation(line: 6199, column: 8, scope: !15790)
!15821 = !DILocation(line: 6199, column: 28, scope: !15790)
!15822 = !DILocation(line: 6200, column: 2, scope: !15790)
!15823 = !DILocation(line: 6200, column: 8, scope: !15790)
!15824 = !DILocation(line: 6200, column: 28, scope: !15790)
!15825 = !DILocation(line: 6202, column: 2, scope: !15790)
!15826 = !DILocation(line: 6202, column: 8, scope: !15790)
!15827 = !DILocation(line: 6202, column: 29, scope: !15790)
!15828 = !DILocation(line: 6203, column: 2, scope: !15790)
!15829 = !DILocation(line: 6203, column: 8, scope: !15790)
!15830 = !DILocation(line: 6203, column: 29, scope: !15790)
!15831 = !DILocation(line: 6204, column: 2, scope: !15790)
!15832 = !DILocation(line: 6204, column: 8, scope: !15790)
!15833 = !DILocation(line: 6204, column: 25, scope: !15790)
!15834 = !DILocation(line: 6206, column: 1, scope: !15790)
!15835 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 6784, column: 2, scope: !8195)
!15837 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !15836)
!15838 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 6748, column: 2, scope: !15840)
!15840 = distinct !DILexicalBlock(scope: !15841, file: !3, line: 6748, column: 2)
!15841 = distinct !DILexicalBlock(scope: !15842, file: !3, line: 6748, column: 2)
!15842 = distinct !DILexicalBlock(scope: !15843, file: !3, line: 6748, column: 2)
!15843 = distinct !DILexicalBlock(scope: !15844, file: !3, line: 6748, column: 2)
!15844 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 6748, column: 2)
!15845 = !DILocalVariable(name: "info", arg: 1, scope: !8195, file: !3, line: 6739, type: !7524)
!15846 = !DILocation(line: 6739, column: 53, scope: !8195)
!15847 = !DILocalVariable(name: "i", scope: !8195, file: !3, line: 6744, type: !7)
!15848 = !DILocation(line: 6744, column: 15, scope: !8195)
!15849 = !DILocalVariable(name: "rc", scope: !8195, file: !3, line: 6745, type: !771)
!15850 = !DILocation(line: 6745, column: 7, scope: !8195)
!15851 = !DILocalVariable(name: "flags", scope: !8195, file: !3, line: 6746, type: !312)
!15852 = !DILocation(line: 6746, column: 16, scope: !8195)
!15853 = !DILocation(line: 6748, column: 2, scope: !8195)
!15854 = !DILocation(line: 6748, column: 2, scope: !15844)
!15855 = !DILocalVariable(name: "__dummy", scope: !15856, file: !3, line: 6748, type: !312)
!15856 = distinct !DILexicalBlock(scope: !15843, file: !3, line: 6748, column: 2)
!15857 = !DILocation(line: 6748, column: 2, scope: !15856)
!15858 = !DILocalVariable(name: "__dummy2", scope: !15856, file: !3, line: 6748, type: !312)
!15859 = !DILocation(line: 6748, column: 2, scope: !15843)
!15860 = !DILocation(line: 6748, column: 2, scope: !15842)
!15861 = !DILocation(line: 6748, column: 2, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15842, file: !3, line: 6748, column: 2)
!15863 = !DILocalVariable(name: "__dummy", scope: !15864, file: !3, line: 6748, type: !312)
!15864 = distinct !DILexicalBlock(scope: !15865, file: !3, line: 6748, column: 2)
!15865 = distinct !DILexicalBlock(scope: !15862, file: !3, line: 6748, column: 2)
!15866 = !DILocation(line: 6748, column: 2, scope: !15864)
!15867 = !DILocalVariable(name: "__dummy2", scope: !15864, file: !3, line: 6748, type: !312)
!15868 = !DILocation(line: 6748, column: 2, scope: !15865)
!15869 = !DILocation(line: 6748, column: 2, scope: !15841)
!15870 = !{i32 -2139345402}
!15871 = !DILocation(line: 6748, column: 2, scope: !15840)
!15872 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !15839)
!15873 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !15839)
!15874 = !DILocation(line: 6749, column: 12, scope: !8195)
!15875 = !DILocation(line: 6749, column: 2, scope: !8195)
!15876 = !DILocation(line: 6753, column: 19, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 6753, column: 7)
!15878 = !DILocation(line: 6753, column: 8, scope: !15877)
!15879 = !DILocation(line: 6753, column: 32, scope: !15877)
!15880 = !DILocation(line: 6753, column: 38, scope: !15877)
!15881 = !DILocation(line: 6754, column: 17, scope: !15877)
!15882 = !DILocation(line: 6754, column: 6, scope: !15877)
!15883 = !DILocation(line: 6754, column: 30, scope: !15877)
!15884 = !DILocation(line: 6754, column: 36, scope: !15877)
!15885 = !DILocation(line: 6755, column: 20, scope: !15877)
!15886 = !DILocation(line: 6755, column: 6, scope: !15877)
!15887 = !DILocation(line: 6755, column: 33, scope: !15877)
!15888 = !DILocation(line: 6753, column: 7, scope: !8195)
!15889 = !DILocation(line: 6756, column: 6, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15877, file: !3, line: 6755, column: 40)
!15891 = !DILocation(line: 6757, column: 2, scope: !15890)
!15892 = !DILocation(line: 6759, column: 7, scope: !15893)
!15893 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 6759, column: 7)
!15894 = !DILocation(line: 6759, column: 7, scope: !8195)
!15895 = !DILocation(line: 6763, column: 11, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15897, file: !3, line: 6763, column: 3)
!15897 = distinct !DILexicalBlock(scope: !15893, file: !3, line: 6759, column: 11)
!15898 = !DILocation(line: 6763, column: 9, scope: !15896)
!15899 = !DILocation(line: 6763, column: 17, scope: !15900)
!15900 = distinct !DILexicalBlock(scope: !15896, file: !3, line: 6763, column: 3)
!15901 = !DILocation(line: 6763, column: 21, scope: !15900)
!15902 = !DILocation(line: 6763, column: 19, scope: !15900)
!15903 = !DILocation(line: 6763, column: 3, scope: !15896)
!15904 = !DILocation(line: 6764, column: 16, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15900, file: !3, line: 6763, column: 42)
!15906 = !DILocation(line: 6764, column: 40, scope: !15905)
!15907 = !DILocation(line: 6764, column: 28, scope: !15905)
!15908 = !DILocation(line: 6764, column: 4, scope: !15905)
!15909 = !DILocation(line: 6765, column: 16, scope: !15905)
!15910 = !DILocation(line: 6765, column: 41, scope: !15905)
!15911 = !DILocation(line: 6765, column: 42, scope: !15905)
!15912 = !DILocation(line: 6765, column: 46, scope: !15905)
!15913 = !DILocation(line: 6765, column: 45, scope: !15905)
!15914 = !DILocation(line: 6765, column: 28, scope: !15905)
!15915 = !DILocation(line: 6765, column: 4, scope: !15905)
!15916 = !DILocation(line: 6766, column: 16, scope: !15905)
!15917 = !DILocation(line: 6766, column: 41, scope: !15905)
!15918 = !DILocation(line: 6766, column: 42, scope: !15905)
!15919 = !DILocation(line: 6766, column: 46, scope: !15905)
!15920 = !DILocation(line: 6766, column: 45, scope: !15905)
!15921 = !DILocation(line: 6766, column: 28, scope: !15905)
!15922 = !DILocation(line: 6766, column: 4, scope: !15905)
!15923 = !DILocation(line: 6767, column: 16, scope: !15905)
!15924 = !DILocation(line: 6767, column: 41, scope: !15905)
!15925 = !DILocation(line: 6767, column: 42, scope: !15905)
!15926 = !DILocation(line: 6767, column: 46, scope: !15905)
!15927 = !DILocation(line: 6767, column: 45, scope: !15905)
!15928 = !DILocation(line: 6767, column: 28, scope: !15905)
!15929 = !DILocation(line: 6767, column: 4, scope: !15905)
!15930 = !DILocation(line: 6768, column: 16, scope: !15905)
!15931 = !DILocation(line: 6768, column: 41, scope: !15905)
!15932 = !DILocation(line: 6768, column: 42, scope: !15905)
!15933 = !DILocation(line: 6768, column: 46, scope: !15905)
!15934 = !DILocation(line: 6768, column: 45, scope: !15905)
!15935 = !DILocation(line: 6768, column: 28, scope: !15905)
!15936 = !DILocation(line: 6768, column: 4, scope: !15905)
!15937 = !DILocation(line: 6769, column: 19, scope: !15905)
!15938 = !DILocation(line: 6769, column: 44, scope: !15905)
!15939 = !DILocation(line: 6769, column: 45, scope: !15905)
!15940 = !DILocation(line: 6769, column: 49, scope: !15905)
!15941 = !DILocation(line: 6769, column: 48, scope: !15905)
!15942 = !DILocation(line: 6769, column: 31, scope: !15905)
!15943 = !DILocation(line: 6769, column: 4, scope: !15905)
!15944 = !DILocation(line: 6771, column: 21, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15905, file: !3, line: 6771, column: 9)
!15946 = !DILocation(line: 6771, column: 10, scope: !15945)
!15947 = !DILocation(line: 6771, column: 49, scope: !15945)
!15948 = !DILocation(line: 6771, column: 37, scope: !15945)
!15949 = !DILocation(line: 6771, column: 34, scope: !15945)
!15950 = !DILocation(line: 6771, column: 53, scope: !15945)
!15951 = !DILocation(line: 6772, column: 19, scope: !15945)
!15952 = !DILocation(line: 6772, column: 8, scope: !15945)
!15953 = !DILocation(line: 6772, column: 48, scope: !15945)
!15954 = !DILocation(line: 6772, column: 49, scope: !15945)
!15955 = !DILocation(line: 6772, column: 53, scope: !15945)
!15956 = !DILocation(line: 6772, column: 52, scope: !15945)
!15957 = !DILocation(line: 6772, column: 35, scope: !15945)
!15958 = !DILocation(line: 6772, column: 32, scope: !15945)
!15959 = !DILocation(line: 6772, column: 68, scope: !15945)
!15960 = !DILocation(line: 6773, column: 19, scope: !15945)
!15961 = !DILocation(line: 6773, column: 8, scope: !15945)
!15962 = !DILocation(line: 6773, column: 48, scope: !15945)
!15963 = !DILocation(line: 6773, column: 49, scope: !15945)
!15964 = !DILocation(line: 6773, column: 53, scope: !15945)
!15965 = !DILocation(line: 6773, column: 52, scope: !15945)
!15966 = !DILocation(line: 6773, column: 35, scope: !15945)
!15967 = !DILocation(line: 6773, column: 32, scope: !15945)
!15968 = !DILocation(line: 6773, column: 68, scope: !15945)
!15969 = !DILocation(line: 6774, column: 19, scope: !15945)
!15970 = !DILocation(line: 6774, column: 8, scope: !15945)
!15971 = !DILocation(line: 6774, column: 48, scope: !15945)
!15972 = !DILocation(line: 6774, column: 49, scope: !15945)
!15973 = !DILocation(line: 6774, column: 53, scope: !15945)
!15974 = !DILocation(line: 6774, column: 52, scope: !15945)
!15975 = !DILocation(line: 6774, column: 35, scope: !15945)
!15976 = !DILocation(line: 6774, column: 32, scope: !15945)
!15977 = !DILocation(line: 6774, column: 68, scope: !15945)
!15978 = !DILocation(line: 6775, column: 19, scope: !15945)
!15979 = !DILocation(line: 6775, column: 8, scope: !15945)
!15980 = !DILocation(line: 6775, column: 48, scope: !15945)
!15981 = !DILocation(line: 6775, column: 49, scope: !15945)
!15982 = !DILocation(line: 6775, column: 53, scope: !15945)
!15983 = !DILocation(line: 6775, column: 52, scope: !15945)
!15984 = !DILocation(line: 6775, column: 35, scope: !15945)
!15985 = !DILocation(line: 6775, column: 32, scope: !15945)
!15986 = !DILocation(line: 6775, column: 68, scope: !15945)
!15987 = !DILocation(line: 6776, column: 22, scope: !15945)
!15988 = !DILocation(line: 6776, column: 8, scope: !15945)
!15989 = !DILocation(line: 6776, column: 51, scope: !15945)
!15990 = !DILocation(line: 6776, column: 52, scope: !15945)
!15991 = !DILocation(line: 6776, column: 56, scope: !15945)
!15992 = !DILocation(line: 6776, column: 55, scope: !15945)
!15993 = !DILocation(line: 6776, column: 38, scope: !15945)
!15994 = !DILocation(line: 6776, column: 35, scope: !15945)
!15995 = !DILocation(line: 6771, column: 9, scope: !15905)
!15996 = !DILocation(line: 6777, column: 8, scope: !15997)
!15997 = distinct !DILexicalBlock(scope: !15945, file: !3, line: 6776, column: 72)
!15998 = !DILocation(line: 6778, column: 5, scope: !15997)
!15999 = !DILocation(line: 6780, column: 3, scope: !15905)
!16000 = !DILocation(line: 6763, column: 37, scope: !15900)
!16001 = !DILocation(line: 6763, column: 3, scope: !15900)
!16002 = distinct !{!16002, !15903, !16003}
!16003 = !DILocation(line: 6780, column: 3, scope: !15896)
!16004 = !DILocation(line: 6781, column: 2, scope: !15897)
!16005 = !DILocation(line: 6783, column: 12, scope: !8195)
!16006 = !DILocation(line: 6783, column: 2, scope: !8195)
!16007 = !DILocation(line: 6784, column: 26, scope: !8195)
!16008 = !DILocation(line: 6784, column: 32, scope: !8195)
!16009 = !DILocation(line: 6784, column: 45, scope: !8195)
!16010 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !15836)
!16011 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !15836)
!16012 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !15836)
!16013 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !15836)
!16014 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !15836)
!16015 = !DILocation(line: 6786, column: 9, scope: !8195)
!16016 = !DILocation(line: 6786, column: 2, scope: !8195)
!16017 = distinct !DISubprogram(name: "mgsl_irq_test", scope: !3, file: !3, line: 6795, type: !8190, scopeLine: 6796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16018 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16019)
!16019 = distinct !DILocation(line: 6830, column: 2, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16021, file: !3, line: 6830, column: 2)
!16021 = distinct !DILexicalBlock(scope: !16022, file: !3, line: 6830, column: 2)
!16022 = distinct !DILexicalBlock(scope: !16023, file: !3, line: 6830, column: 2)
!16023 = distinct !DILexicalBlock(scope: !16024, file: !3, line: 6830, column: 2)
!16024 = distinct !DILexicalBlock(scope: !16017, file: !3, line: 6830, column: 2)
!16025 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16026)
!16026 = distinct !DILocation(line: 6823, column: 2, scope: !16017)
!16027 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16026)
!16028 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16029)
!16029 = distinct !DILocation(line: 6832, column: 2, scope: !16017)
!16030 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16029)
!16031 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 6800, column: 2, scope: !16033)
!16033 = distinct !DILexicalBlock(scope: !16034, file: !3, line: 6800, column: 2)
!16034 = distinct !DILexicalBlock(scope: !16035, file: !3, line: 6800, column: 2)
!16035 = distinct !DILexicalBlock(scope: !16036, file: !3, line: 6800, column: 2)
!16036 = distinct !DILexicalBlock(scope: !16037, file: !3, line: 6800, column: 2)
!16037 = distinct !DILexicalBlock(scope: !16017, file: !3, line: 6800, column: 2)
!16038 = !DILocalVariable(name: "info", arg: 1, scope: !16017, file: !3, line: 6795, type: !7524)
!16039 = !DILocation(line: 6795, column: 48, scope: !16017)
!16040 = !DILocalVariable(name: "EndTime", scope: !16017, file: !3, line: 6797, type: !312)
!16041 = !DILocation(line: 6797, column: 16, scope: !16017)
!16042 = !DILocalVariable(name: "flags", scope: !16017, file: !3, line: 6798, type: !312)
!16043 = !DILocation(line: 6798, column: 16, scope: !16017)
!16044 = !DILocation(line: 6800, column: 2, scope: !16017)
!16045 = !DILocation(line: 6800, column: 2, scope: !16037)
!16046 = !DILocalVariable(name: "__dummy", scope: !16047, file: !3, line: 6800, type: !312)
!16047 = distinct !DILexicalBlock(scope: !16036, file: !3, line: 6800, column: 2)
!16048 = !DILocation(line: 6800, column: 2, scope: !16047)
!16049 = !DILocalVariable(name: "__dummy2", scope: !16047, file: !3, line: 6800, type: !312)
!16050 = !DILocation(line: 6800, column: 2, scope: !16036)
!16051 = !DILocation(line: 6800, column: 2, scope: !16035)
!16052 = !DILocation(line: 6800, column: 2, scope: !16053)
!16053 = distinct !DILexicalBlock(scope: !16035, file: !3, line: 6800, column: 2)
!16054 = !DILocalVariable(name: "__dummy", scope: !16055, file: !3, line: 6800, type: !312)
!16055 = distinct !DILexicalBlock(scope: !16056, file: !3, line: 6800, column: 2)
!16056 = distinct !DILexicalBlock(scope: !16053, file: !3, line: 6800, column: 2)
!16057 = !DILocation(line: 6800, column: 2, scope: !16055)
!16058 = !DILocalVariable(name: "__dummy2", scope: !16055, file: !3, line: 6800, type: !312)
!16059 = !DILocation(line: 6800, column: 2, scope: !16056)
!16060 = !DILocation(line: 6800, column: 2, scope: !16034)
!16061 = !{i32 -2139344252}
!16062 = !DILocation(line: 6800, column: 2, scope: !16033)
!16063 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16032)
!16064 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16032)
!16065 = !DILocation(line: 6801, column: 12, scope: !16017)
!16066 = !DILocation(line: 6801, column: 2, scope: !16017)
!16067 = !DILocation(line: 6808, column: 2, scope: !16017)
!16068 = !DILocation(line: 6808, column: 8, scope: !16017)
!16069 = !DILocation(line: 6808, column: 21, scope: !16017)
!16070 = !DILocation(line: 6814, column: 14, scope: !16017)
!16071 = !DILocation(line: 6814, column: 53, scope: !16017)
!16072 = !DILocation(line: 6814, column: 43, scope: !16017)
!16073 = !DILocation(line: 6814, column: 64, scope: !16017)
!16074 = !DILocation(line: 6814, column: 73, scope: !16017)
!16075 = !DILocation(line: 6814, column: 25, scope: !16017)
!16076 = !DILocation(line: 6814, column: 2, scope: !16017)
!16077 = !DILocation(line: 6816, column: 2, scope: !16017)
!16078 = !DILocation(line: 6817, column: 2, scope: !16017)
!16079 = !DILocation(line: 6818, column: 2, scope: !16017)
!16080 = !DILocation(line: 6820, column: 2, scope: !16017)
!16081 = !DILocation(line: 6821, column: 2, scope: !16017)
!16082 = !DILocation(line: 6823, column: 26, scope: !16017)
!16083 = !DILocation(line: 6823, column: 32, scope: !16017)
!16084 = !DILocation(line: 6823, column: 45, scope: !16017)
!16085 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16026)
!16086 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16026)
!16087 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16026)
!16088 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16026)
!16089 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16026)
!16090 = !DILocation(line: 6825, column: 9, scope: !16017)
!16091 = !DILocation(line: 6826, column: 2, scope: !16017)
!16092 = !DILocation(line: 6826, column: 16, scope: !16017)
!16093 = !DILocation(line: 6826, column: 19, scope: !16017)
!16094 = !DILocation(line: 6826, column: 23, scope: !16017)
!16095 = !DILocation(line: 6826, column: 29, scope: !16017)
!16096 = !DILocation(line: 6826, column: 22, scope: !16017)
!16097 = !DILocation(line: 0, scope: !16017)
!16098 = !DILocation(line: 6827, column: 3, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16017, file: !3, line: 6826, column: 44)
!16100 = distinct !{!16100, !16091, !16101}
!16101 = !DILocation(line: 6828, column: 2, scope: !16017)
!16102 = !DILocation(line: 6830, column: 2, scope: !16017)
!16103 = !DILocation(line: 6830, column: 2, scope: !16024)
!16104 = !DILocalVariable(name: "__dummy", scope: !16105, file: !3, line: 6830, type: !312)
!16105 = distinct !DILexicalBlock(scope: !16023, file: !3, line: 6830, column: 2)
!16106 = !DILocation(line: 6830, column: 2, scope: !16105)
!16107 = !DILocalVariable(name: "__dummy2", scope: !16105, file: !3, line: 6830, type: !312)
!16108 = !DILocation(line: 6830, column: 2, scope: !16023)
!16109 = !DILocation(line: 6830, column: 2, scope: !16022)
!16110 = !DILocation(line: 6830, column: 2, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16022, file: !3, line: 6830, column: 2)
!16112 = !DILocalVariable(name: "__dummy", scope: !16113, file: !3, line: 6830, type: !312)
!16113 = distinct !DILexicalBlock(scope: !16114, file: !3, line: 6830, column: 2)
!16114 = distinct !DILexicalBlock(scope: !16111, file: !3, line: 6830, column: 2)
!16115 = !DILocation(line: 6830, column: 2, scope: !16113)
!16116 = !DILocalVariable(name: "__dummy2", scope: !16113, file: !3, line: 6830, type: !312)
!16117 = !DILocation(line: 6830, column: 2, scope: !16114)
!16118 = !DILocation(line: 6830, column: 2, scope: !16021)
!16119 = !{i32 -2139342694}
!16120 = !DILocation(line: 6830, column: 2, scope: !16020)
!16121 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16019)
!16122 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16019)
!16123 = !DILocation(line: 6831, column: 12, scope: !16017)
!16124 = !DILocation(line: 6831, column: 2, scope: !16017)
!16125 = !DILocation(line: 6832, column: 26, scope: !16017)
!16126 = !DILocation(line: 6832, column: 32, scope: !16017)
!16127 = !DILocation(line: 6832, column: 45, scope: !16017)
!16128 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16029)
!16129 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16029)
!16130 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16029)
!16131 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16029)
!16132 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16029)
!16133 = !DILocation(line: 6834, column: 9, scope: !16017)
!16134 = !DILocation(line: 6834, column: 15, scope: !16017)
!16135 = !DILocation(line: 6834, column: 2, scope: !16017)
!16136 = distinct !DISubprogram(name: "mgsl_dma_test", scope: !3, file: !3, line: 6847, type: !8190, scopeLine: 6848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16137 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16138)
!16138 = distinct !DILocation(line: 7121, column: 2, scope: !16139)
!16139 = distinct !DILexicalBlock(scope: !16140, file: !3, line: 7121, column: 2)
!16140 = distinct !DILexicalBlock(scope: !16141, file: !3, line: 7121, column: 2)
!16141 = distinct !DILexicalBlock(scope: !16142, file: !3, line: 7121, column: 2)
!16142 = distinct !DILexicalBlock(scope: !16143, file: !3, line: 7121, column: 2)
!16143 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 7121, column: 2)
!16144 = !DILocation(line: 363, column: 74, scope: !14219, inlinedAt: !16145)
!16145 = distinct !DILocation(line: 7092, column: 23, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16147, file: !3, line: 7088, column: 12)
!16147 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 7088, column: 7)
!16148 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16149)
!16149 = distinct !DILocation(line: 7077, column: 4, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16151, file: !3, line: 7069, column: 60)
!16151 = distinct !DILexicalBlock(scope: !16152, file: !3, line: 7044, column: 2)
!16152 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 7043, column: 7)
!16153 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16149)
!16154 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16155)
!16155 = distinct !DILocation(line: 7075, column: 4, scope: !16156)
!16156 = distinct !DILexicalBlock(scope: !16157, file: !3, line: 7075, column: 4)
!16157 = distinct !DILexicalBlock(scope: !16158, file: !3, line: 7075, column: 4)
!16158 = distinct !DILexicalBlock(scope: !16159, file: !3, line: 7075, column: 4)
!16159 = distinct !DILexicalBlock(scope: !16160, file: !3, line: 7075, column: 4)
!16160 = distinct !DILexicalBlock(scope: !16150, file: !3, line: 7075, column: 4)
!16161 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16162)
!16162 = distinct !DILocation(line: 7067, column: 3, scope: !16151)
!16163 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16162)
!16164 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16165)
!16165 = distinct !DILocation(line: 7065, column: 3, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16167, file: !3, line: 7065, column: 3)
!16167 = distinct !DILexicalBlock(scope: !16168, file: !3, line: 7065, column: 3)
!16168 = distinct !DILexicalBlock(scope: !16169, file: !3, line: 7065, column: 3)
!16169 = distinct !DILexicalBlock(scope: !16170, file: !3, line: 7065, column: 3)
!16170 = distinct !DILexicalBlock(scope: !16151, file: !3, line: 7065, column: 3)
!16171 = !DILocation(line: 363, column: 74, scope: !14219, inlinedAt: !16172)
!16172 = distinct !DILocation(line: 7061, column: 23, scope: !16151)
!16173 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16174)
!16174 = distinct !DILocation(line: 7053, column: 3, scope: !16151)
!16175 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16174)
!16176 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 7047, column: 3, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16179, file: !3, line: 7047, column: 3)
!16179 = distinct !DILexicalBlock(scope: !16180, file: !3, line: 7047, column: 3)
!16180 = distinct !DILexicalBlock(scope: !16181, file: !3, line: 7047, column: 3)
!16181 = distinct !DILexicalBlock(scope: !16182, file: !3, line: 7047, column: 3)
!16182 = distinct !DILexicalBlock(scope: !16151, file: !3, line: 7047, column: 3)
!16183 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16184)
!16184 = distinct !DILocation(line: 7029, column: 3, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16186, file: !3, line: 7021, column: 10)
!16186 = distinct !DILexicalBlock(scope: !16187, file: !3, line: 7021, column: 2)
!16187 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 7021, column: 2)
!16188 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16184)
!16189 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16190)
!16190 = distinct !DILocation(line: 7027, column: 3, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16192, file: !3, line: 7027, column: 3)
!16192 = distinct !DILexicalBlock(scope: !16193, file: !3, line: 7027, column: 3)
!16193 = distinct !DILexicalBlock(scope: !16194, file: !3, line: 7027, column: 3)
!16194 = distinct !DILexicalBlock(scope: !16195, file: !3, line: 7027, column: 3)
!16195 = distinct !DILexicalBlock(scope: !16185, file: !3, line: 7027, column: 3)
!16196 = !DILocation(line: 363, column: 74, scope: !14219, inlinedAt: !16197)
!16197 = distinct !DILocation(line: 7019, column: 22, scope: !16136)
!16198 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16199)
!16199 = distinct !DILocation(line: 7011, column: 2, scope: !16136)
!16200 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16199)
!16201 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16202)
!16202 = distinct !DILocation(line: 6988, column: 2, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16204, file: !3, line: 6988, column: 2)
!16204 = distinct !DILexicalBlock(scope: !16205, file: !3, line: 6988, column: 2)
!16205 = distinct !DILexicalBlock(scope: !16206, file: !3, line: 6988, column: 2)
!16206 = distinct !DILexicalBlock(scope: !16207, file: !3, line: 6988, column: 2)
!16207 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 6988, column: 2)
!16208 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16209)
!16209 = distinct !DILocation(line: 6973, column: 3, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16211, file: !3, line: 6965, column: 10)
!16211 = distinct !DILexicalBlock(scope: !16212, file: !3, line: 6965, column: 2)
!16212 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 6965, column: 2)
!16213 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16209)
!16214 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16215)
!16215 = distinct !DILocation(line: 6971, column: 3, scope: !16216)
!16216 = distinct !DILexicalBlock(scope: !16217, file: !3, line: 6971, column: 3)
!16217 = distinct !DILexicalBlock(scope: !16218, file: !3, line: 6971, column: 3)
!16218 = distinct !DILexicalBlock(scope: !16219, file: !3, line: 6971, column: 3)
!16219 = distinct !DILexicalBlock(scope: !16220, file: !3, line: 6971, column: 3)
!16220 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 6971, column: 3)
!16221 = !DILocation(line: 363, column: 74, scope: !14219, inlinedAt: !16222)
!16222 = distinct !DILocation(line: 6963, column: 22, scope: !16136)
!16223 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16224)
!16224 = distinct !DILocation(line: 6955, column: 2, scope: !16136)
!16225 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16224)
!16226 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16227)
!16227 = distinct !DILocation(line: 6938, column: 2, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16229, file: !3, line: 6938, column: 2)
!16229 = distinct !DILexicalBlock(scope: !16230, file: !3, line: 6938, column: 2)
!16230 = distinct !DILexicalBlock(scope: !16231, file: !3, line: 6938, column: 2)
!16231 = distinct !DILexicalBlock(scope: !16232, file: !3, line: 6938, column: 2)
!16232 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 6938, column: 2)
!16233 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16234)
!16234 = distinct !DILocation(line: 6897, column: 2, scope: !16136)
!16235 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16234)
!16236 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !16237)
!16237 = distinct !DILocation(line: 7123, column: 2, scope: !16136)
!16238 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !16237)
!16239 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !16240)
!16240 = distinct !DILocation(line: 6867, column: 2, scope: !16241)
!16241 = distinct !DILexicalBlock(scope: !16242, file: !3, line: 6867, column: 2)
!16242 = distinct !DILexicalBlock(scope: !16243, file: !3, line: 6867, column: 2)
!16243 = distinct !DILexicalBlock(scope: !16244, file: !3, line: 6867, column: 2)
!16244 = distinct !DILexicalBlock(scope: !16245, file: !3, line: 6867, column: 2)
!16245 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 6867, column: 2)
!16246 = !DILocalVariable(name: "info", arg: 1, scope: !16136, file: !3, line: 6847, type: !7524)
!16247 = !DILocation(line: 6847, column: 48, scope: !16136)
!16248 = !DILocalVariable(name: "FifoLevel", scope: !16136, file: !3, line: 6849, type: !476)
!16249 = !DILocation(line: 6849, column: 17, scope: !16136)
!16250 = !DILocalVariable(name: "phys_addr", scope: !16136, file: !3, line: 6850, type: !312)
!16251 = !DILocation(line: 6850, column: 16, scope: !16136)
!16252 = !DILocalVariable(name: "FrameSize", scope: !16136, file: !3, line: 6851, type: !7)
!16253 = !DILocation(line: 6851, column: 15, scope: !16136)
!16254 = !DILocalVariable(name: "i", scope: !16136, file: !3, line: 6852, type: !7)
!16255 = !DILocation(line: 6852, column: 15, scope: !16136)
!16256 = !DILocalVariable(name: "TmpPtr", scope: !16136, file: !3, line: 6853, type: !1038)
!16257 = !DILocation(line: 6853, column: 8, scope: !16136)
!16258 = !DILocalVariable(name: "rc", scope: !16136, file: !3, line: 6854, type: !771)
!16259 = !DILocation(line: 6854, column: 7, scope: !16136)
!16260 = !DILocalVariable(name: "status", scope: !16136, file: !3, line: 6855, type: !476)
!16261 = !DILocation(line: 6855, column: 17, scope: !16136)
!16262 = !DILocalVariable(name: "EndTime", scope: !16136, file: !3, line: 6856, type: !312)
!16263 = !DILocation(line: 6856, column: 16, scope: !16136)
!16264 = !DILocalVariable(name: "flags", scope: !16136, file: !3, line: 6857, type: !312)
!16265 = !DILocation(line: 6857, column: 16, scope: !16136)
!16266 = !DILocalVariable(name: "tmp_params", scope: !16136, file: !3, line: 6858, type: !7646)
!16267 = !DILocation(line: 6858, column: 14, scope: !16136)
!16268 = !DILocation(line: 6861, column: 2, scope: !16136)
!16269 = !DILocation(line: 6861, column: 22, scope: !16136)
!16270 = !DILocation(line: 6861, column: 28, scope: !16136)
!16271 = !DILocation(line: 6863, column: 10, scope: !16136)
!16272 = !DILocation(line: 6863, column: 16, scope: !16136)
!16273 = !DILocation(line: 6863, column: 2, scope: !16136)
!16274 = !DILocation(line: 6867, column: 2, scope: !16136)
!16275 = !DILocation(line: 6867, column: 2, scope: !16245)
!16276 = !DILocalVariable(name: "__dummy", scope: !16277, file: !3, line: 6867, type: !312)
!16277 = distinct !DILexicalBlock(scope: !16244, file: !3, line: 6867, column: 2)
!16278 = !DILocation(line: 6867, column: 2, scope: !16277)
!16279 = !DILocalVariable(name: "__dummy2", scope: !16277, file: !3, line: 6867, type: !312)
!16280 = !DILocation(line: 6867, column: 2, scope: !16244)
!16281 = !DILocation(line: 6867, column: 2, scope: !16243)
!16282 = !DILocation(line: 6867, column: 2, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16243, file: !3, line: 6867, column: 2)
!16284 = !DILocalVariable(name: "__dummy", scope: !16285, file: !3, line: 6867, type: !312)
!16285 = distinct !DILexicalBlock(scope: !16286, file: !3, line: 6867, column: 2)
!16286 = distinct !DILexicalBlock(scope: !16283, file: !3, line: 6867, column: 2)
!16287 = !DILocation(line: 6867, column: 2, scope: !16285)
!16288 = !DILocalVariable(name: "__dummy2", scope: !16285, file: !3, line: 6867, type: !312)
!16289 = !DILocation(line: 6867, column: 2, scope: !16286)
!16290 = !DILocation(line: 6867, column: 2, scope: !16242)
!16291 = !{i32 -2139341619}
!16292 = !DILocation(line: 6867, column: 2, scope: !16241)
!16293 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16240)
!16294 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16240)
!16295 = !DILocation(line: 6871, column: 12, scope: !16136)
!16296 = !DILocation(line: 6871, column: 2, scope: !16136)
!16297 = !DILocation(line: 6872, column: 20, scope: !16136)
!16298 = !DILocation(line: 6872, column: 2, scope: !16136)
!16299 = !DILocation(line: 6873, column: 22, scope: !16136)
!16300 = !DILocation(line: 6873, column: 2, scope: !16136)
!16301 = !DILocation(line: 6895, column: 17, scope: !16136)
!16302 = !DILocation(line: 6895, column: 2, scope: !16136)
!16303 = !DILocation(line: 6897, column: 26, scope: !16136)
!16304 = !DILocation(line: 6897, column: 32, scope: !16136)
!16305 = !DILocation(line: 6897, column: 45, scope: !16136)
!16306 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16234)
!16307 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16234)
!16308 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16234)
!16309 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16234)
!16310 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16234)
!16311 = !DILocation(line: 6902, column: 12, scope: !16136)
!16312 = !DILocation(line: 6907, column: 35, scope: !16136)
!16313 = !DILocation(line: 6907, column: 2, scope: !16136)
!16314 = !DILocation(line: 6907, column: 8, scope: !16136)
!16315 = !DILocation(line: 6907, column: 26, scope: !16136)
!16316 = !DILocation(line: 6907, column: 33, scope: !16136)
!16317 = !DILocation(line: 6908, column: 35, scope: !16136)
!16318 = !DILocation(line: 6908, column: 2, scope: !16136)
!16319 = !DILocation(line: 6908, column: 8, scope: !16136)
!16320 = !DILocation(line: 6908, column: 26, scope: !16136)
!16321 = !DILocation(line: 6908, column: 33, scope: !16136)
!16322 = !DILocation(line: 6909, column: 2, scope: !16136)
!16323 = !DILocation(line: 6909, column: 8, scope: !16136)
!16324 = !DILocation(line: 6909, column: 26, scope: !16136)
!16325 = !DILocation(line: 6909, column: 33, scope: !16136)
!16326 = !DILocation(line: 6913, column: 11, scope: !16136)
!16327 = !DILocation(line: 6913, column: 17, scope: !16136)
!16328 = !DILocation(line: 6913, column: 35, scope: !16136)
!16329 = !DILocation(line: 6913, column: 9, scope: !16136)
!16330 = !DILocation(line: 6914, column: 9, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 6914, column: 2)
!16332 = !DILocation(line: 6914, column: 7, scope: !16331)
!16333 = !DILocation(line: 6914, column: 14, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16331, file: !3, line: 6914, column: 2)
!16335 = !DILocation(line: 6914, column: 18, scope: !16334)
!16336 = !DILocation(line: 6914, column: 16, scope: !16334)
!16337 = !DILocation(line: 6914, column: 2, scope: !16331)
!16338 = !DILocation(line: 6915, column: 15, scope: !16334)
!16339 = !DILocation(line: 6915, column: 10, scope: !16334)
!16340 = !DILocation(line: 6915, column: 13, scope: !16334)
!16341 = !DILocation(line: 6915, column: 3, scope: !16334)
!16342 = !DILocation(line: 6914, column: 30, scope: !16334)
!16343 = !DILocation(line: 6914, column: 2, scope: !16334)
!16344 = distinct !{!16344, !16337, !16345}
!16345 = !DILocation(line: 6915, column: 15, scope: !16331)
!16346 = !DILocation(line: 6920, column: 2, scope: !16136)
!16347 = !DILocation(line: 6920, column: 8, scope: !16136)
!16348 = !DILocation(line: 6920, column: 26, scope: !16136)
!16349 = !DILocation(line: 6920, column: 33, scope: !16136)
!16350 = !DILocation(line: 6921, column: 34, scope: !16136)
!16351 = !DILocation(line: 6921, column: 44, scope: !16136)
!16352 = !DILocation(line: 6921, column: 2, scope: !16136)
!16353 = !DILocation(line: 6921, column: 8, scope: !16136)
!16354 = !DILocation(line: 6921, column: 26, scope: !16136)
!16355 = !DILocation(line: 6921, column: 32, scope: !16136)
!16356 = !DILocation(line: 6925, column: 10, scope: !16136)
!16357 = !DILocation(line: 6925, column: 16, scope: !16136)
!16358 = !DILocation(line: 6925, column: 34, scope: !16136)
!16359 = !DILocation(line: 6925, column: 48, scope: !16136)
!16360 = !DILocation(line: 6925, column: 58, scope: !16136)
!16361 = !DILocation(line: 6925, column: 2, scope: !16136)
!16362 = !DILocation(line: 6930, column: 2, scope: !16136)
!16363 = !DILocation(line: 6930, column: 8, scope: !16136)
!16364 = !DILocation(line: 6930, column: 26, scope: !16136)
!16365 = !DILocation(line: 6930, column: 32, scope: !16136)
!16366 = !DILocation(line: 6931, column: 2, scope: !16136)
!16367 = !DILocation(line: 6931, column: 8, scope: !16136)
!16368 = !DILocation(line: 6931, column: 26, scope: !16136)
!16369 = !DILocation(line: 6931, column: 32, scope: !16136)
!16370 = !DILocation(line: 6938, column: 2, scope: !16136)
!16371 = !DILocation(line: 6938, column: 2, scope: !16232)
!16372 = !DILocalVariable(name: "__dummy", scope: !16373, file: !3, line: 6938, type: !312)
!16373 = distinct !DILexicalBlock(scope: !16231, file: !3, line: 6938, column: 2)
!16374 = !DILocation(line: 6938, column: 2, scope: !16373)
!16375 = !DILocalVariable(name: "__dummy2", scope: !16373, file: !3, line: 6938, type: !312)
!16376 = !DILocation(line: 6938, column: 2, scope: !16231)
!16377 = !DILocation(line: 6938, column: 2, scope: !16230)
!16378 = !DILocation(line: 6938, column: 2, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16230, file: !3, line: 6938, column: 2)
!16380 = !DILocalVariable(name: "__dummy", scope: !16381, file: !3, line: 6938, type: !312)
!16381 = distinct !DILexicalBlock(scope: !16382, file: !3, line: 6938, column: 2)
!16382 = distinct !DILexicalBlock(scope: !16379, file: !3, line: 6938, column: 2)
!16383 = !DILocation(line: 6938, column: 2, scope: !16381)
!16384 = !DILocalVariable(name: "__dummy2", scope: !16381, file: !3, line: 6938, type: !312)
!16385 = !DILocation(line: 6938, column: 2, scope: !16382)
!16386 = !DILocation(line: 6938, column: 2, scope: !16229)
!16387 = !{i32 -2139340536}
!16388 = !DILocation(line: 6938, column: 2, scope: !16228)
!16389 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16227)
!16390 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16227)
!16391 = !DILocation(line: 6941, column: 13, scope: !16136)
!16392 = !DILocation(line: 6941, column: 2, scope: !16136)
!16393 = !DILocation(line: 6944, column: 14, scope: !16136)
!16394 = !DILocation(line: 6944, column: 20, scope: !16136)
!16395 = !DILocation(line: 6944, column: 38, scope: !16136)
!16396 = !DILocation(line: 6944, column: 12, scope: !16136)
!16397 = !DILocation(line: 6945, column: 17, scope: !16136)
!16398 = !DILocation(line: 6945, column: 46, scope: !16136)
!16399 = !DILocation(line: 6945, column: 30, scope: !16136)
!16400 = !DILocation(line: 6945, column: 2, scope: !16136)
!16401 = !DILocation(line: 6946, column: 17, scope: !16136)
!16402 = !DILocation(line: 6946, column: 47, scope: !16136)
!16403 = !DILocation(line: 6946, column: 57, scope: !16136)
!16404 = !DILocation(line: 6946, column: 30, scope: !16136)
!16405 = !DILocation(line: 6946, column: 2, scope: !16136)
!16406 = !DILocation(line: 6949, column: 16, scope: !16136)
!16407 = !DILocation(line: 6949, column: 2, scope: !16136)
!16408 = !DILocation(line: 6950, column: 14, scope: !16136)
!16409 = !DILocation(line: 6950, column: 2, scope: !16136)
!16410 = !DILocation(line: 6953, column: 14, scope: !16136)
!16411 = !DILocation(line: 6953, column: 53, scope: !16136)
!16412 = !DILocation(line: 6953, column: 43, scope: !16136)
!16413 = !DILocation(line: 6953, column: 64, scope: !16136)
!16414 = !DILocation(line: 6953, column: 74, scope: !16136)
!16415 = !DILocation(line: 6953, column: 25, scope: !16136)
!16416 = !DILocation(line: 6953, column: 2, scope: !16136)
!16417 = !DILocation(line: 6955, column: 26, scope: !16136)
!16418 = !DILocation(line: 6955, column: 32, scope: !16136)
!16419 = !DILocation(line: 6955, column: 45, scope: !16136)
!16420 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16224)
!16421 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16224)
!16422 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16224)
!16423 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16224)
!16424 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16224)
!16425 = !DILocation(line: 6963, column: 12, scope: !16136)
!16426 = !DILocation(line: 365, column: 27, scope: !14362, inlinedAt: !16222)
!16427 = !DILocation(line: 365, column: 6, scope: !14362, inlinedAt: !16222)
!16428 = !DILocation(line: 365, column: 6, scope: !14219, inlinedAt: !16222)
!16429 = !DILocation(line: 366, column: 12, scope: !14366, inlinedAt: !16222)
!16430 = !DILocation(line: 366, column: 14, scope: !14366, inlinedAt: !16222)
!16431 = !DILocation(line: 366, column: 7, scope: !14367, inlinedAt: !16222)
!16432 = !DILocation(line: 367, column: 4, scope: !14366, inlinedAt: !16222)
!16433 = !DILocation(line: 368, column: 28, scope: !14367, inlinedAt: !16222)
!16434 = !DILocation(line: 368, column: 10, scope: !14367, inlinedAt: !16222)
!16435 = !DILocation(line: 368, column: 3, scope: !14367, inlinedAt: !16222)
!16436 = !DILocation(line: 370, column: 29, scope: !14375, inlinedAt: !16222)
!16437 = !DILocation(line: 370, column: 10, scope: !14375, inlinedAt: !16222)
!16438 = !DILocation(line: 370, column: 3, scope: !14375, inlinedAt: !16222)
!16439 = !DILocation(line: 372, column: 1, scope: !14219, inlinedAt: !16222)
!16440 = !DILocation(line: 6963, column: 20, scope: !16136)
!16441 = !DILocation(line: 6963, column: 10, scope: !16136)
!16442 = !DILocation(line: 6965, column: 2, scope: !16136)
!16443 = !DILocation(line: 6966, column: 7, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 6966, column: 7)
!16445 = !DILocation(line: 6966, column: 7, scope: !16210)
!16446 = !DILocation(line: 6967, column: 7, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16444, file: !3, line: 6966, column: 37)
!16448 = !DILocation(line: 6968, column: 4, scope: !16447)
!16449 = !DILocation(line: 6971, column: 3, scope: !16210)
!16450 = !DILocation(line: 6971, column: 3, scope: !16220)
!16451 = !DILocalVariable(name: "__dummy", scope: !16452, file: !3, line: 6971, type: !312)
!16452 = distinct !DILexicalBlock(scope: !16219, file: !3, line: 6971, column: 3)
!16453 = !DILocation(line: 6971, column: 3, scope: !16452)
!16454 = !DILocalVariable(name: "__dummy2", scope: !16452, file: !3, line: 6971, type: !312)
!16455 = !DILocation(line: 6971, column: 3, scope: !16219)
!16456 = !DILocation(line: 6971, column: 3, scope: !16218)
!16457 = !DILocation(line: 6971, column: 3, scope: !16458)
!16458 = distinct !DILexicalBlock(scope: !16218, file: !3, line: 6971, column: 3)
!16459 = !DILocalVariable(name: "__dummy", scope: !16460, file: !3, line: 6971, type: !312)
!16460 = distinct !DILexicalBlock(scope: !16461, file: !3, line: 6971, column: 3)
!16461 = distinct !DILexicalBlock(scope: !16458, file: !3, line: 6971, column: 3)
!16462 = !DILocation(line: 6971, column: 3, scope: !16460)
!16463 = !DILocalVariable(name: "__dummy2", scope: !16460, file: !3, line: 6971, type: !312)
!16464 = !DILocation(line: 6971, column: 3, scope: !16461)
!16465 = !DILocation(line: 6971, column: 3, scope: !16217)
!16466 = !{i32 -2139339076}
!16467 = !DILocation(line: 6971, column: 3, scope: !16216)
!16468 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16215)
!16469 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16215)
!16470 = !DILocation(line: 6972, column: 26, scope: !16210)
!16471 = !DILocation(line: 6972, column: 12, scope: !16210)
!16472 = !DILocation(line: 6972, column: 10, scope: !16210)
!16473 = !DILocation(line: 6973, column: 27, scope: !16210)
!16474 = !DILocation(line: 6973, column: 33, scope: !16210)
!16475 = !DILocation(line: 6973, column: 46, scope: !16210)
!16476 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16209)
!16477 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16209)
!16478 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16209)
!16479 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16209)
!16480 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16209)
!16481 = !DILocation(line: 6975, column: 10, scope: !16482)
!16482 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 6975, column: 8)
!16483 = !DILocation(line: 6975, column: 17, scope: !16482)
!16484 = !DILocation(line: 6975, column: 25, scope: !16482)
!16485 = !DILocation(line: 6975, column: 29, scope: !16482)
!16486 = !DILocation(line: 6975, column: 36, scope: !16482)
!16487 = !DILocation(line: 6975, column: 8, scope: !16210)
!16488 = !DILocation(line: 6979, column: 4, scope: !16489)
!16489 = distinct !DILexicalBlock(scope: !16482, file: !3, line: 6975, column: 46)
!16490 = !DILocation(line: 6965, column: 2, scope: !16211)
!16491 = distinct !{!16491, !16492, !16493}
!16492 = !DILocation(line: 6965, column: 2, scope: !16212)
!16493 = !DILocation(line: 6981, column: 2, scope: !16212)
!16494 = !DILocation(line: 6988, column: 2, scope: !16136)
!16495 = !DILocation(line: 6988, column: 2, scope: !16207)
!16496 = !DILocalVariable(name: "__dummy", scope: !16497, file: !3, line: 6988, type: !312)
!16497 = distinct !DILexicalBlock(scope: !16206, file: !3, line: 6988, column: 2)
!16498 = !DILocation(line: 6988, column: 2, scope: !16497)
!16499 = !DILocalVariable(name: "__dummy2", scope: !16497, file: !3, line: 6988, type: !312)
!16500 = !DILocation(line: 6988, column: 2, scope: !16206)
!16501 = !DILocation(line: 6988, column: 2, scope: !16205)
!16502 = !DILocation(line: 6988, column: 2, scope: !16503)
!16503 = distinct !DILexicalBlock(scope: !16205, file: !3, line: 6988, column: 2)
!16504 = !DILocalVariable(name: "__dummy", scope: !16505, file: !3, line: 6988, type: !312)
!16505 = distinct !DILexicalBlock(scope: !16506, file: !3, line: 6988, column: 2)
!16506 = distinct !DILexicalBlock(scope: !16503, file: !3, line: 6988, column: 2)
!16507 = !DILocation(line: 6988, column: 2, scope: !16505)
!16508 = !DILocalVariable(name: "__dummy2", scope: !16505, file: !3, line: 6988, type: !312)
!16509 = !DILocation(line: 6988, column: 2, scope: !16506)
!16510 = !DILocation(line: 6988, column: 2, scope: !16204)
!16511 = !{i32 -2139337982}
!16512 = !DILocation(line: 6988, column: 2, scope: !16203)
!16513 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16202)
!16514 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16202)
!16515 = !DILocation(line: 6993, column: 14, scope: !16136)
!16516 = !DILocation(line: 6993, column: 42, scope: !16136)
!16517 = !DILocation(line: 6993, column: 48, scope: !16136)
!16518 = !DILocation(line: 6993, column: 66, scope: !16136)
!16519 = !DILocation(line: 6993, column: 2, scope: !16136)
!16520 = !DILocation(line: 6994, column: 13, scope: !16136)
!16521 = !DILocation(line: 6994, column: 2, scope: !16136)
!16522 = !DILocation(line: 6998, column: 14, scope: !16136)
!16523 = !DILocation(line: 6998, column: 20, scope: !16136)
!16524 = !DILocation(line: 6998, column: 38, scope: !16136)
!16525 = !DILocation(line: 6998, column: 12, scope: !16136)
!16526 = !DILocation(line: 6999, column: 17, scope: !16136)
!16527 = !DILocation(line: 6999, column: 46, scope: !16136)
!16528 = !DILocation(line: 6999, column: 30, scope: !16136)
!16529 = !DILocation(line: 6999, column: 2, scope: !16136)
!16530 = !DILocation(line: 7000, column: 17, scope: !16136)
!16531 = !DILocation(line: 7000, column: 47, scope: !16136)
!16532 = !DILocation(line: 7000, column: 57, scope: !16136)
!16533 = !DILocation(line: 7000, column: 30, scope: !16136)
!16534 = !DILocation(line: 7000, column: 2, scope: !16136)
!16535 = !DILocation(line: 7004, column: 14, scope: !16136)
!16536 = !DILocation(line: 7004, column: 55, scope: !16136)
!16537 = !DILocation(line: 7004, column: 45, scope: !16136)
!16538 = !DILocation(line: 7004, column: 67, scope: !16136)
!16539 = !DILocation(line: 7004, column: 77, scope: !16136)
!16540 = !DILocation(line: 7004, column: 26, scope: !16136)
!16541 = !DILocation(line: 7004, column: 2, scope: !16136)
!16542 = !DILocation(line: 7005, column: 14, scope: !16136)
!16543 = !DILocation(line: 7005, column: 2, scope: !16136)
!16544 = !DILocation(line: 7009, column: 2, scope: !16136)
!16545 = !DILocation(line: 7011, column: 26, scope: !16136)
!16546 = !DILocation(line: 7011, column: 32, scope: !16136)
!16547 = !DILocation(line: 7011, column: 45, scope: !16136)
!16548 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16199)
!16549 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16199)
!16550 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16199)
!16551 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16199)
!16552 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16199)
!16553 = !DILocation(line: 7019, column: 12, scope: !16136)
!16554 = !DILocation(line: 365, column: 27, scope: !14362, inlinedAt: !16197)
!16555 = !DILocation(line: 365, column: 6, scope: !14362, inlinedAt: !16197)
!16556 = !DILocation(line: 365, column: 6, scope: !14219, inlinedAt: !16197)
!16557 = !DILocation(line: 366, column: 12, scope: !14366, inlinedAt: !16197)
!16558 = !DILocation(line: 366, column: 14, scope: !14366, inlinedAt: !16197)
!16559 = !DILocation(line: 366, column: 7, scope: !14367, inlinedAt: !16197)
!16560 = !DILocation(line: 367, column: 4, scope: !14366, inlinedAt: !16197)
!16561 = !DILocation(line: 368, column: 28, scope: !14367, inlinedAt: !16197)
!16562 = !DILocation(line: 368, column: 10, scope: !14367, inlinedAt: !16197)
!16563 = !DILocation(line: 368, column: 3, scope: !14367, inlinedAt: !16197)
!16564 = !DILocation(line: 370, column: 29, scope: !14375, inlinedAt: !16197)
!16565 = !DILocation(line: 370, column: 10, scope: !14375, inlinedAt: !16197)
!16566 = !DILocation(line: 370, column: 3, scope: !14375, inlinedAt: !16197)
!16567 = !DILocation(line: 372, column: 1, scope: !14219, inlinedAt: !16197)
!16568 = !DILocation(line: 7019, column: 20, scope: !16136)
!16569 = !DILocation(line: 7019, column: 10, scope: !16136)
!16570 = !DILocation(line: 7021, column: 2, scope: !16136)
!16571 = !DILocation(line: 7022, column: 7, scope: !16572)
!16572 = distinct !DILexicalBlock(scope: !16185, file: !3, line: 7022, column: 7)
!16573 = !DILocation(line: 7022, column: 7, scope: !16185)
!16574 = !DILocation(line: 7023, column: 7, scope: !16575)
!16575 = distinct !DILexicalBlock(scope: !16572, file: !3, line: 7022, column: 37)
!16576 = !DILocation(line: 7024, column: 4, scope: !16575)
!16577 = !DILocation(line: 7027, column: 3, scope: !16185)
!16578 = !DILocation(line: 7027, column: 3, scope: !16195)
!16579 = !DILocalVariable(name: "__dummy", scope: !16580, file: !3, line: 7027, type: !312)
!16580 = distinct !DILexicalBlock(scope: !16194, file: !3, line: 7027, column: 3)
!16581 = !DILocation(line: 7027, column: 3, scope: !16580)
!16582 = !DILocalVariable(name: "__dummy2", scope: !16580, file: !3, line: 7027, type: !312)
!16583 = !DILocation(line: 7027, column: 3, scope: !16194)
!16584 = !DILocation(line: 7027, column: 3, scope: !16193)
!16585 = !DILocation(line: 7027, column: 3, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16193, file: !3, line: 7027, column: 3)
!16587 = !DILocalVariable(name: "__dummy", scope: !16588, file: !3, line: 7027, type: !312)
!16588 = distinct !DILexicalBlock(scope: !16589, file: !3, line: 7027, column: 3)
!16589 = distinct !DILexicalBlock(scope: !16586, file: !3, line: 7027, column: 3)
!16590 = !DILocation(line: 7027, column: 3, scope: !16588)
!16591 = !DILocalVariable(name: "__dummy2", scope: !16588, file: !3, line: 7027, type: !312)
!16592 = !DILocation(line: 7027, column: 3, scope: !16589)
!16593 = !DILocation(line: 7027, column: 3, scope: !16192)
!16594 = !{i32 -2139336441}
!16595 = !DILocation(line: 7027, column: 3, scope: !16191)
!16596 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16190)
!16597 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16190)
!16598 = !DILocation(line: 7028, column: 25, scope: !16185)
!16599 = !DILocation(line: 7028, column: 15, scope: !16185)
!16600 = !DILocation(line: 7028, column: 37, scope: !16185)
!16601 = !DILocation(line: 7028, column: 13, scope: !16185)
!16602 = !DILocation(line: 7029, column: 27, scope: !16185)
!16603 = !DILocation(line: 7029, column: 33, scope: !16185)
!16604 = !DILocation(line: 7029, column: 46, scope: !16185)
!16605 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16184)
!16606 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16184)
!16607 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16184)
!16608 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16184)
!16609 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16184)
!16610 = !DILocation(line: 7031, column: 8, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16185, file: !3, line: 7031, column: 8)
!16612 = !DILocation(line: 7031, column: 18, scope: !16611)
!16613 = !DILocation(line: 7031, column: 8, scope: !16185)
!16614 = !DILocation(line: 7032, column: 4, scope: !16611)
!16615 = !DILocation(line: 7034, column: 9, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16611, file: !3, line: 7034, column: 9)
!16617 = !DILocation(line: 7034, column: 19, scope: !16616)
!16618 = !DILocation(line: 7034, column: 9, scope: !16611)
!16619 = !DILocation(line: 7037, column: 10, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16621, file: !3, line: 7037, column: 10)
!16621 = distinct !DILexicalBlock(scope: !16616, file: !3, line: 7034, column: 26)
!16622 = !DILocation(line: 7037, column: 29, scope: !16620)
!16623 = !DILocation(line: 7037, column: 27, scope: !16620)
!16624 = !DILocation(line: 7037, column: 20, scope: !16620)
!16625 = !DILocation(line: 7037, column: 10, scope: !16621)
!16626 = !DILocation(line: 7038, column: 6, scope: !16620)
!16627 = !DILocation(line: 7039, column: 4, scope: !16621)
!16628 = !DILocation(line: 7021, column: 2, scope: !16186)
!16629 = distinct !{!16629, !16630, !16631}
!16630 = !DILocation(line: 7021, column: 2, scope: !16187)
!16631 = !DILocation(line: 7040, column: 2, scope: !16187)
!16632 = !DILocation(line: 7043, column: 7, scope: !16152)
!16633 = !DILocation(line: 7043, column: 7, scope: !16136)
!16634 = !DILocation(line: 7047, column: 3, scope: !16151)
!16635 = !DILocation(line: 7047, column: 3, scope: !16182)
!16636 = !DILocalVariable(name: "__dummy", scope: !16637, file: !3, line: 7047, type: !312)
!16637 = distinct !DILexicalBlock(scope: !16181, file: !3, line: 7047, column: 3)
!16638 = !DILocation(line: 7047, column: 3, scope: !16637)
!16639 = !DILocalVariable(name: "__dummy2", scope: !16637, file: !3, line: 7047, type: !312)
!16640 = !DILocation(line: 7047, column: 3, scope: !16181)
!16641 = !DILocation(line: 7047, column: 3, scope: !16180)
!16642 = !DILocation(line: 7047, column: 3, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16180, file: !3, line: 7047, column: 3)
!16644 = !DILocalVariable(name: "__dummy", scope: !16645, file: !3, line: 7047, type: !312)
!16645 = distinct !DILexicalBlock(scope: !16646, file: !3, line: 7047, column: 3)
!16646 = distinct !DILexicalBlock(scope: !16643, file: !3, line: 7047, column: 3)
!16647 = !DILocation(line: 7047, column: 3, scope: !16645)
!16648 = !DILocalVariable(name: "__dummy2", scope: !16645, file: !3, line: 7047, type: !312)
!16649 = !DILocation(line: 7047, column: 3, scope: !16646)
!16650 = !DILocation(line: 7047, column: 3, scope: !16179)
!16651 = !{i32 -2139335361}
!16652 = !DILocation(line: 7047, column: 3, scope: !16178)
!16653 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16177)
!16654 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16177)
!16655 = !DILocation(line: 7050, column: 3, scope: !16151)
!16656 = !DILocation(line: 7051, column: 15, scope: !16151)
!16657 = !DILocation(line: 7051, column: 54, scope: !16151)
!16658 = !DILocation(line: 7051, column: 44, scope: !16151)
!16659 = !DILocation(line: 7051, column: 65, scope: !16151)
!16660 = !DILocation(line: 7051, column: 75, scope: !16151)
!16661 = !DILocation(line: 7051, column: 26, scope: !16151)
!16662 = !DILocation(line: 7051, column: 3, scope: !16151)
!16663 = !DILocation(line: 7053, column: 27, scope: !16151)
!16664 = !DILocation(line: 7053, column: 33, scope: !16151)
!16665 = !DILocation(line: 7053, column: 46, scope: !16151)
!16666 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16174)
!16667 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16174)
!16668 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16174)
!16669 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16174)
!16670 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16174)
!16671 = !DILocation(line: 7061, column: 13, scope: !16151)
!16672 = !DILocation(line: 365, column: 27, scope: !14362, inlinedAt: !16172)
!16673 = !DILocation(line: 365, column: 6, scope: !14362, inlinedAt: !16172)
!16674 = !DILocation(line: 365, column: 6, scope: !14219, inlinedAt: !16172)
!16675 = !DILocation(line: 366, column: 12, scope: !14366, inlinedAt: !16172)
!16676 = !DILocation(line: 366, column: 14, scope: !14366, inlinedAt: !16172)
!16677 = !DILocation(line: 366, column: 7, scope: !14367, inlinedAt: !16172)
!16678 = !DILocation(line: 367, column: 4, scope: !14366, inlinedAt: !16172)
!16679 = !DILocation(line: 368, column: 28, scope: !14367, inlinedAt: !16172)
!16680 = !DILocation(line: 368, column: 10, scope: !14367, inlinedAt: !16172)
!16681 = !DILocation(line: 368, column: 3, scope: !14367, inlinedAt: !16172)
!16682 = !DILocation(line: 370, column: 29, scope: !14375, inlinedAt: !16172)
!16683 = !DILocation(line: 370, column: 10, scope: !14375, inlinedAt: !16172)
!16684 = !DILocation(line: 370, column: 3, scope: !14375, inlinedAt: !16172)
!16685 = !DILocation(line: 372, column: 1, scope: !14219, inlinedAt: !16172)
!16686 = !DILocation(line: 7061, column: 21, scope: !16151)
!16687 = !DILocation(line: 7061, column: 11, scope: !16151)
!16688 = !DILocation(line: 7065, column: 3, scope: !16151)
!16689 = !DILocation(line: 7065, column: 3, scope: !16170)
!16690 = !DILocalVariable(name: "__dummy", scope: !16691, file: !3, line: 7065, type: !312)
!16691 = distinct !DILexicalBlock(scope: !16169, file: !3, line: 7065, column: 3)
!16692 = !DILocation(line: 7065, column: 3, scope: !16691)
!16693 = !DILocalVariable(name: "__dummy2", scope: !16691, file: !3, line: 7065, type: !312)
!16694 = !DILocation(line: 7065, column: 3, scope: !16169)
!16695 = !DILocation(line: 7065, column: 3, scope: !16168)
!16696 = !DILocation(line: 7065, column: 3, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16168, file: !3, line: 7065, column: 3)
!16698 = !DILocalVariable(name: "__dummy", scope: !16699, file: !3, line: 7065, type: !312)
!16699 = distinct !DILexicalBlock(scope: !16700, file: !3, line: 7065, column: 3)
!16700 = distinct !DILexicalBlock(scope: !16697, file: !3, line: 7065, column: 3)
!16701 = !DILocation(line: 7065, column: 3, scope: !16699)
!16702 = !DILocalVariable(name: "__dummy2", scope: !16699, file: !3, line: 7065, type: !312)
!16703 = !DILocation(line: 7065, column: 3, scope: !16700)
!16704 = !DILocation(line: 7065, column: 3, scope: !16167)
!16705 = !{i32 -2139334195}
!16706 = !DILocation(line: 7065, column: 3, scope: !16166)
!16707 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16165)
!16708 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16165)
!16709 = !DILocation(line: 7066, column: 23, scope: !16151)
!16710 = !DILocation(line: 7066, column: 12, scope: !16151)
!16711 = !DILocation(line: 7066, column: 10, scope: !16151)
!16712 = !DILocation(line: 7067, column: 27, scope: !16151)
!16713 = !DILocation(line: 7067, column: 33, scope: !16151)
!16714 = !DILocation(line: 7067, column: 46, scope: !16151)
!16715 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16162)
!16716 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16162)
!16717 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16162)
!16718 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16162)
!16719 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16162)
!16720 = !DILocation(line: 7069, column: 3, scope: !16151)
!16721 = !DILocation(line: 7069, column: 13, scope: !16151)
!16722 = !DILocation(line: 7069, column: 20, scope: !16151)
!16723 = !DILocation(line: 7069, column: 11, scope: !16151)
!16724 = !DILocation(line: 7070, column: 8, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16150, file: !3, line: 7070, column: 8)
!16726 = !DILocation(line: 7070, column: 8, scope: !16150)
!16727 = !DILocation(line: 7071, column: 8, scope: !16728)
!16728 = distinct !DILexicalBlock(scope: !16725, file: !3, line: 7070, column: 38)
!16729 = !DILocation(line: 7072, column: 5, scope: !16728)
!16730 = !DILocation(line: 7075, column: 4, scope: !16150)
!16731 = !DILocation(line: 7075, column: 4, scope: !16160)
!16732 = !DILocalVariable(name: "__dummy", scope: !16733, file: !3, line: 7075, type: !312)
!16733 = distinct !DILexicalBlock(scope: !16159, file: !3, line: 7075, column: 4)
!16734 = !DILocation(line: 7075, column: 4, scope: !16733)
!16735 = !DILocalVariable(name: "__dummy2", scope: !16733, file: !3, line: 7075, type: !312)
!16736 = !DILocation(line: 7075, column: 4, scope: !16159)
!16737 = !DILocation(line: 7075, column: 4, scope: !16158)
!16738 = !DILocation(line: 7075, column: 4, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16158, file: !3, line: 7075, column: 4)
!16740 = !DILocalVariable(name: "__dummy", scope: !16741, file: !3, line: 7075, type: !312)
!16741 = distinct !DILexicalBlock(scope: !16742, file: !3, line: 7075, column: 4)
!16742 = distinct !DILexicalBlock(scope: !16739, file: !3, line: 7075, column: 4)
!16743 = !DILocation(line: 7075, column: 4, scope: !16741)
!16744 = !DILocalVariable(name: "__dummy2", scope: !16741, file: !3, line: 7075, type: !312)
!16745 = !DILocation(line: 7075, column: 4, scope: !16742)
!16746 = !DILocation(line: 7075, column: 4, scope: !16157)
!16747 = !{i32 -2139332734}
!16748 = !DILocation(line: 7075, column: 4, scope: !16156)
!16749 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16155)
!16750 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16155)
!16751 = !DILocation(line: 7076, column: 24, scope: !16150)
!16752 = !DILocation(line: 7076, column: 13, scope: !16150)
!16753 = !DILocation(line: 7076, column: 11, scope: !16150)
!16754 = !DILocation(line: 7077, column: 28, scope: !16150)
!16755 = !DILocation(line: 7077, column: 34, scope: !16150)
!16756 = !DILocation(line: 7077, column: 47, scope: !16150)
!16757 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16149)
!16758 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16149)
!16759 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16149)
!16760 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16149)
!16761 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16149)
!16762 = distinct !{!16762, !16720, !16763}
!16763 = !DILocation(line: 7078, column: 3, scope: !16151)
!16764 = !DILocation(line: 7079, column: 2, scope: !16151)
!16765 = !DILocation(line: 7082, column: 7, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 7082, column: 7)
!16767 = !DILocation(line: 7082, column: 7, scope: !16136)
!16768 = !DILocation(line: 7084, column: 8, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16770, file: !3, line: 7084, column: 8)
!16770 = distinct !DILexicalBlock(scope: !16766, file: !3, line: 7082, column: 11)
!16771 = !DILocation(line: 7084, column: 15, scope: !16769)
!16772 = !DILocation(line: 7084, column: 8, scope: !16770)
!16773 = !DILocation(line: 7085, column: 7, scope: !16769)
!16774 = !DILocation(line: 7085, column: 4, scope: !16769)
!16775 = !DILocation(line: 7086, column: 2, scope: !16770)
!16776 = !DILocation(line: 7088, column: 7, scope: !16147)
!16777 = !DILocation(line: 7088, column: 7, scope: !16136)
!16778 = !DILocation(line: 7092, column: 13, scope: !16146)
!16779 = !DILocation(line: 365, column: 27, scope: !14362, inlinedAt: !16145)
!16780 = !DILocation(line: 365, column: 6, scope: !14362, inlinedAt: !16145)
!16781 = !DILocation(line: 365, column: 6, scope: !14219, inlinedAt: !16145)
!16782 = !DILocation(line: 366, column: 12, scope: !14366, inlinedAt: !16145)
!16783 = !DILocation(line: 366, column: 14, scope: !14366, inlinedAt: !16145)
!16784 = !DILocation(line: 366, column: 7, scope: !14367, inlinedAt: !16145)
!16785 = !DILocation(line: 367, column: 4, scope: !14366, inlinedAt: !16145)
!16786 = !DILocation(line: 368, column: 28, scope: !14367, inlinedAt: !16145)
!16787 = !DILocation(line: 368, column: 10, scope: !14367, inlinedAt: !16145)
!16788 = !DILocation(line: 368, column: 3, scope: !14367, inlinedAt: !16145)
!16789 = !DILocation(line: 370, column: 29, scope: !14375, inlinedAt: !16145)
!16790 = !DILocation(line: 370, column: 10, scope: !14375, inlinedAt: !16145)
!16791 = !DILocation(line: 370, column: 3, scope: !14375, inlinedAt: !16145)
!16792 = !DILocation(line: 372, column: 1, scope: !14219, inlinedAt: !16145)
!16793 = !DILocation(line: 7092, column: 21, scope: !16146)
!16794 = !DILocation(line: 7092, column: 11, scope: !16146)
!16795 = !DILocation(line: 7095, column: 10, scope: !16146)
!16796 = !DILocation(line: 7095, column: 16, scope: !16146)
!16797 = !DILocation(line: 7095, column: 34, scope: !16146)
!16798 = !DILocation(line: 7095, column: 9, scope: !16146)
!16799 = !DILocation(line: 7096, column: 3, scope: !16146)
!16800 = !DILocation(line: 7096, column: 11, scope: !16146)
!16801 = !DILocation(line: 7096, column: 18, scope: !16146)
!16802 = !DILocation(line: 7097, column: 8, scope: !16803)
!16803 = distinct !DILexicalBlock(scope: !16804, file: !3, line: 7097, column: 8)
!16804 = distinct !DILexicalBlock(scope: !16146, file: !3, line: 7096, column: 25)
!16805 = !DILocation(line: 7097, column: 8, scope: !16804)
!16806 = !DILocation(line: 7098, column: 8, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16803, file: !3, line: 7097, column: 38)
!16808 = !DILocation(line: 7099, column: 5, scope: !16807)
!16809 = !DILocation(line: 7101, column: 11, scope: !16804)
!16810 = !DILocation(line: 7101, column: 17, scope: !16804)
!16811 = !DILocation(line: 7101, column: 35, scope: !16804)
!16812 = !DILocation(line: 7101, column: 10, scope: !16804)
!16813 = distinct !{!16813, !16799, !16814}
!16814 = !DILocation(line: 7102, column: 3, scope: !16146)
!16815 = !DILocation(line: 7103, column: 2, scope: !16146)
!16816 = !DILocation(line: 7106, column: 7, scope: !16817)
!16817 = distinct !DILexicalBlock(scope: !16136, file: !3, line: 7106, column: 7)
!16818 = !DILocation(line: 7106, column: 7, scope: !16136)
!16819 = !DILocation(line: 7108, column: 12, scope: !16820)
!16820 = distinct !DILexicalBlock(scope: !16817, file: !3, line: 7106, column: 12)
!16821 = !DILocation(line: 7108, column: 18, scope: !16820)
!16822 = !DILocation(line: 7108, column: 36, scope: !16820)
!16823 = !DILocation(line: 7108, column: 10, scope: !16820)
!16824 = !DILocation(line: 7110, column: 8, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16820, file: !3, line: 7110, column: 8)
!16826 = !DILocation(line: 7110, column: 15, scope: !16825)
!16827 = !DILocation(line: 7110, column: 8, scope: !16820)
!16828 = !DILocation(line: 7112, column: 7, scope: !16829)
!16829 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 7110, column: 40)
!16830 = !DILocation(line: 7113, column: 3, scope: !16829)
!16831 = !DILocation(line: 7114, column: 17, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16833, file: !3, line: 7114, column: 9)
!16833 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 7113, column: 10)
!16834 = !DILocation(line: 7114, column: 23, scope: !16832)
!16835 = !DILocation(line: 7114, column: 41, scope: !16832)
!16836 = !DILocation(line: 7115, column: 5, scope: !16832)
!16837 = !DILocation(line: 7115, column: 11, scope: !16832)
!16838 = !DILocation(line: 7115, column: 29, scope: !16832)
!16839 = !DILocation(line: 7115, column: 40, scope: !16832)
!16840 = !DILocation(line: 7114, column: 9, scope: !16832)
!16841 = !DILocation(line: 7114, column: 9, scope: !16833)
!16842 = !DILocation(line: 7116, column: 8, scope: !16843)
!16843 = distinct !DILexicalBlock(scope: !16832, file: !3, line: 7115, column: 53)
!16844 = !DILocation(line: 7117, column: 4, scope: !16843)
!16845 = !DILocation(line: 7119, column: 2, scope: !16820)
!16846 = !DILocation(line: 7121, column: 2, scope: !16136)
!16847 = !DILocation(line: 7121, column: 2, scope: !16143)
!16848 = !DILocalVariable(name: "__dummy", scope: !16849, file: !3, line: 7121, type: !312)
!16849 = distinct !DILexicalBlock(scope: !16142, file: !3, line: 7121, column: 2)
!16850 = !DILocation(line: 7121, column: 2, scope: !16849)
!16851 = !DILocalVariable(name: "__dummy2", scope: !16849, file: !3, line: 7121, type: !312)
!16852 = !DILocation(line: 7121, column: 2, scope: !16142)
!16853 = !DILocation(line: 7121, column: 2, scope: !16141)
!16854 = !DILocation(line: 7121, column: 2, scope: !16855)
!16855 = distinct !DILexicalBlock(scope: !16141, file: !3, line: 7121, column: 2)
!16856 = !DILocalVariable(name: "__dummy", scope: !16857, file: !3, line: 7121, type: !312)
!16857 = distinct !DILexicalBlock(scope: !16858, file: !3, line: 7121, column: 2)
!16858 = distinct !DILexicalBlock(scope: !16855, file: !3, line: 7121, column: 2)
!16859 = !DILocation(line: 7121, column: 2, scope: !16857)
!16860 = !DILocalVariable(name: "__dummy2", scope: !16857, file: !3, line: 7121, type: !312)
!16861 = !DILocation(line: 7121, column: 2, scope: !16858)
!16862 = !DILocation(line: 7121, column: 2, scope: !16140)
!16863 = !{i32 -2139331273}
!16864 = !DILocation(line: 7121, column: 2, scope: !16139)
!16865 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !16138)
!16866 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !16138)
!16867 = !DILocation(line: 7122, column: 13, scope: !16136)
!16868 = !DILocation(line: 7122, column: 2, scope: !16136)
!16869 = !DILocation(line: 7123, column: 26, scope: !16136)
!16870 = !DILocation(line: 7123, column: 32, scope: !16136)
!16871 = !DILocation(line: 7123, column: 45, scope: !16136)
!16872 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !16237)
!16873 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !16237)
!16874 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !16237)
!16875 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !16237)
!16876 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !16237)
!16877 = !DILocation(line: 7126, column: 10, scope: !16136)
!16878 = !DILocation(line: 7126, column: 16, scope: !16136)
!16879 = !DILocation(line: 7126, column: 2, scope: !16136)
!16880 = !DILocation(line: 7128, column: 9, scope: !16136)
!16881 = !DILocation(line: 7128, column: 2, scope: !16136)
!16882 = distinct !DISubprogram(name: "usc_reset", scope: !3, file: !3, line: 5568, type: !8185, scopeLine: 5569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16883 = !DILocalVariable(name: "info", arg: 1, scope: !16882, file: !3, line: 5568, type: !7524)
!16884 = !DILocation(line: 5568, column: 44, scope: !16882)
!16885 = !DILocalVariable(name: "i", scope: !16882, file: !3, line: 5570, type: !32)
!16886 = !DILocation(line: 5570, column: 6, scope: !16882)
!16887 = !DILocalVariable(name: "readval", scope: !16882, file: !3, line: 5571, type: !987)
!16888 = !DILocation(line: 5571, column: 6, scope: !16882)
!16889 = !DILocalVariable(name: "MiscCtrl", scope: !16882, file: !3, line: 5576, type: !16890)
!16890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16891, size: 64)
!16891 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !987)
!16892 = !DILocation(line: 5576, column: 16, scope: !16882)
!16893 = !DILocation(line: 5576, column: 35, scope: !16882)
!16894 = !DILocation(line: 5576, column: 41, scope: !16882)
!16895 = !DILocation(line: 5576, column: 50, scope: !16882)
!16896 = !DILocation(line: 5576, column: 27, scope: !16882)
!16897 = !DILocalVariable(name: "LCR0BRDR", scope: !16882, file: !3, line: 5577, type: !2516)
!16898 = !DILocation(line: 5577, column: 7, scope: !16882)
!16899 = !DILocation(line: 5577, column: 26, scope: !16882)
!16900 = !DILocation(line: 5577, column: 32, scope: !16882)
!16901 = !DILocation(line: 5577, column: 41, scope: !16882)
!16902 = !DILocation(line: 5577, column: 18, scope: !16882)
!16903 = !DILocation(line: 5579, column: 2, scope: !16882)
!16904 = !DILocation(line: 5579, column: 8, scope: !16882)
!16905 = !DILocation(line: 5579, column: 24, scope: !16882)
!16906 = !DILocation(line: 5580, column: 14, scope: !16882)
!16907 = !DILocation(line: 5580, column: 20, scope: !16882)
!16908 = !DILocation(line: 5580, column: 3, scope: !16882)
!16909 = !DILocation(line: 5580, column: 12, scope: !16882)
!16910 = !DILocation(line: 5586, column: 7, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16882, file: !3, line: 5586, column: 2)
!16912 = !DILocation(line: 5586, column: 6, scope: !16911)
!16913 = !DILocation(line: 5586, column: 10, scope: !16914)
!16914 = distinct !DILexicalBlock(scope: !16911, file: !3, line: 5586, column: 2)
!16915 = !DILocation(line: 5586, column: 11, scope: !16914)
!16916 = !DILocation(line: 5586, column: 2, scope: !16911)
!16917 = !DILocation(line: 5587, column: 14, scope: !16914)
!16918 = !DILocation(line: 5587, column: 13, scope: !16914)
!16919 = !DILocation(line: 5587, column: 11, scope: !16914)
!16920 = !DILocation(line: 5587, column: 3, scope: !16914)
!16921 = !DILocation(line: 5586, column: 16, scope: !16914)
!16922 = !DILocation(line: 5586, column: 2, scope: !16914)
!16923 = distinct !{!16923, !16916, !16924}
!16924 = !DILocation(line: 5587, column: 14, scope: !16911)
!16925 = !DILocation(line: 5589, column: 2, scope: !16882)
!16926 = !DILocation(line: 5589, column: 8, scope: !16882)
!16927 = !DILocation(line: 5589, column: 24, scope: !16882)
!16928 = !DILocation(line: 5590, column: 14, scope: !16882)
!16929 = !DILocation(line: 5590, column: 20, scope: !16882)
!16930 = !DILocation(line: 5590, column: 3, scope: !16882)
!16931 = !DILocation(line: 5590, column: 12, scope: !16882)
!16932 = !DILocation(line: 5592, column: 3, scope: !16882)
!16933 = !DILocation(line: 5592, column: 12, scope: !16882)
!16934 = !DILocation(line: 5603, column: 2, scope: !16882)
!16935 = !DILocation(line: 5603, column: 8, scope: !16882)
!16936 = !DILocation(line: 5603, column: 17, scope: !16882)
!16937 = !DILocation(line: 5604, column: 2, scope: !16882)
!16938 = !DILocation(line: 5604, column: 8, scope: !16882)
!16939 = !DILocation(line: 5604, column: 22, scope: !16882)
!16940 = !DILocation(line: 5605, column: 2, scope: !16882)
!16941 = !DILocation(line: 5605, column: 8, scope: !16882)
!16942 = !DILocation(line: 5605, column: 22, scope: !16882)
!16943 = !DILocation(line: 5624, column: 15, scope: !16882)
!16944 = !DILocation(line: 5624, column: 21, scope: !16882)
!16945 = !DILocation(line: 5624, column: 29, scope: !16882)
!16946 = !DILocation(line: 5624, column: 2, scope: !16882)
!16947 = !DILocation(line: 5627, column: 10, scope: !16882)
!16948 = !DILocation(line: 5627, column: 16, scope: !16882)
!16949 = !DILocation(line: 5627, column: 2, scope: !16882)
!16950 = !DILocation(line: 5628, column: 10, scope: !16882)
!16951 = !DILocation(line: 5628, column: 16, scope: !16882)
!16952 = !DILocation(line: 5628, column: 24, scope: !16882)
!16953 = !DILocation(line: 5628, column: 2, scope: !16882)
!16954 = !DILocation(line: 5631, column: 13, scope: !16882)
!16955 = !DILocation(line: 5631, column: 2, scope: !16882)
!16956 = !DILocation(line: 5648, column: 14, scope: !16882)
!16957 = !DILocation(line: 5648, column: 2, scope: !16882)
!16958 = !DILocation(line: 5665, column: 14, scope: !16882)
!16959 = !DILocation(line: 5665, column: 2, scope: !16882)
!16960 = !DILocation(line: 5667, column: 1, scope: !16882)
!16961 = distinct !DISubprogram(name: "usc_set_sdlc_mode", scope: !3, file: !3, line: 4473, type: !8185, scopeLine: 4474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16962 = !DILocalVariable(name: "info", arg: 1, scope: !16961, file: !3, line: 4473, type: !7524)
!16963 = !DILocation(line: 4473, column: 52, scope: !16961)
!16964 = !DILocalVariable(name: "RegValue", scope: !16961, file: !3, line: 4475, type: !581)
!16965 = !DILocation(line: 4475, column: 6, scope: !16961)
!16966 = !DILocalVariable(name: "PreSL1660", scope: !16961, file: !3, line: 4476, type: !771)
!16967 = !DILocation(line: 4476, column: 7, scope: !16961)
!16968 = !DILocation(line: 4487, column: 13, scope: !16961)
!16969 = !DILocation(line: 4487, column: 2, scope: !16961)
!16970 = !DILocation(line: 4488, column: 21, scope: !16961)
!16971 = !DILocation(line: 4488, column: 11, scope: !16961)
!16972 = !DILocation(line: 4488, column: 10, scope: !16961)
!16973 = !DILocation(line: 4489, column: 15, scope: !16961)
!16974 = !DILocation(line: 4489, column: 24, scope: !16961)
!16975 = !DILocation(line: 4489, column: 12, scope: !16961)
!16976 = !DILocation(line: 4491, column: 8, scope: !16977)
!16977 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4491, column: 8)
!16978 = !DILocation(line: 4491, column: 14, scope: !16977)
!16979 = !DILocation(line: 4491, column: 21, scope: !16977)
!16980 = !DILocation(line: 4491, column: 27, scope: !16977)
!16981 = !DILocation(line: 4491, column: 8, scope: !16961)
!16982 = !DILocation(line: 4505, column: 15, scope: !16983)
!16983 = distinct !DILexicalBlock(scope: !16977, file: !3, line: 4492, column: 3)
!16984 = !DILocation(line: 4511, column: 3, scope: !16983)
!16985 = !DILocation(line: 4525, column: 7, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16987, file: !3, line: 4525, column: 7)
!16987 = distinct !DILexicalBlock(scope: !16977, file: !3, line: 4513, column: 3)
!16988 = !DILocation(line: 4525, column: 13, scope: !16986)
!16989 = !DILocation(line: 4525, column: 20, scope: !16986)
!16990 = !DILocation(line: 4525, column: 25, scope: !16986)
!16991 = !DILocation(line: 4525, column: 7, scope: !16987)
!16992 = !DILocation(line: 4526, column: 13, scope: !16993)
!16993 = distinct !DILexicalBlock(scope: !16986, file: !3, line: 4525, column: 43)
!16994 = !DILocation(line: 4528, column: 16, scope: !16993)
!16995 = !DILocation(line: 4529, column: 33, scope: !16993)
!16996 = !DILocation(line: 4529, column: 23, scope: !16993)
!16997 = !DILocation(line: 4529, column: 45, scope: !16993)
!16998 = !DILocation(line: 4529, column: 63, scope: !16993)
!16999 = !DILocation(line: 4529, column: 5, scope: !16993)
!17000 = !DILocation(line: 4528, column: 4, scope: !16993)
!17001 = !DILocation(line: 4543, column: 13, scope: !16993)
!17002 = !DILocation(line: 4544, column: 3, scope: !16993)
!17003 = !DILocation(line: 4547, column: 12, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !16986, file: !3, line: 4545, column: 8)
!17005 = !DILocation(line: 4549, column: 8, scope: !17006)
!17006 = distinct !DILexicalBlock(scope: !17004, file: !3, line: 4549, column: 8)
!17007 = !DILocation(line: 4549, column: 14, scope: !17006)
!17008 = !DILocation(line: 4549, column: 21, scope: !17006)
!17009 = !DILocation(line: 4549, column: 27, scope: !17006)
!17010 = !DILocation(line: 4549, column: 8, scope: !17004)
!17011 = !DILocation(line: 4550, column: 13, scope: !17006)
!17012 = !DILocation(line: 4550, column: 4, scope: !17006)
!17013 = !DILocation(line: 4551, column: 13, scope: !17014)
!17014 = distinct !DILexicalBlock(scope: !17006, file: !3, line: 4551, column: 13)
!17015 = !DILocation(line: 4551, column: 19, scope: !17014)
!17016 = !DILocation(line: 4551, column: 26, scope: !17014)
!17017 = !DILocation(line: 4551, column: 32, scope: !17014)
!17018 = !DILocation(line: 4551, column: 13, scope: !17006)
!17019 = !DILocation(line: 4552, column: 13, scope: !17014)
!17020 = !DILocation(line: 4552, column: 4, scope: !17014)
!17021 = !DILocation(line: 4553, column: 13, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !17014, file: !3, line: 4553, column: 13)
!17023 = !DILocation(line: 4553, column: 19, scope: !17022)
!17024 = !DILocation(line: 4553, column: 26, scope: !17022)
!17025 = !DILocation(line: 4553, column: 32, scope: !17022)
!17026 = !DILocation(line: 4553, column: 13, scope: !17014)
!17027 = !DILocation(line: 4554, column: 13, scope: !17022)
!17028 = !DILocation(line: 4554, column: 4, scope: !17022)
!17029 = !DILocation(line: 4557, column: 8, scope: !17030)
!17030 = distinct !DILexicalBlock(scope: !16987, file: !3, line: 4557, column: 8)
!17031 = !DILocation(line: 4557, column: 14, scope: !17030)
!17032 = !DILocation(line: 4557, column: 21, scope: !17030)
!17033 = !DILocation(line: 4557, column: 30, scope: !17030)
!17034 = !DILocation(line: 4557, column: 8, scope: !16987)
!17035 = !DILocation(line: 4558, column: 13, scope: !17030)
!17036 = !DILocation(line: 4558, column: 4, scope: !17030)
!17037 = !DILocation(line: 4561, column: 7, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4561, column: 7)
!17039 = !DILocation(line: 4561, column: 13, scope: !17038)
!17040 = !DILocation(line: 4561, column: 20, scope: !17038)
!17041 = !DILocation(line: 4561, column: 25, scope: !17038)
!17042 = !DILocation(line: 4561, column: 43, scope: !17038)
!17043 = !DILocation(line: 4562, column: 4, scope: !17038)
!17044 = !DILocation(line: 4562, column: 10, scope: !17038)
!17045 = !DILocation(line: 4562, column: 17, scope: !17038)
!17046 = !DILocation(line: 4562, column: 23, scope: !17038)
!17047 = !DILocation(line: 4561, column: 7, scope: !16961)
!17048 = !DILocation(line: 4563, column: 12, scope: !17038)
!17049 = !DILocation(line: 4563, column: 3, scope: !17038)
!17050 = !DILocation(line: 4565, column: 7, scope: !17051)
!17051 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4565, column: 7)
!17052 = !DILocation(line: 4565, column: 13, scope: !17051)
!17053 = !DILocation(line: 4565, column: 20, scope: !17051)
!17054 = !DILocation(line: 4565, column: 32, scope: !17051)
!17055 = !DILocation(line: 4565, column: 7, scope: !16961)
!17056 = !DILocation(line: 4568, column: 15, scope: !17057)
!17057 = distinct !DILexicalBlock(scope: !17051, file: !3, line: 4566, column: 2)
!17058 = !DILocation(line: 4568, column: 26, scope: !17057)
!17059 = !DILocation(line: 4568, column: 32, scope: !17057)
!17060 = !DILocation(line: 4568, column: 39, scope: !17057)
!17061 = !DILocation(line: 4568, column: 3, scope: !17057)
!17062 = !DILocation(line: 4569, column: 12, scope: !17057)
!17063 = !DILocation(line: 4570, column: 2, scope: !17057)
!17064 = !DILocation(line: 4572, column: 14, scope: !16961)
!17065 = !DILocation(line: 4572, column: 25, scope: !16961)
!17066 = !DILocation(line: 4572, column: 2, scope: !16961)
!17067 = !DILocation(line: 4573, column: 20, scope: !16961)
!17068 = !DILocation(line: 4573, column: 2, scope: !16961)
!17069 = !DILocation(line: 4573, column: 8, scope: !16961)
!17070 = !DILocation(line: 4573, column: 18, scope: !16961)
!17071 = !DILocation(line: 4590, column: 11, scope: !16961)
!17072 = !DILocation(line: 4592, column: 11, scope: !16961)
!17073 = !DILocation(line: 4592, column: 17, scope: !16961)
!17074 = !DILocation(line: 4592, column: 24, scope: !16961)
!17075 = !DILocation(line: 4592, column: 2, scope: !16961)
!17076 = !DILocation(line: 4593, column: 50, scope: !17077)
!17077 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4592, column: 35)
!17078 = !DILocation(line: 4593, column: 60, scope: !17077)
!17079 = !DILocation(line: 4594, column: 50, scope: !17077)
!17080 = !DILocation(line: 4594, column: 60, scope: !17077)
!17081 = !DILocation(line: 4595, column: 49, scope: !17077)
!17082 = !DILocation(line: 4595, column: 67, scope: !17077)
!17083 = !DILocation(line: 4596, column: 50, scope: !17077)
!17084 = !DILocation(line: 4596, column: 60, scope: !17077)
!17085 = !DILocation(line: 4597, column: 50, scope: !17077)
!17086 = !DILocation(line: 4597, column: 68, scope: !17077)
!17087 = !DILocation(line: 4598, column: 50, scope: !17077)
!17088 = !DILocation(line: 4598, column: 68, scope: !17077)
!17089 = !DILocation(line: 4599, column: 50, scope: !17077)
!17090 = !DILocation(line: 4599, column: 76, scope: !17077)
!17091 = !DILocation(line: 4602, column: 8, scope: !17092)
!17092 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4602, column: 7)
!17093 = !DILocation(line: 4602, column: 14, scope: !17092)
!17094 = !DILocation(line: 4602, column: 21, scope: !17092)
!17095 = !DILocation(line: 4602, column: 30, scope: !17092)
!17096 = !DILocation(line: 4602, column: 47, scope: !17092)
!17097 = !DILocation(line: 4602, column: 7, scope: !16961)
!17098 = !DILocation(line: 4603, column: 12, scope: !17092)
!17099 = !DILocation(line: 4603, column: 3, scope: !17092)
!17100 = !DILocation(line: 4604, column: 13, scope: !17101)
!17101 = distinct !DILexicalBlock(scope: !17092, file: !3, line: 4604, column: 12)
!17102 = !DILocation(line: 4604, column: 19, scope: !17101)
!17103 = !DILocation(line: 4604, column: 26, scope: !17101)
!17104 = !DILocation(line: 4604, column: 35, scope: !17101)
!17105 = !DILocation(line: 4604, column: 52, scope: !17101)
!17106 = !DILocation(line: 4604, column: 12, scope: !17092)
!17107 = !DILocation(line: 4605, column: 12, scope: !17101)
!17108 = !DILocation(line: 4605, column: 3, scope: !17101)
!17109 = !DILocation(line: 4607, column: 14, scope: !16961)
!17110 = !DILocation(line: 4607, column: 25, scope: !16961)
!17111 = !DILocation(line: 4607, column: 2, scope: !16961)
!17112 = !DILocation(line: 4616, column: 14, scope: !16961)
!17113 = !DILocation(line: 4616, column: 2, scope: !16961)
!17114 = !DILocation(line: 4618, column: 2, scope: !16961)
!17115 = !DILocation(line: 4638, column: 24, scope: !16961)
!17116 = !DILocation(line: 4638, column: 13, scope: !16961)
!17117 = !DILocation(line: 4638, column: 37, scope: !16961)
!17118 = !DILocation(line: 4638, column: 11, scope: !16961)
!17119 = !DILocation(line: 4640, column: 14, scope: !16961)
!17120 = !DILocation(line: 4640, column: 41, scope: !16961)
!17121 = !DILocation(line: 4640, column: 39, scope: !16961)
!17122 = !DILocation(line: 4640, column: 26, scope: !16961)
!17123 = !DILocation(line: 4640, column: 2, scope: !16961)
!17124 = !DILocation(line: 4644, column: 2, scope: !16961)
!17125 = !DILocation(line: 4645, column: 2, scope: !16961)
!17126 = !DILocation(line: 4662, column: 11, scope: !16961)
!17127 = !DILocation(line: 4664, column: 11, scope: !16961)
!17128 = !DILocation(line: 4664, column: 17, scope: !16961)
!17129 = !DILocation(line: 4664, column: 24, scope: !16961)
!17130 = !DILocation(line: 4664, column: 2, scope: !16961)
!17131 = !DILocation(line: 4665, column: 50, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4664, column: 35)
!17133 = !DILocation(line: 4665, column: 60, scope: !17132)
!17134 = !DILocation(line: 4666, column: 50, scope: !17132)
!17135 = !DILocation(line: 4666, column: 60, scope: !17132)
!17136 = !DILocation(line: 4667, column: 50, scope: !17132)
!17137 = !DILocation(line: 4667, column: 68, scope: !17132)
!17138 = !DILocation(line: 4668, column: 50, scope: !17132)
!17139 = !DILocation(line: 4668, column: 60, scope: !17132)
!17140 = !DILocation(line: 4669, column: 50, scope: !17132)
!17141 = !DILocation(line: 4669, column: 68, scope: !17132)
!17142 = !DILocation(line: 4670, column: 50, scope: !17132)
!17143 = !DILocation(line: 4670, column: 68, scope: !17132)
!17144 = !DILocation(line: 4671, column: 50, scope: !17132)
!17145 = !DILocation(line: 4671, column: 76, scope: !17132)
!17146 = !DILocation(line: 4674, column: 8, scope: !17147)
!17147 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4674, column: 7)
!17148 = !DILocation(line: 4674, column: 14, scope: !17147)
!17149 = !DILocation(line: 4674, column: 21, scope: !17147)
!17150 = !DILocation(line: 4674, column: 30, scope: !17147)
!17151 = !DILocation(line: 4674, column: 47, scope: !17147)
!17152 = !DILocation(line: 4674, column: 7, scope: !16961)
!17153 = !DILocation(line: 4675, column: 12, scope: !17147)
!17154 = !DILocation(line: 4675, column: 3, scope: !17147)
!17155 = !DILocation(line: 4676, column: 13, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17147, file: !3, line: 4676, column: 12)
!17157 = !DILocation(line: 4676, column: 19, scope: !17156)
!17158 = !DILocation(line: 4676, column: 26, scope: !17156)
!17159 = !DILocation(line: 4676, column: 35, scope: !17156)
!17160 = !DILocation(line: 4676, column: 52, scope: !17156)
!17161 = !DILocation(line: 4676, column: 12, scope: !17147)
!17162 = !DILocation(line: 4677, column: 12, scope: !17156)
!17163 = !DILocation(line: 4677, column: 3, scope: !17156)
!17164 = !DILocation(line: 4679, column: 14, scope: !16961)
!17165 = !DILocation(line: 4679, column: 25, scope: !16961)
!17166 = !DILocation(line: 4679, column: 2, scope: !16961)
!17167 = !DILocation(line: 4681, column: 18, scope: !16961)
!17168 = !DILocation(line: 4681, column: 2, scope: !16961)
!17169 = !DILocation(line: 4684, column: 2, scope: !16961)
!17170 = !DILocation(line: 4701, column: 14, scope: !16961)
!17171 = !DILocation(line: 4701, column: 2, scope: !16961)
!17172 = !DILocation(line: 4703, column: 2, scope: !16961)
!17173 = !DILocation(line: 4704, column: 2, scope: !16961)
!17174 = !DILocation(line: 4723, column: 2, scope: !16961)
!17175 = !DILocation(line: 4723, column: 8, scope: !16961)
!17176 = !DILocation(line: 4723, column: 19, scope: !16961)
!17177 = !DILocation(line: 4725, column: 8, scope: !17178)
!17178 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4725, column: 7)
!17179 = !DILocation(line: 4725, column: 7, scope: !16961)
!17180 = !DILocation(line: 4726, column: 3, scope: !17178)
!17181 = !DILocation(line: 4726, column: 9, scope: !17178)
!17182 = !DILocation(line: 4726, column: 20, scope: !17178)
!17183 = !DILocation(line: 4728, column: 14, scope: !16961)
!17184 = !DILocation(line: 4728, column: 26, scope: !16961)
!17185 = !DILocation(line: 4728, column: 32, scope: !16961)
!17186 = !DILocation(line: 4728, column: 2, scope: !16961)
!17187 = !DILocation(line: 4743, column: 11, scope: !16961)
!17188 = !DILocation(line: 4745, column: 7, scope: !17189)
!17189 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4745, column: 7)
!17190 = !DILocation(line: 4745, column: 13, scope: !17189)
!17191 = !DILocation(line: 4745, column: 20, scope: !17189)
!17192 = !DILocation(line: 4745, column: 26, scope: !17189)
!17193 = !DILocation(line: 4745, column: 7, scope: !16961)
!17194 = !DILocation(line: 4746, column: 12, scope: !17189)
!17195 = !DILocation(line: 4746, column: 3, scope: !17189)
!17196 = !DILocation(line: 4747, column: 12, scope: !17197)
!17197 = distinct !DILexicalBlock(scope: !17189, file: !3, line: 4747, column: 12)
!17198 = !DILocation(line: 4747, column: 18, scope: !17197)
!17199 = !DILocation(line: 4747, column: 25, scope: !17197)
!17200 = !DILocation(line: 4747, column: 31, scope: !17197)
!17201 = !DILocation(line: 4747, column: 12, scope: !17189)
!17202 = !DILocation(line: 4748, column: 12, scope: !17197)
!17203 = !DILocation(line: 4748, column: 3, scope: !17197)
!17204 = !DILocation(line: 4749, column: 13, scope: !17205)
!17205 = distinct !DILexicalBlock(scope: !17197, file: !3, line: 4749, column: 13)
!17206 = !DILocation(line: 4749, column: 19, scope: !17205)
!17207 = !DILocation(line: 4749, column: 26, scope: !17205)
!17208 = !DILocation(line: 4749, column: 32, scope: !17205)
!17209 = !DILocation(line: 4749, column: 13, scope: !17197)
!17210 = !DILocation(line: 4750, column: 13, scope: !17205)
!17211 = !DILocation(line: 4750, column: 4, scope: !17205)
!17212 = !DILocation(line: 4752, column: 12, scope: !17205)
!17213 = !DILocation(line: 4754, column: 7, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4754, column: 7)
!17215 = !DILocation(line: 4754, column: 13, scope: !17214)
!17216 = !DILocation(line: 4754, column: 20, scope: !17214)
!17217 = !DILocation(line: 4754, column: 26, scope: !17214)
!17218 = !DILocation(line: 4754, column: 7, scope: !16961)
!17219 = !DILocation(line: 4755, column: 12, scope: !17214)
!17220 = !DILocation(line: 4755, column: 3, scope: !17214)
!17221 = !DILocation(line: 4756, column: 12, scope: !17222)
!17222 = distinct !DILexicalBlock(scope: !17214, file: !3, line: 4756, column: 12)
!17223 = !DILocation(line: 4756, column: 18, scope: !17222)
!17224 = !DILocation(line: 4756, column: 25, scope: !17222)
!17225 = !DILocation(line: 4756, column: 31, scope: !17222)
!17226 = !DILocation(line: 4756, column: 12, scope: !17214)
!17227 = !DILocation(line: 4757, column: 12, scope: !17222)
!17228 = !DILocation(line: 4757, column: 3, scope: !17222)
!17229 = !DILocation(line: 4758, column: 13, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17222, file: !3, line: 4758, column: 13)
!17231 = !DILocation(line: 4758, column: 19, scope: !17230)
!17232 = !DILocation(line: 4758, column: 26, scope: !17230)
!17233 = !DILocation(line: 4758, column: 32, scope: !17230)
!17234 = !DILocation(line: 4758, column: 13, scope: !17222)
!17235 = !DILocation(line: 4759, column: 13, scope: !17230)
!17236 = !DILocation(line: 4759, column: 4, scope: !17230)
!17237 = !DILocation(line: 4761, column: 12, scope: !17230)
!17238 = !DILocation(line: 4763, column: 14, scope: !16961)
!17239 = !DILocation(line: 4763, column: 26, scope: !16961)
!17240 = !DILocation(line: 4763, column: 2, scope: !16961)
!17241 = !DILocation(line: 4781, column: 11, scope: !16961)
!17242 = !DILocation(line: 4783, column: 7, scope: !17243)
!17243 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4783, column: 7)
!17244 = !DILocation(line: 4783, column: 13, scope: !17243)
!17245 = !DILocation(line: 4783, column: 20, scope: !17243)
!17246 = !DILocation(line: 4783, column: 26, scope: !17243)
!17247 = !DILocation(line: 4783, column: 7, scope: !16961)
!17248 = !DILocalVariable(name: "XtalSpeed", scope: !17249, file: !3, line: 4784, type: !987)
!17249 = distinct !DILexicalBlock(scope: !17243, file: !3, line: 4783, column: 72)
!17250 = !DILocation(line: 4784, column: 7, scope: !17249)
!17251 = !DILocalVariable(name: "DpllDivisor", scope: !17249, file: !3, line: 4785, type: !987)
!17252 = !DILocation(line: 4785, column: 7, scope: !17249)
!17253 = !DILocalVariable(name: "Tc", scope: !17249, file: !3, line: 4786, type: !581)
!17254 = !DILocation(line: 4786, column: 7, scope: !17249)
!17255 = !DILocation(line: 4791, column: 13, scope: !17249)
!17256 = !DILocation(line: 4793, column: 8, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17249, file: !3, line: 4793, column: 8)
!17258 = !DILocation(line: 4793, column: 14, scope: !17257)
!17259 = !DILocation(line: 4793, column: 21, scope: !17257)
!17260 = !DILocation(line: 4793, column: 27, scope: !17257)
!17261 = !DILocation(line: 4793, column: 8, scope: !17249)
!17262 = !DILocation(line: 4794, column: 16, scope: !17263)
!17263 = distinct !DILexicalBlock(scope: !17257, file: !3, line: 4793, column: 52)
!17264 = !DILocation(line: 4795, column: 13, scope: !17263)
!17265 = !DILocation(line: 4796, column: 3, scope: !17263)
!17266 = !DILocation(line: 4797, column: 13, scope: !17267)
!17267 = distinct !DILexicalBlock(scope: !17257, file: !3, line: 4797, column: 13)
!17268 = !DILocation(line: 4797, column: 19, scope: !17267)
!17269 = !DILocation(line: 4797, column: 26, scope: !17267)
!17270 = !DILocation(line: 4797, column: 32, scope: !17267)
!17271 = !DILocation(line: 4797, column: 13, scope: !17257)
!17272 = !DILocation(line: 4798, column: 16, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17267, file: !3, line: 4797, column: 56)
!17274 = !DILocation(line: 4799, column: 13, scope: !17273)
!17275 = !DILocation(line: 4800, column: 3, scope: !17273)
!17276 = !DILocation(line: 4802, column: 16, scope: !17267)
!17277 = !DILocation(line: 4818, column: 9, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17249, file: !3, line: 4818, column: 9)
!17279 = !DILocation(line: 4818, column: 15, scope: !17278)
!17280 = !DILocation(line: 4818, column: 22, scope: !17278)
!17281 = !DILocation(line: 4818, column: 9, scope: !17249)
!17282 = !DILocation(line: 4820, column: 16, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17278, file: !3, line: 4819, column: 4)
!17284 = !DILocation(line: 4820, column: 26, scope: !17283)
!17285 = !DILocation(line: 4820, column: 25, scope: !17283)
!17286 = !DILocation(line: 4820, column: 15, scope: !17283)
!17287 = !DILocation(line: 4820, column: 39, scope: !17283)
!17288 = !DILocation(line: 4820, column: 45, scope: !17283)
!17289 = !DILocation(line: 4820, column: 52, scope: !17283)
!17290 = !DILocation(line: 4820, column: 38, scope: !17283)
!17291 = !DILocation(line: 4820, column: 9, scope: !17283)
!17292 = !DILocation(line: 4820, column: 7, scope: !17283)
!17293 = !DILocation(line: 4821, column: 14, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17283, file: !3, line: 4821, column: 9)
!17295 = !DILocation(line: 4821, column: 24, scope: !17294)
!17296 = !DILocation(line: 4821, column: 23, scope: !17294)
!17297 = !DILocation(line: 4821, column: 13, scope: !17294)
!17298 = !DILocation(line: 4821, column: 39, scope: !17294)
!17299 = !DILocation(line: 4821, column: 45, scope: !17294)
!17300 = !DILocation(line: 4821, column: 52, scope: !17294)
!17301 = !DILocation(line: 4821, column: 37, scope: !17294)
!17302 = !DILocation(line: 4821, column: 65, scope: !17294)
!17303 = !DILocation(line: 4822, column: 13, scope: !17294)
!17304 = !DILocation(line: 4822, column: 19, scope: !17294)
!17305 = !DILocation(line: 4822, column: 26, scope: !17294)
!17306 = !DILocation(line: 4822, column: 11, scope: !17294)
!17307 = !DILocation(line: 4821, column: 9, scope: !17283)
!17308 = !DILocation(line: 4823, column: 7, scope: !17294)
!17309 = !DILocation(line: 4823, column: 5, scope: !17294)
!17310 = !DILocation(line: 4824, column: 4, scope: !17283)
!17311 = !DILocation(line: 4826, column: 8, scope: !17278)
!17312 = !DILocation(line: 4830, column: 15, scope: !17249)
!17313 = !DILocation(line: 4830, column: 27, scope: !17249)
!17314 = !DILocation(line: 4830, column: 3, scope: !17249)
!17315 = !DILocation(line: 4832, column: 12, scope: !17249)
!17316 = !DILocation(line: 4834, column: 12, scope: !17249)
!17317 = !DILocation(line: 4834, column: 18, scope: !17249)
!17318 = !DILocation(line: 4834, column: 25, scope: !17249)
!17319 = !DILocation(line: 4834, column: 3, scope: !17249)
!17320 = !DILocation(line: 4838, column: 43, scope: !17321)
!17321 = distinct !DILexicalBlock(scope: !17249, file: !3, line: 4834, column: 36)
!17322 = !DILocation(line: 4838, column: 52, scope: !17321)
!17323 = !DILocation(line: 4840, column: 46, scope: !17321)
!17324 = !DILocation(line: 4840, column: 55, scope: !17321)
!17325 = !DILocation(line: 4842, column: 51, scope: !17321)
!17326 = !DILocation(line: 4842, column: 67, scope: !17321)
!17327 = !DILocation(line: 4844, column: 2, scope: !17249)
!17328 = !DILocation(line: 4846, column: 14, scope: !16961)
!17329 = !DILocation(line: 4846, column: 25, scope: !16961)
!17330 = !DILocation(line: 4846, column: 2, scope: !16961)
!17331 = !DILocation(line: 4867, column: 14, scope: !16961)
!17332 = !DILocation(line: 4867, column: 2, scope: !16961)
!17333 = !DILocation(line: 4870, column: 7, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4870, column: 7)
!17335 = !DILocation(line: 4870, column: 13, scope: !17334)
!17336 = !DILocation(line: 4870, column: 20, scope: !17334)
!17337 = !DILocation(line: 4870, column: 26, scope: !17334)
!17338 = !DILocation(line: 4870, column: 7, scope: !16961)
!17339 = !DILocation(line: 4871, column: 15, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17334, file: !3, line: 4870, column: 49)
!17341 = !DILocation(line: 4872, column: 24, scope: !17340)
!17342 = !DILocation(line: 4872, column: 14, scope: !17340)
!17343 = !DILocation(line: 4872, column: 35, scope: !17340)
!17344 = !DILocation(line: 4872, column: 8, scope: !17340)
!17345 = !DILocation(line: 4871, column: 3, scope: !17340)
!17346 = !DILocation(line: 4873, column: 2, scope: !17340)
!17347 = !DILocation(line: 4877, column: 2, scope: !16961)
!17348 = !DILocation(line: 4879, column: 2, scope: !16961)
!17349 = !DILocation(line: 4883, column: 13, scope: !16961)
!17350 = !DILocation(line: 4883, column: 41, scope: !16961)
!17351 = !DILocation(line: 4883, column: 31, scope: !16961)
!17352 = !DILocation(line: 4883, column: 52, scope: !16961)
!17353 = !DILocation(line: 4883, column: 25, scope: !16961)
!17354 = !DILocation(line: 4883, column: 2, scope: !16961)
!17355 = !DILocation(line: 4884, column: 2, scope: !16961)
!17356 = !DILocation(line: 4886, column: 2, scope: !16961)
!17357 = !DILocation(line: 4886, column: 8, scope: !16961)
!17358 = !DILocation(line: 4886, column: 17, scope: !16961)
!17359 = !DILocation(line: 4887, column: 11, scope: !16961)
!17360 = !DILocation(line: 4887, column: 17, scope: !16961)
!17361 = !DILocation(line: 4887, column: 2, scope: !16961)
!17362 = !DILocation(line: 4888, column: 14, scope: !16961)
!17363 = !DILocation(line: 4888, column: 2, scope: !16961)
!17364 = !DILocation(line: 4889, column: 2, scope: !16961)
!17365 = !DILocation(line: 4889, column: 8, scope: !16961)
!17366 = !DILocation(line: 4889, column: 17, scope: !16961)
!17367 = !DILocation(line: 4890, column: 14, scope: !16961)
!17368 = !DILocation(line: 4890, column: 20, scope: !16961)
!17369 = !DILocation(line: 4890, column: 2, scope: !16961)
!17370 = !DILocation(line: 4915, column: 17, scope: !16961)
!17371 = !DILocation(line: 4915, column: 2, scope: !16961)
!17372 = !DILocation(line: 4930, column: 17, scope: !16961)
!17373 = !DILocation(line: 4930, column: 2, scope: !16961)
!17374 = !DILocation(line: 4946, column: 17, scope: !16961)
!17375 = !DILocation(line: 4946, column: 2, scope: !16961)
!17376 = !DILocation(line: 4962, column: 17, scope: !16961)
!17377 = !DILocation(line: 4962, column: 2, scope: !16961)
!17378 = !DILocation(line: 4964, column: 16, scope: !16961)
!17379 = !DILocation(line: 4964, column: 2, scope: !16961)
!17380 = !DILocation(line: 4965, column: 16, scope: !16961)
!17381 = !DILocation(line: 4965, column: 2, scope: !16961)
!17382 = !DILocation(line: 4966, column: 17, scope: !16961)
!17383 = !DILocation(line: 4966, column: 2, scope: !16961)
!17384 = !DILocation(line: 4982, column: 11, scope: !16961)
!17385 = !DILocation(line: 4984, column: 11, scope: !16961)
!17386 = !DILocation(line: 4984, column: 17, scope: !16961)
!17387 = !DILocation(line: 4984, column: 24, scope: !16961)
!17388 = !DILocation(line: 4984, column: 2, scope: !16961)
!17389 = !DILocation(line: 4985, column: 45, scope: !17390)
!17390 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4984, column: 42)
!17391 = !DILocation(line: 4985, column: 55, scope: !17390)
!17392 = !DILocation(line: 4986, column: 45, scope: !17390)
!17393 = !DILocation(line: 4986, column: 55, scope: !17390)
!17394 = !DILocation(line: 4987, column: 45, scope: !17390)
!17395 = !DILocation(line: 4987, column: 63, scope: !17390)
!17396 = !DILocation(line: 4990, column: 11, scope: !16961)
!17397 = !DILocation(line: 4990, column: 17, scope: !16961)
!17398 = !DILocation(line: 4990, column: 24, scope: !16961)
!17399 = !DILocation(line: 4990, column: 2, scope: !16961)
!17400 = !DILocation(line: 4991, column: 45, scope: !17401)
!17401 = distinct !DILexicalBlock(scope: !16961, file: !3, line: 4990, column: 35)
!17402 = !DILocation(line: 4991, column: 62, scope: !17401)
!17403 = !DILocation(line: 4992, column: 45, scope: !17401)
!17404 = !DILocation(line: 4992, column: 54, scope: !17401)
!17405 = !DILocation(line: 4993, column: 45, scope: !17401)
!17406 = !DILocation(line: 4993, column: 54, scope: !17401)
!17407 = !DILocation(line: 4994, column: 45, scope: !17401)
!17408 = !DILocation(line: 4994, column: 61, scope: !17401)
!17409 = !DILocation(line: 4997, column: 14, scope: !16961)
!17410 = !DILocation(line: 4997, column: 25, scope: !16961)
!17411 = !DILocation(line: 4997, column: 2, scope: !16961)
!17412 = !DILocation(line: 5008, column: 17, scope: !16961)
!17413 = !DILocation(line: 5008, column: 2, scope: !16961)
!17414 = !DILocation(line: 5010, column: 23, scope: !16961)
!17415 = !DILocation(line: 5010, column: 2, scope: !16961)
!17416 = !DILocation(line: 5011, column: 20, scope: !16961)
!17417 = !DILocation(line: 5011, column: 2, scope: !16961)
!17418 = !DILocation(line: 5013, column: 1, scope: !16961)
!17419 = distinct !DISubprogram(name: "usc_enable_loopback", scope: !3, file: !3, line: 5025, type: !17420, scopeLine: 5026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17420 = !DISubroutineType(types: !17421)
!17421 = !{null, !7524, !32}
!17422 = !DILocalVariable(name: "info", arg: 1, scope: !17419, file: !3, line: 5025, type: !7524)
!17423 = !DILocation(line: 5025, column: 53, scope: !17419)
!17424 = !DILocalVariable(name: "enable", arg: 2, scope: !17419, file: !3, line: 5025, type: !32)
!17425 = !DILocation(line: 5025, column: 63, scope: !17419)
!17426 = !DILocation(line: 5027, column: 6, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17419, file: !3, line: 5027, column: 6)
!17428 = !DILocation(line: 5027, column: 6, scope: !17419)
!17429 = !DILocation(line: 5029, column: 14, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17427, file: !3, line: 5027, column: 14)
!17431 = !DILocation(line: 5029, column: 34, scope: !17430)
!17432 = !DILocation(line: 5029, column: 24, scope: !17430)
!17433 = !DILocation(line: 5029, column: 45, scope: !17430)
!17434 = !DILocation(line: 5029, column: 3, scope: !17430)
!17435 = !DILocation(line: 5044, column: 15, scope: !17430)
!17436 = !DILocation(line: 5044, column: 3, scope: !17430)
!17437 = !DILocation(line: 5048, column: 7, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17430, file: !3, line: 5048, column: 7)
!17439 = !DILocation(line: 5048, column: 13, scope: !17438)
!17440 = !DILocation(line: 5048, column: 20, scope: !17438)
!17441 = !DILocation(line: 5048, column: 7, scope: !17430)
!17442 = !DILocation(line: 5049, column: 15, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17438, file: !3, line: 5048, column: 33)
!17444 = !DILocation(line: 5049, column: 43, scope: !17443)
!17445 = !DILocation(line: 5049, column: 49, scope: !17443)
!17446 = !DILocation(line: 5049, column: 56, scope: !17443)
!17447 = !DILocation(line: 5049, column: 42, scope: !17443)
!17448 = !DILocation(line: 5049, column: 68, scope: !17443)
!17449 = !DILocation(line: 5049, column: 27, scope: !17443)
!17450 = !DILocation(line: 5049, column: 4, scope: !17443)
!17451 = !DILocation(line: 5050, column: 3, scope: !17443)
!17452 = !DILocation(line: 5051, column: 15, scope: !17438)
!17453 = !DILocation(line: 5051, column: 4, scope: !17438)
!17454 = !DILocation(line: 5055, column: 15, scope: !17430)
!17455 = !DILocation(line: 5055, column: 44, scope: !17430)
!17456 = !DILocation(line: 5055, column: 33, scope: !17430)
!17457 = !DILocation(line: 5055, column: 56, scope: !17430)
!17458 = !DILocation(line: 5055, column: 65, scope: !17430)
!17459 = !DILocation(line: 5055, column: 26, scope: !17430)
!17460 = !DILocation(line: 5055, column: 3, scope: !17430)
!17461 = !DILocation(line: 5058, column: 14, scope: !17430)
!17462 = !DILocation(line: 5058, column: 43, scope: !17430)
!17463 = !DILocation(line: 5058, column: 33, scope: !17430)
!17464 = !DILocation(line: 5058, column: 55, scope: !17430)
!17465 = !DILocation(line: 5058, column: 65, scope: !17430)
!17466 = !DILocation(line: 5058, column: 26, scope: !17430)
!17467 = !DILocation(line: 5058, column: 3, scope: !17430)
!17468 = !DILocation(line: 5061, column: 3, scope: !17430)
!17469 = !DILocation(line: 5061, column: 9, scope: !17430)
!17470 = !DILocation(line: 5061, column: 23, scope: !17430)
!17471 = !DILocation(line: 5062, column: 17, scope: !17430)
!17472 = !DILocation(line: 5062, column: 23, scope: !17430)
!17473 = !DILocation(line: 5062, column: 31, scope: !17430)
!17474 = !DILocation(line: 5062, column: 3, scope: !17430)
!17475 = !DILocation(line: 5063, column: 2, scope: !17430)
!17476 = !DILocation(line: 5065, column: 14, scope: !17477)
!17477 = distinct !DILexicalBlock(scope: !17427, file: !3, line: 5063, column: 9)
!17478 = !DILocation(line: 5065, column: 34, scope: !17477)
!17479 = !DILocation(line: 5065, column: 24, scope: !17477)
!17480 = !DILocation(line: 5065, column: 45, scope: !17477)
!17481 = !DILocation(line: 5065, column: 3, scope: !17477)
!17482 = !DILocation(line: 5068, column: 3, scope: !17477)
!17483 = !DILocation(line: 5068, column: 9, scope: !17477)
!17484 = !DILocation(line: 5068, column: 23, scope: !17477)
!17485 = !DILocation(line: 5069, column: 11, scope: !17477)
!17486 = !DILocation(line: 5069, column: 17, scope: !17477)
!17487 = !DILocation(line: 5069, column: 25, scope: !17477)
!17488 = !DILocation(line: 5069, column: 3, scope: !17477)
!17489 = !DILocation(line: 5072, column: 1, scope: !17419)
!17490 = distinct !DISubprogram(name: "usc_set_txidle", scope: !3, file: !3, line: 5953, type: !8185, scopeLine: 5954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17491 = !DILocalVariable(name: "info", arg: 1, scope: !17490, file: !3, line: 5953, type: !7524)
!17492 = !DILocation(line: 5953, column: 49, scope: !17490)
!17493 = !DILocalVariable(name: "usc_idle_mode", scope: !17490, file: !3, line: 5955, type: !581)
!17494 = !DILocation(line: 5955, column: 6, scope: !17490)
!17495 = !DILocation(line: 5959, column: 10, scope: !17490)
!17496 = !DILocation(line: 5959, column: 16, scope: !17490)
!17497 = !DILocation(line: 5959, column: 2, scope: !17490)
!17498 = !DILocation(line: 5960, column: 42, scope: !17499)
!17499 = distinct !DILexicalBlock(scope: !17490, file: !3, line: 5959, column: 27)
!17500 = !DILocation(line: 5960, column: 60, scope: !17499)
!17501 = !DILocation(line: 5961, column: 49, scope: !17499)
!17502 = !DILocation(line: 5961, column: 74, scope: !17499)
!17503 = !DILocation(line: 5962, column: 42, scope: !17499)
!17504 = !DILocation(line: 5962, column: 59, scope: !17499)
!17505 = !DILocation(line: 5963, column: 41, scope: !17499)
!17506 = !DILocation(line: 5963, column: 57, scope: !17499)
!17507 = !DILocation(line: 5964, column: 49, scope: !17499)
!17508 = !DILocation(line: 5964, column: 76, scope: !17499)
!17509 = !DILocation(line: 5965, column: 42, scope: !17499)
!17510 = !DILocation(line: 5965, column: 60, scope: !17499)
!17511 = !DILocation(line: 5966, column: 41, scope: !17499)
!17512 = !DILocation(line: 5966, column: 58, scope: !17499)
!17513 = !DILocation(line: 5969, column: 24, scope: !17490)
!17514 = !DILocation(line: 5969, column: 2, scope: !17490)
!17515 = !DILocation(line: 5969, column: 8, scope: !17490)
!17516 = !DILocation(line: 5969, column: 22, scope: !17490)
!17517 = !DILocation(line: 5971, column: 2, scope: !17490)
!17518 = !DILocation(line: 5971, column: 8, scope: !17490)
!17519 = !DILocation(line: 5971, column: 19, scope: !17490)
!17520 = !DILocation(line: 5972, column: 22, scope: !17490)
!17521 = !DILocation(line: 5972, column: 2, scope: !17490)
!17522 = !DILocation(line: 5972, column: 8, scope: !17490)
!17523 = !DILocation(line: 5972, column: 19, scope: !17490)
!17524 = !DILocation(line: 5973, column: 13, scope: !17490)
!17525 = !DILocation(line: 5973, column: 25, scope: !17490)
!17526 = !DILocation(line: 5973, column: 31, scope: !17490)
!17527 = !DILocation(line: 5973, column: 2, scope: !17490)
!17528 = !DILocation(line: 5982, column: 7, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17490, file: !3, line: 5982, column: 7)
!17530 = !DILocation(line: 5982, column: 13, scope: !17529)
!17531 = !DILocation(line: 5982, column: 20, scope: !17529)
!17532 = !DILocation(line: 5982, column: 25, scope: !17529)
!17533 = !DILocation(line: 5982, column: 7, scope: !17490)
!17534 = !DILocalVariable(name: "syncpat", scope: !17535, file: !3, line: 5983, type: !482)
!17535 = distinct !DILexicalBlock(scope: !17529, file: !3, line: 5982, column: 44)
!17536 = !DILocation(line: 5983, column: 17, scope: !17535)
!17537 = !DILocation(line: 5984, column: 11, scope: !17535)
!17538 = !DILocation(line: 5984, column: 17, scope: !17535)
!17539 = !DILocation(line: 5984, column: 3, scope: !17535)
!17540 = !DILocation(line: 5986, column: 12, scope: !17541)
!17541 = distinct !DILexicalBlock(scope: !17535, file: !3, line: 5984, column: 29)
!17542 = !DILocation(line: 5987, column: 4, scope: !17541)
!17543 = !DILocation(line: 5989, column: 12, scope: !17541)
!17544 = !DILocation(line: 5990, column: 4, scope: !17541)
!17545 = !DILocation(line: 5993, column: 12, scope: !17541)
!17546 = !DILocation(line: 5994, column: 4, scope: !17541)
!17547 = !DILocation(line: 5997, column: 12, scope: !17541)
!17548 = !DILocation(line: 5998, column: 4, scope: !17541)
!17549 = !DILocation(line: 6000, column: 12, scope: !17541)
!17550 = !DILocation(line: 6001, column: 4, scope: !17541)
!17551 = !DILocation(line: 6004, column: 3, scope: !17535)
!17552 = !DILocation(line: 6005, column: 2, scope: !17535)
!17553 = !DILocation(line: 6007, column: 1, scope: !17490)
!17554 = distinct !DISubprogram(name: "kasan_check_write", scope: !12956, file: !12956, line: 38, type: !12957, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17555 = !DILocalVariable(name: "p", arg: 1, scope: !17554, file: !12956, line: 38, type: !12609)
!17556 = !DILocation(line: 38, column: 59, scope: !17554)
!17557 = !DILocalVariable(name: "size", arg: 2, scope: !17554, file: !12956, line: 38, type: !7)
!17558 = !DILocation(line: 38, column: 75, scope: !17554)
!17559 = !DILocation(line: 40, column: 2, scope: !17554)
!17560 = distinct !DISubprogram(name: "tty_get_baud_rate", scope: !3762, file: !3762, line: 538, type: !17561, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17561 = !DISubroutineType(types: !17562)
!17562 = !{!4757, !3760}
!17563 = !DILocalVariable(name: "tty", arg: 1, scope: !17560, file: !3762, line: 538, type: !3760)
!17564 = !DILocation(line: 538, column: 60, scope: !17560)
!17565 = !DILocation(line: 540, column: 32, scope: !17560)
!17566 = !DILocation(line: 540, column: 37, scope: !17560)
!17567 = !DILocation(line: 540, column: 9, scope: !17560)
!17568 = !DILocation(line: 540, column: 2, scope: !17560)
!17569 = distinct !DISubprogram(name: "tty_port_set_cts_flow", scope: !3762, file: !3762, line: 617, type: !12887, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17570 = !DILocalVariable(name: "port", arg: 1, scope: !17569, file: !3762, line: 617, type: !4766)
!17571 = !DILocation(line: 617, column: 59, scope: !17569)
!17572 = !DILocalVariable(name: "val", arg: 2, scope: !17569, file: !3762, line: 617, type: !771)
!17573 = !DILocation(line: 617, column: 70, scope: !17569)
!17574 = !DILocation(line: 619, column: 6, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17569, file: !3762, line: 619, column: 6)
!17576 = !DILocation(line: 619, column: 6, scope: !17569)
!17577 = !DILocation(line: 620, column: 31, scope: !17575)
!17578 = !DILocation(line: 620, column: 37, scope: !17575)
!17579 = !DILocation(line: 620, column: 3, scope: !17575)
!17580 = !DILocation(line: 622, column: 33, scope: !17575)
!17581 = !DILocation(line: 622, column: 39, scope: !17575)
!17582 = !DILocation(line: 622, column: 3, scope: !17575)
!17583 = !DILocation(line: 623, column: 1, scope: !17569)
!17584 = distinct !DISubprogram(name: "tty_port_set_check_carrier", scope: !3762, file: !3762, line: 643, type: !12887, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17585 = !DILocalVariable(name: "port", arg: 1, scope: !17584, file: !3762, line: 643, type: !4766)
!17586 = !DILocation(line: 643, column: 64, scope: !17584)
!17587 = !DILocalVariable(name: "val", arg: 2, scope: !17584, file: !3762, line: 643, type: !771)
!17588 = !DILocation(line: 643, column: 75, scope: !17584)
!17589 = !DILocation(line: 645, column: 6, scope: !17590)
!17590 = distinct !DILexicalBlock(scope: !17584, file: !3762, line: 645, column: 6)
!17591 = !DILocation(line: 645, column: 6, scope: !17584)
!17592 = !DILocation(line: 646, column: 31, scope: !17590)
!17593 = !DILocation(line: 646, column: 37, scope: !17590)
!17594 = !DILocation(line: 646, column: 3, scope: !17590)
!17595 = !DILocation(line: 648, column: 33, scope: !17590)
!17596 = !DILocation(line: 648, column: 39, scope: !17590)
!17597 = !DILocation(line: 648, column: 3, scope: !17590)
!17598 = !DILocation(line: 649, column: 1, scope: !17584)
!17599 = distinct !DISubprogram(name: "usc_set_sync_mode", scope: !3, file: !3, line: 5936, type: !8185, scopeLine: 5937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17600 = !DILocalVariable(name: "info", arg: 1, scope: !17599, file: !3, line: 5936, type: !7524)
!17601 = !DILocation(line: 5936, column: 52, scope: !17599)
!17602 = !DILocation(line: 5938, column: 22, scope: !17599)
!17603 = !DILocation(line: 5938, column: 2, scope: !17599)
!17604 = !DILocation(line: 5939, column: 21, scope: !17599)
!17605 = !DILocation(line: 5939, column: 2, scope: !17599)
!17606 = !DILocation(line: 5941, column: 23, scope: !17599)
!17607 = !DILocation(line: 5941, column: 29, scope: !17599)
!17608 = !DILocation(line: 5941, column: 35, scope: !17599)
!17609 = !DILocation(line: 5941, column: 42, scope: !17599)
!17610 = !DILocation(line: 5941, column: 2, scope: !17599)
!17611 = !DILocation(line: 5943, column: 6, scope: !17612)
!17612 = distinct !DILexicalBlock(scope: !17599, file: !3, line: 5943, column: 6)
!17613 = !DILocation(line: 5943, column: 12, scope: !17612)
!17614 = !DILocation(line: 5943, column: 19, scope: !17612)
!17615 = !DILocation(line: 5943, column: 6, scope: !17599)
!17616 = !DILocation(line: 5944, column: 23, scope: !17612)
!17617 = !DILocation(line: 5944, column: 3, scope: !17612)
!17618 = !DILocation(line: 5946, column: 1, scope: !17599)
!17619 = distinct !DISubprogram(name: "usc_set_async_mode", scope: !3, file: !3, line: 5676, type: !8185, scopeLine: 5677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17620 = !DILocalVariable(name: "info", arg: 1, scope: !17619, file: !3, line: 5676, type: !7524)
!17621 = !DILocation(line: 5676, column: 53, scope: !17619)
!17622 = !DILocalVariable(name: "RegValue", scope: !17619, file: !3, line: 5678, type: !581)
!17623 = !DILocation(line: 5678, column: 6, scope: !17619)
!17624 = !DILocation(line: 5681, column: 2, scope: !17619)
!17625 = !DILocation(line: 5683, column: 11, scope: !17619)
!17626 = !DILocation(line: 5683, column: 17, scope: !17619)
!17627 = !DILocation(line: 5683, column: 2, scope: !17619)
!17628 = !DILocation(line: 5684, column: 14, scope: !17619)
!17629 = !DILocation(line: 5684, column: 2, scope: !17619)
!17630 = !DILocation(line: 5686, column: 22, scope: !17619)
!17631 = !DILocation(line: 5686, column: 2, scope: !17619)
!17632 = !DILocation(line: 5700, column: 11, scope: !17619)
!17633 = !DILocation(line: 5701, column: 7, scope: !17634)
!17634 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 5701, column: 7)
!17635 = !DILocation(line: 5701, column: 13, scope: !17634)
!17636 = !DILocation(line: 5701, column: 20, scope: !17634)
!17637 = !DILocation(line: 5701, column: 30, scope: !17634)
!17638 = !DILocation(line: 5701, column: 7, scope: !17619)
!17639 = !DILocation(line: 5702, column: 12, scope: !17634)
!17640 = !DILocation(line: 5702, column: 3, scope: !17634)
!17641 = !DILocation(line: 5703, column: 14, scope: !17619)
!17642 = !DILocation(line: 5703, column: 25, scope: !17619)
!17643 = !DILocation(line: 5703, column: 2, scope: !17619)
!17644 = !DILocation(line: 5718, column: 11, scope: !17619)
!17645 = !DILocation(line: 5720, column: 7, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 5720, column: 7)
!17647 = !DILocation(line: 5720, column: 13, scope: !17646)
!17648 = !DILocation(line: 5720, column: 20, scope: !17646)
!17649 = !DILocation(line: 5720, column: 30, scope: !17646)
!17650 = !DILocation(line: 5720, column: 7, scope: !17619)
!17651 = !DILocation(line: 5721, column: 12, scope: !17646)
!17652 = !DILocation(line: 5721, column: 3, scope: !17646)
!17653 = !DILocation(line: 5723, column: 7, scope: !17654)
!17654 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 5723, column: 7)
!17655 = !DILocation(line: 5723, column: 13, scope: !17654)
!17656 = !DILocation(line: 5723, column: 20, scope: !17654)
!17657 = !DILocation(line: 5723, column: 27, scope: !17654)
!17658 = !DILocation(line: 5723, column: 7, scope: !17619)
!17659 = !DILocation(line: 5724, column: 12, scope: !17660)
!17660 = distinct !DILexicalBlock(scope: !17654, file: !3, line: 5723, column: 50)
!17661 = !DILocation(line: 5725, column: 8, scope: !17662)
!17662 = distinct !DILexicalBlock(scope: !17660, file: !3, line: 5725, column: 8)
!17663 = !DILocation(line: 5725, column: 14, scope: !17662)
!17664 = !DILocation(line: 5725, column: 21, scope: !17662)
!17665 = !DILocation(line: 5725, column: 28, scope: !17662)
!17666 = !DILocation(line: 5725, column: 8, scope: !17660)
!17667 = !DILocation(line: 5726, column: 13, scope: !17662)
!17668 = !DILocation(line: 5726, column: 4, scope: !17662)
!17669 = !DILocation(line: 5727, column: 2, scope: !17660)
!17670 = !DILocation(line: 5729, column: 14, scope: !17619)
!17671 = !DILocation(line: 5729, column: 25, scope: !17619)
!17672 = !DILocation(line: 5729, column: 2, scope: !17619)
!17673 = !DILocation(line: 5734, column: 2, scope: !17619)
!17674 = !DILocation(line: 5757, column: 14, scope: !17619)
!17675 = !DILocation(line: 5757, column: 2, scope: !17619)
!17676 = !DILocation(line: 5759, column: 2, scope: !17619)
!17677 = !DILocation(line: 5760, column: 2, scope: !17619)
!17678 = !DILocation(line: 5775, column: 11, scope: !17619)
!17679 = !DILocation(line: 5777, column: 7, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 5777, column: 7)
!17681 = !DILocation(line: 5777, column: 13, scope: !17680)
!17682 = !DILocation(line: 5777, column: 20, scope: !17680)
!17683 = !DILocation(line: 5777, column: 30, scope: !17680)
!17684 = !DILocation(line: 5777, column: 7, scope: !17619)
!17685 = !DILocation(line: 5778, column: 12, scope: !17680)
!17686 = !DILocation(line: 5778, column: 3, scope: !17680)
!17687 = !DILocation(line: 5780, column: 7, scope: !17688)
!17688 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 5780, column: 7)
!17689 = !DILocation(line: 5780, column: 13, scope: !17688)
!17690 = !DILocation(line: 5780, column: 20, scope: !17688)
!17691 = !DILocation(line: 5780, column: 27, scope: !17688)
!17692 = !DILocation(line: 5780, column: 7, scope: !17619)
!17693 = !DILocation(line: 5781, column: 12, scope: !17694)
!17694 = distinct !DILexicalBlock(scope: !17688, file: !3, line: 5780, column: 50)
!17695 = !DILocation(line: 5782, column: 8, scope: !17696)
!17696 = distinct !DILexicalBlock(scope: !17694, file: !3, line: 5782, column: 8)
!17697 = !DILocation(line: 5782, column: 14, scope: !17696)
!17698 = !DILocation(line: 5782, column: 21, scope: !17696)
!17699 = !DILocation(line: 5782, column: 28, scope: !17696)
!17700 = !DILocation(line: 5782, column: 8, scope: !17694)
!17701 = !DILocation(line: 5783, column: 13, scope: !17696)
!17702 = !DILocation(line: 5783, column: 4, scope: !17696)
!17703 = !DILocation(line: 5784, column: 2, scope: !17694)
!17704 = !DILocation(line: 5786, column: 14, scope: !17619)
!17705 = !DILocation(line: 5786, column: 25, scope: !17619)
!17706 = !DILocation(line: 5786, column: 2, scope: !17619)
!17707 = !DILocation(line: 5788, column: 18, scope: !17619)
!17708 = !DILocation(line: 5788, column: 2, scope: !17619)
!17709 = !DILocation(line: 5793, column: 2, scope: !17619)
!17710 = !DILocation(line: 5811, column: 14, scope: !17619)
!17711 = !DILocation(line: 5811, column: 2, scope: !17619)
!17712 = !DILocation(line: 5813, column: 2, scope: !17619)
!17713 = !DILocation(line: 5814, column: 2, scope: !17619)
!17714 = !DILocation(line: 5816, column: 26, scope: !17619)
!17715 = !DILocation(line: 5816, column: 32, scope: !17619)
!17716 = !DILocation(line: 5816, column: 38, scope: !17619)
!17717 = !DILocation(line: 5816, column: 45, scope: !17619)
!17718 = !DILocation(line: 5816, column: 2, scope: !17619)
!17719 = !DILocation(line: 5837, column: 14, scope: !17619)
!17720 = !DILocation(line: 5837, column: 2, scope: !17619)
!17721 = !DILocation(line: 5839, column: 2, scope: !17619)
!17722 = !DILocation(line: 5842, column: 2, scope: !17619)
!17723 = !DILocation(line: 5845, column: 2, scope: !17619)
!17724 = !DILocation(line: 5847, column: 6, scope: !17725)
!17725 = distinct !DILexicalBlock(scope: !17619, file: !3, line: 5847, column: 6)
!17726 = !DILocation(line: 5847, column: 12, scope: !17725)
!17727 = !DILocation(line: 5847, column: 19, scope: !17725)
!17728 = !DILocation(line: 5847, column: 6, scope: !17619)
!17729 = !DILocation(line: 5848, column: 3, scope: !17730)
!17730 = distinct !DILexicalBlock(scope: !17725, file: !3, line: 5847, column: 29)
!17731 = !DILocation(line: 5848, column: 9, scope: !17730)
!17732 = !DILocation(line: 5848, column: 23, scope: !17730)
!17733 = !DILocation(line: 5849, column: 16, scope: !17730)
!17734 = !DILocation(line: 5849, column: 22, scope: !17730)
!17735 = !DILocation(line: 5849, column: 30, scope: !17730)
!17736 = !DILocation(line: 5849, column: 3, scope: !17730)
!17737 = !DILocation(line: 5850, column: 2, scope: !17730)
!17738 = !DILocation(line: 5852, column: 1, scope: !17619)
!17739 = distinct !DISubprogram(name: "usc_loopback_frame", scope: !3, file: !3, line: 5868, type: !8185, scopeLine: 5869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17740 = !DILocalVariable(name: "info", arg: 1, scope: !17739, file: !3, line: 5868, type: !7524)
!17741 = !DILocation(line: 5868, column: 53, scope: !17739)
!17742 = !DILocalVariable(name: "i", scope: !17739, file: !3, line: 5870, type: !32)
!17743 = !DILocation(line: 5870, column: 6, scope: !17739)
!17744 = !DILocalVariable(name: "oldmode", scope: !17739, file: !3, line: 5871, type: !312)
!17745 = !DILocation(line: 5871, column: 16, scope: !17739)
!17746 = !DILocation(line: 5871, column: 26, scope: !17739)
!17747 = !DILocation(line: 5871, column: 32, scope: !17739)
!17748 = !DILocation(line: 5871, column: 39, scope: !17739)
!17749 = !DILocation(line: 5873, column: 2, scope: !17739)
!17750 = !DILocation(line: 5873, column: 8, scope: !17739)
!17751 = !DILocation(line: 5873, column: 15, scope: !17739)
!17752 = !DILocation(line: 5873, column: 20, scope: !17739)
!17753 = !DILocation(line: 5875, column: 2, scope: !17739)
!17754 = !DILocation(line: 5877, column: 21, scope: !17739)
!17755 = !DILocation(line: 5877, column: 2, scope: !17739)
!17756 = !DILocation(line: 5878, column: 23, scope: !17739)
!17757 = !DILocation(line: 5878, column: 2, scope: !17739)
!17758 = !DILocation(line: 5881, column: 14, scope: !17739)
!17759 = !DILocation(line: 5881, column: 2, scope: !17739)
!17760 = !DILocation(line: 5897, column: 14, scope: !17739)
!17761 = !DILocation(line: 5897, column: 2, scope: !17739)
!17762 = !DILocation(line: 5900, column: 13, scope: !17739)
!17763 = !DILocation(line: 5900, column: 2, scope: !17739)
!17764 = !DILocation(line: 5901, column: 2, scope: !17739)
!17765 = !DILocation(line: 5906, column: 14, scope: !17739)
!17766 = !DILocation(line: 5906, column: 2, scope: !17739)
!17767 = !DILocation(line: 5907, column: 13, scope: !17739)
!17768 = !DILocation(line: 5907, column: 2, scope: !17739)
!17769 = !DILocation(line: 5910, column: 2, scope: !17739)
!17770 = !DILocation(line: 5911, column: 9, scope: !17739)
!17771 = !DILocation(line: 5911, column: 15, scope: !17739)
!17772 = !DILocation(line: 5911, column: 23, scope: !17739)
!17773 = !DILocation(line: 5911, column: 25, scope: !17739)
!17774 = !DILocation(line: 5911, column: 2, scope: !17739)
!17775 = !DILocation(line: 5914, column: 2, scope: !17739)
!17776 = !DILocation(line: 5915, column: 2, scope: !17739)
!17777 = !DILocation(line: 5918, column: 8, scope: !17778)
!17778 = distinct !DILexicalBlock(scope: !17739, file: !3, line: 5918, column: 2)
!17779 = !DILocation(line: 5918, column: 7, scope: !17778)
!17780 = !DILocation(line: 5918, column: 13, scope: !17781)
!17781 = distinct !DILexicalBlock(scope: !17778, file: !3, line: 5918, column: 2)
!17782 = !DILocation(line: 5918, column: 14, scope: !17781)
!17783 = !DILocation(line: 5918, column: 2, scope: !17778)
!17784 = !DILocation(line: 5919, column: 18, scope: !17785)
!17785 = distinct !DILexicalBlock(scope: !17781, file: !3, line: 5919, column: 7)
!17786 = !DILocation(line: 5919, column: 7, scope: !17785)
!17787 = !DILocation(line: 5919, column: 31, scope: !17785)
!17788 = !DILocation(line: 5919, column: 7, scope: !17781)
!17789 = !DILocation(line: 5920, column: 4, scope: !17785)
!17790 = !DILocation(line: 5919, column: 59, scope: !17785)
!17791 = !DILocation(line: 5918, column: 23, scope: !17781)
!17792 = !DILocation(line: 5918, column: 2, scope: !17781)
!17793 = distinct !{!17793, !17783, !17794}
!17794 = !DILocation(line: 5920, column: 4, scope: !17778)
!17795 = !DILocation(line: 5923, column: 22, scope: !17739)
!17796 = !DILocation(line: 5923, column: 2, scope: !17739)
!17797 = !DILocation(line: 5925, column: 2, scope: !17739)
!17798 = !DILocation(line: 5927, column: 22, scope: !17739)
!17799 = !DILocation(line: 5927, column: 2, scope: !17739)
!17800 = !DILocation(line: 5927, column: 8, scope: !17739)
!17801 = !DILocation(line: 5927, column: 15, scope: !17739)
!17802 = !DILocation(line: 5927, column: 20, scope: !17739)
!17803 = !DILocation(line: 5929, column: 1, scope: !17739)
!17804 = distinct !DISubprogram(name: "usc_enable_aux_clock", scope: !3, file: !3, line: 5086, type: !17805, scopeLine: 5087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17805 = !DISubroutineType(types: !17806)
!17806 = !{null, !7524, !987}
!17807 = !DILocalVariable(name: "info", arg: 1, scope: !17804, file: !3, line: 5086, type: !7524)
!17808 = !DILocation(line: 5086, column: 55, scope: !17804)
!17809 = !DILocalVariable(name: "data_rate", arg: 2, scope: !17804, file: !3, line: 5086, type: !987)
!17810 = !DILocation(line: 5086, column: 65, scope: !17804)
!17811 = !DILocalVariable(name: "XtalSpeed", scope: !17804, file: !3, line: 5088, type: !987)
!17812 = !DILocation(line: 5088, column: 6, scope: !17804)
!17813 = !DILocalVariable(name: "Tc", scope: !17804, file: !3, line: 5089, type: !581)
!17814 = !DILocation(line: 5089, column: 6, scope: !17804)
!17815 = !DILocation(line: 5091, column: 7, scope: !17816)
!17816 = distinct !DILexicalBlock(scope: !17804, file: !3, line: 5091, column: 7)
!17817 = !DILocation(line: 5091, column: 7, scope: !17804)
!17818 = !DILocation(line: 5092, column: 13, scope: !17819)
!17819 = distinct !DILexicalBlock(scope: !17816, file: !3, line: 5091, column: 19)
!17820 = !DILocation(line: 5102, column: 14, scope: !17819)
!17821 = !DILocation(line: 5102, column: 24, scope: !17819)
!17822 = !DILocation(line: 5102, column: 23, scope: !17819)
!17823 = !DILocation(line: 5102, column: 8, scope: !17819)
!17824 = !DILocation(line: 5102, column: 6, scope: !17819)
!17825 = !DILocation(line: 5103, column: 12, scope: !17826)
!17826 = distinct !DILexicalBlock(scope: !17819, file: !3, line: 5103, column: 8)
!17827 = !DILocation(line: 5103, column: 24, scope: !17826)
!17828 = !DILocation(line: 5103, column: 22, scope: !17826)
!17829 = !DILocation(line: 5103, column: 35, scope: !17826)
!17830 = !DILocation(line: 5103, column: 42, scope: !17826)
!17831 = !DILocation(line: 5103, column: 40, scope: !17826)
!17832 = !DILocation(line: 5103, column: 8, scope: !17819)
!17833 = !DILocation(line: 5104, column: 6, scope: !17826)
!17834 = !DILocation(line: 5104, column: 4, scope: !17826)
!17835 = !DILocation(line: 5107, column: 15, scope: !17819)
!17836 = !DILocation(line: 5107, column: 27, scope: !17819)
!17837 = !DILocation(line: 5107, column: 3, scope: !17819)
!17838 = !DILocation(line: 5115, column: 15, scope: !17819)
!17839 = !DILocation(line: 5115, column: 44, scope: !17819)
!17840 = !DILocation(line: 5115, column: 33, scope: !17819)
!17841 = !DILocation(line: 5115, column: 56, scope: !17819)
!17842 = !DILocation(line: 5115, column: 65, scope: !17819)
!17843 = !DILocation(line: 5115, column: 26, scope: !17819)
!17844 = !DILocation(line: 5115, column: 3, scope: !17819)
!17845 = !DILocation(line: 5118, column: 15, scope: !17819)
!17846 = !DILocation(line: 5118, column: 44, scope: !17819)
!17847 = !DILocation(line: 5118, column: 34, scope: !17819)
!17848 = !DILocation(line: 5118, column: 56, scope: !17819)
!17849 = !DILocation(line: 5118, column: 66, scope: !17819)
!17850 = !DILocation(line: 5118, column: 27, scope: !17819)
!17851 = !DILocation(line: 5118, column: 3, scope: !17819)
!17852 = !DILocation(line: 5119, column: 2, scope: !17819)
!17853 = !DILocation(line: 5121, column: 15, scope: !17854)
!17854 = distinct !DILexicalBlock(scope: !17816, file: !3, line: 5119, column: 9)
!17855 = !DILocation(line: 5121, column: 43, scope: !17854)
!17856 = !DILocation(line: 5121, column: 32, scope: !17854)
!17857 = !DILocation(line: 5121, column: 55, scope: !17854)
!17858 = !DILocation(line: 5121, column: 26, scope: !17854)
!17859 = !DILocation(line: 5121, column: 3, scope: !17854)
!17860 = !DILocation(line: 5124, column: 1, scope: !17804)
!17861 = distinct !DISubprogram(name: "usc_enable_async_clock", scope: !3, file: !3, line: 6084, type: !17805, scopeLine: 6085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17862 = !DILocalVariable(name: "info", arg: 1, scope: !17861, file: !3, line: 6084, type: !7524)
!17863 = !DILocation(line: 6084, column: 57, scope: !17861)
!17864 = !DILocalVariable(name: "data_rate", arg: 2, scope: !17861, file: !3, line: 6084, type: !987)
!17865 = !DILocation(line: 6084, column: 67, scope: !17861)
!17866 = !DILocation(line: 6086, column: 7, scope: !17867)
!17867 = distinct !DILexicalBlock(scope: !17861, file: !3, line: 6086, column: 7)
!17868 = !DILocation(line: 6086, column: 7, scope: !17861)
!17869 = !DILocation(line: 6101, column: 15, scope: !17870)
!17870 = distinct !DILexicalBlock(scope: !17867, file: !3, line: 6086, column: 19)
!17871 = !DILocation(line: 6101, column: 3, scope: !17870)
!17872 = !DILocation(line: 6110, column: 15, scope: !17870)
!17873 = !DILocation(line: 6110, column: 41, scope: !17870)
!17874 = !DILocation(line: 6110, column: 40, scope: !17870)
!17875 = !DILocation(line: 6110, column: 52, scope: !17870)
!17876 = !DILocation(line: 6110, column: 27, scope: !17870)
!17877 = !DILocation(line: 6110, column: 3, scope: !17870)
!17878 = !DILocation(line: 6118, column: 15, scope: !17870)
!17879 = !DILocation(line: 6119, column: 26, scope: !17870)
!17880 = !DILocation(line: 6119, column: 15, scope: !17870)
!17881 = !DILocation(line: 6119, column: 38, scope: !17870)
!17882 = !DILocation(line: 6119, column: 47, scope: !17870)
!17883 = !DILocation(line: 6119, column: 8, scope: !17870)
!17884 = !DILocation(line: 6118, column: 3, scope: !17870)
!17885 = !DILocation(line: 6124, column: 15, scope: !17870)
!17886 = !DILocation(line: 6125, column: 25, scope: !17870)
!17887 = !DILocation(line: 6125, column: 15, scope: !17870)
!17888 = !DILocation(line: 6125, column: 37, scope: !17870)
!17889 = !DILocation(line: 6125, column: 47, scope: !17870)
!17890 = !DILocation(line: 6125, column: 8, scope: !17870)
!17891 = !DILocation(line: 6124, column: 3, scope: !17870)
!17892 = !DILocation(line: 6126, column: 2, scope: !17870)
!17893 = !DILocation(line: 6128, column: 15, scope: !17894)
!17894 = distinct !DILexicalBlock(scope: !17867, file: !3, line: 6126, column: 9)
!17895 = !DILocation(line: 6128, column: 43, scope: !17894)
!17896 = !DILocation(line: 6128, column: 32, scope: !17894)
!17897 = !DILocation(line: 6128, column: 55, scope: !17894)
!17898 = !DILocation(line: 6128, column: 26, scope: !17894)
!17899 = !DILocation(line: 6128, column: 3, scope: !17894)
!17900 = !DILocation(line: 6131, column: 1, scope: !17861)
!17901 = distinct !DISubprogram(name: "netif_stop_queue", scope: !31, file: !31, line: 3336, type: !406, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17902 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !17903, file: !31, line: 3324, type: !7315)
!17903 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !31, file: !31, line: 3324, type: !12264, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17904 = !DILocation(line: 3324, column: 70, scope: !17903, inlinedAt: !17905)
!17905 = distinct !DILocation(line: 3338, column: 2, scope: !17901)
!17906 = !DILocalVariable(name: "dev", arg: 1, scope: !17901, file: !31, line: 3336, type: !290)
!17907 = !DILocation(line: 3336, column: 56, scope: !17901)
!17908 = !DILocation(line: 3338, column: 42, scope: !17901)
!17909 = !DILocation(line: 3338, column: 22, scope: !17901)
!17910 = !DILocation(line: 3326, column: 35, scope: !17903, inlinedAt: !17905)
!17911 = !DILocation(line: 3326, column: 46, scope: !17903, inlinedAt: !17905)
!17912 = !DILocation(line: 3326, column: 2, scope: !17903, inlinedAt: !17905)
!17913 = !DILocation(line: 3339, column: 1, scope: !17901)
!17914 = distinct !DISubprogram(name: "shutdown", scope: !3, file: !3, line: 1804, type: !8185, scopeLine: 1805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17915 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !17916)
!17916 = distinct !DILocation(line: 1850, column: 2, scope: !17914)
!17917 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !17916)
!17918 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !17919)
!17919 = distinct !DILocation(line: 1827, column: 2, scope: !17920)
!17920 = distinct !DILexicalBlock(scope: !17921, file: !3, line: 1827, column: 2)
!17921 = distinct !DILexicalBlock(scope: !17922, file: !3, line: 1827, column: 2)
!17922 = distinct !DILexicalBlock(scope: !17923, file: !3, line: 1827, column: 2)
!17923 = distinct !DILexicalBlock(scope: !17924, file: !3, line: 1827, column: 2)
!17924 = distinct !DILexicalBlock(scope: !17914, file: !3, line: 1827, column: 2)
!17925 = !DILocalVariable(name: "info", arg: 1, scope: !17914, file: !3, line: 1804, type: !7524)
!17926 = !DILocation(line: 1804, column: 43, scope: !17914)
!17927 = !DILocalVariable(name: "flags", scope: !17914, file: !3, line: 1806, type: !312)
!17928 = !DILocation(line: 1806, column: 16, scope: !17914)
!17929 = !DILocation(line: 1808, column: 29, scope: !17930)
!17930 = distinct !DILexicalBlock(scope: !17914, file: !3, line: 1808, column: 6)
!17931 = !DILocation(line: 1808, column: 35, scope: !17930)
!17932 = !DILocation(line: 1808, column: 7, scope: !17930)
!17933 = !DILocation(line: 1808, column: 6, scope: !17914)
!17934 = !DILocation(line: 1809, column: 3, scope: !17930)
!17935 = !DILocation(line: 1811, column: 6, scope: !17936)
!17936 = distinct !DILexicalBlock(scope: !17914, file: !3, line: 1811, column: 6)
!17937 = !DILocation(line: 1811, column: 18, scope: !17936)
!17938 = !DILocation(line: 1811, column: 6, scope: !17914)
!17939 = !DILocation(line: 1813, column: 24, scope: !17936)
!17940 = !DILocation(line: 1813, column: 30, scope: !17936)
!17941 = !DILocation(line: 1812, column: 3, scope: !17936)
!17942 = !DILocation(line: 1817, column: 2, scope: !17914)
!17943 = !DILocation(line: 1818, column: 2, scope: !17914)
!17944 = !DILocation(line: 1820, column: 2, scope: !17914)
!17945 = !DILocation(line: 1822, column: 6, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17914, file: !3, line: 1822, column: 6)
!17947 = !DILocation(line: 1822, column: 12, scope: !17946)
!17948 = !DILocation(line: 1822, column: 6, scope: !17914)
!17949 = !DILocation(line: 1823, column: 3, scope: !17950)
!17950 = distinct !DILexicalBlock(scope: !17946, file: !3, line: 1822, column: 22)
!17951 = !DILocation(line: 1824, column: 3, scope: !17950)
!17952 = !DILocation(line: 1824, column: 9, scope: !17950)
!17953 = !DILocation(line: 1824, column: 18, scope: !17950)
!17954 = !DILocation(line: 1825, column: 2, scope: !17950)
!17955 = !DILocation(line: 1827, column: 2, scope: !17914)
!17956 = !DILocation(line: 1827, column: 2, scope: !17924)
!17957 = !DILocalVariable(name: "__dummy", scope: !17958, file: !3, line: 1827, type: !312)
!17958 = distinct !DILexicalBlock(scope: !17923, file: !3, line: 1827, column: 2)
!17959 = !DILocation(line: 1827, column: 2, scope: !17958)
!17960 = !DILocalVariable(name: "__dummy2", scope: !17958, file: !3, line: 1827, type: !312)
!17961 = !DILocation(line: 1827, column: 2, scope: !17923)
!17962 = !DILocation(line: 1827, column: 2, scope: !17922)
!17963 = !DILocation(line: 1827, column: 2, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17922, file: !3, line: 1827, column: 2)
!17965 = !DILocalVariable(name: "__dummy", scope: !17966, file: !3, line: 1827, type: !312)
!17966 = distinct !DILexicalBlock(scope: !17967, file: !3, line: 1827, column: 2)
!17967 = distinct !DILexicalBlock(scope: !17964, file: !3, line: 1827, column: 2)
!17968 = !DILocation(line: 1827, column: 2, scope: !17966)
!17969 = !DILocalVariable(name: "__dummy2", scope: !17966, file: !3, line: 1827, type: !312)
!17970 = !DILocation(line: 1827, column: 2, scope: !17967)
!17971 = !DILocation(line: 1827, column: 2, scope: !17921)
!17972 = !{i32 -2139455490}
!17973 = !DILocation(line: 1827, column: 2, scope: !17920)
!17974 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !17919)
!17975 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !17919)
!17976 = !DILocation(line: 1828, column: 2, scope: !17914)
!17977 = !DILocation(line: 1829, column: 20, scope: !17914)
!17978 = !DILocation(line: 1829, column: 2, scope: !17914)
!17979 = !DILocation(line: 1830, column: 23, scope: !17914)
!17980 = !DILocation(line: 1830, column: 2, scope: !17914)
!17981 = !DILocation(line: 1831, column: 2, scope: !17914)
!17982 = !DILocation(line: 1833, column: 2, scope: !17914)
!17983 = !DILocation(line: 1838, column: 13, scope: !17914)
!17984 = !DILocation(line: 1838, column: 41, scope: !17914)
!17985 = !DILocation(line: 1838, column: 31, scope: !17914)
!17986 = !DILocation(line: 1838, column: 52, scope: !17914)
!17987 = !DILocation(line: 1838, column: 61, scope: !17914)
!17988 = !DILocation(line: 1838, column: 24, scope: !17914)
!17989 = !DILocation(line: 1838, column: 2, scope: !17914)
!17990 = !DILocation(line: 1843, column: 13, scope: !17914)
!17991 = !DILocation(line: 1843, column: 41, scope: !17914)
!17992 = !DILocation(line: 1843, column: 31, scope: !17914)
!17993 = !DILocation(line: 1843, column: 52, scope: !17914)
!17994 = !DILocation(line: 1843, column: 61, scope: !17914)
!17995 = !DILocation(line: 1843, column: 24, scope: !17914)
!17996 = !DILocation(line: 1843, column: 2, scope: !17914)
!17997 = !DILocation(line: 1845, column: 7, scope: !17998)
!17998 = distinct !DILexicalBlock(scope: !17914, file: !3, line: 1845, column: 6)
!17999 = !DILocation(line: 1845, column: 13, scope: !17998)
!18000 = !DILocation(line: 1845, column: 18, scope: !17998)
!18001 = !DILocation(line: 1845, column: 22, scope: !17998)
!18002 = !DILocation(line: 1845, column: 25, scope: !17998)
!18003 = !DILocation(line: 1845, column: 31, scope: !17998)
!18004 = !DILocation(line: 1845, column: 36, scope: !17998)
!18005 = !DILocation(line: 1845, column: 41, scope: !17998)
!18006 = !DILocation(line: 1845, column: 49, scope: !17998)
!18007 = !DILocation(line: 1845, column: 57, scope: !17998)
!18008 = !DILocation(line: 1845, column: 6, scope: !17914)
!18009 = !DILocation(line: 1846, column: 3, scope: !18010)
!18010 = distinct !DILexicalBlock(scope: !17998, file: !3, line: 1845, column: 66)
!18011 = !DILocation(line: 1846, column: 9, scope: !18010)
!18012 = !DILocation(line: 1846, column: 24, scope: !18010)
!18013 = !DILocation(line: 1847, column: 26, scope: !18010)
!18014 = !DILocation(line: 1847, column: 3, scope: !18010)
!18015 = !DILocation(line: 1848, column: 2, scope: !18010)
!18016 = !DILocation(line: 1850, column: 26, scope: !17914)
!18017 = !DILocation(line: 1850, column: 32, scope: !17914)
!18018 = !DILocation(line: 1850, column: 45, scope: !17914)
!18019 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !17916)
!18020 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !17916)
!18021 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !17916)
!18022 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !17916)
!18023 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !17916)
!18024 = !DILocation(line: 1852, column: 25, scope: !17914)
!18025 = !DILocation(line: 1852, column: 2, scope: !17914)
!18026 = !DILocation(line: 1854, column: 6, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !17914, file: !3, line: 1854, column: 6)
!18028 = !DILocation(line: 1854, column: 12, scope: !18027)
!18029 = !DILocation(line: 1854, column: 17, scope: !18027)
!18030 = !DILocation(line: 1854, column: 6, scope: !17914)
!18031 = !DILocation(line: 1855, column: 26, scope: !18027)
!18032 = !DILocation(line: 1855, column: 32, scope: !18027)
!18033 = !DILocation(line: 1855, column: 37, scope: !18027)
!18034 = !DILocation(line: 1855, column: 42, scope: !18027)
!18035 = !DILocation(line: 1855, column: 3, scope: !18027)
!18036 = !DILocation(line: 1857, column: 28, scope: !17914)
!18037 = !DILocation(line: 1857, column: 34, scope: !17914)
!18038 = !DILocation(line: 1857, column: 2, scope: !17914)
!18039 = !DILocation(line: 1858, column: 1, scope: !17914)
!18040 = distinct !DISubprogram(name: "copy_overflow", scope: !11665, file: !11665, line: 132, type: !18041, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18041 = !DISubroutineType(types: !18042)
!18042 = !{null, !32, !312}
!18043 = !DILocalVariable(name: "size", arg: 1, scope: !18040, file: !11665, line: 132, type: !32)
!18044 = !DILocation(line: 132, column: 38, scope: !18040)
!18045 = !DILocalVariable(name: "count", arg: 2, scope: !18040, file: !11665, line: 132, type: !312)
!18046 = !DILocation(line: 132, column: 58, scope: !18040)
!18047 = !DILocalVariable(name: "__ret_warn_on", scope: !18048, file: !11665, line: 134, type: !32)
!18048 = distinct !DILexicalBlock(scope: !18040, file: !11665, line: 134, column: 2)
!18049 = !DILocation(line: 134, column: 2, scope: !18048)
!18050 = !DILocation(line: 134, column: 2, scope: !18051)
!18051 = distinct !DILexicalBlock(scope: !18048, file: !11665, line: 134, column: 2)
!18052 = !DILocation(line: 134, column: 2, scope: !18053)
!18053 = distinct !DILexicalBlock(scope: !18051, file: !11665, line: 134, column: 2)
!18054 = !DILocation(line: 134, column: 2, scope: !18055)
!18055 = distinct !DILexicalBlock(scope: !18053, file: !11665, line: 134, column: 2)
!18056 = !DILocation(line: 134, column: 2, scope: !18057)
!18057 = distinct !DILexicalBlock(scope: !18053, file: !11665, line: 134, column: 2)
!18058 = !DILocation(line: 134, column: 2, scope: !18059)
!18059 = distinct !DILexicalBlock(scope: !18057, file: !11665, line: 134, column: 2)
!18060 = !DILocation(line: 134, column: 2, scope: !18061)
!18061 = distinct !DILexicalBlock(scope: !18057, file: !11665, line: 134, column: 2)
!18062 = !{i32 -2145333797, i32 -2145333768, i32 -2145333722, i32 -2145333664, i32 -2145333610, i32 -2145333556, i32 -2145333501, i32 -2145333470}
!18063 = !DILocation(line: 134, column: 2, scope: !18064)
!18064 = distinct !DILexicalBlock(scope: !18057, file: !11665, line: 134, column: 2)
!18065 = !{i32 -2145333050, i32 -2145333043, i32 -2145332991, i32 -2145332960, i32 -2145332930}
!18066 = !DILocation(line: 134, column: 2, scope: !18067)
!18067 = distinct !DILexicalBlock(scope: !18057, file: !11665, line: 134, column: 2)
!18068 = !DILocation(line: 134, column: 2, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18053, file: !11665, line: 134, column: 2)
!18070 = !DILocation(line: 135, column: 1, scope: !18040)
!18071 = distinct !DISubprogram(name: "check_object_size", scope: !11665, file: !11665, line: 122, type: !18072, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18072 = !DISubroutineType(types: !18073)
!18073 = !{null, !3276, !312, !771}
!18074 = !DILocalVariable(name: "ptr", arg: 1, scope: !18071, file: !11665, line: 122, type: !3276)
!18075 = !DILocation(line: 122, column: 50, scope: !18071)
!18076 = !DILocalVariable(name: "n", arg: 2, scope: !18071, file: !11665, line: 122, type: !312)
!18077 = !DILocation(line: 122, column: 69, scope: !18071)
!18078 = !DILocalVariable(name: "to_user", arg: 3, scope: !18071, file: !11665, line: 123, type: !771)
!18079 = !DILocation(line: 123, column: 15, scope: !18071)
!18080 = !DILocation(line: 124, column: 3, scope: !18071)
!18081 = distinct !DISubprogram(name: "consume_skb", scope: !417, file: !417, line: 1063, type: !469, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18082 = !DILocalVariable(name: "skb", arg: 1, scope: !18081, file: !417, line: 1063, type: !415)
!18083 = !DILocation(line: 1063, column: 48, scope: !18081)
!18084 = !DILocation(line: 1065, column: 19, scope: !18081)
!18085 = !DILocation(line: 1065, column: 9, scope: !18081)
!18086 = !DILocation(line: 1065, column: 2, scope: !18081)
!18087 = distinct !DISubprogram(name: "mgsl_get_text_ptr", scope: !3, file: !3, line: 916, type: !3903, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18088 = !DILocation(line: 918, column: 2, scope: !18087)
!18089 = distinct !DISubprogram(name: "mgsl_init_tty", scope: !3, file: !3, line: 4206, type: !8265, scopeLine: 4207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18090 = !DILocalVariable(name: "rc", scope: !18089, file: !3, line: 4208, type: !32)
!18091 = !DILocation(line: 4208, column: 6, scope: !18089)
!18092 = !DILocation(line: 4210, column: 18, scope: !18089)
!18093 = !DILocation(line: 4210, column: 16, scope: !18089)
!18094 = !DILocation(line: 4211, column: 7, scope: !18095)
!18095 = distinct !DILexicalBlock(scope: !18089, file: !3, line: 4211, column: 6)
!18096 = !DILocation(line: 4211, column: 6, scope: !18089)
!18097 = !DILocation(line: 4212, column: 3, scope: !18095)
!18098 = !DILocation(line: 4214, column: 2, scope: !18089)
!18099 = !DILocation(line: 4214, column: 17, scope: !18089)
!18100 = !DILocation(line: 4214, column: 29, scope: !18089)
!18101 = !DILocation(line: 4215, column: 2, scope: !18089)
!18102 = !DILocation(line: 4215, column: 17, scope: !18089)
!18103 = !DILocation(line: 4215, column: 22, scope: !18089)
!18104 = !DILocation(line: 4216, column: 25, scope: !18089)
!18105 = !DILocation(line: 4216, column: 2, scope: !18089)
!18106 = !DILocation(line: 4216, column: 17, scope: !18089)
!18107 = !DILocation(line: 4216, column: 23, scope: !18089)
!18108 = !DILocation(line: 4217, column: 2, scope: !18089)
!18109 = !DILocation(line: 4217, column: 17, scope: !18089)
!18110 = !DILocation(line: 4217, column: 29, scope: !18089)
!18111 = !DILocation(line: 4218, column: 2, scope: !18089)
!18112 = !DILocation(line: 4218, column: 17, scope: !18089)
!18113 = !DILocation(line: 4218, column: 22, scope: !18089)
!18114 = !DILocation(line: 4219, column: 2, scope: !18089)
!18115 = !DILocation(line: 4219, column: 17, scope: !18089)
!18116 = !DILocation(line: 4219, column: 25, scope: !18089)
!18117 = !DILocation(line: 4220, column: 2, scope: !18089)
!18118 = !DILocation(line: 4220, column: 17, scope: !18089)
!18119 = !DILocation(line: 4220, column: 32, scope: !18089)
!18120 = !DILocation(line: 4221, column: 2, scope: !18089)
!18121 = !DILocation(line: 4221, column: 17, scope: !18089)
!18122 = !DILocation(line: 4221, column: 30, scope: !18089)
!18123 = !DILocation(line: 4221, column: 38, scope: !18089)
!18124 = !DILocation(line: 4223, column: 2, scope: !18089)
!18125 = !DILocation(line: 4223, column: 17, scope: !18089)
!18126 = !DILocation(line: 4223, column: 30, scope: !18089)
!18127 = !DILocation(line: 4223, column: 39, scope: !18089)
!18128 = !DILocation(line: 4224, column: 2, scope: !18089)
!18129 = !DILocation(line: 4224, column: 17, scope: !18089)
!18130 = !DILocation(line: 4224, column: 30, scope: !18089)
!18131 = !DILocation(line: 4224, column: 39, scope: !18089)
!18132 = !DILocation(line: 4225, column: 2, scope: !18089)
!18133 = !DILocation(line: 4225, column: 17, scope: !18089)
!18134 = !DILocation(line: 4225, column: 23, scope: !18089)
!18135 = !DILocation(line: 4226, column: 21, scope: !18089)
!18136 = !DILocation(line: 4226, column: 2, scope: !18089)
!18137 = !DILocation(line: 4227, column: 32, scope: !18138)
!18138 = distinct !DILexicalBlock(scope: !18089, file: !3, line: 4227, column: 6)
!18139 = !DILocation(line: 4227, column: 12, scope: !18138)
!18140 = !DILocation(line: 4227, column: 10, scope: !18138)
!18141 = !DILocation(line: 4227, column: 48, scope: !18138)
!18142 = !DILocation(line: 4227, column: 6, scope: !18089)
!18143 = !DILocation(line: 4228, column: 3, scope: !18144)
!18144 = distinct !DILexicalBlock(scope: !18138, file: !3, line: 4227, column: 53)
!18145 = !DILocation(line: 4230, column: 18, scope: !18144)
!18146 = !DILocation(line: 4230, column: 3, scope: !18144)
!18147 = !DILocation(line: 4231, column: 17, scope: !18144)
!18148 = !DILocation(line: 4232, column: 10, scope: !18144)
!18149 = !DILocation(line: 4232, column: 3, scope: !18144)
!18150 = !DILocation(line: 4236, column: 3, scope: !18089)
!18151 = !DILocation(line: 4236, column: 16, scope: !18089)
!18152 = !DILocation(line: 4237, column: 3, scope: !18089)
!18153 = !DILocation(line: 4237, column: 18, scope: !18089)
!18154 = !DILocation(line: 4235, column: 3, scope: !18089)
!18155 = !DILocation(line: 4238, column: 2, scope: !18089)
!18156 = !DILocation(line: 4239, column: 1, scope: !18089)
!18157 = distinct !DISubprogram(name: "alloc_tty_driver", scope: !4515, file: !4515, line: 355, type: !18158, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18158 = !DISubroutineType(types: !18159)
!18159 = !{!4513, !7}
!18160 = !DILocalVariable(name: "lines", arg: 1, scope: !18157, file: !4515, line: 355, type: !7)
!18161 = !DILocation(line: 355, column: 64, scope: !18157)
!18162 = !DILocalVariable(name: "ret", scope: !18157, file: !4515, line: 357, type: !4513)
!18163 = !DILocation(line: 357, column: 21, scope: !18157)
!18164 = !DILocation(line: 357, column: 27, scope: !18157)
!18165 = !DILocation(line: 358, column: 13, scope: !18166)
!18166 = distinct !DILexicalBlock(scope: !18157, file: !4515, line: 358, column: 6)
!18167 = !DILocation(line: 358, column: 6, scope: !18166)
!18168 = !DILocation(line: 358, column: 6, scope: !18157)
!18169 = !DILocation(line: 359, column: 3, scope: !18166)
!18170 = !DILocation(line: 360, column: 9, scope: !18157)
!18171 = !DILocation(line: 360, column: 2, scope: !18157)
!18172 = !DILocation(line: 361, column: 1, scope: !18157)
!18173 = distinct !DISubprogram(name: "IS_ERR", scope: !18174, file: !18174, line: 34, type: !18175, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18174 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!18175 = !DISubroutineType(types: !18176)
!18176 = !{!771, !3276}
!18177 = !DILocalVariable(name: "ptr", arg: 1, scope: !18173, file: !18174, line: 34, type: !3276)
!18178 = !DILocation(line: 34, column: 60, scope: !18173)
!18179 = !DILocation(line: 36, column: 9, scope: !18173)
!18180 = !DILocation(line: 36, column: 2, scope: !18173)
!18181 = distinct !DISubprogram(name: "mgsl_install", scope: !3, file: !3, line: 3337, type: !4865, scopeLine: 3338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18182 = !DILocalVariable(name: "driver", arg: 1, scope: !18181, file: !3, line: 3337, type: !4513)
!18183 = !DILocation(line: 3337, column: 44, scope: !18181)
!18184 = !DILocalVariable(name: "tty", arg: 2, scope: !18181, file: !3, line: 3337, type: !3760)
!18185 = !DILocation(line: 3337, column: 71, scope: !18181)
!18186 = !DILocalVariable(name: "info", scope: !18181, file: !3, line: 3339, type: !7524)
!18187 = !DILocation(line: 3339, column: 22, scope: !18181)
!18188 = !DILocalVariable(name: "line", scope: !18181, file: !3, line: 3340, type: !32)
!18189 = !DILocation(line: 3340, column: 6, scope: !18181)
!18190 = !DILocation(line: 3340, column: 13, scope: !18181)
!18191 = !DILocation(line: 3340, column: 18, scope: !18181)
!18192 = !DILocation(line: 3343, column: 6, scope: !18193)
!18193 = distinct !DILexicalBlock(scope: !18181, file: !3, line: 3343, column: 6)
!18194 = !DILocation(line: 3343, column: 14, scope: !18193)
!18195 = !DILocation(line: 3343, column: 11, scope: !18193)
!18196 = !DILocation(line: 3343, column: 6, scope: !18181)
!18197 = !DILocation(line: 3345, column: 24, scope: !18198)
!18198 = distinct !DILexicalBlock(scope: !18193, file: !3, line: 3343, column: 33)
!18199 = !DILocation(line: 3344, column: 3, scope: !18198)
!18200 = !DILocation(line: 3346, column: 3, scope: !18198)
!18201 = !DILocation(line: 3350, column: 9, scope: !18181)
!18202 = !DILocation(line: 3350, column: 7, scope: !18181)
!18203 = !DILocation(line: 3351, column: 2, scope: !18181)
!18204 = !DILocation(line: 3351, column: 9, scope: !18181)
!18205 = !DILocation(line: 3351, column: 14, scope: !18181)
!18206 = !DILocation(line: 3351, column: 17, scope: !18181)
!18207 = !DILocation(line: 3351, column: 23, scope: !18181)
!18208 = !DILocation(line: 3351, column: 31, scope: !18181)
!18209 = !DILocation(line: 3351, column: 28, scope: !18181)
!18210 = !DILocation(line: 0, scope: !18181)
!18211 = !DILocation(line: 3352, column: 10, scope: !18181)
!18212 = !DILocation(line: 3352, column: 16, scope: !18181)
!18213 = !DILocation(line: 3352, column: 8, scope: !18181)
!18214 = distinct !{!18214, !18203, !18212}
!18215 = !DILocation(line: 3353, column: 26, scope: !18216)
!18216 = distinct !DILexicalBlock(scope: !18181, file: !3, line: 3353, column: 6)
!18217 = !DILocation(line: 3353, column: 32, scope: !18216)
!18218 = !DILocation(line: 3353, column: 37, scope: !18216)
!18219 = !DILocation(line: 3353, column: 6, scope: !18216)
!18220 = !DILocation(line: 3353, column: 6, scope: !18181)
!18221 = !DILocation(line: 3354, column: 3, scope: !18216)
!18222 = !DILocation(line: 3355, column: 21, scope: !18181)
!18223 = !DILocation(line: 3355, column: 2, scope: !18181)
!18224 = !DILocation(line: 3355, column: 7, scope: !18181)
!18225 = !DILocation(line: 3355, column: 19, scope: !18181)
!18226 = !DILocation(line: 3357, column: 27, scope: !18181)
!18227 = !DILocation(line: 3357, column: 33, scope: !18181)
!18228 = !DILocation(line: 3357, column: 39, scope: !18181)
!18229 = !DILocation(line: 3357, column: 47, scope: !18181)
!18230 = !DILocation(line: 3357, column: 9, scope: !18181)
!18231 = !DILocation(line: 3357, column: 2, scope: !18181)
!18232 = !DILocation(line: 3358, column: 1, scope: !18181)
!18233 = distinct !DISubprogram(name: "mgsl_open", scope: !3, file: !3, line: 3370, type: !4873, scopeLine: 3371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18234 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !18235)
!18235 = distinct !DILocation(line: 3391, column: 2, scope: !18233)
!18236 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !18235)
!18237 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !18238)
!18238 = distinct !DILocation(line: 3387, column: 3, scope: !18239)
!18239 = distinct !DILexicalBlock(scope: !18240, file: !3, line: 3385, column: 22)
!18240 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 3385, column: 6)
!18241 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !18238)
!18242 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !18243)
!18243 = distinct !DILocation(line: 3384, column: 2, scope: !18244)
!18244 = distinct !DILexicalBlock(scope: !18245, file: !3, line: 3384, column: 2)
!18245 = distinct !DILexicalBlock(scope: !18246, file: !3, line: 3384, column: 2)
!18246 = distinct !DILexicalBlock(scope: !18247, file: !3, line: 3384, column: 2)
!18247 = distinct !DILexicalBlock(scope: !18248, file: !3, line: 3384, column: 2)
!18248 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 3384, column: 2)
!18249 = !DILocalVariable(name: "tty", arg: 1, scope: !18233, file: !3, line: 3370, type: !3760)
!18250 = !DILocation(line: 3370, column: 41, scope: !18233)
!18251 = !DILocalVariable(name: "filp", arg: 2, scope: !18233, file: !3, line: 3370, type: !1315)
!18252 = !DILocation(line: 3370, column: 60, scope: !18233)
!18253 = !DILocalVariable(name: "info", scope: !18233, file: !3, line: 3372, type: !7524)
!18254 = !DILocation(line: 3372, column: 22, scope: !18233)
!18255 = !DILocation(line: 3372, column: 29, scope: !18233)
!18256 = !DILocation(line: 3372, column: 34, scope: !18233)
!18257 = !DILocalVariable(name: "flags", scope: !18233, file: !3, line: 3373, type: !312)
!18258 = !DILocation(line: 3373, column: 16, scope: !18233)
!18259 = !DILocalVariable(name: "retval", scope: !18233, file: !3, line: 3374, type: !32)
!18260 = !DILocation(line: 3374, column: 6, scope: !18233)
!18261 = !DILocation(line: 3376, column: 19, scope: !18233)
!18262 = !DILocation(line: 3376, column: 2, scope: !18233)
!18263 = !DILocation(line: 3376, column: 8, scope: !18233)
!18264 = !DILocation(line: 3376, column: 13, scope: !18233)
!18265 = !DILocation(line: 3376, column: 17, scope: !18233)
!18266 = !DILocation(line: 3378, column: 6, scope: !18267)
!18267 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 3378, column: 6)
!18268 = !DILocation(line: 3378, column: 18, scope: !18267)
!18269 = !DILocation(line: 3378, column: 6, scope: !18233)
!18270 = !DILocation(line: 3380, column: 23, scope: !18267)
!18271 = !DILocation(line: 3380, column: 28, scope: !18267)
!18272 = !DILocation(line: 3380, column: 36, scope: !18267)
!18273 = !DILocation(line: 3380, column: 42, scope: !18267)
!18274 = !DILocation(line: 3380, column: 48, scope: !18267)
!18275 = !DILocation(line: 3380, column: 53, scope: !18267)
!18276 = !DILocation(line: 3379, column: 3, scope: !18267)
!18277 = !DILocation(line: 3382, column: 28, scope: !18233)
!18278 = !DILocation(line: 3382, column: 34, scope: !18233)
!18279 = !DILocation(line: 3382, column: 39, scope: !18233)
!18280 = !DILocation(line: 3382, column: 45, scope: !18233)
!18281 = !DILocation(line: 3382, column: 27, scope: !18233)
!18282 = !DILocation(line: 3382, column: 2, scope: !18233)
!18283 = !DILocation(line: 3382, column: 8, scope: !18233)
!18284 = !DILocation(line: 3382, column: 13, scope: !18233)
!18285 = !DILocation(line: 3382, column: 25, scope: !18233)
!18286 = !DILocation(line: 3384, column: 2, scope: !18233)
!18287 = !DILocation(line: 3384, column: 2, scope: !18248)
!18288 = !DILocalVariable(name: "__dummy", scope: !18289, file: !3, line: 3384, type: !312)
!18289 = distinct !DILexicalBlock(scope: !18247, file: !3, line: 3384, column: 2)
!18290 = !DILocation(line: 3384, column: 2, scope: !18289)
!18291 = !DILocalVariable(name: "__dummy2", scope: !18289, file: !3, line: 3384, type: !312)
!18292 = !DILocation(line: 3384, column: 2, scope: !18247)
!18293 = !DILocation(line: 3384, column: 2, scope: !18246)
!18294 = !DILocation(line: 3384, column: 2, scope: !18295)
!18295 = distinct !DILexicalBlock(scope: !18246, file: !3, line: 3384, column: 2)
!18296 = !DILocalVariable(name: "__dummy", scope: !18297, file: !3, line: 3384, type: !312)
!18297 = distinct !DILexicalBlock(scope: !18298, file: !3, line: 3384, column: 2)
!18298 = distinct !DILexicalBlock(scope: !18295, file: !3, line: 3384, column: 2)
!18299 = !DILocation(line: 3384, column: 2, scope: !18297)
!18300 = !DILocalVariable(name: "__dummy2", scope: !18297, file: !3, line: 3384, type: !312)
!18301 = !DILocation(line: 3384, column: 2, scope: !18298)
!18302 = !DILocation(line: 3384, column: 2, scope: !18245)
!18303 = !{i32 -2139376309}
!18304 = !DILocation(line: 3384, column: 2, scope: !18244)
!18305 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !18243)
!18306 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !18243)
!18307 = !DILocation(line: 3385, column: 6, scope: !18240)
!18308 = !DILocation(line: 3385, column: 12, scope: !18240)
!18309 = !DILocation(line: 3385, column: 6, scope: !18233)
!18310 = !DILocation(line: 3386, column: 10, scope: !18239)
!18311 = !DILocation(line: 3387, column: 27, scope: !18239)
!18312 = !DILocation(line: 3387, column: 33, scope: !18239)
!18313 = !DILocation(line: 3387, column: 42, scope: !18239)
!18314 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !18238)
!18315 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !18238)
!18316 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !18238)
!18317 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !18238)
!18318 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !18238)
!18319 = !DILocation(line: 3388, column: 3, scope: !18239)
!18320 = !DILocation(line: 3390, column: 2, scope: !18233)
!18321 = !DILocation(line: 3390, column: 8, scope: !18233)
!18322 = !DILocation(line: 3390, column: 13, scope: !18233)
!18323 = !DILocation(line: 3390, column: 18, scope: !18233)
!18324 = !DILocation(line: 3391, column: 26, scope: !18233)
!18325 = !DILocation(line: 3391, column: 32, scope: !18233)
!18326 = !DILocation(line: 3391, column: 41, scope: !18233)
!18327 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !18235)
!18328 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !18235)
!18329 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !18235)
!18330 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !18235)
!18331 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !18235)
!18332 = !DILocation(line: 3393, column: 6, scope: !18333)
!18333 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 3393, column: 6)
!18334 = !DILocation(line: 3393, column: 12, scope: !18333)
!18335 = !DILocation(line: 3393, column: 17, scope: !18333)
!18336 = !DILocation(line: 3393, column: 23, scope: !18333)
!18337 = !DILocation(line: 3393, column: 6, scope: !18233)
!18338 = !DILocation(line: 3395, column: 20, scope: !18339)
!18339 = distinct !DILexicalBlock(scope: !18333, file: !3, line: 3393, column: 29)
!18340 = !DILocation(line: 3395, column: 12, scope: !18339)
!18341 = !DILocation(line: 3395, column: 10, scope: !18339)
!18342 = !DILocation(line: 3396, column: 7, scope: !18343)
!18343 = distinct !DILexicalBlock(scope: !18339, file: !3, line: 3396, column: 7)
!18344 = !DILocation(line: 3396, column: 14, scope: !18343)
!18345 = !DILocation(line: 3396, column: 7, scope: !18339)
!18346 = !DILocation(line: 3397, column: 4, scope: !18343)
!18347 = !DILocation(line: 3398, column: 2, scope: !18339)
!18348 = !DILocation(line: 3400, column: 27, scope: !18233)
!18349 = !DILocation(line: 3400, column: 32, scope: !18233)
!18350 = !DILocation(line: 3400, column: 38, scope: !18233)
!18351 = !DILocation(line: 3400, column: 11, scope: !18233)
!18352 = !DILocation(line: 3400, column: 9, scope: !18233)
!18353 = !DILocation(line: 3401, column: 6, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 3401, column: 6)
!18355 = !DILocation(line: 3401, column: 6, scope: !18233)
!18356 = !DILocation(line: 3402, column: 7, scope: !18357)
!18357 = distinct !DILexicalBlock(scope: !18358, file: !3, line: 3402, column: 7)
!18358 = distinct !DILexicalBlock(scope: !18354, file: !3, line: 3401, column: 14)
!18359 = !DILocation(line: 3402, column: 19, scope: !18357)
!18360 = !DILocation(line: 3402, column: 7, scope: !18358)
!18361 = !DILocation(line: 3404, column: 25, scope: !18357)
!18362 = !DILocation(line: 3404, column: 31, scope: !18357)
!18363 = !DILocation(line: 3404, column: 44, scope: !18357)
!18364 = !DILocation(line: 3403, column: 4, scope: !18357)
!18365 = !DILocation(line: 3405, column: 3, scope: !18358)
!18366 = !DILocation(line: 3408, column: 6, scope: !18367)
!18367 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 3408, column: 6)
!18368 = !DILocation(line: 3408, column: 18, scope: !18367)
!18369 = !DILocation(line: 3408, column: 6, scope: !18233)
!18370 = !DILocation(line: 3410, column: 24, scope: !18367)
!18371 = !DILocation(line: 3410, column: 30, scope: !18367)
!18372 = !DILocation(line: 3409, column: 3, scope: !18367)
!18373 = !DILocation(line: 3411, column: 9, scope: !18233)
!18374 = !DILocation(line: 3411, column: 2, scope: !18233)
!18375 = !DILabel(scope: !18233, name: "cleanup", file: !3, line: 3413)
!18376 = !DILocation(line: 3413, column: 1, scope: !18233)
!18377 = !DILocation(line: 3414, column: 6, scope: !18378)
!18378 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 3414, column: 6)
!18379 = !DILocation(line: 3414, column: 6, scope: !18233)
!18380 = !DILocation(line: 3415, column: 7, scope: !18381)
!18381 = distinct !DILexicalBlock(scope: !18382, file: !3, line: 3415, column: 7)
!18382 = distinct !DILexicalBlock(scope: !18378, file: !3, line: 3414, column: 14)
!18383 = !DILocation(line: 3415, column: 12, scope: !18381)
!18384 = !DILocation(line: 3415, column: 18, scope: !18381)
!18385 = !DILocation(line: 3415, column: 7, scope: !18382)
!18386 = !DILocation(line: 3416, column: 4, scope: !18381)
!18387 = !DILocation(line: 3416, column: 10, scope: !18381)
!18388 = !DILocation(line: 3416, column: 15, scope: !18381)
!18389 = !DILocation(line: 3416, column: 19, scope: !18381)
!18390 = !DILocation(line: 3417, column: 6, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18382, file: !3, line: 3417, column: 6)
!18392 = !DILocation(line: 3417, column: 12, scope: !18391)
!18393 = !DILocation(line: 3417, column: 17, scope: !18391)
!18394 = !DILocation(line: 3417, column: 6, scope: !18382)
!18395 = !DILocation(line: 3418, column: 4, scope: !18391)
!18396 = !DILocation(line: 3418, column: 10, scope: !18391)
!18397 = !DILocation(line: 3418, column: 15, scope: !18391)
!18398 = !DILocation(line: 3418, column: 20, scope: !18391)
!18399 = !DILocation(line: 3419, column: 2, scope: !18382)
!18400 = !DILocation(line: 3421, column: 9, scope: !18233)
!18401 = !DILocation(line: 3421, column: 2, scope: !18233)
!18402 = distinct !DISubprogram(name: "mgsl_close", scope: !3, file: !3, line: 3066, type: !4877, scopeLine: 3067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18403 = !DILocalVariable(name: "tty", arg: 1, scope: !18402, file: !3, line: 3066, type: !3760)
!18404 = !DILocation(line: 3066, column: 43, scope: !18402)
!18405 = !DILocalVariable(name: "filp", arg: 2, scope: !18402, file: !3, line: 3066, type: !1315)
!18406 = !DILocation(line: 3066, column: 62, scope: !18402)
!18407 = !DILocalVariable(name: "info", scope: !18402, file: !3, line: 3068, type: !7524)
!18408 = !DILocation(line: 3068, column: 23, scope: !18402)
!18409 = !DILocation(line: 3068, column: 30, scope: !18402)
!18410 = !DILocation(line: 3068, column: 35, scope: !18402)
!18411 = !DILocation(line: 3070, column: 26, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18402, file: !3, line: 3070, column: 6)
!18413 = !DILocation(line: 3070, column: 32, scope: !18412)
!18414 = !DILocation(line: 3070, column: 37, scope: !18412)
!18415 = !DILocation(line: 3070, column: 6, scope: !18412)
!18416 = !DILocation(line: 3070, column: 6, scope: !18402)
!18417 = !DILocation(line: 3071, column: 3, scope: !18412)
!18418 = !DILocation(line: 3073, column: 6, scope: !18419)
!18419 = distinct !DILexicalBlock(scope: !18402, file: !3, line: 3073, column: 6)
!18420 = !DILocation(line: 3073, column: 18, scope: !18419)
!18421 = !DILocation(line: 3073, column: 6, scope: !18402)
!18422 = !DILocation(line: 3075, column: 24, scope: !18419)
!18423 = !DILocation(line: 3075, column: 30, scope: !18419)
!18424 = !DILocation(line: 3075, column: 43, scope: !18419)
!18425 = !DILocation(line: 3075, column: 49, scope: !18419)
!18426 = !DILocation(line: 3075, column: 54, scope: !18419)
!18427 = !DILocation(line: 3074, column: 3, scope: !18419)
!18428 = !DILocation(line: 3077, column: 28, scope: !18429)
!18429 = distinct !DILexicalBlock(scope: !18402, file: !3, line: 3077, column: 6)
!18430 = !DILocation(line: 3077, column: 34, scope: !18429)
!18431 = !DILocation(line: 3077, column: 40, scope: !18429)
!18432 = !DILocation(line: 3077, column: 45, scope: !18429)
!18433 = !DILocation(line: 3077, column: 6, scope: !18429)
!18434 = !DILocation(line: 3077, column: 51, scope: !18429)
!18435 = !DILocation(line: 3077, column: 6, scope: !18402)
!18436 = !DILocation(line: 3078, column: 3, scope: !18429)
!18437 = !DILocation(line: 3080, column: 14, scope: !18402)
!18438 = !DILocation(line: 3080, column: 20, scope: !18402)
!18439 = !DILocation(line: 3080, column: 25, scope: !18402)
!18440 = !DILocation(line: 3080, column: 2, scope: !18402)
!18441 = !DILocation(line: 3081, column: 28, scope: !18442)
!18442 = distinct !DILexicalBlock(scope: !18402, file: !3, line: 3081, column: 6)
!18443 = !DILocation(line: 3081, column: 34, scope: !18442)
!18444 = !DILocation(line: 3081, column: 6, scope: !18442)
!18445 = !DILocation(line: 3081, column: 6, scope: !18402)
!18446 = !DILocation(line: 3082, column: 25, scope: !18442)
!18447 = !DILocation(line: 3082, column: 30, scope: !18442)
!18448 = !DILocation(line: 3082, column: 36, scope: !18442)
!18449 = !DILocation(line: 3082, column: 4, scope: !18442)
!18450 = !DILocation(line: 3083, column: 20, scope: !18402)
!18451 = !DILocation(line: 3083, column: 2, scope: !18402)
!18452 = !DILocation(line: 3084, column: 18, scope: !18402)
!18453 = !DILocation(line: 3084, column: 2, scope: !18402)
!18454 = !DILocation(line: 3085, column: 11, scope: !18402)
!18455 = !DILocation(line: 3085, column: 2, scope: !18402)
!18456 = !DILocation(line: 3086, column: 16, scope: !18402)
!18457 = !DILocation(line: 3086, column: 22, scope: !18402)
!18458 = !DILocation(line: 3086, column: 27, scope: !18402)
!18459 = !DILocation(line: 3086, column: 2, scope: !18402)
!18460 = !DILocation(line: 3088, column: 22, scope: !18402)
!18461 = !DILocation(line: 3088, column: 28, scope: !18402)
!18462 = !DILocation(line: 3088, column: 34, scope: !18402)
!18463 = !DILocation(line: 3088, column: 2, scope: !18402)
!18464 = !DILocation(line: 3089, column: 2, scope: !18402)
!18465 = !DILocation(line: 3089, column: 8, scope: !18402)
!18466 = !DILocation(line: 3089, column: 13, scope: !18402)
!18467 = !DILocation(line: 3089, column: 17, scope: !18402)
!18468 = !DILabel(scope: !18402, name: "cleanup", file: !3, line: 3090)
!18469 = !DILocation(line: 3090, column: 1, scope: !18402)
!18470 = !DILocation(line: 3091, column: 6, scope: !18471)
!18471 = distinct !DILexicalBlock(scope: !18402, file: !3, line: 3091, column: 6)
!18472 = !DILocation(line: 3091, column: 18, scope: !18471)
!18473 = !DILocation(line: 3091, column: 6, scope: !18402)
!18474 = !DILocation(line: 3093, column: 4, scope: !18471)
!18475 = !DILocation(line: 3093, column: 9, scope: !18471)
!18476 = !DILocation(line: 3093, column: 17, scope: !18471)
!18477 = !DILocation(line: 3093, column: 23, scope: !18471)
!18478 = !DILocation(line: 3093, column: 29, scope: !18471)
!18479 = !DILocation(line: 3093, column: 34, scope: !18471)
!18480 = !DILocation(line: 3092, column: 3, scope: !18471)
!18481 = !DILocation(line: 3095, column: 1, scope: !18402)
!18482 = distinct !DISubprogram(name: "mgsl_write", scope: !3, file: !3, line: 2089, type: !4886, scopeLine: 2091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18483 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !18484)
!18484 = distinct !DILocation(line: 2192, column: 3, scope: !18485)
!18485 = distinct !DILexicalBlock(scope: !18486, file: !3, line: 2192, column: 3)
!18486 = distinct !DILexicalBlock(scope: !18487, file: !3, line: 2192, column: 3)
!18487 = distinct !DILexicalBlock(scope: !18488, file: !3, line: 2192, column: 3)
!18488 = distinct !DILexicalBlock(scope: !18489, file: !3, line: 2192, column: 3)
!18489 = distinct !DILexicalBlock(scope: !18490, file: !3, line: 2192, column: 3)
!18490 = distinct !DILexicalBlock(scope: !18491, file: !3, line: 2191, column: 60)
!18491 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 2191, column: 7)
!18492 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !18493)
!18493 = distinct !DILocation(line: 2184, column: 4, scope: !18494)
!18494 = distinct !DILexicalBlock(scope: !18495, file: !3, line: 2171, column: 13)
!18495 = distinct !DILexicalBlock(scope: !18496, file: !3, line: 2170, column: 9)
!18496 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 2106, column: 7)
!18497 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !18493)
!18498 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !18499)
!18499 = distinct !DILocation(line: 2177, column: 5, scope: !18500)
!18500 = distinct !DILexicalBlock(scope: !18501, file: !3, line: 2176, column: 16)
!18501 = distinct !DILexicalBlock(scope: !18494, file: !3, line: 2176, column: 8)
!18502 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !18499)
!18503 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !18504)
!18504 = distinct !DILocation(line: 2172, column: 4, scope: !18505)
!18505 = distinct !DILexicalBlock(scope: !18506, file: !3, line: 2172, column: 4)
!18506 = distinct !DILexicalBlock(scope: !18507, file: !3, line: 2172, column: 4)
!18507 = distinct !DILexicalBlock(scope: !18508, file: !3, line: 2172, column: 4)
!18508 = distinct !DILexicalBlock(scope: !18509, file: !3, line: 2172, column: 4)
!18509 = distinct !DILexicalBlock(scope: !18494, file: !3, line: 2172, column: 4)
!18510 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !18511)
!18511 = distinct !DILocation(line: 2135, column: 4, scope: !18512)
!18512 = distinct !DILexicalBlock(scope: !18513, file: !3, line: 2109, column: 24)
!18513 = distinct !DILexicalBlock(scope: !18514, file: !3, line: 2109, column: 7)
!18514 = distinct !DILexicalBlock(scope: !18496, file: !3, line: 2107, column: 41)
!18515 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !18511)
!18516 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !18517)
!18517 = distinct !DILocation(line: 2195, column: 3, scope: !18490)
!18518 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !18517)
!18519 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !18520)
!18520 = distinct !DILocation(line: 2133, column: 4, scope: !18521)
!18521 = distinct !DILexicalBlock(scope: !18522, file: !3, line: 2133, column: 4)
!18522 = distinct !DILexicalBlock(scope: !18523, file: !3, line: 2133, column: 4)
!18523 = distinct !DILexicalBlock(scope: !18524, file: !3, line: 2133, column: 4)
!18524 = distinct !DILexicalBlock(scope: !18525, file: !3, line: 2133, column: 4)
!18525 = distinct !DILexicalBlock(scope: !18512, file: !3, line: 2133, column: 4)
!18526 = !DILocalVariable(name: "tty", arg: 1, scope: !18482, file: !3, line: 2089, type: !3760)
!18527 = !DILocation(line: 2089, column: 43, scope: !18482)
!18528 = !DILocalVariable(name: "buf", arg: 2, scope: !18482, file: !3, line: 2090, type: !946)
!18529 = !DILocation(line: 2090, column: 28, scope: !18482)
!18530 = !DILocalVariable(name: "count", arg: 3, scope: !18482, file: !3, line: 2090, type: !32)
!18531 = !DILocation(line: 2090, column: 37, scope: !18482)
!18532 = !DILocalVariable(name: "c", scope: !18482, file: !3, line: 2092, type: !32)
!18533 = !DILocation(line: 2092, column: 6, scope: !18482)
!18534 = !DILocalVariable(name: "ret", scope: !18482, file: !3, line: 2092, type: !32)
!18535 = !DILocation(line: 2092, column: 9, scope: !18482)
!18536 = !DILocalVariable(name: "info", scope: !18482, file: !3, line: 2093, type: !7524)
!18537 = !DILocation(line: 2093, column: 22, scope: !18482)
!18538 = !DILocation(line: 2093, column: 29, scope: !18482)
!18539 = !DILocation(line: 2093, column: 34, scope: !18482)
!18540 = !DILocalVariable(name: "flags", scope: !18482, file: !3, line: 2094, type: !312)
!18541 = !DILocation(line: 2094, column: 16, scope: !18482)
!18542 = !DILocation(line: 2096, column: 7, scope: !18543)
!18543 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 2096, column: 7)
!18544 = !DILocation(line: 2096, column: 19, scope: !18543)
!18545 = !DILocation(line: 2096, column: 7, scope: !18482)
!18546 = !DILocation(line: 2098, column: 22, scope: !18543)
!18547 = !DILocation(line: 2098, column: 28, scope: !18543)
!18548 = !DILocation(line: 2098, column: 40, scope: !18543)
!18549 = !DILocation(line: 2097, column: 3, scope: !18543)
!18550 = !DILocation(line: 2100, column: 26, scope: !18551)
!18551 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 2100, column: 6)
!18552 = !DILocation(line: 2100, column: 32, scope: !18551)
!18553 = !DILocation(line: 2100, column: 37, scope: !18551)
!18554 = !DILocation(line: 2100, column: 6, scope: !18551)
!18555 = !DILocation(line: 2100, column: 6, scope: !18482)
!18556 = !DILocation(line: 2101, column: 3, scope: !18551)
!18557 = !DILocation(line: 2103, column: 7, scope: !18558)
!18558 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 2103, column: 6)
!18559 = !DILocation(line: 2103, column: 13, scope: !18558)
!18560 = !DILocation(line: 2103, column: 6, scope: !18482)
!18561 = !DILocation(line: 2104, column: 3, scope: !18558)
!18562 = !DILocation(line: 2106, column: 7, scope: !18496)
!18563 = !DILocation(line: 2106, column: 13, scope: !18496)
!18564 = !DILocation(line: 2106, column: 20, scope: !18496)
!18565 = !DILocation(line: 2106, column: 25, scope: !18496)
!18566 = !DILocation(line: 2106, column: 43, scope: !18496)
!18567 = !DILocation(line: 2107, column: 4, scope: !18496)
!18568 = !DILocation(line: 2107, column: 10, scope: !18496)
!18569 = !DILocation(line: 2107, column: 17, scope: !18496)
!18570 = !DILocation(line: 2107, column: 22, scope: !18496)
!18571 = !DILocation(line: 2106, column: 7, scope: !18482)
!18572 = !DILocation(line: 2109, column: 7, scope: !18513)
!18573 = !DILocation(line: 2109, column: 13, scope: !18513)
!18574 = !DILocation(line: 2109, column: 7, scope: !18514)
!18575 = !DILocation(line: 2111, column: 9, scope: !18576)
!18576 = distinct !DILexicalBlock(scope: !18512, file: !3, line: 2111, column: 9)
!18577 = !DILocation(line: 2111, column: 15, scope: !18576)
!18578 = !DILocation(line: 2111, column: 22, scope: !18576)
!18579 = !DILocation(line: 2111, column: 27, scope: !18576)
!18580 = !DILocation(line: 2111, column: 9, scope: !18512)
!18581 = !DILocation(line: 2112, column: 9, scope: !18582)
!18582 = distinct !DILexicalBlock(scope: !18576, file: !3, line: 2111, column: 47)
!18583 = !DILocation(line: 2113, column: 5, scope: !18582)
!18584 = !DILocation(line: 2120, column: 8, scope: !18585)
!18585 = distinct !DILexicalBlock(scope: !18512, file: !3, line: 2120, column: 8)
!18586 = !DILocation(line: 2120, column: 14, scope: !18585)
!18587 = !DILocation(line: 2120, column: 34, scope: !18585)
!18588 = !DILocation(line: 2120, column: 40, scope: !18585)
!18589 = !DILocation(line: 2120, column: 31, scope: !18585)
!18590 = !DILocation(line: 2120, column: 8, scope: !18512)
!18591 = !DILocation(line: 2122, column: 9, scope: !18592)
!18592 = distinct !DILexicalBlock(scope: !18585, file: !3, line: 2120, column: 65)
!18593 = !DILocation(line: 2123, column: 5, scope: !18592)
!18594 = !DILocation(line: 2127, column: 10, scope: !18512)
!18595 = !DILocation(line: 2127, column: 8, scope: !18512)
!18596 = !DILocation(line: 2128, column: 27, scope: !18512)
!18597 = !DILocation(line: 2128, column: 32, scope: !18512)
!18598 = !DILocation(line: 2128, column: 36, scope: !18512)
!18599 = !DILocation(line: 2128, column: 4, scope: !18512)
!18600 = !DILocation(line: 2133, column: 4, scope: !18512)
!18601 = !DILocation(line: 2133, column: 4, scope: !18525)
!18602 = !DILocalVariable(name: "__dummy", scope: !18603, file: !3, line: 2133, type: !312)
!18603 = distinct !DILexicalBlock(scope: !18524, file: !3, line: 2133, column: 4)
!18604 = !DILocation(line: 2133, column: 4, scope: !18603)
!18605 = !DILocalVariable(name: "__dummy2", scope: !18603, file: !3, line: 2133, type: !312)
!18606 = !DILocation(line: 2133, column: 4, scope: !18524)
!18607 = !DILocation(line: 2133, column: 4, scope: !18523)
!18608 = !DILocation(line: 2133, column: 4, scope: !18609)
!18609 = distinct !DILexicalBlock(scope: !18523, file: !3, line: 2133, column: 4)
!18610 = !DILocalVariable(name: "__dummy", scope: !18611, file: !3, line: 2133, type: !312)
!18611 = distinct !DILexicalBlock(scope: !18612, file: !3, line: 2133, column: 4)
!18612 = distinct !DILexicalBlock(scope: !18609, file: !3, line: 2133, column: 4)
!18613 = !DILocation(line: 2133, column: 4, scope: !18611)
!18614 = !DILocalVariable(name: "__dummy2", scope: !18611, file: !3, line: 2133, type: !312)
!18615 = !DILocation(line: 2133, column: 4, scope: !18612)
!18616 = !DILocation(line: 2133, column: 4, scope: !18522)
!18617 = !{i32 -2139449070}
!18618 = !DILocation(line: 2133, column: 4, scope: !18521)
!18619 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !18520)
!18620 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !18520)
!18621 = !DILocation(line: 2134, column: 32, scope: !18512)
!18622 = !DILocation(line: 2134, column: 4, scope: !18512)
!18623 = !DILocation(line: 2135, column: 28, scope: !18512)
!18624 = !DILocation(line: 2135, column: 34, scope: !18512)
!18625 = !DILocation(line: 2135, column: 47, scope: !18512)
!18626 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !18511)
!18627 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !18511)
!18628 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !18511)
!18629 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !18511)
!18630 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !18511)
!18631 = !DILocation(line: 2136, column: 4, scope: !18512)
!18632 = !DILocation(line: 2143, column: 9, scope: !18633)
!18633 = distinct !DILexicalBlock(scope: !18514, file: !3, line: 2143, column: 8)
!18634 = !DILocation(line: 2143, column: 15, scope: !18633)
!18635 = !DILocation(line: 2143, column: 22, scope: !18633)
!18636 = !DILocation(line: 2143, column: 28, scope: !18633)
!18637 = !DILocation(line: 2143, column: 55, scope: !18633)
!18638 = !DILocation(line: 2144, column: 25, scope: !18633)
!18639 = !DILocation(line: 2144, column: 5, scope: !18633)
!18640 = !DILocation(line: 2143, column: 8, scope: !18514)
!18641 = !DILocation(line: 2146, column: 8, scope: !18642)
!18642 = distinct !DILexicalBlock(scope: !18633, file: !3, line: 2145, column: 3)
!18643 = !DILocation(line: 2147, column: 4, scope: !18642)
!18644 = !DILocation(line: 2150, column: 8, scope: !18645)
!18645 = distinct !DILexicalBlock(scope: !18514, file: !3, line: 2150, column: 8)
!18646 = !DILocation(line: 2150, column: 14, scope: !18645)
!18647 = !DILocation(line: 2150, column: 8, scope: !18514)
!18648 = !DILocation(line: 2153, column: 8, scope: !18649)
!18649 = distinct !DILexicalBlock(scope: !18645, file: !3, line: 2150, column: 25)
!18650 = !DILocation(line: 2157, column: 28, scope: !18649)
!18651 = !DILocation(line: 2158, column: 5, scope: !18649)
!18652 = !DILocation(line: 2158, column: 11, scope: !18649)
!18653 = !DILocation(line: 2158, column: 20, scope: !18649)
!18654 = !DILocation(line: 2158, column: 26, scope: !18649)
!18655 = !DILocation(line: 2157, column: 4, scope: !18649)
!18656 = !DILocation(line: 2159, column: 9, scope: !18657)
!18657 = distinct !DILexicalBlock(scope: !18649, file: !3, line: 2159, column: 9)
!18658 = !DILocation(line: 2159, column: 21, scope: !18657)
!18659 = !DILocation(line: 2159, column: 9, scope: !18649)
!18660 = !DILocation(line: 2161, column: 24, scope: !18657)
!18661 = !DILocation(line: 2161, column: 30, scope: !18657)
!18662 = !DILocation(line: 2160, column: 5, scope: !18657)
!18663 = !DILocation(line: 2162, column: 3, scope: !18649)
!18664 = !DILocation(line: 2163, column: 9, scope: !18665)
!18665 = distinct !DILexicalBlock(scope: !18666, file: !3, line: 2163, column: 9)
!18666 = distinct !DILexicalBlock(scope: !18645, file: !3, line: 2162, column: 10)
!18667 = !DILocation(line: 2163, column: 21, scope: !18665)
!18668 = !DILocation(line: 2163, column: 9, scope: !18666)
!18669 = !DILocation(line: 2165, column: 24, scope: !18665)
!18670 = !DILocation(line: 2165, column: 30, scope: !18665)
!18671 = !DILocation(line: 2164, column: 5, scope: !18665)
!18672 = !DILocation(line: 2166, column: 10, scope: !18666)
!18673 = !DILocation(line: 2166, column: 8, scope: !18666)
!18674 = !DILocation(line: 2167, column: 21, scope: !18666)
!18675 = !DILocation(line: 2167, column: 4, scope: !18666)
!18676 = !DILocation(line: 2167, column: 10, scope: !18666)
!18677 = !DILocation(line: 2167, column: 19, scope: !18666)
!18678 = !DILocation(line: 2168, column: 28, scope: !18666)
!18679 = !DILocation(line: 2168, column: 33, scope: !18666)
!18680 = !DILocation(line: 2168, column: 37, scope: !18666)
!18681 = !DILocation(line: 2168, column: 4, scope: !18666)
!18682 = !DILocation(line: 2170, column: 2, scope: !18514)
!18683 = !DILocation(line: 2171, column: 3, scope: !18495)
!18684 = !DILocation(line: 2172, column: 4, scope: !18494)
!18685 = !DILocation(line: 2172, column: 4, scope: !18509)
!18686 = !DILocalVariable(name: "__dummy", scope: !18687, file: !3, line: 2172, type: !312)
!18687 = distinct !DILexicalBlock(scope: !18508, file: !3, line: 2172, column: 4)
!18688 = !DILocation(line: 2172, column: 4, scope: !18687)
!18689 = !DILocalVariable(name: "__dummy2", scope: !18687, file: !3, line: 2172, type: !312)
!18690 = !DILocation(line: 2172, column: 4, scope: !18508)
!18691 = !DILocation(line: 2172, column: 4, scope: !18507)
!18692 = !DILocation(line: 2172, column: 4, scope: !18693)
!18693 = distinct !DILexicalBlock(scope: !18507, file: !3, line: 2172, column: 4)
!18694 = !DILocalVariable(name: "__dummy", scope: !18695, file: !3, line: 2172, type: !312)
!18695 = distinct !DILexicalBlock(scope: !18696, file: !3, line: 2172, column: 4)
!18696 = distinct !DILexicalBlock(scope: !18693, file: !3, line: 2172, column: 4)
!18697 = !DILocation(line: 2172, column: 4, scope: !18695)
!18698 = !DILocalVariable(name: "__dummy2", scope: !18695, file: !3, line: 2172, type: !312)
!18699 = !DILocation(line: 2172, column: 4, scope: !18696)
!18700 = !DILocation(line: 2172, column: 4, scope: !18506)
!18701 = !{i32 -2139447924}
!18702 = !DILocation(line: 2172, column: 4, scope: !18505)
!18703 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !18504)
!18704 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !18504)
!18705 = !DILocalVariable(name: "__UNIQUE_ID___x333", scope: !18706, file: !3, line: 2173, type: !32)
!18706 = distinct !DILexicalBlock(scope: !18494, file: !3, line: 2173, column: 8)
!18707 = !DILocation(line: 2173, column: 8, scope: !18706)
!18708 = !DILocalVariable(name: "__UNIQUE_ID___y334", scope: !18706, file: !3, line: 2173, type: !32)
!18709 = !DILocalVariable(name: "__UNIQUE_ID___x331", scope: !18710, file: !3, line: 2173, type: !312)
!18710 = distinct !DILexicalBlock(scope: !18706, file: !3, line: 2173, column: 8)
!18711 = !DILocation(line: 2173, column: 8, scope: !18710)
!18712 = !DILocalVariable(name: "__UNIQUE_ID___y332", scope: !18710, file: !3, line: 2173, type: !312)
!18713 = !DILocation(line: 2173, column: 6, scope: !18494)
!18714 = !DILocation(line: 2176, column: 8, scope: !18501)
!18715 = !DILocation(line: 2176, column: 10, scope: !18501)
!18716 = !DILocation(line: 2176, column: 8, scope: !18494)
!18717 = !DILocation(line: 2177, column: 29, scope: !18500)
!18718 = !DILocation(line: 2177, column: 35, scope: !18500)
!18719 = !DILocation(line: 2177, column: 48, scope: !18500)
!18720 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !18499)
!18721 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !18499)
!18722 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !18499)
!18723 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !18499)
!18724 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !18499)
!18725 = !DILocation(line: 2178, column: 5, scope: !18500)
!18726 = !DILocation(line: 2180, column: 11, scope: !18494)
!18727 = !DILocation(line: 2180, column: 17, scope: !18494)
!18728 = !DILocation(line: 2180, column: 28, scope: !18494)
!18729 = !DILocation(line: 2180, column: 34, scope: !18494)
!18730 = !DILocation(line: 2180, column: 26, scope: !18494)
!18731 = !DILocation(line: 2180, column: 45, scope: !18494)
!18732 = !DILocation(line: 2180, column: 50, scope: !18494)
!18733 = !DILocation(line: 2180, column: 4, scope: !18494)
!18734 = !DILocation(line: 2181, column: 24, scope: !18494)
!18735 = !DILocation(line: 2181, column: 30, scope: !18494)
!18736 = !DILocation(line: 2181, column: 42, scope: !18494)
!18737 = !DILocation(line: 2181, column: 40, scope: !18494)
!18738 = !DILocation(line: 2181, column: 23, scope: !18494)
!18739 = !DILocation(line: 2181, column: 45, scope: !18494)
!18740 = !DILocation(line: 2181, column: 22, scope: !18494)
!18741 = !DILocation(line: 2181, column: 4, scope: !18494)
!18742 = !DILocation(line: 2181, column: 10, scope: !18494)
!18743 = !DILocation(line: 2181, column: 20, scope: !18494)
!18744 = !DILocation(line: 2183, column: 22, scope: !18494)
!18745 = !DILocation(line: 2183, column: 4, scope: !18494)
!18746 = !DILocation(line: 2183, column: 10, scope: !18494)
!18747 = !DILocation(line: 2183, column: 19, scope: !18494)
!18748 = !DILocation(line: 2184, column: 28, scope: !18494)
!18749 = !DILocation(line: 2184, column: 34, scope: !18494)
!18750 = !DILocation(line: 2184, column: 47, scope: !18494)
!18751 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !18493)
!18752 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !18493)
!18753 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !18493)
!18754 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !18493)
!18755 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !18493)
!18756 = !DILocation(line: 2185, column: 11, scope: !18494)
!18757 = !DILocation(line: 2185, column: 8, scope: !18494)
!18758 = !DILocation(line: 2186, column: 13, scope: !18494)
!18759 = !DILocation(line: 2186, column: 10, scope: !18494)
!18760 = !DILocation(line: 2187, column: 11, scope: !18494)
!18761 = !DILocation(line: 2187, column: 8, scope: !18494)
!18762 = distinct !{!18762, !18683, !18763}
!18763 = !DILocation(line: 2188, column: 3, scope: !18495)
!18764 = !DILocation(line: 2191, column: 7, scope: !18491)
!18765 = !DILocation(line: 2191, column: 13, scope: !18491)
!18766 = !DILocation(line: 2191, column: 22, scope: !18491)
!18767 = !DILocation(line: 2191, column: 26, scope: !18491)
!18768 = !DILocation(line: 2191, column: 31, scope: !18491)
!18769 = !DILocation(line: 2191, column: 39, scope: !18491)
!18770 = !DILocation(line: 2191, column: 43, scope: !18491)
!18771 = !DILocation(line: 2191, column: 48, scope: !18491)
!18772 = !DILocation(line: 2191, column: 7, scope: !18482)
!18773 = !DILocation(line: 2192, column: 3, scope: !18490)
!18774 = !DILocation(line: 2192, column: 3, scope: !18489)
!18775 = !DILocalVariable(name: "__dummy", scope: !18776, file: !3, line: 2192, type: !312)
!18776 = distinct !DILexicalBlock(scope: !18488, file: !3, line: 2192, column: 3)
!18777 = !DILocation(line: 2192, column: 3, scope: !18776)
!18778 = !DILocalVariable(name: "__dummy2", scope: !18776, file: !3, line: 2192, type: !312)
!18779 = !DILocation(line: 2192, column: 3, scope: !18488)
!18780 = !DILocation(line: 2192, column: 3, scope: !18487)
!18781 = !DILocation(line: 2192, column: 3, scope: !18782)
!18782 = distinct !DILexicalBlock(scope: !18487, file: !3, line: 2192, column: 3)
!18783 = !DILocalVariable(name: "__dummy", scope: !18784, file: !3, line: 2192, type: !312)
!18784 = distinct !DILexicalBlock(scope: !18785, file: !3, line: 2192, column: 3)
!18785 = distinct !DILexicalBlock(scope: !18782, file: !3, line: 2192, column: 3)
!18786 = !DILocation(line: 2192, column: 3, scope: !18784)
!18787 = !DILocalVariable(name: "__dummy2", scope: !18784, file: !3, line: 2192, type: !312)
!18788 = !DILocation(line: 2192, column: 3, scope: !18785)
!18789 = !DILocation(line: 2192, column: 3, scope: !18486)
!18790 = !{i32 -2139431389}
!18791 = !DILocation(line: 2192, column: 3, scope: !18485)
!18792 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !18484)
!18793 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !18484)
!18794 = !DILocation(line: 2193, column: 8, scope: !18795)
!18795 = distinct !DILexicalBlock(scope: !18490, file: !3, line: 2193, column: 7)
!18796 = !DILocation(line: 2193, column: 14, scope: !18795)
!18797 = !DILocation(line: 2193, column: 7, scope: !18490)
!18798 = !DILocation(line: 2194, column: 27, scope: !18795)
!18799 = !DILocation(line: 2194, column: 5, scope: !18795)
!18800 = !DILocation(line: 2195, column: 27, scope: !18490)
!18801 = !DILocation(line: 2195, column: 33, scope: !18490)
!18802 = !DILocation(line: 2195, column: 46, scope: !18490)
!18803 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !18517)
!18804 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !18517)
!18805 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !18517)
!18806 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !18517)
!18807 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !18517)
!18808 = !DILocation(line: 2196, column: 3, scope: !18490)
!18809 = !DILabel(scope: !18482, name: "cleanup", file: !3, line: 2197)
!18810 = !DILocation(line: 2197, column: 1, scope: !18482)
!18811 = !DILocation(line: 2198, column: 7, scope: !18812)
!18812 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 2198, column: 7)
!18813 = !DILocation(line: 2198, column: 19, scope: !18812)
!18814 = !DILocation(line: 2198, column: 7, scope: !18482)
!18815 = !DILocation(line: 2200, column: 22, scope: !18812)
!18816 = !DILocation(line: 2200, column: 28, scope: !18812)
!18817 = !DILocation(line: 2200, column: 40, scope: !18812)
!18818 = !DILocation(line: 2199, column: 3, scope: !18812)
!18819 = !DILocation(line: 2202, column: 9, scope: !18482)
!18820 = !DILocation(line: 2202, column: 2, scope: !18482)
!18821 = distinct !DISubprogram(name: "mgsl_put_char", scope: !3, file: !3, line: 1999, type: !4890, scopeLine: 2000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18822 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !18823)
!18823 = distinct !DILocation(line: 2026, column: 2, scope: !18821)
!18824 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !18823)
!18825 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !18826)
!18826 = distinct !DILocation(line: 2016, column: 2, scope: !18827)
!18827 = distinct !DILexicalBlock(scope: !18828, file: !3, line: 2016, column: 2)
!18828 = distinct !DILexicalBlock(scope: !18829, file: !3, line: 2016, column: 2)
!18829 = distinct !DILexicalBlock(scope: !18830, file: !3, line: 2016, column: 2)
!18830 = distinct !DILexicalBlock(scope: !18831, file: !3, line: 2016, column: 2)
!18831 = distinct !DILexicalBlock(scope: !18821, file: !3, line: 2016, column: 2)
!18832 = !DILocalVariable(name: "tty", arg: 1, scope: !18821, file: !3, line: 1999, type: !3760)
!18833 = !DILocation(line: 1999, column: 45, scope: !18821)
!18834 = !DILocalVariable(name: "ch", arg: 2, scope: !18821, file: !3, line: 1999, type: !482)
!18835 = !DILocation(line: 1999, column: 64, scope: !18821)
!18836 = !DILocalVariable(name: "info", scope: !18821, file: !3, line: 2001, type: !7524)
!18837 = !DILocation(line: 2001, column: 22, scope: !18821)
!18838 = !DILocation(line: 2001, column: 29, scope: !18821)
!18839 = !DILocation(line: 2001, column: 34, scope: !18821)
!18840 = !DILocalVariable(name: "flags", scope: !18821, file: !3, line: 2002, type: !312)
!18841 = !DILocation(line: 2002, column: 16, scope: !18821)
!18842 = !DILocalVariable(name: "ret", scope: !18821, file: !3, line: 2003, type: !32)
!18843 = !DILocation(line: 2003, column: 6, scope: !18821)
!18844 = !DILocation(line: 2005, column: 6, scope: !18845)
!18845 = distinct !DILexicalBlock(scope: !18821, file: !3, line: 2005, column: 6)
!18846 = !DILocation(line: 2005, column: 18, scope: !18845)
!18847 = !DILocation(line: 2005, column: 6, scope: !18821)
!18848 = !DILocation(line: 2007, column: 24, scope: !18849)
!18849 = distinct !DILexicalBlock(scope: !18845, file: !3, line: 2005, column: 39)
!18850 = !DILocation(line: 2007, column: 28, scope: !18849)
!18851 = !DILocation(line: 2007, column: 34, scope: !18849)
!18852 = !DILocation(line: 2006, column: 3, scope: !18849)
!18853 = !DILocation(line: 2008, column: 2, scope: !18849)
!18854 = !DILocation(line: 2010, column: 26, scope: !18855)
!18855 = distinct !DILexicalBlock(scope: !18821, file: !3, line: 2010, column: 6)
!18856 = !DILocation(line: 2010, column: 32, scope: !18855)
!18857 = !DILocation(line: 2010, column: 37, scope: !18855)
!18858 = !DILocation(line: 2010, column: 6, scope: !18855)
!18859 = !DILocation(line: 2010, column: 6, scope: !18821)
!18860 = !DILocation(line: 2011, column: 3, scope: !18855)
!18861 = !DILocation(line: 2013, column: 7, scope: !18862)
!18862 = distinct !DILexicalBlock(scope: !18821, file: !3, line: 2013, column: 6)
!18863 = !DILocation(line: 2013, column: 13, scope: !18862)
!18864 = !DILocation(line: 2013, column: 6, scope: !18821)
!18865 = !DILocation(line: 2014, column: 3, scope: !18862)
!18866 = !DILocation(line: 2016, column: 2, scope: !18821)
!18867 = !DILocation(line: 2016, column: 2, scope: !18831)
!18868 = !DILocalVariable(name: "__dummy", scope: !18869, file: !3, line: 2016, type: !312)
!18869 = distinct !DILexicalBlock(scope: !18830, file: !3, line: 2016, column: 2)
!18870 = !DILocation(line: 2016, column: 2, scope: !18869)
!18871 = !DILocalVariable(name: "__dummy2", scope: !18869, file: !3, line: 2016, type: !312)
!18872 = !DILocation(line: 2016, column: 2, scope: !18830)
!18873 = !DILocation(line: 2016, column: 2, scope: !18829)
!18874 = !DILocation(line: 2016, column: 2, scope: !18875)
!18875 = distinct !DILexicalBlock(scope: !18829, file: !3, line: 2016, column: 2)
!18876 = !DILocalVariable(name: "__dummy", scope: !18877, file: !3, line: 2016, type: !312)
!18877 = distinct !DILexicalBlock(scope: !18878, file: !3, line: 2016, column: 2)
!18878 = distinct !DILexicalBlock(scope: !18875, file: !3, line: 2016, column: 2)
!18879 = !DILocation(line: 2016, column: 2, scope: !18877)
!18880 = !DILocalVariable(name: "__dummy2", scope: !18877, file: !3, line: 2016, type: !312)
!18881 = !DILocation(line: 2016, column: 2, scope: !18878)
!18882 = !DILocation(line: 2016, column: 2, scope: !18828)
!18883 = !{i32 -2139451468}
!18884 = !DILocation(line: 2016, column: 2, scope: !18827)
!18885 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !18826)
!18886 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !18826)
!18887 = !DILocation(line: 2018, column: 7, scope: !18888)
!18888 = distinct !DILexicalBlock(scope: !18821, file: !3, line: 2018, column: 6)
!18889 = !DILocation(line: 2018, column: 13, scope: !18888)
!18890 = !DILocation(line: 2018, column: 20, scope: !18888)
!18891 = !DILocation(line: 2018, column: 25, scope: !18888)
!18892 = !DILocation(line: 2018, column: 46, scope: !18888)
!18893 = !DILocation(line: 2018, column: 50, scope: !18888)
!18894 = !DILocation(line: 2018, column: 56, scope: !18888)
!18895 = !DILocation(line: 2018, column: 6, scope: !18821)
!18896 = !DILocation(line: 2019, column: 7, scope: !18897)
!18897 = distinct !DILexicalBlock(scope: !18898, file: !3, line: 2019, column: 7)
!18898 = distinct !DILexicalBlock(scope: !18888, file: !3, line: 2018, column: 67)
!18899 = !DILocation(line: 2019, column: 13, scope: !18897)
!18900 = !DILocation(line: 2019, column: 22, scope: !18897)
!18901 = !DILocation(line: 2019, column: 7, scope: !18898)
!18902 = !DILocation(line: 2020, column: 40, scope: !18903)
!18903 = distinct !DILexicalBlock(scope: !18897, file: !3, line: 2019, column: 46)
!18904 = !DILocation(line: 2020, column: 4, scope: !18903)
!18905 = !DILocation(line: 2020, column: 10, scope: !18903)
!18906 = !DILocation(line: 2020, column: 19, scope: !18903)
!18907 = !DILocation(line: 2020, column: 25, scope: !18903)
!18908 = !DILocation(line: 2020, column: 34, scope: !18903)
!18909 = !DILocation(line: 2020, column: 38, scope: !18903)
!18910 = !DILocation(line: 2021, column: 4, scope: !18903)
!18911 = !DILocation(line: 2021, column: 10, scope: !18903)
!18912 = !DILocation(line: 2021, column: 20, scope: !18903)
!18913 = !DILocation(line: 2022, column: 4, scope: !18903)
!18914 = !DILocation(line: 2022, column: 10, scope: !18903)
!18915 = !DILocation(line: 2022, column: 18, scope: !18903)
!18916 = !DILocation(line: 2023, column: 8, scope: !18903)
!18917 = !DILocation(line: 2024, column: 3, scope: !18903)
!18918 = !DILocation(line: 2025, column: 2, scope: !18898)
!18919 = !DILocation(line: 2026, column: 26, scope: !18821)
!18920 = !DILocation(line: 2026, column: 32, scope: !18821)
!18921 = !DILocation(line: 2026, column: 46, scope: !18821)
!18922 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !18823)
!18923 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !18823)
!18924 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !18823)
!18925 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !18823)
!18926 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !18823)
!18927 = !DILocation(line: 2027, column: 9, scope: !18821)
!18928 = !DILocation(line: 2027, column: 2, scope: !18821)
!18929 = !DILocation(line: 2029, column: 1, scope: !18821)
!18930 = distinct !DISubprogram(name: "mgsl_flush_chars", scope: !3, file: !3, line: 2039, type: !4881, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18931 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !18932)
!18932 = distinct !DILocation(line: 2073, column: 2, scope: !18930)
!18933 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !18932)
!18934 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !18935)
!18935 = distinct !DILocation(line: 2059, column: 2, scope: !18936)
!18936 = distinct !DILexicalBlock(scope: !18937, file: !3, line: 2059, column: 2)
!18937 = distinct !DILexicalBlock(scope: !18938, file: !3, line: 2059, column: 2)
!18938 = distinct !DILexicalBlock(scope: !18939, file: !3, line: 2059, column: 2)
!18939 = distinct !DILexicalBlock(scope: !18940, file: !3, line: 2059, column: 2)
!18940 = distinct !DILexicalBlock(scope: !18930, file: !3, line: 2059, column: 2)
!18941 = !DILocalVariable(name: "tty", arg: 1, scope: !18930, file: !3, line: 2039, type: !3760)
!18942 = !DILocation(line: 2039, column: 49, scope: !18930)
!18943 = !DILocalVariable(name: "info", scope: !18930, file: !3, line: 2041, type: !7524)
!18944 = !DILocation(line: 2041, column: 22, scope: !18930)
!18945 = !DILocation(line: 2041, column: 29, scope: !18930)
!18946 = !DILocation(line: 2041, column: 34, scope: !18930)
!18947 = !DILocalVariable(name: "flags", scope: !18930, file: !3, line: 2042, type: !312)
!18948 = !DILocation(line: 2042, column: 16, scope: !18930)
!18949 = !DILocation(line: 2044, column: 7, scope: !18950)
!18950 = distinct !DILexicalBlock(scope: !18930, file: !3, line: 2044, column: 7)
!18951 = !DILocation(line: 2044, column: 19, scope: !18950)
!18952 = !DILocation(line: 2044, column: 7, scope: !18930)
!18953 = !DILocation(line: 2046, column: 22, scope: !18950)
!18954 = !DILocation(line: 2046, column: 28, scope: !18950)
!18955 = !DILocation(line: 2046, column: 40, scope: !18950)
!18956 = !DILocation(line: 2046, column: 46, scope: !18950)
!18957 = !DILocation(line: 2045, column: 3, scope: !18950)
!18958 = !DILocation(line: 2048, column: 26, scope: !18959)
!18959 = distinct !DILexicalBlock(scope: !18930, file: !3, line: 2048, column: 6)
!18960 = !DILocation(line: 2048, column: 32, scope: !18959)
!18961 = !DILocation(line: 2048, column: 37, scope: !18959)
!18962 = !DILocation(line: 2048, column: 6, scope: !18959)
!18963 = !DILocation(line: 2048, column: 6, scope: !18930)
!18964 = !DILocation(line: 2049, column: 3, scope: !18959)
!18965 = !DILocation(line: 2051, column: 6, scope: !18966)
!18966 = distinct !DILexicalBlock(scope: !18930, file: !3, line: 2051, column: 6)
!18967 = !DILocation(line: 2051, column: 12, scope: !18966)
!18968 = !DILocation(line: 2051, column: 21, scope: !18966)
!18969 = !DILocation(line: 2051, column: 26, scope: !18966)
!18970 = !DILocation(line: 2051, column: 29, scope: !18966)
!18971 = !DILocation(line: 2051, column: 34, scope: !18966)
!18972 = !DILocation(line: 2051, column: 42, scope: !18966)
!18973 = !DILocation(line: 2051, column: 45, scope: !18966)
!18974 = !DILocation(line: 2051, column: 50, scope: !18966)
!18975 = !DILocation(line: 2051, column: 61, scope: !18966)
!18976 = !DILocation(line: 2052, column: 7, scope: !18966)
!18977 = !DILocation(line: 2052, column: 13, scope: !18966)
!18978 = !DILocation(line: 2051, column: 6, scope: !18930)
!18979 = !DILocation(line: 2053, column: 3, scope: !18966)
!18980 = !DILocation(line: 2055, column: 7, scope: !18981)
!18981 = distinct !DILexicalBlock(scope: !18930, file: !3, line: 2055, column: 7)
!18982 = !DILocation(line: 2055, column: 19, scope: !18981)
!18983 = !DILocation(line: 2055, column: 7, scope: !18930)
!18984 = !DILocation(line: 2057, column: 22, scope: !18981)
!18985 = !DILocation(line: 2057, column: 28, scope: !18981)
!18986 = !DILocation(line: 2056, column: 3, scope: !18981)
!18987 = !DILocation(line: 2059, column: 2, scope: !18930)
!18988 = !DILocation(line: 2059, column: 2, scope: !18940)
!18989 = !DILocalVariable(name: "__dummy", scope: !18990, file: !3, line: 2059, type: !312)
!18990 = distinct !DILexicalBlock(scope: !18939, file: !3, line: 2059, column: 2)
!18991 = !DILocation(line: 2059, column: 2, scope: !18990)
!18992 = !DILocalVariable(name: "__dummy2", scope: !18990, file: !3, line: 2059, type: !312)
!18993 = !DILocation(line: 2059, column: 2, scope: !18939)
!18994 = !DILocation(line: 2059, column: 2, scope: !18938)
!18995 = !DILocation(line: 2059, column: 2, scope: !18996)
!18996 = distinct !DILexicalBlock(scope: !18938, file: !3, line: 2059, column: 2)
!18997 = !DILocalVariable(name: "__dummy", scope: !18998, file: !3, line: 2059, type: !312)
!18998 = distinct !DILexicalBlock(scope: !18999, file: !3, line: 2059, column: 2)
!18999 = distinct !DILexicalBlock(scope: !18996, file: !3, line: 2059, column: 2)
!19000 = !DILocation(line: 2059, column: 2, scope: !18998)
!19001 = !DILocalVariable(name: "__dummy2", scope: !18998, file: !3, line: 2059, type: !312)
!19002 = !DILocation(line: 2059, column: 2, scope: !18999)
!19003 = !DILocation(line: 2059, column: 2, scope: !18937)
!19004 = !{i32 -2139450187}
!19005 = !DILocation(line: 2059, column: 2, scope: !18936)
!19006 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !18935)
!19007 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !18935)
!19008 = !DILocation(line: 2061, column: 7, scope: !19009)
!19009 = distinct !DILexicalBlock(scope: !18930, file: !3, line: 2061, column: 6)
!19010 = !DILocation(line: 2061, column: 13, scope: !19009)
!19011 = !DILocation(line: 2061, column: 6, scope: !18930)
!19012 = !DILocation(line: 2062, column: 9, scope: !19013)
!19013 = distinct !DILexicalBlock(scope: !19014, file: !3, line: 2062, column: 8)
!19014 = distinct !DILexicalBlock(scope: !19009, file: !3, line: 2061, column: 24)
!19015 = !DILocation(line: 2062, column: 15, scope: !19013)
!19016 = !DILocation(line: 2062, column: 22, scope: !19013)
!19017 = !DILocation(line: 2062, column: 27, scope: !19013)
!19018 = !DILocation(line: 2062, column: 45, scope: !19013)
!19019 = !DILocation(line: 2063, column: 4, scope: !19013)
!19020 = !DILocation(line: 2063, column: 10, scope: !19013)
!19021 = !DILocation(line: 2063, column: 17, scope: !19013)
!19022 = !DILocation(line: 2063, column: 22, scope: !19013)
!19023 = !DILocation(line: 2063, column: 40, scope: !19013)
!19024 = !DILocation(line: 2063, column: 43, scope: !19013)
!19025 = !DILocation(line: 2063, column: 49, scope: !19013)
!19026 = !DILocation(line: 2062, column: 8, scope: !19014)
!19027 = !DILocation(line: 2067, column: 28, scope: !19028)
!19028 = distinct !DILexicalBlock(scope: !19013, file: !3, line: 2063, column: 60)
!19029 = !DILocation(line: 2068, column: 6, scope: !19028)
!19030 = !DILocation(line: 2068, column: 12, scope: !19028)
!19031 = !DILocation(line: 2068, column: 21, scope: !19028)
!19032 = !DILocation(line: 2068, column: 27, scope: !19028)
!19033 = !DILocation(line: 2067, column: 4, scope: !19028)
!19034 = !DILocation(line: 2069, column: 3, scope: !19028)
!19035 = !DILocation(line: 2070, column: 26, scope: !19014)
!19036 = !DILocation(line: 2070, column: 4, scope: !19014)
!19037 = !DILocation(line: 2071, column: 2, scope: !19014)
!19038 = !DILocation(line: 2073, column: 26, scope: !18930)
!19039 = !DILocation(line: 2073, column: 32, scope: !18930)
!19040 = !DILocation(line: 2073, column: 45, scope: !18930)
!19041 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !18932)
!19042 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !18932)
!19043 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !18932)
!19044 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !18932)
!19045 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !18932)
!19046 = !DILocation(line: 2075, column: 1, scope: !18930)
!19047 = distinct !DISubprogram(name: "mgsl_write_room", scope: !3, file: !3, line: 2213, type: !4895, scopeLine: 2214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19048 = !DILocalVariable(name: "tty", arg: 1, scope: !19047, file: !3, line: 2213, type: !3760)
!19049 = !DILocation(line: 2213, column: 47, scope: !19047)
!19050 = !DILocalVariable(name: "info", scope: !19047, file: !3, line: 2215, type: !7524)
!19051 = !DILocation(line: 2215, column: 22, scope: !19047)
!19052 = !DILocation(line: 2215, column: 29, scope: !19047)
!19053 = !DILocation(line: 2215, column: 34, scope: !19047)
!19054 = !DILocalVariable(name: "ret", scope: !19047, file: !3, line: 2216, type: !32)
!19055 = !DILocation(line: 2216, column: 6, scope: !19047)
!19056 = !DILocation(line: 2218, column: 26, scope: !19057)
!19057 = distinct !DILexicalBlock(scope: !19047, file: !3, line: 2218, column: 6)
!19058 = !DILocation(line: 2218, column: 32, scope: !19057)
!19059 = !DILocation(line: 2218, column: 37, scope: !19057)
!19060 = !DILocation(line: 2218, column: 6, scope: !19057)
!19061 = !DILocation(line: 2218, column: 6, scope: !19047)
!19062 = !DILocation(line: 2219, column: 3, scope: !19057)
!19063 = !DILocation(line: 2220, column: 27, scope: !19047)
!19064 = !DILocation(line: 2220, column: 33, scope: !19047)
!19065 = !DILocation(line: 2220, column: 25, scope: !19047)
!19066 = !DILocation(line: 2220, column: 42, scope: !19047)
!19067 = !DILocation(line: 2220, column: 8, scope: !19047)
!19068 = !DILocation(line: 2220, column: 6, scope: !19047)
!19069 = !DILocation(line: 2221, column: 6, scope: !19070)
!19070 = distinct !DILexicalBlock(scope: !19047, file: !3, line: 2221, column: 6)
!19071 = !DILocation(line: 2221, column: 10, scope: !19070)
!19072 = !DILocation(line: 2221, column: 6, scope: !19047)
!19073 = !DILocation(line: 2222, column: 7, scope: !19070)
!19074 = !DILocation(line: 2222, column: 3, scope: !19070)
!19075 = !DILocation(line: 2224, column: 6, scope: !19076)
!19076 = distinct !DILexicalBlock(scope: !19047, file: !3, line: 2224, column: 6)
!19077 = !DILocation(line: 2224, column: 18, scope: !19076)
!19078 = !DILocation(line: 2224, column: 6, scope: !19047)
!19079 = !DILocation(line: 2226, column: 24, scope: !19076)
!19080 = !DILocation(line: 2226, column: 30, scope: !19076)
!19081 = !DILocation(line: 2226, column: 42, scope: !19076)
!19082 = !DILocation(line: 2225, column: 3, scope: !19076)
!19083 = !DILocation(line: 2228, column: 7, scope: !19084)
!19084 = distinct !DILexicalBlock(scope: !19047, file: !3, line: 2228, column: 7)
!19085 = !DILocation(line: 2228, column: 13, scope: !19084)
!19086 = !DILocation(line: 2228, column: 20, scope: !19084)
!19087 = !DILocation(line: 2228, column: 25, scope: !19084)
!19088 = !DILocation(line: 2228, column: 43, scope: !19084)
!19089 = !DILocation(line: 2229, column: 3, scope: !19084)
!19090 = !DILocation(line: 2229, column: 9, scope: !19084)
!19091 = !DILocation(line: 2229, column: 16, scope: !19084)
!19092 = !DILocation(line: 2229, column: 21, scope: !19084)
!19093 = !DILocation(line: 2228, column: 7, scope: !19047)
!19094 = !DILocation(line: 2231, column: 8, scope: !19095)
!19095 = distinct !DILexicalBlock(scope: !19096, file: !3, line: 2231, column: 8)
!19096 = distinct !DILexicalBlock(scope: !19084, file: !3, line: 2229, column: 40)
!19097 = !DILocation(line: 2231, column: 14, scope: !19095)
!19098 = !DILocation(line: 2231, column: 8, scope: !19096)
!19099 = !DILocation(line: 2232, column: 4, scope: !19095)
!19100 = !DILocation(line: 2234, column: 4, scope: !19095)
!19101 = !DILocation(line: 2237, column: 9, scope: !19047)
!19102 = !DILocation(line: 2237, column: 2, scope: !19047)
!19103 = !DILocation(line: 2239, column: 1, scope: !19047)
!19104 = distinct !DISubprogram(name: "mgsl_chars_in_buffer", scope: !3, file: !3, line: 2248, type: !4895, scopeLine: 2249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19105 = !DILocalVariable(name: "tty", arg: 1, scope: !19104, file: !3, line: 2248, type: !3760)
!19106 = !DILocation(line: 2248, column: 52, scope: !19104)
!19107 = !DILocalVariable(name: "info", scope: !19104, file: !3, line: 2250, type: !7524)
!19108 = !DILocation(line: 2250, column: 22, scope: !19104)
!19109 = !DILocation(line: 2250, column: 29, scope: !19104)
!19110 = !DILocation(line: 2250, column: 34, scope: !19104)
!19111 = !DILocation(line: 2252, column: 6, scope: !19112)
!19112 = distinct !DILexicalBlock(scope: !19104, file: !3, line: 2252, column: 6)
!19113 = !DILocation(line: 2252, column: 18, scope: !19112)
!19114 = !DILocation(line: 2252, column: 6, scope: !19104)
!19115 = !DILocation(line: 2254, column: 24, scope: !19112)
!19116 = !DILocation(line: 2254, column: 30, scope: !19112)
!19117 = !DILocation(line: 2253, column: 3, scope: !19112)
!19118 = !DILocation(line: 2256, column: 26, scope: !19119)
!19119 = distinct !DILexicalBlock(scope: !19104, file: !3, line: 2256, column: 6)
!19120 = !DILocation(line: 2256, column: 32, scope: !19119)
!19121 = !DILocation(line: 2256, column: 37, scope: !19119)
!19122 = !DILocation(line: 2256, column: 6, scope: !19119)
!19123 = !DILocation(line: 2256, column: 6, scope: !19104)
!19124 = !DILocation(line: 2257, column: 3, scope: !19119)
!19125 = !DILocation(line: 2259, column: 6, scope: !19126)
!19126 = distinct !DILexicalBlock(scope: !19104, file: !3, line: 2259, column: 6)
!19127 = !DILocation(line: 2259, column: 18, scope: !19126)
!19128 = !DILocation(line: 2259, column: 6, scope: !19104)
!19129 = !DILocation(line: 2261, column: 24, scope: !19126)
!19130 = !DILocation(line: 2261, column: 30, scope: !19126)
!19131 = !DILocation(line: 2261, column: 42, scope: !19126)
!19132 = !DILocation(line: 2261, column: 48, scope: !19126)
!19133 = !DILocation(line: 2260, column: 3, scope: !19126)
!19134 = !DILocation(line: 2263, column: 7, scope: !19135)
!19135 = distinct !DILexicalBlock(scope: !19104, file: !3, line: 2263, column: 7)
!19136 = !DILocation(line: 2263, column: 13, scope: !19135)
!19137 = !DILocation(line: 2263, column: 20, scope: !19135)
!19138 = !DILocation(line: 2263, column: 25, scope: !19135)
!19139 = !DILocation(line: 2263, column: 43, scope: !19135)
!19140 = !DILocation(line: 2264, column: 3, scope: !19135)
!19141 = !DILocation(line: 2264, column: 9, scope: !19135)
!19142 = !DILocation(line: 2264, column: 16, scope: !19135)
!19143 = !DILocation(line: 2264, column: 21, scope: !19135)
!19144 = !DILocation(line: 2263, column: 7, scope: !19104)
!19145 = !DILocation(line: 2266, column: 8, scope: !19146)
!19146 = distinct !DILexicalBlock(scope: !19147, file: !3, line: 2266, column: 8)
!19147 = distinct !DILexicalBlock(scope: !19135, file: !3, line: 2264, column: 40)
!19148 = !DILocation(line: 2266, column: 14, scope: !19146)
!19149 = !DILocation(line: 2266, column: 8, scope: !19147)
!19150 = !DILocation(line: 2267, column: 11, scope: !19146)
!19151 = !DILocation(line: 2267, column: 17, scope: !19146)
!19152 = !DILocation(line: 2267, column: 4, scope: !19146)
!19153 = !DILocation(line: 2269, column: 4, scope: !19146)
!19154 = !DILocation(line: 2272, column: 9, scope: !19104)
!19155 = !DILocation(line: 2272, column: 15, scope: !19104)
!19156 = !DILocation(line: 2272, column: 2, scope: !19104)
!19157 = !DILocation(line: 2273, column: 1, scope: !19104)
!19158 = distinct !DISubprogram(name: "mgsl_ioctl", scope: !3, file: !3, line: 2949, type: !4900, scopeLine: 2951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19159 = !DILocalVariable(name: "tty", arg: 1, scope: !19158, file: !3, line: 2949, type: !3760)
!19160 = !DILocation(line: 2949, column: 42, scope: !19158)
!19161 = !DILocalVariable(name: "cmd", arg: 2, scope: !19158, file: !3, line: 2950, type: !7)
!19162 = !DILocation(line: 2950, column: 20, scope: !19158)
!19163 = !DILocalVariable(name: "arg", arg: 3, scope: !19158, file: !3, line: 2950, type: !312)
!19164 = !DILocation(line: 2950, column: 39, scope: !19158)
!19165 = !DILocalVariable(name: "info", scope: !19158, file: !3, line: 2952, type: !7524)
!19166 = !DILocation(line: 2952, column: 23, scope: !19158)
!19167 = !DILocation(line: 2952, column: 30, scope: !19158)
!19168 = !DILocation(line: 2952, column: 35, scope: !19158)
!19169 = !DILocation(line: 2954, column: 6, scope: !19170)
!19170 = distinct !DILexicalBlock(scope: !19158, file: !3, line: 2954, column: 6)
!19171 = !DILocation(line: 2954, column: 18, scope: !19170)
!19172 = !DILocation(line: 2954, column: 6, scope: !19158)
!19173 = !DILocation(line: 2956, column: 4, scope: !19170)
!19174 = !DILocation(line: 2956, column: 10, scope: !19170)
!19175 = !DILocation(line: 2956, column: 23, scope: !19170)
!19176 = !DILocation(line: 2955, column: 3, scope: !19170)
!19177 = !DILocation(line: 2958, column: 26, scope: !19178)
!19178 = distinct !DILexicalBlock(scope: !19158, file: !3, line: 2958, column: 6)
!19179 = !DILocation(line: 2958, column: 32, scope: !19178)
!19180 = !DILocation(line: 2958, column: 37, scope: !19178)
!19181 = !DILocation(line: 2958, column: 6, scope: !19178)
!19182 = !DILocation(line: 2958, column: 6, scope: !19158)
!19183 = !DILocation(line: 2959, column: 3, scope: !19178)
!19184 = !DILocation(line: 2961, column: 6, scope: !19185)
!19185 = distinct !DILexicalBlock(scope: !19158, file: !3, line: 2961, column: 6)
!19186 = !DILocation(line: 2961, column: 10, scope: !19185)
!19187 = !DILocation(line: 2961, column: 6, scope: !19158)
!19188 = !DILocation(line: 2962, column: 20, scope: !19189)
!19189 = distinct !DILexicalBlock(scope: !19190, file: !3, line: 2962, column: 7)
!19190 = distinct !DILexicalBlock(scope: !19185, file: !3, line: 2961, column: 25)
!19191 = !DILocation(line: 2962, column: 7, scope: !19189)
!19192 = !DILocation(line: 2962, column: 7, scope: !19190)
!19193 = !DILocation(line: 2963, column: 7, scope: !19189)
!19194 = !DILocation(line: 2964, column: 2, scope: !19190)
!19195 = !DILocation(line: 2966, column: 27, scope: !19158)
!19196 = !DILocation(line: 2966, column: 33, scope: !19158)
!19197 = !DILocation(line: 2966, column: 38, scope: !19158)
!19198 = !DILocation(line: 2966, column: 9, scope: !19158)
!19199 = !DILocation(line: 2966, column: 2, scope: !19158)
!19200 = !DILocation(line: 2967, column: 1, scope: !19158)
!19201 = distinct !DISubprogram(name: "mgsl_set_termios", scope: !3, file: !3, line: 3017, type: !4908, scopeLine: 3018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19202 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !19203)
!19203 = distinct !DILocation(line: 3043, column: 3, scope: !19204)
!19204 = distinct !DILexicalBlock(scope: !19205, file: !3, line: 3037, column: 54)
!19205 = distinct !DILexicalBlock(scope: !19201, file: !3, line: 3037, column: 6)
!19206 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !19203)
!19207 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !19208)
!19208 = distinct !DILocation(line: 3041, column: 3, scope: !19209)
!19209 = distinct !DILexicalBlock(scope: !19210, file: !3, line: 3041, column: 3)
!19210 = distinct !DILexicalBlock(scope: !19211, file: !3, line: 3041, column: 3)
!19211 = distinct !DILexicalBlock(scope: !19212, file: !3, line: 3041, column: 3)
!19212 = distinct !DILexicalBlock(scope: !19213, file: !3, line: 3041, column: 3)
!19213 = distinct !DILexicalBlock(scope: !19204, file: !3, line: 3041, column: 3)
!19214 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !19215)
!19215 = distinct !DILocation(line: 3033, column: 3, scope: !19216)
!19216 = distinct !DILexicalBlock(scope: !19217, file: !3, line: 3029, column: 54)
!19217 = distinct !DILexicalBlock(scope: !19201, file: !3, line: 3029, column: 6)
!19218 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !19215)
!19219 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !19220)
!19220 = distinct !DILocation(line: 3031, column: 3, scope: !19221)
!19221 = distinct !DILexicalBlock(scope: !19222, file: !3, line: 3031, column: 3)
!19222 = distinct !DILexicalBlock(scope: !19223, file: !3, line: 3031, column: 3)
!19223 = distinct !DILexicalBlock(scope: !19224, file: !3, line: 3031, column: 3)
!19224 = distinct !DILexicalBlock(scope: !19225, file: !3, line: 3031, column: 3)
!19225 = distinct !DILexicalBlock(scope: !19216, file: !3, line: 3031, column: 3)
!19226 = !DILocalVariable(name: "tty", arg: 1, scope: !19201, file: !3, line: 3017, type: !3760)
!19227 = !DILocation(line: 3017, column: 49, scope: !19201)
!19228 = !DILocalVariable(name: "old_termios", arg: 2, scope: !19201, file: !3, line: 3017, type: !4852)
!19229 = !DILocation(line: 3017, column: 71, scope: !19201)
!19230 = !DILocalVariable(name: "info", scope: !19201, file: !3, line: 3019, type: !7524)
!19231 = !DILocation(line: 3019, column: 22, scope: !19201)
!19232 = !DILocation(line: 3019, column: 29, scope: !19201)
!19233 = !DILocation(line: 3019, column: 34, scope: !19201)
!19234 = !DILocalVariable(name: "flags", scope: !19201, file: !3, line: 3020, type: !312)
!19235 = !DILocation(line: 3020, column: 16, scope: !19201)
!19236 = !DILocation(line: 3022, column: 6, scope: !19237)
!19237 = distinct !DILexicalBlock(scope: !19201, file: !3, line: 3022, column: 6)
!19238 = !DILocation(line: 3022, column: 18, scope: !19237)
!19239 = !DILocation(line: 3022, column: 6, scope: !19201)
!19240 = !DILocation(line: 3024, column: 4, scope: !19237)
!19241 = !DILocation(line: 3024, column: 9, scope: !19237)
!19242 = !DILocation(line: 3024, column: 17, scope: !19237)
!19243 = !DILocation(line: 3023, column: 3, scope: !19237)
!19244 = !DILocation(line: 3026, column: 21, scope: !19201)
!19245 = !DILocation(line: 3026, column: 2, scope: !19201)
!19246 = !DILocation(line: 3029, column: 7, scope: !19217)
!19247 = !DILocation(line: 3029, column: 20, scope: !19217)
!19248 = !DILocation(line: 3029, column: 28, scope: !19217)
!19249 = !DILocation(line: 3029, column: 37, scope: !19217)
!19250 = !DILocation(line: 3029, column: 41, scope: !19217)
!19251 = !DILocation(line: 3029, column: 6, scope: !19201)
!19252 = !DILocation(line: 3030, column: 3, scope: !19216)
!19253 = !DILocation(line: 3030, column: 9, scope: !19216)
!19254 = !DILocation(line: 3030, column: 24, scope: !19216)
!19255 = !DILocation(line: 3031, column: 3, scope: !19216)
!19256 = !DILocation(line: 3031, column: 3, scope: !19225)
!19257 = !DILocalVariable(name: "__dummy", scope: !19258, file: !3, line: 3031, type: !312)
!19258 = distinct !DILexicalBlock(scope: !19224, file: !3, line: 3031, column: 3)
!19259 = !DILocation(line: 3031, column: 3, scope: !19258)
!19260 = !DILocalVariable(name: "__dummy2", scope: !19258, file: !3, line: 3031, type: !312)
!19261 = !DILocation(line: 3031, column: 3, scope: !19224)
!19262 = !DILocation(line: 3031, column: 3, scope: !19223)
!19263 = !DILocation(line: 3031, column: 3, scope: !19264)
!19264 = distinct !DILexicalBlock(scope: !19223, file: !3, line: 3031, column: 3)
!19265 = !DILocalVariable(name: "__dummy", scope: !19266, file: !3, line: 3031, type: !312)
!19266 = distinct !DILexicalBlock(scope: !19267, file: !3, line: 3031, column: 3)
!19267 = distinct !DILexicalBlock(scope: !19264, file: !3, line: 3031, column: 3)
!19268 = !DILocation(line: 3031, column: 3, scope: !19266)
!19269 = !DILocalVariable(name: "__dummy2", scope: !19266, file: !3, line: 3031, type: !312)
!19270 = !DILocation(line: 3031, column: 3, scope: !19267)
!19271 = !DILocation(line: 3031, column: 3, scope: !19222)
!19272 = !{i32 -2139391930}
!19273 = !DILocation(line: 3031, column: 3, scope: !19221)
!19274 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !19220)
!19275 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !19220)
!19276 = !DILocation(line: 3032, column: 27, scope: !19216)
!19277 = !DILocation(line: 3032, column: 4, scope: !19216)
!19278 = !DILocation(line: 3033, column: 27, scope: !19216)
!19279 = !DILocation(line: 3033, column: 33, scope: !19216)
!19280 = !DILocation(line: 3033, column: 46, scope: !19216)
!19281 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !19215)
!19282 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !19215)
!19283 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !19215)
!19284 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !19215)
!19285 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !19215)
!19286 = !DILocation(line: 3034, column: 2, scope: !19216)
!19287 = !DILocation(line: 3037, column: 8, scope: !19205)
!19288 = !DILocation(line: 3037, column: 21, scope: !19205)
!19289 = !DILocation(line: 3037, column: 29, scope: !19205)
!19290 = !DILocation(line: 3037, column: 38, scope: !19205)
!19291 = !DILocation(line: 3037, column: 41, scope: !19205)
!19292 = !DILocation(line: 3037, column: 6, scope: !19201)
!19293 = !DILocation(line: 3038, column: 3, scope: !19204)
!19294 = !DILocation(line: 3038, column: 9, scope: !19204)
!19295 = !DILocation(line: 3038, column: 24, scope: !19204)
!19296 = !DILocation(line: 3039, column: 8, scope: !19297)
!19297 = distinct !DILexicalBlock(scope: !19204, file: !3, line: 3039, column: 7)
!19298 = !DILocation(line: 3039, column: 23, scope: !19297)
!19299 = !DILocation(line: 3039, column: 41, scope: !19297)
!19300 = !DILocation(line: 3039, column: 27, scope: !19297)
!19301 = !DILocation(line: 3039, column: 7, scope: !19204)
!19302 = !DILocation(line: 3040, column: 4, scope: !19297)
!19303 = !DILocation(line: 3040, column: 10, scope: !19297)
!19304 = !DILocation(line: 3040, column: 25, scope: !19297)
!19305 = !DILocation(line: 3041, column: 3, scope: !19204)
!19306 = !DILocation(line: 3041, column: 3, scope: !19213)
!19307 = !DILocalVariable(name: "__dummy", scope: !19308, file: !3, line: 3041, type: !312)
!19308 = distinct !DILexicalBlock(scope: !19212, file: !3, line: 3041, column: 3)
!19309 = !DILocation(line: 3041, column: 3, scope: !19308)
!19310 = !DILocalVariable(name: "__dummy2", scope: !19308, file: !3, line: 3041, type: !312)
!19311 = !DILocation(line: 3041, column: 3, scope: !19212)
!19312 = !DILocation(line: 3041, column: 3, scope: !19211)
!19313 = !DILocation(line: 3041, column: 3, scope: !19314)
!19314 = distinct !DILexicalBlock(scope: !19211, file: !3, line: 3041, column: 3)
!19315 = !DILocalVariable(name: "__dummy", scope: !19316, file: !3, line: 3041, type: !312)
!19316 = distinct !DILexicalBlock(scope: !19317, file: !3, line: 3041, column: 3)
!19317 = distinct !DILexicalBlock(scope: !19314, file: !3, line: 3041, column: 3)
!19318 = !DILocation(line: 3041, column: 3, scope: !19316)
!19319 = !DILocalVariable(name: "__dummy2", scope: !19316, file: !3, line: 3041, type: !312)
!19320 = !DILocation(line: 3041, column: 3, scope: !19317)
!19321 = !DILocation(line: 3041, column: 3, scope: !19210)
!19322 = !{i32 -2139390663}
!19323 = !DILocation(line: 3041, column: 3, scope: !19209)
!19324 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !19208)
!19325 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !19208)
!19326 = !DILocation(line: 3042, column: 27, scope: !19204)
!19327 = !DILocation(line: 3042, column: 4, scope: !19204)
!19328 = !DILocation(line: 3043, column: 27, scope: !19204)
!19329 = !DILocation(line: 3043, column: 33, scope: !19204)
!19330 = !DILocation(line: 3043, column: 46, scope: !19204)
!19331 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !19203)
!19332 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !19203)
!19333 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !19203)
!19334 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !19203)
!19335 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !19203)
!19336 = !DILocation(line: 3044, column: 2, scope: !19204)
!19337 = !DILocation(line: 3047, column: 6, scope: !19338)
!19338 = distinct !DILexicalBlock(scope: !19201, file: !3, line: 3047, column: 6)
!19339 = !DILocation(line: 3047, column: 19, scope: !19338)
!19340 = !DILocation(line: 3047, column: 27, scope: !19338)
!19341 = !DILocation(line: 3047, column: 37, scope: !19338)
!19342 = !DILocation(line: 3047, column: 41, scope: !19338)
!19343 = !DILocation(line: 3047, column: 6, scope: !19201)
!19344 = !DILocation(line: 3048, column: 3, scope: !19345)
!19345 = distinct !DILexicalBlock(scope: !19338, file: !3, line: 3047, column: 57)
!19346 = !DILocation(line: 3048, column: 8, scope: !19345)
!19347 = !DILocation(line: 3048, column: 19, scope: !19345)
!19348 = !DILocation(line: 3049, column: 14, scope: !19345)
!19349 = !DILocation(line: 3049, column: 3, scope: !19345)
!19350 = !DILocation(line: 3050, column: 2, scope: !19345)
!19351 = !DILocation(line: 3052, column: 1, scope: !19201)
!19352 = distinct !DISubprogram(name: "mgsl_throttle", scope: !3, file: !3, line: 2339, type: !4881, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19353 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !19354)
!19354 = distinct !DILocation(line: 2358, column: 3, scope: !19355)
!19355 = distinct !DILexicalBlock(scope: !19356, file: !3, line: 2354, column: 22)
!19356 = distinct !DILexicalBlock(scope: !19352, file: !3, line: 2354, column: 6)
!19357 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !19354)
!19358 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !19359)
!19359 = distinct !DILocation(line: 2355, column: 3, scope: !19360)
!19360 = distinct !DILexicalBlock(scope: !19361, file: !3, line: 2355, column: 3)
!19361 = distinct !DILexicalBlock(scope: !19362, file: !3, line: 2355, column: 3)
!19362 = distinct !DILexicalBlock(scope: !19363, file: !3, line: 2355, column: 3)
!19363 = distinct !DILexicalBlock(scope: !19364, file: !3, line: 2355, column: 3)
!19364 = distinct !DILexicalBlock(scope: !19355, file: !3, line: 2355, column: 3)
!19365 = !DILocalVariable(name: "tty", arg: 1, scope: !19352, file: !3, line: 2339, type: !3760)
!19366 = !DILocation(line: 2339, column: 47, scope: !19352)
!19367 = !DILocalVariable(name: "info", scope: !19352, file: !3, line: 2341, type: !7524)
!19368 = !DILocation(line: 2341, column: 22, scope: !19352)
!19369 = !DILocation(line: 2341, column: 29, scope: !19352)
!19370 = !DILocation(line: 2341, column: 34, scope: !19352)
!19371 = !DILocalVariable(name: "flags", scope: !19352, file: !3, line: 2342, type: !312)
!19372 = !DILocation(line: 2342, column: 16, scope: !19352)
!19373 = !DILocation(line: 2344, column: 6, scope: !19374)
!19374 = distinct !DILexicalBlock(scope: !19352, file: !3, line: 2344, column: 6)
!19375 = !DILocation(line: 2344, column: 18, scope: !19374)
!19376 = !DILocation(line: 2344, column: 6, scope: !19352)
!19377 = !DILocation(line: 2346, column: 24, scope: !19374)
!19378 = !DILocation(line: 2346, column: 30, scope: !19374)
!19379 = !DILocation(line: 2345, column: 3, scope: !19374)
!19380 = !DILocation(line: 2348, column: 26, scope: !19381)
!19381 = distinct !DILexicalBlock(scope: !19352, file: !3, line: 2348, column: 6)
!19382 = !DILocation(line: 2348, column: 32, scope: !19381)
!19383 = !DILocation(line: 2348, column: 37, scope: !19381)
!19384 = !DILocation(line: 2348, column: 6, scope: !19381)
!19385 = !DILocation(line: 2348, column: 6, scope: !19352)
!19386 = !DILocation(line: 2349, column: 3, scope: !19381)
!19387 = !DILocation(line: 2351, column: 6, scope: !19388)
!19388 = distinct !DILexicalBlock(scope: !19352, file: !3, line: 2351, column: 6)
!19389 = !DILocation(line: 2351, column: 6, scope: !19352)
!19390 = !DILocation(line: 2352, column: 19, scope: !19388)
!19391 = !DILocation(line: 2352, column: 24, scope: !19388)
!19392 = !DILocation(line: 2352, column: 3, scope: !19388)
!19393 = !DILocation(line: 2354, column: 6, scope: !19356)
!19394 = !DILocation(line: 2354, column: 6, scope: !19352)
!19395 = !DILocation(line: 2355, column: 3, scope: !19355)
!19396 = !DILocation(line: 2355, column: 3, scope: !19364)
!19397 = !DILocalVariable(name: "__dummy", scope: !19398, file: !3, line: 2355, type: !312)
!19398 = distinct !DILexicalBlock(scope: !19363, file: !3, line: 2355, column: 3)
!19399 = !DILocation(line: 2355, column: 3, scope: !19398)
!19400 = !DILocalVariable(name: "__dummy2", scope: !19398, file: !3, line: 2355, type: !312)
!19401 = !DILocation(line: 2355, column: 3, scope: !19363)
!19402 = !DILocation(line: 2355, column: 3, scope: !19362)
!19403 = !DILocation(line: 2355, column: 3, scope: !19404)
!19404 = distinct !DILexicalBlock(scope: !19362, file: !3, line: 2355, column: 3)
!19405 = !DILocalVariable(name: "__dummy", scope: !19406, file: !3, line: 2355, type: !312)
!19406 = distinct !DILexicalBlock(scope: !19407, file: !3, line: 2355, column: 3)
!19407 = distinct !DILexicalBlock(scope: !19404, file: !3, line: 2355, column: 3)
!19408 = !DILocation(line: 2355, column: 3, scope: !19406)
!19409 = !DILocalVariable(name: "__dummy2", scope: !19406, file: !3, line: 2355, type: !312)
!19410 = !DILocation(line: 2355, column: 3, scope: !19407)
!19411 = !DILocation(line: 2355, column: 3, scope: !19361)
!19412 = !{i32 -2139427647}
!19413 = !DILocation(line: 2355, column: 3, scope: !19360)
!19414 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !19359)
!19415 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !19359)
!19416 = !DILocation(line: 2356, column: 3, scope: !19355)
!19417 = !DILocation(line: 2356, column: 9, scope: !19355)
!19418 = !DILocation(line: 2356, column: 24, scope: !19355)
!19419 = !DILocation(line: 2357, column: 27, scope: !19355)
!19420 = !DILocation(line: 2357, column: 4, scope: !19355)
!19421 = !DILocation(line: 2358, column: 27, scope: !19355)
!19422 = !DILocation(line: 2358, column: 33, scope: !19355)
!19423 = !DILocation(line: 2358, column: 46, scope: !19355)
!19424 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !19354)
!19425 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !19354)
!19426 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !19354)
!19427 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !19354)
!19428 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !19354)
!19429 = !DILocation(line: 2359, column: 2, scope: !19355)
!19430 = !DILocation(line: 2360, column: 1, scope: !19352)
!19431 = distinct !DISubprogram(name: "mgsl_unthrottle", scope: !3, file: !3, line: 2369, type: !4881, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19432 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !19433)
!19433 = distinct !DILocation(line: 2392, column: 3, scope: !19434)
!19434 = distinct !DILexicalBlock(scope: !19435, file: !3, line: 2388, column: 22)
!19435 = distinct !DILexicalBlock(scope: !19431, file: !3, line: 2388, column: 6)
!19436 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !19433)
!19437 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !19438)
!19438 = distinct !DILocation(line: 2389, column: 3, scope: !19439)
!19439 = distinct !DILexicalBlock(scope: !19440, file: !3, line: 2389, column: 3)
!19440 = distinct !DILexicalBlock(scope: !19441, file: !3, line: 2389, column: 3)
!19441 = distinct !DILexicalBlock(scope: !19442, file: !3, line: 2389, column: 3)
!19442 = distinct !DILexicalBlock(scope: !19443, file: !3, line: 2389, column: 3)
!19443 = distinct !DILexicalBlock(scope: !19434, file: !3, line: 2389, column: 3)
!19444 = !DILocalVariable(name: "tty", arg: 1, scope: !19431, file: !3, line: 2369, type: !3760)
!19445 = !DILocation(line: 2369, column: 49, scope: !19431)
!19446 = !DILocalVariable(name: "info", scope: !19431, file: !3, line: 2371, type: !7524)
!19447 = !DILocation(line: 2371, column: 22, scope: !19431)
!19448 = !DILocation(line: 2371, column: 29, scope: !19431)
!19449 = !DILocation(line: 2371, column: 34, scope: !19431)
!19450 = !DILocalVariable(name: "flags", scope: !19431, file: !3, line: 2372, type: !312)
!19451 = !DILocation(line: 2372, column: 16, scope: !19431)
!19452 = !DILocation(line: 2374, column: 6, scope: !19453)
!19453 = distinct !DILexicalBlock(scope: !19431, file: !3, line: 2374, column: 6)
!19454 = !DILocation(line: 2374, column: 18, scope: !19453)
!19455 = !DILocation(line: 2374, column: 6, scope: !19431)
!19456 = !DILocation(line: 2376, column: 24, scope: !19453)
!19457 = !DILocation(line: 2376, column: 30, scope: !19453)
!19458 = !DILocation(line: 2375, column: 3, scope: !19453)
!19459 = !DILocation(line: 2378, column: 26, scope: !19460)
!19460 = distinct !DILexicalBlock(scope: !19431, file: !3, line: 2378, column: 6)
!19461 = !DILocation(line: 2378, column: 32, scope: !19460)
!19462 = !DILocation(line: 2378, column: 37, scope: !19460)
!19463 = !DILocation(line: 2378, column: 6, scope: !19460)
!19464 = !DILocation(line: 2378, column: 6, scope: !19431)
!19465 = !DILocation(line: 2379, column: 3, scope: !19460)
!19466 = !DILocation(line: 2381, column: 6, scope: !19467)
!19467 = distinct !DILexicalBlock(scope: !19431, file: !3, line: 2381, column: 6)
!19468 = !DILocation(line: 2381, column: 6, scope: !19431)
!19469 = !DILocation(line: 2382, column: 7, scope: !19470)
!19470 = distinct !DILexicalBlock(scope: !19471, file: !3, line: 2382, column: 7)
!19471 = distinct !DILexicalBlock(scope: !19467, file: !3, line: 2381, column: 20)
!19472 = !DILocation(line: 2382, column: 13, scope: !19470)
!19473 = !DILocation(line: 2382, column: 7, scope: !19471)
!19474 = !DILocation(line: 2383, column: 4, scope: !19470)
!19475 = !DILocation(line: 2383, column: 10, scope: !19470)
!19476 = !DILocation(line: 2383, column: 17, scope: !19470)
!19477 = !DILocation(line: 2385, column: 20, scope: !19470)
!19478 = !DILocation(line: 2385, column: 25, scope: !19470)
!19479 = !DILocation(line: 2385, column: 4, scope: !19470)
!19480 = !DILocation(line: 2386, column: 2, scope: !19471)
!19481 = !DILocation(line: 2388, column: 6, scope: !19435)
!19482 = !DILocation(line: 2388, column: 6, scope: !19431)
!19483 = !DILocation(line: 2389, column: 3, scope: !19434)
!19484 = !DILocation(line: 2389, column: 3, scope: !19443)
!19485 = !DILocalVariable(name: "__dummy", scope: !19486, file: !3, line: 2389, type: !312)
!19486 = distinct !DILexicalBlock(scope: !19442, file: !3, line: 2389, column: 3)
!19487 = !DILocation(line: 2389, column: 3, scope: !19486)
!19488 = !DILocalVariable(name: "__dummy2", scope: !19486, file: !3, line: 2389, type: !312)
!19489 = !DILocation(line: 2389, column: 3, scope: !19442)
!19490 = !DILocation(line: 2389, column: 3, scope: !19441)
!19491 = !DILocation(line: 2389, column: 3, scope: !19492)
!19492 = distinct !DILexicalBlock(scope: !19441, file: !3, line: 2389, column: 3)
!19493 = !DILocalVariable(name: "__dummy", scope: !19494, file: !3, line: 2389, type: !312)
!19494 = distinct !DILexicalBlock(scope: !19495, file: !3, line: 2389, column: 3)
!19495 = distinct !DILexicalBlock(scope: !19492, file: !3, line: 2389, column: 3)
!19496 = !DILocation(line: 2389, column: 3, scope: !19494)
!19497 = !DILocalVariable(name: "__dummy2", scope: !19494, file: !3, line: 2389, type: !312)
!19498 = !DILocation(line: 2389, column: 3, scope: !19495)
!19499 = !DILocation(line: 2389, column: 3, scope: !19440)
!19500 = !{i32 -2139426325}
!19501 = !DILocation(line: 2389, column: 3, scope: !19439)
!19502 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !19438)
!19503 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !19438)
!19504 = !DILocation(line: 2390, column: 3, scope: !19434)
!19505 = !DILocation(line: 2390, column: 9, scope: !19434)
!19506 = !DILocation(line: 2390, column: 24, scope: !19434)
!19507 = !DILocation(line: 2391, column: 27, scope: !19434)
!19508 = !DILocation(line: 2391, column: 4, scope: !19434)
!19509 = !DILocation(line: 2392, column: 27, scope: !19434)
!19510 = !DILocation(line: 2392, column: 33, scope: !19434)
!19511 = !DILocation(line: 2392, column: 46, scope: !19434)
!19512 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !19433)
!19513 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !19433)
!19514 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !19433)
!19515 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !19433)
!19516 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !19433)
!19517 = !DILocation(line: 2393, column: 2, scope: !19434)
!19518 = !DILocation(line: 2395, column: 1, scope: !19431)
!19519 = distinct !DISubprogram(name: "mgsl_stop", scope: !3, file: !3, line: 973, type: !4881, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19520 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !19521)
!19521 = distinct !DILocation(line: 987, column: 2, scope: !19519)
!19522 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !19521)
!19523 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !19524)
!19524 = distinct !DILocation(line: 984, column: 2, scope: !19525)
!19525 = distinct !DILexicalBlock(scope: !19526, file: !3, line: 984, column: 2)
!19526 = distinct !DILexicalBlock(scope: !19527, file: !3, line: 984, column: 2)
!19527 = distinct !DILexicalBlock(scope: !19528, file: !3, line: 984, column: 2)
!19528 = distinct !DILexicalBlock(scope: !19529, file: !3, line: 984, column: 2)
!19529 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 984, column: 2)
!19530 = !DILocalVariable(name: "tty", arg: 1, scope: !19519, file: !3, line: 973, type: !3760)
!19531 = !DILocation(line: 973, column: 42, scope: !19519)
!19532 = !DILocalVariable(name: "info", scope: !19519, file: !3, line: 975, type: !7524)
!19533 = !DILocation(line: 975, column: 22, scope: !19519)
!19534 = !DILocation(line: 975, column: 29, scope: !19519)
!19535 = !DILocation(line: 975, column: 34, scope: !19519)
!19536 = !DILocalVariable(name: "flags", scope: !19519, file: !3, line: 976, type: !312)
!19537 = !DILocation(line: 976, column: 16, scope: !19519)
!19538 = !DILocation(line: 978, column: 26, scope: !19539)
!19539 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 978, column: 6)
!19540 = !DILocation(line: 978, column: 32, scope: !19539)
!19541 = !DILocation(line: 978, column: 37, scope: !19539)
!19542 = !DILocation(line: 978, column: 6, scope: !19539)
!19543 = !DILocation(line: 978, column: 6, scope: !19519)
!19544 = !DILocation(line: 979, column: 3, scope: !19539)
!19545 = !DILocation(line: 981, column: 7, scope: !19546)
!19546 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 981, column: 7)
!19547 = !DILocation(line: 981, column: 19, scope: !19546)
!19548 = !DILocation(line: 981, column: 7, scope: !19519)
!19549 = !DILocation(line: 982, column: 28, scope: !19546)
!19550 = !DILocation(line: 982, column: 34, scope: !19546)
!19551 = !DILocation(line: 982, column: 3, scope: !19546)
!19552 = !DILocation(line: 984, column: 2, scope: !19519)
!19553 = !DILocation(line: 984, column: 2, scope: !19529)
!19554 = !DILocalVariable(name: "__dummy", scope: !19555, file: !3, line: 984, type: !312)
!19555 = distinct !DILexicalBlock(scope: !19528, file: !3, line: 984, column: 2)
!19556 = !DILocation(line: 984, column: 2, scope: !19555)
!19557 = !DILocalVariable(name: "__dummy2", scope: !19555, file: !3, line: 984, type: !312)
!19558 = !DILocation(line: 984, column: 2, scope: !19528)
!19559 = !DILocation(line: 984, column: 2, scope: !19527)
!19560 = !DILocation(line: 984, column: 2, scope: !19561)
!19561 = distinct !DILexicalBlock(scope: !19527, file: !3, line: 984, column: 2)
!19562 = !DILocalVariable(name: "__dummy", scope: !19563, file: !3, line: 984, type: !312)
!19563 = distinct !DILexicalBlock(scope: !19564, file: !3, line: 984, column: 2)
!19564 = distinct !DILexicalBlock(scope: !19561, file: !3, line: 984, column: 2)
!19565 = !DILocation(line: 984, column: 2, scope: !19563)
!19566 = !DILocalVariable(name: "__dummy2", scope: !19563, file: !3, line: 984, type: !312)
!19567 = !DILocation(line: 984, column: 2, scope: !19564)
!19568 = !DILocation(line: 984, column: 2, scope: !19526)
!19569 = !{i32 -2139467088}
!19570 = !DILocation(line: 984, column: 2, scope: !19525)
!19571 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !19524)
!19572 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !19524)
!19573 = !DILocation(line: 985, column: 6, scope: !19574)
!19574 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 985, column: 6)
!19575 = !DILocation(line: 985, column: 12, scope: !19574)
!19576 = !DILocation(line: 985, column: 6, scope: !19519)
!19577 = !DILocation(line: 986, column: 25, scope: !19574)
!19578 = !DILocation(line: 986, column: 4, scope: !19574)
!19579 = !DILocation(line: 987, column: 26, scope: !19519)
!19580 = !DILocation(line: 987, column: 32, scope: !19519)
!19581 = !DILocation(line: 987, column: 45, scope: !19519)
!19582 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !19521)
!19583 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !19521)
!19584 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !19521)
!19585 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !19521)
!19586 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !19521)
!19587 = !DILocation(line: 989, column: 1, scope: !19519)
!19588 = distinct !DISubprogram(name: "mgsl_start", scope: !3, file: !3, line: 996, type: !4881, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19589 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !19590)
!19590 = distinct !DILocation(line: 1010, column: 2, scope: !19588)
!19591 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !19590)
!19592 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !19593)
!19593 = distinct !DILocation(line: 1007, column: 2, scope: !19594)
!19594 = distinct !DILexicalBlock(scope: !19595, file: !3, line: 1007, column: 2)
!19595 = distinct !DILexicalBlock(scope: !19596, file: !3, line: 1007, column: 2)
!19596 = distinct !DILexicalBlock(scope: !19597, file: !3, line: 1007, column: 2)
!19597 = distinct !DILexicalBlock(scope: !19598, file: !3, line: 1007, column: 2)
!19598 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 1007, column: 2)
!19599 = !DILocalVariable(name: "tty", arg: 1, scope: !19588, file: !3, line: 996, type: !3760)
!19600 = !DILocation(line: 996, column: 43, scope: !19588)
!19601 = !DILocalVariable(name: "info", scope: !19588, file: !3, line: 998, type: !7524)
!19602 = !DILocation(line: 998, column: 22, scope: !19588)
!19603 = !DILocation(line: 998, column: 29, scope: !19588)
!19604 = !DILocation(line: 998, column: 34, scope: !19588)
!19605 = !DILocalVariable(name: "flags", scope: !19588, file: !3, line: 999, type: !312)
!19606 = !DILocation(line: 999, column: 16, scope: !19588)
!19607 = !DILocation(line: 1001, column: 26, scope: !19608)
!19608 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 1001, column: 6)
!19609 = !DILocation(line: 1001, column: 32, scope: !19608)
!19610 = !DILocation(line: 1001, column: 37, scope: !19608)
!19611 = !DILocation(line: 1001, column: 6, scope: !19608)
!19612 = !DILocation(line: 1001, column: 6, scope: !19588)
!19613 = !DILocation(line: 1002, column: 3, scope: !19608)
!19614 = !DILocation(line: 1004, column: 7, scope: !19615)
!19615 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 1004, column: 7)
!19616 = !DILocation(line: 1004, column: 19, scope: !19615)
!19617 = !DILocation(line: 1004, column: 7, scope: !19588)
!19618 = !DILocation(line: 1005, column: 29, scope: !19615)
!19619 = !DILocation(line: 1005, column: 35, scope: !19615)
!19620 = !DILocation(line: 1005, column: 3, scope: !19615)
!19621 = !DILocation(line: 1007, column: 2, scope: !19588)
!19622 = !DILocation(line: 1007, column: 2, scope: !19598)
!19623 = !DILocalVariable(name: "__dummy", scope: !19624, file: !3, line: 1007, type: !312)
!19624 = distinct !DILexicalBlock(scope: !19597, file: !3, line: 1007, column: 2)
!19625 = !DILocation(line: 1007, column: 2, scope: !19624)
!19626 = !DILocalVariable(name: "__dummy2", scope: !19624, file: !3, line: 1007, type: !312)
!19627 = !DILocation(line: 1007, column: 2, scope: !19597)
!19628 = !DILocation(line: 1007, column: 2, scope: !19596)
!19629 = !DILocation(line: 1007, column: 2, scope: !19630)
!19630 = distinct !DILexicalBlock(scope: !19596, file: !3, line: 1007, column: 2)
!19631 = !DILocalVariable(name: "__dummy", scope: !19632, file: !3, line: 1007, type: !312)
!19632 = distinct !DILexicalBlock(scope: !19633, file: !3, line: 1007, column: 2)
!19633 = distinct !DILexicalBlock(scope: !19630, file: !3, line: 1007, column: 2)
!19634 = !DILocation(line: 1007, column: 2, scope: !19632)
!19635 = !DILocalVariable(name: "__dummy2", scope: !19632, file: !3, line: 1007, type: !312)
!19636 = !DILocation(line: 1007, column: 2, scope: !19633)
!19637 = !DILocation(line: 1007, column: 2, scope: !19595)
!19638 = !{i32 -2139466011}
!19639 = !DILocation(line: 1007, column: 2, scope: !19594)
!19640 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !19593)
!19641 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !19593)
!19642 = !DILocation(line: 1008, column: 7, scope: !19643)
!19643 = distinct !DILexicalBlock(scope: !19588, file: !3, line: 1008, column: 6)
!19644 = !DILocation(line: 1008, column: 13, scope: !19643)
!19645 = !DILocation(line: 1008, column: 6, scope: !19588)
!19646 = !DILocation(line: 1009, column: 26, scope: !19643)
!19647 = !DILocation(line: 1009, column: 4, scope: !19643)
!19648 = !DILocation(line: 1010, column: 26, scope: !19588)
!19649 = !DILocation(line: 1010, column: 32, scope: !19588)
!19650 = !DILocation(line: 1010, column: 45, scope: !19588)
!19651 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !19590)
!19652 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !19590)
!19653 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !19590)
!19654 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !19590)
!19655 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !19590)
!19656 = !DILocation(line: 1012, column: 1, scope: !19588)
!19657 = distinct !DISubprogram(name: "mgsl_hangup", scope: !3, file: !3, line: 3179, type: !4881, scopeLine: 3180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19658 = !DILocalVariable(name: "tty", arg: 1, scope: !19657, file: !3, line: 3179, type: !3760)
!19659 = !DILocation(line: 3179, column: 44, scope: !19657)
!19660 = !DILocalVariable(name: "info", scope: !19657, file: !3, line: 3181, type: !7524)
!19661 = !DILocation(line: 3181, column: 23, scope: !19657)
!19662 = !DILocation(line: 3181, column: 30, scope: !19657)
!19663 = !DILocation(line: 3181, column: 35, scope: !19657)
!19664 = !DILocation(line: 3183, column: 6, scope: !19665)
!19665 = distinct !DILexicalBlock(scope: !19657, file: !3, line: 3183, column: 6)
!19666 = !DILocation(line: 3183, column: 18, scope: !19665)
!19667 = !DILocation(line: 3183, column: 6, scope: !19657)
!19668 = !DILocation(line: 3185, column: 24, scope: !19665)
!19669 = !DILocation(line: 3185, column: 30, scope: !19665)
!19670 = !DILocation(line: 3184, column: 3, scope: !19665)
!19671 = !DILocation(line: 3187, column: 26, scope: !19672)
!19672 = distinct !DILexicalBlock(scope: !19657, file: !3, line: 3187, column: 6)
!19673 = !DILocation(line: 3187, column: 32, scope: !19672)
!19674 = !DILocation(line: 3187, column: 37, scope: !19672)
!19675 = !DILocation(line: 3187, column: 6, scope: !19672)
!19676 = !DILocation(line: 3187, column: 6, scope: !19657)
!19677 = !DILocation(line: 3188, column: 3, scope: !19672)
!19678 = !DILocation(line: 3190, column: 20, scope: !19657)
!19679 = !DILocation(line: 3190, column: 2, scope: !19657)
!19680 = !DILocation(line: 3191, column: 11, scope: !19657)
!19681 = !DILocation(line: 3191, column: 2, scope: !19657)
!19682 = !DILocation(line: 3193, column: 2, scope: !19657)
!19683 = !DILocation(line: 3193, column: 8, scope: !19657)
!19684 = !DILocation(line: 3193, column: 13, scope: !19657)
!19685 = !DILocation(line: 3193, column: 19, scope: !19657)
!19686 = !DILocation(line: 3194, column: 23, scope: !19657)
!19687 = !DILocation(line: 3194, column: 29, scope: !19657)
!19688 = !DILocation(line: 3194, column: 2, scope: !19657)
!19689 = !DILocation(line: 3195, column: 2, scope: !19657)
!19690 = !DILocation(line: 3195, column: 8, scope: !19657)
!19691 = !DILocation(line: 3195, column: 13, scope: !19657)
!19692 = !DILocation(line: 3195, column: 17, scope: !19657)
!19693 = !DILocation(line: 3197, column: 2, scope: !19657)
!19694 = !DILocation(line: 3199, column: 1, scope: !19657)
!19695 = distinct !DISubprogram(name: "mgsl_break", scope: !3, file: !3, line: 2885, type: !4917, scopeLine: 2886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19696 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !19697)
!19697 = distinct !DILocation(line: 2902, column: 2, scope: !19695)
!19698 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !19697)
!19699 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !19700)
!19700 = distinct !DILocation(line: 2897, column: 2, scope: !19701)
!19701 = distinct !DILexicalBlock(scope: !19702, file: !3, line: 2897, column: 2)
!19702 = distinct !DILexicalBlock(scope: !19703, file: !3, line: 2897, column: 2)
!19703 = distinct !DILexicalBlock(scope: !19704, file: !3, line: 2897, column: 2)
!19704 = distinct !DILexicalBlock(scope: !19705, file: !3, line: 2897, column: 2)
!19705 = distinct !DILexicalBlock(scope: !19695, file: !3, line: 2897, column: 2)
!19706 = !DILocalVariable(name: "tty", arg: 1, scope: !19695, file: !3, line: 2885, type: !3760)
!19707 = !DILocation(line: 2885, column: 42, scope: !19695)
!19708 = !DILocalVariable(name: "break_state", arg: 2, scope: !19695, file: !3, line: 2885, type: !32)
!19709 = !DILocation(line: 2885, column: 51, scope: !19695)
!19710 = !DILocalVariable(name: "info", scope: !19695, file: !3, line: 2887, type: !7524)
!19711 = !DILocation(line: 2887, column: 23, scope: !19695)
!19712 = !DILocation(line: 2887, column: 30, scope: !19695)
!19713 = !DILocation(line: 2887, column: 35, scope: !19695)
!19714 = !DILocalVariable(name: "flags", scope: !19695, file: !3, line: 2888, type: !312)
!19715 = !DILocation(line: 2888, column: 16, scope: !19695)
!19716 = !DILocation(line: 2890, column: 6, scope: !19717)
!19717 = distinct !DILexicalBlock(scope: !19695, file: !3, line: 2890, column: 6)
!19718 = !DILocation(line: 2890, column: 18, scope: !19717)
!19719 = !DILocation(line: 2890, column: 6, scope: !19695)
!19720 = !DILocation(line: 2892, column: 24, scope: !19717)
!19721 = !DILocation(line: 2892, column: 30, scope: !19717)
!19722 = !DILocation(line: 2892, column: 43, scope: !19717)
!19723 = !DILocation(line: 2891, column: 3, scope: !19717)
!19724 = !DILocation(line: 2894, column: 26, scope: !19725)
!19725 = distinct !DILexicalBlock(scope: !19695, file: !3, line: 2894, column: 6)
!19726 = !DILocation(line: 2894, column: 32, scope: !19725)
!19727 = !DILocation(line: 2894, column: 37, scope: !19725)
!19728 = !DILocation(line: 2894, column: 6, scope: !19725)
!19729 = !DILocation(line: 2894, column: 6, scope: !19695)
!19730 = !DILocation(line: 2895, column: 3, scope: !19725)
!19731 = !DILocation(line: 2897, column: 2, scope: !19695)
!19732 = !DILocation(line: 2897, column: 2, scope: !19705)
!19733 = !DILocalVariable(name: "__dummy", scope: !19734, file: !3, line: 2897, type: !312)
!19734 = distinct !DILexicalBlock(scope: !19704, file: !3, line: 2897, column: 2)
!19735 = !DILocation(line: 2897, column: 2, scope: !19734)
!19736 = !DILocalVariable(name: "__dummy2", scope: !19734, file: !3, line: 2897, type: !312)
!19737 = !DILocation(line: 2897, column: 2, scope: !19704)
!19738 = !DILocation(line: 2897, column: 2, scope: !19703)
!19739 = !DILocation(line: 2897, column: 2, scope: !19740)
!19740 = distinct !DILexicalBlock(scope: !19703, file: !3, line: 2897, column: 2)
!19741 = !DILocalVariable(name: "__dummy", scope: !19742, file: !3, line: 2897, type: !312)
!19742 = distinct !DILexicalBlock(scope: !19743, file: !3, line: 2897, column: 2)
!19743 = distinct !DILexicalBlock(scope: !19740, file: !3, line: 2897, column: 2)
!19744 = !DILocation(line: 2897, column: 2, scope: !19742)
!19745 = !DILocalVariable(name: "__dummy2", scope: !19742, file: !3, line: 2897, type: !312)
!19746 = !DILocation(line: 2897, column: 2, scope: !19743)
!19747 = !DILocation(line: 2897, column: 2, scope: !19702)
!19748 = !{i32 -2139399584}
!19749 = !DILocation(line: 2897, column: 2, scope: !19701)
!19750 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !19700)
!19751 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !19700)
!19752 = !DILocation(line: 2898, column: 7, scope: !19753)
!19753 = distinct !DILexicalBlock(scope: !19695, file: !3, line: 2898, column: 7)
!19754 = !DILocation(line: 2898, column: 19, scope: !19753)
!19755 = !DILocation(line: 2898, column: 7, scope: !19695)
!19756 = !DILocation(line: 2899, column: 14, scope: !19753)
!19757 = !DILocation(line: 2899, column: 40, scope: !19753)
!19758 = !DILocation(line: 2899, column: 30, scope: !19753)
!19759 = !DILocation(line: 2899, column: 51, scope: !19753)
!19760 = !DILocation(line: 2899, column: 24, scope: !19753)
!19761 = !DILocation(line: 2899, column: 3, scope: !19753)
!19762 = !DILocation(line: 2901, column: 14, scope: !19753)
!19763 = !DILocation(line: 2901, column: 40, scope: !19753)
!19764 = !DILocation(line: 2901, column: 30, scope: !19753)
!19765 = !DILocation(line: 2901, column: 51, scope: !19753)
!19766 = !DILocation(line: 2901, column: 24, scope: !19753)
!19767 = !DILocation(line: 2901, column: 3, scope: !19753)
!19768 = !DILocation(line: 2902, column: 26, scope: !19695)
!19769 = !DILocation(line: 2902, column: 32, scope: !19695)
!19770 = !DILocation(line: 2902, column: 45, scope: !19695)
!19771 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !19697)
!19772 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !19697)
!19773 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !19697)
!19774 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !19697)
!19775 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !19697)
!19776 = !DILocation(line: 2903, column: 2, scope: !19695)
!19777 = !DILocation(line: 2905, column: 1, scope: !19695)
!19778 = distinct !DISubprogram(name: "mgsl_flush_buffer", scope: !3, file: !3, line: 2282, type: !4881, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19779 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !19780)
!19780 = distinct !DILocation(line: 2297, column: 2, scope: !19778)
!19781 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !19780)
!19782 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !19783)
!19783 = distinct !DILocation(line: 2294, column: 2, scope: !19784)
!19784 = distinct !DILexicalBlock(scope: !19785, file: !3, line: 2294, column: 2)
!19785 = distinct !DILexicalBlock(scope: !19786, file: !3, line: 2294, column: 2)
!19786 = distinct !DILexicalBlock(scope: !19787, file: !3, line: 2294, column: 2)
!19787 = distinct !DILexicalBlock(scope: !19788, file: !3, line: 2294, column: 2)
!19788 = distinct !DILexicalBlock(scope: !19778, file: !3, line: 2294, column: 2)
!19789 = !DILocalVariable(name: "tty", arg: 1, scope: !19778, file: !3, line: 2282, type: !3760)
!19790 = !DILocation(line: 2282, column: 50, scope: !19778)
!19791 = !DILocalVariable(name: "info", scope: !19778, file: !3, line: 2284, type: !7524)
!19792 = !DILocation(line: 2284, column: 22, scope: !19778)
!19793 = !DILocation(line: 2284, column: 29, scope: !19778)
!19794 = !DILocation(line: 2284, column: 34, scope: !19778)
!19795 = !DILocalVariable(name: "flags", scope: !19778, file: !3, line: 2285, type: !312)
!19796 = !DILocation(line: 2285, column: 16, scope: !19778)
!19797 = !DILocation(line: 2287, column: 6, scope: !19798)
!19798 = distinct !DILexicalBlock(scope: !19778, file: !3, line: 2287, column: 6)
!19799 = !DILocation(line: 2287, column: 18, scope: !19798)
!19800 = !DILocation(line: 2287, column: 6, scope: !19778)
!19801 = !DILocation(line: 2289, column: 24, scope: !19798)
!19802 = !DILocation(line: 2289, column: 30, scope: !19798)
!19803 = !DILocation(line: 2288, column: 3, scope: !19798)
!19804 = !DILocation(line: 2291, column: 26, scope: !19805)
!19805 = distinct !DILexicalBlock(scope: !19778, file: !3, line: 2291, column: 6)
!19806 = !DILocation(line: 2291, column: 32, scope: !19805)
!19807 = !DILocation(line: 2291, column: 37, scope: !19805)
!19808 = !DILocation(line: 2291, column: 6, scope: !19805)
!19809 = !DILocation(line: 2291, column: 6, scope: !19778)
!19810 = !DILocation(line: 2292, column: 3, scope: !19805)
!19811 = !DILocation(line: 2294, column: 2, scope: !19778)
!19812 = !DILocation(line: 2294, column: 2, scope: !19788)
!19813 = !DILocalVariable(name: "__dummy", scope: !19814, file: !3, line: 2294, type: !312)
!19814 = distinct !DILexicalBlock(scope: !19787, file: !3, line: 2294, column: 2)
!19815 = !DILocation(line: 2294, column: 2, scope: !19814)
!19816 = !DILocalVariable(name: "__dummy2", scope: !19814, file: !3, line: 2294, type: !312)
!19817 = !DILocation(line: 2294, column: 2, scope: !19787)
!19818 = !DILocation(line: 2294, column: 2, scope: !19786)
!19819 = !DILocation(line: 2294, column: 2, scope: !19820)
!19820 = distinct !DILexicalBlock(scope: !19786, file: !3, line: 2294, column: 2)
!19821 = !DILocalVariable(name: "__dummy", scope: !19822, file: !3, line: 2294, type: !312)
!19822 = distinct !DILexicalBlock(scope: !19823, file: !3, line: 2294, column: 2)
!19823 = distinct !DILexicalBlock(scope: !19820, file: !3, line: 2294, column: 2)
!19824 = !DILocation(line: 2294, column: 2, scope: !19822)
!19825 = !DILocalVariable(name: "__dummy2", scope: !19822, file: !3, line: 2294, type: !312)
!19826 = !DILocation(line: 2294, column: 2, scope: !19823)
!19827 = !DILocation(line: 2294, column: 2, scope: !19785)
!19828 = !{i32 -2139430070}
!19829 = !DILocation(line: 2294, column: 2, scope: !19784)
!19830 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !19783)
!19831 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !19783)
!19832 = !DILocation(line: 2295, column: 37, scope: !19778)
!19833 = !DILocation(line: 2295, column: 43, scope: !19778)
!19834 = !DILocation(line: 2295, column: 53, scope: !19778)
!19835 = !DILocation(line: 2295, column: 19, scope: !19778)
!19836 = !DILocation(line: 2295, column: 25, scope: !19778)
!19837 = !DILocation(line: 2295, column: 35, scope: !19778)
!19838 = !DILocation(line: 2295, column: 2, scope: !19778)
!19839 = !DILocation(line: 2295, column: 8, scope: !19778)
!19840 = !DILocation(line: 2295, column: 17, scope: !19778)
!19841 = !DILocation(line: 2296, column: 13, scope: !19778)
!19842 = !DILocation(line: 2296, column: 19, scope: !19778)
!19843 = !DILocation(line: 2296, column: 2, scope: !19778)
!19844 = !DILocation(line: 2297, column: 26, scope: !19778)
!19845 = !DILocation(line: 2297, column: 32, scope: !19778)
!19846 = !DILocation(line: 2297, column: 45, scope: !19778)
!19847 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !19780)
!19848 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !19780)
!19849 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !19780)
!19850 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !19780)
!19851 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !19780)
!19852 = !DILocation(line: 2299, column: 13, scope: !19778)
!19853 = !DILocation(line: 2299, column: 2, scope: !19778)
!19854 = !DILocation(line: 2300, column: 1, scope: !19778)
!19855 = distinct !DISubprogram(name: "mgsl_wait_until_sent", scope: !3, file: !3, line: 3108, type: !4923, scopeLine: 3109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19856 = !DILocalVariable(name: "pscr_ret__", scope: !19857, file: !19858, line: 15, type: !2326)
!19857 = distinct !DILexicalBlock(scope: !19859, file: !19858, line: 15, column: 9)
!19858 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!19859 = distinct !DISubprogram(name: "get_current", scope: !19858, file: !19858, line: 13, type: !19860, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19860 = !DISubroutineType(types: !19861)
!19861 = !{!2326}
!19862 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !19863)
!19863 = distinct !DILocation(line: 3157, column: 23, scope: !19864)
!19864 = distinct !DILexicalBlock(scope: !19865, file: !3, line: 3157, column: 8)
!19865 = distinct !DILexicalBlock(scope: !19866, file: !3, line: 3155, column: 22)
!19866 = distinct !DILexicalBlock(scope: !19867, file: !3, line: 3153, column: 9)
!19867 = distinct !DILexicalBlock(scope: !19855, file: !3, line: 3144, column: 7)
!19868 = !DILocalVariable(name: "__vpp_verify", scope: !19869, file: !19858, line: 15, type: !3276)
!19869 = distinct !DILexicalBlock(scope: !19857, file: !19858, line: 15, column: 9)
!19870 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !19863)
!19871 = !DILocalVariable(name: "pfo_val__", scope: !19872, file: !19858, line: 15, type: !331)
!19872 = distinct !DILexicalBlock(scope: !19857, file: !19858, line: 15, column: 9)
!19873 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !19863)
!19874 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !19875)
!19875 = distinct !DILocation(line: 3148, column: 23, scope: !19876)
!19876 = distinct !DILexicalBlock(scope: !19877, file: !3, line: 3148, column: 8)
!19877 = distinct !DILexicalBlock(scope: !19878, file: !3, line: 3146, column: 27)
!19878 = distinct !DILexicalBlock(scope: !19867, file: !3, line: 3145, column: 40)
!19879 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !19875)
!19880 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !19875)
!19881 = !DILocalVariable(name: "tty", arg: 1, scope: !19855, file: !3, line: 3108, type: !3760)
!19882 = !DILocation(line: 3108, column: 53, scope: !19855)
!19883 = !DILocalVariable(name: "timeout", arg: 2, scope: !19855, file: !3, line: 3108, type: !32)
!19884 = !DILocation(line: 3108, column: 62, scope: !19855)
!19885 = !DILocalVariable(name: "info", scope: !19855, file: !3, line: 3110, type: !7524)
!19886 = !DILocation(line: 3110, column: 23, scope: !19855)
!19887 = !DILocation(line: 3110, column: 30, scope: !19855)
!19888 = !DILocation(line: 3110, column: 35, scope: !19855)
!19889 = !DILocalVariable(name: "orig_jiffies", scope: !19855, file: !3, line: 3111, type: !312)
!19890 = !DILocation(line: 3111, column: 16, scope: !19855)
!19891 = !DILocalVariable(name: "char_time", scope: !19855, file: !3, line: 3111, type: !312)
!19892 = !DILocation(line: 3111, column: 30, scope: !19855)
!19893 = !DILocation(line: 3113, column: 7, scope: !19894)
!19894 = distinct !DILexicalBlock(scope: !19855, file: !3, line: 3113, column: 6)
!19895 = !DILocation(line: 3113, column: 6, scope: !19855)
!19896 = !DILocation(line: 3114, column: 3, scope: !19894)
!19897 = !DILocation(line: 3116, column: 6, scope: !19898)
!19898 = distinct !DILexicalBlock(scope: !19855, file: !3, line: 3116, column: 6)
!19899 = !DILocation(line: 3116, column: 18, scope: !19898)
!19900 = !DILocation(line: 3116, column: 6, scope: !19855)
!19901 = !DILocation(line: 3118, column: 24, scope: !19898)
!19902 = !DILocation(line: 3118, column: 30, scope: !19898)
!19903 = !DILocation(line: 3117, column: 3, scope: !19898)
!19904 = !DILocation(line: 3120, column: 26, scope: !19905)
!19905 = distinct !DILexicalBlock(scope: !19855, file: !3, line: 3120, column: 6)
!19906 = !DILocation(line: 3120, column: 32, scope: !19905)
!19907 = !DILocation(line: 3120, column: 37, scope: !19905)
!19908 = !DILocation(line: 3120, column: 6, scope: !19905)
!19909 = !DILocation(line: 3120, column: 6, scope: !19855)
!19910 = !DILocation(line: 3121, column: 3, scope: !19905)
!19911 = !DILocation(line: 3123, column: 29, scope: !19912)
!19912 = distinct !DILexicalBlock(scope: !19855, file: !3, line: 3123, column: 6)
!19913 = !DILocation(line: 3123, column: 35, scope: !19912)
!19914 = !DILocation(line: 3123, column: 7, scope: !19912)
!19915 = !DILocation(line: 3123, column: 6, scope: !19855)
!19916 = !DILocation(line: 3124, column: 3, scope: !19912)
!19917 = !DILocation(line: 3126, column: 17, scope: !19855)
!19918 = !DILocation(line: 3126, column: 15, scope: !19855)
!19919 = !DILocation(line: 3134, column: 7, scope: !19920)
!19920 = distinct !DILexicalBlock(scope: !19855, file: !3, line: 3134, column: 7)
!19921 = !DILocation(line: 3134, column: 13, scope: !19920)
!19922 = !DILocation(line: 3134, column: 20, scope: !19920)
!19923 = !DILocation(line: 3134, column: 7, scope: !19855)
!19924 = !DILocation(line: 3135, column: 22, scope: !19925)
!19925 = distinct !DILexicalBlock(scope: !19920, file: !3, line: 3134, column: 32)
!19926 = !DILocation(line: 3135, column: 28, scope: !19925)
!19927 = !DILocation(line: 3135, column: 35, scope: !19925)
!19928 = !DILocation(line: 3135, column: 20, scope: !19925)
!19929 = !DILocation(line: 3136, column: 8, scope: !19930)
!19930 = distinct !DILexicalBlock(scope: !19925, file: !3, line: 3136, column: 7)
!19931 = !DILocation(line: 3136, column: 7, scope: !19925)
!19932 = !DILocation(line: 3137, column: 13, scope: !19930)
!19933 = !DILocation(line: 3137, column: 4, scope: !19930)
!19934 = !DILocation(line: 3138, column: 2, scope: !19925)
!19935 = !DILocation(line: 3139, column: 13, scope: !19920)
!19936 = !DILocation(line: 3141, column: 6, scope: !19937)
!19937 = distinct !DILexicalBlock(scope: !19855, file: !3, line: 3141, column: 6)
!19938 = !DILocation(line: 3141, column: 6, scope: !19855)
!19939 = !DILocalVariable(name: "__UNIQUE_ID___x341", scope: !19940, file: !3, line: 3142, type: !312)
!19940 = distinct !DILexicalBlock(scope: !19937, file: !3, line: 3142, column: 15)
!19941 = !DILocation(line: 3142, column: 15, scope: !19940)
!19942 = !DILocalVariable(name: "__UNIQUE_ID___y342", scope: !19940, file: !3, line: 3142, type: !312)
!19943 = !DILocation(line: 3142, column: 13, scope: !19937)
!19944 = !DILocation(line: 3142, column: 3, scope: !19937)
!19945 = !DILocation(line: 3144, column: 7, scope: !19867)
!19946 = !DILocation(line: 3144, column: 13, scope: !19867)
!19947 = !DILocation(line: 3144, column: 20, scope: !19867)
!19948 = !DILocation(line: 3144, column: 25, scope: !19867)
!19949 = !DILocation(line: 3144, column: 43, scope: !19867)
!19950 = !DILocation(line: 3145, column: 3, scope: !19867)
!19951 = !DILocation(line: 3145, column: 9, scope: !19867)
!19952 = !DILocation(line: 3145, column: 16, scope: !19867)
!19953 = !DILocation(line: 3145, column: 21, scope: !19867)
!19954 = !DILocation(line: 3144, column: 7, scope: !19855)
!19955 = !DILocation(line: 3146, column: 3, scope: !19878)
!19956 = !DILocation(line: 3146, column: 10, scope: !19878)
!19957 = !DILocation(line: 3146, column: 16, scope: !19878)
!19958 = !DILocation(line: 3147, column: 42, scope: !19877)
!19959 = !DILocation(line: 3147, column: 25, scope: !19877)
!19960 = !DILocation(line: 3147, column: 4, scope: !19877)
!19961 = !{i32 -2146003952}
!19962 = !DILocation(line: 3148, column: 8, scope: !19876)
!19963 = !DILocation(line: 3148, column: 8, scope: !19877)
!19964 = !DILocation(line: 3149, column: 5, scope: !19876)
!19965 = !DILocation(line: 3150, column: 8, scope: !19966)
!19966 = distinct !DILexicalBlock(scope: !19877, file: !3, line: 3150, column: 8)
!19967 = !DILocation(line: 3150, column: 16, scope: !19966)
!19968 = !DILocation(line: 3150, column: 19, scope: !19966)
!19969 = !DILocation(line: 3150, column: 8, scope: !19877)
!19970 = !DILocation(line: 3151, column: 5, scope: !19966)
!19971 = distinct !{!19971, !19955, !19972}
!19972 = !DILocation(line: 3152, column: 3, scope: !19878)
!19973 = !DILocation(line: 3153, column: 2, scope: !19878)
!19974 = !DILocation(line: 3154, column: 3, scope: !19866)
!19975 = !DILocation(line: 3154, column: 22, scope: !19866)
!19976 = !DILocation(line: 3154, column: 12, scope: !19866)
!19977 = !DILocation(line: 3154, column: 33, scope: !19866)
!19978 = !DILocation(line: 3154, column: 54, scope: !19866)
!19979 = !DILocation(line: 3155, column: 4, scope: !19866)
!19980 = !DILocation(line: 3155, column: 10, scope: !19866)
!19981 = !DILocation(line: 0, scope: !19866)
!19982 = !DILocation(line: 3156, column: 42, scope: !19865)
!19983 = !DILocation(line: 3156, column: 25, scope: !19865)
!19984 = !DILocation(line: 3156, column: 4, scope: !19865)
!19985 = !DILocation(line: 3157, column: 8, scope: !19864)
!19986 = !DILocation(line: 3157, column: 8, scope: !19865)
!19987 = !DILocation(line: 3158, column: 5, scope: !19864)
!19988 = !DILocation(line: 3159, column: 8, scope: !19989)
!19989 = distinct !DILexicalBlock(scope: !19865, file: !3, line: 3159, column: 8)
!19990 = !DILocation(line: 3159, column: 16, scope: !19989)
!19991 = !DILocation(line: 3159, column: 19, scope: !19989)
!19992 = !DILocation(line: 3159, column: 8, scope: !19865)
!19993 = !DILocation(line: 3160, column: 5, scope: !19989)
!19994 = distinct !{!19994, !19974, !19995}
!19995 = !DILocation(line: 3161, column: 3, scope: !19866)
!19996 = !DILocation(line: 3145, column: 24, scope: !19867)
!19997 = !DILabel(scope: !19855, name: "exit", file: !3, line: 3164)
!19998 = !DILocation(line: 3164, column: 1, scope: !19855)
!19999 = !DILocation(line: 3165, column: 6, scope: !20000)
!20000 = distinct !DILexicalBlock(scope: !19855, file: !3, line: 3165, column: 6)
!20001 = !DILocation(line: 3165, column: 18, scope: !20000)
!20002 = !DILocation(line: 3165, column: 6, scope: !19855)
!20003 = !DILocation(line: 3167, column: 24, scope: !20000)
!20004 = !DILocation(line: 3167, column: 30, scope: !20000)
!20005 = !DILocation(line: 3166, column: 3, scope: !20000)
!20006 = !DILocation(line: 3169, column: 1, scope: !19855)
!20007 = distinct !DISubprogram(name: "mgsl_send_xchar", scope: !3, file: !3, line: 2310, type: !4927, scopeLine: 2311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20008 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !20009)
!20009 = distinct !DILocation(line: 2328, column: 3, scope: !20010)
!20010 = distinct !DILexicalBlock(scope: !20011, file: !3, line: 2323, column: 10)
!20011 = distinct !DILexicalBlock(scope: !20007, file: !3, line: 2323, column: 6)
!20012 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !20009)
!20013 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !20014)
!20014 = distinct !DILocation(line: 2325, column: 3, scope: !20015)
!20015 = distinct !DILexicalBlock(scope: !20016, file: !3, line: 2325, column: 3)
!20016 = distinct !DILexicalBlock(scope: !20017, file: !3, line: 2325, column: 3)
!20017 = distinct !DILexicalBlock(scope: !20018, file: !3, line: 2325, column: 3)
!20018 = distinct !DILexicalBlock(scope: !20019, file: !3, line: 2325, column: 3)
!20019 = distinct !DILexicalBlock(scope: !20010, file: !3, line: 2325, column: 3)
!20020 = !DILocalVariable(name: "tty", arg: 1, scope: !20007, file: !3, line: 2310, type: !3760)
!20021 = !DILocation(line: 2310, column: 48, scope: !20007)
!20022 = !DILocalVariable(name: "ch", arg: 2, scope: !20007, file: !3, line: 2310, type: !268)
!20023 = !DILocation(line: 2310, column: 58, scope: !20007)
!20024 = !DILocalVariable(name: "info", scope: !20007, file: !3, line: 2312, type: !7524)
!20025 = !DILocation(line: 2312, column: 22, scope: !20007)
!20026 = !DILocation(line: 2312, column: 29, scope: !20007)
!20027 = !DILocation(line: 2312, column: 34, scope: !20007)
!20028 = !DILocalVariable(name: "flags", scope: !20007, file: !3, line: 2313, type: !312)
!20029 = !DILocation(line: 2313, column: 16, scope: !20007)
!20030 = !DILocation(line: 2315, column: 6, scope: !20031)
!20031 = distinct !DILexicalBlock(scope: !20007, file: !3, line: 2315, column: 6)
!20032 = !DILocation(line: 2315, column: 18, scope: !20031)
!20033 = !DILocation(line: 2315, column: 6, scope: !20007)
!20034 = !DILocation(line: 2317, column: 24, scope: !20031)
!20035 = !DILocation(line: 2317, column: 30, scope: !20031)
!20036 = !DILocation(line: 2317, column: 43, scope: !20031)
!20037 = !DILocation(line: 2316, column: 3, scope: !20031)
!20038 = !DILocation(line: 2319, column: 26, scope: !20039)
!20039 = distinct !DILexicalBlock(scope: !20007, file: !3, line: 2319, column: 6)
!20040 = !DILocation(line: 2319, column: 32, scope: !20039)
!20041 = !DILocation(line: 2319, column: 37, scope: !20039)
!20042 = !DILocation(line: 2319, column: 6, scope: !20039)
!20043 = !DILocation(line: 2319, column: 6, scope: !20007)
!20044 = !DILocation(line: 2320, column: 3, scope: !20039)
!20045 = !DILocation(line: 2322, column: 17, scope: !20007)
!20046 = !DILocation(line: 2322, column: 2, scope: !20007)
!20047 = !DILocation(line: 2322, column: 8, scope: !20007)
!20048 = !DILocation(line: 2322, column: 15, scope: !20007)
!20049 = !DILocation(line: 2323, column: 6, scope: !20011)
!20050 = !DILocation(line: 2323, column: 6, scope: !20007)
!20051 = !DILocation(line: 2325, column: 3, scope: !20010)
!20052 = !DILocation(line: 2325, column: 3, scope: !20019)
!20053 = !DILocalVariable(name: "__dummy", scope: !20054, file: !3, line: 2325, type: !312)
!20054 = distinct !DILexicalBlock(scope: !20018, file: !3, line: 2325, column: 3)
!20055 = !DILocation(line: 2325, column: 3, scope: !20054)
!20056 = !DILocalVariable(name: "__dummy2", scope: !20054, file: !3, line: 2325, type: !312)
!20057 = !DILocation(line: 2325, column: 3, scope: !20018)
!20058 = !DILocation(line: 2325, column: 3, scope: !20017)
!20059 = !DILocation(line: 2325, column: 3, scope: !20060)
!20060 = distinct !DILexicalBlock(scope: !20017, file: !3, line: 2325, column: 3)
!20061 = !DILocalVariable(name: "__dummy", scope: !20062, file: !3, line: 2325, type: !312)
!20062 = distinct !DILexicalBlock(scope: !20063, file: !3, line: 2325, column: 3)
!20063 = distinct !DILexicalBlock(scope: !20060, file: !3, line: 2325, column: 3)
!20064 = !DILocation(line: 2325, column: 3, scope: !20062)
!20065 = !DILocalVariable(name: "__dummy2", scope: !20062, file: !3, line: 2325, type: !312)
!20066 = !DILocation(line: 2325, column: 3, scope: !20063)
!20067 = !DILocation(line: 2325, column: 3, scope: !20016)
!20068 = !{i32 -2139428963}
!20069 = !DILocation(line: 2325, column: 3, scope: !20015)
!20070 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !20014)
!20071 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !20014)
!20072 = !DILocation(line: 2326, column: 8, scope: !20073)
!20073 = distinct !DILexicalBlock(scope: !20010, file: !3, line: 2326, column: 7)
!20074 = !DILocation(line: 2326, column: 14, scope: !20073)
!20075 = !DILocation(line: 2326, column: 7, scope: !20010)
!20076 = !DILocation(line: 2327, column: 27, scope: !20073)
!20077 = !DILocation(line: 2327, column: 5, scope: !20073)
!20078 = !DILocation(line: 2328, column: 27, scope: !20010)
!20079 = !DILocation(line: 2328, column: 33, scope: !20010)
!20080 = !DILocation(line: 2328, column: 46, scope: !20010)
!20081 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !20009)
!20082 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !20009)
!20083 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !20009)
!20084 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !20009)
!20085 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !20009)
!20086 = !DILocation(line: 2329, column: 2, scope: !20010)
!20087 = !DILocation(line: 2330, column: 1, scope: !20007)
!20088 = distinct !DISubprogram(name: "tiocmget", scope: !3, file: !3, line: 2828, type: !4895, scopeLine: 2829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20089 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !20090)
!20090 = distinct !DILocation(line: 2836, column: 2, scope: !20088)
!20091 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !20090)
!20092 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !20093)
!20093 = distinct !DILocation(line: 2834, column: 2, scope: !20094)
!20094 = distinct !DILexicalBlock(scope: !20095, file: !3, line: 2834, column: 2)
!20095 = distinct !DILexicalBlock(scope: !20096, file: !3, line: 2834, column: 2)
!20096 = distinct !DILexicalBlock(scope: !20097, file: !3, line: 2834, column: 2)
!20097 = distinct !DILexicalBlock(scope: !20098, file: !3, line: 2834, column: 2)
!20098 = distinct !DILexicalBlock(scope: !20088, file: !3, line: 2834, column: 2)
!20099 = !DILocalVariable(name: "tty", arg: 1, scope: !20088, file: !3, line: 2828, type: !3760)
!20100 = !DILocation(line: 2828, column: 40, scope: !20088)
!20101 = !DILocalVariable(name: "info", scope: !20088, file: !3, line: 2830, type: !7524)
!20102 = !DILocation(line: 2830, column: 22, scope: !20088)
!20103 = !DILocation(line: 2830, column: 29, scope: !20088)
!20104 = !DILocation(line: 2830, column: 34, scope: !20088)
!20105 = !DILocalVariable(name: "result", scope: !20088, file: !3, line: 2831, type: !7)
!20106 = !DILocation(line: 2831, column: 15, scope: !20088)
!20107 = !DILocalVariable(name: "flags", scope: !20088, file: !3, line: 2832, type: !312)
!20108 = !DILocation(line: 2832, column: 17, scope: !20088)
!20109 = !DILocation(line: 2834, column: 2, scope: !20088)
!20110 = !DILocation(line: 2834, column: 2, scope: !20098)
!20111 = !DILocalVariable(name: "__dummy", scope: !20112, file: !3, line: 2834, type: !312)
!20112 = distinct !DILexicalBlock(scope: !20097, file: !3, line: 2834, column: 2)
!20113 = !DILocation(line: 2834, column: 2, scope: !20112)
!20114 = !DILocalVariable(name: "__dummy2", scope: !20112, file: !3, line: 2834, type: !312)
!20115 = !DILocation(line: 2834, column: 2, scope: !20097)
!20116 = !DILocation(line: 2834, column: 2, scope: !20096)
!20117 = !DILocation(line: 2834, column: 2, scope: !20118)
!20118 = distinct !DILexicalBlock(scope: !20096, file: !3, line: 2834, column: 2)
!20119 = !DILocalVariable(name: "__dummy", scope: !20120, file: !3, line: 2834, type: !312)
!20120 = distinct !DILexicalBlock(scope: !20121, file: !3, line: 2834, column: 2)
!20121 = distinct !DILexicalBlock(scope: !20118, file: !3, line: 2834, column: 2)
!20122 = !DILocation(line: 2834, column: 2, scope: !20120)
!20123 = !DILocalVariable(name: "__dummy2", scope: !20120, file: !3, line: 2834, type: !312)
!20124 = !DILocation(line: 2834, column: 2, scope: !20121)
!20125 = !DILocation(line: 2834, column: 2, scope: !20095)
!20126 = !{i32 -2139401943}
!20127 = !DILocation(line: 2834, column: 2, scope: !20094)
!20128 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !20093)
!20129 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !20093)
!20130 = !DILocation(line: 2835, column: 26, scope: !20088)
!20131 = !DILocation(line: 2835, column: 3, scope: !20088)
!20132 = !DILocation(line: 2836, column: 26, scope: !20088)
!20133 = !DILocation(line: 2836, column: 32, scope: !20088)
!20134 = !DILocation(line: 2836, column: 45, scope: !20088)
!20135 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !20090)
!20136 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !20090)
!20137 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !20090)
!20138 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !20090)
!20139 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !20090)
!20140 = !DILocation(line: 2838, column: 13, scope: !20088)
!20141 = !DILocation(line: 2838, column: 19, scope: !20088)
!20142 = !DILocation(line: 2838, column: 34, scope: !20088)
!20143 = !DILocation(line: 2838, column: 12, scope: !20088)
!20144 = !DILocation(line: 2839, column: 5, scope: !20088)
!20145 = !DILocation(line: 2839, column: 11, scope: !20088)
!20146 = !DILocation(line: 2839, column: 26, scope: !20088)
!20147 = !DILocation(line: 2839, column: 4, scope: !20088)
!20148 = !DILocation(line: 2838, column: 69, scope: !20088)
!20149 = !DILocation(line: 2840, column: 5, scope: !20088)
!20150 = !DILocation(line: 2840, column: 11, scope: !20088)
!20151 = !DILocation(line: 2840, column: 26, scope: !20088)
!20152 = !DILocation(line: 2840, column: 4, scope: !20088)
!20153 = !DILocation(line: 2839, column: 61, scope: !20088)
!20154 = !DILocation(line: 2841, column: 5, scope: !20088)
!20155 = !DILocation(line: 2841, column: 11, scope: !20088)
!20156 = !DILocation(line: 2841, column: 26, scope: !20088)
!20157 = !DILocation(line: 2841, column: 4, scope: !20088)
!20158 = !DILocation(line: 2840, column: 61, scope: !20088)
!20159 = !DILocation(line: 2842, column: 5, scope: !20088)
!20160 = !DILocation(line: 2842, column: 11, scope: !20088)
!20161 = !DILocation(line: 2842, column: 26, scope: !20088)
!20162 = !DILocation(line: 2842, column: 4, scope: !20088)
!20163 = !DILocation(line: 2841, column: 61, scope: !20088)
!20164 = !DILocation(line: 2843, column: 5, scope: !20088)
!20165 = !DILocation(line: 2843, column: 11, scope: !20088)
!20166 = !DILocation(line: 2843, column: 26, scope: !20088)
!20167 = !DILocation(line: 2843, column: 4, scope: !20088)
!20168 = !DILocation(line: 2842, column: 61, scope: !20088)
!20169 = !DILocation(line: 2838, column: 9, scope: !20088)
!20170 = !DILocation(line: 2845, column: 6, scope: !20171)
!20171 = distinct !DILexicalBlock(scope: !20088, file: !3, line: 2845, column: 6)
!20172 = !DILocation(line: 2845, column: 18, scope: !20171)
!20173 = !DILocation(line: 2845, column: 6, scope: !20088)
!20174 = !DILocation(line: 2847, column: 24, scope: !20171)
!20175 = !DILocation(line: 2847, column: 30, scope: !20171)
!20176 = !DILocation(line: 2847, column: 43, scope: !20171)
!20177 = !DILocation(line: 2846, column: 3, scope: !20171)
!20178 = !DILocation(line: 2848, column: 9, scope: !20088)
!20179 = !DILocation(line: 2848, column: 2, scope: !20088)
!20180 = distinct !DISubprogram(name: "tiocmset", scope: !3, file: !3, line: 2853, type: !4932, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20181 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !20182)
!20182 = distinct !DILocation(line: 2874, column: 2, scope: !20180)
!20183 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !20182)
!20184 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !20185)
!20185 = distinct !DILocation(line: 2872, column: 2, scope: !20186)
!20186 = distinct !DILexicalBlock(scope: !20187, file: !3, line: 2872, column: 2)
!20187 = distinct !DILexicalBlock(scope: !20188, file: !3, line: 2872, column: 2)
!20188 = distinct !DILexicalBlock(scope: !20189, file: !3, line: 2872, column: 2)
!20189 = distinct !DILexicalBlock(scope: !20190, file: !3, line: 2872, column: 2)
!20190 = distinct !DILexicalBlock(scope: !20180, file: !3, line: 2872, column: 2)
!20191 = !DILocalVariable(name: "tty", arg: 1, scope: !20180, file: !3, line: 2853, type: !3760)
!20192 = !DILocation(line: 2853, column: 40, scope: !20180)
!20193 = !DILocalVariable(name: "set", arg: 2, scope: !20180, file: !3, line: 2854, type: !7)
!20194 = !DILocation(line: 2854, column: 22, scope: !20180)
!20195 = !DILocalVariable(name: "clear", arg: 3, scope: !20180, file: !3, line: 2854, type: !7)
!20196 = !DILocation(line: 2854, column: 40, scope: !20180)
!20197 = !DILocalVariable(name: "info", scope: !20180, file: !3, line: 2856, type: !7524)
!20198 = !DILocation(line: 2856, column: 22, scope: !20180)
!20199 = !DILocation(line: 2856, column: 29, scope: !20180)
!20200 = !DILocation(line: 2856, column: 34, scope: !20180)
!20201 = !DILocalVariable(name: "flags", scope: !20180, file: !3, line: 2857, type: !312)
!20202 = !DILocation(line: 2857, column: 17, scope: !20180)
!20203 = !DILocation(line: 2859, column: 6, scope: !20204)
!20204 = distinct !DILexicalBlock(scope: !20180, file: !3, line: 2859, column: 6)
!20205 = !DILocation(line: 2859, column: 18, scope: !20204)
!20206 = !DILocation(line: 2859, column: 6, scope: !20180)
!20207 = !DILocation(line: 2861, column: 22, scope: !20204)
!20208 = !DILocation(line: 2861, column: 28, scope: !20204)
!20209 = !DILocation(line: 2861, column: 41, scope: !20204)
!20210 = !DILocation(line: 2861, column: 46, scope: !20204)
!20211 = !DILocation(line: 2860, column: 3, scope: !20204)
!20212 = !DILocation(line: 2863, column: 6, scope: !20213)
!20213 = distinct !DILexicalBlock(scope: !20180, file: !3, line: 2863, column: 6)
!20214 = !DILocation(line: 2863, column: 10, scope: !20213)
!20215 = !DILocation(line: 2863, column: 6, scope: !20180)
!20216 = !DILocation(line: 2864, column: 3, scope: !20213)
!20217 = !DILocation(line: 2864, column: 9, scope: !20213)
!20218 = !DILocation(line: 2864, column: 24, scope: !20213)
!20219 = !DILocation(line: 2865, column: 6, scope: !20220)
!20220 = distinct !DILexicalBlock(scope: !20180, file: !3, line: 2865, column: 6)
!20221 = !DILocation(line: 2865, column: 10, scope: !20220)
!20222 = !DILocation(line: 2865, column: 6, scope: !20180)
!20223 = !DILocation(line: 2866, column: 3, scope: !20220)
!20224 = !DILocation(line: 2866, column: 9, scope: !20220)
!20225 = !DILocation(line: 2866, column: 24, scope: !20220)
!20226 = !DILocation(line: 2867, column: 6, scope: !20227)
!20227 = distinct !DILexicalBlock(scope: !20180, file: !3, line: 2867, column: 6)
!20228 = !DILocation(line: 2867, column: 12, scope: !20227)
!20229 = !DILocation(line: 2867, column: 6, scope: !20180)
!20230 = !DILocation(line: 2868, column: 3, scope: !20227)
!20231 = !DILocation(line: 2868, column: 9, scope: !20227)
!20232 = !DILocation(line: 2868, column: 24, scope: !20227)
!20233 = !DILocation(line: 2869, column: 6, scope: !20234)
!20234 = distinct !DILexicalBlock(scope: !20180, file: !3, line: 2869, column: 6)
!20235 = !DILocation(line: 2869, column: 12, scope: !20234)
!20236 = !DILocation(line: 2869, column: 6, scope: !20180)
!20237 = !DILocation(line: 2870, column: 3, scope: !20234)
!20238 = !DILocation(line: 2870, column: 9, scope: !20234)
!20239 = !DILocation(line: 2870, column: 24, scope: !20234)
!20240 = !DILocation(line: 2872, column: 2, scope: !20180)
!20241 = !DILocation(line: 2872, column: 2, scope: !20190)
!20242 = !DILocalVariable(name: "__dummy", scope: !20243, file: !3, line: 2872, type: !312)
!20243 = distinct !DILexicalBlock(scope: !20189, file: !3, line: 2872, column: 2)
!20244 = !DILocation(line: 2872, column: 2, scope: !20243)
!20245 = !DILocalVariable(name: "__dummy2", scope: !20243, file: !3, line: 2872, type: !312)
!20246 = !DILocation(line: 2872, column: 2, scope: !20189)
!20247 = !DILocation(line: 2872, column: 2, scope: !20188)
!20248 = !DILocation(line: 2872, column: 2, scope: !20249)
!20249 = distinct !DILexicalBlock(scope: !20188, file: !3, line: 2872, column: 2)
!20250 = !DILocalVariable(name: "__dummy", scope: !20251, file: !3, line: 2872, type: !312)
!20251 = distinct !DILexicalBlock(scope: !20252, file: !3, line: 2872, column: 2)
!20252 = distinct !DILexicalBlock(scope: !20249, file: !3, line: 2872, column: 2)
!20253 = !DILocation(line: 2872, column: 2, scope: !20251)
!20254 = !DILocalVariable(name: "__dummy2", scope: !20251, file: !3, line: 2872, type: !312)
!20255 = !DILocation(line: 2872, column: 2, scope: !20252)
!20256 = !DILocation(line: 2872, column: 2, scope: !20187)
!20257 = !{i32 -2139400694}
!20258 = !DILocation(line: 2872, column: 2, scope: !20186)
!20259 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !20185)
!20260 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !20185)
!20261 = !DILocation(line: 2873, column: 26, scope: !20180)
!20262 = !DILocation(line: 2873, column: 3, scope: !20180)
!20263 = !DILocation(line: 2874, column: 26, scope: !20180)
!20264 = !DILocation(line: 2874, column: 32, scope: !20180)
!20265 = !DILocation(line: 2874, column: 45, scope: !20180)
!20266 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !20182)
!20267 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !20182)
!20268 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !20182)
!20269 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !20182)
!20270 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !20182)
!20271 = !DILocation(line: 2876, column: 2, scope: !20180)
!20272 = distinct !DISubprogram(name: "msgl_get_icount", scope: !3, file: !3, line: 2913, type: !4961, scopeLine: 2916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20273 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !20274)
!20274 = distinct !DILocation(line: 2923, column: 2, scope: !20272)
!20275 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !20274)
!20276 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !20277)
!20277 = distinct !DILocation(line: 2921, column: 2, scope: !20278)
!20278 = distinct !DILexicalBlock(scope: !20279, file: !3, line: 2921, column: 2)
!20279 = distinct !DILexicalBlock(scope: !20280, file: !3, line: 2921, column: 2)
!20280 = distinct !DILexicalBlock(scope: !20281, file: !3, line: 2921, column: 2)
!20281 = distinct !DILexicalBlock(scope: !20282, file: !3, line: 2921, column: 2)
!20282 = distinct !DILexicalBlock(scope: !20272, file: !3, line: 2921, column: 2)
!20283 = !DILocalVariable(name: "tty", arg: 1, scope: !20272, file: !3, line: 2913, type: !3760)
!20284 = !DILocation(line: 2913, column: 47, scope: !20272)
!20285 = !DILocalVariable(name: "icount", arg: 2, scope: !20272, file: !3, line: 2914, type: !4963)
!20286 = !DILocation(line: 2914, column: 36, scope: !20272)
!20287 = !DILocalVariable(name: "info", scope: !20272, file: !3, line: 2917, type: !7524)
!20288 = !DILocation(line: 2917, column: 23, scope: !20272)
!20289 = !DILocation(line: 2917, column: 30, scope: !20272)
!20290 = !DILocation(line: 2917, column: 35, scope: !20272)
!20291 = !DILocalVariable(name: "cnow", scope: !20272, file: !3, line: 2918, type: !7532)
!20292 = !DILocation(line: 2918, column: 21, scope: !20272)
!20293 = !DILocalVariable(name: "flags", scope: !20272, file: !3, line: 2919, type: !312)
!20294 = !DILocation(line: 2919, column: 16, scope: !20272)
!20295 = !DILocation(line: 2921, column: 2, scope: !20272)
!20296 = !DILocation(line: 2921, column: 2, scope: !20282)
!20297 = !DILocalVariable(name: "__dummy", scope: !20298, file: !3, line: 2921, type: !312)
!20298 = distinct !DILexicalBlock(scope: !20281, file: !3, line: 2921, column: 2)
!20299 = !DILocation(line: 2921, column: 2, scope: !20298)
!20300 = !DILocalVariable(name: "__dummy2", scope: !20298, file: !3, line: 2921, type: !312)
!20301 = !DILocation(line: 2921, column: 2, scope: !20281)
!20302 = !DILocation(line: 2921, column: 2, scope: !20280)
!20303 = !DILocation(line: 2921, column: 2, scope: !20304)
!20304 = distinct !DILexicalBlock(scope: !20280, file: !3, line: 2921, column: 2)
!20305 = !DILocalVariable(name: "__dummy", scope: !20306, file: !3, line: 2921, type: !312)
!20306 = distinct !DILexicalBlock(scope: !20307, file: !3, line: 2921, column: 2)
!20307 = distinct !DILexicalBlock(scope: !20304, file: !3, line: 2921, column: 2)
!20308 = !DILocation(line: 2921, column: 2, scope: !20306)
!20309 = !DILocalVariable(name: "__dummy2", scope: !20306, file: !3, line: 2921, type: !312)
!20310 = !DILocation(line: 2921, column: 2, scope: !20307)
!20311 = !DILocation(line: 2921, column: 2, scope: !20279)
!20312 = !{i32 -2139398475}
!20313 = !DILocation(line: 2921, column: 2, scope: !20278)
!20314 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !20277)
!20315 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !20277)
!20316 = !DILocation(line: 2922, column: 9, scope: !20272)
!20317 = !DILocation(line: 2922, column: 15, scope: !20272)
!20318 = !DILocation(line: 2923, column: 26, scope: !20272)
!20319 = !DILocation(line: 2923, column: 32, scope: !20272)
!20320 = !DILocation(line: 2923, column: 45, scope: !20272)
!20321 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !20274)
!20322 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !20274)
!20323 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !20274)
!20324 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !20274)
!20325 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !20274)
!20326 = !DILocation(line: 2925, column: 21, scope: !20272)
!20327 = !DILocation(line: 2925, column: 2, scope: !20272)
!20328 = !DILocation(line: 2925, column: 10, scope: !20272)
!20329 = !DILocation(line: 2925, column: 14, scope: !20272)
!20330 = !DILocation(line: 2926, column: 21, scope: !20272)
!20331 = !DILocation(line: 2926, column: 2, scope: !20272)
!20332 = !DILocation(line: 2926, column: 10, scope: !20272)
!20333 = !DILocation(line: 2926, column: 14, scope: !20272)
!20334 = !DILocation(line: 2927, column: 21, scope: !20272)
!20335 = !DILocation(line: 2927, column: 2, scope: !20272)
!20336 = !DILocation(line: 2927, column: 10, scope: !20272)
!20337 = !DILocation(line: 2927, column: 14, scope: !20272)
!20338 = !DILocation(line: 2928, column: 21, scope: !20272)
!20339 = !DILocation(line: 2928, column: 2, scope: !20272)
!20340 = !DILocation(line: 2928, column: 10, scope: !20272)
!20341 = !DILocation(line: 2928, column: 14, scope: !20272)
!20342 = !DILocation(line: 2929, column: 20, scope: !20272)
!20343 = !DILocation(line: 2929, column: 2, scope: !20272)
!20344 = !DILocation(line: 2929, column: 10, scope: !20272)
!20345 = !DILocation(line: 2929, column: 13, scope: !20272)
!20346 = !DILocation(line: 2930, column: 20, scope: !20272)
!20347 = !DILocation(line: 2930, column: 2, scope: !20272)
!20348 = !DILocation(line: 2930, column: 10, scope: !20272)
!20349 = !DILocation(line: 2930, column: 13, scope: !20272)
!20350 = !DILocation(line: 2931, column: 23, scope: !20272)
!20351 = !DILocation(line: 2931, column: 2, scope: !20272)
!20352 = !DILocation(line: 2931, column: 10, scope: !20272)
!20353 = !DILocation(line: 2931, column: 16, scope: !20272)
!20354 = !DILocation(line: 2932, column: 25, scope: !20272)
!20355 = !DILocation(line: 2932, column: 2, scope: !20272)
!20356 = !DILocation(line: 2932, column: 10, scope: !20272)
!20357 = !DILocation(line: 2932, column: 18, scope: !20272)
!20358 = !DILocation(line: 2933, column: 24, scope: !20272)
!20359 = !DILocation(line: 2933, column: 2, scope: !20272)
!20360 = !DILocation(line: 2933, column: 10, scope: !20272)
!20361 = !DILocation(line: 2933, column: 17, scope: !20272)
!20362 = !DILocation(line: 2934, column: 21, scope: !20272)
!20363 = !DILocation(line: 2934, column: 2, scope: !20272)
!20364 = !DILocation(line: 2934, column: 10, scope: !20272)
!20365 = !DILocation(line: 2934, column: 14, scope: !20272)
!20366 = !DILocation(line: 2935, column: 29, scope: !20272)
!20367 = !DILocation(line: 2935, column: 2, scope: !20272)
!20368 = !DILocation(line: 2935, column: 10, scope: !20272)
!20369 = !DILocation(line: 2935, column: 22, scope: !20272)
!20370 = !DILocation(line: 2936, column: 2, scope: !20272)
!20371 = distinct !DISubprogram(name: "mgsl_proc_show", scope: !3, file: !3, line: 3515, type: !1705, scopeLine: 3516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20372 = !DILocalVariable(name: "m", arg: 1, scope: !20371, file: !3, line: 3515, type: !1653)
!20373 = !DILocation(line: 3515, column: 44, scope: !20371)
!20374 = !DILocalVariable(name: "v", arg: 2, scope: !20371, file: !3, line: 3515, type: !591)
!20375 = !DILocation(line: 3515, column: 53, scope: !20371)
!20376 = !DILocalVariable(name: "info", scope: !20371, file: !3, line: 3517, type: !7524)
!20377 = !DILocation(line: 3517, column: 22, scope: !20371)
!20378 = !DILocation(line: 3519, column: 13, scope: !20371)
!20379 = !DILocation(line: 3519, column: 40, scope: !20371)
!20380 = !DILocation(line: 3519, column: 2, scope: !20371)
!20381 = !DILocation(line: 3521, column: 9, scope: !20371)
!20382 = !DILocation(line: 3521, column: 7, scope: !20371)
!20383 = !DILocation(line: 3522, column: 2, scope: !20371)
!20384 = !DILocation(line: 3522, column: 9, scope: !20371)
!20385 = !DILocation(line: 3523, column: 13, scope: !20386)
!20386 = distinct !DILexicalBlock(scope: !20371, file: !3, line: 3522, column: 16)
!20387 = !DILocation(line: 3523, column: 16, scope: !20386)
!20388 = !DILocation(line: 3523, column: 3, scope: !20386)
!20389 = !DILocation(line: 3524, column: 10, scope: !20386)
!20390 = !DILocation(line: 3524, column: 16, scope: !20386)
!20391 = !DILocation(line: 3524, column: 8, scope: !20386)
!20392 = distinct !{!20392, !20383, !20393}
!20393 = !DILocation(line: 3525, column: 2, scope: !20371)
!20394 = !DILocation(line: 3526, column: 2, scope: !20371)
!20395 = distinct !DISubprogram(name: "mgsl_paranoia_check", scope: !3, file: !3, line: 921, type: !20396, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20396 = !DISubroutineType(types: !20397)
!20397 = !{!32, !7524, !1038, !292}
!20398 = !DILocalVariable(name: "info", arg: 1, scope: !20395, file: !3, line: 921, type: !7524)
!20399 = !DILocation(line: 921, column: 59, scope: !20395)
!20400 = !DILocalVariable(name: "name", arg: 2, scope: !20395, file: !3, line: 922, type: !1038)
!20401 = !DILocation(line: 922, column: 12, scope: !20395)
!20402 = !DILocalVariable(name: "routine", arg: 3, scope: !20395, file: !3, line: 922, type: !292)
!20403 = !DILocation(line: 922, column: 30, scope: !20395)
!20404 = !DILocation(line: 939, column: 7, scope: !20405)
!20405 = distinct !DILexicalBlock(scope: !20395, file: !3, line: 939, column: 6)
!20406 = !DILocation(line: 939, column: 6, scope: !20395)
!20407 = !DILocation(line: 940, column: 3, scope: !20405)
!20408 = !DILocation(line: 942, column: 2, scope: !20395)
!20409 = !DILocation(line: 943, column: 1, scope: !20395)
!20410 = distinct !DISubprogram(name: "block_til_ready", scope: !3, file: !3, line: 3246, type: !20411, scopeLine: 3248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20411 = !DISubroutineType(types: !20412)
!20412 = !{!32, !3760, !1315, !7524}
!20413 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !20414)
!20414 = distinct !DILocation(line: 3318, column: 2, scope: !20415)
!20415 = distinct !DILexicalBlock(scope: !20416, file: !3, line: 3318, column: 2)
!20416 = distinct !DILexicalBlock(scope: !20417, file: !3, line: 3318, column: 2)
!20417 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 3318, column: 2)
!20418 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !20414)
!20419 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !20414)
!20420 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !20421)
!20421 = distinct !DILocation(line: 3304, column: 22, scope: !20422)
!20422 = distinct !DILexicalBlock(scope: !20423, file: !3, line: 3304, column: 7)
!20423 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 3288, column: 12)
!20424 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !20421)
!20425 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !20421)
!20426 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !20427)
!20427 = distinct !DILocation(line: 3292, column: 3, scope: !20428)
!20428 = distinct !DILexicalBlock(scope: !20429, file: !3, line: 3292, column: 3)
!20429 = distinct !DILexicalBlock(scope: !20430, file: !3, line: 3292, column: 3)
!20430 = distinct !DILexicalBlock(scope: !20423, file: !3, line: 3292, column: 3)
!20431 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !20427)
!20432 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !20427)
!20433 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !20434)
!20434 = distinct !DILocation(line: 3285, column: 2, scope: !20410)
!20435 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !20434)
!20436 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !20437)
!20437 = distinct !DILocation(line: 3283, column: 2, scope: !20438)
!20438 = distinct !DILexicalBlock(scope: !20439, file: !3, line: 3283, column: 2)
!20439 = distinct !DILexicalBlock(scope: !20440, file: !3, line: 3283, column: 2)
!20440 = distinct !DILexicalBlock(scope: !20441, file: !3, line: 3283, column: 2)
!20441 = distinct !DILexicalBlock(scope: !20442, file: !3, line: 3283, column: 2)
!20442 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 3283, column: 2)
!20443 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !20444)
!20444 = distinct !DILocation(line: 3249, column: 2, scope: !20410)
!20445 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !20444)
!20446 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !20444)
!20447 = !DILocalVariable(name: "tty", arg: 1, scope: !20410, file: !3, line: 3246, type: !3760)
!20448 = !DILocation(line: 3246, column: 47, scope: !20410)
!20449 = !DILocalVariable(name: "filp", arg: 2, scope: !20410, file: !3, line: 3246, type: !1315)
!20450 = !DILocation(line: 3246, column: 66, scope: !20410)
!20451 = !DILocalVariable(name: "info", arg: 3, scope: !20410, file: !3, line: 3247, type: !7524)
!20452 = !DILocation(line: 3247, column: 27, scope: !20410)
!20453 = !DILocalVariable(name: "wait", scope: !20410, file: !3, line: 3249, type: !20454)
!20454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1890, line: 29, size: 320, elements: !20455)
!20455 = !{!20456, !20457, !20458, !20464}
!20456 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !20454, file: !1890, line: 30, baseType: !7, size: 32)
!20457 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !20454, file: !1890, line: 31, baseType: !591, size: 64, offset: 64)
!20458 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !20454, file: !1890, line: 32, baseType: !20459, size: 64, offset: 128)
!20459 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1890, line: 16, baseType: !20460)
!20460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20461, size: 64)
!20461 = !DISubroutineType(types: !20462)
!20462 = !{!32, !20463, !7, !32, !591}
!20463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20454, size: 64)
!20464 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !20454, file: !1890, line: 33, baseType: !284, size: 128, offset: 192)
!20465 = !DILocation(line: 3249, column: 2, scope: !20410)
!20466 = !DILocalVariable(name: "retval", scope: !20410, file: !3, line: 3250, type: !32)
!20467 = !DILocation(line: 3250, column: 7, scope: !20410)
!20468 = !DILocalVariable(name: "do_clocal", scope: !20410, file: !3, line: 3251, type: !771)
!20469 = !DILocation(line: 3251, column: 8, scope: !20410)
!20470 = !DILocalVariable(name: "flags", scope: !20410, file: !3, line: 3252, type: !312)
!20471 = !DILocation(line: 3252, column: 16, scope: !20410)
!20472 = !DILocalVariable(name: "dcd", scope: !20410, file: !3, line: 3253, type: !32)
!20473 = !DILocation(line: 3253, column: 7, scope: !20410)
!20474 = !DILocalVariable(name: "port", scope: !20410, file: !3, line: 3254, type: !4766)
!20475 = !DILocation(line: 3254, column: 19, scope: !20410)
!20476 = !DILocation(line: 3254, column: 27, scope: !20410)
!20477 = !DILocation(line: 3254, column: 33, scope: !20410)
!20478 = !DILocation(line: 3256, column: 6, scope: !20479)
!20479 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 3256, column: 6)
!20480 = !DILocation(line: 3256, column: 18, scope: !20479)
!20481 = !DILocation(line: 3256, column: 6, scope: !20410)
!20482 = !DILocation(line: 3258, column: 24, scope: !20479)
!20483 = !DILocation(line: 3258, column: 29, scope: !20479)
!20484 = !DILocation(line: 3258, column: 37, scope: !20479)
!20485 = !DILocation(line: 3257, column: 3, scope: !20479)
!20486 = !DILocation(line: 3260, column: 6, scope: !20487)
!20487 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 3260, column: 6)
!20488 = !DILocation(line: 3260, column: 12, scope: !20487)
!20489 = !DILocation(line: 3260, column: 20, scope: !20487)
!20490 = !DILocation(line: 3260, column: 33, scope: !20487)
!20491 = !DILocation(line: 3260, column: 49, scope: !20487)
!20492 = !DILocation(line: 3260, column: 36, scope: !20487)
!20493 = !DILocation(line: 3260, column: 6, scope: !20410)
!20494 = !DILocation(line: 3262, column: 23, scope: !20495)
!20495 = distinct !DILexicalBlock(scope: !20487, file: !3, line: 3260, column: 55)
!20496 = !DILocation(line: 3262, column: 3, scope: !20495)
!20497 = !DILocation(line: 3263, column: 3, scope: !20495)
!20498 = !DILocation(line: 3266, column: 6, scope: !20499)
!20499 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 3266, column: 6)
!20500 = !DILocation(line: 3266, column: 6, scope: !20410)
!20501 = !DILocation(line: 3267, column: 13, scope: !20499)
!20502 = !DILocation(line: 3267, column: 3, scope: !20499)
!20503 = !DILocation(line: 3276, column: 9, scope: !20410)
!20504 = !DILocation(line: 3277, column: 18, scope: !20410)
!20505 = !DILocation(line: 3277, column: 24, scope: !20410)
!20506 = !DILocation(line: 3277, column: 2, scope: !20410)
!20507 = !DILocation(line: 3279, column: 6, scope: !20508)
!20508 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 3279, column: 6)
!20509 = !DILocation(line: 3279, column: 18, scope: !20508)
!20510 = !DILocation(line: 3279, column: 6, scope: !20410)
!20511 = !DILocation(line: 3281, column: 24, scope: !20508)
!20512 = !DILocation(line: 3281, column: 29, scope: !20508)
!20513 = !DILocation(line: 3281, column: 37, scope: !20508)
!20514 = !DILocation(line: 3281, column: 43, scope: !20508)
!20515 = !DILocation(line: 3281, column: 49, scope: !20508)
!20516 = !DILocation(line: 3280, column: 3, scope: !20508)
!20517 = !DILocation(line: 3283, column: 2, scope: !20410)
!20518 = !DILocation(line: 3283, column: 2, scope: !20442)
!20519 = !DILocalVariable(name: "__dummy", scope: !20520, file: !3, line: 3283, type: !312)
!20520 = distinct !DILexicalBlock(scope: !20441, file: !3, line: 3283, column: 2)
!20521 = !DILocation(line: 3283, column: 2, scope: !20520)
!20522 = !DILocalVariable(name: "__dummy2", scope: !20520, file: !3, line: 3283, type: !312)
!20523 = !DILocation(line: 3283, column: 2, scope: !20441)
!20524 = !DILocation(line: 3283, column: 2, scope: !20440)
!20525 = !DILocation(line: 3283, column: 2, scope: !20526)
!20526 = distinct !DILexicalBlock(scope: !20440, file: !3, line: 3283, column: 2)
!20527 = !DILocalVariable(name: "__dummy", scope: !20528, file: !3, line: 3283, type: !312)
!20528 = distinct !DILexicalBlock(scope: !20529, file: !3, line: 3283, column: 2)
!20529 = distinct !DILexicalBlock(scope: !20526, file: !3, line: 3283, column: 2)
!20530 = !DILocation(line: 3283, column: 2, scope: !20528)
!20531 = !DILocalVariable(name: "__dummy2", scope: !20528, file: !3, line: 3283, type: !312)
!20532 = !DILocation(line: 3283, column: 2, scope: !20529)
!20533 = !DILocation(line: 3283, column: 2, scope: !20439)
!20534 = !{i32 -2139380965}
!20535 = !DILocation(line: 3283, column: 2, scope: !20438)
!20536 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !20437)
!20537 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !20437)
!20538 = !DILocation(line: 3284, column: 2, scope: !20410)
!20539 = !DILocation(line: 3284, column: 8, scope: !20410)
!20540 = !DILocation(line: 3284, column: 13, scope: !20410)
!20541 = !DILocation(line: 3285, column: 26, scope: !20410)
!20542 = !DILocation(line: 3285, column: 32, scope: !20410)
!20543 = !DILocation(line: 3285, column: 46, scope: !20410)
!20544 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !20434)
!20545 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !20434)
!20546 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !20434)
!20547 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !20434)
!20548 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !20434)
!20549 = !DILocation(line: 3286, column: 2, scope: !20410)
!20550 = !DILocation(line: 3286, column: 8, scope: !20410)
!20551 = !DILocation(line: 3286, column: 20, scope: !20410)
!20552 = !DILocation(line: 3288, column: 2, scope: !20410)
!20553 = !DILocation(line: 3289, column: 7, scope: !20554)
!20554 = distinct !DILexicalBlock(scope: !20423, file: !3, line: 3289, column: 7)
!20555 = !DILocation(line: 3289, column: 19, scope: !20554)
!20556 = !DILocation(line: 3289, column: 43, scope: !20554)
!20557 = !DILocation(line: 3289, column: 22, scope: !20554)
!20558 = !DILocation(line: 3289, column: 7, scope: !20423)
!20559 = !DILocation(line: 3290, column: 27, scope: !20554)
!20560 = !DILocation(line: 3290, column: 4, scope: !20554)
!20561 = !DILocation(line: 3292, column: 3, scope: !20423)
!20562 = !DILocation(line: 3292, column: 3, scope: !20430)
!20563 = !DILocation(line: 3292, column: 3, scope: !20429)
!20564 = !DILocation(line: 3292, column: 3, scope: !20565)
!20565 = distinct !DILexicalBlock(scope: !20429, file: !3, line: 3292, column: 3)
!20566 = !DILocation(line: 3292, column: 3, scope: !20428)
!20567 = !{i32 -2139379097}
!20568 = !DILocation(line: 3294, column: 21, scope: !20569)
!20569 = distinct !DILexicalBlock(scope: !20423, file: !3, line: 3294, column: 7)
!20570 = !DILocation(line: 3294, column: 7, scope: !20569)
!20571 = !DILocation(line: 3294, column: 27, scope: !20569)
!20572 = !DILocation(line: 3294, column: 52, scope: !20569)
!20573 = !DILocation(line: 3294, column: 31, scope: !20569)
!20574 = !DILocation(line: 3294, column: 7, scope: !20423)
!20575 = !DILocation(line: 3295, column: 14, scope: !20576)
!20576 = distinct !DILexicalBlock(scope: !20569, file: !3, line: 3294, column: 59)
!20577 = !DILocation(line: 3295, column: 20, scope: !20576)
!20578 = !DILocation(line: 3295, column: 26, scope: !20576)
!20579 = !DILocation(line: 3295, column: 13, scope: !20576)
!20580 = !DILocation(line: 3295, column: 11, scope: !20576)
!20581 = !DILocation(line: 3297, column: 4, scope: !20576)
!20582 = !DILocation(line: 3300, column: 34, scope: !20423)
!20583 = !DILocation(line: 3300, column: 40, scope: !20423)
!20584 = !DILocation(line: 3300, column: 9, scope: !20423)
!20585 = !DILocation(line: 3300, column: 7, scope: !20423)
!20586 = !DILocation(line: 3301, column: 7, scope: !20587)
!20587 = distinct !DILexicalBlock(scope: !20423, file: !3, line: 3301, column: 7)
!20588 = !DILocation(line: 3301, column: 17, scope: !20587)
!20589 = !DILocation(line: 3301, column: 20, scope: !20587)
!20590 = !DILocation(line: 3301, column: 7, scope: !20423)
!20591 = !DILocation(line: 3302, column: 4, scope: !20587)
!20592 = !DILocation(line: 3304, column: 7, scope: !20422)
!20593 = !DILocation(line: 3304, column: 7, scope: !20423)
!20594 = !DILocation(line: 3305, column: 11, scope: !20595)
!20595 = distinct !DILexicalBlock(scope: !20422, file: !3, line: 3304, column: 32)
!20596 = !DILocation(line: 3306, column: 4, scope: !20595)
!20597 = !DILocation(line: 3309, column: 7, scope: !20598)
!20598 = distinct !DILexicalBlock(scope: !20423, file: !3, line: 3309, column: 7)
!20599 = !DILocation(line: 3309, column: 19, scope: !20598)
!20600 = !DILocation(line: 3309, column: 7, scope: !20423)
!20601 = !DILocation(line: 3311, column: 25, scope: !20598)
!20602 = !DILocation(line: 3311, column: 30, scope: !20598)
!20603 = !DILocation(line: 3311, column: 38, scope: !20598)
!20604 = !DILocation(line: 3311, column: 44, scope: !20598)
!20605 = !DILocation(line: 3311, column: 50, scope: !20598)
!20606 = !DILocation(line: 3310, column: 4, scope: !20598)
!20607 = !DILocation(line: 3313, column: 14, scope: !20423)
!20608 = !DILocation(line: 3313, column: 3, scope: !20423)
!20609 = !DILocation(line: 3314, column: 3, scope: !20423)
!20610 = !DILocation(line: 3315, column: 12, scope: !20423)
!20611 = !DILocation(line: 3315, column: 3, scope: !20423)
!20612 = distinct !{!20612, !20552, !20613}
!20613 = !DILocation(line: 3316, column: 2, scope: !20410)
!20614 = !DILocation(line: 3318, column: 2, scope: !20410)
!20615 = !DILocation(line: 3318, column: 2, scope: !20417)
!20616 = !DILocation(line: 3318, column: 2, scope: !20416)
!20617 = !DILocation(line: 3318, column: 2, scope: !20618)
!20618 = distinct !DILexicalBlock(scope: !20416, file: !3, line: 3318, column: 2)
!20619 = !DILocation(line: 3318, column: 2, scope: !20415)
!20620 = !{i32 -2139377357}
!20621 = !DILocation(line: 3319, column: 21, scope: !20410)
!20622 = !DILocation(line: 3319, column: 27, scope: !20410)
!20623 = !DILocation(line: 3319, column: 2, scope: !20410)
!20624 = !DILocation(line: 3322, column: 21, scope: !20625)
!20625 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 3322, column: 6)
!20626 = !DILocation(line: 3322, column: 7, scope: !20625)
!20627 = !DILocation(line: 3322, column: 6, scope: !20410)
!20628 = !DILocation(line: 3323, column: 3, scope: !20625)
!20629 = !DILocation(line: 3323, column: 9, scope: !20625)
!20630 = !DILocation(line: 3323, column: 14, scope: !20625)
!20631 = !DILocation(line: 3324, column: 2, scope: !20410)
!20632 = !DILocation(line: 3324, column: 8, scope: !20410)
!20633 = !DILocation(line: 3324, column: 20, scope: !20410)
!20634 = !DILocation(line: 3326, column: 6, scope: !20635)
!20635 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 3326, column: 6)
!20636 = !DILocation(line: 3326, column: 18, scope: !20635)
!20637 = !DILocation(line: 3326, column: 6, scope: !20410)
!20638 = !DILocation(line: 3328, column: 24, scope: !20635)
!20639 = !DILocation(line: 3328, column: 29, scope: !20635)
!20640 = !DILocation(line: 3328, column: 37, scope: !20635)
!20641 = !DILocation(line: 3328, column: 43, scope: !20635)
!20642 = !DILocation(line: 3328, column: 49, scope: !20635)
!20643 = !DILocation(line: 3327, column: 3, scope: !20635)
!20644 = !DILocation(line: 3330, column: 7, scope: !20645)
!20645 = distinct !DILexicalBlock(scope: !20410, file: !3, line: 3330, column: 6)
!20646 = !DILocation(line: 3330, column: 6, scope: !20410)
!20647 = !DILocation(line: 3331, column: 23, scope: !20645)
!20648 = !DILocation(line: 3331, column: 3, scope: !20645)
!20649 = !DILocation(line: 3333, column: 9, scope: !20410)
!20650 = !DILocation(line: 3333, column: 2, scope: !20410)
!20651 = !DILocation(line: 3335, column: 1, scope: !20410)
!20652 = distinct !DISubprogram(name: "tty_io_error", scope: !3762, file: !3762, line: 399, type: !20653, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20653 = !DISubroutineType(types: !20654)
!20654 = !{!771, !3760}
!20655 = !DILocalVariable(name: "tty", arg: 1, scope: !20652, file: !3762, line: 399, type: !3760)
!20656 = !DILocation(line: 399, column: 52, scope: !20652)
!20657 = !DILocation(line: 401, column: 33, scope: !20652)
!20658 = !DILocation(line: 401, column: 38, scope: !20652)
!20659 = !DILocation(line: 401, column: 9, scope: !20652)
!20660 = !DILocation(line: 401, column: 2, scope: !20652)
!20661 = distinct !DISubprogram(name: "tty_port_set_active", scope: !3762, file: !3762, line: 630, type: !12887, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20662 = !DILocalVariable(name: "port", arg: 1, scope: !20661, file: !3762, line: 630, type: !4766)
!20663 = !DILocation(line: 630, column: 57, scope: !20661)
!20664 = !DILocalVariable(name: "val", arg: 2, scope: !20661, file: !3762, line: 630, type: !771)
!20665 = !DILocation(line: 630, column: 68, scope: !20661)
!20666 = !DILocation(line: 632, column: 6, scope: !20667)
!20667 = distinct !DILexicalBlock(scope: !20661, file: !3762, line: 632, column: 6)
!20668 = !DILocation(line: 632, column: 6, scope: !20661)
!20669 = !DILocation(line: 633, column: 29, scope: !20667)
!20670 = !DILocation(line: 633, column: 35, scope: !20667)
!20671 = !DILocation(line: 633, column: 3, scope: !20667)
!20672 = !DILocation(line: 635, column: 31, scope: !20667)
!20673 = !DILocation(line: 635, column: 37, scope: !20667)
!20674 = !DILocation(line: 635, column: 3, scope: !20667)
!20675 = !DILocation(line: 636, column: 1, scope: !20661)
!20676 = distinct !DISubprogram(name: "signal_pending", scope: !3708, file: !3708, line: 356, type: !20677, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20677 = !DISubroutineType(types: !20678)
!20678 = !{!32, !2326}
!20679 = !DILocalVariable(name: "p", arg: 1, scope: !20676, file: !3708, line: 356, type: !2326)
!20680 = !DILocation(line: 356, column: 54, scope: !20676)
!20681 = !DILocation(line: 358, column: 9, scope: !20676)
!20682 = !DILocation(line: 358, column: 2, scope: !20676)
!20683 = distinct !DISubprogram(name: "test_tsk_thread_flag", scope: !2328, file: !2328, line: 1828, type: !20684, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20684 = !DISubroutineType(types: !20685)
!20685 = !{!32, !2326, !32}
!20686 = !DILocalVariable(name: "tsk", arg: 1, scope: !20683, file: !2328, line: 1828, type: !2326)
!20687 = !DILocation(line: 1828, column: 60, scope: !20683)
!20688 = !DILocalVariable(name: "flag", arg: 2, scope: !20683, file: !2328, line: 1828, type: !32)
!20689 = !DILocation(line: 1828, column: 69, scope: !20683)
!20690 = !DILocation(line: 1830, column: 46, scope: !20683)
!20691 = !DILocation(line: 1830, column: 29, scope: !20683)
!20692 = !DILocation(line: 1830, column: 52, scope: !20683)
!20693 = !DILocation(line: 1830, column: 9, scope: !20683)
!20694 = !DILocation(line: 1830, column: 2, scope: !20683)
!20695 = distinct !DISubprogram(name: "test_ti_thread_flag", scope: !11665, file: !11665, line: 82, type: !20696, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20696 = !DISubroutineType(types: !20697)
!20697 = !{!32, !20698, !32}
!20698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!20699 = !DILocalVariable(name: "ti", arg: 1, scope: !20695, file: !11665, line: 82, type: !20698)
!20700 = !DILocation(line: 82, column: 59, scope: !20695)
!20701 = !DILocalVariable(name: "flag", arg: 2, scope: !20695, file: !11665, line: 82, type: !32)
!20702 = !DILocation(line: 82, column: 67, scope: !20695)
!20703 = !DILocation(line: 84, column: 18, scope: !20695)
!20704 = !DILocation(line: 84, column: 42, scope: !20695)
!20705 = !DILocation(line: 84, column: 46, scope: !20695)
!20706 = !DILocation(line: 84, column: 9, scope: !20695)
!20707 = !DILocation(line: 84, column: 2, scope: !20695)
!20708 = distinct !DISubprogram(name: "task_thread_info", scope: !2328, file: !2328, line: 1729, type: !20709, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20709 = !DISubroutineType(types: !20710)
!20710 = !{!20698, !2326}
!20711 = !DILocalVariable(name: "task", arg: 1, scope: !20708, file: !2328, line: 1729, type: !2326)
!20712 = !DILocation(line: 1729, column: 72, scope: !20708)
!20713 = !DILocation(line: 1731, column: 10, scope: !20708)
!20714 = !DILocation(line: 1731, column: 16, scope: !20708)
!20715 = !DILocation(line: 1731, column: 2, scope: !20708)
!20716 = distinct !DISubprogram(name: "save_tx_buffer_request", scope: !3, file: !3, line: 3944, type: !20717, scopeLine: 3945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20717 = !DISubroutineType(types: !20718)
!20718 = !{!32, !7524, !292, !7}
!20719 = !DILocalVariable(name: "info", arg: 1, scope: !20716, file: !3, line: 3944, type: !7524)
!20720 = !DILocation(line: 3944, column: 55, scope: !20716)
!20721 = !DILocalVariable(name: "Buffer", arg: 2, scope: !20716, file: !3, line: 3944, type: !292)
!20722 = !DILocation(line: 3944, column: 72, scope: !20716)
!20723 = !DILocalVariable(name: "BufferSize", arg: 3, scope: !20716, file: !3, line: 3944, type: !7)
!20724 = !DILocation(line: 3944, column: 93, scope: !20716)
!20725 = !DILocalVariable(name: "ptx", scope: !20716, file: !3, line: 3946, type: !14859)
!20726 = !DILocation(line: 3946, column: 28, scope: !20716)
!20727 = !DILocation(line: 3948, column: 7, scope: !20728)
!20728 = distinct !DILexicalBlock(scope: !20716, file: !3, line: 3948, column: 7)
!20729 = !DILocation(line: 3948, column: 13, scope: !20728)
!20730 = !DILocation(line: 3948, column: 33, scope: !20728)
!20731 = !DILocation(line: 3948, column: 39, scope: !20728)
!20732 = !DILocation(line: 3948, column: 30, scope: !20728)
!20733 = !DILocation(line: 3948, column: 7, scope: !20716)
!20734 = !DILocation(line: 3949, column: 3, scope: !20735)
!20735 = distinct !DILexicalBlock(scope: !20728, file: !3, line: 3948, column: 64)
!20736 = !DILocation(line: 3952, column: 9, scope: !20716)
!20737 = !DILocation(line: 3952, column: 15, scope: !20716)
!20738 = !DILocation(line: 3952, column: 34, scope: !20716)
!20739 = !DILocation(line: 3952, column: 40, scope: !20716)
!20740 = !DILocation(line: 3952, column: 6, scope: !20716)
!20741 = !DILocation(line: 3953, column: 21, scope: !20716)
!20742 = !DILocation(line: 3953, column: 2, scope: !20716)
!20743 = !DILocation(line: 3953, column: 7, scope: !20716)
!20744 = !DILocation(line: 3953, column: 19, scope: !20716)
!20745 = !DILocation(line: 3954, column: 10, scope: !20716)
!20746 = !DILocation(line: 3954, column: 15, scope: !20716)
!20747 = !DILocation(line: 3954, column: 23, scope: !20716)
!20748 = !DILocation(line: 3954, column: 31, scope: !20716)
!20749 = !DILocation(line: 3954, column: 2, scope: !20716)
!20750 = !DILocation(line: 3956, column: 4, scope: !20716)
!20751 = !DILocation(line: 3956, column: 10, scope: !20716)
!20752 = !DILocation(line: 3956, column: 2, scope: !20716)
!20753 = !DILocation(line: 3957, column: 9, scope: !20754)
!20754 = distinct !DILexicalBlock(scope: !20716, file: !3, line: 3957, column: 7)
!20755 = !DILocation(line: 3957, column: 15, scope: !20754)
!20756 = !DILocation(line: 3957, column: 7, scope: !20754)
!20757 = !DILocation(line: 3957, column: 39, scope: !20754)
!20758 = !DILocation(line: 3957, column: 45, scope: !20754)
!20759 = !DILocation(line: 3957, column: 36, scope: !20754)
!20760 = !DILocation(line: 3957, column: 7, scope: !20716)
!20761 = !DILocation(line: 3958, column: 3, scope: !20754)
!20762 = !DILocation(line: 3958, column: 9, scope: !20754)
!20763 = !DILocation(line: 3958, column: 29, scope: !20754)
!20764 = !DILocation(line: 3960, column: 2, scope: !20716)
!20765 = !DILocation(line: 3961, column: 1, scope: !20716)
!20766 = distinct !DISubprogram(name: "mgsl_ioctl_common", scope: !3, file: !3, line: 2969, type: !20767, scopeLine: 2970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20767 = !DISubroutineType(types: !20768)
!20768 = !{!32, !7524, !7, !312}
!20769 = !DILocalVariable(name: "info", arg: 1, scope: !20766, file: !3, line: 2969, type: !7524)
!20770 = !DILocation(line: 2969, column: 50, scope: !20766)
!20771 = !DILocalVariable(name: "cmd", arg: 2, scope: !20766, file: !3, line: 2969, type: !7)
!20772 = !DILocation(line: 2969, column: 69, scope: !20766)
!20773 = !DILocalVariable(name: "arg", arg: 3, scope: !20766, file: !3, line: 2969, type: !312)
!20774 = !DILocation(line: 2969, column: 88, scope: !20766)
!20775 = !DILocalVariable(name: "argp", scope: !20766, file: !3, line: 2971, type: !591)
!20776 = !DILocation(line: 2971, column: 15, scope: !20766)
!20777 = !DILocation(line: 2971, column: 37, scope: !20766)
!20778 = !DILocation(line: 2971, column: 22, scope: !20766)
!20779 = !DILocation(line: 2973, column: 10, scope: !20766)
!20780 = !DILocation(line: 2973, column: 2, scope: !20766)
!20781 = !DILocation(line: 2975, column: 27, scope: !20782)
!20782 = distinct !DILexicalBlock(scope: !20766, file: !3, line: 2973, column: 15)
!20783 = !DILocation(line: 2975, column: 33, scope: !20782)
!20784 = !DILocation(line: 2975, column: 11, scope: !20782)
!20785 = !DILocation(line: 2975, column: 4, scope: !20782)
!20786 = !DILocation(line: 2977, column: 27, scope: !20782)
!20787 = !DILocation(line: 2977, column: 33, scope: !20782)
!20788 = !DILocation(line: 2977, column: 11, scope: !20782)
!20789 = !DILocation(line: 2977, column: 4, scope: !20782)
!20790 = !DILocation(line: 2979, column: 27, scope: !20782)
!20791 = !DILocation(line: 2979, column: 33, scope: !20782)
!20792 = !DILocation(line: 2979, column: 11, scope: !20782)
!20793 = !DILocation(line: 2979, column: 4, scope: !20782)
!20794 = !DILocation(line: 2981, column: 27, scope: !20782)
!20795 = !DILocation(line: 2981, column: 37, scope: !20782)
!20796 = !DILocation(line: 2981, column: 32, scope: !20782)
!20797 = !DILocation(line: 2981, column: 11, scope: !20782)
!20798 = !DILocation(line: 2981, column: 4, scope: !20782)
!20799 = !DILocation(line: 2983, column: 25, scope: !20782)
!20800 = !DILocation(line: 2983, column: 35, scope: !20782)
!20801 = !DILocation(line: 2983, column: 30, scope: !20782)
!20802 = !DILocation(line: 2983, column: 11, scope: !20782)
!20803 = !DILocation(line: 2983, column: 4, scope: !20782)
!20804 = !DILocation(line: 2985, column: 25, scope: !20782)
!20805 = !DILocation(line: 2985, column: 35, scope: !20782)
!20806 = !DILocation(line: 2985, column: 30, scope: !20782)
!20807 = !DILocation(line: 2985, column: 11, scope: !20782)
!20808 = !DILocation(line: 2985, column: 4, scope: !20782)
!20809 = !DILocation(line: 2987, column: 24, scope: !20782)
!20810 = !DILocation(line: 2987, column: 11, scope: !20782)
!20811 = !DILocation(line: 2987, column: 4, scope: !20782)
!20812 = !DILocation(line: 2989, column: 26, scope: !20782)
!20813 = !DILocation(line: 2989, column: 32, scope: !20782)
!20814 = !DILocation(line: 2989, column: 11, scope: !20782)
!20815 = !DILocation(line: 2989, column: 4, scope: !20782)
!20816 = !DILocation(line: 2991, column: 27, scope: !20782)
!20817 = !DILocation(line: 2991, column: 33, scope: !20782)
!20818 = !DILocation(line: 2991, column: 11, scope: !20782)
!20819 = !DILocation(line: 2991, column: 4, scope: !20782)
!20820 = !DILocation(line: 2993, column: 35, scope: !20782)
!20821 = !DILocation(line: 2993, column: 11, scope: !20782)
!20822 = !DILocation(line: 2993, column: 4, scope: !20782)
!20823 = !DILocation(line: 2998, column: 28, scope: !20782)
!20824 = !DILocation(line: 2998, column: 38, scope: !20782)
!20825 = !DILocation(line: 2998, column: 33, scope: !20782)
!20826 = !DILocation(line: 2998, column: 11, scope: !20782)
!20827 = !DILocation(line: 2998, column: 4, scope: !20782)
!20828 = !DILocation(line: 3001, column: 4, scope: !20782)
!20829 = !DILocation(line: 3004, column: 1, scope: !20766)
!20830 = distinct !DISubprogram(name: "mgsl_get_params", scope: !3, file: !3, line: 2437, type: !20831, scopeLine: 2438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20831 = !DISubroutineType(types: !20832)
!20832 = !{!32, !7524, !20833}
!20833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7646, size: 64)
!20834 = !DILocation(line: 138, column: 29, scope: !11664, inlinedAt: !20835)
!20835 = distinct !DILocation(line: 199, column: 6, scope: !11696, inlinedAt: !20836)
!20836 = distinct !DILocation(line: 2445, column: 2, scope: !20830)
!20837 = !DILocation(line: 138, column: 42, scope: !11664, inlinedAt: !20835)
!20838 = !DILocation(line: 138, column: 54, scope: !11664, inlinedAt: !20835)
!20839 = !DILocation(line: 140, column: 6, scope: !11664, inlinedAt: !20835)
!20840 = !DILocation(line: 150, column: 6, scope: !11685, inlinedAt: !20835)
!20841 = !DILocation(line: 197, column: 27, scope: !11697, inlinedAt: !20836)
!20842 = !DILocation(line: 197, column: 43, scope: !11697, inlinedAt: !20836)
!20843 = !DILocation(line: 197, column: 63, scope: !11697, inlinedAt: !20836)
!20844 = !DILocalVariable(name: "info", arg: 1, scope: !20830, file: !3, line: 2437, type: !7524)
!20845 = !DILocation(line: 2437, column: 49, scope: !20830)
!20846 = !DILocalVariable(name: "user_params", arg: 2, scope: !20830, file: !3, line: 2437, type: !20833)
!20847 = !DILocation(line: 2437, column: 75, scope: !20830)
!20848 = !DILocalVariable(name: "err", scope: !20830, file: !3, line: 2439, type: !32)
!20849 = !DILocation(line: 2439, column: 6, scope: !20830)
!20850 = !DILocation(line: 2440, column: 6, scope: !20851)
!20851 = distinct !DILexicalBlock(scope: !20830, file: !3, line: 2440, column: 6)
!20852 = !DILocation(line: 2440, column: 18, scope: !20851)
!20853 = !DILocation(line: 2440, column: 6, scope: !20830)
!20854 = !DILocation(line: 2442, column: 24, scope: !20851)
!20855 = !DILocation(line: 2442, column: 30, scope: !20851)
!20856 = !DILocation(line: 2441, column: 3, scope: !20851)
!20857 = !DILocation(line: 2444, column: 14, scope: !20830)
!20858 = !DILocation(line: 2444, column: 20, scope: !20830)
!20859 = !DILocation(line: 2444, column: 25, scope: !20830)
!20860 = !DILocation(line: 2444, column: 2, scope: !20830)
!20861 = !DILocation(line: 2445, column: 2, scope: !20830)
!20862 = !DILocation(line: 199, column: 6, scope: !11696, inlinedAt: !20836)
!20863 = !DILocation(line: 141, column: 6, scope: !11812, inlinedAt: !20835)
!20864 = !DILocation(line: 0, scope: !11812, inlinedAt: !20835)
!20865 = !DILocation(line: 141, column: 6, scope: !11664, inlinedAt: !20835)
!20866 = !DILocation(line: 142, column: 29, scope: !11816, inlinedAt: !20835)
!20867 = !DILocation(line: 142, column: 8, scope: !11816, inlinedAt: !20835)
!20868 = !DILocation(line: 142, column: 7, scope: !11817, inlinedAt: !20835)
!20869 = !DILocation(line: 143, column: 18, scope: !11816, inlinedAt: !20835)
!20870 = !DILocation(line: 143, column: 22, scope: !11816, inlinedAt: !20835)
!20871 = !DILocation(line: 143, column: 4, scope: !11816, inlinedAt: !20835)
!20872 = !DILocation(line: 144, column: 12, scope: !11824, inlinedAt: !20835)
!20873 = !DILocation(line: 144, column: 12, scope: !11816, inlinedAt: !20835)
!20874 = !DILocation(line: 145, column: 4, scope: !11824, inlinedAt: !20835)
!20875 = !DILocation(line: 147, column: 4, scope: !11824, inlinedAt: !20835)
!20876 = !DILocation(line: 148, column: 3, scope: !11817, inlinedAt: !20835)
!20877 = !DILocation(line: 150, column: 6, scope: !11830, inlinedAt: !20835)
!20878 = !DILocation(line: 150, column: 6, scope: !11832, inlinedAt: !20835)
!20879 = !DILocation(line: 150, column: 6, scope: !11836, inlinedAt: !20835)
!20880 = !DILocation(line: 150, column: 6, scope: !11833, inlinedAt: !20835)
!20881 = !DILocation(line: 150, column: 6, scope: !11686, inlinedAt: !20835)
!20882 = !DILocation(line: 150, column: 6, scope: !11664, inlinedAt: !20835)
!20883 = !DILocation(line: 151, column: 3, scope: !11686, inlinedAt: !20835)
!20884 = !DILocation(line: 152, column: 20, scope: !11664, inlinedAt: !20835)
!20885 = !DILocation(line: 152, column: 26, scope: !11664, inlinedAt: !20835)
!20886 = !DILocation(line: 152, column: 33, scope: !11664, inlinedAt: !20835)
!20887 = !DILocation(line: 152, column: 2, scope: !11664, inlinedAt: !20835)
!20888 = !DILocation(line: 153, column: 2, scope: !11664, inlinedAt: !20835)
!20889 = !DILocation(line: 154, column: 1, scope: !11664, inlinedAt: !20835)
!20890 = !DILocation(line: 199, column: 6, scope: !11697, inlinedAt: !20836)
!20891 = !DILocation(line: 200, column: 21, scope: !11696, inlinedAt: !20836)
!20892 = !DILocation(line: 200, column: 25, scope: !11696, inlinedAt: !20836)
!20893 = !DILocation(line: 200, column: 31, scope: !11696, inlinedAt: !20836)
!20894 = !DILocation(line: 200, column: 7, scope: !11696, inlinedAt: !20836)
!20895 = !DILocation(line: 200, column: 5, scope: !11696, inlinedAt: !20836)
!20896 = !DILocation(line: 200, column: 3, scope: !11696, inlinedAt: !20836)
!20897 = !DILocation(line: 201, column: 9, scope: !11697, inlinedAt: !20836)
!20898 = !DILocation(line: 2446, column: 16, scope: !20830)
!20899 = !DILocation(line: 2446, column: 22, scope: !20830)
!20900 = !DILocation(line: 2446, column: 27, scope: !20830)
!20901 = !DILocation(line: 2446, column: 2, scope: !20830)
!20902 = !DILocation(line: 2447, column: 6, scope: !20903)
!20903 = distinct !DILexicalBlock(scope: !20830, file: !3, line: 2447, column: 6)
!20904 = !DILocation(line: 2447, column: 6, scope: !20830)
!20905 = !DILocation(line: 2448, column: 8, scope: !20906)
!20906 = distinct !DILexicalBlock(scope: !20907, file: !3, line: 2448, column: 8)
!20907 = distinct !DILexicalBlock(scope: !20903, file: !3, line: 2447, column: 11)
!20908 = !DILocation(line: 2448, column: 20, scope: !20906)
!20909 = !DILocation(line: 2448, column: 8, scope: !20907)
!20910 = !DILocation(line: 2450, column: 23, scope: !20906)
!20911 = !DILocation(line: 2450, column: 29, scope: !20906)
!20912 = !DILocation(line: 2449, column: 4, scope: !20906)
!20913 = !DILocation(line: 2451, column: 3, scope: !20907)
!20914 = !DILocation(line: 2454, column: 2, scope: !20830)
!20915 = !DILocation(line: 2456, column: 1, scope: !20830)
!20916 = distinct !DISubprogram(name: "mgsl_set_params", scope: !3, file: !3, line: 2469, type: !20831, scopeLine: 2470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20917 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !20918)
!20918 = distinct !DILocation(line: 2489, column: 2, scope: !20916)
!20919 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !20918)
!20920 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !20921)
!20921 = distinct !DILocation(line: 2487, column: 2, scope: !20922)
!20922 = distinct !DILexicalBlock(scope: !20923, file: !3, line: 2487, column: 2)
!20923 = distinct !DILexicalBlock(scope: !20924, file: !3, line: 2487, column: 2)
!20924 = distinct !DILexicalBlock(scope: !20925, file: !3, line: 2487, column: 2)
!20925 = distinct !DILexicalBlock(scope: !20926, file: !3, line: 2487, column: 2)
!20926 = distinct !DILexicalBlock(scope: !20916, file: !3, line: 2487, column: 2)
!20927 = !DILocation(line: 138, column: 29, scope: !11664, inlinedAt: !20928)
!20928 = distinct !DILocation(line: 191, column: 6, scope: !11670, inlinedAt: !20929)
!20929 = distinct !DILocation(line: 2478, column: 2, scope: !20916)
!20930 = !DILocation(line: 138, column: 42, scope: !11664, inlinedAt: !20928)
!20931 = !DILocation(line: 138, column: 54, scope: !11664, inlinedAt: !20928)
!20932 = !DILocation(line: 140, column: 6, scope: !11664, inlinedAt: !20928)
!20933 = !DILocation(line: 150, column: 6, scope: !11685, inlinedAt: !20928)
!20934 = !DILocation(line: 189, column: 22, scope: !11672, inlinedAt: !20929)
!20935 = !DILocation(line: 189, column: 45, scope: !11672, inlinedAt: !20929)
!20936 = !DILocation(line: 189, column: 65, scope: !11672, inlinedAt: !20929)
!20937 = !DILocalVariable(name: "info", arg: 1, scope: !20916, file: !3, line: 2469, type: !7524)
!20938 = !DILocation(line: 2469, column: 49, scope: !20916)
!20939 = !DILocalVariable(name: "new_params", arg: 2, scope: !20916, file: !3, line: 2469, type: !20833)
!20940 = !DILocation(line: 2469, column: 75, scope: !20916)
!20941 = !DILocalVariable(name: "flags", scope: !20916, file: !3, line: 2471, type: !312)
!20942 = !DILocation(line: 2471, column: 17, scope: !20916)
!20943 = !DILocalVariable(name: "tmp_params", scope: !20916, file: !3, line: 2472, type: !7646)
!20944 = !DILocation(line: 2472, column: 14, scope: !20916)
!20945 = !DILocalVariable(name: "err", scope: !20916, file: !3, line: 2473, type: !32)
!20946 = !DILocation(line: 2473, column: 6, scope: !20916)
!20947 = !DILocation(line: 2475, column: 6, scope: !20948)
!20948 = distinct !DILexicalBlock(scope: !20916, file: !3, line: 2475, column: 6)
!20949 = !DILocation(line: 2475, column: 18, scope: !20948)
!20950 = !DILocation(line: 2475, column: 6, scope: !20916)
!20951 = !DILocation(line: 2477, column: 4, scope: !20948)
!20952 = !DILocation(line: 2477, column: 10, scope: !20948)
!20953 = !DILocation(line: 2476, column: 3, scope: !20948)
!20954 = !DILocation(line: 2478, column: 2, scope: !20916)
!20955 = !DILocation(line: 191, column: 6, scope: !11670, inlinedAt: !20929)
!20956 = !DILocation(line: 141, column: 6, scope: !11812, inlinedAt: !20928)
!20957 = !DILocation(line: 0, scope: !11812, inlinedAt: !20928)
!20958 = !DILocation(line: 141, column: 6, scope: !11664, inlinedAt: !20928)
!20959 = !DILocation(line: 142, column: 29, scope: !11816, inlinedAt: !20928)
!20960 = !DILocation(line: 142, column: 8, scope: !11816, inlinedAt: !20928)
!20961 = !DILocation(line: 142, column: 7, scope: !11817, inlinedAt: !20928)
!20962 = !DILocation(line: 143, column: 18, scope: !11816, inlinedAt: !20928)
!20963 = !DILocation(line: 143, column: 22, scope: !11816, inlinedAt: !20928)
!20964 = !DILocation(line: 143, column: 4, scope: !11816, inlinedAt: !20928)
!20965 = !DILocation(line: 144, column: 12, scope: !11824, inlinedAt: !20928)
!20966 = !DILocation(line: 144, column: 12, scope: !11816, inlinedAt: !20928)
!20967 = !DILocation(line: 145, column: 4, scope: !11824, inlinedAt: !20928)
!20968 = !DILocation(line: 147, column: 4, scope: !11824, inlinedAt: !20928)
!20969 = !DILocation(line: 148, column: 3, scope: !11817, inlinedAt: !20928)
!20970 = !DILocation(line: 150, column: 6, scope: !11830, inlinedAt: !20928)
!20971 = !DILocation(line: 150, column: 6, scope: !11832, inlinedAt: !20928)
!20972 = !DILocation(line: 150, column: 6, scope: !11836, inlinedAt: !20928)
!20973 = !DILocation(line: 150, column: 6, scope: !11833, inlinedAt: !20928)
!20974 = !DILocation(line: 150, column: 6, scope: !11686, inlinedAt: !20928)
!20975 = !DILocation(line: 150, column: 6, scope: !11664, inlinedAt: !20928)
!20976 = !DILocation(line: 151, column: 3, scope: !11686, inlinedAt: !20928)
!20977 = !DILocation(line: 152, column: 20, scope: !11664, inlinedAt: !20928)
!20978 = !DILocation(line: 152, column: 26, scope: !11664, inlinedAt: !20928)
!20979 = !DILocation(line: 152, column: 33, scope: !11664, inlinedAt: !20928)
!20980 = !DILocation(line: 152, column: 2, scope: !11664, inlinedAt: !20928)
!20981 = !DILocation(line: 153, column: 2, scope: !11664, inlinedAt: !20928)
!20982 = !DILocation(line: 154, column: 1, scope: !11664, inlinedAt: !20928)
!20983 = !DILocation(line: 191, column: 6, scope: !11672, inlinedAt: !20929)
!20984 = !DILocation(line: 192, column: 23, scope: !11670, inlinedAt: !20929)
!20985 = !DILocation(line: 192, column: 27, scope: !11670, inlinedAt: !20929)
!20986 = !DILocation(line: 192, column: 33, scope: !11670, inlinedAt: !20929)
!20987 = !DILocation(line: 192, column: 7, scope: !11670, inlinedAt: !20929)
!20988 = !DILocation(line: 192, column: 5, scope: !11670, inlinedAt: !20929)
!20989 = !DILocation(line: 192, column: 3, scope: !11670, inlinedAt: !20929)
!20990 = !DILocation(line: 193, column: 9, scope: !11672, inlinedAt: !20929)
!20991 = !DILocation(line: 2479, column: 6, scope: !20992)
!20992 = distinct !DILexicalBlock(scope: !20916, file: !3, line: 2479, column: 6)
!20993 = !DILocation(line: 2479, column: 6, scope: !20916)
!20994 = !DILocation(line: 2480, column: 8, scope: !20995)
!20995 = distinct !DILexicalBlock(scope: !20996, file: !3, line: 2480, column: 8)
!20996 = distinct !DILexicalBlock(scope: !20992, file: !3, line: 2479, column: 11)
!20997 = !DILocation(line: 2480, column: 20, scope: !20995)
!20998 = !DILocation(line: 2480, column: 8, scope: !20996)
!20999 = !DILocation(line: 2482, column: 23, scope: !20995)
!21000 = !DILocation(line: 2482, column: 29, scope: !20995)
!21001 = !DILocation(line: 2481, column: 4, scope: !20995)
!21002 = !DILocation(line: 2483, column: 3, scope: !20996)
!21003 = !DILocation(line: 2486, column: 14, scope: !20916)
!21004 = !DILocation(line: 2486, column: 20, scope: !20916)
!21005 = !DILocation(line: 2486, column: 25, scope: !20916)
!21006 = !DILocation(line: 2486, column: 2, scope: !20916)
!21007 = !DILocation(line: 2487, column: 2, scope: !20916)
!21008 = !DILocation(line: 2487, column: 2, scope: !20926)
!21009 = !DILocalVariable(name: "__dummy", scope: !21010, file: !3, line: 2487, type: !312)
!21010 = distinct !DILexicalBlock(scope: !20925, file: !3, line: 2487, column: 2)
!21011 = !DILocation(line: 2487, column: 2, scope: !21010)
!21012 = !DILocalVariable(name: "__dummy2", scope: !21010, file: !3, line: 2487, type: !312)
!21013 = !DILocation(line: 2487, column: 2, scope: !20925)
!21014 = !DILocation(line: 2487, column: 2, scope: !20924)
!21015 = !DILocation(line: 2487, column: 2, scope: !21016)
!21016 = distinct !DILexicalBlock(scope: !20924, file: !3, line: 2487, column: 2)
!21017 = !DILocalVariable(name: "__dummy", scope: !21018, file: !3, line: 2487, type: !312)
!21018 = distinct !DILexicalBlock(scope: !21019, file: !3, line: 2487, column: 2)
!21019 = distinct !DILexicalBlock(scope: !21016, file: !3, line: 2487, column: 2)
!21020 = !DILocation(line: 2487, column: 2, scope: !21018)
!21021 = !DILocalVariable(name: "__dummy2", scope: !21018, file: !3, line: 2487, type: !312)
!21022 = !DILocation(line: 2487, column: 2, scope: !21019)
!21023 = !DILocation(line: 2487, column: 2, scope: !20923)
!21024 = !{i32 -2139424761}
!21025 = !DILocation(line: 2487, column: 2, scope: !20922)
!21026 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !20921)
!21027 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !20921)
!21028 = !DILocation(line: 2488, column: 10, scope: !20916)
!21029 = !DILocation(line: 2488, column: 16, scope: !20916)
!21030 = !DILocation(line: 2488, column: 2, scope: !20916)
!21031 = !DILocation(line: 2489, column: 26, scope: !20916)
!21032 = !DILocation(line: 2489, column: 32, scope: !20916)
!21033 = !DILocation(line: 2489, column: 45, scope: !20916)
!21034 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !20918)
!21035 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !20918)
!21036 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !20918)
!21037 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !20918)
!21038 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !20918)
!21039 = !DILocation(line: 2491, column: 22, scope: !20916)
!21040 = !DILocation(line: 2491, column: 3, scope: !20916)
!21041 = !DILocation(line: 2492, column: 16, scope: !20916)
!21042 = !DILocation(line: 2492, column: 22, scope: !20916)
!21043 = !DILocation(line: 2492, column: 27, scope: !20916)
!21044 = !DILocation(line: 2492, column: 2, scope: !20916)
!21045 = !DILocation(line: 2494, column: 2, scope: !20916)
!21046 = !DILocation(line: 2496, column: 1, scope: !20916)
!21047 = distinct !DISubprogram(name: "mgsl_get_txidle", scope: !3, file: !3, line: 2507, type: !21048, scopeLine: 2508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21048 = !DISubroutineType(types: !21049)
!21049 = !{!32, !7524, !1001}
!21050 = !DILocation(line: 138, column: 29, scope: !11664, inlinedAt: !21051)
!21051 = distinct !DILocation(line: 199, column: 6, scope: !11696, inlinedAt: !21052)
!21052 = distinct !DILocation(line: 2515, column: 2, scope: !21047)
!21053 = !DILocation(line: 138, column: 42, scope: !11664, inlinedAt: !21051)
!21054 = !DILocation(line: 138, column: 54, scope: !11664, inlinedAt: !21051)
!21055 = !DILocation(line: 140, column: 6, scope: !11664, inlinedAt: !21051)
!21056 = !DILocation(line: 150, column: 6, scope: !11685, inlinedAt: !21051)
!21057 = !DILocation(line: 197, column: 27, scope: !11697, inlinedAt: !21052)
!21058 = !DILocation(line: 197, column: 43, scope: !11697, inlinedAt: !21052)
!21059 = !DILocation(line: 197, column: 63, scope: !11697, inlinedAt: !21052)
!21060 = !DILocalVariable(name: "info", arg: 1, scope: !21047, file: !3, line: 2507, type: !7524)
!21061 = !DILocation(line: 2507, column: 49, scope: !21047)
!21062 = !DILocalVariable(name: "idle_mode", arg: 2, scope: !21047, file: !3, line: 2507, type: !1001)
!21063 = !DILocation(line: 2507, column: 67, scope: !21047)
!21064 = !DILocalVariable(name: "err", scope: !21047, file: !3, line: 2509, type: !32)
!21065 = !DILocation(line: 2509, column: 6, scope: !21047)
!21066 = !DILocation(line: 2511, column: 6, scope: !21067)
!21067 = distinct !DILexicalBlock(scope: !21047, file: !3, line: 2511, column: 6)
!21068 = !DILocation(line: 2511, column: 18, scope: !21067)
!21069 = !DILocation(line: 2511, column: 6, scope: !21047)
!21070 = !DILocation(line: 2513, column: 24, scope: !21067)
!21071 = !DILocation(line: 2513, column: 30, scope: !21067)
!21072 = !DILocation(line: 2513, column: 43, scope: !21067)
!21073 = !DILocation(line: 2513, column: 49, scope: !21067)
!21074 = !DILocation(line: 2512, column: 3, scope: !21067)
!21075 = !DILocation(line: 2515, column: 2, scope: !21047)
!21076 = !DILocation(line: 199, column: 6, scope: !11696, inlinedAt: !21052)
!21077 = !DILocation(line: 141, column: 6, scope: !11812, inlinedAt: !21051)
!21078 = !DILocation(line: 0, scope: !11812, inlinedAt: !21051)
!21079 = !DILocation(line: 141, column: 6, scope: !11664, inlinedAt: !21051)
!21080 = !DILocation(line: 142, column: 29, scope: !11816, inlinedAt: !21051)
!21081 = !DILocation(line: 142, column: 8, scope: !11816, inlinedAt: !21051)
!21082 = !DILocation(line: 142, column: 7, scope: !11817, inlinedAt: !21051)
!21083 = !DILocation(line: 143, column: 18, scope: !11816, inlinedAt: !21051)
!21084 = !DILocation(line: 143, column: 22, scope: !11816, inlinedAt: !21051)
!21085 = !DILocation(line: 143, column: 4, scope: !11816, inlinedAt: !21051)
!21086 = !DILocation(line: 144, column: 12, scope: !11824, inlinedAt: !21051)
!21087 = !DILocation(line: 144, column: 12, scope: !11816, inlinedAt: !21051)
!21088 = !DILocation(line: 145, column: 4, scope: !11824, inlinedAt: !21051)
!21089 = !DILocation(line: 147, column: 4, scope: !11824, inlinedAt: !21051)
!21090 = !DILocation(line: 148, column: 3, scope: !11817, inlinedAt: !21051)
!21091 = !DILocation(line: 150, column: 6, scope: !11830, inlinedAt: !21051)
!21092 = !DILocation(line: 150, column: 6, scope: !11832, inlinedAt: !21051)
!21093 = !DILocation(line: 150, column: 6, scope: !11836, inlinedAt: !21051)
!21094 = !DILocation(line: 150, column: 6, scope: !11833, inlinedAt: !21051)
!21095 = !DILocation(line: 150, column: 6, scope: !11686, inlinedAt: !21051)
!21096 = !DILocation(line: 150, column: 6, scope: !11664, inlinedAt: !21051)
!21097 = !DILocation(line: 151, column: 3, scope: !11686, inlinedAt: !21051)
!21098 = !DILocation(line: 152, column: 20, scope: !11664, inlinedAt: !21051)
!21099 = !DILocation(line: 152, column: 26, scope: !11664, inlinedAt: !21051)
!21100 = !DILocation(line: 152, column: 33, scope: !11664, inlinedAt: !21051)
!21101 = !DILocation(line: 152, column: 2, scope: !11664, inlinedAt: !21051)
!21102 = !DILocation(line: 153, column: 2, scope: !11664, inlinedAt: !21051)
!21103 = !DILocation(line: 154, column: 1, scope: !11664, inlinedAt: !21051)
!21104 = !DILocation(line: 199, column: 6, scope: !11697, inlinedAt: !21052)
!21105 = !DILocation(line: 200, column: 21, scope: !11696, inlinedAt: !21052)
!21106 = !DILocation(line: 200, column: 25, scope: !11696, inlinedAt: !21052)
!21107 = !DILocation(line: 200, column: 31, scope: !11696, inlinedAt: !21052)
!21108 = !DILocation(line: 200, column: 7, scope: !11696, inlinedAt: !21052)
!21109 = !DILocation(line: 200, column: 5, scope: !11696, inlinedAt: !21052)
!21110 = !DILocation(line: 200, column: 3, scope: !11696, inlinedAt: !21052)
!21111 = !DILocation(line: 201, column: 9, scope: !11697, inlinedAt: !21052)
!21112 = !DILocation(line: 2516, column: 6, scope: !21113)
!21113 = distinct !DILexicalBlock(scope: !21047, file: !3, line: 2516, column: 6)
!21114 = !DILocation(line: 2516, column: 6, scope: !21047)
!21115 = !DILocation(line: 2517, column: 8, scope: !21116)
!21116 = distinct !DILexicalBlock(scope: !21117, file: !3, line: 2517, column: 8)
!21117 = distinct !DILexicalBlock(scope: !21113, file: !3, line: 2516, column: 11)
!21118 = !DILocation(line: 2517, column: 20, scope: !21116)
!21119 = !DILocation(line: 2517, column: 8, scope: !21117)
!21120 = !DILocation(line: 2519, column: 23, scope: !21116)
!21121 = !DILocation(line: 2519, column: 29, scope: !21116)
!21122 = !DILocation(line: 2518, column: 4, scope: !21116)
!21123 = !DILocation(line: 2520, column: 3, scope: !21117)
!21124 = !DILocation(line: 2523, column: 2, scope: !21047)
!21125 = !DILocation(line: 2525, column: 1, scope: !21047)
!21126 = distinct !DISubprogram(name: "mgsl_set_txidle", scope: !3, file: !3, line: 2534, type: !21127, scopeLine: 2535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21127 = !DISubroutineType(types: !21128)
!21128 = !{!32, !7524, !32}
!21129 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !21130)
!21130 = distinct !DILocation(line: 2545, column: 2, scope: !21126)
!21131 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !21130)
!21132 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !21133)
!21133 = distinct !DILocation(line: 2542, column: 2, scope: !21134)
!21134 = distinct !DILexicalBlock(scope: !21135, file: !3, line: 2542, column: 2)
!21135 = distinct !DILexicalBlock(scope: !21136, file: !3, line: 2542, column: 2)
!21136 = distinct !DILexicalBlock(scope: !21137, file: !3, line: 2542, column: 2)
!21137 = distinct !DILexicalBlock(scope: !21138, file: !3, line: 2542, column: 2)
!21138 = distinct !DILexicalBlock(scope: !21126, file: !3, line: 2542, column: 2)
!21139 = !DILocalVariable(name: "info", arg: 1, scope: !21126, file: !3, line: 2534, type: !7524)
!21140 = !DILocation(line: 2534, column: 49, scope: !21126)
!21141 = !DILocalVariable(name: "idle_mode", arg: 2, scope: !21126, file: !3, line: 2534, type: !32)
!21142 = !DILocation(line: 2534, column: 59, scope: !21126)
!21143 = !DILocalVariable(name: "flags", scope: !21126, file: !3, line: 2536, type: !312)
!21144 = !DILocation(line: 2536, column: 17, scope: !21126)
!21145 = !DILocation(line: 2538, column: 6, scope: !21146)
!21146 = distinct !DILexicalBlock(scope: !21126, file: !3, line: 2538, column: 6)
!21147 = !DILocation(line: 2538, column: 18, scope: !21146)
!21148 = !DILocation(line: 2538, column: 6, scope: !21126)
!21149 = !DILocation(line: 2540, column: 4, scope: !21146)
!21150 = !DILocation(line: 2540, column: 10, scope: !21146)
!21151 = !DILocation(line: 2540, column: 23, scope: !21146)
!21152 = !DILocation(line: 2539, column: 3, scope: !21146)
!21153 = !DILocation(line: 2542, column: 2, scope: !21126)
!21154 = !DILocation(line: 2542, column: 2, scope: !21138)
!21155 = !DILocalVariable(name: "__dummy", scope: !21156, file: !3, line: 2542, type: !312)
!21156 = distinct !DILexicalBlock(scope: !21137, file: !3, line: 2542, column: 2)
!21157 = !DILocation(line: 2542, column: 2, scope: !21156)
!21158 = !DILocalVariable(name: "__dummy2", scope: !21156, file: !3, line: 2542, type: !312)
!21159 = !DILocation(line: 2542, column: 2, scope: !21137)
!21160 = !DILocation(line: 2542, column: 2, scope: !21136)
!21161 = !DILocation(line: 2542, column: 2, scope: !21162)
!21162 = distinct !DILexicalBlock(scope: !21136, file: !3, line: 2542, column: 2)
!21163 = !DILocalVariable(name: "__dummy", scope: !21164, file: !3, line: 2542, type: !312)
!21164 = distinct !DILexicalBlock(scope: !21165, file: !3, line: 2542, column: 2)
!21165 = distinct !DILexicalBlock(scope: !21162, file: !3, line: 2542, column: 2)
!21166 = !DILocation(line: 2542, column: 2, scope: !21164)
!21167 = !DILocalVariable(name: "__dummy2", scope: !21164, file: !3, line: 2542, type: !312)
!21168 = !DILocation(line: 2542, column: 2, scope: !21165)
!21169 = !DILocation(line: 2542, column: 2, scope: !21135)
!21170 = !{i32 -2139423491}
!21171 = !DILocation(line: 2542, column: 2, scope: !21134)
!21172 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !21133)
!21173 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !21133)
!21174 = !DILocation(line: 2543, column: 20, scope: !21126)
!21175 = !DILocation(line: 2543, column: 2, scope: !21126)
!21176 = !DILocation(line: 2543, column: 8, scope: !21126)
!21177 = !DILocation(line: 2543, column: 18, scope: !21126)
!21178 = !DILocation(line: 2544, column: 18, scope: !21126)
!21179 = !DILocation(line: 2544, column: 2, scope: !21126)
!21180 = !DILocation(line: 2545, column: 26, scope: !21126)
!21181 = !DILocation(line: 2545, column: 32, scope: !21126)
!21182 = !DILocation(line: 2545, column: 45, scope: !21126)
!21183 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !21130)
!21184 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !21130)
!21185 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !21130)
!21186 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !21130)
!21187 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !21130)
!21188 = !DILocation(line: 2546, column: 2, scope: !21126)
!21189 = distinct !DISubprogram(name: "mgsl_txenable", scope: !3, file: !3, line: 2561, type: !21127, scopeLine: 2562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21190 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !21191)
!21191 = distinct !DILocation(line: 2588, column: 2, scope: !21189)
!21192 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !21191)
!21193 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !21194)
!21194 = distinct !DILocation(line: 2569, column: 2, scope: !21195)
!21195 = distinct !DILexicalBlock(scope: !21196, file: !3, line: 2569, column: 2)
!21196 = distinct !DILexicalBlock(scope: !21197, file: !3, line: 2569, column: 2)
!21197 = distinct !DILexicalBlock(scope: !21198, file: !3, line: 2569, column: 2)
!21198 = distinct !DILexicalBlock(scope: !21199, file: !3, line: 2569, column: 2)
!21199 = distinct !DILexicalBlock(scope: !21189, file: !3, line: 2569, column: 2)
!21200 = !DILocalVariable(name: "info", arg: 1, scope: !21189, file: !3, line: 2561, type: !7524)
!21201 = !DILocation(line: 2561, column: 47, scope: !21189)
!21202 = !DILocalVariable(name: "enable", arg: 2, scope: !21189, file: !3, line: 2561, type: !32)
!21203 = !DILocation(line: 2561, column: 57, scope: !21189)
!21204 = !DILocalVariable(name: "flags", scope: !21189, file: !3, line: 2563, type: !312)
!21205 = !DILocation(line: 2563, column: 17, scope: !21189)
!21206 = !DILocation(line: 2565, column: 6, scope: !21207)
!21207 = distinct !DILexicalBlock(scope: !21189, file: !3, line: 2565, column: 6)
!21208 = !DILocation(line: 2565, column: 18, scope: !21207)
!21209 = !DILocation(line: 2565, column: 6, scope: !21189)
!21210 = !DILocation(line: 2567, column: 4, scope: !21207)
!21211 = !DILocation(line: 2567, column: 10, scope: !21207)
!21212 = !DILocation(line: 2567, column: 23, scope: !21207)
!21213 = !DILocation(line: 2566, column: 3, scope: !21207)
!21214 = !DILocation(line: 2569, column: 2, scope: !21189)
!21215 = !DILocation(line: 2569, column: 2, scope: !21199)
!21216 = !DILocalVariable(name: "__dummy", scope: !21217, file: !3, line: 2569, type: !312)
!21217 = distinct !DILexicalBlock(scope: !21198, file: !3, line: 2569, column: 2)
!21218 = !DILocation(line: 2569, column: 2, scope: !21217)
!21219 = !DILocalVariable(name: "__dummy2", scope: !21217, file: !3, line: 2569, type: !312)
!21220 = !DILocation(line: 2569, column: 2, scope: !21198)
!21221 = !DILocation(line: 2569, column: 2, scope: !21197)
!21222 = !DILocation(line: 2569, column: 2, scope: !21223)
!21223 = distinct !DILexicalBlock(scope: !21197, file: !3, line: 2569, column: 2)
!21224 = !DILocalVariable(name: "__dummy", scope: !21225, file: !3, line: 2569, type: !312)
!21225 = distinct !DILexicalBlock(scope: !21226, file: !3, line: 2569, column: 2)
!21226 = distinct !DILexicalBlock(scope: !21223, file: !3, line: 2569, column: 2)
!21227 = !DILocation(line: 2569, column: 2, scope: !21225)
!21228 = !DILocalVariable(name: "__dummy2", scope: !21225, file: !3, line: 2569, type: !312)
!21229 = !DILocation(line: 2569, column: 2, scope: !21226)
!21230 = !DILocation(line: 2569, column: 2, scope: !21196)
!21231 = !{i32 -2139422384}
!21232 = !DILocation(line: 2569, column: 2, scope: !21195)
!21233 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !21194)
!21234 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !21194)
!21235 = !DILocation(line: 2570, column: 7, scope: !21236)
!21236 = distinct !DILexicalBlock(scope: !21189, file: !3, line: 2570, column: 7)
!21237 = !DILocation(line: 2570, column: 7, scope: !21189)
!21238 = !DILocation(line: 2571, column: 9, scope: !21239)
!21239 = distinct !DILexicalBlock(scope: !21240, file: !3, line: 2571, column: 8)
!21240 = distinct !DILexicalBlock(scope: !21236, file: !3, line: 2570, column: 16)
!21241 = !DILocation(line: 2571, column: 15, scope: !21239)
!21242 = !DILocation(line: 2571, column: 8, scope: !21240)
!21243 = !DILocation(line: 2573, column: 26, scope: !21244)
!21244 = distinct !DILexicalBlock(scope: !21239, file: !3, line: 2571, column: 28)
!21245 = !DILocation(line: 2573, column: 4, scope: !21244)
!21246 = !DILocation(line: 2581, column: 9, scope: !21247)
!21247 = distinct !DILexicalBlock(scope: !21244, file: !3, line: 2581, column: 9)
!21248 = !DILocation(line: 2581, column: 15, scope: !21247)
!21249 = !DILocation(line: 2581, column: 22, scope: !21247)
!21250 = !DILocation(line: 2581, column: 28, scope: !21247)
!21251 = !DILocation(line: 2581, column: 9, scope: !21244)
!21252 = !DILocation(line: 2582, column: 34, scope: !21247)
!21253 = !DILocation(line: 2582, column: 5, scope: !21247)
!21254 = !DILocation(line: 2583, column: 3, scope: !21244)
!21255 = !DILocation(line: 2584, column: 2, scope: !21240)
!21256 = !DILocation(line: 2585, column: 8, scope: !21257)
!21257 = distinct !DILexicalBlock(scope: !21258, file: !3, line: 2585, column: 8)
!21258 = distinct !DILexicalBlock(scope: !21236, file: !3, line: 2584, column: 9)
!21259 = !DILocation(line: 2585, column: 14, scope: !21257)
!21260 = !DILocation(line: 2585, column: 8, scope: !21258)
!21261 = !DILocation(line: 2586, column: 25, scope: !21257)
!21262 = !DILocation(line: 2586, column: 4, scope: !21257)
!21263 = !DILocation(line: 2588, column: 26, scope: !21189)
!21264 = !DILocation(line: 2588, column: 32, scope: !21189)
!21265 = !DILocation(line: 2588, column: 45, scope: !21189)
!21266 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !21191)
!21267 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !21191)
!21268 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !21191)
!21269 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !21191)
!21270 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !21191)
!21271 = !DILocation(line: 2589, column: 2, scope: !21189)
!21272 = distinct !DISubprogram(name: "mgsl_rxenable", scope: !3, file: !3, line: 2625, type: !21127, scopeLine: 2626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21273 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !21274)
!21274 = distinct !DILocation(line: 2641, column: 2, scope: !21272)
!21275 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !21274)
!21276 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !21277)
!21277 = distinct !DILocation(line: 2633, column: 2, scope: !21278)
!21278 = distinct !DILexicalBlock(scope: !21279, file: !3, line: 2633, column: 2)
!21279 = distinct !DILexicalBlock(scope: !21280, file: !3, line: 2633, column: 2)
!21280 = distinct !DILexicalBlock(scope: !21281, file: !3, line: 2633, column: 2)
!21281 = distinct !DILexicalBlock(scope: !21282, file: !3, line: 2633, column: 2)
!21282 = distinct !DILexicalBlock(scope: !21272, file: !3, line: 2633, column: 2)
!21283 = !DILocalVariable(name: "info", arg: 1, scope: !21272, file: !3, line: 2625, type: !7524)
!21284 = !DILocation(line: 2625, column: 47, scope: !21272)
!21285 = !DILocalVariable(name: "enable", arg: 2, scope: !21272, file: !3, line: 2625, type: !32)
!21286 = !DILocation(line: 2625, column: 57, scope: !21272)
!21287 = !DILocalVariable(name: "flags", scope: !21272, file: !3, line: 2627, type: !312)
!21288 = !DILocation(line: 2627, column: 17, scope: !21272)
!21289 = !DILocation(line: 2629, column: 6, scope: !21290)
!21290 = distinct !DILexicalBlock(scope: !21272, file: !3, line: 2629, column: 6)
!21291 = !DILocation(line: 2629, column: 18, scope: !21290)
!21292 = !DILocation(line: 2629, column: 6, scope: !21272)
!21293 = !DILocation(line: 2631, column: 4, scope: !21290)
!21294 = !DILocation(line: 2631, column: 10, scope: !21290)
!21295 = !DILocation(line: 2631, column: 23, scope: !21290)
!21296 = !DILocation(line: 2630, column: 3, scope: !21290)
!21297 = !DILocation(line: 2633, column: 2, scope: !21272)
!21298 = !DILocation(line: 2633, column: 2, scope: !21282)
!21299 = !DILocalVariable(name: "__dummy", scope: !21300, file: !3, line: 2633, type: !312)
!21300 = distinct !DILexicalBlock(scope: !21281, file: !3, line: 2633, column: 2)
!21301 = !DILocation(line: 2633, column: 2, scope: !21300)
!21302 = !DILocalVariable(name: "__dummy2", scope: !21300, file: !3, line: 2633, type: !312)
!21303 = !DILocation(line: 2633, column: 2, scope: !21281)
!21304 = !DILocation(line: 2633, column: 2, scope: !21280)
!21305 = !DILocation(line: 2633, column: 2, scope: !21306)
!21306 = distinct !DILexicalBlock(scope: !21280, file: !3, line: 2633, column: 2)
!21307 = !DILocalVariable(name: "__dummy", scope: !21308, file: !3, line: 2633, type: !312)
!21308 = distinct !DILexicalBlock(scope: !21309, file: !3, line: 2633, column: 2)
!21309 = distinct !DILexicalBlock(scope: !21306, file: !3, line: 2633, column: 2)
!21310 = !DILocation(line: 2633, column: 2, scope: !21308)
!21311 = !DILocalVariable(name: "__dummy2", scope: !21308, file: !3, line: 2633, type: !312)
!21312 = !DILocation(line: 2633, column: 2, scope: !21309)
!21313 = !DILocation(line: 2633, column: 2, scope: !21279)
!21314 = !{i32 -2139420073}
!21315 = !DILocation(line: 2633, column: 2, scope: !21278)
!21316 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !21277)
!21317 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !21277)
!21318 = !DILocation(line: 2634, column: 7, scope: !21319)
!21319 = distinct !DILexicalBlock(scope: !21272, file: !3, line: 2634, column: 7)
!21320 = !DILocation(line: 2634, column: 7, scope: !21272)
!21321 = !DILocation(line: 2635, column: 9, scope: !21322)
!21322 = distinct !DILexicalBlock(scope: !21323, file: !3, line: 2635, column: 8)
!21323 = distinct !DILexicalBlock(scope: !21319, file: !3, line: 2634, column: 16)
!21324 = !DILocation(line: 2635, column: 15, scope: !21322)
!21325 = !DILocation(line: 2635, column: 8, scope: !21323)
!21326 = !DILocation(line: 2636, column: 23, scope: !21322)
!21327 = !DILocation(line: 2636, column: 4, scope: !21322)
!21328 = !DILocation(line: 2637, column: 2, scope: !21323)
!21329 = !DILocation(line: 2638, column: 8, scope: !21330)
!21330 = distinct !DILexicalBlock(scope: !21331, file: !3, line: 2638, column: 8)
!21331 = distinct !DILexicalBlock(scope: !21319, file: !3, line: 2637, column: 9)
!21332 = !DILocation(line: 2638, column: 14, scope: !21330)
!21333 = !DILocation(line: 2638, column: 8, scope: !21331)
!21334 = !DILocation(line: 2639, column: 22, scope: !21330)
!21335 = !DILocation(line: 2639, column: 4, scope: !21330)
!21336 = !DILocation(line: 2641, column: 26, scope: !21272)
!21337 = !DILocation(line: 2641, column: 32, scope: !21272)
!21338 = !DILocation(line: 2641, column: 45, scope: !21272)
!21339 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !21274)
!21340 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !21274)
!21341 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !21274)
!21342 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !21274)
!21343 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !21274)
!21344 = !DILocation(line: 2642, column: 2, scope: !21272)
!21345 = distinct !DISubprogram(name: "mgsl_txabort", scope: !3, file: !3, line: 2598, type: !9631, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21346 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !21347)
!21347 = distinct !DILocation(line: 2614, column: 2, scope: !21345)
!21348 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !21347)
!21349 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !21350)
!21350 = distinct !DILocation(line: 2606, column: 2, scope: !21351)
!21351 = distinct !DILexicalBlock(scope: !21352, file: !3, line: 2606, column: 2)
!21352 = distinct !DILexicalBlock(scope: !21353, file: !3, line: 2606, column: 2)
!21353 = distinct !DILexicalBlock(scope: !21354, file: !3, line: 2606, column: 2)
!21354 = distinct !DILexicalBlock(scope: !21355, file: !3, line: 2606, column: 2)
!21355 = distinct !DILexicalBlock(scope: !21345, file: !3, line: 2606, column: 2)
!21356 = !DILocalVariable(name: "info", arg: 1, scope: !21345, file: !3, line: 2598, type: !7524)
!21357 = !DILocation(line: 2598, column: 46, scope: !21345)
!21358 = !DILocalVariable(name: "flags", scope: !21345, file: !3, line: 2600, type: !312)
!21359 = !DILocation(line: 2600, column: 17, scope: !21345)
!21360 = !DILocation(line: 2602, column: 6, scope: !21361)
!21361 = distinct !DILexicalBlock(scope: !21345, file: !3, line: 2602, column: 6)
!21362 = !DILocation(line: 2602, column: 18, scope: !21361)
!21363 = !DILocation(line: 2602, column: 6, scope: !21345)
!21364 = !DILocation(line: 2604, column: 4, scope: !21361)
!21365 = !DILocation(line: 2604, column: 10, scope: !21361)
!21366 = !DILocation(line: 2603, column: 3, scope: !21361)
!21367 = !DILocation(line: 2606, column: 2, scope: !21345)
!21368 = !DILocation(line: 2606, column: 2, scope: !21355)
!21369 = !DILocalVariable(name: "__dummy", scope: !21370, file: !3, line: 2606, type: !312)
!21370 = distinct !DILexicalBlock(scope: !21354, file: !3, line: 2606, column: 2)
!21371 = !DILocation(line: 2606, column: 2, scope: !21370)
!21372 = !DILocalVariable(name: "__dummy2", scope: !21370, file: !3, line: 2606, type: !312)
!21373 = !DILocation(line: 2606, column: 2, scope: !21354)
!21374 = !DILocation(line: 2606, column: 2, scope: !21353)
!21375 = !DILocation(line: 2606, column: 2, scope: !21376)
!21376 = distinct !DILexicalBlock(scope: !21353, file: !3, line: 2606, column: 2)
!21377 = !DILocalVariable(name: "__dummy", scope: !21378, file: !3, line: 2606, type: !312)
!21378 = distinct !DILexicalBlock(scope: !21379, file: !3, line: 2606, column: 2)
!21379 = distinct !DILexicalBlock(scope: !21376, file: !3, line: 2606, column: 2)
!21380 = !DILocation(line: 2606, column: 2, scope: !21378)
!21381 = !DILocalVariable(name: "__dummy2", scope: !21378, file: !3, line: 2606, type: !312)
!21382 = !DILocation(line: 2606, column: 2, scope: !21379)
!21383 = !DILocation(line: 2606, column: 2, scope: !21352)
!21384 = !{i32 -2139421270}
!21385 = !DILocation(line: 2606, column: 2, scope: !21351)
!21386 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !21350)
!21387 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !21350)
!21388 = !DILocation(line: 2607, column: 7, scope: !21389)
!21389 = distinct !DILexicalBlock(scope: !21345, file: !3, line: 2607, column: 7)
!21390 = !DILocation(line: 2607, column: 13, scope: !21389)
!21391 = !DILocation(line: 2607, column: 23, scope: !21389)
!21392 = !DILocation(line: 2607, column: 26, scope: !21389)
!21393 = !DILocation(line: 2607, column: 32, scope: !21389)
!21394 = !DILocation(line: 2607, column: 39, scope: !21389)
!21395 = !DILocation(line: 2607, column: 44, scope: !21389)
!21396 = !DILocation(line: 2607, column: 7, scope: !21345)
!21397 = !DILocation(line: 2609, column: 8, scope: !21398)
!21398 = distinct !DILexicalBlock(scope: !21399, file: !3, line: 2609, column: 8)
!21399 = distinct !DILexicalBlock(scope: !21389, file: !3, line: 2608, column: 2)
!21400 = !DILocation(line: 2609, column: 14, scope: !21398)
!21401 = !DILocation(line: 2609, column: 21, scope: !21398)
!21402 = !DILocation(line: 2609, column: 27, scope: !21398)
!21403 = !DILocation(line: 2609, column: 8, scope: !21399)
!21404 = !DILocation(line: 2610, column: 34, scope: !21398)
!21405 = !DILocation(line: 2610, column: 4, scope: !21398)
!21406 = !DILocation(line: 2612, column: 4, scope: !21398)
!21407 = !DILocation(line: 2613, column: 2, scope: !21399)
!21408 = !DILocation(line: 2614, column: 26, scope: !21345)
!21409 = !DILocation(line: 2614, column: 32, scope: !21345)
!21410 = !DILocation(line: 2614, column: 45, scope: !21345)
!21411 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !21347)
!21412 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !21347)
!21413 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !21347)
!21414 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !21347)
!21415 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !21347)
!21416 = !DILocation(line: 2615, column: 2, scope: !21345)
!21417 = distinct !DISubprogram(name: "mgsl_get_stats", scope: !3, file: !3, line: 2406, type: !21418, scopeLine: 2407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21418 = !DISubroutineType(types: !21419)
!21419 = !{!32, !7524, !13494}
!21420 = !DILocation(line: 138, column: 29, scope: !11664, inlinedAt: !21421)
!21421 = distinct !DILocation(line: 199, column: 6, scope: !11696, inlinedAt: !21422)
!21422 = distinct !DILocation(line: 2418, column: 3, scope: !21423)
!21423 = distinct !DILexicalBlock(scope: !21424, file: !3, line: 2416, column: 9)
!21424 = distinct !DILexicalBlock(scope: !21417, file: !3, line: 2414, column: 6)
!21425 = !DILocation(line: 138, column: 42, scope: !11664, inlinedAt: !21421)
!21426 = !DILocation(line: 138, column: 54, scope: !11664, inlinedAt: !21421)
!21427 = !DILocation(line: 140, column: 6, scope: !11664, inlinedAt: !21421)
!21428 = !DILocation(line: 150, column: 6, scope: !11685, inlinedAt: !21421)
!21429 = !DILocation(line: 197, column: 27, scope: !11697, inlinedAt: !21422)
!21430 = !DILocation(line: 197, column: 43, scope: !11697, inlinedAt: !21422)
!21431 = !DILocation(line: 197, column: 63, scope: !11697, inlinedAt: !21422)
!21432 = !DILocalVariable(name: "info", arg: 1, scope: !21417, file: !3, line: 2406, type: !7524)
!21433 = !DILocation(line: 2406, column: 48, scope: !21417)
!21434 = !DILocalVariable(name: "user_icount", arg: 2, scope: !21417, file: !3, line: 2406, type: !13494)
!21435 = !DILocation(line: 2406, column: 81, scope: !21417)
!21436 = !DILocalVariable(name: "err", scope: !21417, file: !3, line: 2408, type: !32)
!21437 = !DILocation(line: 2408, column: 6, scope: !21417)
!21438 = !DILocation(line: 2410, column: 6, scope: !21439)
!21439 = distinct !DILexicalBlock(scope: !21417, file: !3, line: 2410, column: 6)
!21440 = !DILocation(line: 2410, column: 18, scope: !21439)
!21441 = !DILocation(line: 2410, column: 6, scope: !21417)
!21442 = !DILocation(line: 2412, column: 24, scope: !21439)
!21443 = !DILocation(line: 2412, column: 30, scope: !21439)
!21444 = !DILocation(line: 2411, column: 3, scope: !21439)
!21445 = !DILocation(line: 2414, column: 7, scope: !21424)
!21446 = !DILocation(line: 2414, column: 6, scope: !21417)
!21447 = !DILocation(line: 2415, column: 11, scope: !21448)
!21448 = distinct !DILexicalBlock(scope: !21424, file: !3, line: 2414, column: 20)
!21449 = !DILocation(line: 2415, column: 17, scope: !21448)
!21450 = !DILocation(line: 2415, column: 3, scope: !21448)
!21451 = !DILocation(line: 2416, column: 2, scope: !21448)
!21452 = !DILocation(line: 2417, column: 15, scope: !21423)
!21453 = !DILocation(line: 2417, column: 21, scope: !21423)
!21454 = !DILocation(line: 2417, column: 26, scope: !21423)
!21455 = !DILocation(line: 2417, column: 3, scope: !21423)
!21456 = !DILocation(line: 2418, column: 3, scope: !21423)
!21457 = !DILocation(line: 199, column: 6, scope: !11696, inlinedAt: !21422)
!21458 = !DILocation(line: 141, column: 6, scope: !11812, inlinedAt: !21421)
!21459 = !DILocation(line: 0, scope: !11812, inlinedAt: !21421)
!21460 = !DILocation(line: 141, column: 6, scope: !11664, inlinedAt: !21421)
!21461 = !DILocation(line: 142, column: 29, scope: !11816, inlinedAt: !21421)
!21462 = !DILocation(line: 142, column: 8, scope: !11816, inlinedAt: !21421)
!21463 = !DILocation(line: 142, column: 7, scope: !11817, inlinedAt: !21421)
!21464 = !DILocation(line: 143, column: 18, scope: !11816, inlinedAt: !21421)
!21465 = !DILocation(line: 143, column: 22, scope: !11816, inlinedAt: !21421)
!21466 = !DILocation(line: 143, column: 4, scope: !11816, inlinedAt: !21421)
!21467 = !DILocation(line: 144, column: 12, scope: !11824, inlinedAt: !21421)
!21468 = !DILocation(line: 144, column: 12, scope: !11816, inlinedAt: !21421)
!21469 = !DILocation(line: 145, column: 4, scope: !11824, inlinedAt: !21421)
!21470 = !DILocation(line: 147, column: 4, scope: !11824, inlinedAt: !21421)
!21471 = !DILocation(line: 148, column: 3, scope: !11817, inlinedAt: !21421)
!21472 = !DILocation(line: 150, column: 6, scope: !11830, inlinedAt: !21421)
!21473 = !DILocation(line: 150, column: 6, scope: !11832, inlinedAt: !21421)
!21474 = !DILocation(line: 150, column: 6, scope: !11836, inlinedAt: !21421)
!21475 = !DILocation(line: 150, column: 6, scope: !11833, inlinedAt: !21421)
!21476 = !DILocation(line: 150, column: 6, scope: !11686, inlinedAt: !21421)
!21477 = !DILocation(line: 150, column: 6, scope: !11664, inlinedAt: !21421)
!21478 = !DILocation(line: 151, column: 3, scope: !11686, inlinedAt: !21421)
!21479 = !DILocation(line: 152, column: 20, scope: !11664, inlinedAt: !21421)
!21480 = !DILocation(line: 152, column: 26, scope: !11664, inlinedAt: !21421)
!21481 = !DILocation(line: 152, column: 33, scope: !11664, inlinedAt: !21421)
!21482 = !DILocation(line: 152, column: 2, scope: !11664, inlinedAt: !21421)
!21483 = !DILocation(line: 153, column: 2, scope: !11664, inlinedAt: !21421)
!21484 = !DILocation(line: 154, column: 1, scope: !11664, inlinedAt: !21421)
!21485 = !DILocation(line: 199, column: 6, scope: !11697, inlinedAt: !21422)
!21486 = !DILocation(line: 200, column: 21, scope: !11696, inlinedAt: !21422)
!21487 = !DILocation(line: 200, column: 25, scope: !11696, inlinedAt: !21422)
!21488 = !DILocation(line: 200, column: 31, scope: !11696, inlinedAt: !21422)
!21489 = !DILocation(line: 200, column: 7, scope: !11696, inlinedAt: !21422)
!21490 = !DILocation(line: 200, column: 5, scope: !11696, inlinedAt: !21422)
!21491 = !DILocation(line: 200, column: 3, scope: !11696, inlinedAt: !21422)
!21492 = !DILocation(line: 201, column: 9, scope: !11697, inlinedAt: !21422)
!21493 = !DILocation(line: 2419, column: 17, scope: !21423)
!21494 = !DILocation(line: 2419, column: 23, scope: !21423)
!21495 = !DILocation(line: 2419, column: 28, scope: !21423)
!21496 = !DILocation(line: 2419, column: 3, scope: !21423)
!21497 = !DILocation(line: 2420, column: 7, scope: !21498)
!21498 = distinct !DILexicalBlock(scope: !21423, file: !3, line: 2420, column: 7)
!21499 = !DILocation(line: 2420, column: 7, scope: !21423)
!21500 = !DILocation(line: 2421, column: 4, scope: !21498)
!21501 = !DILocation(line: 2424, column: 2, scope: !21417)
!21502 = !DILocation(line: 2426, column: 1, scope: !21417)
!21503 = distinct !DISubprogram(name: "mgsl_wait_event", scope: !3, file: !3, line: 2654, type: !21048, scopeLine: 2655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21504 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !21505)
!21505 = distinct !DILocation(line: 2766, column: 3, scope: !21506)
!21506 = distinct !DILexicalBlock(scope: !21507, file: !3, line: 2759, column: 64)
!21507 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 2759, column: 6)
!21508 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !21505)
!21509 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !21510)
!21510 = distinct !DILocation(line: 2760, column: 3, scope: !21511)
!21511 = distinct !DILexicalBlock(scope: !21512, file: !3, line: 2760, column: 3)
!21512 = distinct !DILexicalBlock(scope: !21513, file: !3, line: 2760, column: 3)
!21513 = distinct !DILexicalBlock(scope: !21514, file: !3, line: 2760, column: 3)
!21514 = distinct !DILexicalBlock(scope: !21515, file: !3, line: 2760, column: 3)
!21515 = distinct !DILexicalBlock(scope: !21506, file: !3, line: 2760, column: 3)
!21516 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !21517)
!21517 = distinct !DILocation(line: 2757, column: 2, scope: !21518)
!21518 = distinct !DILexicalBlock(scope: !21519, file: !3, line: 2757, column: 2)
!21519 = distinct !DILexicalBlock(scope: !21520, file: !3, line: 2757, column: 2)
!21520 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 2757, column: 2)
!21521 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !21517)
!21522 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !21517)
!21523 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !21524)
!21524 = distinct !DILocation(line: 2721, column: 3, scope: !21525)
!21525 = distinct !DILexicalBlock(scope: !21526, file: !3, line: 2709, column: 10)
!21526 = distinct !DILexicalBlock(scope: !21527, file: !3, line: 2709, column: 2)
!21527 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 2709, column: 2)
!21528 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !21524)
!21529 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !21530)
!21530 = distinct !DILocation(line: 2720, column: 3, scope: !21531)
!21531 = distinct !DILexicalBlock(scope: !21532, file: !3, line: 2720, column: 3)
!21532 = distinct !DILexicalBlock(scope: !21533, file: !3, line: 2720, column: 3)
!21533 = distinct !DILexicalBlock(scope: !21525, file: !3, line: 2720, column: 3)
!21534 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !21530)
!21535 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !21530)
!21536 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !21537)
!21537 = distinct !DILocation(line: 2717, column: 3, scope: !21538)
!21538 = distinct !DILexicalBlock(scope: !21539, file: !3, line: 2717, column: 3)
!21539 = distinct !DILexicalBlock(scope: !21540, file: !3, line: 2717, column: 3)
!21540 = distinct !DILexicalBlock(scope: !21541, file: !3, line: 2717, column: 3)
!21541 = distinct !DILexicalBlock(scope: !21542, file: !3, line: 2717, column: 3)
!21542 = distinct !DILexicalBlock(scope: !21525, file: !3, line: 2717, column: 3)
!21543 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !21544)
!21544 = distinct !DILocation(line: 2711, column: 22, scope: !21545)
!21545 = distinct !DILexicalBlock(scope: !21525, file: !3, line: 2711, column: 7)
!21546 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !21544)
!21547 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !21544)
!21548 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !21549)
!21549 = distinct !DILocation(line: 2706, column: 2, scope: !21503)
!21550 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !21549)
!21551 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !21552)
!21552 = distinct !DILocation(line: 2703, column: 2, scope: !21553)
!21553 = distinct !DILexicalBlock(scope: !21554, file: !3, line: 2703, column: 2)
!21554 = distinct !DILexicalBlock(scope: !21555, file: !3, line: 2703, column: 2)
!21555 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 2703, column: 2)
!21556 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !21552)
!21557 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !21552)
!21558 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !21559)
!21559 = distinct !DILocation(line: 2685, column: 3, scope: !21560)
!21560 = distinct !DILexicalBlock(scope: !21561, file: !3, line: 2684, column: 14)
!21561 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 2684, column: 6)
!21562 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !21559)
!21563 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !21564)
!21564 = distinct !DILocation(line: 2674, column: 2, scope: !21565)
!21565 = distinct !DILexicalBlock(scope: !21566, file: !3, line: 2674, column: 2)
!21566 = distinct !DILexicalBlock(scope: !21567, file: !3, line: 2674, column: 2)
!21567 = distinct !DILexicalBlock(scope: !21568, file: !3, line: 2674, column: 2)
!21568 = distinct !DILexicalBlock(scope: !21569, file: !3, line: 2674, column: 2)
!21569 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 2674, column: 2)
!21570 = !DILocation(line: 138, column: 29, scope: !11664, inlinedAt: !21571)
!21571 = distinct !DILocation(line: 191, column: 6, scope: !11670, inlinedAt: !21572)
!21572 = distinct !DILocation(line: 2665, column: 2, scope: !21503)
!21573 = !DILocation(line: 138, column: 42, scope: !11664, inlinedAt: !21571)
!21574 = !DILocation(line: 138, column: 54, scope: !11664, inlinedAt: !21571)
!21575 = !DILocation(line: 140, column: 6, scope: !11664, inlinedAt: !21571)
!21576 = !DILocation(line: 150, column: 6, scope: !11685, inlinedAt: !21571)
!21577 = !DILocation(line: 189, column: 22, scope: !11672, inlinedAt: !21572)
!21578 = !DILocation(line: 189, column: 45, scope: !11672, inlinedAt: !21572)
!21579 = !DILocation(line: 189, column: 65, scope: !11672, inlinedAt: !21572)
!21580 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !21581)
!21581 = distinct !DILocation(line: 2663, column: 2, scope: !21503)
!21582 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !21581)
!21583 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !21581)
!21584 = !DILocalVariable(name: "info", arg: 1, scope: !21503, file: !3, line: 2654, type: !7524)
!21585 = !DILocation(line: 2654, column: 49, scope: !21503)
!21586 = !DILocalVariable(name: "mask_ptr", arg: 2, scope: !21503, file: !3, line: 2654, type: !1001)
!21587 = !DILocation(line: 2654, column: 68, scope: !21503)
!21588 = !DILocalVariable(name: "flags", scope: !21503, file: !3, line: 2656, type: !312)
!21589 = !DILocation(line: 2656, column: 17, scope: !21503)
!21590 = !DILocalVariable(name: "s", scope: !21503, file: !3, line: 2657, type: !32)
!21591 = !DILocation(line: 2657, column: 6, scope: !21503)
!21592 = !DILocalVariable(name: "rc", scope: !21503, file: !3, line: 2658, type: !32)
!21593 = !DILocation(line: 2658, column: 6, scope: !21503)
!21594 = !DILocalVariable(name: "cprev", scope: !21503, file: !3, line: 2659, type: !7532)
!21595 = !DILocation(line: 2659, column: 21, scope: !21503)
!21596 = !DILocalVariable(name: "cnow", scope: !21503, file: !3, line: 2659, type: !7532)
!21597 = !DILocation(line: 2659, column: 28, scope: !21503)
!21598 = !DILocalVariable(name: "events", scope: !21503, file: !3, line: 2660, type: !32)
!21599 = !DILocation(line: 2660, column: 6, scope: !21503)
!21600 = !DILocalVariable(name: "mask", scope: !21503, file: !3, line: 2661, type: !32)
!21601 = !DILocation(line: 2661, column: 6, scope: !21503)
!21602 = !DILocalVariable(name: "oldsigs", scope: !21503, file: !3, line: 2662, type: !7680)
!21603 = !DILocation(line: 2662, column: 30, scope: !21503)
!21604 = !DILocalVariable(name: "newsigs", scope: !21503, file: !3, line: 2662, type: !7680)
!21605 = !DILocation(line: 2662, column: 39, scope: !21503)
!21606 = !DILocalVariable(name: "wait", scope: !21503, file: !3, line: 2663, type: !20454)
!21607 = !DILocation(line: 2663, column: 2, scope: !21503)
!21608 = !DILocation(line: 2665, column: 2, scope: !21503)
!21609 = !DILocation(line: 191, column: 6, scope: !11670, inlinedAt: !21572)
!21610 = !DILocation(line: 141, column: 6, scope: !11812, inlinedAt: !21571)
!21611 = !DILocation(line: 0, scope: !11812, inlinedAt: !21571)
!21612 = !DILocation(line: 141, column: 6, scope: !11664, inlinedAt: !21571)
!21613 = !DILocation(line: 142, column: 29, scope: !11816, inlinedAt: !21571)
!21614 = !DILocation(line: 142, column: 8, scope: !11816, inlinedAt: !21571)
!21615 = !DILocation(line: 142, column: 7, scope: !11817, inlinedAt: !21571)
!21616 = !DILocation(line: 143, column: 18, scope: !11816, inlinedAt: !21571)
!21617 = !DILocation(line: 143, column: 22, scope: !11816, inlinedAt: !21571)
!21618 = !DILocation(line: 143, column: 4, scope: !11816, inlinedAt: !21571)
!21619 = !DILocation(line: 144, column: 12, scope: !11824, inlinedAt: !21571)
!21620 = !DILocation(line: 144, column: 12, scope: !11816, inlinedAt: !21571)
!21621 = !DILocation(line: 145, column: 4, scope: !11824, inlinedAt: !21571)
!21622 = !DILocation(line: 147, column: 4, scope: !11824, inlinedAt: !21571)
!21623 = !DILocation(line: 148, column: 3, scope: !11817, inlinedAt: !21571)
!21624 = !DILocation(line: 150, column: 6, scope: !11830, inlinedAt: !21571)
!21625 = !DILocation(line: 150, column: 6, scope: !11832, inlinedAt: !21571)
!21626 = !DILocation(line: 150, column: 6, scope: !11836, inlinedAt: !21571)
!21627 = !DILocation(line: 150, column: 6, scope: !11833, inlinedAt: !21571)
!21628 = !DILocation(line: 150, column: 6, scope: !11686, inlinedAt: !21571)
!21629 = !DILocation(line: 150, column: 6, scope: !11664, inlinedAt: !21571)
!21630 = !DILocation(line: 151, column: 3, scope: !11686, inlinedAt: !21571)
!21631 = !DILocation(line: 152, column: 20, scope: !11664, inlinedAt: !21571)
!21632 = !DILocation(line: 152, column: 26, scope: !11664, inlinedAt: !21571)
!21633 = !DILocation(line: 152, column: 33, scope: !11664, inlinedAt: !21571)
!21634 = !DILocation(line: 152, column: 2, scope: !11664, inlinedAt: !21571)
!21635 = !DILocation(line: 153, column: 2, scope: !11664, inlinedAt: !21571)
!21636 = !DILocation(line: 154, column: 1, scope: !11664, inlinedAt: !21571)
!21637 = !DILocation(line: 191, column: 6, scope: !11672, inlinedAt: !21572)
!21638 = !DILocation(line: 192, column: 23, scope: !11670, inlinedAt: !21572)
!21639 = !DILocation(line: 192, column: 27, scope: !11670, inlinedAt: !21572)
!21640 = !DILocation(line: 192, column: 33, scope: !11670, inlinedAt: !21572)
!21641 = !DILocation(line: 192, column: 7, scope: !11670, inlinedAt: !21572)
!21642 = !DILocation(line: 192, column: 5, scope: !11670, inlinedAt: !21572)
!21643 = !DILocation(line: 192, column: 3, scope: !11670, inlinedAt: !21572)
!21644 = !DILocation(line: 193, column: 9, scope: !11672, inlinedAt: !21572)
!21645 = !DILocation(line: 2666, column: 6, scope: !21646)
!21646 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 2666, column: 6)
!21647 = !DILocation(line: 2666, column: 6, scope: !21503)
!21648 = !DILocation(line: 2667, column: 3, scope: !21649)
!21649 = distinct !DILexicalBlock(scope: !21646, file: !3, line: 2666, column: 10)
!21650 = !DILocation(line: 2670, column: 6, scope: !21651)
!21651 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 2670, column: 6)
!21652 = !DILocation(line: 2670, column: 18, scope: !21651)
!21653 = !DILocation(line: 2670, column: 6, scope: !21503)
!21654 = !DILocation(line: 2672, column: 4, scope: !21651)
!21655 = !DILocation(line: 2672, column: 10, scope: !21651)
!21656 = !DILocation(line: 2672, column: 23, scope: !21651)
!21657 = !DILocation(line: 2671, column: 3, scope: !21651)
!21658 = !DILocation(line: 2674, column: 2, scope: !21503)
!21659 = !DILocation(line: 2674, column: 2, scope: !21569)
!21660 = !DILocalVariable(name: "__dummy", scope: !21661, file: !3, line: 2674, type: !312)
!21661 = distinct !DILexicalBlock(scope: !21568, file: !3, line: 2674, column: 2)
!21662 = !DILocation(line: 2674, column: 2, scope: !21661)
!21663 = !DILocalVariable(name: "__dummy2", scope: !21661, file: !3, line: 2674, type: !312)
!21664 = !DILocation(line: 2674, column: 2, scope: !21568)
!21665 = !DILocation(line: 2674, column: 2, scope: !21567)
!21666 = !DILocation(line: 2674, column: 2, scope: !21667)
!21667 = distinct !DILexicalBlock(scope: !21567, file: !3, line: 2674, column: 2)
!21668 = !DILocalVariable(name: "__dummy", scope: !21669, file: !3, line: 2674, type: !312)
!21669 = distinct !DILexicalBlock(scope: !21670, file: !3, line: 2674, column: 2)
!21670 = distinct !DILexicalBlock(scope: !21667, file: !3, line: 2674, column: 2)
!21671 = !DILocation(line: 2674, column: 2, scope: !21669)
!21672 = !DILocalVariable(name: "__dummy2", scope: !21669, file: !3, line: 2674, type: !312)
!21673 = !DILocation(line: 2674, column: 2, scope: !21670)
!21674 = !DILocation(line: 2674, column: 2, scope: !21566)
!21675 = !{i32 -2139418637}
!21676 = !DILocation(line: 2674, column: 2, scope: !21565)
!21677 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !21564)
!21678 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !21564)
!21679 = !DILocation(line: 2677, column: 25, scope: !21503)
!21680 = !DILocation(line: 2677, column: 2, scope: !21503)
!21681 = !DILocation(line: 2678, column: 6, scope: !21503)
!21682 = !DILocation(line: 2678, column: 12, scope: !21503)
!21683 = !DILocation(line: 2678, column: 4, scope: !21503)
!21684 = !DILocation(line: 2679, column: 11, scope: !21503)
!21685 = !DILocation(line: 2680, column: 7, scope: !21503)
!21686 = !DILocation(line: 2680, column: 9, scope: !21503)
!21687 = !DILocation(line: 2680, column: 6, scope: !21503)
!21688 = !DILocation(line: 2681, column: 8, scope: !21503)
!21689 = !DILocation(line: 2681, column: 10, scope: !21503)
!21690 = !DILocation(line: 2681, column: 7, scope: !21503)
!21691 = !DILocation(line: 2680, column: 74, scope: !21503)
!21692 = !DILocation(line: 2682, column: 7, scope: !21503)
!21693 = !DILocation(line: 2682, column: 9, scope: !21503)
!21694 = !DILocation(line: 2682, column: 6, scope: !21503)
!21695 = !DILocation(line: 2681, column: 75, scope: !21503)
!21696 = !DILocation(line: 2683, column: 7, scope: !21503)
!21697 = !DILocation(line: 2683, column: 9, scope: !21503)
!21698 = !DILocation(line: 2683, column: 6, scope: !21503)
!21699 = !DILocation(line: 2682, column: 74, scope: !21503)
!21700 = !DILocation(line: 2679, column: 16, scope: !21503)
!21701 = !DILocation(line: 2679, column: 9, scope: !21503)
!21702 = !DILocation(line: 2684, column: 6, scope: !21561)
!21703 = !DILocation(line: 2684, column: 6, scope: !21503)
!21704 = !DILocation(line: 2685, column: 27, scope: !21560)
!21705 = !DILocation(line: 2685, column: 33, scope: !21560)
!21706 = !DILocation(line: 2685, column: 46, scope: !21560)
!21707 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !21559)
!21708 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !21559)
!21709 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !21559)
!21710 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !21559)
!21711 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !21559)
!21712 = !DILocation(line: 2686, column: 3, scope: !21560)
!21713 = !DILocation(line: 2690, column: 10, scope: !21503)
!21714 = !DILocation(line: 2690, column: 16, scope: !21503)
!21715 = !DILocation(line: 2691, column: 12, scope: !21503)
!21716 = !DILocation(line: 2691, column: 18, scope: !21503)
!21717 = !DILocation(line: 2694, column: 6, scope: !21718)
!21718 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 2694, column: 6)
!21719 = !DILocation(line: 2694, column: 11, scope: !21718)
!21720 = !DILocation(line: 2694, column: 6, scope: !21503)
!21721 = !DILocalVariable(name: "oldreg", scope: !21722, file: !3, line: 2695, type: !581)
!21722 = distinct !DILexicalBlock(scope: !21718, file: !3, line: 2694, column: 64)
!21723 = !DILocation(line: 2695, column: 7, scope: !21722)
!21724 = !DILocation(line: 2695, column: 26, scope: !21722)
!21725 = !DILocation(line: 2695, column: 16, scope: !21722)
!21726 = !DILocalVariable(name: "newreg", scope: !21722, file: !3, line: 2696, type: !581)
!21727 = !DILocation(line: 2696, column: 7, scope: !21722)
!21728 = !DILocation(line: 2696, column: 16, scope: !21722)
!21729 = !DILocation(line: 2697, column: 6, scope: !21722)
!21730 = !DILocation(line: 2697, column: 11, scope: !21722)
!21731 = !DILocation(line: 2696, column: 23, scope: !21722)
!21732 = !DILocation(line: 2698, column: 6, scope: !21722)
!21733 = !DILocation(line: 2698, column: 11, scope: !21722)
!21734 = !DILocation(line: 2697, column: 62, scope: !21722)
!21735 = !DILocation(line: 2699, column: 7, scope: !21736)
!21736 = distinct !DILexicalBlock(scope: !21722, file: !3, line: 2699, column: 7)
!21737 = !DILocation(line: 2699, column: 17, scope: !21736)
!21738 = !DILocation(line: 2699, column: 14, scope: !21736)
!21739 = !DILocation(line: 2699, column: 7, scope: !21722)
!21740 = !DILocation(line: 2700, column: 15, scope: !21736)
!21741 = !DILocation(line: 2700, column: 27, scope: !21736)
!21742 = !DILocation(line: 2700, column: 4, scope: !21736)
!21743 = !DILocation(line: 2701, column: 2, scope: !21722)
!21744 = !DILocation(line: 2703, column: 2, scope: !21503)
!21745 = !DILocation(line: 2703, column: 2, scope: !21555)
!21746 = !DILocation(line: 2703, column: 2, scope: !21554)
!21747 = !DILocation(line: 2703, column: 2, scope: !21748)
!21748 = distinct !DILexicalBlock(scope: !21554, file: !3, line: 2703, column: 2)
!21749 = !DILocation(line: 2703, column: 2, scope: !21553)
!21750 = !{i32 -2139416712}
!21751 = !DILocation(line: 2704, column: 18, scope: !21503)
!21752 = !DILocation(line: 2704, column: 24, scope: !21503)
!21753 = !DILocation(line: 2704, column: 2, scope: !21503)
!21754 = !DILocation(line: 2706, column: 26, scope: !21503)
!21755 = !DILocation(line: 2706, column: 32, scope: !21503)
!21756 = !DILocation(line: 2706, column: 45, scope: !21503)
!21757 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !21549)
!21758 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !21549)
!21759 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !21549)
!21760 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !21549)
!21761 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !21549)
!21762 = !DILocation(line: 2709, column: 2, scope: !21503)
!21763 = !DILocation(line: 2710, column: 3, scope: !21525)
!21764 = !DILocation(line: 2711, column: 7, scope: !21545)
!21765 = !DILocation(line: 2711, column: 7, scope: !21525)
!21766 = !DILocation(line: 2712, column: 7, scope: !21767)
!21767 = distinct !DILexicalBlock(scope: !21545, file: !3, line: 2711, column: 32)
!21768 = !DILocation(line: 2713, column: 4, scope: !21767)
!21769 = !DILocation(line: 2717, column: 3, scope: !21525)
!21770 = !DILocation(line: 2717, column: 3, scope: !21542)
!21771 = !DILocalVariable(name: "__dummy", scope: !21772, file: !3, line: 2717, type: !312)
!21772 = distinct !DILexicalBlock(scope: !21541, file: !3, line: 2717, column: 3)
!21773 = !DILocation(line: 2717, column: 3, scope: !21772)
!21774 = !DILocalVariable(name: "__dummy2", scope: !21772, file: !3, line: 2717, type: !312)
!21775 = !DILocation(line: 2717, column: 3, scope: !21541)
!21776 = !DILocation(line: 2717, column: 3, scope: !21540)
!21777 = !DILocation(line: 2717, column: 3, scope: !21778)
!21778 = distinct !DILexicalBlock(scope: !21540, file: !3, line: 2717, column: 3)
!21779 = !DILocalVariable(name: "__dummy", scope: !21780, file: !3, line: 2717, type: !312)
!21780 = distinct !DILexicalBlock(scope: !21781, file: !3, line: 2717, column: 3)
!21781 = distinct !DILexicalBlock(scope: !21778, file: !3, line: 2717, column: 3)
!21782 = !DILocation(line: 2717, column: 3, scope: !21780)
!21783 = !DILocalVariable(name: "__dummy2", scope: !21780, file: !3, line: 2717, type: !312)
!21784 = !DILocation(line: 2717, column: 3, scope: !21781)
!21785 = !DILocation(line: 2717, column: 3, scope: !21539)
!21786 = !{i32 -2139415751}
!21787 = !DILocation(line: 2717, column: 3, scope: !21538)
!21788 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !21537)
!21789 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !21537)
!21790 = !DILocation(line: 2718, column: 10, scope: !21525)
!21791 = !DILocation(line: 2718, column: 16, scope: !21525)
!21792 = !DILocation(line: 2719, column: 13, scope: !21525)
!21793 = !DILocation(line: 2719, column: 19, scope: !21525)
!21794 = !DILocation(line: 2720, column: 3, scope: !21525)
!21795 = !DILocation(line: 2720, column: 3, scope: !21533)
!21796 = !DILocation(line: 2720, column: 3, scope: !21532)
!21797 = !DILocation(line: 2720, column: 3, scope: !21798)
!21798 = distinct !DILexicalBlock(scope: !21532, file: !3, line: 2720, column: 3)
!21799 = !DILocation(line: 2720, column: 3, scope: !21531)
!21800 = !{i32 -2139413964}
!21801 = !DILocation(line: 2721, column: 27, scope: !21525)
!21802 = !DILocation(line: 2721, column: 33, scope: !21525)
!21803 = !DILocation(line: 2721, column: 46, scope: !21525)
!21804 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !21524)
!21805 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !21524)
!21806 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !21524)
!21807 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !21524)
!21808 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !21524)
!21809 = !DILocation(line: 2724, column: 15, scope: !21810)
!21810 = distinct !DILexicalBlock(scope: !21525, file: !3, line: 2724, column: 7)
!21811 = !DILocation(line: 2724, column: 35, scope: !21810)
!21812 = !DILocation(line: 2724, column: 24, scope: !21810)
!21813 = !DILocation(line: 2724, column: 44, scope: !21810)
!21814 = !DILocation(line: 2725, column: 15, scope: !21810)
!21815 = !DILocation(line: 2725, column: 35, scope: !21810)
!21816 = !DILocation(line: 2725, column: 24, scope: !21810)
!21817 = !DILocation(line: 2725, column: 44, scope: !21810)
!21818 = !DILocation(line: 2726, column: 15, scope: !21810)
!21819 = !DILocation(line: 2726, column: 35, scope: !21810)
!21820 = !DILocation(line: 2726, column: 24, scope: !21810)
!21821 = !DILocation(line: 2726, column: 44, scope: !21810)
!21822 = !DILocation(line: 2727, column: 15, scope: !21810)
!21823 = !DILocation(line: 2727, column: 35, scope: !21810)
!21824 = !DILocation(line: 2727, column: 24, scope: !21810)
!21825 = !DILocation(line: 2727, column: 44, scope: !21810)
!21826 = !DILocation(line: 2728, column: 15, scope: !21810)
!21827 = !DILocation(line: 2728, column: 35, scope: !21810)
!21828 = !DILocation(line: 2728, column: 24, scope: !21810)
!21829 = !DILocation(line: 2728, column: 44, scope: !21810)
!21830 = !DILocation(line: 2729, column: 15, scope: !21810)
!21831 = !DILocation(line: 2729, column: 35, scope: !21810)
!21832 = !DILocation(line: 2729, column: 24, scope: !21810)
!21833 = !DILocation(line: 2729, column: 44, scope: !21810)
!21834 = !DILocation(line: 2730, column: 15, scope: !21810)
!21835 = !DILocation(line: 2730, column: 35, scope: !21810)
!21836 = !DILocation(line: 2730, column: 24, scope: !21810)
!21837 = !DILocation(line: 2730, column: 44, scope: !21810)
!21838 = !DILocation(line: 2731, column: 15, scope: !21810)
!21839 = !DILocation(line: 2731, column: 35, scope: !21810)
!21840 = !DILocation(line: 2731, column: 24, scope: !21810)
!21841 = !DILocation(line: 2731, column: 44, scope: !21810)
!21842 = !DILocation(line: 2732, column: 12, scope: !21810)
!21843 = !DILocation(line: 2732, column: 33, scope: !21810)
!21844 = !DILocation(line: 2732, column: 24, scope: !21810)
!21845 = !DILocation(line: 2732, column: 44, scope: !21810)
!21846 = !DILocation(line: 2733, column: 12, scope: !21810)
!21847 = !DILocation(line: 2733, column: 33, scope: !21810)
!21848 = !DILocation(line: 2733, column: 24, scope: !21810)
!21849 = !DILocation(line: 2724, column: 7, scope: !21525)
!21850 = !DILocation(line: 2734, column: 7, scope: !21851)
!21851 = distinct !DILexicalBlock(scope: !21810, file: !3, line: 2733, column: 41)
!21852 = !DILocation(line: 2735, column: 4, scope: !21851)
!21853 = !DILocation(line: 2738, column: 12, scope: !21525)
!21854 = !DILocation(line: 2739, column: 15, scope: !21525)
!21855 = !DILocation(line: 2739, column: 35, scope: !21525)
!21856 = !DILocation(line: 2739, column: 24, scope: !21525)
!21857 = !DILocation(line: 2739, column: 7, scope: !21525)
!21858 = !DILocation(line: 2740, column: 13, scope: !21525)
!21859 = !DILocation(line: 2740, column: 33, scope: !21525)
!21860 = !DILocation(line: 2740, column: 22, scope: !21525)
!21861 = !DILocation(line: 2740, column: 5, scope: !21525)
!21862 = !DILocation(line: 2739, column: 71, scope: !21525)
!21863 = !DILocation(line: 2741, column: 13, scope: !21525)
!21864 = !DILocation(line: 2741, column: 33, scope: !21525)
!21865 = !DILocation(line: 2741, column: 22, scope: !21525)
!21866 = !DILocation(line: 2741, column: 5, scope: !21525)
!21867 = !DILocation(line: 2740, column: 69, scope: !21525)
!21868 = !DILocation(line: 2742, column: 13, scope: !21525)
!21869 = !DILocation(line: 2742, column: 33, scope: !21525)
!21870 = !DILocation(line: 2742, column: 22, scope: !21525)
!21871 = !DILocation(line: 2742, column: 5, scope: !21525)
!21872 = !DILocation(line: 2741, column: 69, scope: !21525)
!21873 = !DILocation(line: 2743, column: 13, scope: !21525)
!21874 = !DILocation(line: 2743, column: 33, scope: !21525)
!21875 = !DILocation(line: 2743, column: 22, scope: !21525)
!21876 = !DILocation(line: 2743, column: 5, scope: !21525)
!21877 = !DILocation(line: 2742, column: 69, scope: !21525)
!21878 = !DILocation(line: 2744, column: 13, scope: !21525)
!21879 = !DILocation(line: 2744, column: 33, scope: !21525)
!21880 = !DILocation(line: 2744, column: 22, scope: !21525)
!21881 = !DILocation(line: 2744, column: 5, scope: !21525)
!21882 = !DILocation(line: 2743, column: 69, scope: !21525)
!21883 = !DILocation(line: 2745, column: 13, scope: !21525)
!21884 = !DILocation(line: 2745, column: 33, scope: !21525)
!21885 = !DILocation(line: 2745, column: 22, scope: !21525)
!21886 = !DILocation(line: 2745, column: 5, scope: !21525)
!21887 = !DILocation(line: 2744, column: 69, scope: !21525)
!21888 = !DILocation(line: 2746, column: 13, scope: !21525)
!21889 = !DILocation(line: 2746, column: 33, scope: !21525)
!21890 = !DILocation(line: 2746, column: 22, scope: !21525)
!21891 = !DILocation(line: 2746, column: 5, scope: !21525)
!21892 = !DILocation(line: 2745, column: 69, scope: !21525)
!21893 = !DILocation(line: 2747, column: 10, scope: !21525)
!21894 = !DILocation(line: 2747, column: 31, scope: !21525)
!21895 = !DILocation(line: 2747, column: 22, scope: !21525)
!21896 = !DILocation(line: 2747, column: 5, scope: !21525)
!21897 = !DILocation(line: 2746, column: 69, scope: !21525)
!21898 = !DILocation(line: 2748, column: 12, scope: !21525)
!21899 = !DILocation(line: 2748, column: 33, scope: !21525)
!21900 = !DILocation(line: 2748, column: 24, scope: !21525)
!21901 = !DILocation(line: 2748, column: 7, scope: !21525)
!21902 = !DILocation(line: 2747, column: 70, scope: !21525)
!21903 = !DILocation(line: 2738, column: 17, scope: !21525)
!21904 = !DILocation(line: 2738, column: 10, scope: !21525)
!21905 = !DILocation(line: 2749, column: 7, scope: !21906)
!21906 = distinct !DILexicalBlock(scope: !21525, file: !3, line: 2749, column: 7)
!21907 = !DILocation(line: 2749, column: 7, scope: !21525)
!21908 = !DILocation(line: 2750, column: 4, scope: !21906)
!21909 = !DILocation(line: 2752, column: 11, scope: !21525)
!21910 = !DILocation(line: 2753, column: 13, scope: !21525)
!21911 = !DILocation(line: 2709, column: 2, scope: !21526)
!21912 = distinct !{!21912, !21913, !21914}
!21913 = !DILocation(line: 2709, column: 2, scope: !21527)
!21914 = !DILocation(line: 2754, column: 2, scope: !21527)
!21915 = !DILocation(line: 2756, column: 21, scope: !21503)
!21916 = !DILocation(line: 2756, column: 27, scope: !21503)
!21917 = !DILocation(line: 2756, column: 2, scope: !21503)
!21918 = !DILocation(line: 2757, column: 2, scope: !21503)
!21919 = !DILocation(line: 2757, column: 2, scope: !21520)
!21920 = !DILocation(line: 2757, column: 2, scope: !21519)
!21921 = !DILocation(line: 2757, column: 2, scope: !21922)
!21922 = distinct !DILexicalBlock(scope: !21519, file: !3, line: 2757, column: 2)
!21923 = !DILocation(line: 2757, column: 2, scope: !21518)
!21924 = !{i32 -2139412237}
!21925 = !DILocation(line: 2759, column: 6, scope: !21507)
!21926 = !DILocation(line: 2759, column: 11, scope: !21507)
!21927 = !DILocation(line: 2759, column: 6, scope: !21503)
!21928 = !DILocation(line: 2760, column: 3, scope: !21506)
!21929 = !DILocation(line: 2760, column: 3, scope: !21515)
!21930 = !DILocalVariable(name: "__dummy", scope: !21931, file: !3, line: 2760, type: !312)
!21931 = distinct !DILexicalBlock(scope: !21514, file: !3, line: 2760, column: 3)
!21932 = !DILocation(line: 2760, column: 3, scope: !21931)
!21933 = !DILocalVariable(name: "__dummy2", scope: !21931, file: !3, line: 2760, type: !312)
!21934 = !DILocation(line: 2760, column: 3, scope: !21514)
!21935 = !DILocation(line: 2760, column: 3, scope: !21513)
!21936 = !DILocation(line: 2760, column: 3, scope: !21937)
!21937 = distinct !DILexicalBlock(scope: !21513, file: !3, line: 2760, column: 3)
!21938 = !DILocalVariable(name: "__dummy", scope: !21939, file: !3, line: 2760, type: !312)
!21939 = distinct !DILexicalBlock(scope: !21940, file: !3, line: 2760, column: 3)
!21940 = distinct !DILexicalBlock(scope: !21937, file: !3, line: 2760, column: 3)
!21941 = !DILocation(line: 2760, column: 3, scope: !21939)
!21942 = !DILocalVariable(name: "__dummy2", scope: !21939, file: !3, line: 2760, type: !312)
!21943 = !DILocation(line: 2760, column: 3, scope: !21940)
!21944 = !DILocation(line: 2760, column: 3, scope: !21512)
!21945 = !{i32 -2139411280}
!21946 = !DILocation(line: 2760, column: 3, scope: !21511)
!21947 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !21510)
!21948 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !21510)
!21949 = !DILocation(line: 2761, column: 26, scope: !21950)
!21950 = distinct !DILexicalBlock(scope: !21506, file: !3, line: 2761, column: 7)
!21951 = !DILocation(line: 2761, column: 32, scope: !21950)
!21952 = !DILocation(line: 2761, column: 8, scope: !21950)
!21953 = !DILocation(line: 2761, column: 7, scope: !21506)
!21954 = !DILocation(line: 2763, column: 15, scope: !21955)
!21955 = distinct !DILexicalBlock(scope: !21950, file: !3, line: 2761, column: 47)
!21956 = !DILocation(line: 2763, column: 37, scope: !21955)
!21957 = !DILocation(line: 2763, column: 27, scope: !21955)
!21958 = !DILocation(line: 2763, column: 48, scope: !21955)
!21959 = !DILocation(line: 2763, column: 4, scope: !21955)
!21960 = !DILocation(line: 2765, column: 3, scope: !21955)
!21961 = !DILocation(line: 2766, column: 27, scope: !21506)
!21962 = !DILocation(line: 2766, column: 33, scope: !21506)
!21963 = !DILocation(line: 2766, column: 46, scope: !21506)
!21964 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !21505)
!21965 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !21505)
!21966 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !21505)
!21967 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !21505)
!21968 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !21505)
!21969 = !DILocation(line: 2767, column: 2, scope: !21506)
!21970 = !DILocation(line: 2759, column: 61, scope: !21507)
!21971 = !DILabel(scope: !21503, name: "exit", file: !3, line: 2768)
!21972 = !DILocation(line: 2768, column: 1, scope: !21503)
!21973 = !DILocation(line: 2769, column: 7, scope: !21974)
!21974 = distinct !DILexicalBlock(scope: !21503, file: !3, line: 2769, column: 7)
!21975 = !DILocation(line: 2769, column: 10, scope: !21974)
!21976 = !DILocation(line: 2769, column: 7, scope: !21503)
!21977 = !DILocation(line: 2770, column: 3, scope: !21978)
!21978 = distinct !DILexicalBlock(scope: !21974, file: !3, line: 2770, column: 3)
!21979 = !DILocalVariable(name: "__ret_pu", scope: !21980, file: !3, line: 2770, type: !32)
!21980 = distinct !DILexicalBlock(scope: !21978, file: !3, line: 2770, column: 3)
!21981 = !DILocation(line: 2770, column: 3, scope: !21980)
!21982 = !DILocalVariable(name: "__ptr_pu", scope: !21980, file: !3, line: 2770, type: !591)
!21983 = !DILocalVariable(name: "__val_pu", scope: !21980, file: !3, line: 2770, type: !32)
!21984 = !{i32 -2139410757}
!21985 = !DILocation(line: 2770, column: 3, scope: !21974)
!21986 = !DILocation(line: 2772, column: 9, scope: !21503)
!21987 = !DILocation(line: 2772, column: 2, scope: !21503)
!21988 = !DILocation(line: 2774, column: 1, scope: !21503)
!21989 = distinct !DISubprogram(name: "mgsl_loopmode_send_done", scope: !3, file: !3, line: 7356, type: !9631, scopeLine: 7357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!21990 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !21991)
!21991 = distinct !DILocation(line: 7367, column: 2, scope: !21989)
!21992 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !21991)
!21993 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !21994)
!21994 = distinct !DILocation(line: 7360, column: 2, scope: !21995)
!21995 = distinct !DILexicalBlock(scope: !21996, file: !3, line: 7360, column: 2)
!21996 = distinct !DILexicalBlock(scope: !21997, file: !3, line: 7360, column: 2)
!21997 = distinct !DILexicalBlock(scope: !21998, file: !3, line: 7360, column: 2)
!21998 = distinct !DILexicalBlock(scope: !21999, file: !3, line: 7360, column: 2)
!21999 = distinct !DILexicalBlock(scope: !21989, file: !3, line: 7360, column: 2)
!22000 = !DILocalVariable(name: "info", arg: 1, scope: !21989, file: !3, line: 7356, type: !7524)
!22001 = !DILocation(line: 7356, column: 58, scope: !21989)
!22002 = !DILocalVariable(name: "flags", scope: !21989, file: !3, line: 7358, type: !312)
!22003 = !DILocation(line: 7358, column: 16, scope: !21989)
!22004 = !DILocation(line: 7360, column: 2, scope: !21989)
!22005 = !DILocation(line: 7360, column: 2, scope: !21999)
!22006 = !DILocalVariable(name: "__dummy", scope: !22007, file: !3, line: 7360, type: !312)
!22007 = distinct !DILexicalBlock(scope: !21998, file: !3, line: 7360, column: 2)
!22008 = !DILocation(line: 7360, column: 2, scope: !22007)
!22009 = !DILocalVariable(name: "__dummy2", scope: !22007, file: !3, line: 7360, type: !312)
!22010 = !DILocation(line: 7360, column: 2, scope: !21998)
!22011 = !DILocation(line: 7360, column: 2, scope: !21997)
!22012 = !DILocation(line: 7360, column: 2, scope: !22013)
!22013 = distinct !DILexicalBlock(scope: !21997, file: !3, line: 7360, column: 2)
!22014 = !DILocalVariable(name: "__dummy", scope: !22015, file: !3, line: 7360, type: !312)
!22015 = distinct !DILexicalBlock(scope: !22016, file: !3, line: 7360, column: 2)
!22016 = distinct !DILexicalBlock(scope: !22013, file: !3, line: 7360, column: 2)
!22017 = !DILocation(line: 7360, column: 2, scope: !22015)
!22018 = !DILocalVariable(name: "__dummy2", scope: !22015, file: !3, line: 7360, type: !312)
!22019 = !DILocation(line: 7360, column: 2, scope: !22016)
!22020 = !DILocation(line: 7360, column: 2, scope: !21996)
!22021 = !{i32 -2139326995}
!22022 = !DILocation(line: 7360, column: 2, scope: !21995)
!22023 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !21994)
!22024 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !21994)
!22025 = !DILocation(line: 7361, column: 6, scope: !22026)
!22026 = distinct !DILexicalBlock(scope: !21989, file: !3, line: 7361, column: 6)
!22027 = !DILocation(line: 7361, column: 12, scope: !22026)
!22028 = !DILocation(line: 7361, column: 19, scope: !22026)
!22029 = !DILocation(line: 7361, column: 25, scope: !22026)
!22030 = !DILocation(line: 7361, column: 6, scope: !21989)
!22031 = !DILocation(line: 7362, column: 7, scope: !22032)
!22032 = distinct !DILexicalBlock(scope: !22033, file: !3, line: 7362, column: 7)
!22033 = distinct !DILexicalBlock(scope: !22026, file: !3, line: 7361, column: 52)
!22034 = !DILocation(line: 7362, column: 13, scope: !22032)
!22035 = !DILocation(line: 7362, column: 7, scope: !22033)
!22036 = !DILocation(line: 7363, column: 4, scope: !22032)
!22037 = !DILocation(line: 7363, column: 10, scope: !22032)
!22038 = !DILocation(line: 7363, column: 39, scope: !22032)
!22039 = !DILocation(line: 7365, column: 27, scope: !22032)
!22040 = !DILocation(line: 7365, column: 4, scope: !22032)
!22041 = !DILocation(line: 7366, column: 2, scope: !22033)
!22042 = !DILocation(line: 7367, column: 26, scope: !21989)
!22043 = !DILocation(line: 7367, column: 32, scope: !21989)
!22044 = !DILocation(line: 7367, column: 45, scope: !21989)
!22045 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !21991)
!22046 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !21991)
!22047 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !21991)
!22048 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !21991)
!22049 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !21991)
!22050 = !DILocation(line: 7369, column: 2, scope: !21989)
!22051 = distinct !DISubprogram(name: "modem_input_wait", scope: !3, file: !3, line: 2776, type: !21127, scopeLine: 2777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22052 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !22053)
!22053 = distinct !DILocation(line: 2822, column: 2, scope: !22054)
!22054 = distinct !DILexicalBlock(scope: !22055, file: !3, line: 2822, column: 2)
!22055 = distinct !DILexicalBlock(scope: !22056, file: !3, line: 2822, column: 2)
!22056 = distinct !DILexicalBlock(scope: !22051, file: !3, line: 2822, column: 2)
!22057 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !22053)
!22058 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !22053)
!22059 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !22060)
!22060 = distinct !DILocation(line: 2801, column: 3, scope: !22061)
!22061 = distinct !DILexicalBlock(scope: !22062, file: !3, line: 2790, column: 10)
!22062 = distinct !DILexicalBlock(scope: !22063, file: !3, line: 2790, column: 2)
!22063 = distinct !DILexicalBlock(scope: !22051, file: !3, line: 2790, column: 2)
!22064 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !22060)
!22065 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !22066)
!22066 = distinct !DILocation(line: 2800, column: 3, scope: !22067)
!22067 = distinct !DILexicalBlock(scope: !22068, file: !3, line: 2800, column: 3)
!22068 = distinct !DILexicalBlock(scope: !22069, file: !3, line: 2800, column: 3)
!22069 = distinct !DILexicalBlock(scope: !22061, file: !3, line: 2800, column: 3)
!22070 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !22066)
!22071 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !22066)
!22072 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !22073)
!22073 = distinct !DILocation(line: 2798, column: 3, scope: !22074)
!22074 = distinct !DILexicalBlock(scope: !22075, file: !3, line: 2798, column: 3)
!22075 = distinct !DILexicalBlock(scope: !22076, file: !3, line: 2798, column: 3)
!22076 = distinct !DILexicalBlock(scope: !22077, file: !3, line: 2798, column: 3)
!22077 = distinct !DILexicalBlock(scope: !22078, file: !3, line: 2798, column: 3)
!22078 = distinct !DILexicalBlock(scope: !22061, file: !3, line: 2798, column: 3)
!22079 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !22080)
!22080 = distinct !DILocation(line: 2792, column: 22, scope: !22081)
!22081 = distinct !DILexicalBlock(scope: !22061, file: !3, line: 2792, column: 7)
!22082 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !22080)
!22083 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !22080)
!22084 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !22085)
!22085 = distinct !DILocation(line: 2788, column: 2, scope: !22051)
!22086 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !22085)
!22087 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !22088)
!22088 = distinct !DILocation(line: 2787, column: 2, scope: !22089)
!22089 = distinct !DILexicalBlock(scope: !22090, file: !3, line: 2787, column: 2)
!22090 = distinct !DILexicalBlock(scope: !22091, file: !3, line: 2787, column: 2)
!22091 = distinct !DILexicalBlock(scope: !22051, file: !3, line: 2787, column: 2)
!22092 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !22088)
!22093 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !22088)
!22094 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !22095)
!22095 = distinct !DILocation(line: 2784, column: 2, scope: !22096)
!22096 = distinct !DILexicalBlock(scope: !22097, file: !3, line: 2784, column: 2)
!22097 = distinct !DILexicalBlock(scope: !22098, file: !3, line: 2784, column: 2)
!22098 = distinct !DILexicalBlock(scope: !22099, file: !3, line: 2784, column: 2)
!22099 = distinct !DILexicalBlock(scope: !22100, file: !3, line: 2784, column: 2)
!22100 = distinct !DILexicalBlock(scope: !22051, file: !3, line: 2784, column: 2)
!22101 = !DILocation(line: 15, column: 9, scope: !19857, inlinedAt: !22102)
!22102 = distinct !DILocation(line: 2781, column: 2, scope: !22051)
!22103 = !DILocation(line: 15, column: 9, scope: !19869, inlinedAt: !22102)
!22104 = !DILocation(line: 15, column: 9, scope: !19872, inlinedAt: !22102)
!22105 = !DILocalVariable(name: "info", arg: 1, scope: !22051, file: !3, line: 2776, type: !7524)
!22106 = !DILocation(line: 2776, column: 49, scope: !22051)
!22107 = !DILocalVariable(name: "arg", arg: 2, scope: !22051, file: !3, line: 2776, type: !32)
!22108 = !DILocation(line: 2776, column: 58, scope: !22051)
!22109 = !DILocalVariable(name: "flags", scope: !22051, file: !3, line: 2778, type: !312)
!22110 = !DILocation(line: 2778, column: 17, scope: !22051)
!22111 = !DILocalVariable(name: "rc", scope: !22051, file: !3, line: 2779, type: !32)
!22112 = !DILocation(line: 2779, column: 6, scope: !22051)
!22113 = !DILocalVariable(name: "cprev", scope: !22051, file: !3, line: 2780, type: !7532)
!22114 = !DILocation(line: 2780, column: 21, scope: !22051)
!22115 = !DILocalVariable(name: "cnow", scope: !22051, file: !3, line: 2780, type: !7532)
!22116 = !DILocation(line: 2780, column: 28, scope: !22051)
!22117 = !DILocalVariable(name: "wait", scope: !22051, file: !3, line: 2781, type: !20454)
!22118 = !DILocation(line: 2781, column: 2, scope: !22051)
!22119 = !DILocation(line: 2784, column: 2, scope: !22051)
!22120 = !DILocation(line: 2784, column: 2, scope: !22100)
!22121 = !DILocalVariable(name: "__dummy", scope: !22122, file: !3, line: 2784, type: !312)
!22122 = distinct !DILexicalBlock(scope: !22099, file: !3, line: 2784, column: 2)
!22123 = !DILocation(line: 2784, column: 2, scope: !22122)
!22124 = !DILocalVariable(name: "__dummy2", scope: !22122, file: !3, line: 2784, type: !312)
!22125 = !DILocation(line: 2784, column: 2, scope: !22099)
!22126 = !DILocation(line: 2784, column: 2, scope: !22098)
!22127 = !DILocation(line: 2784, column: 2, scope: !22128)
!22128 = distinct !DILexicalBlock(scope: !22098, file: !3, line: 2784, column: 2)
!22129 = !DILocalVariable(name: "__dummy", scope: !22130, file: !3, line: 2784, type: !312)
!22130 = distinct !DILexicalBlock(scope: !22131, file: !3, line: 2784, column: 2)
!22131 = distinct !DILexicalBlock(scope: !22128, file: !3, line: 2784, column: 2)
!22132 = !DILocation(line: 2784, column: 2, scope: !22130)
!22133 = !DILocalVariable(name: "__dummy2", scope: !22130, file: !3, line: 2784, type: !312)
!22134 = !DILocation(line: 2784, column: 2, scope: !22131)
!22135 = !DILocation(line: 2784, column: 2, scope: !22097)
!22136 = !{i32 -2139409112}
!22137 = !DILocation(line: 2784, column: 2, scope: !22096)
!22138 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !22095)
!22139 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !22095)
!22140 = !DILocation(line: 2785, column: 10, scope: !22051)
!22141 = !DILocation(line: 2785, column: 16, scope: !22051)
!22142 = !DILocation(line: 2786, column: 18, scope: !22051)
!22143 = !DILocation(line: 2786, column: 24, scope: !22051)
!22144 = !DILocation(line: 2786, column: 2, scope: !22051)
!22145 = !DILocation(line: 2787, column: 2, scope: !22051)
!22146 = !DILocation(line: 2787, column: 2, scope: !22091)
!22147 = !DILocation(line: 2787, column: 2, scope: !22090)
!22148 = !DILocation(line: 2787, column: 2, scope: !22149)
!22149 = distinct !DILexicalBlock(scope: !22090, file: !3, line: 2787, column: 2)
!22150 = !DILocation(line: 2787, column: 2, scope: !22089)
!22151 = !{i32 -2139407325}
!22152 = !DILocation(line: 2788, column: 26, scope: !22051)
!22153 = !DILocation(line: 2788, column: 32, scope: !22051)
!22154 = !DILocation(line: 2788, column: 45, scope: !22051)
!22155 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !22085)
!22156 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !22085)
!22157 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !22085)
!22158 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !22085)
!22159 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !22085)
!22160 = !DILocation(line: 2790, column: 2, scope: !22051)
!22161 = !DILocation(line: 2791, column: 3, scope: !22061)
!22162 = !DILocation(line: 2792, column: 7, scope: !22081)
!22163 = !DILocation(line: 2792, column: 7, scope: !22061)
!22164 = !DILocation(line: 2793, column: 7, scope: !22165)
!22165 = distinct !DILexicalBlock(scope: !22081, file: !3, line: 2792, column: 32)
!22166 = !DILocation(line: 2794, column: 4, scope: !22165)
!22167 = !DILocation(line: 2798, column: 3, scope: !22061)
!22168 = !DILocation(line: 2798, column: 3, scope: !22078)
!22169 = !DILocalVariable(name: "__dummy", scope: !22170, file: !3, line: 2798, type: !312)
!22170 = distinct !DILexicalBlock(scope: !22077, file: !3, line: 2798, column: 3)
!22171 = !DILocation(line: 2798, column: 3, scope: !22170)
!22172 = !DILocalVariable(name: "__dummy2", scope: !22170, file: !3, line: 2798, type: !312)
!22173 = !DILocation(line: 2798, column: 3, scope: !22077)
!22174 = !DILocation(line: 2798, column: 3, scope: !22076)
!22175 = !DILocation(line: 2798, column: 3, scope: !22176)
!22176 = distinct !DILexicalBlock(scope: !22076, file: !3, line: 2798, column: 3)
!22177 = !DILocalVariable(name: "__dummy", scope: !22178, file: !3, line: 2798, type: !312)
!22178 = distinct !DILexicalBlock(scope: !22179, file: !3, line: 2798, column: 3)
!22179 = distinct !DILexicalBlock(scope: !22176, file: !3, line: 2798, column: 3)
!22180 = !DILocation(line: 2798, column: 3, scope: !22178)
!22181 = !DILocalVariable(name: "__dummy2", scope: !22178, file: !3, line: 2798, type: !312)
!22182 = !DILocation(line: 2798, column: 3, scope: !22179)
!22183 = !DILocation(line: 2798, column: 3, scope: !22075)
!22184 = !{i32 -2139406364}
!22185 = !DILocation(line: 2798, column: 3, scope: !22074)
!22186 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !22073)
!22187 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !22073)
!22188 = !DILocation(line: 2799, column: 10, scope: !22061)
!22189 = !DILocation(line: 2799, column: 16, scope: !22061)
!22190 = !DILocation(line: 2800, column: 3, scope: !22061)
!22191 = !DILocation(line: 2800, column: 3, scope: !22069)
!22192 = !DILocation(line: 2800, column: 3, scope: !22068)
!22193 = !DILocation(line: 2800, column: 3, scope: !22194)
!22194 = distinct !DILexicalBlock(scope: !22068, file: !3, line: 2800, column: 3)
!22195 = !DILocation(line: 2800, column: 3, scope: !22067)
!22196 = !{i32 -2139404577}
!22197 = !DILocation(line: 2801, column: 27, scope: !22061)
!22198 = !DILocation(line: 2801, column: 33, scope: !22061)
!22199 = !DILocation(line: 2801, column: 46, scope: !22061)
!22200 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !22060)
!22201 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !22060)
!22202 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !22060)
!22203 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !22060)
!22204 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !22060)
!22205 = !DILocation(line: 2804, column: 12, scope: !22206)
!22206 = distinct !DILexicalBlock(scope: !22061, file: !3, line: 2804, column: 7)
!22207 = !DILocation(line: 2804, column: 25, scope: !22206)
!22208 = !DILocation(line: 2804, column: 16, scope: !22206)
!22209 = !DILocation(line: 2804, column: 29, scope: !22206)
!22210 = !DILocation(line: 2804, column: 37, scope: !22206)
!22211 = !DILocation(line: 2804, column: 50, scope: !22206)
!22212 = !DILocation(line: 2804, column: 41, scope: !22206)
!22213 = !DILocation(line: 2804, column: 54, scope: !22206)
!22214 = !DILocation(line: 2805, column: 12, scope: !22206)
!22215 = !DILocation(line: 2805, column: 25, scope: !22206)
!22216 = !DILocation(line: 2805, column: 16, scope: !22206)
!22217 = !DILocation(line: 2805, column: 29, scope: !22206)
!22218 = !DILocation(line: 2805, column: 37, scope: !22206)
!22219 = !DILocation(line: 2805, column: 50, scope: !22206)
!22220 = !DILocation(line: 2805, column: 41, scope: !22206)
!22221 = !DILocation(line: 2804, column: 7, scope: !22061)
!22222 = !DILocation(line: 2806, column: 7, scope: !22223)
!22223 = distinct !DILexicalBlock(scope: !22206, file: !3, line: 2805, column: 55)
!22224 = !DILocation(line: 2807, column: 4, scope: !22223)
!22225 = !DILocation(line: 2811, column: 8, scope: !22226)
!22226 = distinct !DILexicalBlock(scope: !22061, file: !3, line: 2811, column: 7)
!22227 = !DILocation(line: 2811, column: 12, scope: !22226)
!22228 = !DILocation(line: 2811, column: 24, scope: !22226)
!22229 = !DILocation(line: 2811, column: 32, scope: !22226)
!22230 = !DILocation(line: 2811, column: 45, scope: !22226)
!22231 = !DILocation(line: 2811, column: 36, scope: !22226)
!22232 = !DILocation(line: 2811, column: 50, scope: !22226)
!22233 = !DILocation(line: 2812, column: 8, scope: !22226)
!22234 = !DILocation(line: 2812, column: 12, scope: !22226)
!22235 = !DILocation(line: 2812, column: 24, scope: !22226)
!22236 = !DILocation(line: 2812, column: 32, scope: !22226)
!22237 = !DILocation(line: 2812, column: 45, scope: !22226)
!22238 = !DILocation(line: 2812, column: 36, scope: !22226)
!22239 = !DILocation(line: 2812, column: 50, scope: !22226)
!22240 = !DILocation(line: 2813, column: 8, scope: !22226)
!22241 = !DILocation(line: 2813, column: 12, scope: !22226)
!22242 = !DILocation(line: 2813, column: 24, scope: !22226)
!22243 = !DILocation(line: 2813, column: 32, scope: !22226)
!22244 = !DILocation(line: 2813, column: 45, scope: !22226)
!22245 = !DILocation(line: 2813, column: 36, scope: !22226)
!22246 = !DILocation(line: 2813, column: 50, scope: !22226)
!22247 = !DILocation(line: 2814, column: 8, scope: !22226)
!22248 = !DILocation(line: 2814, column: 12, scope: !22226)
!22249 = !DILocation(line: 2814, column: 24, scope: !22226)
!22250 = !DILocation(line: 2814, column: 32, scope: !22226)
!22251 = !DILocation(line: 2814, column: 45, scope: !22226)
!22252 = !DILocation(line: 2814, column: 36, scope: !22226)
!22253 = !DILocation(line: 2811, column: 7, scope: !22061)
!22254 = !DILocation(line: 2815, column: 7, scope: !22255)
!22255 = distinct !DILexicalBlock(scope: !22226, file: !3, line: 2814, column: 51)
!22256 = !DILocation(line: 2816, column: 4, scope: !22255)
!22257 = !DILocation(line: 2819, column: 11, scope: !22061)
!22258 = !DILocation(line: 2790, column: 2, scope: !22062)
!22259 = distinct !{!22259, !22260, !22261}
!22260 = !DILocation(line: 2790, column: 2, scope: !22063)
!22261 = !DILocation(line: 2820, column: 2, scope: !22063)
!22262 = !DILocation(line: 2821, column: 21, scope: !22051)
!22263 = !DILocation(line: 2821, column: 27, scope: !22051)
!22264 = !DILocation(line: 2821, column: 2, scope: !22051)
!22265 = !DILocation(line: 2822, column: 2, scope: !22051)
!22266 = !DILocation(line: 2822, column: 2, scope: !22056)
!22267 = !DILocation(line: 2822, column: 2, scope: !22055)
!22268 = !DILocation(line: 2822, column: 2, scope: !22269)
!22269 = distinct !DILexicalBlock(scope: !22055, file: !3, line: 2822, column: 2)
!22270 = !DILocation(line: 2822, column: 2, scope: !22054)
!22271 = !{i32 -2139402886}
!22272 = !DILocation(line: 2823, column: 9, scope: !22051)
!22273 = !DILocation(line: 2823, column: 2, scope: !22051)
!22274 = distinct !DISubprogram(name: "usc_loopmode_insert_request", scope: !3, file: !3, line: 7397, type: !8185, scopeLine: 7398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22275 = !DILocalVariable(name: "info", arg: 1, scope: !22274, file: !3, line: 7397, type: !7524)
!22276 = !DILocation(line: 7397, column: 63, scope: !22274)
!22277 = !DILocation(line: 7399, column: 3, scope: !22274)
!22278 = !DILocation(line: 7399, column: 9, scope: !22274)
!22279 = !DILocation(line: 7399, column: 35, scope: !22274)
!22280 = !DILocation(line: 7404, column: 15, scope: !22274)
!22281 = !DILocation(line: 7405, column: 15, scope: !22274)
!22282 = !DILocation(line: 7405, column: 4, scope: !22274)
!22283 = !DILocation(line: 7405, column: 28, scope: !22274)
!22284 = !DILocation(line: 7405, column: 3, scope: !22274)
!22285 = !DILocation(line: 7404, column: 3, scope: !22274)
!22286 = !DILocation(line: 7408, column: 2, scope: !22274)
!22287 = !DILocation(line: 7408, column: 8, scope: !22274)
!22288 = !DILocation(line: 7408, column: 18, scope: !22274)
!22289 = !DILocation(line: 7409, column: 14, scope: !22274)
!22290 = !DILocation(line: 7409, column: 25, scope: !22274)
!22291 = !DILocation(line: 7409, column: 31, scope: !22274)
!22292 = !DILocation(line: 7409, column: 3, scope: !22274)
!22293 = !DILocation(line: 7410, column: 1, scope: !22274)
!22294 = distinct !DISubprogram(name: "waitqueue_active", scope: !1890, file: !1890, line: 126, type: !22295, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22295 = !DISubroutineType(types: !22296)
!22296 = !{!32, !22297}
!22297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!22298 = !DILocalVariable(name: "wq_head", arg: 1, scope: !22294, file: !1890, line: 126, type: !22297)
!22299 = !DILocation(line: 126, column: 60, scope: !22294)
!22300 = !DILocation(line: 128, column: 22, scope: !22294)
!22301 = !DILocation(line: 128, column: 31, scope: !22294)
!22302 = !DILocation(line: 128, column: 10, scope: !22294)
!22303 = !DILocation(line: 128, column: 9, scope: !22294)
!22304 = !DILocation(line: 128, column: 2, scope: !22294)
!22305 = distinct !DISubprogram(name: "might_fault", scope: !22306, file: !22306, line: 315, type: !5179, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22306 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!22307 = !DILocation(line: 315, column: 40, scope: !22305)
!22308 = distinct !DISubprogram(name: "list_empty", scope: !9156, file: !9156, line: 280, type: !22309, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22309 = !DISubroutineType(types: !22310)
!22310 = !{!32, !22311}
!22311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22312, size: 64)
!22312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !284)
!22313 = !DILocalVariable(name: "head", arg: 1, scope: !22308, file: !9156, line: 280, type: !22311)
!22314 = !DILocation(line: 280, column: 54, scope: !22308)
!22315 = !DILocation(line: 282, column: 9, scope: !22316)
!22316 = distinct !DILexicalBlock(scope: !22308, file: !9156, line: 282, column: 9)
!22317 = !DILocation(line: 282, column: 9, scope: !22318)
!22318 = distinct !DILexicalBlock(scope: !22316, file: !9156, line: 282, column: 9)
!22319 = !DILocation(line: 282, column: 34, scope: !22308)
!22320 = !DILocation(line: 282, column: 31, scope: !22308)
!22321 = !DILocation(line: 282, column: 2, scope: !22308)
!22322 = distinct !DISubprogram(name: "tty_throttled", scope: !3762, file: !3762, line: 404, type: !20653, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22323 = !DILocalVariable(name: "tty", arg: 1, scope: !22322, file: !3762, line: 404, type: !3760)
!22324 = !DILocation(line: 404, column: 53, scope: !22322)
!22325 = !DILocation(line: 406, column: 34, scope: !22322)
!22326 = !DILocation(line: 406, column: 39, scope: !22322)
!22327 = !DILocation(line: 406, column: 9, scope: !22322)
!22328 = !DILocation(line: 406, column: 2, scope: !22322)
!22329 = distinct !DISubprogram(name: "line_info", scope: !3, file: !3, line: 3429, type: !22330, scopeLine: 3430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!22330 = !DISubroutineType(types: !22331)
!22331 = !{null, !1653, !7524}
!22332 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !22333)
!22333 = distinct !DILocation(line: 3494, column: 2, scope: !22334)
!22334 = distinct !DILexicalBlock(scope: !22335, file: !3, line: 3494, column: 2)
!22335 = distinct !DILexicalBlock(scope: !22336, file: !3, line: 3494, column: 2)
!22336 = distinct !DILexicalBlock(scope: !22337, file: !3, line: 3494, column: 2)
!22337 = distinct !DILexicalBlock(scope: !22338, file: !3, line: 3494, column: 2)
!22338 = distinct !DILexicalBlock(scope: !22329, file: !3, line: 3494, column: 2)
!22339 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !22340)
!22340 = distinct !DILocation(line: 3441, column: 2, scope: !22329)
!22341 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !22340)
!22342 = !DILocation(line: 407, column: 64, scope: !9307, inlinedAt: !22343)
!22343 = distinct !DILocation(line: 3511, column: 2, scope: !22329)
!22344 = !DILocation(line: 407, column: 84, scope: !9307, inlinedAt: !22343)
!22345 = !DILocation(line: 327, column: 67, scope: !8661, inlinedAt: !22346)
!22346 = distinct !DILocation(line: 3439, column: 2, scope: !22347)
!22347 = distinct !DILexicalBlock(scope: !22348, file: !3, line: 3439, column: 2)
!22348 = distinct !DILexicalBlock(scope: !22349, file: !3, line: 3439, column: 2)
!22349 = distinct !DILexicalBlock(scope: !22350, file: !3, line: 3439, column: 2)
!22350 = distinct !DILexicalBlock(scope: !22351, file: !3, line: 3439, column: 2)
!22351 = distinct !DILexicalBlock(scope: !22329, file: !3, line: 3439, column: 2)
!22352 = !DILocalVariable(name: "m", arg: 1, scope: !22329, file: !3, line: 3429, type: !1653)
!22353 = !DILocation(line: 3429, column: 47, scope: !22329)
!22354 = !DILocalVariable(name: "info", arg: 2, scope: !22329, file: !3, line: 3429, type: !7524)
!22355 = !DILocation(line: 3429, column: 70, scope: !22329)
!22356 = !DILocalVariable(name: "stat_buf", scope: !22329, file: !3, line: 3431, type: !22357)
!22357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 240, elements: !22358)
!22358 = !{!22359}
!22359 = !DISubrange(count: 30)
!22360 = !DILocation(line: 3431, column: 7, scope: !22329)
!22361 = !DILocalVariable(name: "flags", scope: !22329, file: !3, line: 3432, type: !312)
!22362 = !DILocation(line: 3432, column: 16, scope: !22329)
!22363 = !DILocation(line: 3434, column: 13, scope: !22329)
!22364 = !DILocation(line: 3435, column: 3, scope: !22329)
!22365 = !DILocation(line: 3435, column: 9, scope: !22329)
!22366 = !DILocation(line: 3435, column: 22, scope: !22329)
!22367 = !DILocation(line: 3435, column: 28, scope: !22329)
!22368 = !DILocation(line: 3435, column: 37, scope: !22329)
!22369 = !DILocation(line: 3435, column: 43, scope: !22329)
!22370 = !DILocation(line: 3436, column: 3, scope: !22329)
!22371 = !DILocation(line: 3436, column: 9, scope: !22329)
!22372 = !DILocation(line: 3436, column: 27, scope: !22329)
!22373 = !DILocation(line: 3436, column: 33, scope: !22329)
!22374 = !DILocation(line: 3434, column: 2, scope: !22329)
!22375 = !DILocation(line: 3439, column: 2, scope: !22329)
!22376 = !DILocation(line: 3439, column: 2, scope: !22351)
!22377 = !DILocalVariable(name: "__dummy", scope: !22378, file: !3, line: 3439, type: !312)
!22378 = distinct !DILexicalBlock(scope: !22350, file: !3, line: 3439, column: 2)
!22379 = !DILocation(line: 3439, column: 2, scope: !22378)
!22380 = !DILocalVariable(name: "__dummy2", scope: !22378, file: !3, line: 3439, type: !312)
!22381 = !DILocation(line: 3439, column: 2, scope: !22350)
!22382 = !DILocation(line: 3439, column: 2, scope: !22349)
!22383 = !DILocation(line: 3439, column: 2, scope: !22384)
!22384 = distinct !DILexicalBlock(scope: !22349, file: !3, line: 3439, column: 2)
!22385 = !DILocalVariable(name: "__dummy", scope: !22386, file: !3, line: 3439, type: !312)
!22386 = distinct !DILexicalBlock(scope: !22387, file: !3, line: 3439, column: 2)
!22387 = distinct !DILexicalBlock(scope: !22384, file: !3, line: 3439, column: 2)
!22388 = !DILocation(line: 3439, column: 2, scope: !22386)
!22389 = !DILocalVariable(name: "__dummy2", scope: !22386, file: !3, line: 3439, type: !312)
!22390 = !DILocation(line: 3439, column: 2, scope: !22387)
!22391 = !DILocation(line: 3439, column: 2, scope: !22348)
!22392 = !{i32 -2139375000}
!22393 = !DILocation(line: 3439, column: 2, scope: !22347)
!22394 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !22346)
!22395 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !22346)
!22396 = !DILocation(line: 3440, column: 26, scope: !22329)
!22397 = !DILocation(line: 3440, column: 3, scope: !22329)
!22398 = !DILocation(line: 3441, column: 26, scope: !22329)
!22399 = !DILocation(line: 3441, column: 32, scope: !22329)
!22400 = !DILocation(line: 3441, column: 45, scope: !22329)
!22401 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !22340)
!22402 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !22340)
!22403 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !22340)
!22404 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !22340)
!22405 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !22340)
!22406 = !DILocation(line: 3443, column: 2, scope: !22329)
!22407 = !DILocation(line: 3443, column: 14, scope: !22329)
!22408 = !DILocation(line: 3444, column: 2, scope: !22329)
!22409 = !DILocation(line: 3444, column: 14, scope: !22329)
!22410 = !DILocation(line: 3445, column: 6, scope: !22411)
!22411 = distinct !DILexicalBlock(scope: !22329, file: !3, line: 3445, column: 6)
!22412 = !DILocation(line: 3445, column: 12, scope: !22411)
!22413 = !DILocation(line: 3445, column: 27, scope: !22411)
!22414 = !DILocation(line: 3445, column: 6, scope: !22329)
!22415 = !DILocation(line: 3446, column: 10, scope: !22411)
!22416 = !DILocation(line: 3446, column: 3, scope: !22411)
!22417 = !DILocation(line: 3447, column: 6, scope: !22418)
!22418 = distinct !DILexicalBlock(scope: !22329, file: !3, line: 3447, column: 6)
!22419 = !DILocation(line: 3447, column: 12, scope: !22418)
!22420 = !DILocation(line: 3447, column: 27, scope: !22418)
!22421 = !DILocation(line: 3447, column: 6, scope: !22329)
!22422 = !DILocation(line: 3448, column: 10, scope: !22418)
!22423 = !DILocation(line: 3448, column: 3, scope: !22418)
!22424 = !DILocation(line: 3449, column: 6, scope: !22425)
!22425 = distinct !DILexicalBlock(scope: !22329, file: !3, line: 3449, column: 6)
!22426 = !DILocation(line: 3449, column: 12, scope: !22425)
!22427 = !DILocation(line: 3449, column: 27, scope: !22425)
!22428 = !DILocation(line: 3449, column: 6, scope: !22329)
!22429 = !DILocation(line: 3450, column: 10, scope: !22425)
!22430 = !DILocation(line: 3450, column: 3, scope: !22425)
!22431 = !DILocation(line: 3451, column: 6, scope: !22432)
!22432 = distinct !DILexicalBlock(scope: !22329, file: !3, line: 3451, column: 6)
!22433 = !DILocation(line: 3451, column: 12, scope: !22432)
!22434 = !DILocation(line: 3451, column: 27, scope: !22432)
!22435 = !DILocation(line: 3451, column: 6, scope: !22329)
!22436 = !DILocation(line: 3452, column: 10, scope: !22432)
!22437 = !DILocation(line: 3452, column: 3, scope: !22432)
!22438 = !DILocation(line: 3453, column: 6, scope: !22439)
!22439 = distinct !DILexicalBlock(scope: !22329, file: !3, line: 3453, column: 6)
!22440 = !DILocation(line: 3453, column: 12, scope: !22439)
!22441 = !DILocation(line: 3453, column: 27, scope: !22439)
!22442 = !DILocation(line: 3453, column: 6, scope: !22329)
!22443 = !DILocation(line: 3454, column: 10, scope: !22439)
!22444 = !DILocation(line: 3454, column: 3, scope: !22439)
!22445 = !DILocation(line: 3455, column: 6, scope: !22446)
!22446 = distinct !DILexicalBlock(scope: !22329, file: !3, line: 3455, column: 6)
!22447 = !DILocation(line: 3455, column: 12, scope: !22446)
!22448 = !DILocation(line: 3455, column: 27, scope: !22446)
!22449 = !DILocation(line: 3455, column: 6, scope: !22329)
!22450 = !DILocation(line: 3456, column: 10, scope: !22446)
!22451 = !DILocation(line: 3456, column: 3, scope: !22446)
!22452 = !DILocation(line: 3458, column: 6, scope: !22453)
!22453 = distinct !DILexicalBlock(scope: !22329, file: !3, line: 3458, column: 6)
!22454 = !DILocation(line: 3458, column: 12, scope: !22453)
!22455 = !DILocation(line: 3458, column: 19, scope: !22453)
!22456 = !DILocation(line: 3458, column: 24, scope: !22453)
!22457 = !DILocation(line: 3458, column: 42, scope: !22453)
!22458 = !DILocation(line: 3459, column: 6, scope: !22453)
!22459 = !DILocation(line: 3459, column: 12, scope: !22453)
!22460 = !DILocation(line: 3459, column: 19, scope: !22453)
!22461 = !DILocation(line: 3459, column: 24, scope: !22453)
!22462 = !DILocation(line: 3458, column: 6, scope: !22329)
!22463 = !DILocation(line: 3460, column: 14, scope: !22464)
!22464 = distinct !DILexicalBlock(scope: !22453, file: !3, line: 3459, column: 43)
!22465 = !DILocation(line: 3461, column: 10, scope: !22464)
!22466 = !DILocation(line: 3461, column: 16, scope: !22464)
!22467 = !DILocation(line: 3461, column: 23, scope: !22464)
!22468 = !DILocation(line: 3461, column: 29, scope: !22464)
!22469 = !DILocation(line: 3461, column: 35, scope: !22464)
!22470 = !DILocation(line: 3461, column: 42, scope: !22464)
!22471 = !DILocation(line: 3460, column: 3, scope: !22464)
!22472 = !DILocation(line: 3462, column: 7, scope: !22473)
!22473 = distinct !DILexicalBlock(scope: !22464, file: !3, line: 3462, column: 7)
!22474 = !DILocation(line: 3462, column: 13, scope: !22473)
!22475 = !DILocation(line: 3462, column: 20, scope: !22473)
!22476 = !DILocation(line: 3462, column: 7, scope: !22464)
!22477 = !DILocation(line: 3463, column: 15, scope: !22473)
!22478 = !DILocation(line: 3463, column: 33, scope: !22473)
!22479 = !DILocation(line: 3463, column: 39, scope: !22473)
!22480 = !DILocation(line: 3463, column: 46, scope: !22473)
!22481 = !DILocation(line: 3463, column: 4, scope: !22473)
!22482 = !DILocation(line: 3464, column: 7, scope: !22483)
!22483 = distinct !DILexicalBlock(scope: !22464, file: !3, line: 3464, column: 7)
!22484 = !DILocation(line: 3464, column: 13, scope: !22483)
!22485 = !DILocation(line: 3464, column: 20, scope: !22483)
!22486 = !DILocation(line: 3464, column: 7, scope: !22464)
!22487 = !DILocation(line: 3465, column: 15, scope: !22483)
!22488 = !DILocation(line: 3465, column: 33, scope: !22483)
!22489 = !DILocation(line: 3465, column: 39, scope: !22483)
!22490 = !DILocation(line: 3465, column: 46, scope: !22483)
!22491 = !DILocation(line: 3465, column: 4, scope: !22483)
!22492 = !DILocation(line: 3466, column: 7, scope: !22493)
!22493 = distinct !DILexicalBlock(scope: !22464, file: !3, line: 3466, column: 7)
!22494 = !DILocation(line: 3466, column: 13, scope: !22493)
!22495 = !DILocation(line: 3466, column: 20, scope: !22493)
!22496 = !DILocation(line: 3466, column: 7, scope: !22464)
!22497 = !DILocation(line: 3467, column: 15, scope: !22493)
!22498 = !DILocation(line: 3467, column: 33, scope: !22493)
!22499 = !DILocation(line: 3467, column: 39, scope: !22493)
!22500 = !DILocation(line: 3467, column: 46, scope: !22493)
!22501 = !DILocation(line: 3467, column: 4, scope: !22493)
!22502 = !DILocation(line: 3468, column: 7, scope: !22503)
!22503 = distinct !DILexicalBlock(scope: !22464, file: !3, line: 3468, column: 7)
!22504 = !DILocation(line: 3468, column: 13, scope: !22503)
!22505 = !DILocation(line: 3468, column: 20, scope: !22503)
!22506 = !DILocation(line: 3468, column: 7, scope: !22464)
!22507 = !DILocation(line: 3469, column: 15, scope: !22503)
!22508 = !DILocation(line: 3469, column: 32, scope: !22503)
!22509 = !DILocation(line: 3469, column: 38, scope: !22503)
!22510 = !DILocation(line: 3469, column: 45, scope: !22503)
!22511 = !DILocation(line: 3469, column: 4, scope: !22503)
!22512 = !DILocation(line: 3470, column: 7, scope: !22513)
!22513 = distinct !DILexicalBlock(scope: !22464, file: !3, line: 3470, column: 7)
!22514 = !DILocation(line: 3470, column: 13, scope: !22513)
!22515 = !DILocation(line: 3470, column: 20, scope: !22513)
!22516 = !DILocation(line: 3470, column: 7, scope: !22464)
!22517 = !DILocation(line: 3471, column: 15, scope: !22513)
!22518 = !DILocation(line: 3471, column: 32, scope: !22513)
!22519 = !DILocation(line: 3471, column: 38, scope: !22513)
!22520 = !DILocation(line: 3471, column: 45, scope: !22513)
!22521 = !DILocation(line: 3471, column: 4, scope: !22513)
!22522 = !DILocation(line: 3472, column: 7, scope: !22523)
!22523 = distinct !DILexicalBlock(scope: !22464, file: !3, line: 3472, column: 7)
!22524 = !DILocation(line: 3472, column: 13, scope: !22523)
!22525 = !DILocation(line: 3472, column: 20, scope: !22523)
!22526 = !DILocation(line: 3472, column: 7, scope: !22464)
!22527 = !DILocation(line: 3473, column: 15, scope: !22523)
!22528 = !DILocation(line: 3473, column: 31, scope: !22523)
!22529 = !DILocation(line: 3473, column: 37, scope: !22523)
!22530 = !DILocation(line: 3473, column: 44, scope: !22523)
!22531 = !DILocation(line: 3473, column: 4, scope: !22523)
!22532 = !DILocation(line: 3474, column: 2, scope: !22464)
!22533 = !DILocation(line: 3475, column: 14, scope: !22534)
!22534 = distinct !DILexicalBlock(scope: !22453, file: !3, line: 3474, column: 9)
!22535 = !DILocation(line: 3476, column: 10, scope: !22534)
!22536 = !DILocation(line: 3476, column: 16, scope: !22534)
!22537 = !DILocation(line: 3476, column: 23, scope: !22534)
!22538 = !DILocation(line: 3476, column: 27, scope: !22534)
!22539 = !DILocation(line: 3476, column: 33, scope: !22534)
!22540 = !DILocation(line: 3476, column: 40, scope: !22534)
!22541 = !DILocation(line: 3475, column: 3, scope: !22534)
!22542 = !DILocation(line: 3477, column: 7, scope: !22543)
!22543 = distinct !DILexicalBlock(scope: !22534, file: !3, line: 3477, column: 7)
!22544 = !DILocation(line: 3477, column: 13, scope: !22543)
!22545 = !DILocation(line: 3477, column: 20, scope: !22543)
!22546 = !DILocation(line: 3477, column: 7, scope: !22534)
!22547 = !DILocation(line: 3478, column: 15, scope: !22543)
!22548 = !DILocation(line: 3478, column: 28, scope: !22543)
!22549 = !DILocation(line: 3478, column: 34, scope: !22543)
!22550 = !DILocation(line: 3478, column: 41, scope: !22543)
!22551 = !DILocation(line: 3478, column: 4, scope: !22543)
!22552 = !DILocation(line: 3479, column: 7, scope: !22553)
!22553 = distinct !DILexicalBlock(scope: !22534, file: !3, line: 3479, column: 7)
!22554 = !DILocation(line: 3479, column: 13, scope: !22553)
!22555 = !DILocation(line: 3479, column: 20, scope: !22553)
!22556 = !DILocation(line: 3479, column: 7, scope: !22534)
!22557 = !DILocation(line: 3480, column: 15, scope: !22553)
!22558 = !DILocation(line: 3480, column: 28, scope: !22553)
!22559 = !DILocation(line: 3480, column: 34, scope: !22553)
!22560 = !DILocation(line: 3480, column: 41, scope: !22553)
!22561 = !DILocation(line: 3480, column: 4, scope: !22553)
!22562 = !DILocation(line: 3481, column: 7, scope: !22563)
!22563 = distinct !DILexicalBlock(scope: !22534, file: !3, line: 3481, column: 7)
!22564 = !DILocation(line: 3481, column: 13, scope: !22563)
!22565 = !DILocation(line: 3481, column: 20, scope: !22563)
!22566 = !DILocation(line: 3481, column: 7, scope: !22534)
!22567 = !DILocation(line: 3482, column: 15, scope: !22563)
!22568 = !DILocation(line: 3482, column: 29, scope: !22563)
!22569 = !DILocation(line: 3482, column: 35, scope: !22563)
!22570 = !DILocation(line: 3482, column: 42, scope: !22563)
!22571 = !DILocation(line: 3482, column: 4, scope: !22563)
!22572 = !DILocation(line: 3483, column: 7, scope: !22573)
!22573 = distinct !DILexicalBlock(scope: !22534, file: !3, line: 3483, column: 7)
!22574 = !DILocation(line: 3483, column: 13, scope: !22573)
!22575 = !DILocation(line: 3483, column: 20, scope: !22573)
!22576 = !DILocation(line: 3483, column: 7, scope: !22534)
!22577 = !DILocation(line: 3484, column: 15, scope: !22573)
!22578 = !DILocation(line: 3484, column: 28, scope: !22573)
!22579 = !DILocation(line: 3484, column: 34, scope: !22573)
!22580 = !DILocation(line: 3484, column: 41, scope: !22573)
!22581 = !DILocation(line: 3484, column: 4, scope: !22573)
!22582 = !DILocation(line: 3488, column: 13, scope: !22329)
!22583 = !DILocation(line: 3488, column: 25, scope: !22329)
!22584 = !DILocation(line: 3488, column: 33, scope: !22329)
!22585 = !DILocation(line: 3488, column: 2, scope: !22329)
!22586 = !DILocation(line: 3490, column: 13, scope: !22329)
!22587 = !DILocation(line: 3491, column: 3, scope: !22329)
!22588 = !DILocation(line: 3491, column: 9, scope: !22329)
!22589 = !DILocation(line: 3491, column: 19, scope: !22329)
!22590 = !DILocation(line: 3491, column: 25, scope: !22329)
!22591 = !DILocation(line: 3491, column: 38, scope: !22329)
!22592 = !DILocation(line: 3491, column: 44, scope: !22329)
!22593 = !DILocation(line: 3492, column: 3, scope: !22329)
!22594 = !DILocation(line: 3492, column: 9, scope: !22329)
!22595 = !DILocation(line: 3490, column: 2, scope: !22329)
!22596 = !DILocation(line: 3494, column: 2, scope: !22329)
!22597 = !DILocation(line: 3494, column: 2, scope: !22338)
!22598 = !DILocalVariable(name: "__dummy", scope: !22599, file: !3, line: 3494, type: !312)
!22599 = distinct !DILexicalBlock(scope: !22337, file: !3, line: 3494, column: 2)
!22600 = !DILocation(line: 3494, column: 2, scope: !22599)
!22601 = !DILocalVariable(name: "__dummy2", scope: !22599, file: !3, line: 3494, type: !312)
!22602 = !DILocation(line: 3494, column: 2, scope: !22337)
!22603 = !DILocation(line: 3494, column: 2, scope: !22336)
!22604 = !DILocation(line: 3494, column: 2, scope: !22605)
!22605 = distinct !DILexicalBlock(scope: !22336, file: !3, line: 3494, column: 2)
!22606 = !DILocalVariable(name: "__dummy", scope: !22607, file: !3, line: 3494, type: !312)
!22607 = distinct !DILexicalBlock(scope: !22608, file: !3, line: 3494, column: 2)
!22608 = distinct !DILexicalBlock(scope: !22605, file: !3, line: 3494, column: 2)
!22609 = !DILocation(line: 3494, column: 2, scope: !22607)
!22610 = !DILocalVariable(name: "__dummy2", scope: !22607, file: !3, line: 3494, type: !312)
!22611 = !DILocation(line: 3494, column: 2, scope: !22608)
!22612 = !DILocation(line: 3494, column: 2, scope: !22335)
!22613 = !{i32 -2139373891}
!22614 = !DILocation(line: 3494, column: 2, scope: !22334)
!22615 = !DILocation(line: 329, column: 10, scope: !8661, inlinedAt: !22333)
!22616 = !DILocation(line: 329, column: 16, scope: !8661, inlinedAt: !22333)
!22617 = !DILocalVariable(name: "Tcsr", scope: !22618, file: !3, line: 3496, type: !581)
!22618 = distinct !DILexicalBlock(scope: !22329, file: !3, line: 3495, column: 2)
!22619 = !DILocation(line: 3496, column: 6, scope: !22618)
!22620 = !DILocation(line: 3496, column: 24, scope: !22618)
!22621 = !DILocation(line: 3496, column: 13, scope: !22618)
!22622 = !DILocalVariable(name: "Tdmr", scope: !22618, file: !3, line: 3497, type: !581)
!22623 = !DILocation(line: 3497, column: 6, scope: !22618)
!22624 = !DILocation(line: 3497, column: 27, scope: !22618)
!22625 = !DILocation(line: 3497, column: 13, scope: !22618)
!22626 = !DILocalVariable(name: "Ticr", scope: !22618, file: !3, line: 3498, type: !581)
!22627 = !DILocation(line: 3498, column: 6, scope: !22618)
!22628 = !DILocation(line: 3498, column: 24, scope: !22618)
!22629 = !DILocation(line: 3498, column: 13, scope: !22618)
!22630 = !DILocalVariable(name: "Rscr", scope: !22618, file: !3, line: 3499, type: !581)
!22631 = !DILocation(line: 3499, column: 6, scope: !22618)
!22632 = !DILocation(line: 3499, column: 24, scope: !22618)
!22633 = !DILocation(line: 3499, column: 13, scope: !22618)
!22634 = !DILocalVariable(name: "Rdmr", scope: !22618, file: !3, line: 3500, type: !581)
!22635 = !DILocation(line: 3500, column: 6, scope: !22618)
!22636 = !DILocation(line: 3500, column: 27, scope: !22618)
!22637 = !DILocation(line: 3500, column: 13, scope: !22618)
!22638 = !DILocalVariable(name: "Ricr", scope: !22618, file: !3, line: 3501, type: !581)
!22639 = !DILocation(line: 3501, column: 6, scope: !22618)
!22640 = !DILocation(line: 3501, column: 24, scope: !22618)
!22641 = !DILocation(line: 3501, column: 13, scope: !22618)
!22642 = !DILocalVariable(name: "Icr", scope: !22618, file: !3, line: 3502, type: !581)
!22643 = !DILocation(line: 3502, column: 6, scope: !22618)
!22644 = !DILocation(line: 3502, column: 23, scope: !22618)
!22645 = !DILocation(line: 3502, column: 12, scope: !22618)
!22646 = !DILocalVariable(name: "Dccr", scope: !22618, file: !3, line: 3503, type: !581)
!22647 = !DILocation(line: 3503, column: 6, scope: !22618)
!22648 = !DILocation(line: 3503, column: 24, scope: !22618)
!22649 = !DILocation(line: 3503, column: 13, scope: !22618)
!22650 = !DILocalVariable(name: "Tmr", scope: !22618, file: !3, line: 3504, type: !581)
!22651 = !DILocation(line: 3504, column: 6, scope: !22618)
!22652 = !DILocation(line: 3504, column: 23, scope: !22618)
!22653 = !DILocation(line: 3504, column: 12, scope: !22618)
!22654 = !DILocalVariable(name: "Tccr", scope: !22618, file: !3, line: 3505, type: !581)
!22655 = !DILocation(line: 3505, column: 6, scope: !22618)
!22656 = !DILocation(line: 3505, column: 24, scope: !22618)
!22657 = !DILocation(line: 3505, column: 13, scope: !22618)
!22658 = !DILocalVariable(name: "Ccar", scope: !22618, file: !3, line: 3506, type: !581)
!22659 = !DILocation(line: 3506, column: 6, scope: !22618)
!22660 = !DILocation(line: 3506, column: 18, scope: !22618)
!22661 = !DILocation(line: 3506, column: 24, scope: !22618)
!22662 = !DILocation(line: 3506, column: 32, scope: !22618)
!22663 = !DILocation(line: 3506, column: 13, scope: !22618)
!22664 = !DILocation(line: 3507, column: 13, scope: !22618)
!22665 = !DILocation(line: 3509, column: 5, scope: !22618)
!22666 = !DILocation(line: 3509, column: 10, scope: !22618)
!22667 = !DILocation(line: 3509, column: 15, scope: !22618)
!22668 = !DILocation(line: 3509, column: 20, scope: !22618)
!22669 = !DILocation(line: 3509, column: 25, scope: !22618)
!22670 = !DILocation(line: 3509, column: 30, scope: !22618)
!22671 = !DILocation(line: 3509, column: 35, scope: !22618)
!22672 = !DILocation(line: 3509, column: 39, scope: !22618)
!22673 = !DILocation(line: 3509, column: 44, scope: !22618)
!22674 = !DILocation(line: 3509, column: 48, scope: !22618)
!22675 = !DILocation(line: 3509, column: 53, scope: !22618)
!22676 = !DILocation(line: 3507, column: 2, scope: !22618)
!22677 = !DILocation(line: 3511, column: 26, scope: !22329)
!22678 = !DILocation(line: 3511, column: 32, scope: !22329)
!22679 = !DILocation(line: 3511, column: 45, scope: !22329)
!22680 = !DILocation(line: 409, column: 2, scope: !9359, inlinedAt: !22343)
!22681 = !DILocation(line: 409, column: 2, scope: !9364, inlinedAt: !22343)
!22682 = !DILocation(line: 409, column: 2, scope: !9365, inlinedAt: !22343)
!22683 = !DILocation(line: 409, column: 2, scope: !9372, inlinedAt: !22343)
!22684 = !DILocation(line: 409, column: 2, scope: !9375, inlinedAt: !22343)
!22685 = !DILocation(line: 3512, column: 1, scope: !22329)
