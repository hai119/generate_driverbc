; ModuleID = '../bcout/drivers/tty/moxa.llvm.bc'
source_filename = "drivers/tty/moxa.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_moxa_init6:\09\09\09"
module asm ".long\09moxa_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.67, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.47, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.kmem_cache = type opaque
%struct.ucounts = type opaque
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.serial_icounter_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x i32] }
%struct.serial_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, [1 x i8], i32, i16, i16, i8*, i16, i32, i64 }
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.poll_table_struct = type opaque
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.tty_buffer = type { %union.anon.32, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.32 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.33, %union.anon.34, i32 }
%struct.request_queue = type opaque
%union.anon.33 = type { %struct.list_head }
%union.anon.34 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.35 }
%struct.anon.35 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.46, i32, [12 x i8] }
%union.anon.46 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.47 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.48, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.51 }
%union.anon.48 = type { %struct.anon.49 }
%struct.anon.49 = type { i64, i64 }
%union.anon.51 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.57 = type { %struct.callback_head }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.pci_vpd = type opaque
%union.anon.67 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.moxa_board_conf = type { i32, i32, i32, i32, %struct.moxa_port*, i8*, i8*, i8*, i8* }
%struct.moxa_port = type { %struct.tty_port, %struct.moxa_board_conf*, i8*, i32, i32, i64, i8, i8, i8 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.mon_str = type { i32, [128 x i32], [128 x i32] }
%struct.firmware = type { i64, i8*, i8* }
%struct.anon.68 = type { i32, [2 x i8], i8, i8, [8 x i8], [5 x i16] }
%struct.moxaq_str = type { i32, i32 }
%struct.mxser_mstatus = type { i32, i32, i32, i32, i32 }

@__UNIQUE_ID_author240 = internal constant [25 x i8] c"moxa.author=William Chen\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_description241 = internal constant [68 x i8] c"moxa.description=MOXA Intellio Family Multiport Board Device Driver\00", section ".modinfo", align 1, !dbg !4251
@__UNIQUE_ID_file242 = internal constant [27 x i8] c"moxa.file=drivers/tty/moxa\00", section ".modinfo", align 1, !dbg !4256
@__UNIQUE_ID_license243 = internal constant [17 x i8] c"moxa.license=GPL\00", section ".modinfo", align 1, !dbg !4261
@__UNIQUE_ID_firmware244 = internal constant [27 x i8] c"moxa.firmware=c218tunx.cod\00", section ".modinfo", align 1, !dbg !4266
@__UNIQUE_ID_firmware245 = internal constant [27 x i8] c"moxa.firmware=cp204unx.cod\00", section ".modinfo", align 1, !dbg !4268
@__UNIQUE_ID_firmware246 = internal constant [27 x i8] c"moxa.firmware=c320tunx.cod\00", section ".modinfo", align 1, !dbg !4270
@__param_str_type = internal constant [10 x i8] c"moxa.type\00", align 1, !dbg !4372
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 8
@__param_arr_type = internal constant %struct.kparam_array { i32 4, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_uint, i8* bitcast ([4 x i32]* @type to i8*) }, align 8, !dbg !4377
@__param_type = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__param_str_type, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_type } }, section "__param", align 8, !dbg !4272
@__UNIQUE_ID_typetype247 = internal constant [33 x i8] c"moxa.parmtype=type:array of uint\00", section ".modinfo", align 1, !dbg !4324
@__UNIQUE_ID_type248 = internal constant [41 x i8] c"moxa.parm=type:card type: C218=2, C320=4\00", section ".modinfo", align 1, !dbg !4329
@__param_str_baseaddr = internal constant [14 x i8] c"moxa.baseaddr\00", align 1, !dbg !4382
@__param_arr_baseaddr = internal constant %struct.kparam_array { i32 4, i32 8, i32* null, %struct.kernel_param_ops* @param_ops_ulong, i8* bitcast ([4 x i64]* @baseaddr to i8*) }, align 8, !dbg !4387
@__param_baseaddr = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_baseaddr, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 2, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_baseaddr } }, section "__param", align 8, !dbg !4334
@__UNIQUE_ID_baseaddrtype249 = internal constant [38 x i8] c"moxa.parmtype=baseaddr:array of ulong\00", section ".modinfo", align 1, !dbg !4336
@__UNIQUE_ID_baseaddr250 = internal constant [32 x i8] c"moxa.parm=baseaddr:base address\00", section ".modinfo", align 1, !dbg !4341
@__param_str_numports = internal constant [14 x i8] c"moxa.numports\00", align 1, !dbg !4392
@__param_arr_numports = internal constant %struct.kparam_array { i32 4, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_uint, i8* bitcast ([4 x i32]* @numports to i8*) }, align 8, !dbg !4394
@__param_numports = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_numports, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_numports } }, section "__param", align 8, !dbg !4344
@__UNIQUE_ID_numportstype251 = internal constant [37 x i8] c"moxa.parmtype=numports:array of uint\00", section ".modinfo", align 1, !dbg !4346
@__UNIQUE_ID_numports252 = internal constant [47 x i8] c"moxa.parm=numports:numports (ignored for C218)\00", section ".modinfo", align 1, !dbg !4351
@__param_str_ttymajor = internal constant [14 x i8] c"moxa.ttymajor\00", align 1, !dbg !4398
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@ttymajor = internal global i32 172, align 4, !dbg !4400
@__param_ttymajor = internal constant %struct.kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_ttymajor, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @ttymajor to i8*) } }, section "__param", align 8, !dbg !4356
@__UNIQUE_ID_ttymajortype253 = internal constant [27 x i8] c"moxa.parmtype=ttymajor:int\00", section ".modinfo", align 1, !dbg !4358
@moxa_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([4 x %struct.pci_device_id], [4 x %struct.pci_device_id]* @moxa_pcibrds, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @moxa_pci_probe, void (%struct.pci_dev*)* @moxa_pci_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !4402
@moxa_boards = internal global [4 x %struct.moxa_board_conf] zeroinitializer, align 16, !dbg !4367
@moxaTimer = internal global %struct.timer_list { %struct.hlist_node { %struct.hlist_node* inttoptr (i64 -2401263026318605568 to %struct.hlist_node*), %struct.hlist_node** null }, i64 0, void (%struct.timer_list*)* @moxa_poll, i32 0 }, align 8, !dbg !4696
@moxaDriver = internal global %struct.tty_driver* null, align 8, !dbg !4370
@.str = private unnamed_addr constant [58 x i8] c"\013Couldn't unregister MOXA Intellio family serial driver\0A\00", align 1
@__UNIQUE_ID___addressable_moxa_init255 = internal global i8* bitcast (i32 ()* @moxa_init to i8*), section ".discard.addressable", align 8, !dbg !4360
@__exitcall_moxa_exit = internal global void ()* @moxa_exit, section ".exitcall.exit", align 8, !dbg !4362
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@type = internal global [4 x i32] zeroinitializer, align 16, !dbg !4379
@param_ops_ulong = external dso_local constant %struct.kernel_param_ops, align 8
@baseaddr = internal global [4 x i64] zeroinitializer, align 16, !dbg !4389
@numports = internal global [4 x i32] zeroinitializer, align 16, !dbg !4396
@.str.1 = private unnamed_addr constant [5 x i8] c"moxa\00", align 1
@moxa_pcibrds = internal constant [4 x %struct.pci_device_id] [%struct.pci_device_id { i32 5011, i32 8576, i32 -1, i32 -1, i32 0, i32 0, i64 1 }, %struct.pci_device_id { i32 5011, i32 12800, i32 -1, i32 -1, i32 0, i32 0, i64 3 }, %struct.pci_device_id { i32 5011, i32 8256, i32 -1, i32 -1, i32 0, i32 0, i64 5 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !4677
@.str.2 = private unnamed_addr constant [25 x i8] c"can't enable pci device\0A\00", align 1
@.str.3 = private unnamed_addr constant [67 x i8] c"more than %u MOXA Intellio family boards found. Board is ignored.\0A\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"moxa-base\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"can't request pci region 2\0A\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"can't remap io space 2\0A\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"board '%s' ready (%u ports, firmware loaded)\0A\00", align 1
@moxa_brdname = internal global [5 x i8*] [i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0)], align 16, !dbg !4691
@.str.8 = private unnamed_addr constant [36 x i8] c"\013cannot allocate memory for ports\0A\00", align 1
@moxa_port_ops = internal constant %struct.tty_port_operations { i32 (%struct.tty_port*)* @moxa_carrier_raised, void (%struct.tty_port*, i32)* @moxa_dtr_rts, void (%struct.tty_port*)* @moxa_shutdown, i32 (%struct.tty_port*, %struct.tty_struct*)* null, void (%struct.tty_port*)* null }, align 8, !dbg !4680
@.str.9 = private unnamed_addr constant [13 x i8] c"c218tunx.cod\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"cp204unx.cod\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"c320tunx.cod\00", align 1
@.str.12 = private unnamed_addr constant [125 x i8] c"\013MOXA: request_firmware failed. Make sure you've placed '%s' file into your firmware loader directory (e.g. /lib/firmware)\0A\00", align 1
@moxa_lock = internal global %struct.spinlock undef, align 1, !dbg !4689
@jiffies = external dso_local global i64, align 8
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.13 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@moxafunc_lock = internal global %struct.spinlock undef, align 1, !dbg !4682
@moxaFuncTout = internal global i32 125, align 4, !dbg !4687
@moxa_wait_finish._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !4684
@__func__.moxa_wait_finish = private unnamed_addr constant [17 x i8] c"moxa_wait_finish\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"\014moxa function expired\0A\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"too short (even header won't fit)\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"bad magic: %.8x\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"not for linux, type is %u\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"not for this card, model is %u\00", align 1
@.str.19 = private unnamed_addr constant [62 x i8] c"\014MOXA firmware: unexpected input at offset %u, but going on\0A\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"too few entries in fw file\00", align 1
@.str.21 = private unnamed_addr constant [30 x i8] c"bad length: %u (should be %u)\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"read above\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"\013firmware failed to load, reason: %s\0A\00", align 1
@.str.24 = private unnamed_addr constant [58 x i8] c"\013MOXA: bios upload failed -- CPU/Basic module not found\0A\00", align 1
@.str.25 = private unnamed_addr constant [47 x i8] c"\013MOXA: bios upload failed -- board not found\0A\00", align 1
@.str.26 = private unnamed_addr constant [39 x i8] c"\013MOXA: invalid 320 bios -- too short\0A\00", align 1
@.str.27 = private unnamed_addr constant [33 x i8] c"\013MOXA: bios length is not even\0A\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@.str.28 = private unnamed_addr constant [22 x i8] c"C218 Turbo PCI series\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"C218 Turbo ISA series\00", align 1
@.str.30 = private unnamed_addr constant [22 x i8] c"C320 Turbo PCI series\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"C320 Turbo ISA series\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"CP-204J series\00", align 1
@moxa_openlock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @moxa_openlock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @moxa_openlock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4694
@moxaLowWaterChk = internal global i32 0, align 4, !dbg !4706
@moxaLog = internal global %struct.mon_str zeroinitializer, align 4, !dbg !4698
@.str.33 = private unnamed_addr constant [42 x i8] c"\016MOXA Intellio family driver version %s\0A\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"6.0k\00", align 1
@moxa_service_port = internal global %struct.tty_port zeroinitializer, align 8, !dbg !4708
@.str.35 = private unnamed_addr constant [6 x i8] c"ttyMX\00", align 1
@tty_std_termios = external dso_local global %struct.ktermios, align 4
@moxa_ops = internal constant %struct.tty_operations { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)* null, i32 (%struct.tty_driver*, %struct.tty_struct*)* null, void (%struct.tty_driver*, %struct.tty_struct*)* null, i32 (%struct.tty_struct*, %struct.file*)* @moxa_open, void (%struct.tty_struct*, %struct.file*)* @moxa_close, void (%struct.tty_struct*)* null, void (%struct.tty_struct*)* null, i32 (%struct.tty_struct*, i8*, i32)* @moxa_write, i32 (%struct.tty_struct*, i8)* null, void (%struct.tty_struct*)* null, i32 (%struct.tty_struct*)* @moxa_write_room, i32 (%struct.tty_struct*)* @moxa_chars_in_buffer, i32 (%struct.tty_struct*, i32, i64)* @moxa_ioctl, i64 (%struct.tty_struct*, i32, i64)* null, void (%struct.tty_struct*, %struct.ktermios*)* @moxa_set_termios, void (%struct.tty_struct*)* null, void (%struct.tty_struct*)* null, void (%struct.tty_struct*)* @moxa_stop, void (%struct.tty_struct*)* @moxa_start, void (%struct.tty_struct*)* @moxa_hangup, i32 (%struct.tty_struct*, i32)* @moxa_break_ctl, void (%struct.tty_struct*)* @moxa_flush_buffer, void (%struct.tty_struct*)* null, void (%struct.tty_struct*, i32)* null, void (%struct.tty_struct*, i8)* null, i32 (%struct.tty_struct*)* @moxa_tiocmget, i32 (%struct.tty_struct*, i32, i32)* @moxa_tiocmset, i32 (%struct.tty_struct*, %struct.winsize*)* null, i32 (%struct.tty_struct*, %struct.termiox*)* null, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)* null, i32 (%struct.tty_struct*, %struct.serial_struct*)* @moxa_get_serial_info, i32 (%struct.tty_struct*, %struct.serial_struct*)* @moxa_set_serial_info, void (%struct.tty_struct*, %struct.seq_file*)* null, i32 (%struct.seq_file*, i8*)* null }, align 8, !dbg !4710
@.str.36 = private unnamed_addr constant [43 x i8] c"\013can't register MOXA Smartio tty driver!\0A\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"\013MOXA: can't remap %lx\0A\00", align 1
@.str.38 = private unnamed_addr constant [73 x i8] c"\016MOXA isa board found at 0x%.8lx and ready (%u ports, firmware loaded)\0A\00", align 1
@.str.39 = private unnamed_addr constant [35 x i8] c"\013Can't register MOXA pci driver!\0A\00", align 1
@.str.40 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@llvm.used = appending global [21 x i8*] [i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__UNIQUE_ID_author240, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__UNIQUE_ID_description241, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_file242, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__UNIQUE_ID_license243, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_firmware244, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_firmware245, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_firmware246, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_type to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_typetype247, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_type248, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_baseaddr to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_baseaddrtype249, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_baseaddr250, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_numports to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_numportstype251, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__UNIQUE_ID_numports252, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ttymajor to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_ttymajortype253, i32 0, i32 0), i8* bitcast (void ()* @moxa_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_moxa_init255 to i8*), i8* bitcast (void ()** @__exitcall_moxa_exit to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @moxa_exit() #0 section ".exit.text" !dbg !4721 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4722, metadata !DIExpression()), !dbg !4723
  call void @pci_unregister_driver(%struct.pci_driver* @moxa_pci_driver) #12, !dbg !4724
  store i32 0, i32* %i, align 4, !dbg !4725
  br label %for.cond, !dbg !4727

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4728
  %cmp = icmp ult i32 %0, 4, !dbg !4730
  br i1 %cmp, label %for.body, label %for.end, !dbg !4731

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !4732
  %idxprom = zext i32 %1 to i64, !dbg !4734
  %arrayidx = getelementptr [4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 %idxprom, !dbg !4734
  %ready = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %arrayidx, i32 0, i32 3, !dbg !4735
  %2 = load i32, i32* %ready, align 4, !dbg !4735
  %tobool = icmp ne i32 %2, 0, !dbg !4734
  br i1 %tobool, label %if.then, label %if.end, !dbg !4736

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !4737
  %idxprom1 = zext i32 %3 to i64, !dbg !4738
  %arrayidx2 = getelementptr [4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 %idxprom1, !dbg !4738
  call void @moxa_board_deinit(%struct.moxa_board_conf* %arrayidx2) #12, !dbg !4739
  br label %if.end, !dbg !4739

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4735

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4, !dbg !4740
  %inc = add i32 %4, 1, !dbg !4740
  store i32 %inc, i32* %i, align 4, !dbg !4740
  br label %for.cond, !dbg !4741, !llvm.loop !4742

for.end:                                          ; preds = %for.cond
  %call = call i32 @del_timer(%struct.timer_list* @moxaTimer) #12, !dbg !4744
  %5 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4745
  %call3 = call i32 @tty_unregister_driver(%struct.tty_driver* %5) #12, !dbg !4747
  %tobool4 = icmp ne i32 %call3, 0, !dbg !4747
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !4748

if.then5:                                         ; preds = %for.end
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0)) #13, !dbg !4749
  br label %if.end7, !dbg !4749

if.end7:                                          ; preds = %if.then5, %for.end
  %6 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4750
  call void @put_tty_driver(%struct.tty_driver* %6) #12, !dbg !4751
  ret void, !dbg !4752
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_board_deinit(%struct.moxa_board_conf* %brd) #3 !dbg !4753 {
entry:
  %brd.addr = alloca %struct.moxa_board_conf*, align 8
  %a = alloca i32, align 4
  %opened = alloca i32, align 4
  %first_idx = alloca i32, align 4
  store %struct.moxa_board_conf* %brd, %struct.moxa_board_conf** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd.addr, metadata !4756, metadata !DIExpression()), !dbg !4757
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4758, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.declare(metadata i32* %opened, metadata !4760, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.declare(metadata i32* %first_idx, metadata !4762, metadata !DIExpression()), !dbg !4763
  call void @mutex_lock(%struct.mutex* @moxa_openlock) #12, !dbg !4764
  call void @spin_lock_bh(%struct.spinlock* @moxa_lock) #12, !dbg !4765
  %0 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4766
  %ready = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %0, i32 0, i32 3, !dbg !4767
  store i32 0, i32* %ready, align 4, !dbg !4768
  call void @spin_unlock_bh(%struct.spinlock* @moxa_lock) #12, !dbg !4769
  store i32 0, i32* %a, align 4, !dbg !4770
  br label %for.cond, !dbg !4772

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a, align 4, !dbg !4773
  %2 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4775
  %numPorts = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %2, i32 0, i32 1, !dbg !4776
  %3 = load i32, i32* %numPorts, align 4, !dbg !4776
  %cmp = icmp ult i32 %1, %3, !dbg !4777
  br i1 %cmp, label %for.body, label %for.end, !dbg !4778

for.body:                                         ; preds = %for.cond
  %4 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4779
  %ports = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %4, i32 0, i32 4, !dbg !4781
  %5 = load %struct.moxa_port*, %struct.moxa_port** %ports, align 8, !dbg !4781
  %6 = load i32, i32* %a, align 4, !dbg !4782
  %idxprom = zext i32 %6 to i64, !dbg !4779
  %arrayidx = getelementptr %struct.moxa_port, %struct.moxa_port* %5, i64 %idxprom, !dbg !4779
  %port = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %arrayidx, i32 0, i32 0, !dbg !4783
  %call = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #12, !dbg !4784
  br i1 %call, label %if.then, label %if.end, !dbg !4785

if.then:                                          ; preds = %for.body
  %7 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4786
  %ports1 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %7, i32 0, i32 4, !dbg !4787
  %8 = load %struct.moxa_port*, %struct.moxa_port** %ports1, align 8, !dbg !4787
  %9 = load i32, i32* %a, align 4, !dbg !4788
  %idxprom2 = zext i32 %9 to i64, !dbg !4786
  %arrayidx3 = getelementptr %struct.moxa_port, %struct.moxa_port* %8, i64 %idxprom2, !dbg !4786
  %port4 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %arrayidx3, i32 0, i32 0, !dbg !4789
  call void @tty_port_tty_hangup(%struct.tty_port* %port4, i1 zeroext false) #12, !dbg !4790
  br label %if.end, !dbg !4790

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4791

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %a, align 4, !dbg !4792
  %inc = add i32 %10, 1, !dbg !4792
  store i32 %inc, i32* %a, align 4, !dbg !4792
  br label %for.cond, !dbg !4793, !llvm.loop !4794

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %a, align 4, !dbg !4796
  br label %for.cond5, !dbg !4798

for.cond5:                                        ; preds = %for.inc12, %for.end
  %11 = load i32, i32* %a, align 4, !dbg !4799
  %cmp6 = icmp ult i32 %11, 32, !dbg !4801
  br i1 %cmp6, label %for.body7, label %for.end14, !dbg !4802

for.body7:                                        ; preds = %for.cond5
  %12 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4803
  %ports8 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %12, i32 0, i32 4, !dbg !4804
  %13 = load %struct.moxa_port*, %struct.moxa_port** %ports8, align 8, !dbg !4804
  %14 = load i32, i32* %a, align 4, !dbg !4805
  %idxprom9 = zext i32 %14 to i64, !dbg !4803
  %arrayidx10 = getelementptr %struct.moxa_port, %struct.moxa_port* %13, i64 %idxprom9, !dbg !4803
  %port11 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %arrayidx10, i32 0, i32 0, !dbg !4806
  call void @tty_port_destroy(%struct.tty_port* %port11) #12, !dbg !4807
  br label %for.inc12, !dbg !4807

for.inc12:                                        ; preds = %for.body7
  %15 = load i32, i32* %a, align 4, !dbg !4808
  %inc13 = add i32 %15, 1, !dbg !4808
  store i32 %inc13, i32* %a, align 4, !dbg !4808
  br label %for.cond5, !dbg !4809, !llvm.loop !4810

for.end14:                                        ; preds = %for.cond5
  br label %while.body, !dbg !4812

while.body:                                       ; preds = %for.end14, %if.end31
  store i32 0, i32* %opened, align 4, !dbg !4813
  store i32 0, i32* %a, align 4, !dbg !4815
  br label %for.cond15, !dbg !4817

for.cond15:                                       ; preds = %for.inc27, %while.body
  %16 = load i32, i32* %a, align 4, !dbg !4818
  %17 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4820
  %numPorts16 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %17, i32 0, i32 1, !dbg !4821
  %18 = load i32, i32* %numPorts16, align 4, !dbg !4821
  %cmp17 = icmp ult i32 %16, %18, !dbg !4822
  br i1 %cmp17, label %for.body18, label %for.end29, !dbg !4823

for.body18:                                       ; preds = %for.cond15
  %19 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4824
  %ports19 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %19, i32 0, i32 4, !dbg !4826
  %20 = load %struct.moxa_port*, %struct.moxa_port** %ports19, align 8, !dbg !4826
  %21 = load i32, i32* %a, align 4, !dbg !4827
  %idxprom20 = zext i32 %21 to i64, !dbg !4824
  %arrayidx21 = getelementptr %struct.moxa_port, %struct.moxa_port* %20, i64 %idxprom20, !dbg !4824
  %port22 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %arrayidx21, i32 0, i32 0, !dbg !4828
  %call23 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port22) #12, !dbg !4829
  br i1 %call23, label %if.then24, label %if.end26, !dbg !4830

if.then24:                                        ; preds = %for.body18
  %22 = load i32, i32* %opened, align 4, !dbg !4831
  %inc25 = add i32 %22, 1, !dbg !4831
  store i32 %inc25, i32* %opened, align 4, !dbg !4831
  br label %if.end26, !dbg !4832

if.end26:                                         ; preds = %if.then24, %for.body18
  br label %for.inc27, !dbg !4833

for.inc27:                                        ; preds = %if.end26
  %23 = load i32, i32* %a, align 4, !dbg !4834
  %inc28 = add i32 %23, 1, !dbg !4834
  store i32 %inc28, i32* %a, align 4, !dbg !4834
  br label %for.cond15, !dbg !4835, !llvm.loop !4836

for.end29:                                        ; preds = %for.cond15
  call void @mutex_unlock(%struct.mutex* @moxa_openlock) #12, !dbg !4838
  %24 = load i32, i32* %opened, align 4, !dbg !4839
  %tobool = icmp ne i32 %24, 0, !dbg !4839
  br i1 %tobool, label %if.end31, label %if.then30, !dbg !4841

if.then30:                                        ; preds = %for.end29
  br label %while.end, !dbg !4842

if.end31:                                         ; preds = %for.end29
  call void @msleep(i32 50) #12, !dbg !4843
  call void @mutex_lock(%struct.mutex* @moxa_openlock) #12, !dbg !4844
  br label %while.body, !dbg !4812, !llvm.loop !4845

while.end:                                        ; preds = %if.then30
  %25 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4847
  %sub.ptr.lhs.cast = ptrtoint %struct.moxa_board_conf* %25 to i64, !dbg !4848
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([4 x %struct.moxa_board_conf]* @moxa_boards to i64), !dbg !4848
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 56, !dbg !4848
  %mul = mul i64 %sub.ptr.div, 32, !dbg !4849
  %conv = trunc i64 %mul to i32, !dbg !4850
  store i32 %conv, i32* %first_idx, align 4, !dbg !4851
  store i32 0, i32* %a, align 4, !dbg !4852
  br label %for.cond32, !dbg !4854

for.cond32:                                       ; preds = %for.inc37, %while.end
  %26 = load i32, i32* %a, align 4, !dbg !4855
  %27 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4857
  %numPorts33 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %27, i32 0, i32 1, !dbg !4858
  %28 = load i32, i32* %numPorts33, align 4, !dbg !4858
  %cmp34 = icmp ult i32 %26, %28, !dbg !4859
  br i1 %cmp34, label %for.body36, label %for.end39, !dbg !4860

for.body36:                                       ; preds = %for.cond32
  %29 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4861
  %30 = load i32, i32* %first_idx, align 4, !dbg !4862
  %31 = load i32, i32* %a, align 4, !dbg !4863
  %add = add i32 %30, %31, !dbg !4864
  call void @tty_unregister_device(%struct.tty_driver* %29, i32 %add) #12, !dbg !4865
  br label %for.inc37, !dbg !4865

for.inc37:                                        ; preds = %for.body36
  %32 = load i32, i32* %a, align 4, !dbg !4866
  %inc38 = add i32 %32, 1, !dbg !4866
  store i32 %inc38, i32* %a, align 4, !dbg !4866
  br label %for.cond32, !dbg !4867, !llvm.loop !4868

for.end39:                                        ; preds = %for.cond32
  %33 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4870
  %basemem = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %33, i32 0, i32 5, !dbg !4871
  %34 = load i8*, i8** %basemem, align 8, !dbg !4871
  call void @iounmap(i8* %34) #12, !dbg !4872
  %35 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4873
  %basemem40 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %35, i32 0, i32 5, !dbg !4874
  store i8* null, i8** %basemem40, align 8, !dbg !4875
  %36 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !4876
  %ports41 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %36, i32 0, i32 4, !dbg !4877
  %37 = load %struct.moxa_port*, %struct.moxa_port** %ports41, align 8, !dbg !4877
  %38 = bitcast %struct.moxa_port* %37 to i8*, !dbg !4876
  call void @kfree(i8* %38) #12, !dbg !4878
  ret void, !dbg !4879
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: noredzone
declare dso_local i32 @tty_unregister_driver(%struct.tty_driver*) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @put_tty_driver(%struct.tty_driver*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_init() #0 section ".init.text" !dbg !4880 {
entry:
  %retval = alloca i32, align 4
  %isabrds = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %brd = alloca %struct.moxa_board_conf*, align 8
  %i = alloca i32, align 4
  %tmp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %isabrds, metadata !4883, metadata !DIExpression()), !dbg !4884
  store i32 0, i32* %isabrds, align 4, !dbg !4884
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4885, metadata !DIExpression()), !dbg !4886
  store i32 0, i32* %retval1, align 4, !dbg !4886
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd, metadata !4887, metadata !DIExpression()), !dbg !4888
  store %struct.moxa_board_conf* getelementptr inbounds ([4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 0), %struct.moxa_board_conf** %brd, align 8, !dbg !4888
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4889, metadata !DIExpression()), !dbg !4890
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0)) #13, !dbg !4891
  call void @tty_port_init(%struct.tty_port* @moxa_service_port) #12, !dbg !4892
  %call2 = call %struct.tty_driver* @__tty_alloc_driver(i32 129, %struct.module* null, i64 12) #12, !dbg !4893
  store %struct.tty_driver* %call2, %struct.tty_driver** @moxaDriver, align 8, !dbg !4894
  %0 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4895
  %1 = bitcast %struct.tty_driver* %0 to i8*, !dbg !4895
  %call3 = call zeroext i1 @IS_ERR(i8* %1) #12, !dbg !4897
  br i1 %call3, label %if.then, label %if.end, !dbg !4898

if.then:                                          ; preds = %entry
  %2 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4899
  %3 = bitcast %struct.tty_driver* %2 to i8*, !dbg !4899
  %call4 = call i64 @PTR_ERR(i8* %3) #12, !dbg !4900
  %conv = trunc i64 %call4 to i32, !dbg !4900
  store i32 %conv, i32* %retval, align 4, !dbg !4901
  br label %return, !dbg !4901

if.end:                                           ; preds = %entry
  %4 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4902
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %4, i32 0, i32 5, !dbg !4903
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i8** %name, align 8, !dbg !4904
  %5 = load i32, i32* @ttymajor, align 4, !dbg !4905
  %6 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4906
  %major = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %6, i32 0, i32 7, !dbg !4907
  store i32 %5, i32* %major, align 4, !dbg !4908
  %7 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4909
  %minor_start = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %7, i32 0, i32 8, !dbg !4910
  store i32 0, i32* %minor_start, align 8, !dbg !4911
  %8 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4912
  %type = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %8, i32 0, i32 10, !dbg !4913
  store i16 3, i16* %type, align 8, !dbg !4914
  %9 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4915
  %subtype = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %9, i32 0, i32 11, !dbg !4916
  store i16 1, i16* %subtype, align 2, !dbg !4917
  %10 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4918
  %init_termios = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %10, i32 0, i32 12, !dbg !4919
  %11 = bitcast %struct.ktermios* %init_termios to i8*, !dbg !4920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 bitcast (%struct.ktermios* @tty_std_termios to i8*), i64 44, i1 false), !dbg !4920
  %12 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4921
  %init_termios5 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %12, i32 0, i32 12, !dbg !4922
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios5, i32 0, i32 2, !dbg !4923
  store i32 3261, i32* %c_cflag, align 4, !dbg !4924
  %13 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4925
  %init_termios6 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %13, i32 0, i32 12, !dbg !4926
  %c_ispeed = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios6, i32 0, i32 6, !dbg !4927
  store i32 9600, i32* %c_ispeed, align 4, !dbg !4928
  %14 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4929
  %init_termios7 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %14, i32 0, i32 12, !dbg !4930
  %c_ospeed = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios7, i32 0, i32 7, !dbg !4931
  store i32 9600, i32* %c_ospeed, align 4, !dbg !4932
  %15 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4933
  call void @tty_set_operations(%struct.tty_driver* %15, %struct.tty_operations* @moxa_ops) #12, !dbg !4934
  %16 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4935
  call void @tty_port_link_device(%struct.tty_port* @moxa_service_port, %struct.tty_driver* %16, i32 128) #12, !dbg !4936
  %17 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4937
  %call8 = call i32 @tty_register_driver(%struct.tty_driver* %17) #12, !dbg !4939
  %tobool = icmp ne i32 %call8, 0, !dbg !4939
  br i1 %tobool, label %if.then9, label %if.end11, !dbg !4940

if.then9:                                         ; preds = %if.end
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.36, i64 0, i64 0)) #13, !dbg !4941
  %18 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !4943
  call void @put_tty_driver(%struct.tty_driver* %18) #12, !dbg !4944
  store i32 -1, i32* %retval, align 4, !dbg !4945
  br label %return, !dbg !4945

if.end11:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !4946
  br label %for.cond, !dbg !4948

for.cond:                                         ; preds = %for.inc, %if.end11
  %19 = load i32, i32* %i, align 4, !dbg !4949
  %cmp = icmp ult i32 %19, 4, !dbg !4951
  br i1 %cmp, label %for.body, label %for.end, !dbg !4952

for.body:                                         ; preds = %for.cond
  %20 = load i32, i32* %i, align 4, !dbg !4953
  %idxprom = zext i32 %20 to i64, !dbg !4956
  %arrayidx = getelementptr [4 x i64], [4 x i64]* @baseaddr, i64 0, i64 %idxprom, !dbg !4956
  %21 = load i64, i64* %arrayidx, align 8, !dbg !4956
  %tobool13 = icmp ne i64 %21, 0, !dbg !4956
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !4957

if.then14:                                        ; preds = %for.body
  br label %for.end, !dbg !4958

if.end15:                                         ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !4959
  %idxprom16 = zext i32 %22 to i64, !dbg !4961
  %arrayidx17 = getelementptr [4 x i32], [4 x i32]* @type, i64 0, i64 %idxprom16, !dbg !4961
  %23 = load i32, i32* %arrayidx17, align 4, !dbg !4961
  %cmp18 = icmp eq i32 %23, 2, !dbg !4962
  br i1 %cmp18, label %if.then24, label %lor.lhs.false, !dbg !4963

lor.lhs.false:                                    ; preds = %if.end15
  %24 = load i32, i32* %i, align 4, !dbg !4964
  %idxprom20 = zext i32 %24 to i64, !dbg !4965
  %arrayidx21 = getelementptr [4 x i32], [4 x i32]* @type, i64 0, i64 %idxprom20, !dbg !4965
  %25 = load i32, i32* %arrayidx21, align 4, !dbg !4965
  %cmp22 = icmp eq i32 %25, 4, !dbg !4966
  br i1 %cmp22, label %if.then24, label %if.end53, !dbg !4967

if.then24:                                        ; preds = %lor.lhs.false, %if.end15
  store i32 0, i32* %tmp, align 4, !dbg !4968
  %26 = load i32, i32* %tmp, align 4, !dbg !4972
  %27 = load i32, i32* %i, align 4, !dbg !4973
  %idxprom25 = zext i32 %27 to i64, !dbg !4974
  %arrayidx26 = getelementptr [4 x i32], [4 x i32]* @type, i64 0, i64 %idxprom25, !dbg !4974
  %28 = load i32, i32* %arrayidx26, align 4, !dbg !4974
  %29 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !4975
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %29, i32 0, i32 0, !dbg !4976
  store i32 %28, i32* %boardType, align 8, !dbg !4977
  %30 = load i32, i32* %i, align 4, !dbg !4978
  %idxprom27 = zext i32 %30 to i64, !dbg !4979
  %arrayidx28 = getelementptr [4 x i32], [4 x i32]* @type, i64 0, i64 %idxprom27, !dbg !4979
  %31 = load i32, i32* %arrayidx28, align 4, !dbg !4979
  %cmp29 = icmp eq i32 %31, 2, !dbg !4980
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !4979

cond.true:                                        ; preds = %if.then24
  br label %cond.end, !dbg !4979

cond.false:                                       ; preds = %if.then24
  %32 = load i32, i32* %i, align 4, !dbg !4981
  %idxprom31 = zext i32 %32 to i64, !dbg !4982
  %arrayidx32 = getelementptr [4 x i32], [4 x i32]* @numports, i64 0, i64 %idxprom31, !dbg !4982
  %33 = load i32, i32* %arrayidx32, align 4, !dbg !4982
  br label %cond.end, !dbg !4979

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 8, %cond.true ], [ %33, %cond.false ], !dbg !4979
  %34 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !4983
  %numPorts = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %34, i32 0, i32 1, !dbg !4984
  store i32 %cond, i32* %numPorts, align 4, !dbg !4985
  %35 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !4986
  %busType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %35, i32 0, i32 2, !dbg !4987
  store i32 0, i32* %busType, align 8, !dbg !4988
  %36 = load i32, i32* %i, align 4, !dbg !4989
  %idxprom33 = zext i32 %36 to i64, !dbg !4990
  %arrayidx34 = getelementptr [4 x i64], [4 x i64]* @baseaddr, i64 0, i64 %idxprom33, !dbg !4990
  %37 = load i64, i64* %arrayidx34, align 8, !dbg !4990
  %call35 = call i8* @ioremap(i64 %37, i64 16384) #12, !dbg !4991
  %38 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !4992
  %basemem = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %38, i32 0, i32 5, !dbg !4993
  store i8* %call35, i8** %basemem, align 8, !dbg !4994
  %39 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !4995
  %basemem36 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %39, i32 0, i32 5, !dbg !4997
  %40 = load i8*, i8** %basemem36, align 8, !dbg !4997
  %tobool37 = icmp ne i8* %40, null, !dbg !4995
  br i1 %tobool37, label %if.end42, label %if.then38, !dbg !4998

if.then38:                                        ; preds = %cond.end
  %41 = load i32, i32* %i, align 4, !dbg !4999
  %idxprom39 = zext i32 %41 to i64, !dbg !5001
  %arrayidx40 = getelementptr [4 x i64], [4 x i64]* @baseaddr, i64 0, i64 %idxprom39, !dbg !5001
  %42 = load i64, i64* %arrayidx40, align 8, !dbg !5001
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i64 0, i64 0), i64 %42) #13, !dbg !5002
  br label %for.inc, !dbg !5003

if.end42:                                         ; preds = %cond.end
  %43 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !5004
  %call43 = call i32 @moxa_init_board(%struct.moxa_board_conf* %43, %struct.device* null) #12, !dbg !5006
  %tobool44 = icmp ne i32 %call43, 0, !dbg !5006
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !5007

if.then45:                                        ; preds = %if.end42
  %44 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !5008
  %basemem46 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %44, i32 0, i32 5, !dbg !5010
  %45 = load i8*, i8** %basemem46, align 8, !dbg !5010
  call void @iounmap(i8* %45) #12, !dbg !5011
  %46 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !5012
  %basemem47 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %46, i32 0, i32 5, !dbg !5013
  store i8* null, i8** %basemem47, align 8, !dbg !5014
  br label %for.inc, !dbg !5015

if.end48:                                         ; preds = %if.end42
  %47 = load i32, i32* %i, align 4, !dbg !5016
  %idxprom49 = zext i32 %47 to i64, !dbg !5017
  %arrayidx50 = getelementptr [4 x i64], [4 x i64]* @baseaddr, i64 0, i64 %idxprom49, !dbg !5017
  %48 = load i64, i64* %arrayidx50, align 8, !dbg !5017
  %49 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !5018
  %numPorts51 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %49, i32 0, i32 1, !dbg !5019
  %50 = load i32, i32* %numPorts51, align 4, !dbg !5019
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.38, i64 0, i64 0), i64 %48, i32 %50) #13, !dbg !5020
  %51 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !5021
  %incdec.ptr = getelementptr %struct.moxa_board_conf, %struct.moxa_board_conf* %51, i32 1, !dbg !5021
  store %struct.moxa_board_conf* %incdec.ptr, %struct.moxa_board_conf** %brd, align 8, !dbg !5021
  %52 = load i32, i32* %isabrds, align 4, !dbg !5022
  %inc = add i32 %52, 1, !dbg !5022
  store i32 %inc, i32* %isabrds, align 4, !dbg !5022
  br label %if.end53, !dbg !5023

if.end53:                                         ; preds = %if.end48, %lor.lhs.false
  br label %for.inc, !dbg !5024

for.inc:                                          ; preds = %if.end53, %if.then45, %if.then38
  %53 = load i32, i32* %i, align 4, !dbg !5025
  %inc54 = add i32 %53, 1, !dbg !5025
  store i32 %inc54, i32* %i, align 4, !dbg !5025
  br label %for.cond, !dbg !5026, !llvm.loop !5027

for.end:                                          ; preds = %if.then14, %for.cond
  %call55 = call i32 @__pci_register_driver(%struct.pci_driver* @moxa_pci_driver, %struct.module* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !5029
  store i32 %call55, i32* %retval1, align 4, !dbg !5030
  %54 = load i32, i32* %retval1, align 4, !dbg !5031
  %tobool56 = icmp ne i32 %54, 0, !dbg !5031
  br i1 %tobool56, label %if.then57, label %if.end62, !dbg !5033

if.then57:                                        ; preds = %for.end
  %call58 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.39, i64 0, i64 0)) #13, !dbg !5034
  %55 = load i32, i32* %isabrds, align 4, !dbg !5036
  %tobool59 = icmp ne i32 %55, 0, !dbg !5036
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !5038

if.then60:                                        ; preds = %if.then57
  store i32 0, i32* %retval1, align 4, !dbg !5039
  br label %if.end61, !dbg !5040

if.end61:                                         ; preds = %if.then60, %if.then57
  br label %if.end62, !dbg !5041

if.end62:                                         ; preds = %if.end61, %for.end
  %56 = load i32, i32* %retval1, align 4, !dbg !5042
  store i32 %56, i32* %retval, align 4, !dbg !5043
  br label %return, !dbg !5043

return:                                           ; preds = %if.end62, %if.then9, %if.then
  %57 = load i32, i32* %retval, align 4, !dbg !5044
  ret i32 %57, !dbg !5044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_pci_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #3 !dbg !5045 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %board = alloca %struct.moxa_board_conf*, align 8
  %i = alloca i32, align 4
  %board_type = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5046, metadata !DIExpression()), !dbg !5047
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !5048, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %board, metadata !5050, metadata !DIExpression()), !dbg !5051
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5052, metadata !DIExpression()), !dbg !5053
  call void @llvm.dbg.declare(metadata i32* %board_type, metadata !5054, metadata !DIExpression()), !dbg !5055
  %0 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !5056
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %0, i32 0, i32 6, !dbg !5057
  %1 = load i64, i64* %driver_data, align 8, !dbg !5057
  %conv = trunc i64 %1 to i32, !dbg !5056
  store i32 %conv, i32* %board_type, align 4, !dbg !5055
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5058, metadata !DIExpression()), !dbg !5059
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5060
  %call = call i32 @pci_enable_device(%struct.pci_dev* %2) #12, !dbg !5061
  store i32 %call, i32* %retval1, align 4, !dbg !5062
  %3 = load i32, i32* %retval1, align 4, !dbg !5063
  %tobool = icmp ne i32 %3, 0, !dbg !5063
  br i1 %tobool, label %if.then, label %if.end, !dbg !5065

if.then:                                          ; preds = %entry
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5066
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !5066
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !5066
  br label %err, !dbg !5068

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !5069
  br label %for.cond, !dbg !5071

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !5072
  %cmp = icmp ult i32 %5, 4, !dbg !5074
  br i1 %cmp, label %for.body, label %for.end, !dbg !5075

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !5076
  %idxprom = zext i32 %6 to i64, !dbg !5078
  %arrayidx = getelementptr [4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 %idxprom, !dbg !5078
  %basemem = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %arrayidx, i32 0, i32 5, !dbg !5079
  %7 = load i8*, i8** %basemem, align 8, !dbg !5079
  %cmp3 = icmp eq i8* %7, null, !dbg !5080
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !5081

if.then5:                                         ; preds = %for.body
  br label %for.end, !dbg !5082

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !5083

for.inc:                                          ; preds = %if.end6
  %8 = load i32, i32* %i, align 4, !dbg !5084
  %inc = add i32 %8, 1, !dbg !5084
  store i32 %inc, i32* %i, align 4, !dbg !5084
  br label %for.cond, !dbg !5085, !llvm.loop !5086

for.end:                                          ; preds = %if.then5, %for.cond
  store i32 -19, i32* %retval1, align 4, !dbg !5088
  %9 = load i32, i32* %i, align 4, !dbg !5089
  %cmp7 = icmp uge i32 %9, 4, !dbg !5091
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !5092

if.then9:                                         ; preds = %for.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5093
  %dev10 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 41, !dbg !5093
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev10, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3, i64 0, i64 0), i32 4) #13, !dbg !5093
  br label %err, !dbg !5095

if.end11:                                         ; preds = %for.end
  %11 = load i32, i32* %i, align 4, !dbg !5096
  %idxprom12 = zext i32 %11 to i64, !dbg !5097
  %arrayidx13 = getelementptr [4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 %idxprom12, !dbg !5097
  store %struct.moxa_board_conf* %arrayidx13, %struct.moxa_board_conf** %board, align 8, !dbg !5098
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5099
  %call14 = call i32 @pci_request_region(%struct.pci_dev* %12, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !5100
  store i32 %call14, i32* %retval1, align 4, !dbg !5101
  %13 = load i32, i32* %retval1, align 4, !dbg !5102
  %tobool15 = icmp ne i32 %13, 0, !dbg !5102
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !5104

if.then16:                                        ; preds = %if.end11
  %14 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5105
  %dev17 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %14, i32 0, i32 41, !dbg !5105
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev17, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !5105
  br label %err, !dbg !5107

if.end18:                                         ; preds = %if.end11
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5108
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %15, i32 0, i32 44, !dbg !5108
  %arrayidx19 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 2, !dbg !5108
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx19, i32 0, i32 0, !dbg !5108
  %16 = load i64, i64* %start, align 8, !dbg !5108
  %call20 = call i8* @ioremap(i64 %16, i64 16384) #12, !dbg !5109
  %17 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5110
  %basemem21 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %17, i32 0, i32 5, !dbg !5111
  store i8* %call20, i8** %basemem21, align 8, !dbg !5112
  %18 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5113
  %basemem22 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %18, i32 0, i32 5, !dbg !5115
  %19 = load i8*, i8** %basemem22, align 8, !dbg !5115
  %cmp23 = icmp eq i8* %19, null, !dbg !5116
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !5117

if.then25:                                        ; preds = %if.end18
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5118
  %dev26 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !5118
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev26, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !5118
  store i32 -12, i32* %retval1, align 4, !dbg !5120
  br label %err_reg, !dbg !5121

if.end27:                                         ; preds = %if.end18
  %21 = load i32, i32* %board_type, align 4, !dbg !5122
  %22 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5123
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %22, i32 0, i32 0, !dbg !5124
  store i32 %21, i32* %boardType, align 8, !dbg !5125
  %23 = load i32, i32* %board_type, align 4, !dbg !5126
  switch i32 %23, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb
    i32 5, label %sw.bb28
  ], !dbg !5127

sw.bb:                                            ; preds = %if.end27, %if.end27
  %24 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5128
  %numPorts = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %24, i32 0, i32 1, !dbg !5130
  store i32 8, i32* %numPorts, align 4, !dbg !5131
  br label %sw.epilog, !dbg !5132

sw.bb28:                                          ; preds = %if.end27
  %25 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5133
  %numPorts29 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %25, i32 0, i32 1, !dbg !5134
  store i32 4, i32* %numPorts29, align 4, !dbg !5135
  br label %sw.epilog, !dbg !5136

sw.default:                                       ; preds = %if.end27
  %26 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5137
  %numPorts30 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %26, i32 0, i32 1, !dbg !5138
  store i32 0, i32* %numPorts30, align 4, !dbg !5139
  br label %sw.epilog, !dbg !5140

sw.epilog:                                        ; preds = %sw.default, %sw.bb28, %sw.bb
  %27 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5141
  %busType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %27, i32 0, i32 2, !dbg !5142
  store i32 1, i32* %busType, align 8, !dbg !5143
  %28 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5144
  %29 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5145
  %dev31 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %29, i32 0, i32 41, !dbg !5146
  %call32 = call i32 @moxa_init_board(%struct.moxa_board_conf* %28, %struct.device* %dev31) #12, !dbg !5147
  store i32 %call32, i32* %retval1, align 4, !dbg !5148
  %30 = load i32, i32* %retval1, align 4, !dbg !5149
  %tobool33 = icmp ne i32 %30, 0, !dbg !5149
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !5151

if.then34:                                        ; preds = %sw.epilog
  br label %err_base, !dbg !5152

if.end35:                                         ; preds = %sw.epilog
  %31 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5153
  %32 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5154
  %33 = bitcast %struct.moxa_board_conf* %32 to i8*, !dbg !5154
  call void @pci_set_drvdata(%struct.pci_dev* %31, i8* %33) #12, !dbg !5155
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5156
  %dev36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 41, !dbg !5156
  %35 = load i32, i32* %board_type, align 4, !dbg !5156
  %sub = sub i32 %35, 1, !dbg !5156
  %idxprom37 = sext i32 %sub to i64, !dbg !5156
  %arrayidx38 = getelementptr [5 x i8*], [5 x i8*]* @moxa_brdname, i64 0, i64 %idxprom37, !dbg !5156
  %36 = load i8*, i8** %arrayidx38, align 8, !dbg !5156
  %37 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5156
  %numPorts39 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %37, i32 0, i32 1, !dbg !5156
  %38 = load i32, i32* %numPorts39, align 4, !dbg !5156
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev36, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i8* %36, i32 %38) #13, !dbg !5156
  store i32 0, i32* %retval, align 4, !dbg !5157
  br label %return, !dbg !5157

err_base:                                         ; preds = %if.then34
  call void @llvm.dbg.label(metadata !5158), !dbg !5159
  %39 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5160
  %basemem40 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %39, i32 0, i32 5, !dbg !5161
  %40 = load i8*, i8** %basemem40, align 8, !dbg !5161
  call void @iounmap(i8* %40) #12, !dbg !5162
  %41 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !5163
  %basemem41 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %41, i32 0, i32 5, !dbg !5164
  store i8* null, i8** %basemem41, align 8, !dbg !5165
  br label %err_reg, !dbg !5163

err_reg:                                          ; preds = %err_base, %if.then25
  call void @llvm.dbg.label(metadata !5166), !dbg !5167
  %42 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5168
  call void @pci_release_region(%struct.pci_dev* %42, i32 2) #12, !dbg !5169
  br label %err, !dbg !5169

err:                                              ; preds = %err_reg, %if.then16, %if.then9, %if.then
  call void @llvm.dbg.label(metadata !5170), !dbg !5171
  %43 = load i32, i32* %retval1, align 4, !dbg !5172
  store i32 %43, i32* %retval, align 4, !dbg !5173
  br label %return, !dbg !5173

return:                                           ; preds = %err, %if.end35
  %44 = load i32, i32* %retval, align 4, !dbg !5174
  ret i32 %44, !dbg !5174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_pci_remove(%struct.pci_dev* %pdev) #3 !dbg !5175 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %brd = alloca %struct.moxa_board_conf*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5176, metadata !DIExpression()), !dbg !5177
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd, metadata !5178, metadata !DIExpression()), !dbg !5179
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5180
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #12, !dbg !5181
  %1 = bitcast i8* %call to %struct.moxa_board_conf*, !dbg !5181
  store %struct.moxa_board_conf* %1, %struct.moxa_board_conf** %brd, align 8, !dbg !5179
  %2 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !5182
  call void @moxa_board_deinit(%struct.moxa_board_conf* %2) #12, !dbg !5183
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5184
  call void @pci_release_region(%struct.pci_dev* %3, i32 2) #12, !dbg !5185
  ret void, !dbg !5186
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @pci_request_region(%struct.pci_dev*, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_init_board(%struct.moxa_board_conf* %brd, %struct.device* %dev) #3 !dbg !5187 {
entry:
  %retval = alloca i32, align 4
  %brd.addr = alloca %struct.moxa_board_conf*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %fw = alloca %struct.firmware*, align 8
  %file = alloca i8*, align 8
  %p = alloca %struct.moxa_port*, align 8
  %i = alloca i32, align 4
  %first_idx = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.moxa_board_conf* %brd, %struct.moxa_board_conf** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd.addr, metadata !5190, metadata !DIExpression()), !dbg !5191
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5192, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw, metadata !5194, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.declare(metadata i8** %file, metadata !5206, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %p, metadata !5208, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5210, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.declare(metadata i32* %first_idx, metadata !5212, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5214, metadata !DIExpression()), !dbg !5215
  %call = call i8* @kcalloc(i64 32, i64 344, i32 3264) #12, !dbg !5216
  %0 = bitcast i8* %call to %struct.moxa_port*, !dbg !5216
  %1 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5217
  %ports = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %1, i32 0, i32 4, !dbg !5218
  store %struct.moxa_port* %0, %struct.moxa_port** %ports, align 8, !dbg !5219
  %2 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5220
  %ports1 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %2, i32 0, i32 4, !dbg !5222
  %3 = load %struct.moxa_port*, %struct.moxa_port** %ports1, align 8, !dbg !5222
  %cmp = icmp eq %struct.moxa_port* %3, null, !dbg !5223
  br i1 %cmp, label %if.then, label %if.end, !dbg !5224

if.then:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0)) #13, !dbg !5225
  store i32 -12, i32* %ret, align 4, !dbg !5227
  br label %err, !dbg !5228

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !5229
  %4 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5231
  %ports3 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %4, i32 0, i32 4, !dbg !5232
  %5 = load %struct.moxa_port*, %struct.moxa_port** %ports3, align 8, !dbg !5232
  store %struct.moxa_port* %5, %struct.moxa_port** %p, align 8, !dbg !5233
  br label %for.cond, !dbg !5234

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !5235
  %cmp4 = icmp ult i32 %6, 32, !dbg !5237
  br i1 %cmp4, label %for.body, label %for.end, !dbg !5238

for.body:                                         ; preds = %for.cond
  %7 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !5239
  %port = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %7, i32 0, i32 0, !dbg !5241
  call void @tty_port_init(%struct.tty_port* %port) #12, !dbg !5242
  %8 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !5243
  %port5 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %8, i32 0, i32 0, !dbg !5244
  %ops = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port5, i32 0, i32 3, !dbg !5245
  store %struct.tty_port_operations* @moxa_port_ops, %struct.tty_port_operations** %ops, align 8, !dbg !5246
  %9 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !5247
  %type = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %9, i32 0, i32 3, !dbg !5248
  store i32 4, i32* %type, align 8, !dbg !5249
  %10 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !5250
  %cflag = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %10, i32 0, i32 4, !dbg !5251
  store i32 3261, i32* %cflag, align 4, !dbg !5252
  br label %for.inc, !dbg !5253

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !5254
  %inc = add i32 %11, 1, !dbg !5254
  store i32 %inc, i32* %i, align 4, !dbg !5254
  %12 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !5255
  %incdec.ptr = getelementptr %struct.moxa_port, %struct.moxa_port* %12, i32 1, !dbg !5255
  store %struct.moxa_port* %incdec.ptr, %struct.moxa_port** %p, align 8, !dbg !5255
  br label %for.cond, !dbg !5256, !llvm.loop !5257

for.end:                                          ; preds = %for.cond
  %13 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5259
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %13, i32 0, i32 0, !dbg !5260
  %14 = load i32, i32* %boardType, align 8, !dbg !5260
  switch i32 %14, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb
    i32 5, label %sw.bb6
  ], !dbg !5261

sw.bb:                                            ; preds = %for.end, %for.end
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8** %file, align 8, !dbg !5262
  br label %sw.epilog, !dbg !5264

sw.bb6:                                           ; preds = %for.end
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8** %file, align 8, !dbg !5265
  br label %sw.epilog, !dbg !5266

sw.default:                                       ; preds = %for.end
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8** %file, align 8, !dbg !5267
  br label %sw.epilog, !dbg !5268

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb
  %15 = load i8*, i8** %file, align 8, !dbg !5269
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5270
  %call7 = call i32 @request_firmware(%struct.firmware** %fw, i8* %15, %struct.device* %16) #12, !dbg !5271
  store i32 %call7, i32* %ret, align 4, !dbg !5272
  %17 = load i32, i32* %ret, align 4, !dbg !5273
  %tobool = icmp ne i32 %17, 0, !dbg !5273
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !5275

if.then8:                                         ; preds = %sw.epilog
  %18 = load i8*, i8** %file, align 8, !dbg !5276
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.str.12, i64 0, i64 0), i8* %18) #13, !dbg !5278
  br label %err_free, !dbg !5279

if.end10:                                         ; preds = %sw.epilog
  %19 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5280
  %20 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !5281
  %call11 = call i32 @moxa_load_fw(%struct.moxa_board_conf* %19, %struct.firmware* %20) #12, !dbg !5282
  store i32 %call11, i32* %ret, align 4, !dbg !5283
  %21 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !5284
  call void @release_firmware(%struct.firmware* %21) #12, !dbg !5285
  %22 = load i32, i32* %ret, align 4, !dbg !5286
  %tobool12 = icmp ne i32 %22, 0, !dbg !5286
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5288

if.then13:                                        ; preds = %if.end10
  br label %err_free, !dbg !5289

if.end14:                                         ; preds = %if.end10
  call void @spin_lock_bh(%struct.spinlock* @moxa_lock) #12, !dbg !5290
  %23 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5291
  %ready = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %23, i32 0, i32 3, !dbg !5292
  store i32 1, i32* %ready, align 4, !dbg !5293
  %call15 = call i32 @timer_pending(%struct.timer_list* @moxaTimer) #12, !dbg !5294
  %tobool16 = icmp ne i32 %call15, 0, !dbg !5294
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !5296

if.then17:                                        ; preds = %if.end14
  %24 = load volatile i64, i64* @jiffies, align 8, !dbg !5297
  %add = add i64 %24, 5, !dbg !5298
  %call18 = call i32 @mod_timer(%struct.timer_list* @moxaTimer, i64 %add) #12, !dbg !5299
  br label %if.end19, !dbg !5299

if.end19:                                         ; preds = %if.then17, %if.end14
  call void @spin_unlock_bh(%struct.spinlock* @moxa_lock) #12, !dbg !5300
  %25 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5301
  %sub.ptr.lhs.cast = ptrtoint %struct.moxa_board_conf* %25 to i64, !dbg !5302
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([4 x %struct.moxa_board_conf]* @moxa_boards to i64), !dbg !5302
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 56, !dbg !5302
  %mul = mul i64 %sub.ptr.div, 32, !dbg !5303
  %conv = trunc i64 %mul to i32, !dbg !5304
  store i32 %conv, i32* %first_idx, align 4, !dbg !5305
  store i32 0, i32* %i, align 4, !dbg !5306
  br label %for.cond20, !dbg !5308

for.cond20:                                       ; preds = %for.inc28, %if.end19
  %26 = load i32, i32* %i, align 4, !dbg !5309
  %27 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5311
  %numPorts = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %27, i32 0, i32 1, !dbg !5312
  %28 = load i32, i32* %numPorts, align 4, !dbg !5312
  %cmp21 = icmp ult i32 %26, %28, !dbg !5313
  br i1 %cmp21, label %for.body23, label %for.end30, !dbg !5314

for.body23:                                       ; preds = %for.cond20
  %29 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5315
  %ports24 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %29, i32 0, i32 4, !dbg !5316
  %30 = load %struct.moxa_port*, %struct.moxa_port** %ports24, align 8, !dbg !5316
  %31 = load i32, i32* %i, align 4, !dbg !5317
  %idxprom = zext i32 %31 to i64, !dbg !5315
  %arrayidx = getelementptr %struct.moxa_port, %struct.moxa_port* %30, i64 %idxprom, !dbg !5315
  %port25 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %arrayidx, i32 0, i32 0, !dbg !5318
  %32 = load %struct.tty_driver*, %struct.tty_driver** @moxaDriver, align 8, !dbg !5319
  %33 = load i32, i32* %first_idx, align 4, !dbg !5320
  %34 = load i32, i32* %i, align 4, !dbg !5321
  %add26 = add i32 %33, %34, !dbg !5322
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5323
  %call27 = call %struct.device* @tty_port_register_device(%struct.tty_port* %port25, %struct.tty_driver* %32, i32 %add26, %struct.device* %35) #12, !dbg !5324
  br label %for.inc28, !dbg !5324

for.inc28:                                        ; preds = %for.body23
  %36 = load i32, i32* %i, align 4, !dbg !5325
  %inc29 = add i32 %36, 1, !dbg !5325
  store i32 %inc29, i32* %i, align 4, !dbg !5325
  br label %for.cond20, !dbg !5326, !llvm.loop !5327

for.end30:                                        ; preds = %for.cond20
  store i32 0, i32* %retval, align 4, !dbg !5329
  br label %return, !dbg !5329

err_free:                                         ; preds = %if.then13, %if.then8
  call void @llvm.dbg.label(metadata !5330), !dbg !5331
  store i32 0, i32* %i, align 4, !dbg !5332
  br label %for.cond31, !dbg !5334

for.cond31:                                       ; preds = %for.inc39, %err_free
  %37 = load i32, i32* %i, align 4, !dbg !5335
  %cmp32 = icmp ult i32 %37, 32, !dbg !5337
  br i1 %cmp32, label %for.body34, label %for.end41, !dbg !5338

for.body34:                                       ; preds = %for.cond31
  %38 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5339
  %ports35 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %38, i32 0, i32 4, !dbg !5340
  %39 = load %struct.moxa_port*, %struct.moxa_port** %ports35, align 8, !dbg !5340
  %40 = load i32, i32* %i, align 4, !dbg !5341
  %idxprom36 = zext i32 %40 to i64, !dbg !5339
  %arrayidx37 = getelementptr %struct.moxa_port, %struct.moxa_port* %39, i64 %idxprom36, !dbg !5339
  %port38 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %arrayidx37, i32 0, i32 0, !dbg !5342
  call void @tty_port_destroy(%struct.tty_port* %port38) #12, !dbg !5343
  br label %for.inc39, !dbg !5343

for.inc39:                                        ; preds = %for.body34
  %41 = load i32, i32* %i, align 4, !dbg !5344
  %inc40 = add i32 %41, 1, !dbg !5344
  store i32 %inc40, i32* %i, align 4, !dbg !5344
  br label %for.cond31, !dbg !5345, !llvm.loop !5346

for.end41:                                        ; preds = %for.cond31
  %42 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5348
  %ports42 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %42, i32 0, i32 4, !dbg !5349
  %43 = load %struct.moxa_port*, %struct.moxa_port** %ports42, align 8, !dbg !5349
  %44 = bitcast %struct.moxa_port* %43 to i8*, !dbg !5348
  call void @kfree(i8* %44) #12, !dbg !5350
  br label %err, !dbg !5350

err:                                              ; preds = %for.end41, %if.then
  call void @llvm.dbg.label(metadata !5351), !dbg !5352
  %45 = load i32, i32* %ret, align 4, !dbg !5353
  store i32 %45, i32* %retval, align 4, !dbg !5354
  br label %return, !dbg !5354

return:                                           ; preds = %err, %for.end30
  %46 = load i32, i32* %retval, align 4, !dbg !5355
  ret i32 %46, !dbg !5355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #3 !dbg !5356 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5359, metadata !DIExpression()), !dbg !5360
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5361, metadata !DIExpression()), !dbg !5362
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5363
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !5364
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5365
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #12, !dbg !5366
  ret void, !dbg !5367
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #2

; Function Attrs: noredzone
declare dso_local void @pci_release_region(%struct.pci_dev*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #3 !dbg !5368 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5371, metadata !DIExpression()), !dbg !5372
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5373, metadata !DIExpression()), !dbg !5374
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5375, metadata !DIExpression()), !dbg !5376
  %0 = load i64, i64* %n.addr, align 8, !dbg !5377
  %1 = load i64, i64* %size.addr, align 8, !dbg !5378
  %2 = load i32, i32* %flags.addr, align 4, !dbg !5379
  %or = or i32 %2, 256, !dbg !5380
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #12, !dbg !5381
  ret i8* %call, !dbg !5382
}

; Function Attrs: noredzone
declare dso_local void @tty_port_init(%struct.tty_port*) #2

; Function Attrs: noredzone
declare dso_local i32 @request_firmware(%struct.firmware**, i8*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_load_fw(%struct.moxa_board_conf* %brd, %struct.firmware* %fw) #3 !dbg !5383 {
entry:
  %retval = alloca i32, align 4
  %brd.addr = alloca %struct.moxa_board_conf*, align 8
  %fw.addr = alloca %struct.firmware*, align 8
  %ptr = alloca i8*, align 8
  %rsn = alloca [64 x i8], align 16
  %lens = alloca [5 x i16], align 2
  %len = alloca i64, align 8
  %a = alloca i32, align 4
  %lenp = alloca i32, align 4
  %lencnt = alloca i32, align 4
  %ret = alloca i32, align 4
  %hdr = alloca %struct.anon.68*, align 8
  store %struct.moxa_board_conf* %brd, %struct.moxa_board_conf** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd.addr, metadata !5386, metadata !DIExpression()), !dbg !5387
  store %struct.firmware* %fw, %struct.firmware** %fw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw.addr, metadata !5388, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !5390, metadata !DIExpression()), !dbg !5391
  %0 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !5392
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %0, i32 0, i32 1, !dbg !5393
  %1 = load i8*, i8** %data, align 8, !dbg !5393
  store i8* %1, i8** %ptr, align 8, !dbg !5391
  call void @llvm.dbg.declare(metadata [64 x i8]* %rsn, metadata !5394, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.declare(metadata [5 x i16]* %lens, metadata !5396, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5399, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5401, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.declare(metadata i32* %lenp, metadata !5403, metadata !DIExpression()), !dbg !5404
  call void @llvm.dbg.declare(metadata i32* %lencnt, metadata !5405, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5407, metadata !DIExpression()), !dbg !5408
  store i32 -22, i32* %ret, align 4, !dbg !5408
  call void @llvm.dbg.declare(metadata %struct.anon.68** %hdr, metadata !5409, metadata !DIExpression()), !dbg !5423
  %2 = load i8*, i8** %ptr, align 8, !dbg !5424
  %3 = bitcast i8* %2 to %struct.anon.68*, !dbg !5424
  store %struct.anon.68* %3, %struct.anon.68** %hdr, align 8, !dbg !5423
  br label %do.body, !dbg !5425

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5426

do.end:                                           ; preds = %do.body
  %4 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !5428
  %size = getelementptr inbounds %struct.firmware, %struct.firmware* %4, i32 0, i32 0, !dbg !5430
  %5 = load i64, i64* %size, align 8, !dbg !5430
  %cmp = icmp ult i64 %5, 32, !dbg !5431
  br i1 %cmp, label %if.then, label %if.end, !dbg !5432

if.then:                                          ; preds = %do.end
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %rsn, i64 0, i64 0, !dbg !5433
  %call = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !5435
  br label %err, !dbg !5436

if.end:                                           ; preds = %do.end
  %6 = load %struct.anon.68*, %struct.anon.68** %hdr, align 8, !dbg !5437
  %magic = getelementptr inbounds %struct.anon.68, %struct.anon.68* %6, i32 0, i32 0, !dbg !5439
  %7 = load i32, i32* %magic, align 4, !dbg !5439
  %cmp1 = icmp ne i32 %7, 808726580, !dbg !5440
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !5441

if.then2:                                         ; preds = %if.end
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %rsn, i64 0, i64 0, !dbg !5442
  %8 = load %struct.anon.68*, %struct.anon.68** %hdr, align 8, !dbg !5444
  %magic4 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %8, i32 0, i32 0, !dbg !5444
  %9 = load i32, i32* %magic4, align 4, !dbg !5444
  %call5 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i32 %9) #12, !dbg !5445
  br label %err, !dbg !5446

if.end6:                                          ; preds = %if.end
  %10 = load %struct.anon.68*, %struct.anon.68** %hdr, align 8, !dbg !5447
  %type = getelementptr inbounds %struct.anon.68, %struct.anon.68* %10, i32 0, i32 2, !dbg !5449
  %11 = load i8, i8* %type, align 2, !dbg !5449
  %conv = zext i8 %11 to i32, !dbg !5447
  %cmp7 = icmp ne i32 %conv, 3, !dbg !5450
  br i1 %cmp7, label %if.then9, label %if.end14, !dbg !5451

if.then9:                                         ; preds = %if.end6
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %rsn, i64 0, i64 0, !dbg !5452
  %12 = load %struct.anon.68*, %struct.anon.68** %hdr, align 8, !dbg !5454
  %type11 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %12, i32 0, i32 2, !dbg !5455
  %13 = load i8, i8* %type11, align 2, !dbg !5455
  %conv12 = zext i8 %13 to i32, !dbg !5454
  %call13 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i32 %conv12) #12, !dbg !5456
  br label %err, !dbg !5457

if.end14:                                         ; preds = %if.end6
  %14 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5458
  %15 = load %struct.anon.68*, %struct.anon.68** %hdr, align 8, !dbg !5460
  %model = getelementptr inbounds %struct.anon.68, %struct.anon.68* %15, i32 0, i32 3, !dbg !5461
  %16 = load i8, i8* %model, align 1, !dbg !5461
  %call15 = call i32 @moxa_check_fw_model(%struct.moxa_board_conf* %14, i8 zeroext %16) #12, !dbg !5462
  %tobool = icmp ne i32 %call15, 0, !dbg !5462
  br i1 %tobool, label %if.then16, label %if.end21, !dbg !5463

if.then16:                                        ; preds = %if.end14
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %rsn, i64 0, i64 0, !dbg !5464
  %17 = load %struct.anon.68*, %struct.anon.68** %hdr, align 8, !dbg !5466
  %model18 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %17, i32 0, i32 3, !dbg !5467
  %18 = load i8, i8* %model18, align 1, !dbg !5467
  %conv19 = zext i8 %18 to i32, !dbg !5466
  %call20 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay17, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i64 0, i64 0), i32 %conv19) #12, !dbg !5468
  br label %err, !dbg !5469

if.end21:                                         ; preds = %if.end14
  store i64 32, i64* %len, align 8, !dbg !5470
  %19 = load %struct.anon.68*, %struct.anon.68** %hdr, align 8, !dbg !5471
  %model22 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %19, i32 0, i32 3, !dbg !5472
  %20 = load i8, i8* %model22, align 1, !dbg !5472
  %conv23 = zext i8 %20 to i32, !dbg !5471
  %cmp24 = icmp eq i32 %conv23, 2, !dbg !5473
  %21 = zext i1 %cmp24 to i64, !dbg !5471
  %cond = select i1 %cmp24, i32 5, i32 3, !dbg !5471
  store i32 %cond, i32* %lencnt, align 4, !dbg !5474
  store i32 0, i32* %a, align 4, !dbg !5475
  br label %for.cond, !dbg !5477

for.cond:                                         ; preds = %for.inc, %if.end21
  %22 = load i32, i32* %a, align 4, !dbg !5478
  %conv26 = zext i32 %22 to i64, !dbg !5478
  %cmp27 = icmp ult i64 %conv26, 5, !dbg !5480
  br i1 %cmp27, label %for.body, label %for.end, !dbg !5481

for.body:                                         ; preds = %for.cond
  %23 = load %struct.anon.68*, %struct.anon.68** %hdr, align 8, !dbg !5482
  %len29 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %23, i32 0, i32 5, !dbg !5482
  %24 = load i32, i32* %a, align 4, !dbg !5482
  %idxprom = zext i32 %24 to i64, !dbg !5482
  %arrayidx = getelementptr [5 x i16], [5 x i16]* %len29, i64 0, i64 %idxprom, !dbg !5482
  %25 = load i16, i16* %arrayidx, align 2, !dbg !5482
  %26 = load i32, i32* %a, align 4, !dbg !5484
  %idxprom30 = zext i32 %26 to i64, !dbg !5485
  %arrayidx31 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom30, !dbg !5485
  store i16 %25, i16* %arrayidx31, align 2, !dbg !5486
  %27 = load i32, i32* %a, align 4, !dbg !5487
  %idxprom32 = zext i32 %27 to i64, !dbg !5489
  %arrayidx33 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom32, !dbg !5489
  %28 = load i16, i16* %arrayidx33, align 2, !dbg !5489
  %conv34 = zext i16 %28 to i32, !dbg !5489
  %tobool35 = icmp ne i32 %conv34, 0, !dbg !5489
  br i1 %tobool35, label %land.lhs.true, label %if.end50, !dbg !5490

land.lhs.true:                                    ; preds = %for.body
  %29 = load i64, i64* %len, align 8, !dbg !5491
  %30 = load i32, i32* %a, align 4, !dbg !5492
  %idxprom36 = zext i32 %30 to i64, !dbg !5493
  %arrayidx37 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom36, !dbg !5493
  %31 = load i16, i16* %arrayidx37, align 2, !dbg !5493
  %conv38 = zext i16 %31 to i64, !dbg !5493
  %add = add i64 %29, %conv38, !dbg !5494
  %32 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !5495
  %size39 = getelementptr inbounds %struct.firmware, %struct.firmware* %32, i32 0, i32 0, !dbg !5496
  %33 = load i64, i64* %size39, align 8, !dbg !5496
  %cmp40 = icmp ule i64 %add, %33, !dbg !5497
  br i1 %cmp40, label %land.lhs.true42, label %if.end50, !dbg !5498

land.lhs.true42:                                  ; preds = %land.lhs.true
  %34 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !5499
  %data43 = getelementptr inbounds %struct.firmware, %struct.firmware* %34, i32 0, i32 1, !dbg !5500
  %35 = load i8*, i8** %data43, align 8, !dbg !5500
  %36 = load i64, i64* %len, align 8, !dbg !5501
  %arrayidx44 = getelementptr i8, i8* %35, i64 %36, !dbg !5499
  %call45 = call i32 @moxa_check_fw(i8* %arrayidx44) #12, !dbg !5502
  %tobool46 = icmp ne i32 %call45, 0, !dbg !5502
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !5503

if.then47:                                        ; preds = %land.lhs.true42
  %37 = load i64, i64* %len, align 8, !dbg !5504
  %conv48 = trunc i64 %37 to i32, !dbg !5505
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.19, i64 0, i64 0), i32 %conv48) #13, !dbg !5506
  br label %if.end50, !dbg !5506

if.end50:                                         ; preds = %if.then47, %land.lhs.true42, %land.lhs.true, %for.body
  %38 = load i32, i32* %a, align 4, !dbg !5507
  %idxprom51 = zext i32 %38 to i64, !dbg !5509
  %arrayidx52 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom51, !dbg !5509
  %39 = load i16, i16* %arrayidx52, align 2, !dbg !5509
  %tobool53 = icmp ne i16 %39, 0, !dbg !5509
  br i1 %tobool53, label %if.end60, label %land.lhs.true54, !dbg !5510

land.lhs.true54:                                  ; preds = %if.end50
  %40 = load i32, i32* %a, align 4, !dbg !5511
  %41 = load i32, i32* %lencnt, align 4, !dbg !5512
  %cmp55 = icmp ult i32 %40, %41, !dbg !5513
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !5514

if.then57:                                        ; preds = %land.lhs.true54
  %arraydecay58 = getelementptr inbounds [64 x i8], [64 x i8]* %rsn, i64 0, i64 0, !dbg !5515
  %call59 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay58, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0)) #12, !dbg !5517
  br label %err, !dbg !5518

if.end60:                                         ; preds = %land.lhs.true54, %if.end50
  %42 = load i32, i32* %a, align 4, !dbg !5519
  %idxprom61 = zext i32 %42 to i64, !dbg !5520
  %arrayidx62 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom61, !dbg !5520
  %43 = load i16, i16* %arrayidx62, align 2, !dbg !5520
  %conv63 = zext i16 %43 to i64, !dbg !5520
  %44 = load i64, i64* %len, align 8, !dbg !5521
  %add64 = add i64 %44, %conv63, !dbg !5521
  store i64 %add64, i64* %len, align 8, !dbg !5521
  br label %for.inc, !dbg !5522

for.inc:                                          ; preds = %if.end60
  %45 = load i32, i32* %a, align 4, !dbg !5523
  %inc = add i32 %45, 1, !dbg !5523
  store i32 %inc, i32* %a, align 4, !dbg !5523
  br label %for.cond, !dbg !5524, !llvm.loop !5525

for.end:                                          ; preds = %for.cond
  %46 = load i64, i64* %len, align 8, !dbg !5527
  %47 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !5529
  %size65 = getelementptr inbounds %struct.firmware, %struct.firmware* %47, i32 0, i32 0, !dbg !5530
  %48 = load i64, i64* %size65, align 8, !dbg !5530
  %cmp66 = icmp ne i64 %46, %48, !dbg !5531
  br i1 %cmp66, label %if.then68, label %if.end74, !dbg !5532

if.then68:                                        ; preds = %for.end
  %arraydecay69 = getelementptr inbounds [64 x i8], [64 x i8]* %rsn, i64 0, i64 0, !dbg !5533
  %49 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !5535
  %size70 = getelementptr inbounds %struct.firmware, %struct.firmware* %49, i32 0, i32 0, !dbg !5536
  %50 = load i64, i64* %size70, align 8, !dbg !5536
  %conv71 = trunc i64 %50 to i32, !dbg !5537
  %51 = load i64, i64* %len, align 8, !dbg !5538
  %conv72 = trunc i64 %51 to i32, !dbg !5539
  %call73 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay69, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21, i64 0, i64 0), i32 %conv71, i32 %conv72) #12, !dbg !5540
  br label %err, !dbg !5541

if.end74:                                         ; preds = %for.end
  %52 = load i8*, i8** %ptr, align 8, !dbg !5542
  %add.ptr = getelementptr i8, i8* %52, i64 32, !dbg !5542
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !5542
  store i32 0, i32* %lenp, align 4, !dbg !5543
  %arraydecay75 = getelementptr inbounds [64 x i8], [64 x i8]* %rsn, i64 0, i64 0, !dbg !5544
  %call76 = call i8* @strcpy(i8* %arraydecay75, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0)) #12, !dbg !5545
  %53 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5546
  %54 = load i8*, i8** %ptr, align 8, !dbg !5547
  %55 = load i32, i32* %lenp, align 4, !dbg !5548
  %idxprom77 = zext i32 %55 to i64, !dbg !5549
  %arrayidx78 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom77, !dbg !5549
  %56 = load i16, i16* %arrayidx78, align 2, !dbg !5549
  %conv79 = zext i16 %56 to i64, !dbg !5549
  %call80 = call i32 @moxa_load_bios(%struct.moxa_board_conf* %53, i8* %54, i64 %conv79) #12, !dbg !5550
  store i32 %call80, i32* %ret, align 4, !dbg !5551
  %57 = load i32, i32* %ret, align 4, !dbg !5552
  %tobool81 = icmp ne i32 %57, 0, !dbg !5552
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !5554

if.then82:                                        ; preds = %if.end74
  br label %err, !dbg !5555

if.end83:                                         ; preds = %if.end74
  %58 = load i32, i32* %lenp, align 4, !dbg !5556
  %idxprom84 = zext i32 %58 to i64, !dbg !5557
  %arrayidx85 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom84, !dbg !5557
  %59 = load i16, i16* %arrayidx85, align 2, !dbg !5557
  %conv86 = zext i16 %59 to i32, !dbg !5557
  %60 = load i32, i32* %lenp, align 4, !dbg !5558
  %add87 = add i32 %60, 1, !dbg !5559
  %idxprom88 = zext i32 %add87 to i64, !dbg !5560
  %arrayidx89 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom88, !dbg !5560
  %61 = load i16, i16* %arrayidx89, align 2, !dbg !5560
  %conv90 = zext i16 %61 to i32, !dbg !5560
  %add91 = add i32 %conv86, %conv90, !dbg !5561
  %62 = load i8*, i8** %ptr, align 8, !dbg !5562
  %idx.ext = sext i32 %add91 to i64, !dbg !5562
  %add.ptr92 = getelementptr i8, i8* %62, i64 %idx.ext, !dbg !5562
  store i8* %add.ptr92, i8** %ptr, align 8, !dbg !5562
  %63 = load i32, i32* %lenp, align 4, !dbg !5563
  %add93 = add i32 %63, 2, !dbg !5563
  store i32 %add93, i32* %lenp, align 4, !dbg !5563
  %64 = load %struct.anon.68*, %struct.anon.68** %hdr, align 8, !dbg !5564
  %model94 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %64, i32 0, i32 3, !dbg !5566
  %65 = load i8, i8* %model94, align 1, !dbg !5566
  %conv95 = zext i8 %65 to i32, !dbg !5564
  %cmp96 = icmp eq i32 %conv95, 2, !dbg !5567
  br i1 %cmp96, label %if.then98, label %if.end117, !dbg !5568

if.then98:                                        ; preds = %if.end83
  %66 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5569
  %67 = load i8*, i8** %ptr, align 8, !dbg !5571
  %68 = load i32, i32* %lenp, align 4, !dbg !5572
  %idxprom99 = zext i32 %68 to i64, !dbg !5573
  %arrayidx100 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom99, !dbg !5573
  %69 = load i16, i16* %arrayidx100, align 2, !dbg !5573
  %conv101 = zext i16 %69 to i64, !dbg !5573
  %call102 = call i32 @moxa_load_320b(%struct.moxa_board_conf* %66, i8* %67, i64 %conv101) #12, !dbg !5574
  store i32 %call102, i32* %ret, align 4, !dbg !5575
  %70 = load i32, i32* %ret, align 4, !dbg !5576
  %tobool103 = icmp ne i32 %70, 0, !dbg !5576
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !5578

if.then104:                                       ; preds = %if.then98
  br label %err, !dbg !5579

if.end105:                                        ; preds = %if.then98
  %71 = load i32, i32* %lenp, align 4, !dbg !5580
  %idxprom106 = zext i32 %71 to i64, !dbg !5581
  %arrayidx107 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom106, !dbg !5581
  %72 = load i16, i16* %arrayidx107, align 2, !dbg !5581
  %conv108 = zext i16 %72 to i32, !dbg !5581
  %73 = load i32, i32* %lenp, align 4, !dbg !5582
  %add109 = add i32 %73, 1, !dbg !5583
  %idxprom110 = zext i32 %add109 to i64, !dbg !5584
  %arrayidx111 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom110, !dbg !5584
  %74 = load i16, i16* %arrayidx111, align 2, !dbg !5584
  %conv112 = zext i16 %74 to i32, !dbg !5584
  %add113 = add i32 %conv108, %conv112, !dbg !5585
  %75 = load i8*, i8** %ptr, align 8, !dbg !5586
  %idx.ext114 = sext i32 %add113 to i64, !dbg !5586
  %add.ptr115 = getelementptr i8, i8* %75, i64 %idx.ext114, !dbg !5586
  store i8* %add.ptr115, i8** %ptr, align 8, !dbg !5586
  %76 = load i32, i32* %lenp, align 4, !dbg !5587
  %add116 = add i32 %76, 2, !dbg !5587
  store i32 %add116, i32* %lenp, align 4, !dbg !5587
  br label %if.end117, !dbg !5588

if.end117:                                        ; preds = %if.end105, %if.end83
  %77 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !5589
  %78 = load i8*, i8** %ptr, align 8, !dbg !5590
  %79 = load i32, i32* %lenp, align 4, !dbg !5591
  %idxprom118 = zext i32 %79 to i64, !dbg !5592
  %arrayidx119 = getelementptr [5 x i16], [5 x i16]* %lens, i64 0, i64 %idxprom118, !dbg !5592
  %80 = load i16, i16* %arrayidx119, align 2, !dbg !5592
  %conv120 = zext i16 %80 to i64, !dbg !5592
  %call121 = call i32 @moxa_load_code(%struct.moxa_board_conf* %77, i8* %78, i64 %conv120) #12, !dbg !5593
  store i32 %call121, i32* %ret, align 4, !dbg !5594
  %81 = load i32, i32* %ret, align 4, !dbg !5595
  %tobool122 = icmp ne i32 %81, 0, !dbg !5595
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !5597

if.then123:                                       ; preds = %if.end117
  br label %err, !dbg !5598

if.end124:                                        ; preds = %if.end117
  store i32 0, i32* %retval, align 4, !dbg !5599
  br label %return, !dbg !5599

err:                                              ; preds = %if.then123, %if.then104, %if.then82, %if.then68, %if.then57, %if.then16, %if.then9, %if.then2, %if.then
  call void @llvm.dbg.label(metadata !5600), !dbg !5601
  %arraydecay125 = getelementptr inbounds [64 x i8], [64 x i8]* %rsn, i64 0, i64 0, !dbg !5602
  %call126 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0), i8* %arraydecay125) #13, !dbg !5603
  %82 = load i32, i32* %ret, align 4, !dbg !5604
  store i32 %82, i32* %retval, align 4, !dbg !5605
  br label %return, !dbg !5605

return:                                           ; preds = %err, %if.end124
  %83 = load i32, i32* %retval, align 4, !dbg !5606
  ret i32 %83, !dbg !5606
}

; Function Attrs: noredzone
declare dso_local void @release_firmware(%struct.firmware*) #2

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_lock_bh(%struct.spinlock* %lock) #5 !dbg !5607 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !5611, metadata !DIExpression()), !dbg !5614
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !5622, metadata !DIExpression()), !dbg !5625
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !5626, metadata !DIExpression()), !dbg !5630
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !5631, metadata !DIExpression()), !dbg !5632
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !5633, metadata !DIExpression()), !dbg !5634
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !5635, metadata !DIExpression()), !dbg !5636
  br label %do.body, !dbg !5637

do.body:                                          ; preds = %entry
  br label %__here, !dbg !5638

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !5640), !dbg !5638
  store i64 ptrtoint (i8* blockaddress(@spin_lock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !5638
  %0 = load i64, i64* %tmp, align 8, !dbg !5638
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !5641
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !5625
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #10, !dbg !5625
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !5625

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !5625
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !5625
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !5625

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !5625
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !5625
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !5625

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !5625
  br label %__local_bh_disable_ip.exit, !dbg !5625

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !5625

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !5625
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !5625
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !5630
  %conv.i.i = sext i32 %7 to i64, !dbg !5630
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !5630
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !5630
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !5630
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !5630
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #10, !dbg !5630, !srcloc !5642
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !5643, !srcloc !5644
  br label %do.body1, !dbg !5645

do.body1:                                         ; preds = %__local_bh_disable_ip.exit
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !5646
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !5646
  %rlock = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !5646
  br label %do.end, !dbg !5646

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !5645

do.end2:                                          ; preds = %do.end
  ret void, !dbg !5648

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @timer_pending(%struct.timer_list* %timer) #3 !dbg !5649 {
entry:
  %timer.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %timer, %struct.timer_list** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %timer.addr, metadata !5654, metadata !DIExpression()), !dbg !5655
  %0 = load %struct.timer_list*, %struct.timer_list** %timer.addr, align 8, !dbg !5656
  %entry1 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %0, i32 0, i32 0, !dbg !5657
  %call = call i32 @hlist_unhashed_lockless(%struct.hlist_node* %entry1) #12, !dbg !5658
  %tobool = icmp ne i32 %call, 0, !dbg !5659
  %lnot = xor i1 %tobool, true, !dbg !5659
  %lnot.ext = zext i1 %lnot to i32, !dbg !5659
  ret i32 %lnot.ext, !dbg !5660
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_unlock_bh(%struct.spinlock* %lock) #5 !dbg !5661 {
entry:
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  br label %do.body, !dbg !5664

do.body:                                          ; preds = %entry
  br label %__here, !dbg !5665

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !5668), !dbg !5665
  store i64 ptrtoint (i8* blockaddress(@spin_unlock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !5665
  %0 = load i64, i64* %tmp, align 8, !dbg !5665
  call void @__local_bh_enable_ip(i64 %0, i32 512) #12, !dbg !5669
  br label %do.body1, !dbg !5669

do.body1:                                         ; preds = %__here
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !5670
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !5670
  %rlock = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !5670
  br label %do.end, !dbg !5670

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !5669

do.end2:                                          ; preds = %do.end
  ret void, !dbg !5672

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noredzone
declare dso_local %struct.device* @tty_port_register_device(%struct.tty_port*, %struct.tty_driver*, i32, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_destroy(%struct.tty_port*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #3 !dbg !5673 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5674, metadata !DIExpression()), !dbg !5678
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5687, metadata !DIExpression()), !dbg !5688
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5689, metadata !DIExpression()), !dbg !5690
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5691, metadata !DIExpression()), !dbg !5692
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5693, metadata !DIExpression()), !dbg !5697
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5699, metadata !DIExpression()), !dbg !5703
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5705, metadata !DIExpression()), !dbg !5709
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5714, metadata !DIExpression()), !dbg !5715
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5716, metadata !DIExpression()), !dbg !5717
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5718, metadata !DIExpression()), !dbg !5719
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5720, metadata !DIExpression()), !dbg !5721
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5722, metadata !DIExpression()), !dbg !5723
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5724, metadata !DIExpression()), !dbg !5725
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5726, metadata !DIExpression()), !dbg !5727
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5728, metadata !DIExpression()), !dbg !5729
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5730, metadata !DIExpression()), !dbg !5731
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5732, metadata !DIExpression()), !dbg !5733
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5734, metadata !DIExpression()), !dbg !5735
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !5736, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !5738, metadata !DIExpression()), !dbg !5741
  %0 = load i64, i64* %n.addr, align 8, !dbg !5741
  store i64 %0, i64* %__a, align 8, !dbg !5741
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !5742, metadata !DIExpression()), !dbg !5741
  %1 = load i64, i64* %size.addr, align 8, !dbg !5741
  store i64 %1, i64* %__b, align 8, !dbg !5741
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !5743, metadata !DIExpression()), !dbg !5741
  store i64* %bytes, i64** %__d, align 8, !dbg !5741
  %cmp = icmp eq i64* %__a, %__b, !dbg !5741
  %conv = zext i1 %cmp to i32, !dbg !5741
  %2 = load i64*, i64** %__d, align 8, !dbg !5741
  %cmp1 = icmp eq i64* %__a, %2, !dbg !5741
  %conv2 = zext i1 %cmp1 to i32, !dbg !5741
  %3 = load i64, i64* %__a, align 8, !dbg !5741
  %4 = load i64, i64* %__b, align 8, !dbg !5741
  %5 = load i64*, i64** %__d, align 8, !dbg !5741
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !5741
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !5741
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !5741
  store i64 %8, i64* %5, align 8, !dbg !5741
  %frombool = zext i1 %7 to i8, !dbg !5741
  store i8 %frombool, i8* %tmp, align 1, !dbg !5741
  %9 = load i8, i8* %tmp, align 1, !dbg !5741
  %tobool = trunc i8 %9 to i1, !dbg !5741
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #12, !dbg !5745
  %lnot = xor i1 %call, true, !dbg !5745
  %lnot3 = xor i1 %lnot, true, !dbg !5745
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5745
  %conv4 = sext i32 %lnot.ext to i64, !dbg !5745
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !5745
  br i1 %tobool5, label %if.then, label %if.end, !dbg !5746

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !5747
  br label %return, !dbg !5747

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !5748
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !5749
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !5750

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !5751
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !5752
  br i1 %13, label %if.then6, label %if.end8, !dbg !5753

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !5754
  %15 = load i32, i32* %flags.addr, align 4, !dbg !5755
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !5756
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !5757
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !5758

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !5759
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !5760
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5761

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !5762
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !5763
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !5764
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !5765
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5723
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !5766
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5767
  %24 = load i32, i32* %order.i.i, align 4, !dbg !5768
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5769
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5770
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5771
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #15, !dbg !5772
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5772
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5772
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5772
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5772
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5773
  br label %kmalloc.exit, !dbg !5773

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !5774
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5775
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !5775
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5777

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5778
  br label %kmalloc_index.exit.i, !dbg !5778

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5779
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !5781
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5782

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5783
  br label %kmalloc_index.exit.i, !dbg !5783

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5784
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !5786
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5787

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5788
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !5789
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5790

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5791
  br label %kmalloc_index.exit.i, !dbg !5791

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5792
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !5794
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5795

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5796
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !5797
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5798

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5799
  br label %kmalloc_index.exit.i, !dbg !5799

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5800
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !5802
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5803

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5804
  br label %kmalloc_index.exit.i, !dbg !5804

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5805
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !5807
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5808

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5809
  br label %kmalloc_index.exit.i, !dbg !5809

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5810
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !5812
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5813

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5814
  br label %kmalloc_index.exit.i, !dbg !5814

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5815
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !5817
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5818

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5819
  br label %kmalloc_index.exit.i, !dbg !5819

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5820
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !5822
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5823

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5824
  br label %kmalloc_index.exit.i, !dbg !5824

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5825
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !5827
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5828

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5829
  br label %kmalloc_index.exit.i, !dbg !5829

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5830
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !5832
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5833

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5834
  br label %kmalloc_index.exit.i, !dbg !5834

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5835
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !5837
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5838

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5839
  br label %kmalloc_index.exit.i, !dbg !5839

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5840
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !5842
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5843

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5844
  br label %kmalloc_index.exit.i, !dbg !5844

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5845
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !5847
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5848

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5849
  br label %kmalloc_index.exit.i, !dbg !5849

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5850
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !5852
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5853

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5854
  br label %kmalloc_index.exit.i, !dbg !5854

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5855
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !5857
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5858

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5859
  br label %kmalloc_index.exit.i, !dbg !5859

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5860
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !5862
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5863

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5864
  br label %kmalloc_index.exit.i, !dbg !5864

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5865
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !5867
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5868

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5869
  br label %kmalloc_index.exit.i, !dbg !5869

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5870
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !5872
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5873

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5874
  br label %kmalloc_index.exit.i, !dbg !5874

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5875
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !5877
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5878

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5879
  br label %kmalloc_index.exit.i, !dbg !5879

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5880
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !5882
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5883

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5884
  br label %kmalloc_index.exit.i, !dbg !5884

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5885
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !5887
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5888

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5889
  br label %kmalloc_index.exit.i, !dbg !5889

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5890
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !5892
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5893

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5894
  br label %kmalloc_index.exit.i, !dbg !5894

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5895
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !5897
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5898

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5899
  br label %kmalloc_index.exit.i, !dbg !5899

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5900
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !5902
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5903

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5904
  br label %kmalloc_index.exit.i, !dbg !5904

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5905
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !5907
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5908

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5909
  br label %kmalloc_index.exit.i, !dbg !5909

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5910
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !5912
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5913

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5914
  br label %kmalloc_index.exit.i, !dbg !5914

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5915
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !5917
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5918

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5919
  br label %kmalloc_index.exit.i, !dbg !5919

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5920, !srcloc !5923
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 232) #10, !dbg !5924, !srcloc !5927
  unreachable, !dbg !5928

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !5929
  store i32 %59, i32* %index.i, align 4, !dbg !5930
  %60 = load i32, i32* %index.i, align 4, !dbg !5931
  %tobool.i = icmp ne i32 %60, 0, !dbg !5931
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5933

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5934
  br label %kmalloc.exit, !dbg !5934

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !5935
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5936
  %and.i.i = and i32 %62, 17, !dbg !5936
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5936
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5936
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5936
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5936
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5938

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5939
  br label %kmalloc_type.exit.i, !dbg !5939

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5940
  %and2.i.i = and i32 %63, 1, !dbg !5941
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5940
  %64 = zext i1 %tobool3.i.i to i64, !dbg !5940
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5940
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5942
  br label %kmalloc_type.exit.i, !dbg !5942

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !5943
  %idxprom.i = zext i32 %65 to i64, !dbg !5944
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5944
  %66 = load i32, i32* %index.i, align 4, !dbg !5945
  %idxprom6.i = zext i32 %66 to i64, !dbg !5944
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5944
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5944
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !5946
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !5947
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5948
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5949
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #15, !dbg !5950
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5950
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5950
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5950
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5950
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5692
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5951
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !5952
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5953
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5954
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #15, !dbg !5955
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5956
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !5957
  store i8* %76, i8** %retval.i, align 8, !dbg !5958
  br label %kmalloc.exit, !dbg !5958

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !5959
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !5960
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #15, !dbg !5961
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5961
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5961
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5961
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5961
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5962
  br label %kmalloc.exit, !dbg !5962

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !5963
  store i8* %79, i8** %retval, align 8, !dbg !5964
  br label %return, !dbg !5964

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !5965
  %81 = load i32, i32* %flags.addr, align 4, !dbg !5966
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #12, !dbg !5967
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !5967
  %maskedptr = and i64 %ptrint, 7, !dbg !5967
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !5967
  call void @llvm.assume(i1 %maskcond), !dbg !5967
  store i8* %call9, i8** %retval, align 8, !dbg !5968
  br label %return, !dbg !5968

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !5969
  ret i8* %82, !dbg !5969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #3 !dbg !5970 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !5974, metadata !DIExpression()), !dbg !5975
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !5976
  %tobool = trunc i8 %0 to i1, !dbg !5976
  %lnot = xor i1 %tobool, true, !dbg !5976
  %lnot1 = xor i1 %lnot, true, !dbg !5976
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5976
  %conv = sext i32 %lnot.ext to i64, !dbg !5976
  %tobool2 = icmp ne i64 %conv, 0, !dbg !5976
  ret i1 %tobool2, !dbg !5977
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !5978 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5982, metadata !DIExpression()), !dbg !5987
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5989, metadata !DIExpression()), !dbg !5990
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5991, metadata !DIExpression()), !dbg !5992
  %0 = load i64, i64* %size.addr, align 8, !dbg !5993
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !5995
  br i1 %1, label %if.then, label %if.end447, !dbg !5996

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !5997
  %tobool = icmp ne i64 %2, 0, !dbg !5997
  br i1 %tobool, label %if.end, label %if.then1, !dbg !6000

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !6001
  br label %return, !dbg !6001

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !6002
  %cmp = icmp ult i64 %3, 4096, !dbg !6004
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6005

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6006
  br label %return, !dbg !6006

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub = sub i64 %4, 1, !dbg !6007
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !6007
  br i1 %5, label %cond.true, label %cond.false442, !dbg !6007

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub4 = sub i64 %6, 1, !dbg !6007
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !6007
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !6007

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub6 = sub i64 %8, 1, !dbg !6007
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !6007
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !6007

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !6007

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub9 = sub i64 %9, 1, !dbg !6007
  %and = and i64 %sub9, -9223372036854775808, !dbg !6007
  %tobool10 = icmp ne i64 %and, 0, !dbg !6007
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !6007

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !6007

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub13 = sub i64 %10, 1, !dbg !6007
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !6007
  %tobool15 = icmp ne i64 %and14, 0, !dbg !6007
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !6007

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !6007

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub18 = sub i64 %11, 1, !dbg !6007
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !6007
  %tobool20 = icmp ne i64 %and19, 0, !dbg !6007
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6007

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !6007

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub23 = sub i64 %12, 1, !dbg !6007
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !6007
  %tobool25 = icmp ne i64 %and24, 0, !dbg !6007
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !6007

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !6007

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub28 = sub i64 %13, 1, !dbg !6007
  %and29 = and i64 %sub28, 576460752303423488, !dbg !6007
  %tobool30 = icmp ne i64 %and29, 0, !dbg !6007
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !6007

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !6007

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub33 = sub i64 %14, 1, !dbg !6007
  %and34 = and i64 %sub33, 288230376151711744, !dbg !6007
  %tobool35 = icmp ne i64 %and34, 0, !dbg !6007
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !6007

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !6007

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub38 = sub i64 %15, 1, !dbg !6007
  %and39 = and i64 %sub38, 144115188075855872, !dbg !6007
  %tobool40 = icmp ne i64 %and39, 0, !dbg !6007
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !6007

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !6007

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub43 = sub i64 %16, 1, !dbg !6007
  %and44 = and i64 %sub43, 72057594037927936, !dbg !6007
  %tobool45 = icmp ne i64 %and44, 0, !dbg !6007
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !6007

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !6007

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub48 = sub i64 %17, 1, !dbg !6007
  %and49 = and i64 %sub48, 36028797018963968, !dbg !6007
  %tobool50 = icmp ne i64 %and49, 0, !dbg !6007
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !6007

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !6007

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub53 = sub i64 %18, 1, !dbg !6007
  %and54 = and i64 %sub53, 18014398509481984, !dbg !6007
  %tobool55 = icmp ne i64 %and54, 0, !dbg !6007
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !6007

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !6007

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub58 = sub i64 %19, 1, !dbg !6007
  %and59 = and i64 %sub58, 9007199254740992, !dbg !6007
  %tobool60 = icmp ne i64 %and59, 0, !dbg !6007
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !6007

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !6007

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub63 = sub i64 %20, 1, !dbg !6007
  %and64 = and i64 %sub63, 4503599627370496, !dbg !6007
  %tobool65 = icmp ne i64 %and64, 0, !dbg !6007
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !6007

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !6007

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub68 = sub i64 %21, 1, !dbg !6007
  %and69 = and i64 %sub68, 2251799813685248, !dbg !6007
  %tobool70 = icmp ne i64 %and69, 0, !dbg !6007
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !6007

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !6007

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub73 = sub i64 %22, 1, !dbg !6007
  %and74 = and i64 %sub73, 1125899906842624, !dbg !6007
  %tobool75 = icmp ne i64 %and74, 0, !dbg !6007
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !6007

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !6007

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub78 = sub i64 %23, 1, !dbg !6007
  %and79 = and i64 %sub78, 562949953421312, !dbg !6007
  %tobool80 = icmp ne i64 %and79, 0, !dbg !6007
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !6007

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !6007

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub83 = sub i64 %24, 1, !dbg !6007
  %and84 = and i64 %sub83, 281474976710656, !dbg !6007
  %tobool85 = icmp ne i64 %and84, 0, !dbg !6007
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !6007

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !6007

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub88 = sub i64 %25, 1, !dbg !6007
  %and89 = and i64 %sub88, 140737488355328, !dbg !6007
  %tobool90 = icmp ne i64 %and89, 0, !dbg !6007
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !6007

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !6007

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub93 = sub i64 %26, 1, !dbg !6007
  %and94 = and i64 %sub93, 70368744177664, !dbg !6007
  %tobool95 = icmp ne i64 %and94, 0, !dbg !6007
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !6007

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !6007

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub98 = sub i64 %27, 1, !dbg !6007
  %and99 = and i64 %sub98, 35184372088832, !dbg !6007
  %tobool100 = icmp ne i64 %and99, 0, !dbg !6007
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !6007

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !6007

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub103 = sub i64 %28, 1, !dbg !6007
  %and104 = and i64 %sub103, 17592186044416, !dbg !6007
  %tobool105 = icmp ne i64 %and104, 0, !dbg !6007
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !6007

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !6007

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub108 = sub i64 %29, 1, !dbg !6007
  %and109 = and i64 %sub108, 8796093022208, !dbg !6007
  %tobool110 = icmp ne i64 %and109, 0, !dbg !6007
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !6007

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !6007

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub113 = sub i64 %30, 1, !dbg !6007
  %and114 = and i64 %sub113, 4398046511104, !dbg !6007
  %tobool115 = icmp ne i64 %and114, 0, !dbg !6007
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !6007

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !6007

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub118 = sub i64 %31, 1, !dbg !6007
  %and119 = and i64 %sub118, 2199023255552, !dbg !6007
  %tobool120 = icmp ne i64 %and119, 0, !dbg !6007
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !6007

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !6007

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub123 = sub i64 %32, 1, !dbg !6007
  %and124 = and i64 %sub123, 1099511627776, !dbg !6007
  %tobool125 = icmp ne i64 %and124, 0, !dbg !6007
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !6007

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !6007

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub128 = sub i64 %33, 1, !dbg !6007
  %and129 = and i64 %sub128, 549755813888, !dbg !6007
  %tobool130 = icmp ne i64 %and129, 0, !dbg !6007
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !6007

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !6007

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub133 = sub i64 %34, 1, !dbg !6007
  %and134 = and i64 %sub133, 274877906944, !dbg !6007
  %tobool135 = icmp ne i64 %and134, 0, !dbg !6007
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !6007

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !6007

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub138 = sub i64 %35, 1, !dbg !6007
  %and139 = and i64 %sub138, 137438953472, !dbg !6007
  %tobool140 = icmp ne i64 %and139, 0, !dbg !6007
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !6007

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !6007

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub143 = sub i64 %36, 1, !dbg !6007
  %and144 = and i64 %sub143, 68719476736, !dbg !6007
  %tobool145 = icmp ne i64 %and144, 0, !dbg !6007
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !6007

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !6007

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub148 = sub i64 %37, 1, !dbg !6007
  %and149 = and i64 %sub148, 34359738368, !dbg !6007
  %tobool150 = icmp ne i64 %and149, 0, !dbg !6007
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !6007

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !6007

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub153 = sub i64 %38, 1, !dbg !6007
  %and154 = and i64 %sub153, 17179869184, !dbg !6007
  %tobool155 = icmp ne i64 %and154, 0, !dbg !6007
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !6007

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !6007

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub158 = sub i64 %39, 1, !dbg !6007
  %and159 = and i64 %sub158, 8589934592, !dbg !6007
  %tobool160 = icmp ne i64 %and159, 0, !dbg !6007
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !6007

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !6007

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub163 = sub i64 %40, 1, !dbg !6007
  %and164 = and i64 %sub163, 4294967296, !dbg !6007
  %tobool165 = icmp ne i64 %and164, 0, !dbg !6007
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !6007

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !6007

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub168 = sub i64 %41, 1, !dbg !6007
  %and169 = and i64 %sub168, 2147483648, !dbg !6007
  %tobool170 = icmp ne i64 %and169, 0, !dbg !6007
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !6007

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !6007

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub173 = sub i64 %42, 1, !dbg !6007
  %and174 = and i64 %sub173, 1073741824, !dbg !6007
  %tobool175 = icmp ne i64 %and174, 0, !dbg !6007
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !6007

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !6007

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub178 = sub i64 %43, 1, !dbg !6007
  %and179 = and i64 %sub178, 536870912, !dbg !6007
  %tobool180 = icmp ne i64 %and179, 0, !dbg !6007
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !6007

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !6007

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub183 = sub i64 %44, 1, !dbg !6007
  %and184 = and i64 %sub183, 268435456, !dbg !6007
  %tobool185 = icmp ne i64 %and184, 0, !dbg !6007
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !6007

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !6007

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub188 = sub i64 %45, 1, !dbg !6007
  %and189 = and i64 %sub188, 134217728, !dbg !6007
  %tobool190 = icmp ne i64 %and189, 0, !dbg !6007
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !6007

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !6007

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub193 = sub i64 %46, 1, !dbg !6007
  %and194 = and i64 %sub193, 67108864, !dbg !6007
  %tobool195 = icmp ne i64 %and194, 0, !dbg !6007
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !6007

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !6007

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub198 = sub i64 %47, 1, !dbg !6007
  %and199 = and i64 %sub198, 33554432, !dbg !6007
  %tobool200 = icmp ne i64 %and199, 0, !dbg !6007
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !6007

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !6007

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub203 = sub i64 %48, 1, !dbg !6007
  %and204 = and i64 %sub203, 16777216, !dbg !6007
  %tobool205 = icmp ne i64 %and204, 0, !dbg !6007
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !6007

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !6007

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub208 = sub i64 %49, 1, !dbg !6007
  %and209 = and i64 %sub208, 8388608, !dbg !6007
  %tobool210 = icmp ne i64 %and209, 0, !dbg !6007
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !6007

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !6007

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub213 = sub i64 %50, 1, !dbg !6007
  %and214 = and i64 %sub213, 4194304, !dbg !6007
  %tobool215 = icmp ne i64 %and214, 0, !dbg !6007
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !6007

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !6007

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub218 = sub i64 %51, 1, !dbg !6007
  %and219 = and i64 %sub218, 2097152, !dbg !6007
  %tobool220 = icmp ne i64 %and219, 0, !dbg !6007
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !6007

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !6007

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub223 = sub i64 %52, 1, !dbg !6007
  %and224 = and i64 %sub223, 1048576, !dbg !6007
  %tobool225 = icmp ne i64 %and224, 0, !dbg !6007
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !6007

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !6007

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub228 = sub i64 %53, 1, !dbg !6007
  %and229 = and i64 %sub228, 524288, !dbg !6007
  %tobool230 = icmp ne i64 %and229, 0, !dbg !6007
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !6007

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !6007

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub233 = sub i64 %54, 1, !dbg !6007
  %and234 = and i64 %sub233, 262144, !dbg !6007
  %tobool235 = icmp ne i64 %and234, 0, !dbg !6007
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !6007

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !6007

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub238 = sub i64 %55, 1, !dbg !6007
  %and239 = and i64 %sub238, 131072, !dbg !6007
  %tobool240 = icmp ne i64 %and239, 0, !dbg !6007
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !6007

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !6007

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub243 = sub i64 %56, 1, !dbg !6007
  %and244 = and i64 %sub243, 65536, !dbg !6007
  %tobool245 = icmp ne i64 %and244, 0, !dbg !6007
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !6007

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !6007

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub248 = sub i64 %57, 1, !dbg !6007
  %and249 = and i64 %sub248, 32768, !dbg !6007
  %tobool250 = icmp ne i64 %and249, 0, !dbg !6007
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !6007

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !6007

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub253 = sub i64 %58, 1, !dbg !6007
  %and254 = and i64 %sub253, 16384, !dbg !6007
  %tobool255 = icmp ne i64 %and254, 0, !dbg !6007
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !6007

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !6007

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub258 = sub i64 %59, 1, !dbg !6007
  %and259 = and i64 %sub258, 8192, !dbg !6007
  %tobool260 = icmp ne i64 %and259, 0, !dbg !6007
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !6007

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !6007

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub263 = sub i64 %60, 1, !dbg !6007
  %and264 = and i64 %sub263, 4096, !dbg !6007
  %tobool265 = icmp ne i64 %and264, 0, !dbg !6007
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !6007

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !6007

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub268 = sub i64 %61, 1, !dbg !6007
  %and269 = and i64 %sub268, 2048, !dbg !6007
  %tobool270 = icmp ne i64 %and269, 0, !dbg !6007
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !6007

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !6007

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub273 = sub i64 %62, 1, !dbg !6007
  %and274 = and i64 %sub273, 1024, !dbg !6007
  %tobool275 = icmp ne i64 %and274, 0, !dbg !6007
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !6007

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !6007

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub278 = sub i64 %63, 1, !dbg !6007
  %and279 = and i64 %sub278, 512, !dbg !6007
  %tobool280 = icmp ne i64 %and279, 0, !dbg !6007
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !6007

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !6007

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub283 = sub i64 %64, 1, !dbg !6007
  %and284 = and i64 %sub283, 256, !dbg !6007
  %tobool285 = icmp ne i64 %and284, 0, !dbg !6007
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !6007

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !6007

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub288 = sub i64 %65, 1, !dbg !6007
  %and289 = and i64 %sub288, 128, !dbg !6007
  %tobool290 = icmp ne i64 %and289, 0, !dbg !6007
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !6007

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !6007

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub293 = sub i64 %66, 1, !dbg !6007
  %and294 = and i64 %sub293, 64, !dbg !6007
  %tobool295 = icmp ne i64 %and294, 0, !dbg !6007
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !6007

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !6007

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub298 = sub i64 %67, 1, !dbg !6007
  %and299 = and i64 %sub298, 32, !dbg !6007
  %tobool300 = icmp ne i64 %and299, 0, !dbg !6007
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !6007

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !6007

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub303 = sub i64 %68, 1, !dbg !6007
  %and304 = and i64 %sub303, 16, !dbg !6007
  %tobool305 = icmp ne i64 %and304, 0, !dbg !6007
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !6007

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !6007

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub308 = sub i64 %69, 1, !dbg !6007
  %and309 = and i64 %sub308, 8, !dbg !6007
  %tobool310 = icmp ne i64 %and309, 0, !dbg !6007
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !6007

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !6007

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub313 = sub i64 %70, 1, !dbg !6007
  %and314 = and i64 %sub313, 4, !dbg !6007
  %tobool315 = icmp ne i64 %and314, 0, !dbg !6007
  %71 = zext i1 %tobool315 to i64, !dbg !6007
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !6007
  br label %cond.end, !dbg !6007

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !6007
  br label %cond.end317, !dbg !6007

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !6007
  br label %cond.end319, !dbg !6007

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !6007
  br label %cond.end321, !dbg !6007

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !6007
  br label %cond.end323, !dbg !6007

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !6007
  br label %cond.end325, !dbg !6007

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !6007
  br label %cond.end327, !dbg !6007

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !6007
  br label %cond.end329, !dbg !6007

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !6007
  br label %cond.end331, !dbg !6007

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !6007
  br label %cond.end333, !dbg !6007

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !6007
  br label %cond.end335, !dbg !6007

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !6007
  br label %cond.end337, !dbg !6007

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !6007
  br label %cond.end339, !dbg !6007

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !6007
  br label %cond.end341, !dbg !6007

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !6007
  br label %cond.end343, !dbg !6007

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !6007
  br label %cond.end345, !dbg !6007

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !6007
  br label %cond.end347, !dbg !6007

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !6007
  br label %cond.end349, !dbg !6007

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !6007
  br label %cond.end351, !dbg !6007

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !6007
  br label %cond.end353, !dbg !6007

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !6007
  br label %cond.end355, !dbg !6007

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !6007
  br label %cond.end357, !dbg !6007

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !6007
  br label %cond.end359, !dbg !6007

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !6007
  br label %cond.end361, !dbg !6007

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !6007
  br label %cond.end363, !dbg !6007

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !6007
  br label %cond.end365, !dbg !6007

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !6007
  br label %cond.end367, !dbg !6007

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !6007
  br label %cond.end369, !dbg !6007

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !6007
  br label %cond.end371, !dbg !6007

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !6007
  br label %cond.end373, !dbg !6007

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !6007
  br label %cond.end375, !dbg !6007

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !6007
  br label %cond.end377, !dbg !6007

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !6007
  br label %cond.end379, !dbg !6007

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !6007
  br label %cond.end381, !dbg !6007

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !6007
  br label %cond.end383, !dbg !6007

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !6007
  br label %cond.end385, !dbg !6007

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !6007
  br label %cond.end387, !dbg !6007

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !6007
  br label %cond.end389, !dbg !6007

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !6007
  br label %cond.end391, !dbg !6007

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !6007
  br label %cond.end393, !dbg !6007

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !6007
  br label %cond.end395, !dbg !6007

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !6007
  br label %cond.end397, !dbg !6007

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !6007
  br label %cond.end399, !dbg !6007

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !6007
  br label %cond.end401, !dbg !6007

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !6007
  br label %cond.end403, !dbg !6007

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !6007
  br label %cond.end405, !dbg !6007

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !6007
  br label %cond.end407, !dbg !6007

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !6007
  br label %cond.end409, !dbg !6007

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !6007
  br label %cond.end411, !dbg !6007

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !6007
  br label %cond.end413, !dbg !6007

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !6007
  br label %cond.end415, !dbg !6007

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !6007
  br label %cond.end417, !dbg !6007

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !6007
  br label %cond.end419, !dbg !6007

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !6007
  br label %cond.end421, !dbg !6007

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !6007
  br label %cond.end423, !dbg !6007

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !6007
  br label %cond.end425, !dbg !6007

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !6007
  br label %cond.end427, !dbg !6007

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !6007
  br label %cond.end429, !dbg !6007

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !6007
  br label %cond.end431, !dbg !6007

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !6007
  br label %cond.end433, !dbg !6007

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !6007
  br label %cond.end435, !dbg !6007

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !6007
  br label %cond.end437, !dbg !6007

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !6007
  br label %cond.end440, !dbg !6007

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !6007

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !6007
  br label %cond.end444, !dbg !6007

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !6007
  %sub443 = sub i64 %72, 1, !dbg !6007
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !6007
  br label %cond.end444, !dbg !6007

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !6007
  %sub446 = sub i32 %cond445, 12, !dbg !6008
  %add = add i32 %sub446, 1, !dbg !6009
  store i32 %add, i32* %retval, align 4, !dbg !6010
  br label %return, !dbg !6010

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !6011
  %dec = add i64 %73, -1, !dbg !6011
  store i64 %dec, i64* %size.addr, align 8, !dbg !6011
  %74 = load i64, i64* %size.addr, align 8, !dbg !6012
  %shr = lshr i64 %74, 12, !dbg !6012
  store i64 %shr, i64* %size.addr, align 8, !dbg !6012
  %75 = load i64, i64* %size.addr, align 8, !dbg !6013
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5990
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !6014
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !6015
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !6014, !srcloc !6016
  store i32 %78, i32* %bitpos.i, align 4, !dbg !6014
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !6017
  %add.i = add i32 %79, 1, !dbg !6018
  store i32 %add.i, i32* %retval, align 4, !dbg !6019
  br label %return, !dbg !6019

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !6020
  ret i32 %80, !dbg !6020
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !6021 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5982, metadata !DIExpression()), !dbg !6025
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5989, metadata !DIExpression()), !dbg !6027
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  %0 = load i64, i64* %n.addr, align 8, !dbg !6030
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6027
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !6031
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !6032
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !6031, !srcloc !6016
  store i32 %3, i32* %bitpos.i, align 4, !dbg !6031
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !6033
  %add.i = add i32 %4, 1, !dbg !6034
  %sub = sub i32 %add.i, 1, !dbg !6035
  ret i32 %sub, !dbg !6036
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #3 !dbg !6037 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !6041, metadata !DIExpression()), !dbg !6042
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !6043, metadata !DIExpression()), !dbg !6044
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6045, metadata !DIExpression()), !dbg !6046
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6047, metadata !DIExpression()), !dbg !6048
  %0 = load i8*, i8** %object.addr, align 8, !dbg !6049
  ret i8* %0, !dbg !6050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_carrier_raised(%struct.tty_port* %port) #3 !dbg !6051 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !6052, metadata !DIExpression()), !dbg !6054
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6056, metadata !DIExpression()), !dbg !6058
  %port.addr = alloca %struct.tty_port*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.moxa_port*, align 8
  %dcd = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !6060, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !6062, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6064, metadata !DIExpression()), !dbg !6066
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6066
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !6066
  store i8* %1, i8** %__mptr, align 8, !dbg !6066
  br label %do.body, !dbg !6066

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6067

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6066
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6066
  %3 = bitcast i8* %add.ptr to %struct.moxa_port*, !dbg !6066
  store %struct.moxa_port* %3, %struct.moxa_port** %tmp, align 8, !dbg !6067
  %4 = load %struct.moxa_port*, %struct.moxa_port** %tmp, align 8, !dbg !6066
  store %struct.moxa_port* %4, %struct.moxa_port** %ch, align 8, !dbg !6063
  call void @llvm.dbg.declare(metadata i32* %dcd, metadata !6069, metadata !DIExpression()), !dbg !6070
  %5 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6071
  %lock = getelementptr inbounds %struct.tty_port, %struct.tty_port* %5, i32 0, i32 5, !dbg !6072
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !6073
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6076, !srcloc !6078
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6079
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !6079
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !6079
  %8 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !6081
  %DCDState = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %8, i32 0, i32 6, !dbg !6082
  %9 = load i8, i8* %DCDState, align 8, !dbg !6082
  %conv = zext i8 %9 to i32, !dbg !6081
  store i32 %conv, i32* %dcd, align 4, !dbg !6083
  %10 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6084
  %lock1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %10, i32 0, i32 5, !dbg !6085
  store %struct.spinlock* %lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #15, !dbg !6086
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6089, !srcloc !6091
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !6092
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !6092
  %rlock.i3 = bitcast %union.anon.2* %12 to %struct.raw_spinlock*, !dbg !6092
  %13 = load i32, i32* %dcd, align 4, !dbg !6094
  ret i32 %13, !dbg !6095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_dtr_rts(%struct.tty_port* %port, i32 %onoff) #3 !dbg !6096 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %onoff.addr = alloca i32, align 4
  %ch = alloca %struct.moxa_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.moxa_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !6097, metadata !DIExpression()), !dbg !6098
  store i32 %onoff, i32* %onoff.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onoff.addr, metadata !6099, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !6101, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6103, metadata !DIExpression()), !dbg !6105
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6105
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !6105
  store i8* %1, i8** %__mptr, align 8, !dbg !6105
  br label %do.body, !dbg !6105

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6106

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6105
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6105
  %3 = bitcast i8* %add.ptr to %struct.moxa_port*, !dbg !6105
  store %struct.moxa_port* %3, %struct.moxa_port** %tmp, align 8, !dbg !6106
  %4 = load %struct.moxa_port*, %struct.moxa_port** %tmp, align 8, !dbg !6105
  store %struct.moxa_port* %4, %struct.moxa_port** %ch, align 8, !dbg !6102
  %5 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !6108
  %6 = load i32, i32* %onoff.addr, align 4, !dbg !6109
  %7 = load i32, i32* %onoff.addr, align 4, !dbg !6110
  call void @MoxaPortLineCtrl(%struct.moxa_port* %5, i32 %6, i32 %7) #12, !dbg !6111
  ret void, !dbg !6112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_shutdown(%struct.tty_port* %port) #3 !dbg !6113 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.moxa_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !6114, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !6116, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6118, metadata !DIExpression()), !dbg !6120
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6120
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !6120
  store i8* %1, i8** %__mptr, align 8, !dbg !6120
  br label %do.body, !dbg !6120

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6121

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6120
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6120
  %3 = bitcast i8* %add.ptr to %struct.moxa_port*, !dbg !6120
  store %struct.moxa_port* %3, %struct.moxa_port** %tmp, align 8, !dbg !6121
  %4 = load %struct.moxa_port*, %struct.moxa_port** %tmp, align 8, !dbg !6120
  store %struct.moxa_port* %4, %struct.moxa_port** %ch, align 8, !dbg !6117
  %5 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !6123
  call void @MoxaPortDisable(%struct.moxa_port* %5) #12, !dbg !6124
  %6 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !6125
  call void @MoxaPortFlushData(%struct.moxa_port* %6, i32 2) #12, !dbg !6126
  ret void, !dbg !6127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #3 !dbg !6128 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6130, metadata !DIExpression()), !dbg !6132
  %0 = load i64, i64* %__edi, align 8, !dbg !6132
  store i64 %0, i64* %__edi, align 8, !dbg !6132
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6133, metadata !DIExpression()), !dbg !6132
  %1 = load i64, i64* %__esi, align 8, !dbg !6132
  store i64 %1, i64* %__esi, align 8, !dbg !6132
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6134, metadata !DIExpression()), !dbg !6132
  %2 = load i64, i64* %__edx, align 8, !dbg !6132
  store i64 %2, i64* %__edx, align 8, !dbg !6132
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6135, metadata !DIExpression()), !dbg !6132
  %3 = load i64, i64* %__ecx, align 8, !dbg !6132
  store i64 %3, i64* %__ecx, align 8, !dbg !6132
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6136, metadata !DIExpression()), !dbg !6132
  %4 = load i64, i64* %__eax, align 8, !dbg !6132
  store i64 %4, i64* %__eax, align 8, !dbg !6132
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6132
  %6 = call i64 @llvm.read_register.i64(metadata !4715), !dbg !6132
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !6132, !srcloc !6137
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6132
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6132
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6132
  call void @llvm.write_register.i64(metadata !4715, i64 %asmresult1), !dbg !6132
  ret void, !dbg !6138
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #3 !dbg !6139 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6140, metadata !DIExpression()), !dbg !6142
  %0 = load i64, i64* %__edi, align 8, !dbg !6142
  store i64 %0, i64* %__edi, align 8, !dbg !6142
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6143, metadata !DIExpression()), !dbg !6142
  %1 = load i64, i64* %__esi, align 8, !dbg !6142
  store i64 %1, i64* %__esi, align 8, !dbg !6142
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6144, metadata !DIExpression()), !dbg !6142
  %2 = load i64, i64* %__edx, align 8, !dbg !6142
  store i64 %2, i64* %__edx, align 8, !dbg !6142
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6145, metadata !DIExpression()), !dbg !6142
  %3 = load i64, i64* %__ecx, align 8, !dbg !6142
  store i64 %3, i64* %__ecx, align 8, !dbg !6142
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6146, metadata !DIExpression()), !dbg !6142
  %4 = load i64, i64* %__eax, align 8, !dbg !6142
  store i64 %4, i64* %__eax, align 8, !dbg !6142
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !6142
  %6 = call i64 @llvm.read_register.i64(metadata !4715), !dbg !6142
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #10, !dbg !6142, !srcloc !6147
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6142
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6142
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6142
  call void @llvm.write_register.i64(metadata !4715, i64 %asmresult1), !dbg !6142
  ret void, !dbg !6148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @MoxaPortLineCtrl(%struct.moxa_port* %port, i32 %dtr, i32 %rts) #3 !dbg !6149 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %dtr.addr = alloca i32, align 4
  %rts.addr = alloca i32, align 4
  %mode = alloca i8, align 1
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !6152, metadata !DIExpression()), !dbg !6153
  store i32 %dtr, i32* %dtr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dtr.addr, metadata !6154, metadata !DIExpression()), !dbg !6155
  store i32 %rts, i32* %rts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rts.addr, metadata !6156, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.declare(metadata i8* %mode, metadata !6158, metadata !DIExpression()), !dbg !6159
  store i8 0, i8* %mode, align 1, !dbg !6159
  %0 = load i32, i32* %dtr.addr, align 4, !dbg !6160
  %tobool = icmp ne i32 %0, 0, !dbg !6160
  br i1 %tobool, label %if.then, label %if.end, !dbg !6162

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %mode, align 1, !dbg !6163
  %conv = zext i8 %1 to i32, !dbg !6163
  %or = or i32 %conv, 1, !dbg !6163
  %conv1 = trunc i32 %or to i8, !dbg !6163
  store i8 %conv1, i8* %mode, align 1, !dbg !6163
  br label %if.end, !dbg !6164

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %rts.addr, align 4, !dbg !6165
  %tobool2 = icmp ne i32 %2, 0, !dbg !6165
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !6167

if.then3:                                         ; preds = %if.end
  %3 = load i8, i8* %mode, align 1, !dbg !6168
  %conv4 = zext i8 %3 to i32, !dbg !6168
  %or5 = or i32 %conv4, 2, !dbg !6168
  %conv6 = trunc i32 %or5 to i8, !dbg !6168
  store i8 %conv6, i8* %mode, align 1, !dbg !6168
  br label %if.end7, !dbg !6169

if.end7:                                          ; preds = %if.then3, %if.end
  %4 = load i8, i8* %mode, align 1, !dbg !6170
  %5 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !6171
  %lineCtrl = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %5, i32 0, i32 7, !dbg !6172
  store i8 %4, i8* %lineCtrl, align 1, !dbg !6173
  %6 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !6174
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %6, i32 0, i32 2, !dbg !6175
  %7 = load i8*, i8** %tableAddr, align 8, !dbg !6175
  %8 = load i8, i8* %mode, align 1, !dbg !6176
  %conv8 = zext i8 %8 to i16, !dbg !6176
  call void @moxafunc(i8* %7, i16 zeroext 7, i16 zeroext %conv8) #12, !dbg !6177
  ret void, !dbg !6178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxafunc(i8* %ofsAddr, i16 zeroext %cmd, i16 zeroext %arg) #3 !dbg !6179 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !6182, metadata !DIExpression()), !dbg !6186
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6188, metadata !DIExpression()), !dbg !6189
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6190, metadata !DIExpression()), !dbg !6195
  %ofsAddr.addr = alloca i8*, align 8
  %cmd.addr = alloca i16, align 2
  %arg.addr = alloca i16, align 2
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i8* %ofsAddr, i8** %ofsAddr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ofsAddr.addr, metadata !6202, metadata !DIExpression()), !dbg !6203
  store i16 %cmd, i16* %cmd.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cmd.addr, metadata !6204, metadata !DIExpression()), !dbg !6205
  store i16 %arg, i16* %arg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %arg.addr, metadata !6206, metadata !DIExpression()), !dbg !6207
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6208, metadata !DIExpression()), !dbg !6209
  br label %do.body, !dbg !6210

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6211

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6212, metadata !DIExpression()), !dbg !6214
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6215, metadata !DIExpression()), !dbg !6214
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6214
  %conv = zext i1 %cmp to i32, !dbg !6214
  store i32 1, i32* %tmp, align 4, !dbg !6214
  %0 = load i32, i32* %tmp, align 4, !dbg !6214
  br label %do.body2, !dbg !6216

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6217

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6218

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6220, metadata !DIExpression()), !dbg !6223
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6224, metadata !DIExpression()), !dbg !6223
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6223
  %conv8 = zext i1 %cmp7 to i32, !dbg !6223
  store i32 1, i32* %tmp9, align 4, !dbg !6223
  %1 = load i32, i32* %tmp9, align 4, !dbg !6223
  %call = call i64 @arch_local_irq_save() #12, !dbg !6225
  store i64 %call, i64* %flags, align 8, !dbg !6225
  br label %do.end, !dbg !6225

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6218

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6217

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6226, !srcloc !6227
  br label %do.body12, !dbg !6226

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @moxafunc_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6228
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !6229
  %rlock.i = bitcast %union.anon.2* %3 to %struct.raw_spinlock*, !dbg !6229
  br label %do.end14, !dbg !6230

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6226

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6217

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6216

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6211

do.end18:                                         ; preds = %do.end17
  %4 = load i16, i16* %arg.addr, align 2, !dbg !6231
  %5 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !6232
  %add.ptr = getelementptr i8, i8* %5, i64 66, !dbg !6233
  call void @writew(i16 zeroext %4, i8* %add.ptr) #12, !dbg !6234
  %6 = load i16, i16* %cmd.addr, align 2, !dbg !6235
  %7 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !6236
  %add.ptr19 = getelementptr i8, i8* %7, i64 64, !dbg !6237
  call void @writew(i16 zeroext %6, i8* %add.ptr19) #12, !dbg !6238
  %8 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !6239
  call void @moxa_wait_finish(i8* %8) #12, !dbg !6240
  %9 = load i64, i64* %flags, align 8, !dbg !6241
  store %struct.spinlock* @moxafunc_lock, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !199, metadata !6242, metadata !DIExpression()) #10, !dbg !6245
  call void @llvm.dbg.declare(metadata !199, metadata !6246, metadata !DIExpression()) #10, !dbg !6245
  store i32 1, i32* %tmp.i, align 4, !dbg !6245
  %10 = load i32, i32* %tmp.i, align 4, !dbg !6245
  call void @llvm.dbg.declare(metadata !199, metadata !6247, metadata !DIExpression()) #10, !dbg !6252
  call void @llvm.dbg.declare(metadata !199, metadata !6253, metadata !DIExpression()) #10, !dbg !6252
  store i32 1, i32* %tmp8.i, align 4, !dbg !6252
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !6252
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !6254
  call void @arch_local_irq_restore(i64 %12) #15, !dbg !6254
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !6255, !srcloc !6257
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !6258
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !6258
  %rlock.i21 = bitcast %union.anon.2* %14 to %struct.raw_spinlock*, !dbg !6258
  ret void, !dbg !6260
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #3 !dbg !6261 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6264, metadata !DIExpression()), !dbg !6265
  %call = call i64 @arch_local_save_flags() #12, !dbg !6266
  store i64 %call, i64* %f, align 8, !dbg !6267
  call void @arch_local_irq_disable() #12, !dbg !6268
  %0 = load i64, i64* %f, align 8, !dbg !6269
  ret i64 %0, !dbg !6270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #3 !dbg !6271 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !6277, metadata !DIExpression()), !dbg !6278
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6279, metadata !DIExpression()), !dbg !6278
  %0 = load i16, i16* %val.addr, align 2, !dbg !6278
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !6278
  %2 = bitcast i8* %1 to i16*, !dbg !6278
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #10, !dbg !6278, !srcloc !6280
  ret void, !dbg !6278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_wait_finish(i8* %ofsAddr) #3 !dbg !4686 {
entry:
  %ofsAddr.addr = alloca i8*, align 8
  %end = alloca i64, align 8
  store i8* %ofsAddr, i8** %ofsAddr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ofsAddr.addr, metadata !6281, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.declare(metadata i64* %end, metadata !6283, metadata !DIExpression()), !dbg !6284
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !6285
  %1 = load i32, i32* @moxaFuncTout, align 4, !dbg !6286
  %conv = zext i32 %1 to i64, !dbg !6286
  %add = add i64 %0, %conv, !dbg !6287
  store i64 %add, i64* %end, align 8, !dbg !6284
  br label %while.cond, !dbg !6288

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !6289
  %add.ptr = getelementptr i8, i8* %2, i64 64, !dbg !6290
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !6291
  %conv1 = zext i16 %call to i32, !dbg !6291
  %cmp = icmp ne i32 %conv1, 0, !dbg !6292
  br i1 %cmp, label %while.body, label %while.end, !dbg !6288

while.body:                                       ; preds = %while.cond
  %3 = load i64, i64* %end, align 8, !dbg !6293
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !6293
  %sub = sub i64 %3, %4, !dbg !6293
  %cmp3 = icmp slt i64 %sub, 0, !dbg !6293
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6295

if.then:                                          ; preds = %while.body
  br label %if.end15, !dbg !6296

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !6288, !llvm.loop !6297

while.end:                                        ; preds = %while.cond
  %5 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !6299
  %add.ptr5 = getelementptr i8, i8* %5, i64 64, !dbg !6301
  %call6 = call zeroext i16 @readw(i8* %add.ptr5) #12, !dbg !6302
  %conv7 = zext i16 %call6 to i32, !dbg !6302
  %cmp8 = icmp ne i32 %conv7, 0, !dbg !6303
  br i1 %cmp8, label %if.then10, label %if.end15, !dbg !6304

if.then10:                                        ; preds = %while.end
  %call11 = call i32 @___ratelimit(%struct.ratelimit_state* @moxa_wait_finish._rs, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.moxa_wait_finish, i64 0, i64 0)) #12, !dbg !6305
  %tobool = icmp ne i32 %call11, 0, !dbg !6305
  br i1 %tobool, label %if.then12, label %if.end14, !dbg !6308

if.then12:                                        ; preds = %if.then10
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0)) #13, !dbg !6305
  br label %if.end14, !dbg !6305

if.end14:                                         ; preds = %if.then12, %if.then10
  br label %if.end15, !dbg !6309

if.end15:                                         ; preds = %if.then, %if.end14, %while.end
  ret void, !dbg !6310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #3 !dbg !6311 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6312, metadata !DIExpression()), !dbg !6314
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6315, metadata !DIExpression()), !dbg !6314
  %0 = load i64, i64* %__edi, align 8, !dbg !6314
  store i64 %0, i64* %__edi, align 8, !dbg !6314
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6316, metadata !DIExpression()), !dbg !6314
  %1 = load i64, i64* %__esi, align 8, !dbg !6314
  store i64 %1, i64* %__esi, align 8, !dbg !6314
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6317, metadata !DIExpression()), !dbg !6314
  %2 = load i64, i64* %__edx, align 8, !dbg !6314
  store i64 %2, i64* %__edx, align 8, !dbg !6314
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6318, metadata !DIExpression()), !dbg !6314
  %3 = load i64, i64* %__ecx, align 8, !dbg !6314
  store i64 %3, i64* %__ecx, align 8, !dbg !6314
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6319, metadata !DIExpression()), !dbg !6314
  %4 = load i64, i64* %__eax, align 8, !dbg !6314
  store i64 %4, i64* %__eax, align 8, !dbg !6314
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !6314
  %6 = call i64 @llvm.read_register.i64(metadata !4715), !dbg !6320
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !6320, !srcloc !6323
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6320
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6320
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6320
  call void @llvm.write_register.i64(metadata !4715, i64 %asmresult1), !dbg !6320
  %8 = load i64, i64* %__eax, align 8, !dbg !6320
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !6324, metadata !DIExpression()), !dbg !6326
  store i64 -1, i64* %__mask, align 8, !dbg !6326
  %9 = load i64, i64* %__mask, align 8, !dbg !6326
  store i64 %9, i64* %tmp, align 8, !dbg !6326
  %10 = load i64, i64* %tmp, align 8, !dbg !6326
  %and = and i64 %8, %10, !dbg !6320
  store i64 %and, i64* %__ret, align 8, !dbg !6320
  %11 = load i64, i64* %__ret, align 8, !dbg !6314
  store i64 %11, i64* %tmp2, align 8, !dbg !6327
  %12 = load i64, i64* %tmp2, align 8, !dbg !6314
  ret i64 %12, !dbg !6328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #3 !dbg !6329 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6334, metadata !DIExpression()), !dbg !6335
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !6336, metadata !DIExpression()), !dbg !6335
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !6335
  %1 = bitcast i8* %0 to i16*, !dbg !6335
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #10, !dbg !6335, !srcloc !6337
  store i16 %2, i16* %ret, align 2, !dbg !6335
  %3 = load i16, i16* %ret, align 2, !dbg !6335
  ret i16 %3, !dbg !6335
}

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #3 !dbg !6338 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !6341, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6343, metadata !DIExpression()), !dbg !6345
  %0 = load i64, i64* %__edi, align 8, !dbg !6345
  store i64 %0, i64* %__edi, align 8, !dbg !6345
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6346, metadata !DIExpression()), !dbg !6345
  %1 = load i64, i64* %__esi, align 8, !dbg !6345
  store i64 %1, i64* %__esi, align 8, !dbg !6345
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6347, metadata !DIExpression()), !dbg !6345
  %2 = load i64, i64* %__edx, align 8, !dbg !6345
  store i64 %2, i64* %__edx, align 8, !dbg !6345
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6348, metadata !DIExpression()), !dbg !6345
  %3 = load i64, i64* %__ecx, align 8, !dbg !6345
  store i64 %3, i64* %__ecx, align 8, !dbg !6345
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6349, metadata !DIExpression()), !dbg !6345
  %4 = load i64, i64* %__eax, align 8, !dbg !6345
  store i64 %4, i64* %__eax, align 8, !dbg !6345
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !6345
  %6 = call i64 @llvm.read_register.i64(metadata !4715), !dbg !6345
  %7 = load i64, i64* %f.addr, align 8, !dbg !6345
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !6345, !srcloc !6350
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !6345
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !6345
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6345
  call void @llvm.write_register.i64(metadata !4715, i64 %asmresult1), !dbg !6345
  ret void, !dbg !6351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @MoxaPortDisable(%struct.moxa_port* %port) #3 !dbg !6352 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %ofsAddr = alloca i8*, align 8
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !6355, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !6357, metadata !DIExpression()), !dbg !6358
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !6359
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !6360
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !6360
  store i8* %1, i8** %ofsAddr, align 8, !dbg !6358
  %2 = load i8*, i8** %ofsAddr, align 8, !dbg !6361
  call void @moxafunc(i8* %2, i16 zeroext 21, i16 zeroext 0) #12, !dbg !6362
  %3 = load i8*, i8** %ofsAddr, align 8, !dbg !6363
  call void @moxafunc(i8* %3, i16 zeroext 29, i16 zeroext 1028) #12, !dbg !6364
  %4 = load i8*, i8** %ofsAddr, align 8, !dbg !6365
  %add.ptr = getelementptr i8, i8* %4, i64 8, !dbg !6366
  call void @writew(i16 zeroext 0, i8* %add.ptr) #12, !dbg !6367
  %5 = load i8*, i8** %ofsAddr, align 8, !dbg !6368
  call void @moxafunc(i8* %5, i16 zeroext 3, i16 zeroext 1028) #12, !dbg !6369
  ret void, !dbg !6370
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @MoxaPortFlushData(%struct.moxa_port* %port, i32 %mode) #3 !dbg !6371 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %mode.addr = alloca i32, align 4
  %ofsAddr = alloca i8*, align 8
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !6374, metadata !DIExpression()), !dbg !6375
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6376, metadata !DIExpression()), !dbg !6377
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !6378, metadata !DIExpression()), !dbg !6379
  %0 = load i32, i32* %mode.addr, align 4, !dbg !6380
  %cmp = icmp slt i32 %0, 0, !dbg !6382
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6383

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %mode.addr, align 4, !dbg !6384
  %cmp1 = icmp sgt i32 %1, 2, !dbg !6385
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6386

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end5, !dbg !6387

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !6388
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %2, i32 0, i32 2, !dbg !6389
  %3 = load i8*, i8** %tableAddr, align 8, !dbg !6389
  store i8* %3, i8** %ofsAddr, align 8, !dbg !6390
  %4 = load i8*, i8** %ofsAddr, align 8, !dbg !6391
  %5 = load i32, i32* %mode.addr, align 4, !dbg !6392
  %conv = trunc i32 %5 to i16, !dbg !6392
  call void @moxafunc(i8* %4, i16 zeroext 10, i16 zeroext %conv) #12, !dbg !6393
  %6 = load i32, i32* %mode.addr, align 4, !dbg !6394
  %cmp2 = icmp ne i32 %6, 1, !dbg !6396
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !6397

if.then4:                                         ; preds = %if.end
  %7 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !6398
  %lowChkFlag = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %7, i32 0, i32 8, !dbg !6400
  store i8 0, i8* %lowChkFlag, align 2, !dbg !6401
  %8 = load i8*, i8** %ofsAddr, align 8, !dbg !6402
  call void @moxa_low_water_check(i8* %8) #12, !dbg !6403
  br label %if.end5, !dbg !6404

if.end5:                                          ; preds = %if.then, %if.then4, %if.end
  ret void, !dbg !6405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_low_water_check(i8* %ofsAddr) #3 !dbg !6406 {
entry:
  %ofsAddr.addr = alloca i8*, align 8
  %rptr = alloca i16, align 2
  %wptr = alloca i16, align 2
  %mask = alloca i16, align 2
  %len = alloca i16, align 2
  store i8* %ofsAddr, i8** %ofsAddr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ofsAddr.addr, metadata !6407, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.declare(metadata i16* %rptr, metadata !6409, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.declare(metadata i16* %wptr, metadata !6411, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.declare(metadata i16* %mask, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata i16* %len, metadata !6415, metadata !DIExpression()), !dbg !6416
  %0 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !6417
  %add.ptr = getelementptr i8, i8* %0, i64 10, !dbg !6419
  %call = call zeroext i8 @readb(i8* %add.ptr) #12, !dbg !6420
  %conv = zext i8 %call to i32, !dbg !6420
  %and = and i32 %conv, 2, !dbg !6421
  %tobool = icmp ne i32 %and, 0, !dbg !6421
  br i1 %tobool, label %if.then, label %if.end15, !dbg !6422

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !6423
  %add.ptr1 = getelementptr i8, i8* %1, i64 0, !dbg !6425
  %call2 = call zeroext i16 @readw(i8* %add.ptr1) #12, !dbg !6426
  store i16 %call2, i16* %rptr, align 2, !dbg !6427
  %2 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !6428
  %add.ptr3 = getelementptr i8, i8* %2, i64 2, !dbg !6429
  %call4 = call zeroext i16 @readw(i8* %add.ptr3) #12, !dbg !6430
  store i16 %call4, i16* %wptr, align 2, !dbg !6431
  %3 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !6432
  %add.ptr5 = getelementptr i8, i8* %3, i64 18, !dbg !6433
  %call6 = call zeroext i16 @readw(i8* %add.ptr5) #12, !dbg !6434
  store i16 %call6, i16* %mask, align 2, !dbg !6435
  %4 = load i16, i16* %wptr, align 2, !dbg !6436
  %conv7 = zext i16 %4 to i32, !dbg !6436
  %5 = load i16, i16* %rptr, align 2, !dbg !6437
  %conv8 = zext i16 %5 to i32, !dbg !6437
  %sub = sub i32 %conv7, %conv8, !dbg !6438
  %6 = load i16, i16* %mask, align 2, !dbg !6439
  %conv9 = zext i16 %6 to i32, !dbg !6439
  %and10 = and i32 %sub, %conv9, !dbg !6440
  %conv11 = trunc i32 %and10 to i16, !dbg !6441
  store i16 %conv11, i16* %len, align 2, !dbg !6442
  %7 = load i16, i16* %len, align 2, !dbg !6443
  %conv12 = zext i16 %7 to i32, !dbg !6443
  %cmp = icmp sle i32 %conv12, 54, !dbg !6445
  br i1 %cmp, label %if.then14, label %if.end, !dbg !6446

if.then14:                                        ; preds = %if.then
  %8 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !6447
  call void @moxafunc(i8* %8, i16 zeroext 16, i16 zeroext 0) #12, !dbg !6448
  br label %if.end, !dbg !6448

if.end:                                           ; preds = %if.then14, %if.then
  br label %if.end15, !dbg !6449

if.end15:                                         ; preds = %if.end, %entry
  ret void, !dbg !6450
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #3 !dbg !6451 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6454, metadata !DIExpression()), !dbg !6455
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !6456, metadata !DIExpression()), !dbg !6455
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !6455
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #10, !dbg !6455, !srcloc !6457
  store i8 %1, i8* %ret, align 1, !dbg !6455
  %2 = load i8, i8* %ret, align 1, !dbg !6455
  ret i8 %2, !dbg !6455
}

; Function Attrs: noredzone
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_check_fw_model(%struct.moxa_board_conf* %brd, i8 zeroext %model) #3 !dbg !6458 {
entry:
  %retval = alloca i32, align 4
  %brd.addr = alloca %struct.moxa_board_conf*, align 8
  %model.addr = alloca i8, align 1
  store %struct.moxa_board_conf* %brd, %struct.moxa_board_conf** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd.addr, metadata !6461, metadata !DIExpression()), !dbg !6462
  store i8 %model, i8* %model.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %model.addr, metadata !6463, metadata !DIExpression()), !dbg !6464
  %0 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6465
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %0, i32 0, i32 0, !dbg !6466
  %1 = load i32, i32* %boardType, align 8, !dbg !6466
  switch i32 %1, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb
    i32 5, label %sw.bb2
  ], !dbg !6467

sw.bb:                                            ; preds = %entry, %entry
  %2 = load i8, i8* %model.addr, align 1, !dbg !6468
  %conv = zext i8 %2 to i32, !dbg !6468
  %cmp = icmp ne i32 %conv, 1, !dbg !6471
  br i1 %cmp, label %if.then, label %if.end, !dbg !6472

if.then:                                          ; preds = %sw.bb
  br label %err, !dbg !6473

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !6474

sw.bb2:                                           ; preds = %entry
  %3 = load i8, i8* %model.addr, align 1, !dbg !6475
  %conv3 = zext i8 %3 to i32, !dbg !6475
  %cmp4 = icmp ne i32 %conv3, 3, !dbg !6477
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !6478

if.then6:                                         ; preds = %sw.bb2
  br label %err, !dbg !6479

if.end7:                                          ; preds = %sw.bb2
  br label %sw.epilog, !dbg !6480

sw.default:                                       ; preds = %entry
  %4 = load i8, i8* %model.addr, align 1, !dbg !6481
  %conv8 = zext i8 %4 to i32, !dbg !6481
  %cmp9 = icmp ne i32 %conv8, 2, !dbg !6483
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !6484

if.then11:                                        ; preds = %sw.default
  br label %err, !dbg !6485

if.end12:                                         ; preds = %sw.default
  br label %sw.epilog, !dbg !6486

sw.epilog:                                        ; preds = %if.end12, %if.end7, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6487
  br label %return, !dbg !6487

err:                                              ; preds = %if.then11, %if.then6, %if.then
  call void @llvm.dbg.label(metadata !6488), !dbg !6489
  store i32 -22, i32* %retval, align 4, !dbg !6490
  br label %return, !dbg !6490

return:                                           ; preds = %err, %sw.epilog
  %5 = load i32, i32* %retval, align 4, !dbg !6491
  ret i32 %5, !dbg !6491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_check_fw(i8* %ptr) #3 !dbg !6492 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca i8*, align 8
  %lptr = alloca i16*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6495, metadata !DIExpression()), !dbg !6496
  call void @llvm.dbg.declare(metadata i16** %lptr, metadata !6497, metadata !DIExpression()), !dbg !6500
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6501
  %1 = bitcast i8* %0 to i16*, !dbg !6501
  store i16* %1, i16** %lptr, align 8, !dbg !6500
  %2 = load i16*, i16** %lptr, align 8, !dbg !6502
  %3 = load i16, i16* %2, align 2, !dbg !6504
  %conv = zext i16 %3 to i32, !dbg !6504
  %cmp = icmp ne i32 %conv, 31104, !dbg !6505
  br i1 %cmp, label %if.then, label %if.end, !dbg !6506

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6507
  br label %return, !dbg !6507

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6508
  br label %return, !dbg !6508

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !6509
  ret i32 %4, !dbg !6509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_load_bios(%struct.moxa_board_conf* %brd, i8* %buf, i64 %len) #3 !dbg !6510 {
entry:
  %retval = alloca i32, align 4
  %brd.addr = alloca %struct.moxa_board_conf*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %baseAddr = alloca i8*, align 8
  %tmp = alloca i16, align 2
  store %struct.moxa_board_conf* %brd, %struct.moxa_board_conf** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd.addr, metadata !6513, metadata !DIExpression()), !dbg !6514
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6515, metadata !DIExpression()), !dbg !6516
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6517, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.declare(metadata i8** %baseAddr, metadata !6519, metadata !DIExpression()), !dbg !6520
  %0 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6521
  %basemem = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %0, i32 0, i32 5, !dbg !6522
  %1 = load i8*, i8** %basemem, align 8, !dbg !6522
  store i8* %1, i8** %baseAddr, align 8, !dbg !6520
  call void @llvm.dbg.declare(metadata i16* %tmp, metadata !6523, metadata !DIExpression()), !dbg !6524
  %2 = load i8*, i8** %baseAddr, align 8, !dbg !6525
  %add.ptr = getelementptr i8, i8* %2, i64 8176, !dbg !6526
  call void @writeb(i8 zeroext -128, i8* %add.ptr) #12, !dbg !6527
  call void @msleep(i32 10) #12, !dbg !6528
  %3 = load i8*, i8** %baseAddr, align 8, !dbg !6529
  call void @memset_io(i8* %3, i32 0, i64 4096) #12, !dbg !6530
  %4 = load i8*, i8** %baseAddr, align 8, !dbg !6531
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !6532
  %6 = load i64, i64* %len.addr, align 8, !dbg !6533
  call void @memcpy_toio(i8* %4, i8* %5, i64 %6) #12, !dbg !6534
  %7 = load i8*, i8** %baseAddr, align 8, !dbg !6535
  %add.ptr1 = getelementptr i8, i8* %7, i64 8176, !dbg !6536
  call void @writeb(i8 zeroext 0, i8* %add.ptr1) #12, !dbg !6537
  call void @msleep(i32 2000) #12, !dbg !6538
  %8 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6539
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %8, i32 0, i32 0, !dbg !6540
  %9 = load i32, i32* %boardType, align 8, !dbg !6540
  switch i32 %9, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb
    i32 5, label %sw.bb4
  ], !dbg !6541

sw.bb:                                            ; preds = %entry, %entry
  %10 = load i8*, i8** %baseAddr, align 8, !dbg !6542
  %add.ptr2 = getelementptr i8, i8* %10, i64 2052, !dbg !6544
  %call = call zeroext i16 @readw(i8* %add.ptr2) #12, !dbg !6545
  store i16 %call, i16* %tmp, align 2, !dbg !6546
  %11 = load i16, i16* %tmp, align 2, !dbg !6547
  %conv = zext i16 %11 to i32, !dbg !6547
  %cmp = icmp ne i32 %conv, 536, !dbg !6549
  br i1 %cmp, label %if.then, label %if.end, !dbg !6550

if.then:                                          ; preds = %sw.bb
  br label %err, !dbg !6551

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !6552

sw.bb4:                                           ; preds = %entry
  %12 = load i8*, i8** %baseAddr, align 8, !dbg !6553
  %add.ptr5 = getelementptr i8, i8* %12, i64 2052, !dbg !6554
  %call6 = call zeroext i16 @readw(i8* %add.ptr5) #12, !dbg !6555
  store i16 %call6, i16* %tmp, align 2, !dbg !6556
  %13 = load i16, i16* %tmp, align 2, !dbg !6557
  %conv7 = zext i16 %13 to i32, !dbg !6557
  %cmp8 = icmp ne i32 %conv7, 516, !dbg !6559
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !6560

if.then10:                                        ; preds = %sw.bb4
  br label %err, !dbg !6561

if.end11:                                         ; preds = %sw.bb4
  br label %sw.epilog, !dbg !6562

sw.default:                                       ; preds = %entry
  %14 = load i8*, i8** %baseAddr, align 8, !dbg !6563
  %add.ptr12 = getelementptr i8, i8* %14, i64 2048, !dbg !6564
  %add.ptr13 = getelementptr i8, i8* %add.ptr12, i64 4, !dbg !6565
  %call14 = call zeroext i16 @readw(i8* %add.ptr13) #12, !dbg !6566
  store i16 %call14, i16* %tmp, align 2, !dbg !6567
  %15 = load i16, i16* %tmp, align 2, !dbg !6568
  %conv15 = zext i16 %15 to i32, !dbg !6568
  %cmp16 = icmp ne i32 %conv15, 800, !dbg !6570
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !6571

if.then18:                                        ; preds = %sw.default
  br label %err, !dbg !6572

if.end19:                                         ; preds = %sw.default
  %16 = load i8*, i8** %baseAddr, align 8, !dbg !6573
  %add.ptr20 = getelementptr i8, i8* %16, i64 2048, !dbg !6574
  %add.ptr21 = getelementptr i8, i8* %add.ptr20, i64 0, !dbg !6575
  %call22 = call zeroext i16 @readw(i8* %add.ptr21) #12, !dbg !6576
  store i16 %call22, i16* %tmp, align 2, !dbg !6577
  %17 = load i16, i16* %tmp, align 2, !dbg !6578
  %conv23 = zext i16 %17 to i32, !dbg !6578
  %cmp24 = icmp ne i32 %conv23, 5, !dbg !6580
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !6581

if.then26:                                        ; preds = %if.end19
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.24, i64 0, i64 0)) #13, !dbg !6582
  store i32 -5, i32* %retval, align 4, !dbg !6584
  br label %return, !dbg !6584

if.end28:                                         ; preds = %if.end19
  br label %sw.epilog, !dbg !6585

sw.epilog:                                        ; preds = %if.end28, %if.end11, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6586
  br label %return, !dbg !6586

err:                                              ; preds = %if.then18, %if.then10, %if.then
  call void @llvm.dbg.label(metadata !6587), !dbg !6588
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.25, i64 0, i64 0)) #13, !dbg !6589
  store i32 -5, i32* %retval, align 4, !dbg !6590
  br label %return, !dbg !6590

return:                                           ; preds = %err, %sw.epilog, %if.then26
  %18 = load i32, i32* %retval, align 4, !dbg !6591
  ret i32 %18, !dbg !6591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_load_320b(%struct.moxa_board_conf* %brd, i8* %ptr, i64 %len) #3 !dbg !6592 {
entry:
  %retval = alloca i32, align 4
  %brd.addr = alloca %struct.moxa_board_conf*, align 8
  %ptr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %baseAddr = alloca i8*, align 8
  store %struct.moxa_board_conf* %brd, %struct.moxa_board_conf** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd.addr, metadata !6593, metadata !DIExpression()), !dbg !6594
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6595, metadata !DIExpression()), !dbg !6596
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6597, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.declare(metadata i8** %baseAddr, metadata !6599, metadata !DIExpression()), !dbg !6600
  %0 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6601
  %basemem = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %0, i32 0, i32 5, !dbg !6602
  %1 = load i8*, i8** %basemem, align 8, !dbg !6602
  store i8* %1, i8** %baseAddr, align 8, !dbg !6600
  %2 = load i64, i64* %len.addr, align 8, !dbg !6603
  %cmp = icmp ult i64 %2, 7168, !dbg !6605
  br i1 %cmp, label %if.then, label %if.end, !dbg !6606

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0)) #13, !dbg !6607
  store i32 -22, i32* %retval, align 4, !dbg !6609
  br label %return, !dbg !6609

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %len.addr, align 8, !dbg !6610
  %sub = sub i64 %3, 7168, !dbg !6611
  %sub1 = sub i64 %sub, 2, !dbg !6612
  %conv = trunc i64 %sub1 to i16, !dbg !6610
  %4 = load i8*, i8** %baseAddr, align 8, !dbg !6613
  %add.ptr = getelementptr i8, i8* %4, i64 2048, !dbg !6614
  %add.ptr2 = getelementptr i8, i8* %add.ptr, i64 12, !dbg !6615
  call void @writew(i16 zeroext %conv, i8* %add.ptr2) #12, !dbg !6616
  %5 = load i8*, i8** %baseAddr, align 8, !dbg !6617
  %add.ptr3 = getelementptr i8, i8* %5, i64 8176, !dbg !6618
  call void @writeb(i8 zeroext 1, i8* %add.ptr3) #12, !dbg !6619
  %6 = load i8*, i8** %baseAddr, align 8, !dbg !6620
  %add.ptr4 = getelementptr i8, i8* %6, i64 8192, !dbg !6621
  %7 = load i8*, i8** %ptr.addr, align 8, !dbg !6622
  call void @memcpy_toio(i8* %add.ptr4, i8* %7, i64 7168) #12, !dbg !6623
  %8 = load i8*, i8** %baseAddr, align 8, !dbg !6624
  %add.ptr5 = getelementptr i8, i8* %8, i64 8176, !dbg !6625
  call void @writeb(i8 zeroext 2, i8* %add.ptr5) #12, !dbg !6626
  %9 = load i8*, i8** %baseAddr, align 8, !dbg !6627
  %add.ptr6 = getelementptr i8, i8* %9, i64 8192, !dbg !6628
  %10 = load i8*, i8** %ptr.addr, align 8, !dbg !6629
  %add.ptr7 = getelementptr i8, i8* %10, i64 7168, !dbg !6630
  %11 = load i64, i64* %len.addr, align 8, !dbg !6631
  %sub8 = sub i64 %11, 7168, !dbg !6632
  call void @memcpy_toio(i8* %add.ptr6, i8* %add.ptr7, i64 %sub8) #12, !dbg !6633
  store i32 0, i32* %retval, align 4, !dbg !6634
  br label %return, !dbg !6634

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !6635
  ret i32 %12, !dbg !6635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_load_code(%struct.moxa_board_conf* %brd, i8* %ptr, i64 %len) #3 !dbg !6636 {
entry:
  %retval = alloca i32, align 4
  %brd.addr = alloca %struct.moxa_board_conf*, align 8
  %ptr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %ofsAddr = alloca i8*, align 8
  %baseAddr = alloca i8*, align 8
  %port = alloca %struct.moxa_port*, align 8
  %retval1 = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.moxa_board_conf* %brd, %struct.moxa_board_conf** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd.addr, metadata !6639, metadata !DIExpression()), !dbg !6640
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6641, metadata !DIExpression()), !dbg !6642
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6643, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !6645, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.declare(metadata i8** %baseAddr, metadata !6647, metadata !DIExpression()), !dbg !6648
  %0 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6649
  %basemem = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %0, i32 0, i32 5, !dbg !6650
  %1 = load i8*, i8** %basemem, align 8, !dbg !6650
  store i8* %1, i8** %baseAddr, align 8, !dbg !6648
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port, metadata !6651, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6653, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6655, metadata !DIExpression()), !dbg !6656
  %2 = load i64, i64* %len.addr, align 8, !dbg !6657
  %rem = urem i64 %2, 2, !dbg !6659
  %tobool = icmp ne i64 %rem, 0, !dbg !6659
  br i1 %tobool, label %if.then, label %if.end, !dbg !6660

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27, i64 0, i64 0)) #13, !dbg !6661
  store i32 -22, i32* %retval, align 4, !dbg !6663
  br label %return, !dbg !6663

if.end:                                           ; preds = %entry
  %3 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6664
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !6665
  %5 = load i64, i64* %len.addr, align 8, !dbg !6666
  %call2 = call i32 @moxa_real_load_code(%struct.moxa_board_conf* %3, i8* %4, i64 %5) #12, !dbg !6667
  store i32 %call2, i32* %retval1, align 4, !dbg !6668
  %6 = load i32, i32* %retval1, align 4, !dbg !6669
  %tobool3 = icmp ne i32 %6, 0, !dbg !6669
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6671

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* %retval1, align 4, !dbg !6672
  store i32 %7, i32* %retval, align 4, !dbg !6673
  br label %return, !dbg !6673

if.end5:                                          ; preds = %if.end
  %8 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6674
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %8, i32 0, i32 0, !dbg !6675
  %9 = load i32, i32* %boardType, align 8, !dbg !6675
  switch i32 %9, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb
    i32 5, label %sw.bb
  ], !dbg !6676

sw.bb:                                            ; preds = %if.end5, %if.end5, %if.end5
  %10 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6677
  %ports = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %10, i32 0, i32 4, !dbg !6679
  %11 = load %struct.moxa_port*, %struct.moxa_port** %ports, align 8, !dbg !6679
  store %struct.moxa_port* %11, %struct.moxa_port** %port, align 8, !dbg !6680
  store i32 0, i32* %i, align 4, !dbg !6681
  br label %for.cond, !dbg !6683

for.cond:                                         ; preds = %for.inc, %sw.bb
  %12 = load i32, i32* %i, align 4, !dbg !6684
  %13 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6686
  %numPorts = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %13, i32 0, i32 1, !dbg !6687
  %14 = load i32, i32* %numPorts, align 4, !dbg !6687
  %cmp = icmp slt i32 %12, %14, !dbg !6688
  br i1 %cmp, label %for.body, label %for.end, !dbg !6689

for.body:                                         ; preds = %for.cond
  %15 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6690
  %16 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !6692
  %board = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %16, i32 0, i32 1, !dbg !6693
  store %struct.moxa_board_conf* %15, %struct.moxa_board_conf** %board, align 8, !dbg !6694
  %17 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !6695
  %DCDState = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %17, i32 0, i32 6, !dbg !6696
  store i8 0, i8* %DCDState, align 8, !dbg !6697
  %18 = load i8*, i8** %baseAddr, align 8, !dbg !6698
  %add.ptr = getelementptr i8, i8* %18, i64 1024, !dbg !6699
  %19 = load i32, i32* %i, align 4, !dbg !6700
  %mul = mul i32 96, %19, !dbg !6701
  %idx.ext = sext i32 %mul to i64, !dbg !6702
  %add.ptr6 = getelementptr i8, i8* %add.ptr, i64 %idx.ext, !dbg !6702
  %20 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !6703
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %20, i32 0, i32 2, !dbg !6704
  store i8* %add.ptr6, i8** %tableAddr, align 8, !dbg !6705
  %21 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !6706
  %tableAddr7 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %21, i32 0, i32 2, !dbg !6707
  %22 = load i8*, i8** %tableAddr7, align 8, !dbg !6707
  store i8* %22, i8** %ofsAddr, align 8, !dbg !6708
  %23 = load i8*, i8** %ofsAddr, align 8, !dbg !6709
  %add.ptr8 = getelementptr i8, i8* %23, i64 18, !dbg !6710
  call void @writew(i16 zeroext 8191, i8* %add.ptr8) #12, !dbg !6711
  %24 = load i8*, i8** %ofsAddr, align 8, !dbg !6712
  %add.ptr9 = getelementptr i8, i8* %24, i64 20, !dbg !6713
  call void @writew(i16 zeroext 32767, i8* %add.ptr9) #12, !dbg !6714
  %25 = load i32, i32* %i, align 4, !dbg !6715
  %mul10 = mul i32 %25, 5, !dbg !6716
  %add = add i32 3, %mul10, !dbg !6717
  %conv = trunc i32 %add to i16, !dbg !6718
  %26 = load i8*, i8** %ofsAddr, align 8, !dbg !6719
  %add.ptr11 = getelementptr i8, i8* %26, i64 26, !dbg !6720
  call void @writew(i16 zeroext %conv, i8* %add.ptr11) #12, !dbg !6721
  %27 = load i8*, i8** %ofsAddr, align 8, !dbg !6722
  %add.ptr12 = getelementptr i8, i8* %27, i64 26, !dbg !6723
  %call13 = call zeroext i16 @readw(i8* %add.ptr12) #12, !dbg !6724
  %conv14 = zext i16 %call13 to i32, !dbg !6724
  %add15 = add i32 %conv14, 1, !dbg !6725
  %conv16 = trunc i32 %add15 to i16, !dbg !6724
  %28 = load i8*, i8** %ofsAddr, align 8, !dbg !6726
  %add.ptr17 = getelementptr i8, i8* %28, i64 30, !dbg !6727
  call void @writew(i16 zeroext %conv16, i8* %add.ptr17) #12, !dbg !6728
  %29 = load i32, i32* %i, align 4, !dbg !6729
  %mul18 = mul i32 %29, 5, !dbg !6730
  %add19 = add i32 4, %mul18, !dbg !6731
  %conv20 = trunc i32 %add19 to i16, !dbg !6732
  %30 = load i8*, i8** %ofsAddr, align 8, !dbg !6733
  %add.ptr21 = getelementptr i8, i8* %30, i64 28, !dbg !6734
  call void @writew(i16 zeroext %conv20, i8* %add.ptr21) #12, !dbg !6735
  %31 = load i8*, i8** %ofsAddr, align 8, !dbg !6736
  %add.ptr22 = getelementptr i8, i8* %31, i64 28, !dbg !6737
  %call23 = call zeroext i16 @readw(i8* %add.ptr22) #12, !dbg !6738
  %conv24 = zext i16 %call23 to i32, !dbg !6738
  %add25 = add i32 %conv24, 4, !dbg !6739
  %conv26 = trunc i32 %add25 to i16, !dbg !6738
  %32 = load i8*, i8** %ofsAddr, align 8, !dbg !6740
  %add.ptr27 = getelementptr i8, i8* %32, i64 32, !dbg !6741
  call void @writew(i16 zeroext %conv26, i8* %add.ptr27) #12, !dbg !6742
  br label %for.inc, !dbg !6743

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !6744
  %inc = add i32 %33, 1, !dbg !6744
  store i32 %inc, i32* %i, align 4, !dbg !6744
  %34 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !6745
  %incdec.ptr = getelementptr %struct.moxa_port, %struct.moxa_port* %34, i32 1, !dbg !6745
  store %struct.moxa_port* %incdec.ptr, %struct.moxa_port** %port, align 8, !dbg !6745
  br label %for.cond, !dbg !6746, !llvm.loop !6747

for.end:                                          ; preds = %for.cond
  br label %sw.epilog132, !dbg !6749

sw.default:                                       ; preds = %if.end5
  %35 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6750
  %ports28 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %35, i32 0, i32 4, !dbg !6751
  %36 = load %struct.moxa_port*, %struct.moxa_port** %ports28, align 8, !dbg !6751
  store %struct.moxa_port* %36, %struct.moxa_port** %port, align 8, !dbg !6752
  store i32 0, i32* %i, align 4, !dbg !6753
  br label %for.cond29, !dbg !6755

for.cond29:                                       ; preds = %for.inc128, %sw.default
  %37 = load i32, i32* %i, align 4, !dbg !6756
  %38 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6758
  %numPorts30 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %38, i32 0, i32 1, !dbg !6759
  %39 = load i32, i32* %numPorts30, align 4, !dbg !6759
  %cmp31 = icmp slt i32 %37, %39, !dbg !6760
  br i1 %cmp31, label %for.body33, label %for.end131, !dbg !6761

for.body33:                                       ; preds = %for.cond29
  %40 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6762
  %41 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !6764
  %board34 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %41, i32 0, i32 1, !dbg !6765
  store %struct.moxa_board_conf* %40, %struct.moxa_board_conf** %board34, align 8, !dbg !6766
  %42 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !6767
  %DCDState35 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %42, i32 0, i32 6, !dbg !6768
  store i8 0, i8* %DCDState35, align 8, !dbg !6769
  %43 = load i8*, i8** %baseAddr, align 8, !dbg !6770
  %add.ptr36 = getelementptr i8, i8* %43, i64 1024, !dbg !6771
  %44 = load i32, i32* %i, align 4, !dbg !6772
  %mul37 = mul i32 96, %44, !dbg !6773
  %idx.ext38 = sext i32 %mul37 to i64, !dbg !6774
  %add.ptr39 = getelementptr i8, i8* %add.ptr36, i64 %idx.ext38, !dbg !6774
  %45 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !6775
  %tableAddr40 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %45, i32 0, i32 2, !dbg !6776
  store i8* %add.ptr39, i8** %tableAddr40, align 8, !dbg !6777
  %46 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !6778
  %tableAddr41 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %46, i32 0, i32 2, !dbg !6779
  %47 = load i8*, i8** %tableAddr41, align 8, !dbg !6779
  store i8* %47, i8** %ofsAddr, align 8, !dbg !6780
  %48 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6781
  %numPorts42 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %48, i32 0, i32 1, !dbg !6782
  %49 = load i32, i32* %numPorts42, align 4, !dbg !6782
  switch i32 %49, label %sw.epilog [
    i32 8, label %sw.bb43
    i32 16, label %sw.bb66
    i32 24, label %sw.bb89
    i32 32, label %sw.bb109
  ], !dbg !6783

sw.bb43:                                          ; preds = %for.body33
  %50 = load i8*, i8** %ofsAddr, align 8, !dbg !6784
  %add.ptr44 = getelementptr i8, i8* %50, i64 18, !dbg !6786
  call void @writew(i16 zeroext 8191, i8* %add.ptr44) #12, !dbg !6787
  %51 = load i8*, i8** %ofsAddr, align 8, !dbg !6788
  %add.ptr45 = getelementptr i8, i8* %51, i64 20, !dbg !6789
  call void @writew(i16 zeroext 32767, i8* %add.ptr45) #12, !dbg !6790
  %52 = load i32, i32* %i, align 4, !dbg !6791
  %mul46 = mul i32 %52, 5, !dbg !6792
  %add47 = add i32 3, %mul46, !dbg !6793
  %conv48 = trunc i32 %add47 to i16, !dbg !6794
  %53 = load i8*, i8** %ofsAddr, align 8, !dbg !6795
  %add.ptr49 = getelementptr i8, i8* %53, i64 26, !dbg !6796
  call void @writew(i16 zeroext %conv48, i8* %add.ptr49) #12, !dbg !6797
  %54 = load i8*, i8** %ofsAddr, align 8, !dbg !6798
  %add.ptr50 = getelementptr i8, i8* %54, i64 26, !dbg !6799
  %call51 = call zeroext i16 @readw(i8* %add.ptr50) #12, !dbg !6800
  %conv52 = zext i16 %call51 to i32, !dbg !6800
  %add53 = add i32 %conv52, 1, !dbg !6801
  %conv54 = trunc i32 %add53 to i16, !dbg !6800
  %55 = load i8*, i8** %ofsAddr, align 8, !dbg !6802
  %add.ptr55 = getelementptr i8, i8* %55, i64 30, !dbg !6803
  call void @writew(i16 zeroext %conv54, i8* %add.ptr55) #12, !dbg !6804
  %56 = load i32, i32* %i, align 4, !dbg !6805
  %mul56 = mul i32 %56, 5, !dbg !6806
  %add57 = add i32 4, %mul56, !dbg !6807
  %conv58 = trunc i32 %add57 to i16, !dbg !6808
  %57 = load i8*, i8** %ofsAddr, align 8, !dbg !6809
  %add.ptr59 = getelementptr i8, i8* %57, i64 28, !dbg !6810
  call void @writew(i16 zeroext %conv58, i8* %add.ptr59) #12, !dbg !6811
  %58 = load i8*, i8** %ofsAddr, align 8, !dbg !6812
  %add.ptr60 = getelementptr i8, i8* %58, i64 28, !dbg !6813
  %call61 = call zeroext i16 @readw(i8* %add.ptr60) #12, !dbg !6814
  %conv62 = zext i16 %call61 to i32, !dbg !6814
  %add63 = add i32 %conv62, 4, !dbg !6815
  %conv64 = trunc i32 %add63 to i16, !dbg !6814
  %59 = load i8*, i8** %ofsAddr, align 8, !dbg !6816
  %add.ptr65 = getelementptr i8, i8* %59, i64 32, !dbg !6817
  call void @writew(i16 zeroext %conv64, i8* %add.ptr65) #12, !dbg !6818
  br label %sw.epilog, !dbg !6819

sw.bb66:                                          ; preds = %for.body33
  %60 = load i8*, i8** %ofsAddr, align 8, !dbg !6820
  %add.ptr67 = getelementptr i8, i8* %60, i64 18, !dbg !6821
  call void @writew(i16 zeroext 8191, i8* %add.ptr67) #12, !dbg !6822
  %61 = load i8*, i8** %ofsAddr, align 8, !dbg !6823
  %add.ptr68 = getelementptr i8, i8* %61, i64 20, !dbg !6824
  call void @writew(i16 zeroext 16383, i8* %add.ptr68) #12, !dbg !6825
  %62 = load i32, i32* %i, align 4, !dbg !6826
  %mul69 = mul i32 %62, 3, !dbg !6827
  %add70 = add i32 3, %mul69, !dbg !6828
  %conv71 = trunc i32 %add70 to i16, !dbg !6829
  %63 = load i8*, i8** %ofsAddr, align 8, !dbg !6830
  %add.ptr72 = getelementptr i8, i8* %63, i64 26, !dbg !6831
  call void @writew(i16 zeroext %conv71, i8* %add.ptr72) #12, !dbg !6832
  %64 = load i8*, i8** %ofsAddr, align 8, !dbg !6833
  %add.ptr73 = getelementptr i8, i8* %64, i64 26, !dbg !6834
  %call74 = call zeroext i16 @readw(i8* %add.ptr73) #12, !dbg !6835
  %conv75 = zext i16 %call74 to i32, !dbg !6835
  %add76 = add i32 %conv75, 1, !dbg !6836
  %conv77 = trunc i32 %add76 to i16, !dbg !6835
  %65 = load i8*, i8** %ofsAddr, align 8, !dbg !6837
  %add.ptr78 = getelementptr i8, i8* %65, i64 30, !dbg !6838
  call void @writew(i16 zeroext %conv77, i8* %add.ptr78) #12, !dbg !6839
  %66 = load i32, i32* %i, align 4, !dbg !6840
  %mul79 = mul i32 %66, 3, !dbg !6841
  %add80 = add i32 4, %mul79, !dbg !6842
  %conv81 = trunc i32 %add80 to i16, !dbg !6843
  %67 = load i8*, i8** %ofsAddr, align 8, !dbg !6844
  %add.ptr82 = getelementptr i8, i8* %67, i64 28, !dbg !6845
  call void @writew(i16 zeroext %conv81, i8* %add.ptr82) #12, !dbg !6846
  %68 = load i8*, i8** %ofsAddr, align 8, !dbg !6847
  %add.ptr83 = getelementptr i8, i8* %68, i64 28, !dbg !6848
  %call84 = call zeroext i16 @readw(i8* %add.ptr83) #12, !dbg !6849
  %conv85 = zext i16 %call84 to i32, !dbg !6849
  %add86 = add i32 %conv85, 2, !dbg !6850
  %conv87 = trunc i32 %add86 to i16, !dbg !6849
  %69 = load i8*, i8** %ofsAddr, align 8, !dbg !6851
  %add.ptr88 = getelementptr i8, i8* %69, i64 32, !dbg !6852
  call void @writew(i16 zeroext %conv87, i8* %add.ptr88) #12, !dbg !6853
  br label %sw.epilog, !dbg !6854

sw.bb89:                                          ; preds = %for.body33
  %70 = load i8*, i8** %ofsAddr, align 8, !dbg !6855
  %add.ptr90 = getelementptr i8, i8* %70, i64 18, !dbg !6856
  call void @writew(i16 zeroext 8191, i8* %add.ptr90) #12, !dbg !6857
  %71 = load i8*, i8** %ofsAddr, align 8, !dbg !6858
  %add.ptr91 = getelementptr i8, i8* %71, i64 20, !dbg !6859
  call void @writew(i16 zeroext 8191, i8* %add.ptr91) #12, !dbg !6860
  %72 = load i32, i32* %i, align 4, !dbg !6861
  %mul92 = mul i32 %72, 2, !dbg !6862
  %add93 = add i32 3, %mul92, !dbg !6863
  %conv94 = trunc i32 %add93 to i16, !dbg !6864
  %73 = load i8*, i8** %ofsAddr, align 8, !dbg !6865
  %add.ptr95 = getelementptr i8, i8* %73, i64 26, !dbg !6866
  call void @writew(i16 zeroext %conv94, i8* %add.ptr95) #12, !dbg !6867
  %74 = load i8*, i8** %ofsAddr, align 8, !dbg !6868
  %add.ptr96 = getelementptr i8, i8* %74, i64 26, !dbg !6869
  %call97 = call zeroext i16 @readw(i8* %add.ptr96) #12, !dbg !6870
  %conv98 = zext i16 %call97 to i32, !dbg !6870
  %add99 = add i32 %conv98, 1, !dbg !6871
  %conv100 = trunc i32 %add99 to i16, !dbg !6870
  %75 = load i8*, i8** %ofsAddr, align 8, !dbg !6872
  %add.ptr101 = getelementptr i8, i8* %75, i64 30, !dbg !6873
  call void @writew(i16 zeroext %conv100, i8* %add.ptr101) #12, !dbg !6874
  %76 = load i32, i32* %i, align 4, !dbg !6875
  %mul102 = mul i32 %76, 2, !dbg !6876
  %add103 = add i32 4, %mul102, !dbg !6877
  %conv104 = trunc i32 %add103 to i16, !dbg !6878
  %77 = load i8*, i8** %ofsAddr, align 8, !dbg !6879
  %add.ptr105 = getelementptr i8, i8* %77, i64 28, !dbg !6880
  call void @writew(i16 zeroext %conv104, i8* %add.ptr105) #12, !dbg !6881
  %78 = load i8*, i8** %ofsAddr, align 8, !dbg !6882
  %add.ptr106 = getelementptr i8, i8* %78, i64 28, !dbg !6883
  %call107 = call zeroext i16 @readw(i8* %add.ptr106) #12, !dbg !6884
  %79 = load i8*, i8** %ofsAddr, align 8, !dbg !6885
  %add.ptr108 = getelementptr i8, i8* %79, i64 32, !dbg !6886
  call void @writew(i16 zeroext %call107, i8* %add.ptr108) #12, !dbg !6887
  br label %sw.epilog, !dbg !6888

sw.bb109:                                         ; preds = %for.body33
  %80 = load i8*, i8** %ofsAddr, align 8, !dbg !6889
  %add.ptr110 = getelementptr i8, i8* %80, i64 18, !dbg !6890
  call void @writew(i16 zeroext 4095, i8* %add.ptr110) #12, !dbg !6891
  %81 = load i8*, i8** %ofsAddr, align 8, !dbg !6892
  %add.ptr111 = getelementptr i8, i8* %81, i64 20, !dbg !6893
  call void @writew(i16 zeroext 4095, i8* %add.ptr111) #12, !dbg !6894
  %82 = load i8*, i8** %ofsAddr, align 8, !dbg !6895
  %add.ptr112 = getelementptr i8, i8* %82, i64 24, !dbg !6896
  call void @writew(i16 zeroext 4096, i8* %add.ptr112) #12, !dbg !6897
  %83 = load i32, i32* %i, align 4, !dbg !6898
  %mul113 = mul i32 %83, 1, !dbg !6899
  %add114 = add i32 3, %mul113, !dbg !6900
  %conv115 = trunc i32 %add114 to i16, !dbg !6901
  %84 = load i8*, i8** %ofsAddr, align 8, !dbg !6902
  %add.ptr116 = getelementptr i8, i8* %84, i64 26, !dbg !6903
  call void @writew(i16 zeroext %conv115, i8* %add.ptr116) #12, !dbg !6904
  %85 = load i8*, i8** %ofsAddr, align 8, !dbg !6905
  %add.ptr117 = getelementptr i8, i8* %85, i64 26, !dbg !6906
  %call118 = call zeroext i8 @readb(i8* %add.ptr117) #12, !dbg !6907
  %conv119 = zext i8 %call118 to i16, !dbg !6907
  %86 = load i8*, i8** %ofsAddr, align 8, !dbg !6908
  %add.ptr120 = getelementptr i8, i8* %86, i64 30, !dbg !6909
  call void @writew(i16 zeroext %conv119, i8* %add.ptr120) #12, !dbg !6910
  %87 = load i32, i32* %i, align 4, !dbg !6911
  %mul121 = mul i32 %87, 1, !dbg !6912
  %add122 = add i32 3, %mul121, !dbg !6913
  %conv123 = trunc i32 %add122 to i16, !dbg !6914
  %88 = load i8*, i8** %ofsAddr, align 8, !dbg !6915
  %add.ptr124 = getelementptr i8, i8* %88, i64 28, !dbg !6916
  call void @writew(i16 zeroext %conv123, i8* %add.ptr124) #12, !dbg !6917
  %89 = load i8*, i8** %ofsAddr, align 8, !dbg !6918
  %add.ptr125 = getelementptr i8, i8* %89, i64 28, !dbg !6919
  %call126 = call zeroext i16 @readw(i8* %add.ptr125) #12, !dbg !6920
  %90 = load i8*, i8** %ofsAddr, align 8, !dbg !6921
  %add.ptr127 = getelementptr i8, i8* %90, i64 32, !dbg !6922
  call void @writew(i16 zeroext %call126, i8* %add.ptr127) #12, !dbg !6923
  br label %sw.epilog, !dbg !6924

sw.epilog:                                        ; preds = %for.body33, %sw.bb109, %sw.bb89, %sw.bb66, %sw.bb43
  br label %for.inc128, !dbg !6925

for.inc128:                                       ; preds = %sw.epilog
  %91 = load i32, i32* %i, align 4, !dbg !6926
  %inc129 = add i32 %91, 1, !dbg !6926
  store i32 %inc129, i32* %i, align 4, !dbg !6926
  %92 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !6927
  %incdec.ptr130 = getelementptr %struct.moxa_port, %struct.moxa_port* %92, i32 1, !dbg !6927
  store %struct.moxa_port* %incdec.ptr130, %struct.moxa_port** %port, align 8, !dbg !6927
  br label %for.cond29, !dbg !6928, !llvm.loop !6929

for.end131:                                       ; preds = %for.cond29
  br label %sw.epilog132, !dbg !6931

sw.epilog132:                                     ; preds = %for.end131, %for.end
  store i32 0, i32* %retval, align 4, !dbg !6932
  br label %return, !dbg !6932

return:                                           ; preds = %sw.epilog132, %if.then4, %if.then
  %93 = load i32, i32* %retval, align 4, !dbg !6933
  ret i32 %93, !dbg !6933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #3 !dbg !6934 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !6937, metadata !DIExpression()), !dbg !6938
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6939, metadata !DIExpression()), !dbg !6938
  %0 = load i8, i8* %val.addr, align 1, !dbg !6938
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !6938
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #10, !dbg !6938, !srcloc !6940
  ret void, !dbg !6938
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noredzone
declare dso_local void @memset_io(i8*, i32, i64) #2

; Function Attrs: noredzone
declare dso_local void @memcpy_toio(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_real_load_code(%struct.moxa_board_conf* %brd, i8* %ptr, i64 %len) #3 !dbg !6941 {
entry:
  %retval = alloca i32, align 4
  %brd.addr = alloca %struct.moxa_board_conf*, align 8
  %ptr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %baseAddr = alloca i8*, align 8
  %uptr = alloca i16*, align 8
  %wlen = alloca i64, align 8
  %len2 = alloca i64, align 8
  %j = alloca i64, align 8
  %key = alloca i64, align 8
  %loadbuf = alloca i64, align 8
  %loadlen = alloca i64, align 8
  %checksum = alloca i64, align 8
  %checksum_ok = alloca i64, align 8
  %i = alloca i32, align 4
  %retry = alloca i32, align 4
  %usum = alloca i16, align 2
  %keycode = alloca i16, align 2
  store %struct.moxa_board_conf* %brd, %struct.moxa_board_conf** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd.addr, metadata !6942, metadata !DIExpression()), !dbg !6943
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6944, metadata !DIExpression()), !dbg !6945
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6946, metadata !DIExpression()), !dbg !6947
  call void @llvm.dbg.declare(metadata i8** %baseAddr, metadata !6948, metadata !DIExpression()), !dbg !6949
  %0 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6950
  %basemem = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %0, i32 0, i32 5, !dbg !6951
  %1 = load i8*, i8** %basemem, align 8, !dbg !6951
  store i8* %1, i8** %baseAddr, align 8, !dbg !6949
  call void @llvm.dbg.declare(metadata i16** %uptr, metadata !6952, metadata !DIExpression()), !dbg !6953
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !6954
  %3 = bitcast i8* %2 to i16*, !dbg !6954
  store i16* %3, i16** %uptr, align 8, !dbg !6953
  call void @llvm.dbg.declare(metadata i64* %wlen, metadata !6955, metadata !DIExpression()), !dbg !6956
  call void @llvm.dbg.declare(metadata i64* %len2, metadata !6957, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.declare(metadata i64* %j, metadata !6959, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.declare(metadata i64* %key, metadata !6961, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.declare(metadata i64* %loadbuf, metadata !6963, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.declare(metadata i64* %loadlen, metadata !6965, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.declare(metadata i64* %checksum, metadata !6967, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.declare(metadata i64* %checksum_ok, metadata !6969, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6971, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata i32* %retry, metadata !6973, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.declare(metadata i16* %usum, metadata !6975, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.declare(metadata i16* %keycode, metadata !6977, metadata !DIExpression()), !dbg !6978
  %4 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6979
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %4, i32 0, i32 0, !dbg !6980
  %5 = load i32, i32* %boardType, align 8, !dbg !6980
  %cmp = icmp eq i32 %5, 5, !dbg !6981
  %6 = zext i1 %cmp to i64, !dbg !6982
  %cond = select i1 %cmp, i32 516, i32 536, !dbg !6982
  %conv = trunc i32 %cond to i16, !dbg !6982
  store i16 %conv, i16* %keycode, align 2, !dbg !6983
  %7 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !6984
  %boardType1 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %7, i32 0, i32 0, !dbg !6985
  %8 = load i32, i32* %boardType1, align 8, !dbg !6985
  switch i32 %8, label %sw.default [
    i32 5, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb
  ], !dbg !6986

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i64 2052, i64* %key, align 8, !dbg !6987
  store i64 3840, i64* %loadbuf, align 8, !dbg !6989
  store i64 2054, i64* %loadlen, align 8, !dbg !6990
  store i64 2056, i64* %checksum, align 8, !dbg !6991
  store i64 2058, i64* %checksum_ok, align 8, !dbg !6992
  br label %sw.epilog, !dbg !6993

sw.default:                                       ; preds = %entry
  store i64 2052, i64* %key, align 8, !dbg !6994
  store i16 800, i16* %keycode, align 2, !dbg !6995
  store i64 3840, i64* %loadbuf, align 8, !dbg !6996
  store i64 2054, i64* %loadlen, align 8, !dbg !6997
  store i64 2056, i64* %checksum, align 8, !dbg !6998
  store i64 2058, i64* %checksum_ok, align 8, !dbg !6999
  br label %sw.epilog, !dbg !7000

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  store i16 0, i16* %usum, align 2, !dbg !7001
  %9 = load i64, i64* %len.addr, align 8, !dbg !7002
  %shr = lshr i64 %9, 1, !dbg !7003
  store i64 %shr, i64* %wlen, align 8, !dbg !7004
  store i32 0, i32* %i, align 4, !dbg !7005
  br label %for.cond, !dbg !7007

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %10 = load i32, i32* %i, align 4, !dbg !7008
  %conv2 = zext i32 %10 to i64, !dbg !7008
  %11 = load i64, i64* %wlen, align 8, !dbg !7010
  %cmp3 = icmp ult i64 %conv2, %11, !dbg !7011
  br i1 %cmp3, label %for.body, label %for.end, !dbg !7012

for.body:                                         ; preds = %for.cond
  %12 = load i16*, i16** %uptr, align 8, !dbg !7013
  %13 = load i32, i32* %i, align 4, !dbg !7013
  %idxprom = zext i32 %13 to i64, !dbg !7013
  %arrayidx = getelementptr i16, i16* %12, i64 %idxprom, !dbg !7013
  %14 = load i16, i16* %arrayidx, align 2, !dbg !7013
  %conv5 = zext i16 %14 to i32, !dbg !7013
  %15 = load i16, i16* %usum, align 2, !dbg !7014
  %conv6 = zext i16 %15 to i32, !dbg !7014
  %add = add i32 %conv6, %conv5, !dbg !7014
  %conv7 = trunc i32 %add to i16, !dbg !7014
  store i16 %conv7, i16* %usum, align 2, !dbg !7014
  br label %for.inc, !dbg !7015

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !7016
  %inc = add i32 %16, 1, !dbg !7016
  store i32 %inc, i32* %i, align 4, !dbg !7016
  br label %for.cond, !dbg !7017, !llvm.loop !7018

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retry, align 4, !dbg !7020
  br label %do.body, !dbg !7021

do.body:                                          ; preds = %land.end, %for.end
  %17 = load i64, i64* %len.addr, align 8, !dbg !7022
  %shr8 = lshr i64 %17, 1, !dbg !7024
  store i64 %shr8, i64* %wlen, align 8, !dbg !7025
  store i64 0, i64* %j, align 8, !dbg !7026
  br label %while.cond, !dbg !7027

while.cond:                                       ; preds = %if.end37, %do.body
  %18 = load i64, i64* %wlen, align 8, !dbg !7028
  %tobool = icmp ne i64 %18, 0, !dbg !7027
  br i1 %tobool, label %while.body, label %while.end, !dbg !7027

while.body:                                       ; preds = %while.cond
  %19 = load i64, i64* %wlen, align 8, !dbg !7029
  %cmp9 = icmp ugt i64 %19, 2048, !dbg !7031
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !7032

cond.true:                                        ; preds = %while.body
  br label %cond.end, !dbg !7032

cond.false:                                       ; preds = %while.body
  %20 = load i64, i64* %wlen, align 8, !dbg !7033
  br label %cond.end, !dbg !7032

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond11 = phi i64 [ 2048, %cond.true ], [ %20, %cond.false ], !dbg !7032
  store i64 %cond11, i64* %len2, align 8, !dbg !7034
  %21 = load i64, i64* %len2, align 8, !dbg !7035
  %22 = load i64, i64* %wlen, align 8, !dbg !7036
  %sub = sub i64 %22, %21, !dbg !7036
  store i64 %sub, i64* %wlen, align 8, !dbg !7036
  %23 = load i8*, i8** %baseAddr, align 8, !dbg !7037
  %24 = load i64, i64* %loadbuf, align 8, !dbg !7038
  %add.ptr = getelementptr i8, i8* %23, i64 %24, !dbg !7039
  %25 = load i8*, i8** %ptr.addr, align 8, !dbg !7040
  %26 = load i64, i64* %j, align 8, !dbg !7041
  %add.ptr12 = getelementptr i8, i8* %25, i64 %26, !dbg !7042
  %27 = load i64, i64* %len2, align 8, !dbg !7043
  %shl = shl i64 %27, 1, !dbg !7044
  call void @memcpy_toio(i8* %add.ptr, i8* %add.ptr12, i64 %shl) #12, !dbg !7045
  %28 = load i64, i64* %len2, align 8, !dbg !7046
  %shl13 = shl i64 %28, 1, !dbg !7047
  %29 = load i64, i64* %j, align 8, !dbg !7048
  %add14 = add i64 %29, %shl13, !dbg !7048
  store i64 %add14, i64* %j, align 8, !dbg !7048
  %30 = load i64, i64* %len2, align 8, !dbg !7049
  %conv15 = trunc i64 %30 to i16, !dbg !7049
  %31 = load i8*, i8** %baseAddr, align 8, !dbg !7050
  %32 = load i64, i64* %loadlen, align 8, !dbg !7051
  %add.ptr16 = getelementptr i8, i8* %31, i64 %32, !dbg !7052
  call void @writew(i16 zeroext %conv15, i8* %add.ptr16) #12, !dbg !7053
  %33 = load i8*, i8** %baseAddr, align 8, !dbg !7054
  %34 = load i64, i64* %key, align 8, !dbg !7055
  %add.ptr17 = getelementptr i8, i8* %33, i64 %34, !dbg !7056
  call void @writew(i16 zeroext 0, i8* %add.ptr17) #12, !dbg !7057
  store i32 0, i32* %i, align 4, !dbg !7058
  br label %for.cond18, !dbg !7060

for.cond18:                                       ; preds = %for.inc27, %cond.end
  %35 = load i32, i32* %i, align 4, !dbg !7061
  %cmp19 = icmp ult i32 %35, 100, !dbg !7063
  br i1 %cmp19, label %for.body21, label %for.end29, !dbg !7064

for.body21:                                       ; preds = %for.cond18
  %36 = load i8*, i8** %baseAddr, align 8, !dbg !7065
  %37 = load i64, i64* %key, align 8, !dbg !7068
  %add.ptr22 = getelementptr i8, i8* %36, i64 %37, !dbg !7069
  %call = call zeroext i16 @readw(i8* %add.ptr22) #12, !dbg !7070
  %conv23 = zext i16 %call to i32, !dbg !7070
  %38 = load i16, i16* %keycode, align 2, !dbg !7071
  %conv24 = zext i16 %38 to i32, !dbg !7071
  %cmp25 = icmp eq i32 %conv23, %conv24, !dbg !7072
  br i1 %cmp25, label %if.then, label %if.end, !dbg !7073

if.then:                                          ; preds = %for.body21
  br label %for.end29, !dbg !7074

if.end:                                           ; preds = %for.body21
  call void @msleep(i32 10) #12, !dbg !7075
  br label %for.inc27, !dbg !7076

for.inc27:                                        ; preds = %if.end
  %39 = load i32, i32* %i, align 4, !dbg !7077
  %inc28 = add i32 %39, 1, !dbg !7077
  store i32 %inc28, i32* %i, align 4, !dbg !7077
  br label %for.cond18, !dbg !7078, !llvm.loop !7079

for.end29:                                        ; preds = %if.then, %for.cond18
  %40 = load i8*, i8** %baseAddr, align 8, !dbg !7081
  %41 = load i64, i64* %key, align 8, !dbg !7083
  %add.ptr30 = getelementptr i8, i8* %40, i64 %41, !dbg !7084
  %call31 = call zeroext i16 @readw(i8* %add.ptr30) #12, !dbg !7085
  %conv32 = zext i16 %call31 to i32, !dbg !7085
  %42 = load i16, i16* %keycode, align 2, !dbg !7086
  %conv33 = zext i16 %42 to i32, !dbg !7086
  %cmp34 = icmp ne i32 %conv32, %conv33, !dbg !7087
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !7088

if.then36:                                        ; preds = %for.end29
  store i32 -5, i32* %retval, align 4, !dbg !7089
  br label %return, !dbg !7089

if.end37:                                         ; preds = %for.end29
  br label %while.cond, !dbg !7027, !llvm.loop !7090

while.end:                                        ; preds = %while.cond
  %43 = load i8*, i8** %baseAddr, align 8, !dbg !7092
  %44 = load i64, i64* %loadlen, align 8, !dbg !7093
  %add.ptr38 = getelementptr i8, i8* %43, i64 %44, !dbg !7094
  call void @writew(i16 zeroext 0, i8* %add.ptr38) #12, !dbg !7095
  %45 = load i16, i16* %usum, align 2, !dbg !7096
  %46 = load i8*, i8** %baseAddr, align 8, !dbg !7097
  %47 = load i64, i64* %checksum, align 8, !dbg !7098
  %add.ptr39 = getelementptr i8, i8* %46, i64 %47, !dbg !7099
  call void @writew(i16 zeroext %45, i8* %add.ptr39) #12, !dbg !7100
  %48 = load i8*, i8** %baseAddr, align 8, !dbg !7101
  %49 = load i64, i64* %key, align 8, !dbg !7102
  %add.ptr40 = getelementptr i8, i8* %48, i64 %49, !dbg !7103
  call void @writew(i16 zeroext 0, i8* %add.ptr40) #12, !dbg !7104
  store i32 0, i32* %i, align 4, !dbg !7105
  br label %for.cond41, !dbg !7107

for.cond41:                                       ; preds = %for.inc53, %while.end
  %50 = load i32, i32* %i, align 4, !dbg !7108
  %cmp42 = icmp ult i32 %50, 100, !dbg !7110
  br i1 %cmp42, label %for.body44, label %for.end55, !dbg !7111

for.body44:                                       ; preds = %for.cond41
  %51 = load i8*, i8** %baseAddr, align 8, !dbg !7112
  %52 = load i64, i64* %key, align 8, !dbg !7115
  %add.ptr45 = getelementptr i8, i8* %51, i64 %52, !dbg !7116
  %call46 = call zeroext i16 @readw(i8* %add.ptr45) #12, !dbg !7117
  %conv47 = zext i16 %call46 to i32, !dbg !7117
  %53 = load i16, i16* %keycode, align 2, !dbg !7118
  %conv48 = zext i16 %53 to i32, !dbg !7118
  %cmp49 = icmp eq i32 %conv47, %conv48, !dbg !7119
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !7120

if.then51:                                        ; preds = %for.body44
  br label %for.end55, !dbg !7121

if.end52:                                         ; preds = %for.body44
  call void @msleep(i32 10) #12, !dbg !7122
  br label %for.inc53, !dbg !7123

for.inc53:                                        ; preds = %if.end52
  %54 = load i32, i32* %i, align 4, !dbg !7124
  %inc54 = add i32 %54, 1, !dbg !7124
  store i32 %inc54, i32* %i, align 4, !dbg !7124
  br label %for.cond41, !dbg !7125, !llvm.loop !7126

for.end55:                                        ; preds = %if.then51, %for.cond41
  %55 = load i32, i32* %retry, align 4, !dbg !7128
  %inc56 = add i32 %55, 1, !dbg !7128
  store i32 %inc56, i32* %retry, align 4, !dbg !7128
  br label %do.cond, !dbg !7129

do.cond:                                          ; preds = %for.end55
  %56 = load i8*, i8** %baseAddr, align 8, !dbg !7130
  %57 = load i64, i64* %checksum_ok, align 8, !dbg !7131
  %add.ptr57 = getelementptr i8, i8* %56, i64 %57, !dbg !7132
  %call58 = call zeroext i8 @readb(i8* %add.ptr57) #12, !dbg !7133
  %conv59 = zext i8 %call58 to i32, !dbg !7133
  %cmp60 = icmp ne i32 %conv59, 1, !dbg !7134
  br i1 %cmp60, label %land.rhs, label %land.end, !dbg !7135

land.rhs:                                         ; preds = %do.cond
  %58 = load i32, i32* %retry, align 4, !dbg !7136
  %cmp62 = icmp ult i32 %58, 3, !dbg !7137
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %59 = phi i1 [ false, %do.cond ], [ %cmp62, %land.rhs ], !dbg !7138
  br i1 %59, label %do.body, label %do.end, !dbg !7129, !llvm.loop !7139

do.end:                                           ; preds = %land.end
  %60 = load i8*, i8** %baseAddr, align 8, !dbg !7141
  %61 = load i64, i64* %checksum_ok, align 8, !dbg !7143
  %add.ptr64 = getelementptr i8, i8* %60, i64 %61, !dbg !7144
  %call65 = call zeroext i8 @readb(i8* %add.ptr64) #12, !dbg !7145
  %conv66 = zext i8 %call65 to i32, !dbg !7145
  %cmp67 = icmp ne i32 %conv66, 1, !dbg !7146
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !7147

if.then69:                                        ; preds = %do.end
  store i32 -5, i32* %retval, align 4, !dbg !7148
  br label %return, !dbg !7148

if.end70:                                         ; preds = %do.end
  %62 = load i8*, i8** %baseAddr, align 8, !dbg !7149
  %63 = load i64, i64* %key, align 8, !dbg !7150
  %add.ptr71 = getelementptr i8, i8* %62, i64 %63, !dbg !7151
  call void @writew(i16 zeroext 0, i8* %add.ptr71) #12, !dbg !7152
  store i32 0, i32* %i, align 4, !dbg !7153
  br label %for.cond72, !dbg !7155

for.cond72:                                       ; preds = %for.inc83, %if.end70
  %64 = load i32, i32* %i, align 4, !dbg !7156
  %cmp73 = icmp ult i32 %64, 600, !dbg !7158
  br i1 %cmp73, label %for.body75, label %for.end85, !dbg !7159

for.body75:                                       ; preds = %for.cond72
  %65 = load i8*, i8** %baseAddr, align 8, !dbg !7160
  %add.ptr76 = getelementptr i8, i8* %65, i64 264, !dbg !7163
  %call77 = call zeroext i16 @readw(i8* %add.ptr76) #12, !dbg !7164
  %conv78 = zext i16 %call77 to i32, !dbg !7164
  %cmp79 = icmp eq i32 %conv78, 1028, !dbg !7165
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !7166

if.then81:                                        ; preds = %for.body75
  br label %for.end85, !dbg !7167

if.end82:                                         ; preds = %for.body75
  call void @msleep(i32 10) #12, !dbg !7168
  br label %for.inc83, !dbg !7169

for.inc83:                                        ; preds = %if.end82
  %66 = load i32, i32* %i, align 4, !dbg !7170
  %inc84 = add i32 %66, 1, !dbg !7170
  store i32 %inc84, i32* %i, align 4, !dbg !7170
  br label %for.cond72, !dbg !7171, !llvm.loop !7172

for.end85:                                        ; preds = %if.then81, %for.cond72
  %67 = load i8*, i8** %baseAddr, align 8, !dbg !7174
  %add.ptr86 = getelementptr i8, i8* %67, i64 264, !dbg !7176
  %call87 = call zeroext i16 @readw(i8* %add.ptr86) #12, !dbg !7177
  %conv88 = zext i16 %call87 to i32, !dbg !7177
  %cmp89 = icmp ne i32 %conv88, 1028, !dbg !7178
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !7179

if.then91:                                        ; preds = %for.end85
  store i32 -5, i32* %retval, align 4, !dbg !7180
  br label %return, !dbg !7180

if.end92:                                         ; preds = %for.end85
  %68 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !7181
  %boardType93 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %68, i32 0, i32 0, !dbg !7181
  %69 = load i32, i32* %boardType93, align 8, !dbg !7181
  %cmp94 = icmp eq i32 %69, 4, !dbg !7181
  br i1 %cmp94, label %if.then99, label %lor.lhs.false, !dbg !7181

lor.lhs.false:                                    ; preds = %if.end92
  %70 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !7181
  %boardType96 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %70, i32 0, i32 0, !dbg !7181
  %71 = load i32, i32* %boardType96, align 8, !dbg !7181
  %cmp97 = icmp eq i32 %71, 3, !dbg !7181
  br i1 %cmp97, label %if.then99, label %if.end110, !dbg !7183

if.then99:                                        ; preds = %lor.lhs.false, %if.end92
  %72 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !7184
  %busType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %72, i32 0, i32 2, !dbg !7187
  %73 = load i32, i32* %busType, align 8, !dbg !7187
  %cmp100 = icmp eq i32 %73, 1, !dbg !7188
  br i1 %cmp100, label %if.then102, label %if.else, !dbg !7189

if.then102:                                       ; preds = %if.then99
  %74 = load i8*, i8** %baseAddr, align 8, !dbg !7190
  %add.ptr103 = getelementptr i8, i8* %74, i64 286, !dbg !7192
  call void @writew(i16 zeroext 14336, i8* %add.ptr103) #12, !dbg !7193
  %75 = load i8*, i8** %baseAddr, align 8, !dbg !7194
  %add.ptr104 = getelementptr i8, i8* %75, i64 288, !dbg !7195
  call void @writew(i16 zeroext 14592, i8* %add.ptr104) #12, !dbg !7196
  %76 = load i8*, i8** %baseAddr, align 8, !dbg !7197
  %add.ptr105 = getelementptr i8, i8* %76, i64 290, !dbg !7198
  call void @writew(i16 zeroext 28499, i8* %add.ptr105) #12, !dbg !7199
  br label %if.end109, !dbg !7200

if.else:                                          ; preds = %if.then99
  %77 = load i8*, i8** %baseAddr, align 8, !dbg !7201
  %add.ptr106 = getelementptr i8, i8* %77, i64 286, !dbg !7203
  call void @writew(i16 zeroext 12800, i8* %add.ptr106) #12, !dbg !7204
  %78 = load i8*, i8** %baseAddr, align 8, !dbg !7205
  %add.ptr107 = getelementptr i8, i8* %78, i64 288, !dbg !7206
  call void @writew(i16 zeroext 13312, i8* %add.ptr107) #12, !dbg !7207
  %79 = load i8*, i8** %baseAddr, align 8, !dbg !7208
  %add.ptr108 = getelementptr i8, i8* %79, i64 290, !dbg !7209
  call void @writew(i16 zeroext 19999, i8* %add.ptr108) #12, !dbg !7210
  br label %if.end109

if.end109:                                        ; preds = %if.else, %if.then102
  br label %if.end110, !dbg !7211

if.end110:                                        ; preds = %if.end109, %lor.lhs.false
  %80 = load i8*, i8** %baseAddr, align 8, !dbg !7212
  %add.ptr111 = getelementptr i8, i8* %80, i64 284, !dbg !7213
  call void @writew(i16 zeroext 1, i8* %add.ptr111) #12, !dbg !7214
  %81 = load i8*, i8** %baseAddr, align 8, !dbg !7215
  %add.ptr112 = getelementptr i8, i8* %81, i64 264, !dbg !7216
  call void @writew(i16 zeroext 0, i8* %add.ptr112) #12, !dbg !7217
  store i32 0, i32* %i, align 4, !dbg !7218
  br label %for.cond113, !dbg !7220

for.cond113:                                      ; preds = %for.inc124, %if.end110
  %82 = load i32, i32* %i, align 4, !dbg !7221
  %cmp114 = icmp ult i32 %82, 500, !dbg !7223
  br i1 %cmp114, label %for.body116, label %for.end126, !dbg !7224

for.body116:                                      ; preds = %for.cond113
  %83 = load i8*, i8** %baseAddr, align 8, !dbg !7225
  %add.ptr117 = getelementptr i8, i8* %83, i64 264, !dbg !7228
  %call118 = call zeroext i16 @readw(i8* %add.ptr117) #12, !dbg !7229
  %conv119 = zext i16 %call118 to i32, !dbg !7229
  %cmp120 = icmp eq i32 %conv119, 1028, !dbg !7230
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !7231

if.then122:                                       ; preds = %for.body116
  br label %for.end126, !dbg !7232

if.end123:                                        ; preds = %for.body116
  call void @msleep(i32 10) #12, !dbg !7233
  br label %for.inc124, !dbg !7234

for.inc124:                                       ; preds = %if.end123
  %84 = load i32, i32* %i, align 4, !dbg !7235
  %inc125 = add i32 %84, 1, !dbg !7235
  store i32 %inc125, i32* %i, align 4, !dbg !7235
  br label %for.cond113, !dbg !7236, !llvm.loop !7237

for.end126:                                       ; preds = %if.then122, %for.cond113
  %85 = load i8*, i8** %baseAddr, align 8, !dbg !7239
  %add.ptr127 = getelementptr i8, i8* %85, i64 264, !dbg !7241
  %call128 = call zeroext i16 @readw(i8* %add.ptr127) #12, !dbg !7242
  %conv129 = zext i16 %call128 to i32, !dbg !7242
  %cmp130 = icmp ne i32 %conv129, 1028, !dbg !7243
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !7244

if.then132:                                       ; preds = %for.end126
  store i32 -5, i32* %retval, align 4, !dbg !7245
  br label %return, !dbg !7245

if.end133:                                        ; preds = %for.end126
  %86 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !7246
  %boardType134 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %86, i32 0, i32 0, !dbg !7246
  %87 = load i32, i32* %boardType134, align 8, !dbg !7246
  %cmp135 = icmp eq i32 %87, 4, !dbg !7246
  br i1 %cmp135, label %if.then141, label %lor.lhs.false137, !dbg !7246

lor.lhs.false137:                                 ; preds = %if.end133
  %88 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !7246
  %boardType138 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %88, i32 0, i32 0, !dbg !7246
  %89 = load i32, i32* %boardType138, align 8, !dbg !7246
  %cmp139 = icmp eq i32 %89, 3, !dbg !7246
  br i1 %cmp139, label %if.then141, label %if.end174, !dbg !7248

if.then141:                                       ; preds = %lor.lhs.false137, %if.end133
  %90 = load i8*, i8** %baseAddr, align 8, !dbg !7249
  %add.ptr142 = getelementptr i8, i8* %90, i64 272, !dbg !7251
  %call143 = call zeroext i16 @readw(i8* %add.ptr142) #12, !dbg !7252
  %conv144 = zext i16 %call143 to i64, !dbg !7252
  store i64 %conv144, i64* %j, align 8, !dbg !7253
  %91 = load i64, i64* %j, align 8, !dbg !7254
  %cmp145 = icmp ule i64 %91, 0, !dbg !7256
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !7257

if.then147:                                       ; preds = %if.then141
  store i32 -5, i32* %retval, align 4, !dbg !7258
  br label %return, !dbg !7258

if.end148:                                        ; preds = %if.then141
  %92 = load i64, i64* %j, align 8, !dbg !7259
  %mul = mul i64 %92, 8, !dbg !7260
  %conv149 = trunc i64 %mul to i32, !dbg !7259
  %93 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !7261
  %numPorts = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %93, i32 0, i32 1, !dbg !7262
  store i32 %conv149, i32* %numPorts, align 4, !dbg !7263
  %94 = load i64, i64* %j, align 8, !dbg !7264
  %conv150 = trunc i64 %94 to i16, !dbg !7264
  %95 = load i8*, i8** %baseAddr, align 8, !dbg !7265
  %add.ptr151 = getelementptr i8, i8* %95, i64 274, !dbg !7266
  call void @writew(i16 zeroext %conv150, i8* %add.ptr151) #12, !dbg !7267
  %96 = load i8*, i8** %baseAddr, align 8, !dbg !7268
  %add.ptr152 = getelementptr i8, i8* %96, i64 264, !dbg !7269
  call void @writew(i16 zeroext 0, i8* %add.ptr152) #12, !dbg !7270
  store i32 0, i32* %i, align 4, !dbg !7271
  br label %for.cond153, !dbg !7273

for.cond153:                                      ; preds = %for.inc164, %if.end148
  %97 = load i32, i32* %i, align 4, !dbg !7274
  %cmp154 = icmp ult i32 %97, 600, !dbg !7276
  br i1 %cmp154, label %for.body156, label %for.end166, !dbg !7277

for.body156:                                      ; preds = %for.cond153
  %98 = load i8*, i8** %baseAddr, align 8, !dbg !7278
  %add.ptr157 = getelementptr i8, i8* %98, i64 264, !dbg !7281
  %call158 = call zeroext i16 @readw(i8* %add.ptr157) #12, !dbg !7282
  %conv159 = zext i16 %call158 to i32, !dbg !7282
  %cmp160 = icmp eq i32 %conv159, 1028, !dbg !7283
  br i1 %cmp160, label %if.then162, label %if.end163, !dbg !7284

if.then162:                                       ; preds = %for.body156
  br label %for.end166, !dbg !7285

if.end163:                                        ; preds = %for.body156
  call void @msleep(i32 10) #12, !dbg !7286
  br label %for.inc164, !dbg !7287

for.inc164:                                       ; preds = %if.end163
  %99 = load i32, i32* %i, align 4, !dbg !7288
  %inc165 = add i32 %99, 1, !dbg !7288
  store i32 %inc165, i32* %i, align 4, !dbg !7288
  br label %for.cond153, !dbg !7289, !llvm.loop !7290

for.end166:                                       ; preds = %if.then162, %for.cond153
  %100 = load i8*, i8** %baseAddr, align 8, !dbg !7292
  %add.ptr167 = getelementptr i8, i8* %100, i64 264, !dbg !7294
  %call168 = call zeroext i16 @readw(i8* %add.ptr167) #12, !dbg !7295
  %conv169 = zext i16 %call168 to i32, !dbg !7295
  %cmp170 = icmp ne i32 %conv169, 1028, !dbg !7296
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !7297

if.then172:                                       ; preds = %for.end166
  store i32 -5, i32* %retval, align 4, !dbg !7298
  br label %return, !dbg !7298

if.end173:                                        ; preds = %for.end166
  br label %if.end174, !dbg !7299

if.end174:                                        ; preds = %if.end173, %lor.lhs.false137
  %101 = load i8*, i8** %baseAddr, align 8, !dbg !7300
  %add.ptr175 = getelementptr i8, i8* %101, i64 0, !dbg !7301
  %102 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !7302
  %intNdx = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %102, i32 0, i32 6, !dbg !7303
  store i8* %add.ptr175, i8** %intNdx, align 8, !dbg !7304
  %103 = load i8*, i8** %baseAddr, align 8, !dbg !7305
  %add.ptr176 = getelementptr i8, i8* %103, i64 4, !dbg !7306
  %104 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !7307
  %intPend = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %104, i32 0, i32 7, !dbg !7308
  store i8* %add.ptr176, i8** %intPend, align 8, !dbg !7309
  %105 = load i8*, i8** %baseAddr, align 8, !dbg !7310
  %add.ptr177 = getelementptr i8, i8* %105, i64 8, !dbg !7311
  %106 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd.addr, align 8, !dbg !7312
  %intTable = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %106, i32 0, i32 8, !dbg !7313
  store i8* %add.ptr177, i8** %intTable, align 8, !dbg !7314
  store i32 0, i32* %retval, align 4, !dbg !7315
  br label %return, !dbg !7315

return:                                           ; preds = %if.end174, %if.then172, %if.then147, %if.then132, %if.then91, %if.then69, %if.then36
  %107 = load i32, i32* %retval, align 4, !dbg !7316
  ret i32 %107, !dbg !7316
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hlist_unhashed_lockless(%struct.hlist_node* %h) #3 !dbg !7317 {
entry:
  %h.addr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.hlist_node**, align 8
  store %struct.hlist_node* %h, %struct.hlist_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %h.addr, metadata !7323, metadata !DIExpression()), !dbg !7324
  br label %do.body, !dbg !7325

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7327

do.end:                                           ; preds = %do.body
  %0 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !7325
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 1, !dbg !7325
  %1 = load volatile %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !7325
  store %struct.hlist_node** %1, %struct.hlist_node*** %tmp, align 8, !dbg !7327
  %2 = load %struct.hlist_node**, %struct.hlist_node*** %tmp, align 8, !dbg !7325
  %tobool = icmp ne %struct.hlist_node** %2, null, !dbg !7329
  %lnot = xor i1 %tobool, true, !dbg !7329
  %lnot.ext = zext i1 %lnot to i32, !dbg !7329
  ret i32 %lnot.ext, !dbg !7330
}

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #3 !dbg !7331 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7334, metadata !DIExpression()), !dbg !7335
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7336, metadata !DIExpression()), !dbg !7337
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7338
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7339
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !7340
  store i8* %0, i8** %driver_data, align 8, !dbg !7341
  ret void, !dbg !7342
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #3 !dbg !7343 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7346, metadata !DIExpression()), !dbg !7347
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7348
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !7349
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !7350
  ret i8* %call, !dbg !7351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #3 !dbg !7352 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7355, metadata !DIExpression()), !dbg !7356
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7357
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !7358
  %1 = load i8*, i8** %driver_data, align 8, !dbg !7358
  ret i8* %1, !dbg !7359
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #3 !dbg !7360 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !7363, metadata !DIExpression()), !dbg !7364
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7365
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !7366
  %call = call zeroext i1 @test_bit(i64 0, i64* %iflags) #12, !dbg !7367
  ret i1 %call, !dbg !7368
}

; Function Attrs: noredzone
declare dso_local void @tty_port_tty_hangup(%struct.tty_port*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local void @tty_unregister_device(%struct.tty_driver*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #3 !dbg !7369 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !7376, metadata !DIExpression()), !dbg !7378
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !7380, metadata !DIExpression()), !dbg !7381
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !7382, metadata !DIExpression()), !dbg !7383
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7384, metadata !DIExpression()), !dbg !7386
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7388, metadata !DIExpression()), !dbg !7389
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7390, metadata !DIExpression()), !dbg !7395
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7397, metadata !DIExpression()), !dbg !7398
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7399, metadata !DIExpression()), !dbg !7400
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7403
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7404
  %div = sdiv i64 %1, 64, !dbg !7404
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7405
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7403
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7406
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7407
  %conv.i = trunc i64 %4 to i32, !dbg !7407
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #15, !dbg !7408
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7409
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7409
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #15, !dbg !7409
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7410
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !7410
  br i1 %8, label %cond.true, label %cond.false, !dbg !7410

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !7410
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !7410
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !7411
  %and.i = and i64 %11, 63, !dbg !7412
  %shl.i = shl i64 1, %and.i, !dbg !7413
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !7414
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7415
  %shr.i = ashr i64 %13, 6, !dbg !7416
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !7414
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !7414
  %and1.i = and i64 %shl.i, %14, !dbg !7417
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !7418
  %conv = zext i1 %cmp.i to i32, !dbg !7410
  br label %cond.end, !dbg !7410

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !7410
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !7410
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !7419
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !7420
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !7421, !srcloc !7422
  store i8 %19, i8* %oldbit.i, align 1, !dbg !7421
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !7423
  %tobool.i = trunc i8 %20 to i1, !dbg !7423
  %conv2 = zext i1 %tobool.i to i32, !dbg !7410
  br label %cond.end, !dbg !7410

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !7410
  %tobool = icmp ne i32 %cond, 0, !dbg !7410
  ret i1 %tobool, !dbg !7424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #3 !dbg !7425 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7429, metadata !DIExpression()), !dbg !7430
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7431, metadata !DIExpression()), !dbg !7432
  ret i1 true, !dbg !7433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #3 !dbg !7434 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7438, metadata !DIExpression()), !dbg !7439
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7440, metadata !DIExpression()), !dbg !7441
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  ret void, !dbg !7444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_poll(%struct.timer_list* %unused) #3 !dbg !7445 {
entry:
  %lock.addr.i46 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i46, metadata !7446, metadata !DIExpression()), !dbg !7448
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7450, metadata !DIExpression()), !dbg !7452
  %unused.addr = alloca %struct.timer_list*, align 8
  %brd = alloca %struct.moxa_board_conf*, align 8
  %ip = alloca i16*, align 8
  %card = alloca i32, align 4
  %port = alloca i32, align 4
  %served = alloca i32, align 4
  %p = alloca %struct.moxa_port*, align 8
  store %struct.timer_list* %unused, %struct.timer_list** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %unused.addr, metadata !7454, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd, metadata !7456, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.declare(metadata i16** %ip, metadata !7458, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.declare(metadata i32* %card, metadata !7461, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.declare(metadata i32* %port, metadata !7463, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.declare(metadata i32* %served, metadata !7465, metadata !DIExpression()), !dbg !7466
  store i32 0, i32* %served, align 4, !dbg !7466
  store %struct.spinlock* @moxa_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7467, !srcloc !7469
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7470
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !7470
  %rlock.i = bitcast %union.anon.2* %1 to %struct.raw_spinlock*, !dbg !7470
  store i32 0, i32* %card, align 4, !dbg !7472
  br label %for.cond, !dbg !7474

for.cond:                                         ; preds = %for.inc39, %entry
  %2 = load i32, i32* %card, align 4, !dbg !7475
  %cmp = icmp ult i32 %2, 4, !dbg !7477
  br i1 %cmp, label %for.body, label %for.end41, !dbg !7478

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %card, align 4, !dbg !7479
  %idxprom = zext i32 %3 to i64, !dbg !7481
  %arrayidx = getelementptr [4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 %idxprom, !dbg !7481
  store %struct.moxa_board_conf* %arrayidx, %struct.moxa_board_conf** %brd, align 8, !dbg !7482
  %4 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !7483
  %ready = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %4, i32 0, i32 3, !dbg !7485
  %5 = load i32, i32* %ready, align 4, !dbg !7485
  %tobool = icmp ne i32 %5, 0, !dbg !7483
  br i1 %tobool, label %if.end, label %if.then, !dbg !7486

if.then:                                          ; preds = %for.body
  br label %for.inc39, !dbg !7487

if.end:                                           ; preds = %for.body
  %6 = load i32, i32* %served, align 4, !dbg !7488
  %inc = add i32 %6, 1, !dbg !7488
  store i32 %inc, i32* %served, align 4, !dbg !7488
  store i16* null, i16** %ip, align 8, !dbg !7489
  %7 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !7490
  %intPend = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %7, i32 0, i32 7, !dbg !7492
  %8 = load i8*, i8** %intPend, align 8, !dbg !7492
  %call = call zeroext i8 @readb(i8* %8) #12, !dbg !7493
  %conv = zext i8 %call to i32, !dbg !7493
  %cmp1 = icmp eq i32 %conv, 255, !dbg !7494
  br i1 %cmp1, label %if.then3, label %if.end6, !dbg !7495

if.then3:                                         ; preds = %if.end
  %9 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !7496
  %intTable = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %9, i32 0, i32 8, !dbg !7497
  %10 = load i8*, i8** %intTable, align 8, !dbg !7497
  %11 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !7498
  %intNdx = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %11, i32 0, i32 6, !dbg !7499
  %12 = load i8*, i8** %intNdx, align 8, !dbg !7499
  %call4 = call zeroext i8 @readb(i8* %12) #12, !dbg !7500
  %conv5 = zext i8 %call4 to i32, !dbg !7500
  %idx.ext = sext i32 %conv5 to i64, !dbg !7501
  %add.ptr = getelementptr i8, i8* %10, i64 %idx.ext, !dbg !7501
  %13 = bitcast i8* %add.ptr to i16*, !dbg !7496
  store i16* %13, i16** %ip, align 8, !dbg !7502
  br label %if.end6, !dbg !7503

if.end6:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %port, align 4, !dbg !7504
  br label %for.cond7, !dbg !7506

for.cond7:                                        ; preds = %for.inc, %if.end6
  %14 = load i32, i32* %port, align 4, !dbg !7507
  %15 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !7509
  %numPorts = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %15, i32 0, i32 1, !dbg !7510
  %16 = load i32, i32* %numPorts, align 4, !dbg !7510
  %cmp8 = icmp ult i32 %14, %16, !dbg !7511
  br i1 %cmp8, label %for.body10, label %for.end, !dbg !7512

for.body10:                                       ; preds = %for.cond7
  %17 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !7513
  %ports = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %17, i32 0, i32 4, !dbg !7514
  %18 = load %struct.moxa_port*, %struct.moxa_port** %ports, align 8, !dbg !7514
  %19 = load i32, i32* %port, align 4, !dbg !7515
  %idxprom11 = zext i32 %19 to i64, !dbg !7513
  %arrayidx12 = getelementptr %struct.moxa_port, %struct.moxa_port* %18, i64 %idxprom11, !dbg !7513
  %20 = load i16*, i16** %ip, align 8, !dbg !7516
  %tobool13 = icmp ne i16* %20, null, !dbg !7517
  %lnot = xor i1 %tobool13, true, !dbg !7517
  %lnot14 = xor i1 %lnot, true, !dbg !7518
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !7518
  %21 = load i16*, i16** %ip, align 8, !dbg !7519
  %22 = load i32, i32* %port, align 4, !dbg !7520
  %idx.ext15 = zext i32 %22 to i64, !dbg !7521
  %add.ptr16 = getelementptr i16, i16* %21, i64 %idx.ext15, !dbg !7521
  %call17 = call i32 @moxa_poll_port(%struct.moxa_port* %arrayidx12, i32 %lnot.ext, i16* %add.ptr16) #12, !dbg !7522
  br label %for.inc, !dbg !7522

for.inc:                                          ; preds = %for.body10
  %23 = load i32, i32* %port, align 4, !dbg !7523
  %inc18 = add i32 %23, 1, !dbg !7523
  store i32 %inc18, i32* %port, align 4, !dbg !7523
  br label %for.cond7, !dbg !7524, !llvm.loop !7525

for.end:                                          ; preds = %for.cond7
  %24 = load i16*, i16** %ip, align 8, !dbg !7527
  %tobool19 = icmp ne i16* %24, null, !dbg !7527
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !7529

if.then20:                                        ; preds = %for.end
  %25 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !7530
  %intPend21 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %25, i32 0, i32 7, !dbg !7531
  %26 = load i8*, i8** %intPend21, align 8, !dbg !7531
  call void @writeb(i8 zeroext 0, i8* %26) #12, !dbg !7532
  br label %if.end22, !dbg !7532

if.end22:                                         ; preds = %if.then20, %for.end
  %27 = load i32, i32* @moxaLowWaterChk, align 4, !dbg !7533
  %tobool23 = icmp ne i32 %27, 0, !dbg !7533
  br i1 %tobool23, label %if.then24, label %if.end38, !dbg !7535

if.then24:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %p, metadata !7536, metadata !DIExpression()), !dbg !7538
  %28 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !7539
  %ports25 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %28, i32 0, i32 4, !dbg !7540
  %29 = load %struct.moxa_port*, %struct.moxa_port** %ports25, align 8, !dbg !7540
  store %struct.moxa_port* %29, %struct.moxa_port** %p, align 8, !dbg !7538
  store i32 0, i32* %port, align 4, !dbg !7541
  br label %for.cond26, !dbg !7543

for.cond26:                                       ; preds = %for.inc35, %if.then24
  %30 = load i32, i32* %port, align 4, !dbg !7544
  %31 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !7546
  %numPorts27 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %31, i32 0, i32 1, !dbg !7547
  %32 = load i32, i32* %numPorts27, align 4, !dbg !7547
  %cmp28 = icmp ult i32 %30, %32, !dbg !7548
  br i1 %cmp28, label %for.body30, label %for.end37, !dbg !7549

for.body30:                                       ; preds = %for.cond26
  %33 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !7550
  %lowChkFlag = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %33, i32 0, i32 8, !dbg !7552
  %34 = load i8, i8* %lowChkFlag, align 2, !dbg !7552
  %tobool31 = icmp ne i8 %34, 0, !dbg !7550
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !7553

if.then32:                                        ; preds = %for.body30
  %35 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !7554
  %lowChkFlag33 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %35, i32 0, i32 8, !dbg !7556
  store i8 0, i8* %lowChkFlag33, align 2, !dbg !7557
  %36 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !7558
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %36, i32 0, i32 2, !dbg !7559
  %37 = load i8*, i8** %tableAddr, align 8, !dbg !7559
  call void @moxa_low_water_check(i8* %37) #12, !dbg !7560
  br label %if.end34, !dbg !7561

if.end34:                                         ; preds = %if.then32, %for.body30
  br label %for.inc35, !dbg !7552

for.inc35:                                        ; preds = %if.end34
  %38 = load i32, i32* %port, align 4, !dbg !7562
  %inc36 = add i32 %38, 1, !dbg !7562
  store i32 %inc36, i32* %port, align 4, !dbg !7562
  %39 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !7563
  %incdec.ptr = getelementptr %struct.moxa_port, %struct.moxa_port* %39, i32 1, !dbg !7563
  store %struct.moxa_port* %incdec.ptr, %struct.moxa_port** %p, align 8, !dbg !7563
  br label %for.cond26, !dbg !7564, !llvm.loop !7565

for.end37:                                        ; preds = %for.cond26
  br label %if.end38, !dbg !7567

if.end38:                                         ; preds = %for.end37, %if.end22
  br label %for.inc39, !dbg !7568

for.inc39:                                        ; preds = %if.end38, %if.then
  %40 = load i32, i32* %card, align 4, !dbg !7569
  %inc40 = add i32 %40, 1, !dbg !7569
  store i32 %inc40, i32* %card, align 4, !dbg !7569
  br label %for.cond, !dbg !7570, !llvm.loop !7571

for.end41:                                        ; preds = %for.cond
  store i32 0, i32* @moxaLowWaterChk, align 4, !dbg !7573
  %41 = load i32, i32* %served, align 4, !dbg !7574
  %tobool42 = icmp ne i32 %41, 0, !dbg !7574
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !7576

if.then43:                                        ; preds = %for.end41
  %42 = load volatile i64, i64* @jiffies, align 8, !dbg !7577
  %add = add i64 %42, 5, !dbg !7578
  %call44 = call i32 @mod_timer(%struct.timer_list* @moxaTimer, i64 %add) #12, !dbg !7579
  br label %if.end45, !dbg !7579

if.end45:                                         ; preds = %if.then43, %for.end41
  store %struct.spinlock* @moxa_lock, %struct.spinlock** %lock.addr.i46, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7580, !srcloc !7582
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i46, align 8, !dbg !7583
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !7583
  %rlock.i47 = bitcast %union.anon.2* %44 to %struct.raw_spinlock*, !dbg !7583
  ret void, !dbg !7585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_poll_port(%struct.moxa_port* %p, i32 %handle, i16* %ip) #3 !dbg !7586 {
entry:
  %p.addr = alloca %struct.moxa_port*, align 8
  %handle.addr = alloca i32, align 4
  %ip.addr = alloca i16*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %ofsAddr = alloca i8*, align 8
  %inited = alloca i32, align 4
  %intr = alloca i16, align 2
  store %struct.moxa_port* %p, %struct.moxa_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %p.addr, metadata !7589, metadata !DIExpression()), !dbg !7590
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !7591, metadata !DIExpression()), !dbg !7592
  store i16* %ip, i16** %ip.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %ip.addr, metadata !7593, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !7595, metadata !DIExpression()), !dbg !7596
  %0 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7597
  %port = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 0, !dbg !7598
  %call = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %port) #12, !dbg !7599
  store %struct.tty_struct* %call, %struct.tty_struct** %tty, align 8, !dbg !7596
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !7600, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.declare(metadata i32* %inited, metadata !7602, metadata !DIExpression()), !dbg !7603
  %1 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7604
  %port1 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %1, i32 0, i32 0, !dbg !7605
  %call2 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port1) #12, !dbg !7606
  %conv = zext i1 %call2 to i32, !dbg !7606
  store i32 %conv, i32* %inited, align 4, !dbg !7603
  call void @llvm.dbg.declare(metadata i16* %intr, metadata !7607, metadata !DIExpression()), !dbg !7608
  %2 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7609
  %tobool = icmp ne %struct.tty_struct* %2, null, !dbg !7609
  br i1 %tobool, label %if.then, label %if.else, !dbg !7611

if.then:                                          ; preds = %entry
  %3 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7612
  %statusflags = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %3, i32 0, i32 5, !dbg !7615
  %call3 = call zeroext i1 @test_bit(i64 3, i64* %statusflags) #12, !dbg !7616
  br i1 %call3, label %land.lhs.true, label %if.end, !dbg !7617

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7618
  %call5 = call i32 @MoxaPortTxQueue(%struct.moxa_port* %4) #12, !dbg !7619
  %cmp = icmp eq i32 %call5, 0, !dbg !7620
  br i1 %cmp, label %if.then7, label %if.end, !dbg !7621

if.then7:                                         ; preds = %land.lhs.true
  %5 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7622
  %statusflags8 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %5, i32 0, i32 5, !dbg !7624
  call void @clear_bit(i64 3, i64* %statusflags8) #12, !dbg !7625
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7626
  call void @tty_wakeup(%struct.tty_struct* %6) #12, !dbg !7627
  br label %if.end, !dbg !7628

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  %7 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7629
  %statusflags9 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %7, i32 0, i32 5, !dbg !7631
  %call10 = call zeroext i1 @test_bit(i64 2, i64* %statusflags9) #12, !dbg !7632
  br i1 %call10, label %land.lhs.true12, label %if.end20, !dbg !7633

land.lhs.true12:                                  ; preds = %if.end
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7634
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %8, i32 0, i32 24, !dbg !7635
  %bf.load = load i8, i8* %stopped, align 4, !dbg !7635
  %bf.clear = and i8 %bf.load, 1, !dbg !7635
  %bf.cast = zext i8 %bf.clear to i64, !dbg !7635
  %tobool13 = icmp ne i64 %bf.cast, 0, !dbg !7634
  br i1 %tobool13, label %if.end20, label %land.lhs.true14, !dbg !7636

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %9 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7637
  %call15 = call i32 @MoxaPortTxQueue(%struct.moxa_port* %9) #12, !dbg !7638
  %cmp16 = icmp sle i32 %call15, 256, !dbg !7639
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !7640

if.then18:                                        ; preds = %land.lhs.true14
  %10 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7641
  %statusflags19 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %10, i32 0, i32 5, !dbg !7643
  call void @clear_bit(i64 2, i64* %statusflags19) #12, !dbg !7644
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7645
  call void @tty_wakeup(%struct.tty_struct* %11) #12, !dbg !7646
  br label %if.end20, !dbg !7647

if.end20:                                         ; preds = %if.then18, %land.lhs.true14, %land.lhs.true12, %if.end
  %12 = load i32, i32* %inited, align 4, !dbg !7648
  %tobool21 = icmp ne i32 %12, 0, !dbg !7648
  br i1 %tobool21, label %land.lhs.true22, label %if.end31, !dbg !7650

land.lhs.true22:                                  ; preds = %if.end20
  %13 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7651
  %call23 = call zeroext i1 @tty_throttled(%struct.tty_struct* %13) #12, !dbg !7652
  br i1 %call23, label %if.end31, label %land.lhs.true24, !dbg !7653

land.lhs.true24:                                  ; preds = %land.lhs.true22
  %14 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7654
  %call25 = call i32 @MoxaPortRxQueue(%struct.moxa_port* %14) #12, !dbg !7655
  %cmp26 = icmp sgt i32 %call25, 0, !dbg !7656
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !7657

if.then28:                                        ; preds = %land.lhs.true24
  %15 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7658
  %call29 = call i32 @MoxaPortReadData(%struct.moxa_port* %15) #12, !dbg !7660
  %16 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7661
  %port30 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %16, i32 0, i32 0, !dbg !7662
  call void @tty_schedule_flip(%struct.tty_port* %port30) #12, !dbg !7663
  br label %if.end31, !dbg !7664

if.end31:                                         ; preds = %if.then28, %land.lhs.true24, %land.lhs.true22, %if.end20
  br label %if.end33, !dbg !7665

if.else:                                          ; preds = %entry
  %17 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7666
  %statusflags32 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %17, i32 0, i32 5, !dbg !7668
  call void @clear_bit(i64 3, i64* %statusflags32) #12, !dbg !7669
  %18 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7670
  call void @MoxaPortFlushData(%struct.moxa_port* %18, i32 0) #12, !dbg !7671
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.end31
  %19 = load i32, i32* %handle.addr, align 4, !dbg !7672
  %tobool34 = icmp ne i32 %19, 0, !dbg !7672
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !7674

if.then35:                                        ; preds = %if.end33
  br label %put, !dbg !7675

if.end36:                                         ; preds = %if.end33
  %20 = load i16*, i16** %ip.addr, align 8, !dbg !7676
  %21 = bitcast i16* %20 to i8*, !dbg !7676
  %call37 = call zeroext i16 @readw(i8* %21) #12, !dbg !7677
  store i16 %call37, i16* %intr, align 2, !dbg !7678
  %22 = load i16, i16* %intr, align 2, !dbg !7679
  %conv38 = zext i16 %22 to i32, !dbg !7679
  %cmp39 = icmp eq i32 %conv38, 0, !dbg !7681
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !7682

if.then41:                                        ; preds = %if.end36
  br label %put, !dbg !7683

if.end42:                                         ; preds = %if.end36
  %23 = load i16*, i16** %ip.addr, align 8, !dbg !7684
  %24 = bitcast i16* %23 to i8*, !dbg !7684
  call void @writew(i16 zeroext 0, i8* %24) #12, !dbg !7685
  %25 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7686
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %25, i32 0, i32 2, !dbg !7687
  %26 = load i8*, i8** %tableAddr, align 8, !dbg !7687
  store i8* %26, i8** %ofsAddr, align 8, !dbg !7688
  %27 = load i16, i16* %intr, align 2, !dbg !7689
  %conv43 = zext i16 %27 to i32, !dbg !7689
  %and = and i32 %conv43, 2, !dbg !7691
  %tobool44 = icmp ne i32 %and, 0, !dbg !7691
  br i1 %tobool44, label %if.then45, label %if.end51, !dbg !7692

if.then45:                                        ; preds = %if.end42
  %28 = load i8*, i8** %ofsAddr, align 8, !dbg !7693
  %add.ptr = getelementptr i8, i8* %28, i64 8, !dbg !7694
  %call46 = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !7695
  %conv47 = zext i16 %call46 to i32, !dbg !7695
  %and48 = and i32 %conv47, -3, !dbg !7696
  %conv49 = trunc i32 %and48 to i16, !dbg !7695
  %29 = load i8*, i8** %ofsAddr, align 8, !dbg !7697
  %add.ptr50 = getelementptr i8, i8* %29, i64 8, !dbg !7698
  call void @writew(i16 zeroext %conv49, i8* %add.ptr50) #12, !dbg !7699
  br label %if.end51, !dbg !7699

if.end51:                                         ; preds = %if.then45, %if.end42
  %30 = load i32, i32* %inited, align 4, !dbg !7700
  %tobool52 = icmp ne i32 %30, 0, !dbg !7700
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !7702

if.then53:                                        ; preds = %if.end51
  br label %put, !dbg !7703

if.end54:                                         ; preds = %if.end51
  %31 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7704
  %tobool55 = icmp ne %struct.tty_struct* %31, null, !dbg !7704
  br i1 %tobool55, label %land.lhs.true56, label %if.end67, !dbg !7706

land.lhs.true56:                                  ; preds = %if.end54
  %32 = load i16, i16* %intr, align 2, !dbg !7707
  %conv57 = zext i16 %32 to i32, !dbg !7707
  %and58 = and i32 %conv57, 8, !dbg !7708
  %tobool59 = icmp ne i32 %and58, 0, !dbg !7708
  br i1 %tobool59, label %land.lhs.true60, label %if.end67, !dbg !7709

land.lhs.true60:                                  ; preds = %land.lhs.true56
  %33 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7710
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %33, i32 0, i32 15, !dbg !7710
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !7710
  %34 = load i32, i32* %c_iflag, align 8, !dbg !7710
  %and61 = and i32 %34, 1, !dbg !7710
  %tobool62 = icmp ne i32 %and61, 0, !dbg !7710
  br i1 %tobool62, label %if.end67, label %if.then63, !dbg !7711

if.then63:                                        ; preds = %land.lhs.true60
  %35 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7712
  %port64 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %35, i32 0, i32 0, !dbg !7714
  %call65 = call i32 @tty_insert_flip_char(%struct.tty_port* %port64, i8 zeroext 0, i8 signext 1) #12, !dbg !7715
  %36 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7716
  %port66 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %36, i32 0, i32 0, !dbg !7717
  call void @tty_schedule_flip(%struct.tty_port* %port66) #12, !dbg !7718
  br label %if.end67, !dbg !7719

if.end67:                                         ; preds = %if.then63, %land.lhs.true60, %land.lhs.true56, %if.end54
  %37 = load i16, i16* %intr, align 2, !dbg !7720
  %conv68 = zext i16 %37 to i32, !dbg !7720
  %and69 = and i32 %conv68, 16, !dbg !7722
  %tobool70 = icmp ne i32 %and69, 0, !dbg !7722
  br i1 %tobool70, label %if.then71, label %if.end77, !dbg !7723

if.then71:                                        ; preds = %if.end67
  %38 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !7724
  %39 = load i8*, i8** %ofsAddr, align 8, !dbg !7725
  %add.ptr72 = getelementptr i8, i8* %39, i64 10, !dbg !7726
  %call73 = call zeroext i8 @readb(i8* %add.ptr72) #12, !dbg !7727
  %conv74 = zext i8 %call73 to i32, !dbg !7727
  %and75 = and i32 %conv74, 128, !dbg !7728
  %conv76 = trunc i32 %and75 to i8, !dbg !7727
  call void @moxa_new_dcdstate(%struct.moxa_port* %38, i8 zeroext %conv76) #12, !dbg !7729
  br label %if.end77, !dbg !7729

if.end77:                                         ; preds = %if.then71, %if.end67
  br label %put, !dbg !7730

put:                                              ; preds = %if.end77, %if.then53, %if.then41, %if.then35
  call void @llvm.dbg.label(metadata !7731), !dbg !7732
  %40 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7733
  call void @tty_kref_put(%struct.tty_struct* %40) #12, !dbg !7734
  ret i32 0, !dbg !7735
}

; Function Attrs: noredzone
declare dso_local %struct.tty_struct* @tty_port_tty_get(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @MoxaPortTxQueue(%struct.moxa_port* %port) #3 !dbg !7736 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %ofsAddr = alloca i8*, align 8
  %rptr = alloca i16, align 2
  %wptr = alloca i16, align 2
  %mask = alloca i16, align 2
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !7739, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !7741, metadata !DIExpression()), !dbg !7742
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !7743
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !7744
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !7744
  store i8* %1, i8** %ofsAddr, align 8, !dbg !7742
  call void @llvm.dbg.declare(metadata i16* %rptr, metadata !7745, metadata !DIExpression()), !dbg !7746
  call void @llvm.dbg.declare(metadata i16* %wptr, metadata !7747, metadata !DIExpression()), !dbg !7748
  call void @llvm.dbg.declare(metadata i16* %mask, metadata !7749, metadata !DIExpression()), !dbg !7750
  %2 = load i8*, i8** %ofsAddr, align 8, !dbg !7751
  %add.ptr = getelementptr i8, i8* %2, i64 4, !dbg !7752
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !7753
  store i16 %call, i16* %rptr, align 2, !dbg !7754
  %3 = load i8*, i8** %ofsAddr, align 8, !dbg !7755
  %add.ptr1 = getelementptr i8, i8* %3, i64 6, !dbg !7756
  %call2 = call zeroext i16 @readw(i8* %add.ptr1) #12, !dbg !7757
  store i16 %call2, i16* %wptr, align 2, !dbg !7758
  %4 = load i8*, i8** %ofsAddr, align 8, !dbg !7759
  %add.ptr3 = getelementptr i8, i8* %4, i64 20, !dbg !7760
  %call4 = call zeroext i16 @readw(i8* %add.ptr3) #12, !dbg !7761
  store i16 %call4, i16* %mask, align 2, !dbg !7762
  %5 = load i16, i16* %wptr, align 2, !dbg !7763
  %conv = zext i16 %5 to i32, !dbg !7763
  %6 = load i16, i16* %rptr, align 2, !dbg !7764
  %conv5 = zext i16 %6 to i32, !dbg !7764
  %sub = sub i32 %conv, %conv5, !dbg !7765
  %7 = load i16, i16* %mask, align 2, !dbg !7766
  %conv6 = zext i16 %7 to i32, !dbg !7766
  %and = and i32 %sub, %conv6, !dbg !7767
  ret i32 %and, !dbg !7768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #3 !dbg !7769 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7774, metadata !DIExpression()), !dbg !7776
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7778, metadata !DIExpression()), !dbg !7779
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7780, metadata !DIExpression()), !dbg !7782
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7784, metadata !DIExpression()), !dbg !7785
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7786, metadata !DIExpression()), !dbg !7787
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7788, metadata !DIExpression()), !dbg !7789
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7790
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7791
  %div = sdiv i64 %1, 64, !dbg !7791
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7792
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7790
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7793
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7794
  %conv.i = trunc i64 %4 to i32, !dbg !7794
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !7795
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7796
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7796
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #15, !dbg !7796
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7797
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7798
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7799
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !7801
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7802

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7803
  %12 = bitcast i64* %11 to i8*, !dbg !7803
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7803
  %shr.i = ashr i64 %13, 3, !dbg !7803
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7803
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7805
  %and.i = and i64 %14, 7, !dbg !7805
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7805
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7805
  %neg.i = xor i32 %shl.i, -1, !dbg !7806
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !7807, !srcloc !7808
  br label %arch_clear_bit.exit, !dbg !7809

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7810
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7812
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !7813, !srcloc !7814
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7815
}

; Function Attrs: noredzone
declare dso_local void @tty_wakeup(%struct.tty_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_throttled(%struct.tty_struct* %tty) #3 !dbg !7816 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !7819, metadata !DIExpression()), !dbg !7820
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7821
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 21, !dbg !7822
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #12, !dbg !7823
  ret i1 %call, !dbg !7824
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @MoxaPortRxQueue(%struct.moxa_port* %port) #3 !dbg !7825 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %ofsAddr = alloca i8*, align 8
  %rptr = alloca i16, align 2
  %wptr = alloca i16, align 2
  %mask = alloca i16, align 2
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !7826, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !7828, metadata !DIExpression()), !dbg !7829
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !7830
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !7831
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !7831
  store i8* %1, i8** %ofsAddr, align 8, !dbg !7829
  call void @llvm.dbg.declare(metadata i16* %rptr, metadata !7832, metadata !DIExpression()), !dbg !7833
  call void @llvm.dbg.declare(metadata i16* %wptr, metadata !7834, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.declare(metadata i16* %mask, metadata !7836, metadata !DIExpression()), !dbg !7837
  %2 = load i8*, i8** %ofsAddr, align 8, !dbg !7838
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7839
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !7840
  store i16 %call, i16* %rptr, align 2, !dbg !7841
  %3 = load i8*, i8** %ofsAddr, align 8, !dbg !7842
  %add.ptr1 = getelementptr i8, i8* %3, i64 2, !dbg !7843
  %call2 = call zeroext i16 @readw(i8* %add.ptr1) #12, !dbg !7844
  store i16 %call2, i16* %wptr, align 2, !dbg !7845
  %4 = load i8*, i8** %ofsAddr, align 8, !dbg !7846
  %add.ptr3 = getelementptr i8, i8* %4, i64 18, !dbg !7847
  %call4 = call zeroext i16 @readw(i8* %add.ptr3) #12, !dbg !7848
  store i16 %call4, i16* %mask, align 2, !dbg !7849
  %5 = load i16, i16* %wptr, align 2, !dbg !7850
  %conv = zext i16 %5 to i32, !dbg !7850
  %6 = load i16, i16* %rptr, align 2, !dbg !7851
  %conv5 = zext i16 %6 to i32, !dbg !7851
  %sub = sub i32 %conv, %conv5, !dbg !7852
  %7 = load i16, i16* %mask, align 2, !dbg !7853
  %conv6 = zext i16 %7 to i32, !dbg !7853
  %and = and i32 %sub, %conv6, !dbg !7854
  ret i32 %and, !dbg !7855
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @MoxaPortReadData(%struct.moxa_port* %port) #3 !dbg !7856 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.moxa_port*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %dst = alloca i8*, align 8
  %baseAddr = alloca i8*, align 8
  %ofsAddr = alloca i8*, align 8
  %ofs = alloca i8*, align 8
  %count = alloca i32, align 4
  %len = alloca i32, align 4
  %total = alloca i32, align 4
  %tail = alloca i16, align 2
  %rx_mask = alloca i16, align 2
  %spage = alloca i16, align 2
  %epage = alloca i16, align 2
  %pageno = alloca i16, align 2
  %pageofs = alloca i16, align 2
  %bufhead = alloca i16, align 2
  %head = alloca i16, align 2
  %__UNIQUE_ID___x259 = alloca i32, align 4
  %__UNIQUE_ID___y260 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x261 = alloca i32, align 4
  %__UNIQUE_ID___y262 = alloca i32, align 4
  %tmp88 = alloca i32, align 4
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !7857, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !7859, metadata !DIExpression()), !dbg !7860
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !7861
  %port1 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 0, !dbg !7862
  %tty2 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port1, i32 0, i32 1, !dbg !7863
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty2, align 8, !dbg !7863
  store %struct.tty_struct* %1, %struct.tty_struct** %tty, align 8, !dbg !7860
  call void @llvm.dbg.declare(metadata i8** %dst, metadata !7864, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.declare(metadata i8** %baseAddr, metadata !7866, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !7868, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.declare(metadata i8** %ofs, metadata !7870, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7872, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7874, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.declare(metadata i32* %total, metadata !7876, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.declare(metadata i16* %tail, metadata !7878, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.declare(metadata i16* %rx_mask, metadata !7880, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.declare(metadata i16* %spage, metadata !7882, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.declare(metadata i16* %epage, metadata !7884, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.declare(metadata i16* %pageno, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.declare(metadata i16* %pageofs, metadata !7888, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.declare(metadata i16* %bufhead, metadata !7890, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.declare(metadata i16* %head, metadata !7892, metadata !DIExpression()), !dbg !7893
  %2 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !7894
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %2, i32 0, i32 2, !dbg !7895
  %3 = load i8*, i8** %tableAddr, align 8, !dbg !7895
  store i8* %3, i8** %ofsAddr, align 8, !dbg !7896
  %4 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !7897
  %board = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %4, i32 0, i32 1, !dbg !7898
  %5 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !7898
  %basemem = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %5, i32 0, i32 5, !dbg !7899
  %6 = load i8*, i8** %basemem, align 8, !dbg !7899
  store i8* %6, i8** %baseAddr, align 8, !dbg !7900
  %7 = load i8*, i8** %ofsAddr, align 8, !dbg !7901
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !7902
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !7903
  store i16 %call, i16* %head, align 2, !dbg !7904
  %8 = load i8*, i8** %ofsAddr, align 8, !dbg !7905
  %add.ptr3 = getelementptr i8, i8* %8, i64 2, !dbg !7906
  %call4 = call zeroext i16 @readw(i8* %add.ptr3) #12, !dbg !7907
  store i16 %call4, i16* %tail, align 2, !dbg !7908
  %9 = load i8*, i8** %ofsAddr, align 8, !dbg !7909
  %add.ptr5 = getelementptr i8, i8* %9, i64 18, !dbg !7910
  %call6 = call zeroext i16 @readw(i8* %add.ptr5) #12, !dbg !7911
  store i16 %call6, i16* %rx_mask, align 2, !dbg !7912
  %10 = load i8*, i8** %ofsAddr, align 8, !dbg !7913
  %add.ptr7 = getelementptr i8, i8* %10, i64 26, !dbg !7914
  %call8 = call zeroext i16 @readw(i8* %add.ptr7) #12, !dbg !7915
  store i16 %call8, i16* %spage, align 2, !dbg !7916
  %11 = load i8*, i8** %ofsAddr, align 8, !dbg !7917
  %add.ptr9 = getelementptr i8, i8* %11, i64 30, !dbg !7918
  %call10 = call zeroext i16 @readw(i8* %add.ptr9) #12, !dbg !7919
  store i16 %call10, i16* %epage, align 2, !dbg !7920
  %12 = load i16, i16* %tail, align 2, !dbg !7921
  %conv = zext i16 %12 to i32, !dbg !7921
  %13 = load i16, i16* %head, align 2, !dbg !7922
  %conv11 = zext i16 %13 to i32, !dbg !7922
  %cmp = icmp sge i32 %conv, %conv11, !dbg !7923
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7924

cond.true:                                        ; preds = %entry
  %14 = load i16, i16* %tail, align 2, !dbg !7925
  %conv13 = zext i16 %14 to i32, !dbg !7925
  %15 = load i16, i16* %head, align 2, !dbg !7926
  %conv14 = zext i16 %15 to i32, !dbg !7926
  %sub = sub i32 %conv13, %conv14, !dbg !7927
  br label %cond.end, !dbg !7924

cond.false:                                       ; preds = %entry
  %16 = load i16, i16* %tail, align 2, !dbg !7928
  %conv15 = zext i16 %16 to i32, !dbg !7928
  %17 = load i16, i16* %head, align 2, !dbg !7929
  %conv16 = zext i16 %17 to i32, !dbg !7929
  %sub17 = sub i32 %conv15, %conv16, !dbg !7930
  %18 = load i16, i16* %rx_mask, align 2, !dbg !7931
  %conv18 = zext i16 %18 to i32, !dbg !7931
  %add = add i32 %sub17, %conv18, !dbg !7932
  %add19 = add i32 %add, 1, !dbg !7933
  br label %cond.end, !dbg !7924

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %add19, %cond.false ], !dbg !7924
  store i32 %cond, i32* %count, align 4, !dbg !7934
  %19 = load i32, i32* %count, align 4, !dbg !7935
  %cmp20 = icmp eq i32 %19, 0, !dbg !7937
  br i1 %cmp20, label %if.then, label %if.end, !dbg !7938

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !7939
  br label %return, !dbg !7939

if.end:                                           ; preds = %cond.end
  %20 = load i32, i32* %count, align 4, !dbg !7940
  store i32 %20, i32* %total, align 4, !dbg !7941
  %21 = load i32, i32* %total, align 4, !dbg !7942
  %22 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7943
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %22, i32 0, i32 5, !dbg !7944
  %23 = load i32, i32* %index, align 8, !dbg !7944
  %idxprom = sext i32 %23 to i64, !dbg !7945
  %arrayidx = getelementptr [128 x i32], [128 x i32]* getelementptr inbounds (%struct.mon_str, %struct.mon_str* @moxaLog, i32 0, i32 1), i64 0, i64 %idxprom, !dbg !7945
  %24 = load i32, i32* %arrayidx, align 4, !dbg !7946
  %add22 = add i32 %24, %21, !dbg !7946
  store i32 %add22, i32* %arrayidx, align 4, !dbg !7946
  %25 = load i16, i16* %spage, align 2, !dbg !7947
  %conv23 = zext i16 %25 to i32, !dbg !7947
  %26 = load i16, i16* %epage, align 2, !dbg !7949
  %conv24 = zext i16 %26 to i32, !dbg !7949
  %cmp25 = icmp eq i32 %conv23, %conv24, !dbg !7950
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !7951

if.then27:                                        ; preds = %if.end
  %27 = load i8*, i8** %ofsAddr, align 8, !dbg !7952
  %add.ptr28 = getelementptr i8, i8* %27, i64 22, !dbg !7954
  %call29 = call zeroext i16 @readw(i8* %add.ptr28) #12, !dbg !7955
  store i16 %call29, i16* %bufhead, align 2, !dbg !7956
  %28 = load i16, i16* %spage, align 2, !dbg !7957
  %29 = load i8*, i8** %baseAddr, align 8, !dbg !7958
  %add.ptr30 = getelementptr i8, i8* %29, i64 8176, !dbg !7959
  call void @writew(i16 zeroext %28, i8* %add.ptr30) #12, !dbg !7960
  br label %while.cond, !dbg !7961

while.cond:                                       ; preds = %cond.end59, %if.then27
  %30 = load i32, i32* %count, align 4, !dbg !7962
  %cmp31 = icmp ugt i32 %30, 0, !dbg !7963
  br i1 %cmp31, label %while.body, label %while.end, !dbg !7961

while.body:                                       ; preds = %while.cond
  %31 = load i8*, i8** %baseAddr, align 8, !dbg !7964
  %add.ptr33 = getelementptr i8, i8* %31, i64 8192, !dbg !7966
  %32 = load i16, i16* %bufhead, align 2, !dbg !7967
  %conv34 = zext i16 %32 to i32, !dbg !7967
  %idx.ext = sext i32 %conv34 to i64, !dbg !7968
  %add.ptr35 = getelementptr i8, i8* %add.ptr33, i64 %idx.ext, !dbg !7968
  %33 = load i16, i16* %head, align 2, !dbg !7969
  %conv36 = zext i16 %33 to i32, !dbg !7969
  %idx.ext37 = sext i32 %conv36 to i64, !dbg !7970
  %add.ptr38 = getelementptr i8, i8* %add.ptr35, i64 %idx.ext37, !dbg !7970
  store i8* %add.ptr38, i8** %ofs, align 8, !dbg !7971
  %34 = load i16, i16* %tail, align 2, !dbg !7972
  %conv39 = zext i16 %34 to i32, !dbg !7972
  %35 = load i16, i16* %head, align 2, !dbg !7973
  %conv40 = zext i16 %35 to i32, !dbg !7973
  %cmp41 = icmp sge i32 %conv39, %conv40, !dbg !7974
  br i1 %cmp41, label %cond.true43, label %cond.false47, !dbg !7975

cond.true43:                                      ; preds = %while.body
  %36 = load i16, i16* %tail, align 2, !dbg !7976
  %conv44 = zext i16 %36 to i32, !dbg !7976
  %37 = load i16, i16* %head, align 2, !dbg !7977
  %conv45 = zext i16 %37 to i32, !dbg !7977
  %sub46 = sub i32 %conv44, %conv45, !dbg !7978
  br label %cond.end52, !dbg !7975

cond.false47:                                     ; preds = %while.body
  %38 = load i16, i16* %rx_mask, align 2, !dbg !7979
  %conv48 = zext i16 %38 to i32, !dbg !7979
  %add49 = add i32 %conv48, 1, !dbg !7980
  %39 = load i16, i16* %head, align 2, !dbg !7981
  %conv50 = zext i16 %39 to i32, !dbg !7981
  %sub51 = sub i32 %add49, %conv50, !dbg !7982
  br label %cond.end52, !dbg !7975

cond.end52:                                       ; preds = %cond.false47, %cond.true43
  %cond53 = phi i32 [ %sub46, %cond.true43 ], [ %sub51, %cond.false47 ], !dbg !7975
  store i32 %cond53, i32* %len, align 4, !dbg !7983
  %40 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !7984
  %port54 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %40, i32 0, i32 0, !dbg !7985
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x259, metadata !7986, metadata !DIExpression()), !dbg !7988
  %41 = load i32, i32* %len, align 4, !dbg !7988
  store i32 %41, i32* %__UNIQUE_ID___x259, align 4, !dbg !7988
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y260, metadata !7989, metadata !DIExpression()), !dbg !7988
  %42 = load i32, i32* %count, align 4, !dbg !7988
  store i32 %42, i32* %__UNIQUE_ID___y260, align 4, !dbg !7988
  %43 = load i32, i32* %__UNIQUE_ID___x259, align 4, !dbg !7988
  %44 = load i32, i32* %__UNIQUE_ID___y260, align 4, !dbg !7988
  %cmp55 = icmp ult i32 %43, %44, !dbg !7988
  br i1 %cmp55, label %cond.true57, label %cond.false58, !dbg !7988

cond.true57:                                      ; preds = %cond.end52
  %45 = load i32, i32* %__UNIQUE_ID___x259, align 4, !dbg !7988
  br label %cond.end59, !dbg !7988

cond.false58:                                     ; preds = %cond.end52
  %46 = load i32, i32* %__UNIQUE_ID___y260, align 4, !dbg !7988
  br label %cond.end59, !dbg !7988

cond.end59:                                       ; preds = %cond.false58, %cond.true57
  %cond60 = phi i32 [ %45, %cond.true57 ], [ %46, %cond.false58 ], !dbg !7988
  store i32 %cond60, i32* %tmp, align 4, !dbg !7988
  %47 = load i32, i32* %tmp, align 4, !dbg !7988
  %conv61 = zext i32 %47 to i64, !dbg !7990
  %call62 = call i32 @tty_prepare_flip_string(%struct.tty_port* %port54, i8** %dst, i64 %conv61) #12, !dbg !7991
  store i32 %call62, i32* %len, align 4, !dbg !7992
  %48 = load i8*, i8** %dst, align 8, !dbg !7993
  %49 = load i8*, i8** %ofs, align 8, !dbg !7994
  %50 = load i32, i32* %len, align 4, !dbg !7995
  %conv63 = zext i32 %50 to i64, !dbg !7995
  call void @memcpy_fromio(i8* %48, i8* %49, i64 %conv63) #12, !dbg !7996
  %51 = load i16, i16* %head, align 2, !dbg !7997
  %conv64 = zext i16 %51 to i32, !dbg !7997
  %52 = load i32, i32* %len, align 4, !dbg !7998
  %add65 = add i32 %conv64, %52, !dbg !7999
  %53 = load i16, i16* %rx_mask, align 2, !dbg !8000
  %conv66 = zext i16 %53 to i32, !dbg !8000
  %and = and i32 %add65, %conv66, !dbg !8001
  %conv67 = trunc i32 %and to i16, !dbg !8002
  store i16 %conv67, i16* %head, align 2, !dbg !8003
  %54 = load i32, i32* %len, align 4, !dbg !8004
  %55 = load i32, i32* %count, align 4, !dbg !8005
  %sub68 = sub i32 %55, %54, !dbg !8005
  store i32 %sub68, i32* %count, align 4, !dbg !8005
  br label %while.cond, !dbg !7961, !llvm.loop !8006

while.end:                                        ; preds = %while.cond
  br label %if.end118, !dbg !8008

if.else:                                          ; preds = %if.end
  %56 = load i16, i16* %spage, align 2, !dbg !8009
  %conv69 = zext i16 %56 to i32, !dbg !8009
  %57 = load i16, i16* %head, align 2, !dbg !8011
  %conv70 = zext i16 %57 to i32, !dbg !8011
  %shr = ashr i32 %conv70, 13, !dbg !8012
  %add71 = add i32 %conv69, %shr, !dbg !8013
  %conv72 = trunc i32 %add71 to i16, !dbg !8009
  store i16 %conv72, i16* %pageno, align 2, !dbg !8014
  %58 = load i16, i16* %head, align 2, !dbg !8015
  %conv73 = zext i16 %58 to i32, !dbg !8015
  %and74 = and i32 %conv73, 8191, !dbg !8016
  %conv75 = trunc i32 %and74 to i16, !dbg !8015
  store i16 %conv75, i16* %pageofs, align 2, !dbg !8017
  br label %while.cond76, !dbg !8018

while.cond76:                                     ; preds = %if.end111, %if.else
  %59 = load i32, i32* %count, align 4, !dbg !8019
  %cmp77 = icmp ugt i32 %59, 0, !dbg !8020
  br i1 %cmp77, label %while.body79, label %while.end112, !dbg !8018

while.body79:                                     ; preds = %while.cond76
  %60 = load i16, i16* %pageno, align 2, !dbg !8021
  %61 = load i8*, i8** %baseAddr, align 8, !dbg !8023
  %add.ptr80 = getelementptr i8, i8* %61, i64 8176, !dbg !8024
  call void @writew(i16 zeroext %60, i8* %add.ptr80) #12, !dbg !8025
  %62 = load i8*, i8** %baseAddr, align 8, !dbg !8026
  %add.ptr81 = getelementptr i8, i8* %62, i64 8192, !dbg !8027
  %63 = load i16, i16* %pageofs, align 2, !dbg !8028
  %conv82 = zext i16 %63 to i32, !dbg !8028
  %idx.ext83 = sext i32 %conv82 to i64, !dbg !8029
  %add.ptr84 = getelementptr i8, i8* %add.ptr81, i64 %idx.ext83, !dbg !8029
  store i8* %add.ptr84, i8** %ofs, align 8, !dbg !8030
  %64 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !8031
  %port85 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %64, i32 0, i32 0, !dbg !8032
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x261, metadata !8033, metadata !DIExpression()), !dbg !8035
  %65 = load i16, i16* %pageofs, align 2, !dbg !8035
  %conv86 = zext i16 %65 to i32, !dbg !8035
  %sub87 = sub i32 8192, %conv86, !dbg !8035
  store i32 %sub87, i32* %__UNIQUE_ID___x261, align 4, !dbg !8035
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y262, metadata !8036, metadata !DIExpression()), !dbg !8035
  %66 = load i32, i32* %count, align 4, !dbg !8035
  store i32 %66, i32* %__UNIQUE_ID___y262, align 4, !dbg !8035
  %67 = load i32, i32* %__UNIQUE_ID___x261, align 4, !dbg !8035
  %68 = load i32, i32* %__UNIQUE_ID___y262, align 4, !dbg !8035
  %cmp89 = icmp ult i32 %67, %68, !dbg !8035
  br i1 %cmp89, label %cond.true91, label %cond.false92, !dbg !8035

cond.true91:                                      ; preds = %while.body79
  %69 = load i32, i32* %__UNIQUE_ID___x261, align 4, !dbg !8035
  br label %cond.end93, !dbg !8035

cond.false92:                                     ; preds = %while.body79
  %70 = load i32, i32* %__UNIQUE_ID___y262, align 4, !dbg !8035
  br label %cond.end93, !dbg !8035

cond.end93:                                       ; preds = %cond.false92, %cond.true91
  %cond94 = phi i32 [ %69, %cond.true91 ], [ %70, %cond.false92 ], !dbg !8035
  store i32 %cond94, i32* %tmp88, align 4, !dbg !8035
  %71 = load i32, i32* %tmp88, align 4, !dbg !8035
  %conv95 = zext i32 %71 to i64, !dbg !8037
  %call96 = call i32 @tty_prepare_flip_string(%struct.tty_port* %port85, i8** %dst, i64 %conv95) #12, !dbg !8038
  store i32 %call96, i32* %len, align 4, !dbg !8039
  %72 = load i8*, i8** %dst, align 8, !dbg !8040
  %73 = load i8*, i8** %ofs, align 8, !dbg !8041
  %74 = load i32, i32* %len, align 4, !dbg !8042
  %conv97 = zext i32 %74 to i64, !dbg !8042
  call void @memcpy_fromio(i8* %72, i8* %73, i64 %conv97) #12, !dbg !8043
  %75 = load i32, i32* %len, align 4, !dbg !8044
  %76 = load i32, i32* %count, align 4, !dbg !8045
  %sub98 = sub i32 %76, %75, !dbg !8045
  store i32 %sub98, i32* %count, align 4, !dbg !8045
  %77 = load i16, i16* %pageofs, align 2, !dbg !8046
  %conv99 = zext i16 %77 to i32, !dbg !8046
  %78 = load i32, i32* %len, align 4, !dbg !8047
  %add100 = add i32 %conv99, %78, !dbg !8048
  %and101 = and i32 %add100, 8191, !dbg !8049
  %conv102 = trunc i32 %and101 to i16, !dbg !8050
  store i16 %conv102, i16* %pageofs, align 2, !dbg !8051
  %79 = load i16, i16* %pageofs, align 2, !dbg !8052
  %conv103 = zext i16 %79 to i32, !dbg !8052
  %cmp104 = icmp eq i32 %conv103, 0, !dbg !8054
  br i1 %cmp104, label %land.lhs.true, label %if.end111, !dbg !8055

land.lhs.true:                                    ; preds = %cond.end93
  %80 = load i16, i16* %pageno, align 2, !dbg !8056
  %inc = add i16 %80, 1, !dbg !8056
  store i16 %inc, i16* %pageno, align 2, !dbg !8056
  %conv106 = zext i16 %inc to i32, !dbg !8056
  %81 = load i16, i16* %epage, align 2, !dbg !8057
  %conv107 = zext i16 %81 to i32, !dbg !8057
  %cmp108 = icmp eq i32 %conv106, %conv107, !dbg !8058
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !8059

if.then110:                                       ; preds = %land.lhs.true
  %82 = load i16, i16* %spage, align 2, !dbg !8060
  store i16 %82, i16* %pageno, align 2, !dbg !8061
  br label %if.end111, !dbg !8062

if.end111:                                        ; preds = %if.then110, %land.lhs.true, %cond.end93
  br label %while.cond76, !dbg !8018, !llvm.loop !8063

while.end112:                                     ; preds = %while.cond76
  %83 = load i16, i16* %head, align 2, !dbg !8065
  %conv113 = zext i16 %83 to i32, !dbg !8065
  %84 = load i32, i32* %total, align 4, !dbg !8066
  %add114 = add i32 %conv113, %84, !dbg !8067
  %85 = load i16, i16* %rx_mask, align 2, !dbg !8068
  %conv115 = zext i16 %85 to i32, !dbg !8068
  %and116 = and i32 %add114, %conv115, !dbg !8069
  %conv117 = trunc i32 %and116 to i16, !dbg !8070
  store i16 %conv117, i16* %head, align 2, !dbg !8071
  br label %if.end118

if.end118:                                        ; preds = %while.end112, %while.end
  %86 = load i16, i16* %head, align 2, !dbg !8072
  %87 = load i8*, i8** %ofsAddr, align 8, !dbg !8073
  %add.ptr119 = getelementptr i8, i8* %87, i64 0, !dbg !8074
  call void @writew(i16 zeroext %86, i8* %add.ptr119) #12, !dbg !8075
  %88 = load i8*, i8** %ofsAddr, align 8, !dbg !8076
  %add.ptr120 = getelementptr i8, i8* %88, i64 10, !dbg !8078
  %call121 = call zeroext i8 @readb(i8* %add.ptr120) #12, !dbg !8079
  %conv122 = zext i8 %call121 to i32, !dbg !8079
  %and123 = and i32 %conv122, 2, !dbg !8080
  %tobool = icmp ne i32 %and123, 0, !dbg !8080
  br i1 %tobool, label %if.then124, label %if.end125, !dbg !8081

if.then124:                                       ; preds = %if.end118
  store i32 1, i32* @moxaLowWaterChk, align 4, !dbg !8082
  %89 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !8084
  %lowChkFlag = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %89, i32 0, i32 8, !dbg !8085
  store i8 1, i8* %lowChkFlag, align 2, !dbg !8086
  br label %if.end125, !dbg !8087

if.end125:                                        ; preds = %if.then124, %if.end118
  %90 = load i32, i32* %total, align 4, !dbg !8088
  store i32 %90, i32* %retval, align 4, !dbg !8089
  br label %return, !dbg !8089

return:                                           ; preds = %if.end125, %if.then
  %91 = load i32, i32* %retval, align 4, !dbg !8090
  ret i32 %91, !dbg !8090
}

; Function Attrs: noredzone
declare dso_local void @tty_schedule_flip(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext %ch, i8 signext %flag) #3 !dbg !8091 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %ch.addr = alloca i8, align 1
  %flag.addr = alloca i8, align 1
  %tb = alloca %struct.tty_buffer*, align 8
  %change = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !8095, metadata !DIExpression()), !dbg !8096
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !8097, metadata !DIExpression()), !dbg !8098
  store i8 %flag, i8* %flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flag.addr, metadata !8099, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %tb, metadata !8101, metadata !DIExpression()), !dbg !8102
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !8103
  %buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 0, !dbg !8104
  %tail = getelementptr inbounds %struct.tty_bufhead, %struct.tty_bufhead* %buf, i32 0, i32 8, !dbg !8105
  %1 = load %struct.tty_buffer*, %struct.tty_buffer** %tail, align 8, !dbg !8105
  store %struct.tty_buffer* %1, %struct.tty_buffer** %tb, align 8, !dbg !8102
  call void @llvm.dbg.declare(metadata i32* %change, metadata !8106, metadata !DIExpression()), !dbg !8107
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8108
  %flags = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 5, !dbg !8109
  %3 = load i32, i32* %flags, align 8, !dbg !8109
  %and = and i32 %3, 1, !dbg !8110
  %tobool = icmp ne i32 %and, 0, !dbg !8110
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8111

land.rhs:                                         ; preds = %entry
  %4 = load i8, i8* %flag.addr, align 1, !dbg !8112
  %conv = sext i8 %4 to i32, !dbg !8112
  %cmp = icmp ne i32 %conv, 0, !dbg !8113
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !8114
  %land.ext = zext i1 %5 to i32, !dbg !8111
  store i32 %land.ext, i32* %change, align 4, !dbg !8115
  %6 = load i32, i32* %change, align 4, !dbg !8116
  %tobool2 = icmp ne i32 %6, 0, !dbg !8116
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !8118

land.lhs.true:                                    ; preds = %land.end
  %7 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8119
  %used = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %7, i32 0, i32 1, !dbg !8120
  %8 = load i32, i32* %used, align 8, !dbg !8120
  %9 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8121
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %9, i32 0, i32 2, !dbg !8122
  %10 = load i32, i32* %size, align 4, !dbg !8122
  %cmp3 = icmp slt i32 %8, %10, !dbg !8123
  br i1 %cmp3, label %if.then, label %if.end12, !dbg !8124

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8125
  %flags5 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %11, i32 0, i32 5, !dbg !8128
  %12 = load i32, i32* %flags5, align 8, !dbg !8128
  %neg = xor i32 %12, -1, !dbg !8129
  %and6 = and i32 %neg, 1, !dbg !8130
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8130
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !8131

if.then8:                                         ; preds = %if.then
  %13 = load i8, i8* %flag.addr, align 1, !dbg !8132
  %14 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8133
  %15 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8134
  %used9 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %15, i32 0, i32 1, !dbg !8135
  %16 = load i32, i32* %used9, align 8, !dbg !8135
  %call = call i8* @flag_buf_ptr(%struct.tty_buffer* %14, i32 %16) #12, !dbg !8136
  store i8 %13, i8* %call, align 1, !dbg !8137
  br label %if.end, !dbg !8138

if.end:                                           ; preds = %if.then8, %if.then
  %17 = load i8, i8* %ch.addr, align 1, !dbg !8139
  %18 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8140
  %19 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8141
  %used10 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %19, i32 0, i32 1, !dbg !8142
  %20 = load i32, i32* %used10, align 8, !dbg !8143
  %inc = add i32 %20, 1, !dbg !8143
  store i32 %inc, i32* %used10, align 8, !dbg !8143
  %call11 = call i8* @char_buf_ptr(%struct.tty_buffer* %18, i32 %20) #12, !dbg !8144
  store i8 %17, i8* %call11, align 1, !dbg !8145
  store i32 1, i32* %retval, align 4, !dbg !8146
  br label %return, !dbg !8146

if.end12:                                         ; preds = %land.lhs.true, %land.end
  %21 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !8147
  %22 = load i8, i8* %ch.addr, align 1, !dbg !8148
  %23 = load i8, i8* %flag.addr, align 1, !dbg !8149
  %call13 = call i32 @__tty_insert_flip_char(%struct.tty_port* %21, i8 zeroext %22, i8 signext %23) #12, !dbg !8150
  store i32 %call13, i32* %retval, align 4, !dbg !8151
  br label %return, !dbg !8151

return:                                           ; preds = %if.end12, %if.end
  %24 = load i32, i32* %retval, align 4, !dbg !8152
  ret i32 %24, !dbg !8152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_new_dcdstate(%struct.moxa_port* %p, i8 zeroext %dcd) #3 !dbg !8153 {
entry:
  %lock.addr.i36 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i36, metadata !6182, metadata !DIExpression()), !dbg !8156
  %flags.addr.i37 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i37, metadata !6188, metadata !DIExpression()), !dbg !8160
  %tmp.i38 = alloca i32, align 4
  %tmp8.i39 = alloca i32, align 4
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !6182, metadata !DIExpression()), !dbg !8161
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6188, metadata !DIExpression()), !dbg !8163
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6190, metadata !DIExpression()), !dbg !8164
  %p.addr = alloca %struct.moxa_port*, align 8
  %dcd.addr = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.moxa_port* %p, %struct.moxa_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %p.addr, metadata !8171, metadata !DIExpression()), !dbg !8172
  store i8 %dcd, i8* %dcd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dcd.addr, metadata !8173, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8175, metadata !DIExpression()), !dbg !8176
  %0 = load i8, i8* %dcd.addr, align 1, !dbg !8177
  %tobool = icmp ne i8 %0, 0, !dbg !8178
  %lnot = xor i1 %tobool, true, !dbg !8178
  %lnot1 = xor i1 %lnot, true, !dbg !8179
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8179
  %conv = trunc i32 %lnot.ext to i8, !dbg !8179
  store i8 %conv, i8* %dcd.addr, align 1, !dbg !8180
  br label %do.body, !dbg !8181

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !8182

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8183, metadata !DIExpression()), !dbg !8185
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8186, metadata !DIExpression()), !dbg !8185
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8185
  %conv3 = zext i1 %cmp to i32, !dbg !8185
  store i32 1, i32* %tmp, align 4, !dbg !8185
  %1 = load i32, i32* %tmp, align 4, !dbg !8185
  br label %do.body4, !dbg !8187

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !8188

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !8189

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !8191, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !8195, metadata !DIExpression()), !dbg !8194
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !8194
  %conv10 = zext i1 %cmp9 to i32, !dbg !8194
  store i32 1, i32* %tmp11, align 4, !dbg !8194
  %2 = load i32, i32* %tmp11, align 4, !dbg !8194
  %call = call i64 @arch_local_irq_save() #12, !dbg !8196
  store i64 %call, i64* %flags, align 8, !dbg !8196
  br label %do.end, !dbg !8196

do.end:                                           ; preds = %do.body6
  br label %do.end12, !dbg !8189

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !8188

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8197, !srcloc !8198
  br label %do.body14, !dbg !8197

do.body14:                                        ; preds = %do.body13
  %3 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !8199
  %port = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %3, i32 0, i32 0, !dbg !8199
  %lock = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 5, !dbg !8199
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8200
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !8201
  %rlock.i = bitcast %union.anon.2* %5 to %struct.raw_spinlock*, !dbg !8201
  br label %do.end16, !dbg !8199

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !8197

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8188

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8187

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8182

do.end20:                                         ; preds = %do.end19
  %6 = load i8, i8* %dcd.addr, align 1, !dbg !8202
  %conv21 = zext i8 %6 to i32, !dbg !8202
  %7 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !8203
  %DCDState = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %7, i32 0, i32 6, !dbg !8204
  %8 = load i8, i8* %DCDState, align 8, !dbg !8204
  %conv22 = zext i8 %8 to i32, !dbg !8203
  %cmp23 = icmp ne i32 %conv21, %conv22, !dbg !8205
  br i1 %cmp23, label %if.then, label %if.else, !dbg !8206

if.then:                                          ; preds = %do.end20
  %9 = load i8, i8* %dcd.addr, align 1, !dbg !8207
  %10 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !8208
  %DCDState25 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %10, i32 0, i32 6, !dbg !8209
  store i8 %9, i8* %DCDState25, align 8, !dbg !8210
  %11 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !8211
  %port26 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %11, i32 0, i32 0, !dbg !8212
  %lock27 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port26, i32 0, i32 5, !dbg !8213
  %12 = load i64, i64* %flags, align 8, !dbg !8214
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i36, align 8
  store i64 %12, i64* %flags.addr.i37, align 8
  call void @llvm.dbg.declare(metadata !199, metadata !6242, metadata !DIExpression()) #10, !dbg !8215
  call void @llvm.dbg.declare(metadata !199, metadata !6246, metadata !DIExpression()) #10, !dbg !8215
  store i32 1, i32* %tmp.i38, align 4, !dbg !8215
  %13 = load i32, i32* %tmp.i38, align 4, !dbg !8215
  call void @llvm.dbg.declare(metadata !199, metadata !6247, metadata !DIExpression()) #10, !dbg !8216
  call void @llvm.dbg.declare(metadata !199, metadata !6253, metadata !DIExpression()) #10, !dbg !8216
  store i32 1, i32* %tmp8.i39, align 4, !dbg !8216
  %14 = load i32, i32* %tmp8.i39, align 4, !dbg !8216
  %15 = load i64, i64* %flags.addr.i37, align 8, !dbg !8217
  call void @arch_local_irq_restore(i64 %15) #15, !dbg !8217
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8218, !srcloc !6257
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i36, align 8, !dbg !8219
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !8219
  %rlock.i40 = bitcast %union.anon.2* %17 to %struct.raw_spinlock*, !dbg !8219
  %18 = load i8, i8* %dcd.addr, align 1, !dbg !8220
  %tobool28 = icmp ne i8 %18, 0, !dbg !8220
  br i1 %tobool28, label %if.end, label %if.then29, !dbg !8222

if.then29:                                        ; preds = %if.then
  %19 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !8223
  %port30 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %19, i32 0, i32 0, !dbg !8224
  call void @tty_port_tty_hangup(%struct.tty_port* %port30, i1 zeroext true) #12, !dbg !8225
  br label %if.end, !dbg !8225

if.end:                                           ; preds = %if.then29, %if.then
  br label %if.end33, !dbg !8226

if.else:                                          ; preds = %do.end20
  %20 = load %struct.moxa_port*, %struct.moxa_port** %p.addr, align 8, !dbg !8227
  %port31 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %20, i32 0, i32 0, !dbg !8228
  %lock32 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port31, i32 0, i32 5, !dbg !8229
  %21 = load i64, i64* %flags, align 8, !dbg !8230
  store %struct.spinlock* %lock32, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !199, metadata !6242, metadata !DIExpression()) #10, !dbg !8231
  call void @llvm.dbg.declare(metadata !199, metadata !6246, metadata !DIExpression()) #10, !dbg !8231
  store i32 1, i32* %tmp.i, align 4, !dbg !8231
  %22 = load i32, i32* %tmp.i, align 4, !dbg !8231
  call void @llvm.dbg.declare(metadata !199, metadata !6247, metadata !DIExpression()) #10, !dbg !8232
  call void @llvm.dbg.declare(metadata !199, metadata !6253, metadata !DIExpression()) #10, !dbg !8232
  store i32 1, i32* %tmp8.i, align 4, !dbg !8232
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !8232
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !8233
  call void @arch_local_irq_restore(i64 %24) #15, !dbg !8233
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8234, !srcloc !6257
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !8235
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !8235
  %rlock.i35 = bitcast %union.anon.2* %26 to %struct.raw_spinlock*, !dbg !8235
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.end
  ret void, !dbg !8236
}

; Function Attrs: noredzone
declare dso_local void @tty_kref_put(%struct.tty_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #3 !dbg !8237 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8240, metadata !DIExpression()), !dbg !8241
  ret i1 true, !dbg !8242
}

; Function Attrs: noredzone
declare dso_local i32 @tty_prepare_flip_string(%struct.tty_port*, i8**, i64) #2

; Function Attrs: noredzone
declare dso_local void @memcpy_fromio(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @flag_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #3 !dbg !8243 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !8248, metadata !DIExpression()), !dbg !8249
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !8250
  %1 = load i32, i32* %ofs.addr, align 4, !dbg !8251
  %call = call i8* @char_buf_ptr(%struct.tty_buffer* %0, i32 %1) #12, !dbg !8252
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !8253
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 2, !dbg !8254
  %3 = load i32, i32* %size, align 4, !dbg !8254
  %idx.ext = sext i32 %3 to i64, !dbg !8255
  %add.ptr = getelementptr i8, i8* %call, i64 %idx.ext, !dbg !8255
  ret i8* %add.ptr, !dbg !8256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @char_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #3 !dbg !8257 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !8260, metadata !DIExpression()), !dbg !8261
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !8262, metadata !DIExpression()), !dbg !8263
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !8264
  %data = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %0, i32 0, i32 6, !dbg !8265
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %data, i64 0, i64 0, !dbg !8264
  %1 = bitcast i64* %arraydecay to i8*, !dbg !8266
  %2 = load i32, i32* %ofs.addr, align 4, !dbg !8267
  %idx.ext = sext i32 %2 to i64, !dbg !8268
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !8268
  ret i8* %add.ptr, !dbg !8269
}

; Function Attrs: noredzone
declare dso_local i32 @__tty_insert_flip_char(%struct.tty_port*, i8 zeroext, i8 signext) #2

; Function Attrs: noredzone
declare dso_local %struct.tty_driver* @__tty_alloc_driver(i32, %struct.module*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #3 !dbg !8270 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8274, metadata !DIExpression()), !dbg !8275
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !8276
  %1 = ptrtoint i8* %0 to i64, !dbg !8276
  %2 = inttoptr i64 %1 to i8*, !dbg !8276
  %3 = ptrtoint i8* %2 to i64, !dbg !8276
  %cmp = icmp uge i64 %3, -4095, !dbg !8276
  %lnot = xor i1 %cmp, true, !dbg !8276
  %lnot1 = xor i1 %lnot, true, !dbg !8276
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8276
  %conv = sext i32 %lnot.ext to i64, !dbg !8276
  %tobool = icmp ne i64 %conv, 0, !dbg !8276
  ret i1 %tobool, !dbg !8277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #3 !dbg !8278 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !8283
  %1 = ptrtoint i8* %0 to i64, !dbg !8284
  ret i64 %1, !dbg !8285
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #11

; Function Attrs: noredzone
declare dso_local void @tty_set_operations(%struct.tty_driver*, %struct.tty_operations*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_link_device(%struct.tty_port*, %struct.tty_driver*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @tty_register_driver(%struct.tty_driver*) #2

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_open(%struct.tty_struct* %tty, %struct.file* %filp) #3 !dbg !8286 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %brd = alloca %struct.moxa_board_conf*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  %port = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !8289, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.declare(metadata %struct.moxa_board_conf** %brd, metadata !8291, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !8293, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.declare(metadata i32* %port, metadata !8295, metadata !DIExpression()), !dbg !8296
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8297
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 5, !dbg !8298
  %1 = load i32, i32* %index, align 8, !dbg !8298
  store i32 %1, i32* %port, align 4, !dbg !8299
  %2 = load i32, i32* %port, align 4, !dbg !8300
  %cmp = icmp eq i32 %2, 128, !dbg !8302
  br i1 %cmp, label %if.then, label %if.end, !dbg !8303

if.then:                                          ; preds = %entry
  %call = call zeroext i1 @capable(i32 21) #12, !dbg !8304
  %3 = zext i1 %call to i64, !dbg !8304
  %cond = select i1 %call, i32 0, i32 -1, !dbg !8304
  store i32 %cond, i32* %retval, align 4, !dbg !8306
  br label %return, !dbg !8306

if.end:                                           ; preds = %entry
  %call1 = call i32 @mutex_lock_interruptible(%struct.mutex* @moxa_openlock) #12, !dbg !8307
  %tobool = icmp ne i32 %call1, 0, !dbg !8307
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !8309

if.then2:                                         ; preds = %if.end
  store i32 -512, i32* %retval, align 4, !dbg !8310
  br label %return, !dbg !8310

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %port, align 4, !dbg !8311
  %div = sdiv i32 %4, 32, !dbg !8312
  %idxprom = sext i32 %div to i64, !dbg !8313
  %arrayidx = getelementptr [4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 %idxprom, !dbg !8313
  store %struct.moxa_board_conf* %arrayidx, %struct.moxa_board_conf** %brd, align 8, !dbg !8314
  %5 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !8315
  %ready = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %5, i32 0, i32 3, !dbg !8317
  %6 = load i32, i32* %ready, align 4, !dbg !8317
  %tobool4 = icmp ne i32 %6, 0, !dbg !8315
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !8318

if.then5:                                         ; preds = %if.end3
  call void @mutex_unlock(%struct.mutex* @moxa_openlock) #12, !dbg !8319
  store i32 -19, i32* %retval, align 4, !dbg !8321
  br label %return, !dbg !8321

if.end6:                                          ; preds = %if.end3
  %7 = load i32, i32* %port, align 4, !dbg !8322
  %rem = srem i32 %7, 32, !dbg !8324
  %8 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !8325
  %numPorts = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %8, i32 0, i32 1, !dbg !8326
  %9 = load i32, i32* %numPorts, align 4, !dbg !8326
  %cmp7 = icmp sge i32 %rem, %9, !dbg !8327
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !8328

if.then8:                                         ; preds = %if.end6
  call void @mutex_unlock(%struct.mutex* @moxa_openlock) #12, !dbg !8329
  store i32 -19, i32* %retval, align 4, !dbg !8331
  br label %return, !dbg !8331

if.end9:                                          ; preds = %if.end6
  %10 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %brd, align 8, !dbg !8332
  %ports = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %10, i32 0, i32 4, !dbg !8333
  %11 = load %struct.moxa_port*, %struct.moxa_port** %ports, align 8, !dbg !8333
  %12 = load i32, i32* %port, align 4, !dbg !8334
  %rem10 = srem i32 %12, 32, !dbg !8335
  %idxprom11 = sext i32 %rem10 to i64, !dbg !8332
  %arrayidx12 = getelementptr %struct.moxa_port, %struct.moxa_port* %11, i64 %idxprom11, !dbg !8332
  store %struct.moxa_port* %arrayidx12, %struct.moxa_port** %ch, align 8, !dbg !8336
  %13 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8337
  %port13 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %13, i32 0, i32 0, !dbg !8338
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port13, i32 0, i32 7, !dbg !8339
  %14 = load i32, i32* %count, align 4, !dbg !8340
  %inc = add i32 %14, 1, !dbg !8340
  store i32 %inc, i32* %count, align 4, !dbg !8340
  %15 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8341
  %16 = bitcast %struct.moxa_port* %15 to i8*, !dbg !8341
  %17 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8342
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %17, i32 0, i32 37, !dbg !8343
  store i8* %16, i8** %driver_data, align 8, !dbg !8344
  %18 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8345
  %port14 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %18, i32 0, i32 0, !dbg !8346
  %19 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8347
  call void @tty_port_tty_set(%struct.tty_port* %port14, %struct.tty_struct* %19) #12, !dbg !8348
  %20 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8349
  %port15 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %20, i32 0, i32 0, !dbg !8350
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port15, i32 0, i32 13, !dbg !8351
  call void @mutex_lock(%struct.mutex* %mutex) #12, !dbg !8352
  %21 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8353
  %port16 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %21, i32 0, i32 0, !dbg !8355
  %call17 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port16) #12, !dbg !8356
  br i1 %call17, label %if.end21, label %if.then18, !dbg !8357

if.then18:                                        ; preds = %if.end9
  %22 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8358
  %statusflags = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %22, i32 0, i32 5, !dbg !8360
  store i64 0, i64* %statusflags, align 8, !dbg !8361
  %23 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8362
  %24 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8363
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %24, i32 0, i32 15, !dbg !8364
  call void @moxa_set_tty_param(%struct.tty_struct* %23, %struct.ktermios* %termios) #12, !dbg !8365
  %25 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8366
  call void @MoxaPortLineCtrl(%struct.moxa_port* %25, i32 1, i32 1) #12, !dbg !8367
  %26 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8368
  call void @MoxaPortEnable(%struct.moxa_port* %26) #12, !dbg !8369
  %27 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8370
  %28 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8371
  %type = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %28, i32 0, i32 3, !dbg !8372
  %29 = load i32, i32* %type, align 8, !dbg !8372
  %cmp19 = icmp eq i32 %29, 4, !dbg !8373
  %conv = zext i1 %cmp19 to i32, !dbg !8373
  call void @MoxaSetFifo(%struct.moxa_port* %27, i32 %conv) #12, !dbg !8374
  %30 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8375
  %port20 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %30, i32 0, i32 0, !dbg !8376
  call void @tty_port_set_initialized(%struct.tty_port* %port20, i1 zeroext true) #12, !dbg !8377
  br label %if.end21, !dbg !8378

if.end21:                                         ; preds = %if.then18, %if.end9
  %31 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8379
  %port22 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %31, i32 0, i32 0, !dbg !8380
  %mutex23 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port22, i32 0, i32 13, !dbg !8381
  call void @mutex_unlock(%struct.mutex* %mutex23) #12, !dbg !8382
  call void @mutex_unlock(%struct.mutex* @moxa_openlock) #12, !dbg !8383
  %32 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8384
  %port24 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %32, i32 0, i32 0, !dbg !8385
  %33 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8386
  %34 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !8387
  %call25 = call i32 @tty_port_block_til_ready(%struct.tty_port* %port24, %struct.tty_struct* %33, %struct.file* %34) #12, !dbg !8388
  store i32 %call25, i32* %retval, align 4, !dbg !8389
  br label %return, !dbg !8389

return:                                           ; preds = %if.end21, %if.then8, %if.then5, %if.then2, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !8390
  ret i32 %35, !dbg !8390
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_close(%struct.tty_struct* %tty, %struct.file* %filp) #3 !dbg !8391 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8392, metadata !DIExpression()), !dbg !8393
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !8394, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !8396, metadata !DIExpression()), !dbg !8397
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8398
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8399
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8399
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !8398
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !8397
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8400
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %3, i32 0, i32 15, !dbg !8401
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !8402
  %4 = load i32, i32* %c_cflag, align 8, !dbg !8402
  %5 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8403
  %cflag = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %5, i32 0, i32 4, !dbg !8404
  store i32 %4, i32* %cflag, align 4, !dbg !8405
  %6 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8406
  %port = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %6, i32 0, i32 0, !dbg !8407
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8408
  %8 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !8409
  call void @tty_port_close(%struct.tty_port* %port, %struct.tty_struct* %7, %struct.file* %8) #12, !dbg !8410
  ret void, !dbg !8411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_write(%struct.tty_struct* %tty, i8* %buf, i32 %count) #3 !dbg !8412 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !6182, metadata !DIExpression()), !dbg !8413
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6188, metadata !DIExpression()), !dbg !8415
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6190, metadata !DIExpression()), !dbg !8416
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %ch = alloca %struct.moxa_port*, align 8
  %flags = alloca i64, align 8
  %len = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8423, metadata !DIExpression()), !dbg !8424
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8425, metadata !DIExpression()), !dbg !8426
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !8427, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !8429, metadata !DIExpression()), !dbg !8430
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8431
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8432
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8432
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !8431
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !8430
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8433, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8435, metadata !DIExpression()), !dbg !8436
  %3 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8437
  %cmp = icmp eq %struct.moxa_port* %3, null, !dbg !8439
  br i1 %cmp, label %if.then, label %if.end, !dbg !8440

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8441
  br label %return, !dbg !8441

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !8442

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !8443

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8444, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8447, metadata !DIExpression()), !dbg !8446
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !8446
  %conv = zext i1 %cmp2 to i32, !dbg !8446
  store i32 1, i32* %tmp, align 4, !dbg !8446
  %4 = load i32, i32* %tmp, align 4, !dbg !8446
  br label %do.body3, !dbg !8448

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !8449

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !8450

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !8452, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !8456, metadata !DIExpression()), !dbg !8455
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !8455
  %conv9 = zext i1 %cmp8 to i32, !dbg !8455
  store i32 1, i32* %tmp10, align 4, !dbg !8455
  %5 = load i32, i32* %tmp10, align 4, !dbg !8455
  %call = call i64 @arch_local_irq_save() #12, !dbg !8457
  store i64 %call, i64* %flags, align 8, !dbg !8457
  br label %do.end, !dbg !8457

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !8450

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !8449

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8458, !srcloc !8459
  br label %do.body13, !dbg !8458

do.body13:                                        ; preds = %do.body12
  store %struct.spinlock* @moxa_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8460
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !8461
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !8461
  br label %do.end15, !dbg !8462

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !8458

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8449

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8448

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8443

do.end19:                                         ; preds = %do.end18
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8463
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !8464
  %10 = load i32, i32* %count.addr, align 4, !dbg !8465
  %call20 = call i32 @MoxaPortWriteData(%struct.tty_struct* %8, i8* %9, i32 %10) #12, !dbg !8466
  store i32 %call20, i32* %len, align 4, !dbg !8467
  %11 = load i64, i64* %flags, align 8, !dbg !8468
  store %struct.spinlock* @moxa_lock, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !199, metadata !6242, metadata !DIExpression()) #10, !dbg !8469
  call void @llvm.dbg.declare(metadata !199, metadata !6246, metadata !DIExpression()) #10, !dbg !8469
  store i32 1, i32* %tmp.i, align 4, !dbg !8469
  %12 = load i32, i32* %tmp.i, align 4, !dbg !8469
  call void @llvm.dbg.declare(metadata !199, metadata !6247, metadata !DIExpression()) #10, !dbg !8470
  call void @llvm.dbg.declare(metadata !199, metadata !6253, metadata !DIExpression()) #10, !dbg !8470
  store i32 1, i32* %tmp8.i, align 4, !dbg !8470
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !8470
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !8471
  call void @arch_local_irq_restore(i64 %14) #15, !dbg !8471
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8472, !srcloc !6257
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !8473
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !8473
  %rlock.i22 = bitcast %union.anon.2* %16 to %struct.raw_spinlock*, !dbg !8473
  %17 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8474
  %statusflags = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %17, i32 0, i32 5, !dbg !8475
  call void @set_bit(i64 2, i64* %statusflags) #12, !dbg !8476
  %18 = load i32, i32* %len, align 4, !dbg !8477
  store i32 %18, i32* %retval, align 4, !dbg !8478
  br label %return, !dbg !8478

return:                                           ; preds = %do.end19, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !8479
  ret i32 %19, !dbg !8479
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_write_room(%struct.tty_struct* %tty) #3 !dbg !8480 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8481, metadata !DIExpression()), !dbg !8482
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !8483, metadata !DIExpression()), !dbg !8484
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8485
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 24, !dbg !8487
  %bf.load = load i8, i8* %stopped, align 4, !dbg !8487
  %bf.clear = and i8 %bf.load, 1, !dbg !8487
  %bf.cast = zext i8 %bf.clear to i64, !dbg !8487
  %tobool = icmp ne i64 %bf.cast, 0, !dbg !8485
  br i1 %tobool, label %if.then, label %if.end, !dbg !8488

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8489
  br label %return, !dbg !8489

if.end:                                           ; preds = %entry
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8490
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %1, i32 0, i32 37, !dbg !8491
  %2 = load i8*, i8** %driver_data, align 8, !dbg !8491
  %3 = bitcast i8* %2 to %struct.moxa_port*, !dbg !8490
  store %struct.moxa_port* %3, %struct.moxa_port** %ch, align 8, !dbg !8492
  %4 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8493
  %cmp = icmp eq %struct.moxa_port* %4, null, !dbg !8495
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !8496

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8497
  br label %return, !dbg !8497

if.end2:                                          ; preds = %if.end
  %5 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8498
  %call = call i32 @MoxaPortTxFree(%struct.moxa_port* %5) #12, !dbg !8499
  store i32 %call, i32* %retval, align 4, !dbg !8500
  br label %return, !dbg !8500

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8501
  ret i32 %6, !dbg !8501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_chars_in_buffer(%struct.tty_struct* %tty) #3 !dbg !8502 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  %chars = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8503, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !8505, metadata !DIExpression()), !dbg !8506
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8507
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8508
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8508
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !8507
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !8506
  call void @llvm.dbg.declare(metadata i32* %chars, metadata !8509, metadata !DIExpression()), !dbg !8510
  %3 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8511
  %call = call i32 @MoxaPortTxQueue(%struct.moxa_port* %3) #12, !dbg !8512
  store i32 %call, i32* %chars, align 4, !dbg !8513
  %4 = load i32, i32* %chars, align 4, !dbg !8514
  %tobool = icmp ne i32 %4, 0, !dbg !8514
  br i1 %tobool, label %if.then, label %if.end, !dbg !8516

if.then:                                          ; preds = %entry
  %5 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8517
  %statusflags = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %5, i32 0, i32 5, !dbg !8518
  call void @set_bit(i64 3, i64* %statusflags) #12, !dbg !8519
  br label %if.end, !dbg !8519

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %chars, align 4, !dbg !8520
  ret i32 %6, !dbg !8521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_ioctl(%struct.tty_struct* %tty, i32 %cmd, i64 %arg) #3 !dbg !8522 {
entry:
  %retval.i.i161 = alloca i1, align 1
  %addr.addr.i.i162 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i162, metadata !8523, metadata !DIExpression()), !dbg !8528
  %bytes.addr.i.i163 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i163, metadata !8545, metadata !DIExpression()), !dbg !8546
  %is_source.addr.i.i164 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i164, metadata !8547, metadata !DIExpression()), !dbg !8548
  %sz.i.i165 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i165, metadata !8549, metadata !DIExpression()), !dbg !8550
  %__ret_warn_on.i.i166 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i166, metadata !8551, metadata !DIExpression()), !dbg !8554
  %tmp.i.i167 = alloca i64, align 8
  %to.addr.i168 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i168, metadata !8555, metadata !DIExpression()), !dbg !8556
  %from.addr.i169 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i169, metadata !8557, metadata !DIExpression()), !dbg !8558
  %n.addr.i170 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i170, metadata !8559, metadata !DIExpression()), !dbg !8560
  %retval.i.i110 = alloca i1, align 1
  %addr.addr.i.i111 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i111, metadata !8523, metadata !DIExpression()), !dbg !8561
  %bytes.addr.i.i112 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i112, metadata !8545, metadata !DIExpression()), !dbg !8572
  %is_source.addr.i.i113 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i113, metadata !8547, metadata !DIExpression()), !dbg !8573
  %sz.i.i114 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i114, metadata !8549, metadata !DIExpression()), !dbg !8574
  %__ret_warn_on.i.i115 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i115, metadata !8551, metadata !DIExpression()), !dbg !8575
  %tmp.i.i116 = alloca i64, align 8
  %to.addr.i117 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i117, metadata !8555, metadata !DIExpression()), !dbg !8576
  %from.addr.i118 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i118, metadata !8557, metadata !DIExpression()), !dbg !8577
  %n.addr.i119 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i119, metadata !8559, metadata !DIExpression()), !dbg !8578
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !8523, metadata !DIExpression()), !dbg !8579
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !8545, metadata !DIExpression()), !dbg !8583
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !8547, metadata !DIExpression()), !dbg !8584
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !8549, metadata !DIExpression()), !dbg !8585
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !8551, metadata !DIExpression()), !dbg !8586
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !8555, metadata !DIExpression()), !dbg !8587
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !8557, metadata !DIExpression()), !dbg !8588
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !8559, metadata !DIExpression()), !dbg !8589
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %ch = alloca %struct.moxa_port*, align 8
  %argp = alloca i8*, align 8
  %status = alloca i32, align 4
  %ret = alloca i32, align 4
  %argm = alloca %struct.moxaq_str*, align 8
  %tmp = alloca %struct.moxaq_str, align 4
  %p = alloca %struct.moxa_port*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp38 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i64, align 8
  %tmp41 = alloca i64, align 8
  %tmp46 = alloca i64, align 8
  %__ret_pu47 = alloca i32, align 4
  %__ptr_pu48 = alloca i8*, align 8
  %__val_pu49 = alloca i64, align 8
  %tmp53 = alloca i64, align 8
  %argm57 = alloca %struct.mxser_mstatus*, align 8
  %tmp58 = alloca %struct.mxser_mstatus, align 4
  %p59 = alloca %struct.moxa_port*, align 8
  %i60 = alloca i32, align 4
  %j61 = alloca i32, align 4
  %ttyp = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !8594, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !8596, metadata !DIExpression()), !dbg !8597
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8598
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8599
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8599
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !8598
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !8597
  call void @llvm.dbg.declare(metadata i8** %argp, metadata !8600, metadata !DIExpression()), !dbg !8601
  %3 = load i64, i64* %arg.addr, align 8, !dbg !8602
  %4 = inttoptr i64 %3 to i8*, !dbg !8603
  store i8* %4, i8** %argp, align 8, !dbg !8601
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8604, metadata !DIExpression()), !dbg !8605
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8606, metadata !DIExpression()), !dbg !8607
  store i32 0, i32* %ret, align 4, !dbg !8607
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8608
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 5, !dbg !8610
  %6 = load i32, i32* %index, align 8, !dbg !8610
  %cmp = icmp eq i32 %6, 128, !dbg !8611
  br i1 %cmp, label %if.then, label %if.else, !dbg !8612

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %cmd.addr, align 4, !dbg !8613
  %cmp1 = icmp ne i32 %7, 1047, !dbg !8616
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !8617

land.lhs.true:                                    ; preds = %if.then
  %8 = load i32, i32* %cmd.addr, align 4, !dbg !8618
  %cmp2 = icmp ne i32 %8, 1051, !dbg !8619
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !8620

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load i32, i32* %cmd.addr, align 4, !dbg !8621
  %cmp4 = icmp ne i32 %9, 1089, !dbg !8622
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !8623

if.then5:                                         ; preds = %land.lhs.true3
  store i32 -22, i32* %retval, align 4, !dbg !8624
  br label %return, !dbg !8624

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %if.then
  br label %if.end8, !dbg !8625

if.else:                                          ; preds = %entry
  %10 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8626
  %tobool = icmp ne %struct.moxa_port* %10, null, !dbg !8626
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !8628

if.then6:                                         ; preds = %if.else
  store i32 -19, i32* %retval, align 4, !dbg !8629
  br label %return, !dbg !8629

if.end7:                                          ; preds = %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  %11 = load i32, i32* %cmd.addr, align 4, !dbg !8630
  switch i32 %11, label %sw.default [
    i32 1047, label %sw.bb
    i32 1052, label %sw.bb12
    i32 1051, label %sw.bb14
    i32 1026, label %sw.bb36
    i32 1025, label %sw.bb44
    i32 1089, label %sw.bb56
  ], !dbg !8631

sw.bb:                                            ; preds = %if.end8
  %12 = load volatile i64, i64* @jiffies, align 8, !dbg !8632
  %conv = trunc i64 %12 to i32, !dbg !8632
  store i32 %conv, i32* getelementptr inbounds (%struct.mon_str, %struct.mon_str* @moxaLog, i32 0, i32 0), align 4, !dbg !8633
  %13 = load i8*, i8** %argp, align 8, !dbg !8634
  store i8* %13, i8** %to.addr.i, align 8
  store i8* bitcast (%struct.mon_str* @moxaLog to i8*), i8** %from.addr.i, align 8
  store i64 1028, i64* %n.addr.i, align 8
  %14 = load i8*, i8** %from.addr.i, align 8, !dbg !8635
  %15 = load i64, i64* %n.addr.i, align 8, !dbg !8635
  store i8* %14, i8** %addr.addr.i.i, align 8
  store i64 %15, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8585
  %16 = load i32, i32* %sz.i.i, align 4, !dbg !8636
  %cmp.i.i = icmp sge i32 %16, 0, !dbg !8636
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8636

land.rhs.i.i:                                     ; preds = %sw.bb
  %17 = load i32, i32* %sz.i.i, align 4, !dbg !8636
  %conv.i.i = sext i32 %17 to i64, !dbg !8636
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8636
  %cmp1.i.i = icmp ult i64 %conv.i.i, %18, !dbg !8636
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %sw.bb
  %19 = phi i1 [ false, %sw.bb ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8638
  %lnot.i.i = xor i1 %19, true, !dbg !8636
  %lnot.ext.i.i = zext i1 %19 to i32, !dbg !8636
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8636
  br i1 %19, label %if.then.i.i, label %if.end10.i.i, !dbg !8639

if.then.i.i:                                      ; preds = %land.end.i.i
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8640
  %21 = call i1 @llvm.is.constant.i64(i64 %20) #10, !dbg !8643
  br i1 %21, label %if.else.i.i, label %if.then5.i.i, !dbg !8644

if.then5.i.i:                                     ; preds = %if.then.i.i
  %22 = load i32, i32* %sz.i.i, align 4, !dbg !8645
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8646
  call void @copy_overflow(i32 %22, i64 %23) #15, !dbg !8647
  br label %if.end9.i.i, !dbg !8647

if.else.i.i:                                      ; preds = %if.then.i.i
  %24 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8648
  %tobool6.i.i = trunc i8 %24 to i1, !dbg !8648
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8650

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #15, !dbg !8651
  br label %if.end.i.i, !dbg !8651

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #15, !dbg !8652
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8653
  br label %check_copy_size.exit.i, !dbg !8653

if.end10.i.i:                                     ; preds = %land.end.i.i
  %25 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8586
  %cmp11.i.i = icmp ugt i64 %25, 2147483647, !dbg !8586
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8586
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8586
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8586
  %26 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8654
  %tobool17.i.i = icmp ne i32 %26, 0, !dbg !8654
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8654
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8654
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8654
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8586

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !8656, !srcloc !8659
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !8660, !srcloc !8662
  br label %if.end31.i.i, !dbg !8663

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %27 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8586
  %tobool32.i.i = icmp ne i32 %27, 0, !dbg !8586
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8586
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8586
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8586
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8654
  %28 = load i64, i64* %tmp.i.i, align 8, !dbg !8586
  %tobool38.i.i = icmp ne i64 %28, 0, !dbg !8664
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8665

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8666
  br label %check_copy_size.exit.i, !dbg !8666

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %29 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8667
  %30 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8668
  %31 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8669
  %tobool41.i.i = trunc i8 %31 to i1, !dbg !8669
  call void @check_object_size(i8* %29, i64 %30, i1 zeroext %tobool41.i.i) #15, !dbg !8670
  store i1 true, i1* %retval.i.i, align 1, !dbg !8671
  br label %check_copy_size.exit.i, !dbg !8671

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %32 = load i1, i1* %retval.i.i, align 1, !dbg !8672
  %lnot.i = xor i1 %32, true, !dbg !8635
  %lnot.ext.i = zext i1 %32 to i32, !dbg !8635
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8635
  br i1 %32, label %if.then.i, label %copy_to_user.exit, !dbg !8673

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %33 = load i8*, i8** %to.addr.i, align 8, !dbg !8674
  %34 = load i8*, i8** %from.addr.i, align 8, !dbg !8675
  %35 = load i64, i64* %n.addr.i, align 8, !dbg !8676
  %call2.i = call i64 @_copy_to_user(i8* %33, i8* %34, i64 %35) #15, !dbg !8677
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8678
  br label %copy_to_user.exit, !dbg !8679

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %36 = load i64, i64* %n.addr.i, align 8, !dbg !8680
  %tobool9 = icmp ne i64 %36, 0, !dbg !8681
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !8682

if.then10:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !8683
  br label %if.end11, !dbg !8684

if.end11:                                         ; preds = %if.then10, %copy_to_user.exit
  br label %sw.epilog, !dbg !8685

sw.bb12:                                          ; preds = %if.end8
  %37 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8686
  %38 = load i64, i64* %arg.addr, align 8, !dbg !8687
  %conv13 = trunc i64 %38 to i32, !dbg !8687
  call void @MoxaPortFlushData(%struct.moxa_port* %37, i32 %conv13) #12, !dbg !8688
  br label %sw.epilog, !dbg !8689

sw.bb14:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.moxaq_str** %argm, metadata !8690, metadata !DIExpression()), !dbg !8696
  %39 = load i8*, i8** %argp, align 8, !dbg !8697
  %40 = bitcast i8* %39 to %struct.moxaq_str*, !dbg !8697
  store %struct.moxaq_str* %40, %struct.moxaq_str** %argm, align 8, !dbg !8696
  call void @llvm.dbg.declare(metadata %struct.moxaq_str* %tmp, metadata !8698, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %p, metadata !8700, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8702, metadata !DIExpression()), !dbg !8703
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8704, metadata !DIExpression()), !dbg !8705
  store i32 0, i32* %i, align 4, !dbg !8706
  br label %for.cond, !dbg !8707

for.cond:                                         ; preds = %for.inc33, %sw.bb14
  %41 = load i32, i32* %i, align 4, !dbg !8708
  %cmp15 = icmp ult i32 %41, 4, !dbg !8709
  br i1 %cmp15, label %for.body, label %for.end35, !dbg !8710

for.body:                                         ; preds = %for.cond
  %42 = load i32, i32* %i, align 4, !dbg !8711
  %idxprom = zext i32 %42 to i64, !dbg !8712
  %arrayidx = getelementptr [4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 %idxprom, !dbg !8712
  %ports = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %arrayidx, i32 0, i32 4, !dbg !8713
  %43 = load %struct.moxa_port*, %struct.moxa_port** %ports, align 8, !dbg !8713
  store %struct.moxa_port* %43, %struct.moxa_port** %p, align 8, !dbg !8714
  store i32 0, i32* %j, align 4, !dbg !8715
  br label %for.cond17, !dbg !8716

for.cond17:                                       ; preds = %for.inc, %for.body
  %44 = load i32, i32* %j, align 4, !dbg !8717
  %cmp18 = icmp ult i32 %44, 32, !dbg !8718
  br i1 %cmp18, label %for.body20, label %for.end, !dbg !8719

for.body20:                                       ; preds = %for.cond17
  %45 = bitcast %struct.moxaq_str* %tmp to i8*, !dbg !8720
  call void @llvm.memset.p0i8.i64(i8* align 4 %45, i8 0, i64 8, i1 false), !dbg !8720
  call void @spin_lock_bh(%struct.spinlock* @moxa_lock) #12, !dbg !8721
  %46 = load i32, i32* %i, align 4, !dbg !8722
  %idxprom21 = zext i32 %46 to i64, !dbg !8724
  %arrayidx22 = getelementptr [4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 %idxprom21, !dbg !8724
  %ready = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %arrayidx22, i32 0, i32 3, !dbg !8725
  %47 = load i32, i32* %ready, align 4, !dbg !8725
  %tobool23 = icmp ne i32 %47, 0, !dbg !8724
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !8726

if.then24:                                        ; preds = %for.body20
  %48 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !8727
  %call25 = call i32 @MoxaPortRxQueue(%struct.moxa_port* %48) #12, !dbg !8729
  %inq = getelementptr inbounds %struct.moxaq_str, %struct.moxaq_str* %tmp, i32 0, i32 0, !dbg !8730
  store i32 %call25, i32* %inq, align 4, !dbg !8731
  %49 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !8732
  %call26 = call i32 @MoxaPortTxQueue(%struct.moxa_port* %49) #12, !dbg !8733
  %outq = getelementptr inbounds %struct.moxaq_str, %struct.moxaq_str* %tmp, i32 0, i32 1, !dbg !8734
  store i32 %call26, i32* %outq, align 4, !dbg !8735
  br label %if.end27, !dbg !8736

if.end27:                                         ; preds = %if.then24, %for.body20
  call void @spin_unlock_bh(%struct.spinlock* @moxa_lock) #12, !dbg !8737
  %50 = load %struct.moxaq_str*, %struct.moxaq_str** %argm, align 8, !dbg !8738
  %51 = bitcast %struct.moxaq_str* %50 to i8*, !dbg !8738
  %52 = bitcast %struct.moxaq_str* %tmp to i8*, !dbg !8739
  store i8* %51, i8** %to.addr.i117, align 8
  store i8* %52, i8** %from.addr.i118, align 8
  store i64 8, i64* %n.addr.i119, align 8
  %53 = load i8*, i8** %from.addr.i118, align 8, !dbg !8740
  %54 = load i64, i64* %n.addr.i119, align 8, !dbg !8740
  store i8* %53, i8** %addr.addr.i.i111, align 8
  store i64 %54, i64* %bytes.addr.i.i112, align 8
  store i8 1, i8* %is_source.addr.i.i113, align 1
  store i32 -1, i32* %sz.i.i114, align 4, !dbg !8574
  %55 = load i32, i32* %sz.i.i114, align 4, !dbg !8741
  %cmp.i.i120 = icmp sge i32 %55, 0, !dbg !8741
  br i1 %cmp.i.i120, label %land.rhs.i.i123, label %land.end.i.i127, !dbg !8741

land.rhs.i.i123:                                  ; preds = %if.end27
  %56 = load i32, i32* %sz.i.i114, align 4, !dbg !8741
  %conv.i.i121 = sext i32 %56 to i64, !dbg !8741
  %57 = load i64, i64* %bytes.addr.i.i112, align 8, !dbg !8741
  %cmp1.i.i122 = icmp ult i64 %conv.i.i121, %57, !dbg !8741
  br label %land.end.i.i127

land.end.i.i127:                                  ; preds = %land.rhs.i.i123, %if.end27
  %58 = phi i1 [ false, %if.end27 ], [ %cmp1.i.i122, %land.rhs.i.i123 ], !dbg !8742
  %lnot.i.i124 = xor i1 %58, true, !dbg !8741
  %lnot.ext.i.i125 = zext i1 %58 to i32, !dbg !8741
  %conv4.i.i126 = sext i32 %lnot.ext.i.i125 to i64, !dbg !8741
  br i1 %58, label %if.then.i.i128, label %if.end10.i.i143, !dbg !8743

if.then.i.i128:                                   ; preds = %land.end.i.i127
  %59 = load i64, i64* %bytes.addr.i.i112, align 8, !dbg !8744
  %60 = call i1 @llvm.is.constant.i64(i64 %59) #10, !dbg !8745
  br i1 %60, label %if.else.i.i131, label %if.then5.i.i129, !dbg !8746

if.then5.i.i129:                                  ; preds = %if.then.i.i128
  %61 = load i32, i32* %sz.i.i114, align 4, !dbg !8747
  %62 = load i64, i64* %bytes.addr.i.i112, align 8, !dbg !8748
  call void @copy_overflow(i32 %61, i64 %62) #15, !dbg !8749
  br label %if.end9.i.i135, !dbg !8749

if.else.i.i131:                                   ; preds = %if.then.i.i128
  %63 = load i8, i8* %is_source.addr.i.i113, align 1, !dbg !8750
  %tobool6.i.i130 = trunc i8 %63 to i1, !dbg !8750
  br i1 %tobool6.i.i130, label %if.then7.i.i132, label %if.else8.i.i133, !dbg !8751

if.then7.i.i132:                                  ; preds = %if.else.i.i131
  call void @__bad_copy_from() #15, !dbg !8752
  br label %if.end.i.i134, !dbg !8752

if.else8.i.i133:                                  ; preds = %if.else.i.i131
  call void @__bad_copy_to() #15, !dbg !8753
  br label %if.end.i.i134

if.end.i.i134:                                    ; preds = %if.else8.i.i133, %if.then7.i.i132
  br label %if.end9.i.i135

if.end9.i.i135:                                   ; preds = %if.end.i.i134, %if.then5.i.i129
  store i1 false, i1* %retval.i.i110, align 1, !dbg !8754
  br label %check_copy_size.exit.i157, !dbg !8754

if.end10.i.i143:                                  ; preds = %land.end.i.i127
  %64 = load i64, i64* %bytes.addr.i.i112, align 8, !dbg !8575
  %cmp11.i.i136 = icmp ugt i64 %64, 2147483647, !dbg !8575
  %lnot13.i.i137 = xor i1 %cmp11.i.i136, true, !dbg !8575
  %lnot.ext16.i.i138 = zext i1 %cmp11.i.i136 to i32, !dbg !8575
  store i32 %lnot.ext16.i.i138, i32* %__ret_warn_on.i.i115, align 4, !dbg !8575
  %65 = load i32, i32* %__ret_warn_on.i.i115, align 4, !dbg !8755
  %tobool17.i.i139 = icmp ne i32 %65, 0, !dbg !8755
  %lnot18.i.i140 = xor i1 %tobool17.i.i139, true, !dbg !8755
  %lnot.ext21.i.i141 = zext i1 %tobool17.i.i139 to i32, !dbg !8755
  %conv22.i.i142 = sext i32 %lnot.ext21.i.i141 to i64, !dbg !8755
  br i1 %tobool17.i.i139, label %if.then24.i.i144, label %if.end31.i.i150, !dbg !8575

if.then24.i.i144:                                 ; preds = %if.end10.i.i143
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !8756, !srcloc !8659
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !8757, !srcloc !8662
  br label %if.end31.i.i150, !dbg !8758

if.end31.i.i150:                                  ; preds = %if.then24.i.i144, %if.end10.i.i143
  %66 = load i32, i32* %__ret_warn_on.i.i115, align 4, !dbg !8575
  %tobool32.i.i145 = icmp ne i32 %66, 0, !dbg !8575
  %lnot33.i.i146 = xor i1 %tobool32.i.i145, true, !dbg !8575
  %lnot.ext36.i.i147 = zext i1 %tobool32.i.i145 to i32, !dbg !8575
  %conv37.i.i148 = sext i32 %lnot.ext36.i.i147 to i64, !dbg !8575
  store i64 %conv37.i.i148, i64* %tmp.i.i116, align 8, !dbg !8755
  %67 = load i64, i64* %tmp.i.i116, align 8, !dbg !8575
  %tobool38.i.i149 = icmp ne i64 %67, 0, !dbg !8759
  br i1 %tobool38.i.i149, label %if.then39.i.i151, label %if.end40.i.i153, !dbg !8760

if.then39.i.i151:                                 ; preds = %if.end31.i.i150
  store i1 false, i1* %retval.i.i110, align 1, !dbg !8761
  br label %check_copy_size.exit.i157, !dbg !8761

if.end40.i.i153:                                  ; preds = %if.end31.i.i150
  %68 = load i8*, i8** %addr.addr.i.i111, align 8, !dbg !8762
  %69 = load i64, i64* %bytes.addr.i.i112, align 8, !dbg !8763
  %70 = load i8, i8* %is_source.addr.i.i113, align 1, !dbg !8764
  %tobool41.i.i152 = trunc i8 %70 to i1, !dbg !8764
  call void @check_object_size(i8* %68, i64 %69, i1 zeroext %tobool41.i.i152) #15, !dbg !8765
  store i1 true, i1* %retval.i.i110, align 1, !dbg !8766
  br label %check_copy_size.exit.i157, !dbg !8766

check_copy_size.exit.i157:                        ; preds = %if.end40.i.i153, %if.then39.i.i151, %if.end9.i.i135
  %71 = load i1, i1* %retval.i.i110, align 1, !dbg !8767
  %lnot.i154 = xor i1 %71, true, !dbg !8740
  %lnot.ext.i155 = zext i1 %71 to i32, !dbg !8740
  %conv.i156 = sext i32 %lnot.ext.i155 to i64, !dbg !8740
  br i1 %71, label %if.then.i159, label %copy_to_user.exit160, !dbg !8768

if.then.i159:                                     ; preds = %check_copy_size.exit.i157
  %72 = load i8*, i8** %to.addr.i117, align 8, !dbg !8769
  %73 = load i8*, i8** %from.addr.i118, align 8, !dbg !8770
  %74 = load i64, i64* %n.addr.i119, align 8, !dbg !8771
  %call2.i158 = call i64 @_copy_to_user(i8* %72, i8* %73, i64 %74) #15, !dbg !8772
  store i64 %call2.i158, i64* %n.addr.i119, align 8, !dbg !8773
  br label %copy_to_user.exit160, !dbg !8774

copy_to_user.exit160:                             ; preds = %check_copy_size.exit.i157, %if.then.i159
  %75 = load i64, i64* %n.addr.i119, align 8, !dbg !8775
  %tobool29 = icmp ne i64 %75, 0, !dbg !8776
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !8777

if.then30:                                        ; preds = %copy_to_user.exit160
  store i32 -14, i32* %retval, align 4, !dbg !8778
  br label %return, !dbg !8778

if.end31:                                         ; preds = %copy_to_user.exit160
  br label %for.inc, !dbg !8779

for.inc:                                          ; preds = %if.end31
  %76 = load i32, i32* %j, align 4, !dbg !8780
  %inc = add i32 %76, 1, !dbg !8780
  store i32 %inc, i32* %j, align 4, !dbg !8780
  %77 = load %struct.moxa_port*, %struct.moxa_port** %p, align 8, !dbg !8781
  %incdec.ptr = getelementptr %struct.moxa_port, %struct.moxa_port* %77, i32 1, !dbg !8781
  store %struct.moxa_port* %incdec.ptr, %struct.moxa_port** %p, align 8, !dbg !8781
  %78 = load %struct.moxaq_str*, %struct.moxaq_str** %argm, align 8, !dbg !8782
  %incdec.ptr32 = getelementptr %struct.moxaq_str, %struct.moxaq_str* %78, i32 1, !dbg !8782
  store %struct.moxaq_str* %incdec.ptr32, %struct.moxaq_str** %argm, align 8, !dbg !8782
  br label %for.cond17, !dbg !8783, !llvm.loop !8784

for.end:                                          ; preds = %for.cond17
  br label %for.inc33, !dbg !8786

for.inc33:                                        ; preds = %for.end
  %79 = load i32, i32* %i, align 4, !dbg !8787
  %inc34 = add i32 %79, 1, !dbg !8787
  store i32 %inc34, i32* %i, align 4, !dbg !8787
  br label %for.cond, !dbg !8788, !llvm.loop !8789

for.end35:                                        ; preds = %for.cond
  br label %sw.epilog, !dbg !8791

sw.bb36:                                          ; preds = %if.end8
  %80 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8792
  %call37 = call i32 @MoxaPortTxQueue(%struct.moxa_port* %80) #12, !dbg !8793
  store i32 %call37, i32* %status, align 4, !dbg !8794
  call void @might_fault() #12, !dbg !8795
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !8797, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !8800, metadata !DIExpression()), !dbg !8799
  call void @llvm.dbg.declare(metadata i64* %__val_pu, metadata !8801, metadata !DIExpression()), !dbg !8799
  %81 = load i8*, i8** %argp, align 8, !dbg !8799
  %82 = bitcast i8* %81 to i64*, !dbg !8799
  %83 = bitcast i64* %82 to i8*, !dbg !8799
  store i8* %83, i8** %__ptr_pu, align 8, !dbg !8799
  %84 = load i32, i32* %status, align 4, !dbg !8799
  %conv39 = sext i32 %84 to i64, !dbg !8799
  store i64 %conv39, i64* %__val_pu, align 8, !dbg !8799
  %85 = call i64 @llvm.read_register.i64(metadata !4715), !dbg !8799
  %86 = load i8*, i8** %__ptr_pu, align 8, !dbg !8799
  %87 = load i64, i64* %__val_pu, align 8, !dbg !8799
  %88 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %86, i64 %87, i64 8, i64 %85) #10, !dbg !8799, !srcloc !8802
  %asmresult = extractvalue { i8*, i64 } %88, 0, !dbg !8799
  %asmresult40 = extractvalue { i8*, i64 } %88, 1, !dbg !8799
  %89 = ptrtoint i8* %asmresult to i64, !dbg !8799
  %90 = trunc i64 %89 to i32, !dbg !8799
  store i32 %90, i32* %__ret_pu, align 4, !dbg !8799
  call void @llvm.write_register.i64(metadata !4715, i64 %asmresult40), !dbg !8799
  %91 = load i32, i32* %__ret_pu, align 4, !dbg !8799
  %conv42 = sext i32 %91 to i64, !dbg !8799
  store i64 %conv42, i64* %tmp41, align 8, !dbg !8799
  %92 = load i64, i64* %tmp41, align 8, !dbg !8799
  store i64 %92, i64* %tmp38, align 8, !dbg !8795
  %93 = load i64, i64* %tmp38, align 8, !dbg !8795
  %conv43 = trunc i64 %93 to i32, !dbg !8803
  store i32 %conv43, i32* %ret, align 4, !dbg !8804
  br label %sw.epilog, !dbg !8805

sw.bb44:                                          ; preds = %if.end8
  %94 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8806
  %call45 = call i32 @MoxaPortRxQueue(%struct.moxa_port* %94) #12, !dbg !8807
  store i32 %call45, i32* %status, align 4, !dbg !8808
  call void @might_fault() #12, !dbg !8809
  call void @llvm.dbg.declare(metadata i32* %__ret_pu47, metadata !8811, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu48, metadata !8814, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.declare(metadata i64* %__val_pu49, metadata !8815, metadata !DIExpression()), !dbg !8813
  %95 = load i8*, i8** %argp, align 8, !dbg !8813
  %96 = bitcast i8* %95 to i64*, !dbg !8813
  %97 = bitcast i64* %96 to i8*, !dbg !8813
  store i8* %97, i8** %__ptr_pu48, align 8, !dbg !8813
  %98 = load i32, i32* %status, align 4, !dbg !8813
  %conv50 = sext i32 %98 to i64, !dbg !8813
  store i64 %conv50, i64* %__val_pu49, align 8, !dbg !8813
  %99 = call i64 @llvm.read_register.i64(metadata !4715), !dbg !8813
  %100 = load i8*, i8** %__ptr_pu48, align 8, !dbg !8813
  %101 = load i64, i64* %__val_pu49, align 8, !dbg !8813
  %102 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %100, i64 %101, i64 8, i64 %99) #10, !dbg !8813, !srcloc !8816
  %asmresult51 = extractvalue { i8*, i64 } %102, 0, !dbg !8813
  %asmresult52 = extractvalue { i8*, i64 } %102, 1, !dbg !8813
  %103 = ptrtoint i8* %asmresult51 to i64, !dbg !8813
  %104 = trunc i64 %103 to i32, !dbg !8813
  store i32 %104, i32* %__ret_pu47, align 4, !dbg !8813
  call void @llvm.write_register.i64(metadata !4715, i64 %asmresult52), !dbg !8813
  %105 = load i32, i32* %__ret_pu47, align 4, !dbg !8813
  %conv54 = sext i32 %105 to i64, !dbg !8813
  store i64 %conv54, i64* %tmp53, align 8, !dbg !8813
  %106 = load i64, i64* %tmp53, align 8, !dbg !8813
  store i64 %106, i64* %tmp46, align 8, !dbg !8809
  %107 = load i64, i64* %tmp46, align 8, !dbg !8809
  %conv55 = trunc i64 %107 to i32, !dbg !8817
  store i32 %conv55, i32* %ret, align 4, !dbg !8818
  br label %sw.epilog, !dbg !8819

sw.bb56:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.mxser_mstatus** %argm57, metadata !8820, metadata !DIExpression()), !dbg !8829
  %108 = load i8*, i8** %argp, align 8, !dbg !8830
  %109 = bitcast i8* %108 to %struct.mxser_mstatus*, !dbg !8830
  store %struct.mxser_mstatus* %109, %struct.mxser_mstatus** %argm57, align 8, !dbg !8829
  call void @llvm.dbg.declare(metadata %struct.mxser_mstatus* %tmp58, metadata !8831, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %p59, metadata !8833, metadata !DIExpression()), !dbg !8834
  call void @llvm.dbg.declare(metadata i32* %i60, metadata !8835, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.declare(metadata i32* %j61, metadata !8837, metadata !DIExpression()), !dbg !8838
  store i32 0, i32* %i60, align 4, !dbg !8839
  br label %for.cond62, !dbg !8840

for.cond62:                                       ; preds = %for.inc107, %sw.bb56
  %110 = load i32, i32* %i60, align 4, !dbg !8841
  %cmp63 = icmp ult i32 %110, 4, !dbg !8842
  br i1 %cmp63, label %for.body65, label %for.end109, !dbg !8843

for.body65:                                       ; preds = %for.cond62
  %111 = load i32, i32* %i60, align 4, !dbg !8844
  %idxprom66 = zext i32 %111 to i64, !dbg !8845
  %arrayidx67 = getelementptr [4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 %idxprom66, !dbg !8845
  %ports68 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %arrayidx67, i32 0, i32 4, !dbg !8846
  %112 = load %struct.moxa_port*, %struct.moxa_port** %ports68, align 8, !dbg !8846
  store %struct.moxa_port* %112, %struct.moxa_port** %p59, align 8, !dbg !8847
  store i32 0, i32* %j61, align 4, !dbg !8848
  br label %for.cond69, !dbg !8849

for.cond69:                                       ; preds = %for.inc102, %for.body65
  %113 = load i32, i32* %j61, align 4, !dbg !8850
  %cmp70 = icmp ult i32 %113, 32, !dbg !8851
  br i1 %cmp70, label %for.body72, label %for.end106, !dbg !8852

for.body72:                                       ; preds = %for.cond69
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %ttyp, metadata !8853, metadata !DIExpression()), !dbg !8854
  %114 = bitcast %struct.mxser_mstatus* %tmp58 to i8*, !dbg !8855
  call void @llvm.memset.p0i8.i64(i8* align 4 %114, i8 0, i64 20, i1 false), !dbg !8855
  call void @spin_lock_bh(%struct.spinlock* @moxa_lock) #12, !dbg !8856
  %115 = load i32, i32* %i60, align 4, !dbg !8857
  %idxprom73 = zext i32 %115 to i64, !dbg !8859
  %arrayidx74 = getelementptr [4 x %struct.moxa_board_conf], [4 x %struct.moxa_board_conf]* @moxa_boards, i64 0, i64 %idxprom73, !dbg !8859
  %ready75 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %arrayidx74, i32 0, i32 3, !dbg !8860
  %116 = load i32, i32* %ready75, align 4, !dbg !8860
  %tobool76 = icmp ne i32 %116, 0, !dbg !8859
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !8861

if.then77:                                        ; preds = %for.body72
  call void @spin_unlock_bh(%struct.spinlock* @moxa_lock) #12, !dbg !8862
  br label %copy, !dbg !8864

if.end78:                                         ; preds = %for.body72
  %117 = load %struct.moxa_port*, %struct.moxa_port** %p59, align 8, !dbg !8865
  %call79 = call i32 @MoxaPortLineStatus(%struct.moxa_port* %117) #12, !dbg !8866
  store i32 %call79, i32* %status, align 4, !dbg !8867
  call void @spin_unlock_bh(%struct.spinlock* @moxa_lock) #12, !dbg !8868
  %118 = load i32, i32* %status, align 4, !dbg !8869
  %and = and i32 %118, 1, !dbg !8871
  %tobool80 = icmp ne i32 %and, 0, !dbg !8871
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !8872

if.then81:                                        ; preds = %if.end78
  %cts = getelementptr inbounds %struct.mxser_mstatus, %struct.mxser_mstatus* %tmp58, i32 0, i32 1, !dbg !8873
  store i32 1, i32* %cts, align 4, !dbg !8874
  br label %if.end82, !dbg !8875

if.end82:                                         ; preds = %if.then81, %if.end78
  %119 = load i32, i32* %status, align 4, !dbg !8876
  %and83 = and i32 %119, 2, !dbg !8878
  %tobool84 = icmp ne i32 %and83, 0, !dbg !8878
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !8879

if.then85:                                        ; preds = %if.end82
  %dsr = getelementptr inbounds %struct.mxser_mstatus, %struct.mxser_mstatus* %tmp58, i32 0, i32 2, !dbg !8880
  store i32 1, i32* %dsr, align 4, !dbg !8881
  br label %if.end86, !dbg !8882

if.end86:                                         ; preds = %if.then85, %if.end82
  %120 = load i32, i32* %status, align 4, !dbg !8883
  %and87 = and i32 %120, 4, !dbg !8885
  %tobool88 = icmp ne i32 %and87, 0, !dbg !8885
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !8886

if.then89:                                        ; preds = %if.end86
  %dcd = getelementptr inbounds %struct.mxser_mstatus, %struct.mxser_mstatus* %tmp58, i32 0, i32 4, !dbg !8887
  store i32 1, i32* %dcd, align 4, !dbg !8888
  br label %if.end90, !dbg !8889

if.end90:                                         ; preds = %if.then89, %if.end86
  %121 = load %struct.moxa_port*, %struct.moxa_port** %p59, align 8, !dbg !8890
  %port = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %121, i32 0, i32 0, !dbg !8891
  %call91 = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %port) #12, !dbg !8892
  store %struct.tty_struct* %call91, %struct.tty_struct** %ttyp, align 8, !dbg !8893
  %122 = load %struct.tty_struct*, %struct.tty_struct** %ttyp, align 8, !dbg !8894
  %tobool92 = icmp ne %struct.tty_struct* %122, null, !dbg !8894
  br i1 %tobool92, label %if.else95, label %if.then93, !dbg !8896

if.then93:                                        ; preds = %if.end90
  %123 = load %struct.moxa_port*, %struct.moxa_port** %p59, align 8, !dbg !8897
  %cflag = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %123, i32 0, i32 4, !dbg !8898
  %124 = load i32, i32* %cflag, align 4, !dbg !8898
  %cflag94 = getelementptr inbounds %struct.mxser_mstatus, %struct.mxser_mstatus* %tmp58, i32 0, i32 0, !dbg !8899
  store i32 %124, i32* %cflag94, align 4, !dbg !8900
  br label %if.end97, !dbg !8901

if.else95:                                        ; preds = %if.end90
  %125 = load %struct.tty_struct*, %struct.tty_struct** %ttyp, align 8, !dbg !8902
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %125, i32 0, i32 15, !dbg !8903
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !8904
  %126 = load i32, i32* %c_cflag, align 8, !dbg !8904
  %cflag96 = getelementptr inbounds %struct.mxser_mstatus, %struct.mxser_mstatus* %tmp58, i32 0, i32 0, !dbg !8905
  store i32 %126, i32* %cflag96, align 4, !dbg !8906
  br label %if.end97

if.end97:                                         ; preds = %if.else95, %if.then93
  %127 = load %struct.tty_struct*, %struct.tty_struct** %ttyp, align 8, !dbg !8907
  call void @tty_kref_put(%struct.tty_struct* %127) #12, !dbg !8908
  br label %copy, !dbg !8908

copy:                                             ; preds = %if.end97, %if.then77
  call void @llvm.dbg.label(metadata !8909), !dbg !8910
  %128 = load %struct.mxser_mstatus*, %struct.mxser_mstatus** %argm57, align 8, !dbg !8911
  %129 = bitcast %struct.mxser_mstatus* %128 to i8*, !dbg !8911
  %130 = bitcast %struct.mxser_mstatus* %tmp58 to i8*, !dbg !8912
  store i8* %129, i8** %to.addr.i168, align 8
  store i8* %130, i8** %from.addr.i169, align 8
  store i64 20, i64* %n.addr.i170, align 8
  %131 = load i8*, i8** %from.addr.i169, align 8, !dbg !8913
  %132 = load i64, i64* %n.addr.i170, align 8, !dbg !8913
  store i8* %131, i8** %addr.addr.i.i162, align 8
  store i64 %132, i64* %bytes.addr.i.i163, align 8
  store i8 1, i8* %is_source.addr.i.i164, align 1
  store i32 -1, i32* %sz.i.i165, align 4, !dbg !8550
  %133 = load i32, i32* %sz.i.i165, align 4, !dbg !8914
  %cmp.i.i171 = icmp sge i32 %133, 0, !dbg !8914
  br i1 %cmp.i.i171, label %land.rhs.i.i174, label %land.end.i.i178, !dbg !8914

land.rhs.i.i174:                                  ; preds = %copy
  %134 = load i32, i32* %sz.i.i165, align 4, !dbg !8914
  %conv.i.i172 = sext i32 %134 to i64, !dbg !8914
  %135 = load i64, i64* %bytes.addr.i.i163, align 8, !dbg !8914
  %cmp1.i.i173 = icmp ult i64 %conv.i.i172, %135, !dbg !8914
  br label %land.end.i.i178

land.end.i.i178:                                  ; preds = %land.rhs.i.i174, %copy
  %136 = phi i1 [ false, %copy ], [ %cmp1.i.i173, %land.rhs.i.i174 ], !dbg !8915
  %lnot.i.i175 = xor i1 %136, true, !dbg !8914
  %lnot.ext.i.i176 = zext i1 %136 to i32, !dbg !8914
  %conv4.i.i177 = sext i32 %lnot.ext.i.i176 to i64, !dbg !8914
  br i1 %136, label %if.then.i.i179, label %if.end10.i.i194, !dbg !8916

if.then.i.i179:                                   ; preds = %land.end.i.i178
  %137 = load i64, i64* %bytes.addr.i.i163, align 8, !dbg !8917
  %138 = call i1 @llvm.is.constant.i64(i64 %137) #10, !dbg !8918
  br i1 %138, label %if.else.i.i182, label %if.then5.i.i180, !dbg !8919

if.then5.i.i180:                                  ; preds = %if.then.i.i179
  %139 = load i32, i32* %sz.i.i165, align 4, !dbg !8920
  %140 = load i64, i64* %bytes.addr.i.i163, align 8, !dbg !8921
  call void @copy_overflow(i32 %139, i64 %140) #15, !dbg !8922
  br label %if.end9.i.i186, !dbg !8922

if.else.i.i182:                                   ; preds = %if.then.i.i179
  %141 = load i8, i8* %is_source.addr.i.i164, align 1, !dbg !8923
  %tobool6.i.i181 = trunc i8 %141 to i1, !dbg !8923
  br i1 %tobool6.i.i181, label %if.then7.i.i183, label %if.else8.i.i184, !dbg !8924

if.then7.i.i183:                                  ; preds = %if.else.i.i182
  call void @__bad_copy_from() #15, !dbg !8925
  br label %if.end.i.i185, !dbg !8925

if.else8.i.i184:                                  ; preds = %if.else.i.i182
  call void @__bad_copy_to() #15, !dbg !8926
  br label %if.end.i.i185

if.end.i.i185:                                    ; preds = %if.else8.i.i184, %if.then7.i.i183
  br label %if.end9.i.i186

if.end9.i.i186:                                   ; preds = %if.end.i.i185, %if.then5.i.i180
  store i1 false, i1* %retval.i.i161, align 1, !dbg !8927
  br label %check_copy_size.exit.i208, !dbg !8927

if.end10.i.i194:                                  ; preds = %land.end.i.i178
  %142 = load i64, i64* %bytes.addr.i.i163, align 8, !dbg !8554
  %cmp11.i.i187 = icmp ugt i64 %142, 2147483647, !dbg !8554
  %lnot13.i.i188 = xor i1 %cmp11.i.i187, true, !dbg !8554
  %lnot.ext16.i.i189 = zext i1 %cmp11.i.i187 to i32, !dbg !8554
  store i32 %lnot.ext16.i.i189, i32* %__ret_warn_on.i.i166, align 4, !dbg !8554
  %143 = load i32, i32* %__ret_warn_on.i.i166, align 4, !dbg !8928
  %tobool17.i.i190 = icmp ne i32 %143, 0, !dbg !8928
  %lnot18.i.i191 = xor i1 %tobool17.i.i190, true, !dbg !8928
  %lnot.ext21.i.i192 = zext i1 %tobool17.i.i190 to i32, !dbg !8928
  %conv22.i.i193 = sext i32 %lnot.ext21.i.i192 to i64, !dbg !8928
  br i1 %tobool17.i.i190, label %if.then24.i.i195, label %if.end31.i.i201, !dbg !8554

if.then24.i.i195:                                 ; preds = %if.end10.i.i194
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !8929, !srcloc !8659
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !8930, !srcloc !8662
  br label %if.end31.i.i201, !dbg !8931

if.end31.i.i201:                                  ; preds = %if.then24.i.i195, %if.end10.i.i194
  %144 = load i32, i32* %__ret_warn_on.i.i166, align 4, !dbg !8554
  %tobool32.i.i196 = icmp ne i32 %144, 0, !dbg !8554
  %lnot33.i.i197 = xor i1 %tobool32.i.i196, true, !dbg !8554
  %lnot.ext36.i.i198 = zext i1 %tobool32.i.i196 to i32, !dbg !8554
  %conv37.i.i199 = sext i32 %lnot.ext36.i.i198 to i64, !dbg !8554
  store i64 %conv37.i.i199, i64* %tmp.i.i167, align 8, !dbg !8928
  %145 = load i64, i64* %tmp.i.i167, align 8, !dbg !8554
  %tobool38.i.i200 = icmp ne i64 %145, 0, !dbg !8932
  br i1 %tobool38.i.i200, label %if.then39.i.i202, label %if.end40.i.i204, !dbg !8933

if.then39.i.i202:                                 ; preds = %if.end31.i.i201
  store i1 false, i1* %retval.i.i161, align 1, !dbg !8934
  br label %check_copy_size.exit.i208, !dbg !8934

if.end40.i.i204:                                  ; preds = %if.end31.i.i201
  %146 = load i8*, i8** %addr.addr.i.i162, align 8, !dbg !8935
  %147 = load i64, i64* %bytes.addr.i.i163, align 8, !dbg !8936
  %148 = load i8, i8* %is_source.addr.i.i164, align 1, !dbg !8937
  %tobool41.i.i203 = trunc i8 %148 to i1, !dbg !8937
  call void @check_object_size(i8* %146, i64 %147, i1 zeroext %tobool41.i.i203) #15, !dbg !8938
  store i1 true, i1* %retval.i.i161, align 1, !dbg !8939
  br label %check_copy_size.exit.i208, !dbg !8939

check_copy_size.exit.i208:                        ; preds = %if.end40.i.i204, %if.then39.i.i202, %if.end9.i.i186
  %149 = load i1, i1* %retval.i.i161, align 1, !dbg !8940
  %lnot.i205 = xor i1 %149, true, !dbg !8913
  %lnot.ext.i206 = zext i1 %149 to i32, !dbg !8913
  %conv.i207 = sext i32 %lnot.ext.i206 to i64, !dbg !8913
  br i1 %149, label %if.then.i210, label %copy_to_user.exit211, !dbg !8941

if.then.i210:                                     ; preds = %check_copy_size.exit.i208
  %150 = load i8*, i8** %to.addr.i168, align 8, !dbg !8942
  %151 = load i8*, i8** %from.addr.i169, align 8, !dbg !8943
  %152 = load i64, i64* %n.addr.i170, align 8, !dbg !8944
  %call2.i209 = call i64 @_copy_to_user(i8* %150, i8* %151, i64 %152) #15, !dbg !8945
  store i64 %call2.i209, i64* %n.addr.i170, align 8, !dbg !8946
  br label %copy_to_user.exit211, !dbg !8947

copy_to_user.exit211:                             ; preds = %check_copy_size.exit.i208, %if.then.i210
  %153 = load i64, i64* %n.addr.i170, align 8, !dbg !8948
  %tobool99 = icmp ne i64 %153, 0, !dbg !8949
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !8950

if.then100:                                       ; preds = %copy_to_user.exit211
  store i32 -14, i32* %retval, align 4, !dbg !8951
  br label %return, !dbg !8951

if.end101:                                        ; preds = %copy_to_user.exit211
  br label %for.inc102, !dbg !8952

for.inc102:                                       ; preds = %if.end101
  %154 = load i32, i32* %j61, align 4, !dbg !8953
  %inc103 = add i32 %154, 1, !dbg !8953
  store i32 %inc103, i32* %j61, align 4, !dbg !8953
  %155 = load %struct.moxa_port*, %struct.moxa_port** %p59, align 8, !dbg !8954
  %incdec.ptr104 = getelementptr %struct.moxa_port, %struct.moxa_port* %155, i32 1, !dbg !8954
  store %struct.moxa_port* %incdec.ptr104, %struct.moxa_port** %p59, align 8, !dbg !8954
  %156 = load %struct.mxser_mstatus*, %struct.mxser_mstatus** %argm57, align 8, !dbg !8955
  %incdec.ptr105 = getelementptr %struct.mxser_mstatus, %struct.mxser_mstatus* %156, i32 1, !dbg !8955
  store %struct.mxser_mstatus* %incdec.ptr105, %struct.mxser_mstatus** %argm57, align 8, !dbg !8955
  br label %for.cond69, !dbg !8956, !llvm.loop !8957

for.end106:                                       ; preds = %for.cond69
  br label %for.inc107, !dbg !8959

for.inc107:                                       ; preds = %for.end106
  %157 = load i32, i32* %i60, align 4, !dbg !8960
  %inc108 = add i32 %157, 1, !dbg !8960
  store i32 %inc108, i32* %i60, align 4, !dbg !8960
  br label %for.cond62, !dbg !8961, !llvm.loop !8962

for.end109:                                       ; preds = %for.cond62
  br label %sw.epilog, !dbg !8964

sw.default:                                       ; preds = %if.end8
  store i32 -515, i32* %ret, align 4, !dbg !8965
  br label %sw.epilog, !dbg !8966

sw.epilog:                                        ; preds = %sw.default, %for.end109, %sw.bb44, %sw.bb36, %for.end35, %sw.bb12, %if.end11
  %158 = load i32, i32* %ret, align 4, !dbg !8967
  store i32 %158, i32* %retval, align 4, !dbg !8968
  br label %return, !dbg !8968

return:                                           ; preds = %sw.epilog, %if.then100, %if.then30, %if.then6, %if.then5
  %159 = load i32, i32* %retval, align 4, !dbg !8969
  ret i32 %159, !dbg !8969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_set_termios(%struct.tty_struct* %tty, %struct.ktermios* %old_termios) #3 !dbg !8970 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %old_termios.addr = alloca %struct.ktermios*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8971, metadata !DIExpression()), !dbg !8972
  store %struct.ktermios* %old_termios, %struct.ktermios** %old_termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old_termios.addr, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !8975, metadata !DIExpression()), !dbg !8976
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8977
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8978
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8978
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !8977
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !8976
  %3 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8979
  %cmp = icmp eq %struct.moxa_port* %3, null, !dbg !8981
  br i1 %cmp, label %if.then, label %if.end, !dbg !8982

if.then:                                          ; preds = %entry
  br label %if.end5, !dbg !8983

if.end:                                           ; preds = %entry
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8984
  %5 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8985
  call void @moxa_set_tty_param(%struct.tty_struct* %4, %struct.ktermios* %5) #12, !dbg !8986
  %6 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8987
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %6, i32 0, i32 2, !dbg !8989
  %7 = load i32, i32* %c_cflag, align 4, !dbg !8989
  %and = and i32 %7, 2048, !dbg !8990
  %tobool = icmp ne i32 %and, 0, !dbg !8990
  br i1 %tobool, label %if.end5, label %land.lhs.true, !dbg !8991

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8992
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %8, i32 0, i32 15, !dbg !8992
  %c_cflag1 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !8992
  %9 = load i32, i32* %c_cflag1, align 8, !dbg !8992
  %and2 = and i32 %9, 2048, !dbg !8992
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8992
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8993

if.then4:                                         ; preds = %land.lhs.true
  %10 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !8994
  %port = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %10, i32 0, i32 0, !dbg !8994
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 8, !dbg !8994
  call void @__wake_up(%struct.wait_queue_head* %open_wait, i32 1, i32 1, i8* null) #12, !dbg !8994
  br label %if.end5, !dbg !8994

if.end5:                                          ; preds = %if.then, %if.then4, %land.lhs.true, %if.end
  ret void, !dbg !8995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_stop(%struct.tty_struct* %tty) #3 !dbg !8996 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8997, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !8999, metadata !DIExpression()), !dbg !9000
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9001
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9002
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9002
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !9001
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !9000
  %3 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9003
  %cmp = icmp eq %struct.moxa_port* %3, null, !dbg !9005
  br i1 %cmp, label %if.then, label %if.end, !dbg !9006

if.then:                                          ; preds = %entry
  br label %return, !dbg !9007

if.end:                                           ; preds = %entry
  %4 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9008
  call void @MoxaPortTxDisable(%struct.moxa_port* %4) #12, !dbg !9009
  %5 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9010
  %statusflags = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %5, i32 0, i32 5, !dbg !9011
  call void @set_bit(i64 1, i64* %statusflags) #12, !dbg !9012
  br label %return, !dbg !9013

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_start(%struct.tty_struct* %tty) #3 !dbg !9014 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9015, metadata !DIExpression()), !dbg !9016
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !9017, metadata !DIExpression()), !dbg !9018
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9019
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9020
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9020
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !9019
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !9018
  %3 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9021
  %cmp = icmp eq %struct.moxa_port* %3, null, !dbg !9023
  br i1 %cmp, label %if.then, label %if.end, !dbg !9024

if.then:                                          ; preds = %entry
  br label %return, !dbg !9025

if.end:                                           ; preds = %entry
  %4 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9026
  %statusflags = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %4, i32 0, i32 5, !dbg !9028
  %call = call zeroext i1 @test_bit(i64 1, i64* %statusflags) #12, !dbg !9029
  br i1 %call, label %if.end2, label %if.then1, !dbg !9030

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !9031

if.end2:                                          ; preds = %if.end
  %5 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9032
  call void @MoxaPortTxEnable(%struct.moxa_port* %5) #12, !dbg !9033
  %6 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9034
  %statusflags3 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %6, i32 0, i32 5, !dbg !9035
  call void @clear_bit(i64 1, i64* %statusflags3) #12, !dbg !9036
  br label %return, !dbg !9037

return:                                           ; preds = %if.end2, %if.then1, %if.then
  ret void, !dbg !9037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_hangup(%struct.tty_struct* %tty) #3 !dbg !9038 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9039, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !9041, metadata !DIExpression()), !dbg !9042
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9043
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9044
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9044
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !9043
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !9042
  %3 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9045
  %port = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %3, i32 0, i32 0, !dbg !9046
  call void @tty_port_hangup(%struct.tty_port* %port) #12, !dbg !9047
  ret void, !dbg !9048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_break_ctl(%struct.tty_struct* %tty, i32 %state) #3 !dbg !9049 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state.addr = alloca i32, align 4
  %port = alloca %struct.moxa_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9050, metadata !DIExpression()), !dbg !9051
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9052, metadata !DIExpression()), !dbg !9053
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port, metadata !9054, metadata !DIExpression()), !dbg !9055
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9056
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9057
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9057
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !9056
  store %struct.moxa_port* %2, %struct.moxa_port** %port, align 8, !dbg !9055
  %3 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !9058
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %3, i32 0, i32 2, !dbg !9059
  %4 = load i8*, i8** %tableAddr, align 8, !dbg !9059
  %5 = load i32, i32* %state.addr, align 4, !dbg !9060
  %tobool = icmp ne i32 %5, 0, !dbg !9060
  %6 = zext i1 %tobool to i64, !dbg !9060
  %cond = select i1 %tobool, i32 11, i32 12, !dbg !9060
  %conv = trunc i32 %cond to i16, !dbg !9060
  call void @moxafunc(i8* %4, i16 zeroext %conv, i16 zeroext 1028) #12, !dbg !9061
  ret i32 0, !dbg !9062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_flush_buffer(%struct.tty_struct* %tty) #3 !dbg !9063 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9064, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !9066, metadata !DIExpression()), !dbg !9067
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9068
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9069
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9069
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !9068
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !9067
  %3 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9070
  %cmp = icmp eq %struct.moxa_port* %3, null, !dbg !9072
  br i1 %cmp, label %if.then, label %if.end, !dbg !9073

if.then:                                          ; preds = %entry
  br label %return, !dbg !9074

if.end:                                           ; preds = %entry
  %4 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9075
  call void @MoxaPortFlushData(%struct.moxa_port* %4, i32 1) #12, !dbg !9076
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9077
  call void @tty_wakeup(%struct.tty_struct* %5) #12, !dbg !9078
  br label %return, !dbg !9079

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9079
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_tiocmget(%struct.tty_struct* %tty) #3 !dbg !9080 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  %flag = alloca i32, align 4
  %dtr = alloca i32, align 4
  %rts = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9081, metadata !DIExpression()), !dbg !9082
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !9083, metadata !DIExpression()), !dbg !9084
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9085
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9086
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9086
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !9085
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !9084
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !9087, metadata !DIExpression()), !dbg !9088
  store i32 0, i32* %flag, align 4, !dbg !9088
  call void @llvm.dbg.declare(metadata i32* %dtr, metadata !9089, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.declare(metadata i32* %rts, metadata !9091, metadata !DIExpression()), !dbg !9092
  %3 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9093
  %call = call i32 @MoxaPortGetLineOut(%struct.moxa_port* %3, i32* %dtr, i32* %rts) #12, !dbg !9094
  %4 = load i32, i32* %dtr, align 4, !dbg !9095
  %tobool = icmp ne i32 %4, 0, !dbg !9095
  br i1 %tobool, label %if.then, label %if.end, !dbg !9097

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %flag, align 4, !dbg !9098
  %or = or i32 %5, 2, !dbg !9098
  store i32 %or, i32* %flag, align 4, !dbg !9098
  br label %if.end, !dbg !9099

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %rts, align 4, !dbg !9100
  %tobool1 = icmp ne i32 %6, 0, !dbg !9100
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !9102

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %flag, align 4, !dbg !9103
  %or3 = or i32 %7, 4, !dbg !9103
  store i32 %or3, i32* %flag, align 4, !dbg !9103
  br label %if.end4, !dbg !9104

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9105
  %call5 = call i32 @MoxaPortLineStatus(%struct.moxa_port* %8) #12, !dbg !9106
  store i32 %call5, i32* %dtr, align 4, !dbg !9107
  %9 = load i32, i32* %dtr, align 4, !dbg !9108
  %and = and i32 %9, 1, !dbg !9110
  %tobool6 = icmp ne i32 %and, 0, !dbg !9110
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !9111

if.then7:                                         ; preds = %if.end4
  %10 = load i32, i32* %flag, align 4, !dbg !9112
  %or8 = or i32 %10, 32, !dbg !9112
  store i32 %or8, i32* %flag, align 4, !dbg !9112
  br label %if.end9, !dbg !9113

if.end9:                                          ; preds = %if.then7, %if.end4
  %11 = load i32, i32* %dtr, align 4, !dbg !9114
  %and10 = and i32 %11, 2, !dbg !9116
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9116
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !9117

if.then12:                                        ; preds = %if.end9
  %12 = load i32, i32* %flag, align 4, !dbg !9118
  %or13 = or i32 %12, 256, !dbg !9118
  store i32 %or13, i32* %flag, align 4, !dbg !9118
  br label %if.end14, !dbg !9119

if.end14:                                         ; preds = %if.then12, %if.end9
  %13 = load i32, i32* %dtr, align 4, !dbg !9120
  %and15 = and i32 %13, 4, !dbg !9122
  %tobool16 = icmp ne i32 %and15, 0, !dbg !9122
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !9123

if.then17:                                        ; preds = %if.end14
  %14 = load i32, i32* %flag, align 4, !dbg !9124
  %or18 = or i32 %14, 64, !dbg !9124
  store i32 %or18, i32* %flag, align 4, !dbg !9124
  br label %if.end19, !dbg !9125

if.end19:                                         ; preds = %if.then17, %if.end14
  %15 = load i32, i32* %flag, align 4, !dbg !9126
  ret i32 %15, !dbg !9127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_tiocmset(%struct.tty_struct* %tty, i32 %set, i32 %clear) #3 !dbg !9128 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %set.addr = alloca i32, align 4
  %clear.addr = alloca i32, align 4
  %ch = alloca %struct.moxa_port*, align 8
  %dtr = alloca i32, align 4
  %rts = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9129, metadata !DIExpression()), !dbg !9130
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !9131, metadata !DIExpression()), !dbg !9132
  store i32 %clear, i32* %clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear.addr, metadata !9133, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !9135, metadata !DIExpression()), !dbg !9136
  call void @llvm.dbg.declare(metadata i32* %dtr, metadata !9137, metadata !DIExpression()), !dbg !9138
  call void @llvm.dbg.declare(metadata i32* %rts, metadata !9139, metadata !DIExpression()), !dbg !9140
  call void @mutex_lock(%struct.mutex* @moxa_openlock) #12, !dbg !9141
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9142
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9143
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9143
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !9142
  store %struct.moxa_port* %2, %struct.moxa_port** %ch, align 8, !dbg !9144
  %3 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9145
  %tobool = icmp ne %struct.moxa_port* %3, null, !dbg !9145
  br i1 %tobool, label %if.end, label %if.then, !dbg !9147

if.then:                                          ; preds = %entry
  call void @mutex_unlock(%struct.mutex* @moxa_openlock) #12, !dbg !9148
  store i32 -22, i32* %retval, align 4, !dbg !9150
  br label %return, !dbg !9150

if.end:                                           ; preds = %entry
  %4 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9151
  %call = call i32 @MoxaPortGetLineOut(%struct.moxa_port* %4, i32* %dtr, i32* %rts) #12, !dbg !9152
  %5 = load i32, i32* %set.addr, align 4, !dbg !9153
  %and = and i32 %5, 4, !dbg !9155
  %tobool1 = icmp ne i32 %and, 0, !dbg !9155
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9156

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %rts, align 4, !dbg !9157
  br label %if.end3, !dbg !9158

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load i32, i32* %set.addr, align 4, !dbg !9159
  %and4 = and i32 %6, 2, !dbg !9161
  %tobool5 = icmp ne i32 %and4, 0, !dbg !9161
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !9162

if.then6:                                         ; preds = %if.end3
  store i32 1, i32* %dtr, align 4, !dbg !9163
  br label %if.end7, !dbg !9164

if.end7:                                          ; preds = %if.then6, %if.end3
  %7 = load i32, i32* %clear.addr, align 4, !dbg !9165
  %and8 = and i32 %7, 4, !dbg !9167
  %tobool9 = icmp ne i32 %and8, 0, !dbg !9167
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9168

if.then10:                                        ; preds = %if.end7
  store i32 0, i32* %rts, align 4, !dbg !9169
  br label %if.end11, !dbg !9170

if.end11:                                         ; preds = %if.then10, %if.end7
  %8 = load i32, i32* %clear.addr, align 4, !dbg !9171
  %and12 = and i32 %8, 2, !dbg !9173
  %tobool13 = icmp ne i32 %and12, 0, !dbg !9173
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !9174

if.then14:                                        ; preds = %if.end11
  store i32 0, i32* %dtr, align 4, !dbg !9175
  br label %if.end15, !dbg !9176

if.end15:                                         ; preds = %if.then14, %if.end11
  %9 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9177
  %10 = load i32, i32* %dtr, align 4, !dbg !9178
  %11 = load i32, i32* %rts, align 4, !dbg !9179
  call void @MoxaPortLineCtrl(%struct.moxa_port* %9, i32 %10, i32 %11) #12, !dbg !9180
  call void @mutex_unlock(%struct.mutex* @moxa_openlock) #12, !dbg !9181
  store i32 0, i32* %retval, align 4, !dbg !9182
  br label %return, !dbg !9182

return:                                           ; preds = %if.end15, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9183
  ret i32 %12, !dbg !9183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_get_serial_info(%struct.tty_struct* %tty, %struct.serial_struct* %ss) #3 !dbg !9184 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ss.addr = alloca %struct.serial_struct*, align 8
  %info = alloca %struct.moxa_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9185, metadata !DIExpression()), !dbg !9186
  store %struct.serial_struct* %ss, %struct.serial_struct** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %ss.addr, metadata !9187, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %info, metadata !9189, metadata !DIExpression()), !dbg !9190
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9191
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9192
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9192
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !9191
  store %struct.moxa_port* %2, %struct.moxa_port** %info, align 8, !dbg !9190
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9193
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %3, i32 0, i32 5, !dbg !9195
  %4 = load i32, i32* %index, align 8, !dbg !9195
  %cmp = icmp eq i32 %4, 128, !dbg !9196
  br i1 %cmp, label %if.then, label %if.end, !dbg !9197

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9198
  br label %return, !dbg !9198

if.end:                                           ; preds = %entry
  %5 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9199
  %tobool = icmp ne %struct.moxa_port* %5, null, !dbg !9199
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !9201

if.then1:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !9202
  br label %return, !dbg !9202

if.end2:                                          ; preds = %if.end
  %6 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9203
  %port = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %6, i32 0, i32 0, !dbg !9204
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 13, !dbg !9205
  call void @mutex_lock(%struct.mutex* %mutex) #12, !dbg !9206
  %7 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9207
  %type = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %7, i32 0, i32 3, !dbg !9208
  %8 = load i32, i32* %type, align 8, !dbg !9208
  %9 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9209
  %type3 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %9, i32 0, i32 0, !dbg !9210
  store i32 %8, i32* %type3, align 8, !dbg !9211
  %10 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9212
  %port4 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %10, i32 0, i32 0, !dbg !9213
  %tty5 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port4, i32 0, i32 1, !dbg !9214
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty5, align 8, !dbg !9214
  %index6 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %11, i32 0, i32 5, !dbg !9215
  %12 = load i32, i32* %index6, align 8, !dbg !9215
  %13 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9216
  %line = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %13, i32 0, i32 1, !dbg !9217
  store i32 %12, i32* %line, align 4, !dbg !9218
  %14 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9219
  %port7 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %14, i32 0, i32 0, !dbg !9220
  %flags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port7, i32 0, i32 10, !dbg !9221
  %15 = load i64, i64* %flags, align 8, !dbg !9221
  %conv = trunc i64 %15 to i32, !dbg !9219
  %16 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9222
  %flags8 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %16, i32 0, i32 4, !dbg !9223
  store i32 %conv, i32* %flags8, align 8, !dbg !9224
  %17 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9225
  %baud_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %17, i32 0, i32 7, !dbg !9226
  store i32 921600, i32* %baud_base, align 4, !dbg !9227
  %18 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9228
  %port9 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %18, i32 0, i32 0, !dbg !9229
  %close_delay = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port9, i32 0, i32 16, !dbg !9230
  %19 = load i32, i32* %close_delay, align 8, !dbg !9230
  %conv10 = trunc i32 %19 to i16, !dbg !9228
  %20 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9231
  %close_delay11 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %20, i32 0, i32 8, !dbg !9232
  store i16 %conv10, i16* %close_delay11, align 8, !dbg !9233
  %21 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9234
  %port12 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %21, i32 0, i32 0, !dbg !9235
  %mutex13 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port12, i32 0, i32 13, !dbg !9236
  call void @mutex_unlock(%struct.mutex* %mutex13) #12, !dbg !9237
  store i32 0, i32* %retval, align 4, !dbg !9238
  br label %return, !dbg !9238

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !9239
  ret i32 %22, !dbg !9239
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxa_set_serial_info(%struct.tty_struct* %tty, %struct.serial_struct* %ss) #3 !dbg !9240 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ss.addr = alloca %struct.serial_struct*, align 8
  %info = alloca %struct.moxa_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9241, metadata !DIExpression()), !dbg !9242
  store %struct.serial_struct* %ss, %struct.serial_struct** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %ss.addr, metadata !9243, metadata !DIExpression()), !dbg !9244
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %info, metadata !9245, metadata !DIExpression()), !dbg !9246
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9247
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9248
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9248
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !9247
  store %struct.moxa_port* %2, %struct.moxa_port** %info, align 8, !dbg !9246
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9249
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %3, i32 0, i32 5, !dbg !9251
  %4 = load i32, i32* %index, align 8, !dbg !9251
  %cmp = icmp eq i32 %4, 128, !dbg !9252
  br i1 %cmp, label %if.then, label %if.end, !dbg !9253

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9254
  br label %return, !dbg !9254

if.end:                                           ; preds = %entry
  %5 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9255
  %tobool = icmp ne %struct.moxa_port* %5, null, !dbg !9255
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !9257

if.then1:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !9258
  br label %return, !dbg !9258

if.end2:                                          ; preds = %if.end
  %6 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9259
  %irq = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %6, i32 0, i32 3, !dbg !9261
  %7 = load i32, i32* %irq, align 4, !dbg !9261
  %cmp3 = icmp ne i32 %7, 0, !dbg !9262
  br i1 %cmp3, label %if.then9, label %lor.lhs.false, !dbg !9263

lor.lhs.false:                                    ; preds = %if.end2
  %8 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9264
  %port = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %8, i32 0, i32 2, !dbg !9265
  %9 = load i32, i32* %port, align 8, !dbg !9265
  %cmp4 = icmp ne i32 %9, 0, !dbg !9266
  br i1 %cmp4, label %if.then9, label %lor.lhs.false5, !dbg !9267

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %10 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9268
  %custom_divisor = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %10, i32 0, i32 6, !dbg !9269
  %11 = load i32, i32* %custom_divisor, align 8, !dbg !9269
  %cmp6 = icmp ne i32 %11, 0, !dbg !9270
  br i1 %cmp6, label %if.then9, label %lor.lhs.false7, !dbg !9271

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %12 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9272
  %baud_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %12, i32 0, i32 7, !dbg !9273
  %13 = load i32, i32* %baud_base, align 4, !dbg !9273
  %cmp8 = icmp ne i32 %13, 921600, !dbg !9274
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !9275

if.then9:                                         ; preds = %lor.lhs.false7, %lor.lhs.false5, %lor.lhs.false, %if.end2
  store i32 -1, i32* %retval, align 4, !dbg !9276
  br label %return, !dbg !9276

if.end10:                                         ; preds = %lor.lhs.false7
  %14 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9277
  %port11 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %14, i32 0, i32 0, !dbg !9278
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port11, i32 0, i32 13, !dbg !9279
  call void @mutex_lock(%struct.mutex* %mutex) #12, !dbg !9280
  %call = call zeroext i1 @capable(i32 21) #12, !dbg !9281
  br i1 %call, label %if.end22, label %if.then12, !dbg !9283

if.then12:                                        ; preds = %if.end10
  %15 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9284
  %flags = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %15, i32 0, i32 4, !dbg !9287
  %16 = load i32, i32* %flags, align 8, !dbg !9287
  %and = and i32 %16, -13361, !dbg !9288
  %conv = zext i32 %and to i64, !dbg !9289
  %17 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9290
  %port13 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %17, i32 0, i32 0, !dbg !9291
  %flags14 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port13, i32 0, i32 10, !dbg !9292
  %18 = load i64, i64* %flags14, align 8, !dbg !9292
  %and15 = and i64 %18, 4294953935, !dbg !9293
  %cmp16 = icmp ne i64 %conv, %and15, !dbg !9294
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !9295

if.then18:                                        ; preds = %if.then12
  %19 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9296
  %port19 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %19, i32 0, i32 0, !dbg !9298
  %mutex20 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port19, i32 0, i32 13, !dbg !9299
  call void @mutex_unlock(%struct.mutex* %mutex20) #12, !dbg !9300
  store i32 -1, i32* %retval, align 4, !dbg !9301
  br label %return, !dbg !9301

if.end21:                                         ; preds = %if.then12
  br label %if.end22, !dbg !9302

if.end22:                                         ; preds = %if.end21, %if.end10
  %20 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9303
  %close_delay = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %20, i32 0, i32 8, !dbg !9304
  %21 = load i16, i16* %close_delay, align 8, !dbg !9304
  %conv23 = zext i16 %21 to i32, !dbg !9303
  %mul = mul i32 %conv23, 250, !dbg !9305
  %div = sdiv i32 %mul, 100, !dbg !9306
  %22 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9307
  %port24 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %22, i32 0, i32 0, !dbg !9308
  %close_delay25 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port24, i32 0, i32 16, !dbg !9309
  store i32 %div, i32* %close_delay25, align 8, !dbg !9310
  %23 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9311
  %24 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9312
  %type = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %24, i32 0, i32 0, !dbg !9313
  %25 = load i32, i32* %type, align 8, !dbg !9313
  %cmp26 = icmp eq i32 %25, 4, !dbg !9314
  %conv27 = zext i1 %cmp26 to i32, !dbg !9314
  call void @MoxaSetFifo(%struct.moxa_port* %23, i32 %conv27) #12, !dbg !9315
  %26 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9316
  %type28 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %26, i32 0, i32 0, !dbg !9317
  %27 = load i32, i32* %type28, align 8, !dbg !9317
  %28 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9318
  %type29 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %28, i32 0, i32 3, !dbg !9319
  store i32 %27, i32* %type29, align 8, !dbg !9320
  %29 = load %struct.moxa_port*, %struct.moxa_port** %info, align 8, !dbg !9321
  %port30 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %29, i32 0, i32 0, !dbg !9322
  %mutex31 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port30, i32 0, i32 13, !dbg !9323
  call void @mutex_unlock(%struct.mutex* %mutex31) #12, !dbg !9324
  store i32 0, i32* %retval, align 4, !dbg !9325
  br label %return, !dbg !9325

return:                                           ; preds = %if.end22, %if.then18, %if.then9, %if.then1, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !9326
  ret i32 %30, !dbg !9326
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mutex_lock_interruptible(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_tty_set(%struct.tty_port*, %struct.tty_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @moxa_set_tty_param(%struct.tty_struct* %tty, %struct.ktermios* %old_termios) #3 !dbg !9327 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %old_termios.addr = alloca %struct.ktermios*, align 8
  %ts = alloca %struct.ktermios*, align 8
  %ch = alloca %struct.moxa_port*, align 8
  %rts = alloca i32, align 4
  %cts = alloca i32, align 4
  %txflow = alloca i32, align 4
  %rxflow = alloca i32, align 4
  %xany = alloca i32, align 4
  %baud = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9328, metadata !DIExpression()), !dbg !9329
  store %struct.ktermios* %old_termios, %struct.ktermios** %old_termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old_termios.addr, metadata !9330, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.declare(metadata %struct.ktermios** %ts, metadata !9332, metadata !DIExpression()), !dbg !9333
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9334
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 15, !dbg !9335
  store %struct.ktermios* %termios, %struct.ktermios** %ts, align 8, !dbg !9333
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %ch, metadata !9336, metadata !DIExpression()), !dbg !9337
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9338
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %1, i32 0, i32 37, !dbg !9339
  %2 = load i8*, i8** %driver_data, align 8, !dbg !9339
  %3 = bitcast i8* %2 to %struct.moxa_port*, !dbg !9338
  store %struct.moxa_port* %3, %struct.moxa_port** %ch, align 8, !dbg !9337
  call void @llvm.dbg.declare(metadata i32* %rts, metadata !9340, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.declare(metadata i32* %cts, metadata !9342, metadata !DIExpression()), !dbg !9343
  call void @llvm.dbg.declare(metadata i32* %txflow, metadata !9344, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.declare(metadata i32* %rxflow, metadata !9346, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.declare(metadata i32* %xany, metadata !9348, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.declare(metadata i32* %baud, metadata !9350, metadata !DIExpression()), !dbg !9351
  store i32 0, i32* %xany, align 4, !dbg !9352
  store i32 0, i32* %rxflow, align 4, !dbg !9353
  store i32 0, i32* %txflow, align 4, !dbg !9354
  store i32 0, i32* %cts, align 4, !dbg !9355
  store i32 0, i32* %rts, align 4, !dbg !9356
  %4 = load %struct.ktermios*, %struct.ktermios** %ts, align 8, !dbg !9357
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %4, i32 0, i32 2, !dbg !9359
  %5 = load i32, i32* %c_cflag, align 4, !dbg !9359
  %and = and i32 %5, -2147483648, !dbg !9360
  %tobool = icmp ne i32 %and, 0, !dbg !9360
  br i1 %tobool, label %if.then, label %if.end, !dbg !9361

if.then:                                          ; preds = %entry
  store i32 1, i32* %cts, align 4, !dbg !9362
  store i32 1, i32* %rts, align 4, !dbg !9363
  br label %if.end, !dbg !9364

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ktermios*, %struct.ktermios** %ts, align 8, !dbg !9365
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %6, i32 0, i32 0, !dbg !9367
  %7 = load i32, i32* %c_iflag, align 4, !dbg !9367
  %and1 = and i32 %7, 1024, !dbg !9368
  %tobool2 = icmp ne i32 %and1, 0, !dbg !9368
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !9369

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %txflow, align 4, !dbg !9370
  br label %if.end4, !dbg !9371

if.end4:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.ktermios*, %struct.ktermios** %ts, align 8, !dbg !9372
  %c_iflag5 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %8, i32 0, i32 0, !dbg !9374
  %9 = load i32, i32* %c_iflag5, align 4, !dbg !9374
  %and6 = and i32 %9, 4096, !dbg !9375
  %tobool7 = icmp ne i32 %and6, 0, !dbg !9375
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !9376

if.then8:                                         ; preds = %if.end4
  store i32 1, i32* %rxflow, align 4, !dbg !9377
  br label %if.end9, !dbg !9378

if.end9:                                          ; preds = %if.then8, %if.end4
  %10 = load %struct.ktermios*, %struct.ktermios** %ts, align 8, !dbg !9379
  %c_iflag10 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %10, i32 0, i32 0, !dbg !9381
  %11 = load i32, i32* %c_iflag10, align 4, !dbg !9381
  %and11 = and i32 %11, 2048, !dbg !9382
  %tobool12 = icmp ne i32 %and11, 0, !dbg !9382
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !9383

if.then13:                                        ; preds = %if.end9
  store i32 1, i32* %xany, align 4, !dbg !9384
  br label %if.end14, !dbg !9385

if.end14:                                         ; preds = %if.then13, %if.end9
  %12 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9386
  %13 = load i32, i32* %rts, align 4, !dbg !9387
  %14 = load i32, i32* %cts, align 4, !dbg !9388
  %15 = load i32, i32* %txflow, align 4, !dbg !9389
  %16 = load i32, i32* %rxflow, align 4, !dbg !9390
  %17 = load i32, i32* %xany, align 4, !dbg !9391
  call void @MoxaPortFlowCtrl(%struct.moxa_port* %12, i32 %13, i32 %14, i32 %15, i32 %16, i32 %17) #12, !dbg !9392
  %18 = load %struct.moxa_port*, %struct.moxa_port** %ch, align 8, !dbg !9393
  %19 = load %struct.ktermios*, %struct.ktermios** %ts, align 8, !dbg !9394
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9395
  %call = call i32 @tty_get_baud_rate(%struct.tty_struct* %20) #12, !dbg !9396
  %call15 = call i32 @MoxaPortSetTermio(%struct.moxa_port* %18, %struct.ktermios* %19, i32 %call) #12, !dbg !9397
  store i32 %call15, i32* %baud, align 4, !dbg !9398
  %21 = load i32, i32* %baud, align 4, !dbg !9399
  %cmp = icmp eq i32 %21, -1, !dbg !9401
  br i1 %cmp, label %if.then16, label %if.end18, !dbg !9402

if.then16:                                        ; preds = %if.end14
  %22 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !9403
  %call17 = call i32 @tty_termios_baud_rate(%struct.ktermios* %22) #12, !dbg !9404
  store i32 %call17, i32* %baud, align 4, !dbg !9405
  br label %if.end18, !dbg !9406

if.end18:                                         ; preds = %if.then16, %if.end14
  %23 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9407
  %24 = load i32, i32* %baud, align 4, !dbg !9408
  %25 = load i32, i32* %baud, align 4, !dbg !9409
  call void @tty_encode_baud_rate(%struct.tty_struct* %23, i32 %24, i32 %25) #12, !dbg !9410
  ret void, !dbg !9411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @MoxaPortEnable(%struct.moxa_port* %port) #3 !dbg !9412 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %ofsAddr = alloca i8*, align 8
  %lowwater = alloca i16, align 2
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !9413, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !9415, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.declare(metadata i16* %lowwater, metadata !9417, metadata !DIExpression()), !dbg !9418
  store i16 512, i16* %lowwater, align 2, !dbg !9418
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9419
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !9420
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !9420
  store i8* %1, i8** %ofsAddr, align 8, !dbg !9421
  %2 = load i16, i16* %lowwater, align 2, !dbg !9422
  %3 = load i8*, i8** %ofsAddr, align 8, !dbg !9423
  %add.ptr = getelementptr i8, i8* %3, i64 54, !dbg !9424
  call void @writew(i16 zeroext %2, i8* %add.ptr) #12, !dbg !9425
  %4 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9426
  %board = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %4, i32 0, i32 1, !dbg !9426
  %5 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !9426
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %5, i32 0, i32 0, !dbg !9426
  %6 = load i32, i32* %boardType, align 8, !dbg !9426
  %cmp = icmp eq i32 %6, 4, !dbg !9426
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9426

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9426
  %board1 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %7, i32 0, i32 1, !dbg !9426
  %8 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board1, align 8, !dbg !9426
  %boardType2 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %8, i32 0, i32 0, !dbg !9426
  %9 = load i32, i32* %boardType2, align 8, !dbg !9426
  %cmp3 = icmp eq i32 %9, 3, !dbg !9426
  br i1 %cmp3, label %if.then, label %if.else, !dbg !9428

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load i8*, i8** %ofsAddr, align 8, !dbg !9429
  call void @moxafunc(i8* %10, i16 zeroext 19, i16 zeroext 0) #12, !dbg !9430
  br label %if.end, !dbg !9430

if.else:                                          ; preds = %lor.lhs.false
  %11 = load i8*, i8** %ofsAddr, align 8, !dbg !9431
  %add.ptr4 = getelementptr i8, i8* %11, i64 8, !dbg !9432
  %call = call zeroext i16 @readw(i8* %add.ptr4) #12, !dbg !9433
  %conv = zext i16 %call to i32, !dbg !9433
  %or = or i32 %conv, 8, !dbg !9434
  %conv5 = trunc i32 %or to i16, !dbg !9433
  %12 = load i8*, i8** %ofsAddr, align 8, !dbg !9435
  %add.ptr6 = getelementptr i8, i8* %12, i64 8, !dbg !9436
  call void @writew(i16 zeroext %conv5, i8* %add.ptr6) #12, !dbg !9437
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i8*, i8** %ofsAddr, align 8, !dbg !9438
  call void @moxafunc(i8* %13, i16 zeroext 20, i16 zeroext 1028) #12, !dbg !9439
  %14 = load i8*, i8** %ofsAddr, align 8, !dbg !9440
  call void @moxafunc(i8* %14, i16 zeroext 10, i16 zeroext 2) #12, !dbg !9441
  %15 = load i8*, i8** %ofsAddr, align 8, !dbg !9442
  call void @moxafunc(i8* %15, i16 zeroext 2, i16 zeroext 1028) #12, !dbg !9443
  %16 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9444
  %call7 = call i32 @MoxaPortLineStatus(%struct.moxa_port* %16) #12, !dbg !9445
  ret void, !dbg !9446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @MoxaSetFifo(%struct.moxa_port* %port, i32 %enable) #3 !dbg !9447 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %enable.addr = alloca i32, align 4
  %ofsAddr = alloca i8*, align 8
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !9448, metadata !DIExpression()), !dbg !9449
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !9450, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !9452, metadata !DIExpression()), !dbg !9453
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9454
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !9455
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !9455
  store i8* %1, i8** %ofsAddr, align 8, !dbg !9453
  %2 = load i32, i32* %enable.addr, align 4, !dbg !9456
  %tobool = icmp ne i32 %2, 0, !dbg !9456
  br i1 %tobool, label %if.else, label %if.then, !dbg !9458

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %ofsAddr, align 8, !dbg !9459
  call void @moxafunc(i8* %3, i16 zeroext 54, i16 zeroext 0) #12, !dbg !9461
  %4 = load i8*, i8** %ofsAddr, align 8, !dbg !9462
  call void @moxafunc(i8* %4, i16 zeroext 55, i16 zeroext 1) #12, !dbg !9463
  br label %if.end, !dbg !9464

if.else:                                          ; preds = %entry
  %5 = load i8*, i8** %ofsAddr, align 8, !dbg !9465
  call void @moxafunc(i8* %5, i16 zeroext 54, i16 zeroext 3) #12, !dbg !9467
  %6 = load i8*, i8** %ofsAddr, align 8, !dbg !9468
  call void @moxafunc(i8* %6, i16 zeroext 55, i16 zeroext 16) #12, !dbg !9469
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_initialized(%struct.tty_port* %port, i1 zeroext %val) #3 !dbg !9471 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !9474, metadata !DIExpression()), !dbg !9475
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !9476, metadata !DIExpression()), !dbg !9477
  %0 = load i8, i8* %val.addr, align 1, !dbg !9478
  %tobool = trunc i8 %0 to i1, !dbg !9478
  br i1 %tobool, label %if.then, label %if.else, !dbg !9480

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9481
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !9482
  call void @set_bit(i64 0, i64* %iflags) #12, !dbg !9483
  br label %if.end, !dbg !9483

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9484
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !9485
  call void @clear_bit(i64 0, i64* %iflags1) #12, !dbg !9486
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9487
}

; Function Attrs: noredzone
declare dso_local i32 @tty_port_block_til_ready(%struct.tty_port*, %struct.tty_struct*, %struct.file*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @MoxaPortFlowCtrl(%struct.moxa_port* %port, i32 %rts, i32 %cts, i32 %txflow, i32 %rxflow, i32 %txany) #3 !dbg !9488 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %rts.addr = alloca i32, align 4
  %cts.addr = alloca i32, align 4
  %txflow.addr = alloca i32, align 4
  %rxflow.addr = alloca i32, align 4
  %txany.addr = alloca i32, align 4
  %mode = alloca i32, align 4
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !9491, metadata !DIExpression()), !dbg !9492
  store i32 %rts, i32* %rts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rts.addr, metadata !9493, metadata !DIExpression()), !dbg !9494
  store i32 %cts, i32* %cts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cts.addr, metadata !9495, metadata !DIExpression()), !dbg !9496
  store i32 %txflow, i32* %txflow.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txflow.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  store i32 %rxflow, i32* %rxflow.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rxflow.addr, metadata !9499, metadata !DIExpression()), !dbg !9500
  store i32 %txany, i32* %txany.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txany.addr, metadata !9501, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !9503, metadata !DIExpression()), !dbg !9504
  store i32 0, i32* %mode, align 4, !dbg !9504
  %0 = load i32, i32* %rts.addr, align 4, !dbg !9505
  %tobool = icmp ne i32 %0, 0, !dbg !9505
  br i1 %tobool, label %if.then, label %if.end, !dbg !9507

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %mode, align 4, !dbg !9508
  %or = or i32 %1, 2, !dbg !9508
  store i32 %or, i32* %mode, align 4, !dbg !9508
  br label %if.end, !dbg !9509

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %cts.addr, align 4, !dbg !9510
  %tobool1 = icmp ne i32 %2, 0, !dbg !9510
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !9512

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %mode, align 4, !dbg !9513
  %or3 = or i32 %3, 1, !dbg !9513
  store i32 %or3, i32* %mode, align 4, !dbg !9513
  br label %if.end4, !dbg !9514

if.end4:                                          ; preds = %if.then2, %if.end
  %4 = load i32, i32* %txflow.addr, align 4, !dbg !9515
  %tobool5 = icmp ne i32 %4, 0, !dbg !9515
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !9517

if.then6:                                         ; preds = %if.end4
  %5 = load i32, i32* %mode, align 4, !dbg !9518
  %or7 = or i32 %5, 4, !dbg !9518
  store i32 %or7, i32* %mode, align 4, !dbg !9518
  br label %if.end8, !dbg !9519

if.end8:                                          ; preds = %if.then6, %if.end4
  %6 = load i32, i32* %rxflow.addr, align 4, !dbg !9520
  %tobool9 = icmp ne i32 %6, 0, !dbg !9520
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !9522

if.then10:                                        ; preds = %if.end8
  %7 = load i32, i32* %mode, align 4, !dbg !9523
  %or11 = or i32 %7, 8, !dbg !9523
  store i32 %or11, i32* %mode, align 4, !dbg !9523
  br label %if.end12, !dbg !9524

if.end12:                                         ; preds = %if.then10, %if.end8
  %8 = load i32, i32* %txany.addr, align 4, !dbg !9525
  %tobool13 = icmp ne i32 %8, 0, !dbg !9525
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !9527

if.then14:                                        ; preds = %if.end12
  %9 = load i32, i32* %mode, align 4, !dbg !9528
  %or15 = or i32 %9, 16, !dbg !9528
  store i32 %or15, i32* %mode, align 4, !dbg !9528
  br label %if.end16, !dbg !9529

if.end16:                                         ; preds = %if.then14, %if.end12
  %10 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9530
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %10, i32 0, i32 2, !dbg !9531
  %11 = load i8*, i8** %tableAddr, align 8, !dbg !9531
  %12 = load i32, i32* %mode, align 4, !dbg !9532
  %conv = trunc i32 %12 to i16, !dbg !9532
  call void @moxafunc(i8* %11, i16 zeroext 21, i16 zeroext %conv) #12, !dbg !9533
  ret void, !dbg !9534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @MoxaPortSetTermio(%struct.moxa_port* %port, %struct.ktermios* %termio, i32 %baud) #3 !dbg !9535 {
entry:
  %lock.addr.i68 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i68, metadata !6052, metadata !DIExpression()), !dbg !9538
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6056, metadata !DIExpression()), !dbg !9542
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.moxa_port*, align 8
  %termio.addr = alloca %struct.ktermios*, align 8
  %baud.addr = alloca i32, align 4
  %ofsAddr = alloca i8*, align 8
  %mode = alloca i32, align 4
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !9544, metadata !DIExpression()), !dbg !9545
  store %struct.ktermios* %termio, %struct.ktermios** %termio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %termio.addr, metadata !9546, metadata !DIExpression()), !dbg !9547
  store i32 %baud, i32* %baud.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baud.addr, metadata !9548, metadata !DIExpression()), !dbg !9549
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !9550, metadata !DIExpression()), !dbg !9551
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !9552, metadata !DIExpression()), !dbg !9553
  store i32 0, i32* %mode, align 4, !dbg !9553
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9554
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !9555
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !9555
  store i8* %1, i8** %ofsAddr, align 8, !dbg !9556
  %2 = load %struct.ktermios*, %struct.ktermios** %termio.addr, align 8, !dbg !9557
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %2, i32 0, i32 2, !dbg !9558
  %3 = load i32, i32* %c_cflag, align 4, !dbg !9558
  %and = and i32 %3, 48, !dbg !9559
  store i32 %and, i32* %mode, align 4, !dbg !9560
  %4 = load i32, i32* %mode, align 4, !dbg !9561
  %cmp = icmp eq i32 %4, 0, !dbg !9563
  br i1 %cmp, label %if.then, label %if.else, !dbg !9564

if.then:                                          ; preds = %entry
  store i32 0, i32* %mode, align 4, !dbg !9565
  br label %if.end11, !dbg !9566

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %mode, align 4, !dbg !9567
  %cmp1 = icmp eq i32 %5, 16, !dbg !9569
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !9570

if.then2:                                         ; preds = %if.else
  store i32 1, i32* %mode, align 4, !dbg !9571
  br label %if.end10, !dbg !9572

if.else3:                                         ; preds = %if.else
  %6 = load i32, i32* %mode, align 4, !dbg !9573
  %cmp4 = icmp eq i32 %6, 32, !dbg !9575
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !9576

if.then5:                                         ; preds = %if.else3
  store i32 2, i32* %mode, align 4, !dbg !9577
  br label %if.end9, !dbg !9578

if.else6:                                         ; preds = %if.else3
  %7 = load i32, i32* %mode, align 4, !dbg !9579
  %cmp7 = icmp eq i32 %7, 48, !dbg !9581
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !9582

if.then8:                                         ; preds = %if.else6
  store i32 3, i32* %mode, align 4, !dbg !9583
  br label %if.end, !dbg !9584

if.end:                                           ; preds = %if.then8, %if.else6
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then5
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then2
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then
  %8 = load %struct.ktermios*, %struct.ktermios** %termio.addr, align 8, !dbg !9585
  %c_cflag12 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %8, i32 0, i32 2, !dbg !9587
  %9 = load i32, i32* %c_cflag12, align 4, !dbg !9587
  %and13 = and i32 %9, 64, !dbg !9588
  %tobool = icmp ne i32 %and13, 0, !dbg !9588
  br i1 %tobool, label %if.then14, label %if.else20, !dbg !9589

if.then14:                                        ; preds = %if.end11
  %10 = load i32, i32* %mode, align 4, !dbg !9590
  %cmp15 = icmp eq i32 %10, 0, !dbg !9593
  br i1 %cmp15, label %if.then16, label %if.else17, !dbg !9594

if.then16:                                        ; preds = %if.then14
  %11 = load i32, i32* %mode, align 4, !dbg !9595
  %or = or i32 %11, 4, !dbg !9595
  store i32 %or, i32* %mode, align 4, !dbg !9595
  br label %if.end19, !dbg !9596

if.else17:                                        ; preds = %if.then14
  %12 = load i32, i32* %mode, align 4, !dbg !9597
  %or18 = or i32 %12, 8, !dbg !9597
  store i32 %or18, i32* %mode, align 4, !dbg !9597
  br label %if.end19

if.end19:                                         ; preds = %if.else17, %if.then16
  br label %if.end21, !dbg !9598

if.else20:                                        ; preds = %if.end11
  %13 = load i32, i32* %mode, align 4, !dbg !9599
  store i32 %13, i32* %mode, align 4, !dbg !9599
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.end19
  %14 = load %struct.ktermios*, %struct.ktermios** %termio.addr, align 8, !dbg !9600
  %c_cflag22 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %14, i32 0, i32 2, !dbg !9602
  %15 = load i32, i32* %c_cflag22, align 4, !dbg !9602
  %and23 = and i32 %15, 256, !dbg !9603
  %tobool24 = icmp ne i32 %and23, 0, !dbg !9603
  br i1 %tobool24, label %if.then25, label %if.else48, !dbg !9604

if.then25:                                        ; preds = %if.end21
  %16 = load %struct.ktermios*, %struct.ktermios** %termio.addr, align 8, !dbg !9605
  %c_cflag26 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %16, i32 0, i32 2, !dbg !9608
  %17 = load i32, i32* %c_cflag26, align 4, !dbg !9608
  %and27 = and i32 %17, 512, !dbg !9609
  %tobool28 = icmp ne i32 %and27, 0, !dbg !9609
  br i1 %tobool28, label %if.then29, label %if.else38, !dbg !9610

if.then29:                                        ; preds = %if.then25
  %18 = load %struct.ktermios*, %struct.ktermios** %termio.addr, align 8, !dbg !9611
  %c_cflag30 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %18, i32 0, i32 2, !dbg !9614
  %19 = load i32, i32* %c_cflag30, align 4, !dbg !9614
  %and31 = and i32 %19, 1073741824, !dbg !9615
  %tobool32 = icmp ne i32 %and31, 0, !dbg !9615
  br i1 %tobool32, label %if.then33, label %if.else35, !dbg !9616

if.then33:                                        ; preds = %if.then29
  %20 = load i32, i32* %mode, align 4, !dbg !9617
  %or34 = or i32 %20, 160, !dbg !9617
  store i32 %or34, i32* %mode, align 4, !dbg !9617
  br label %if.end37, !dbg !9618

if.else35:                                        ; preds = %if.then29
  %21 = load i32, i32* %mode, align 4, !dbg !9619
  %or36 = or i32 %21, 192, !dbg !9619
  store i32 %or36, i32* %mode, align 4, !dbg !9619
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then33
  br label %if.end47, !dbg !9620

if.else38:                                        ; preds = %if.then25
  %22 = load %struct.ktermios*, %struct.ktermios** %termio.addr, align 8, !dbg !9621
  %c_cflag39 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %22, i32 0, i32 2, !dbg !9624
  %23 = load i32, i32* %c_cflag39, align 4, !dbg !9624
  %and40 = and i32 %23, 1073741824, !dbg !9625
  %tobool41 = icmp ne i32 %and40, 0, !dbg !9625
  br i1 %tobool41, label %if.then42, label %if.else44, !dbg !9626

if.then42:                                        ; preds = %if.else38
  %24 = load i32, i32* %mode, align 4, !dbg !9627
  %or43 = or i32 %24, 32, !dbg !9627
  store i32 %or43, i32* %mode, align 4, !dbg !9627
  br label %if.end46, !dbg !9628

if.else44:                                        ; preds = %if.else38
  %25 = load i32, i32* %mode, align 4, !dbg !9629
  %or45 = or i32 %25, 64, !dbg !9629
  store i32 %or45, i32* %mode, align 4, !dbg !9629
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.then42
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end37
  br label %if.end49, !dbg !9630

if.else48:                                        ; preds = %if.end21
  %26 = load i32, i32* %mode, align 4, !dbg !9631
  store i32 %26, i32* %mode, align 4, !dbg !9631
  br label %if.end49

if.end49:                                         ; preds = %if.else48, %if.end47
  %27 = load i8*, i8** %ofsAddr, align 8, !dbg !9632
  %28 = load i32, i32* %mode, align 4, !dbg !9633
  %conv = trunc i32 %28 to i16, !dbg !9634
  call void @moxafunc(i8* %27, i16 zeroext 41, i16 zeroext %conv) #12, !dbg !9635
  %29 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9636
  %board = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %29, i32 0, i32 1, !dbg !9636
  %30 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !9636
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %30, i32 0, i32 0, !dbg !9636
  %31 = load i32, i32* %boardType, align 8, !dbg !9636
  %cmp50 = icmp eq i32 %31, 4, !dbg !9636
  br i1 %cmp50, label %land.lhs.true, label %lor.lhs.false, !dbg !9636

lor.lhs.false:                                    ; preds = %if.end49
  %32 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9636
  %board52 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %32, i32 0, i32 1, !dbg !9636
  %33 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board52, align 8, !dbg !9636
  %boardType53 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %33, i32 0, i32 0, !dbg !9636
  %34 = load i32, i32* %boardType53, align 8, !dbg !9636
  %cmp54 = icmp eq i32 %34, 3, !dbg !9636
  br i1 %cmp54, label %land.lhs.true, label %if.end59, !dbg !9638

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end49
  %35 = load i32, i32* %baud.addr, align 4, !dbg !9639
  %cmp56 = icmp uge i32 %35, 921600, !dbg !9640
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !9641

if.then58:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !9642
  br label %return, !dbg !9642

if.end59:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %36 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9643
  %37 = load i32, i32* %baud.addr, align 4, !dbg !9644
  %call = call i32 @MoxaPortSetBaud(%struct.moxa_port* %36, i32 %37) #12, !dbg !9645
  store i32 %call, i32* %baud.addr, align 4, !dbg !9646
  %38 = load %struct.ktermios*, %struct.ktermios** %termio.addr, align 8, !dbg !9647
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %38, i32 0, i32 0, !dbg !9648
  %39 = load i32, i32* %c_iflag, align 4, !dbg !9648
  %and60 = and i32 %39, 7168, !dbg !9649
  %tobool61 = icmp ne i32 %and60, 0, !dbg !9649
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !9650

if.then62:                                        ; preds = %if.end59
  store %struct.spinlock* @moxafunc_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #15, !dbg !9651
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9652, !srcloc !6078
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9653
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !9653
  %rlock.i = bitcast %union.anon.2* %41 to %struct.raw_spinlock*, !dbg !9653
  %42 = load %struct.ktermios*, %struct.ktermios** %termio.addr, align 8, !dbg !9654
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %42, i32 0, i32 5, !dbg !9655
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 8, !dbg !9654
  %43 = load i8, i8* %arrayidx, align 1, !dbg !9654
  %44 = load i8*, i8** %ofsAddr, align 8, !dbg !9656
  %add.ptr = getelementptr i8, i8* %44, i64 66, !dbg !9657
  call void @writeb(i8 zeroext %43, i8* %add.ptr) #12, !dbg !9658
  %45 = load %struct.ktermios*, %struct.ktermios** %termio.addr, align 8, !dbg !9659
  %c_cc63 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %45, i32 0, i32 5, !dbg !9660
  %arrayidx64 = getelementptr [19 x i8], [19 x i8]* %c_cc63, i64 0, i64 9, !dbg !9659
  %46 = load i8, i8* %arrayidx64, align 1, !dbg !9659
  %47 = load i8*, i8** %ofsAddr, align 8, !dbg !9661
  %add.ptr65 = getelementptr i8, i8* %47, i64 68, !dbg !9662
  call void @writeb(i8 zeroext %46, i8* %add.ptr65) #12, !dbg !9663
  %48 = load i8*, i8** %ofsAddr, align 8, !dbg !9664
  %add.ptr66 = getelementptr i8, i8* %48, i64 64, !dbg !9665
  call void @writeb(i8 zeroext 25, i8* %add.ptr66) #12, !dbg !9666
  %49 = load i8*, i8** %ofsAddr, align 8, !dbg !9667
  call void @moxa_wait_finish(i8* %49) #12, !dbg !9668
  store %struct.spinlock* @moxafunc_lock, %struct.spinlock** %lock.addr.i68, align 8
  call void @arch_local_irq_enable() #15, !dbg !9669
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9670, !srcloc !6091
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i68, align 8, !dbg !9671
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !9671
  %rlock.i69 = bitcast %union.anon.2* %51 to %struct.raw_spinlock*, !dbg !9671
  br label %if.end67, !dbg !9672

if.end67:                                         ; preds = %if.then62, %if.end59
  %52 = load i32, i32* %baud.addr, align 4, !dbg !9673
  store i32 %52, i32* %retval, align 4, !dbg !9674
  br label %return, !dbg !9674

return:                                           ; preds = %if.end67, %if.then58
  %53 = load i32, i32* %retval, align 4, !dbg !9675
  ret i32 %53, !dbg !9675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_get_baud_rate(%struct.tty_struct* %tty) #3 !dbg !9676 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9679, metadata !DIExpression()), !dbg !9680
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9681
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 15, !dbg !9682
  %call = call i32 @tty_termios_baud_rate(%struct.ktermios* %termios) #12, !dbg !9683
  ret i32 %call, !dbg !9684
}

; Function Attrs: noredzone
declare dso_local i32 @tty_termios_baud_rate(%struct.ktermios*) #2

; Function Attrs: noredzone
declare dso_local void @tty_encode_baud_rate(%struct.tty_struct*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @MoxaPortSetBaud(%struct.moxa_port* %port, i32 %baud) #3 !dbg !9685 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.moxa_port*, align 8
  %baud.addr = alloca i32, align 4
  %ofsAddr = alloca i8*, align 8
  %clock = alloca i32, align 4
  %val = alloca i32, align 4
  %max = alloca i32, align 4
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !9688, metadata !DIExpression()), !dbg !9689
  store i32 %baud, i32* %baud.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baud.addr, metadata !9690, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !9692, metadata !DIExpression()), !dbg !9693
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9694
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !9695
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !9695
  store i8* %1, i8** %ofsAddr, align 8, !dbg !9693
  call void @llvm.dbg.declare(metadata i32* %clock, metadata !9696, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9698, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.declare(metadata i32* %max, metadata !9700, metadata !DIExpression()), !dbg !9701
  %2 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9702
  %board = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %2, i32 0, i32 1, !dbg !9702
  %3 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !9702
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %3, i32 0, i32 0, !dbg !9702
  %4 = load i32, i32* %boardType, align 8, !dbg !9702
  %cmp = icmp eq i32 %4, 4, !dbg !9702
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9702

lor.rhs:                                          ; preds = %entry
  %5 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9702
  %board1 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %5, i32 0, i32 1, !dbg !9702
  %6 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board1, align 8, !dbg !9702
  %boardType2 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %6, i32 0, i32 0, !dbg !9702
  %7 = load i32, i32* %boardType2, align 8, !dbg !9702
  %cmp3 = icmp eq i32 %7, 3, !dbg !9702
  br label %lor.end, !dbg !9702

lor.end:                                          ; preds = %lor.rhs, %entry
  %8 = phi i1 [ true, %entry ], [ %cmp3, %lor.rhs ]
  %9 = zext i1 %8 to i64, !dbg !9702
  %cond = select i1 %8, i32 460800, i32 921600, !dbg !9702
  store i32 %cond, i32* %max, align 4, !dbg !9703
  %10 = load i32, i32* %baud.addr, align 4, !dbg !9704
  %cmp4 = icmp ult i32 %10, 50, !dbg !9706
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9707

if.then:                                          ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !9708
  br label %return, !dbg !9708

if.end:                                           ; preds = %lor.end
  %11 = load i32, i32* %baud.addr, align 4, !dbg !9709
  %12 = load i32, i32* %max, align 4, !dbg !9711
  %cmp5 = icmp ugt i32 %11, %12, !dbg !9712
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !9713

if.then6:                                         ; preds = %if.end
  %13 = load i32, i32* %max, align 4, !dbg !9714
  store i32 %13, i32* %baud.addr, align 4, !dbg !9715
  br label %if.end7, !dbg !9716

if.end7:                                          ; preds = %if.then6, %if.end
  store i32 921600, i32* %clock, align 4, !dbg !9717
  %14 = load i32, i32* %clock, align 4, !dbg !9718
  %15 = load i32, i32* %baud.addr, align 4, !dbg !9719
  %div = udiv i32 %14, %15, !dbg !9720
  store i32 %div, i32* %val, align 4, !dbg !9721
  %16 = load i8*, i8** %ofsAddr, align 8, !dbg !9722
  %17 = load i32, i32* %val, align 4, !dbg !9723
  %conv = trunc i32 %17 to i16, !dbg !9723
  call void @moxafunc(i8* %16, i16 zeroext 36, i16 zeroext %conv) #12, !dbg !9724
  %18 = load i32, i32* %clock, align 4, !dbg !9725
  %19 = load i32, i32* %val, align 4, !dbg !9726
  %div8 = udiv i32 %18, %19, !dbg !9727
  store i32 %div8, i32* %baud.addr, align 4, !dbg !9728
  %20 = load i32, i32* %baud.addr, align 4, !dbg !9729
  store i32 %20, i32* %retval, align 4, !dbg !9730
  br label %return, !dbg !9730

return:                                           ; preds = %if.end7, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !9731
  ret i32 %21, !dbg !9731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @MoxaPortLineStatus(%struct.moxa_port* %port) #3 !dbg !9732 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %ofsAddr = alloca i8*, align 8
  %val = alloca i32, align 4
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !9733, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !9735, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9737, metadata !DIExpression()), !dbg !9738
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9739
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !9740
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !9740
  store i8* %1, i8** %ofsAddr, align 8, !dbg !9741
  %2 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9742
  %board = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %2, i32 0, i32 1, !dbg !9742
  %3 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !9742
  %boardType = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %3, i32 0, i32 0, !dbg !9742
  %4 = load i32, i32* %boardType, align 8, !dbg !9742
  %cmp = icmp eq i32 %4, 4, !dbg !9742
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9742

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9742
  %board1 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %5, i32 0, i32 1, !dbg !9742
  %6 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board1, align 8, !dbg !9742
  %boardType2 = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %6, i32 0, i32 0, !dbg !9742
  %7 = load i32, i32* %boardType2, align 8, !dbg !9742
  %cmp3 = icmp eq i32 %7, 3, !dbg !9742
  br i1 %cmp3, label %if.then, label %if.else, !dbg !9744

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load i8*, i8** %ofsAddr, align 8, !dbg !9745
  %call = call i32 @moxafuncret(i8* %8, i16 zeroext 8, i16 zeroext 0) #12, !dbg !9746
  store i32 %call, i32* %val, align 4, !dbg !9747
  br label %if.end, !dbg !9748

if.else:                                          ; preds = %lor.lhs.false
  %9 = load i8*, i8** %ofsAddr, align 8, !dbg !9749
  %add.ptr = getelementptr i8, i8* %9, i64 10, !dbg !9750
  %call4 = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !9751
  %conv = zext i16 %call4 to i32, !dbg !9751
  %shr = ashr i32 %conv, 4, !dbg !9752
  store i32 %shr, i32* %val, align 4, !dbg !9753
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %val, align 4, !dbg !9754
  %and = and i32 %10, 11, !dbg !9754
  store i32 %and, i32* %val, align 4, !dbg !9754
  %11 = load i32, i32* %val, align 4, !dbg !9755
  %and5 = and i32 %11, 8, !dbg !9757
  %tobool = icmp ne i32 %and5, 0, !dbg !9757
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !9758

if.then6:                                         ; preds = %if.end
  %12 = load i32, i32* %val, align 4, !dbg !9759
  %or = or i32 %12, 4, !dbg !9759
  store i32 %or, i32* %val, align 4, !dbg !9759
  br label %if.end7, !dbg !9760

if.end7:                                          ; preds = %if.then6, %if.end
  %13 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !9761
  %14 = load i32, i32* %val, align 4, !dbg !9762
  %and8 = and i32 %14, 8, !dbg !9763
  %conv9 = trunc i32 %and8 to i8, !dbg !9762
  call void @moxa_new_dcdstate(%struct.moxa_port* %13, i8 zeroext %conv9) #12, !dbg !9764
  %15 = load i32, i32* %val, align 4, !dbg !9765
  %and10 = and i32 %15, 7, !dbg !9765
  store i32 %and10, i32* %val, align 4, !dbg !9765
  %16 = load i32, i32* %val, align 4, !dbg !9766
  ret i32 %16, !dbg !9767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @moxafuncret(i8* %ofsAddr, i16 zeroext %cmd, i16 zeroext %arg) #3 !dbg !9768 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !6182, metadata !DIExpression()), !dbg !9771
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6188, metadata !DIExpression()), !dbg !9773
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6190, metadata !DIExpression()), !dbg !9774
  %ofsAddr.addr = alloca i8*, align 8
  %cmd.addr = alloca i16, align 2
  %arg.addr = alloca i16, align 2
  %flags = alloca i64, align 8
  %ret = alloca i16, align 2
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i8* %ofsAddr, i8** %ofsAddr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ofsAddr.addr, metadata !9781, metadata !DIExpression()), !dbg !9782
  store i16 %cmd, i16* %cmd.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cmd.addr, metadata !9783, metadata !DIExpression()), !dbg !9784
  store i16 %arg, i16* %arg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %arg.addr, metadata !9785, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9787, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !9789, metadata !DIExpression()), !dbg !9790
  br label %do.body, !dbg !9791

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9792

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9793, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9796, metadata !DIExpression()), !dbg !9795
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9795
  %conv = zext i1 %cmp to i32, !dbg !9795
  store i32 1, i32* %tmp, align 4, !dbg !9795
  %0 = load i32, i32* %tmp, align 4, !dbg !9795
  br label %do.body2, !dbg !9797

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9798

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9799

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9801, metadata !DIExpression()), !dbg !9804
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9805, metadata !DIExpression()), !dbg !9804
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9804
  %conv8 = zext i1 %cmp7 to i32, !dbg !9804
  store i32 1, i32* %tmp9, align 4, !dbg !9804
  %1 = load i32, i32* %tmp9, align 4, !dbg !9804
  %call = call i64 @arch_local_irq_save() #12, !dbg !9806
  store i64 %call, i64* %flags, align 8, !dbg !9806
  br label %do.end, !dbg !9806

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9799

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9798

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9807, !srcloc !9808
  br label %do.body12, !dbg !9807

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @moxafunc_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9809
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !9810
  %rlock.i = bitcast %union.anon.2* %3 to %struct.raw_spinlock*, !dbg !9810
  br label %do.end14, !dbg !9811

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9807

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9798

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9797

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9792

do.end18:                                         ; preds = %do.end17
  %4 = load i16, i16* %arg.addr, align 2, !dbg !9812
  %5 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !9813
  %add.ptr = getelementptr i8, i8* %5, i64 66, !dbg !9814
  call void @writew(i16 zeroext %4, i8* %add.ptr) #12, !dbg !9815
  %6 = load i16, i16* %cmd.addr, align 2, !dbg !9816
  %7 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !9817
  %add.ptr19 = getelementptr i8, i8* %7, i64 64, !dbg !9818
  call void @writew(i16 zeroext %6, i8* %add.ptr19) #12, !dbg !9819
  %8 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !9820
  call void @moxa_wait_finish(i8* %8) #12, !dbg !9821
  %9 = load i8*, i8** %ofsAddr.addr, align 8, !dbg !9822
  %add.ptr20 = getelementptr i8, i8* %9, i64 66, !dbg !9823
  %call21 = call zeroext i16 @readw(i8* %add.ptr20) #12, !dbg !9824
  store i16 %call21, i16* %ret, align 2, !dbg !9825
  %10 = load i64, i64* %flags, align 8, !dbg !9826
  store %struct.spinlock* @moxafunc_lock, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !199, metadata !6242, metadata !DIExpression()) #10, !dbg !9827
  call void @llvm.dbg.declare(metadata !199, metadata !6246, metadata !DIExpression()) #10, !dbg !9827
  store i32 1, i32* %tmp.i, align 4, !dbg !9827
  %11 = load i32, i32* %tmp.i, align 4, !dbg !9827
  call void @llvm.dbg.declare(metadata !199, metadata !6247, metadata !DIExpression()) #10, !dbg !9828
  call void @llvm.dbg.declare(metadata !199, metadata !6253, metadata !DIExpression()) #10, !dbg !9828
  store i32 1, i32* %tmp8.i, align 4, !dbg !9828
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !9828
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !9829
  call void @arch_local_irq_restore(i64 %13) #15, !dbg !9829
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9830, !srcloc !6257
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !9831
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !9831
  %rlock.i24 = bitcast %union.anon.2* %15 to %struct.raw_spinlock*, !dbg !9831
  %16 = load i16, i16* %ret, align 2, !dbg !9832
  %conv22 = zext i16 %16 to i32, !dbg !9832
  ret i32 %conv22, !dbg !9833
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #3 !dbg !9834 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9835, metadata !DIExpression()), !dbg !9837
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9839, metadata !DIExpression()), !dbg !9840
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7780, metadata !DIExpression()), !dbg !9841
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7784, metadata !DIExpression()), !dbg !9843
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9844, metadata !DIExpression()), !dbg !9845
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9846, metadata !DIExpression()), !dbg !9847
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9848
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9849
  %div = sdiv i64 %1, 64, !dbg !9849
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9850
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9848
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9851
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9852
  %conv.i = trunc i64 %4 to i32, !dbg !9852
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #15, !dbg !9853
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9854
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9854
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #15, !dbg !9854
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9855
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9856
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9857
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !9859
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9860

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9861
  %12 = bitcast i64* %11 to i8*, !dbg !9861
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9861
  %shr.i = ashr i64 %13, 3, !dbg !9861
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9861
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9863
  %and.i = and i64 %14, 7, !dbg !9863
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9863
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9863
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !9864, !srcloc !9865
  br label %arch_set_bit.exit, !dbg !9866

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9867
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9869
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !9870, !srcloc !9871
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9872
}

; Function Attrs: noredzone
declare dso_local void @tty_port_close(%struct.tty_port*, %struct.tty_struct*, %struct.file*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @MoxaPortWriteData(%struct.tty_struct* %tty, i8* %buffer, i32 %len) #3 !dbg !9873 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %buffer.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %port = alloca %struct.moxa_port*, align 8
  %baseAddr = alloca i8*, align 8
  %ofsAddr = alloca i8*, align 8
  %ofs = alloca i8*, align 8
  %c = alloca i32, align 4
  %total = alloca i32, align 4
  %head = alloca i16, align 2
  %tail = alloca i16, align 2
  %tx_mask = alloca i16, align 2
  %spage = alloca i16, align 2
  %epage = alloca i16, align 2
  %pageno = alloca i16, align 2
  %pageofs = alloca i16, align 2
  %bufhead = alloca i16, align 2
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9874, metadata !DIExpression()), !dbg !9875
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9876, metadata !DIExpression()), !dbg !9877
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !9878, metadata !DIExpression()), !dbg !9879
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port, metadata !9880, metadata !DIExpression()), !dbg !9881
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9882
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9883
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9883
  %2 = bitcast i8* %1 to %struct.moxa_port*, !dbg !9882
  store %struct.moxa_port* %2, %struct.moxa_port** %port, align 8, !dbg !9881
  call void @llvm.dbg.declare(metadata i8** %baseAddr, metadata !9884, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !9886, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.declare(metadata i8** %ofs, metadata !9888, metadata !DIExpression()), !dbg !9889
  call void @llvm.dbg.declare(metadata i32* %c, metadata !9890, metadata !DIExpression()), !dbg !9891
  call void @llvm.dbg.declare(metadata i32* %total, metadata !9892, metadata !DIExpression()), !dbg !9893
  call void @llvm.dbg.declare(metadata i16* %head, metadata !9894, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.declare(metadata i16* %tail, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.declare(metadata i16* %tx_mask, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.declare(metadata i16* %spage, metadata !9900, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.declare(metadata i16* %epage, metadata !9902, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.declare(metadata i16* %pageno, metadata !9904, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.declare(metadata i16* %pageofs, metadata !9906, metadata !DIExpression()), !dbg !9907
  call void @llvm.dbg.declare(metadata i16* %bufhead, metadata !9908, metadata !DIExpression()), !dbg !9909
  %3 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !9910
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %3, i32 0, i32 2, !dbg !9911
  %4 = load i8*, i8** %tableAddr, align 8, !dbg !9911
  store i8* %4, i8** %ofsAddr, align 8, !dbg !9912
  %5 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !9913
  %board = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %5, i32 0, i32 1, !dbg !9914
  %6 = load %struct.moxa_board_conf*, %struct.moxa_board_conf** %board, align 8, !dbg !9914
  %basemem = getelementptr inbounds %struct.moxa_board_conf, %struct.moxa_board_conf* %6, i32 0, i32 5, !dbg !9915
  %7 = load i8*, i8** %basemem, align 8, !dbg !9915
  store i8* %7, i8** %baseAddr, align 8, !dbg !9916
  %8 = load i8*, i8** %ofsAddr, align 8, !dbg !9917
  %add.ptr = getelementptr i8, i8* %8, i64 20, !dbg !9918
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !9919
  store i16 %call, i16* %tx_mask, align 2, !dbg !9920
  %9 = load i8*, i8** %ofsAddr, align 8, !dbg !9921
  %add.ptr1 = getelementptr i8, i8* %9, i64 28, !dbg !9922
  %call2 = call zeroext i16 @readw(i8* %add.ptr1) #12, !dbg !9923
  store i16 %call2, i16* %spage, align 2, !dbg !9924
  %10 = load i8*, i8** %ofsAddr, align 8, !dbg !9925
  %add.ptr3 = getelementptr i8, i8* %10, i64 32, !dbg !9926
  %call4 = call zeroext i16 @readw(i8* %add.ptr3) #12, !dbg !9927
  store i16 %call4, i16* %epage, align 2, !dbg !9928
  %11 = load i8*, i8** %ofsAddr, align 8, !dbg !9929
  %add.ptr5 = getelementptr i8, i8* %11, i64 6, !dbg !9930
  %call6 = call zeroext i16 @readw(i8* %add.ptr5) #12, !dbg !9931
  store i16 %call6, i16* %tail, align 2, !dbg !9932
  %12 = load i8*, i8** %ofsAddr, align 8, !dbg !9933
  %add.ptr7 = getelementptr i8, i8* %12, i64 4, !dbg !9934
  %call8 = call zeroext i16 @readw(i8* %add.ptr7) #12, !dbg !9935
  store i16 %call8, i16* %head, align 2, !dbg !9936
  %13 = load i16, i16* %head, align 2, !dbg !9937
  %conv = zext i16 %13 to i32, !dbg !9937
  %14 = load i16, i16* %tail, align 2, !dbg !9938
  %conv9 = zext i16 %14 to i32, !dbg !9938
  %cmp = icmp sgt i32 %conv, %conv9, !dbg !9939
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9940

cond.true:                                        ; preds = %entry
  %15 = load i16, i16* %head, align 2, !dbg !9941
  %conv11 = zext i16 %15 to i32, !dbg !9941
  %16 = load i16, i16* %tail, align 2, !dbg !9942
  %conv12 = zext i16 %16 to i32, !dbg !9942
  %sub = sub i32 %conv11, %conv12, !dbg !9943
  %sub13 = sub i32 %sub, 1, !dbg !9944
  br label %cond.end, !dbg !9940

cond.false:                                       ; preds = %entry
  %17 = load i16, i16* %head, align 2, !dbg !9945
  %conv14 = zext i16 %17 to i32, !dbg !9945
  %18 = load i16, i16* %tail, align 2, !dbg !9946
  %conv15 = zext i16 %18 to i32, !dbg !9946
  %sub16 = sub i32 %conv14, %conv15, !dbg !9947
  %19 = load i16, i16* %tx_mask, align 2, !dbg !9948
  %conv17 = zext i16 %19 to i32, !dbg !9948
  %add = add i32 %sub16, %conv17, !dbg !9949
  br label %cond.end, !dbg !9940

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub13, %cond.true ], [ %add, %cond.false ], !dbg !9940
  store i32 %cond, i32* %c, align 4, !dbg !9950
  %20 = load i32, i32* %c, align 4, !dbg !9951
  %21 = load i32, i32* %len.addr, align 4, !dbg !9953
  %cmp18 = icmp ugt i32 %20, %21, !dbg !9954
  br i1 %cmp18, label %if.then, label %if.end, !dbg !9955

if.then:                                          ; preds = %cond.end
  %22 = load i32, i32* %len.addr, align 4, !dbg !9956
  store i32 %22, i32* %c, align 4, !dbg !9957
  br label %if.end, !dbg !9958

if.end:                                           ; preds = %if.then, %cond.end
  %23 = load i32, i32* %c, align 4, !dbg !9959
  %24 = load %struct.moxa_port*, %struct.moxa_port** %port, align 8, !dbg !9960
  %port20 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %24, i32 0, i32 0, !dbg !9961
  %tty21 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port20, i32 0, i32 1, !dbg !9962
  %25 = load %struct.tty_struct*, %struct.tty_struct** %tty21, align 8, !dbg !9962
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %25, i32 0, i32 5, !dbg !9963
  %26 = load i32, i32* %index, align 8, !dbg !9963
  %idxprom = sext i32 %26 to i64, !dbg !9964
  %arrayidx = getelementptr [128 x i32], [128 x i32]* getelementptr inbounds (%struct.mon_str, %struct.mon_str* @moxaLog, i32 0, i32 2), i64 0, i64 %idxprom, !dbg !9964
  %27 = load i32, i32* %arrayidx, align 4, !dbg !9965
  %add22 = add i32 %27, %23, !dbg !9965
  store i32 %add22, i32* %arrayidx, align 4, !dbg !9965
  %28 = load i32, i32* %c, align 4, !dbg !9966
  store i32 %28, i32* %total, align 4, !dbg !9967
  %29 = load i16, i16* %spage, align 2, !dbg !9968
  %conv23 = zext i16 %29 to i32, !dbg !9968
  %30 = load i16, i16* %epage, align 2, !dbg !9970
  %conv24 = zext i16 %30 to i32, !dbg !9970
  %cmp25 = icmp eq i32 %conv23, %conv24, !dbg !9971
  br i1 %cmp25, label %if.then27, label %if.else67, !dbg !9972

if.then27:                                        ; preds = %if.end
  %31 = load i8*, i8** %ofsAddr, align 8, !dbg !9973
  %add.ptr28 = getelementptr i8, i8* %31, i64 24, !dbg !9975
  %call29 = call zeroext i16 @readw(i8* %add.ptr28) #12, !dbg !9976
  store i16 %call29, i16* %bufhead, align 2, !dbg !9977
  %32 = load i16, i16* %spage, align 2, !dbg !9978
  %33 = load i8*, i8** %baseAddr, align 8, !dbg !9979
  %add.ptr30 = getelementptr i8, i8* %33, i64 8176, !dbg !9980
  call void @writew(i16 zeroext %32, i8* %add.ptr30) #12, !dbg !9981
  br label %while.cond, !dbg !9982

while.cond:                                       ; preds = %cond.end51, %if.then27
  %34 = load i32, i32* %c, align 4, !dbg !9983
  %cmp31 = icmp ugt i32 %34, 0, !dbg !9984
  br i1 %cmp31, label %while.body, label %while.end, !dbg !9982

while.body:                                       ; preds = %while.cond
  %35 = load i16, i16* %head, align 2, !dbg !9985
  %conv33 = zext i16 %35 to i32, !dbg !9985
  %36 = load i16, i16* %tail, align 2, !dbg !9988
  %conv34 = zext i16 %36 to i32, !dbg !9988
  %cmp35 = icmp sgt i32 %conv33, %conv34, !dbg !9989
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !9990

if.then37:                                        ; preds = %while.body
  %37 = load i16, i16* %head, align 2, !dbg !9991
  %conv38 = zext i16 %37 to i32, !dbg !9991
  %38 = load i16, i16* %tail, align 2, !dbg !9992
  %conv39 = zext i16 %38 to i32, !dbg !9992
  %sub40 = sub i32 %conv38, %conv39, !dbg !9993
  %sub41 = sub i32 %sub40, 1, !dbg !9994
  store i32 %sub41, i32* %len.addr, align 4, !dbg !9995
  br label %if.end46, !dbg !9996

if.else:                                          ; preds = %while.body
  %39 = load i16, i16* %tx_mask, align 2, !dbg !9997
  %conv42 = zext i16 %39 to i32, !dbg !9997
  %add43 = add i32 %conv42, 1, !dbg !9998
  %40 = load i16, i16* %tail, align 2, !dbg !9999
  %conv44 = zext i16 %40 to i32, !dbg !9999
  %sub45 = sub i32 %add43, %conv44, !dbg !10000
  store i32 %sub45, i32* %len.addr, align 4, !dbg !10001
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then37
  %41 = load i32, i32* %c, align 4, !dbg !10002
  %42 = load i32, i32* %len.addr, align 4, !dbg !10003
  %cmp47 = icmp ugt i32 %41, %42, !dbg !10004
  br i1 %cmp47, label %cond.true49, label %cond.false50, !dbg !10005

cond.true49:                                      ; preds = %if.end46
  %43 = load i32, i32* %len.addr, align 4, !dbg !10006
  br label %cond.end51, !dbg !10005

cond.false50:                                     ; preds = %if.end46
  %44 = load i32, i32* %c, align 4, !dbg !10007
  br label %cond.end51, !dbg !10005

cond.end51:                                       ; preds = %cond.false50, %cond.true49
  %cond52 = phi i32 [ %43, %cond.true49 ], [ %44, %cond.false50 ], !dbg !10005
  store i32 %cond52, i32* %len.addr, align 4, !dbg !10008
  %45 = load i8*, i8** %baseAddr, align 8, !dbg !10009
  %add.ptr53 = getelementptr i8, i8* %45, i64 8192, !dbg !10010
  %46 = load i16, i16* %bufhead, align 2, !dbg !10011
  %conv54 = zext i16 %46 to i32, !dbg !10011
  %idx.ext = sext i32 %conv54 to i64, !dbg !10012
  %add.ptr55 = getelementptr i8, i8* %add.ptr53, i64 %idx.ext, !dbg !10012
  %47 = load i16, i16* %tail, align 2, !dbg !10013
  %conv56 = zext i16 %47 to i32, !dbg !10013
  %idx.ext57 = sext i32 %conv56 to i64, !dbg !10014
  %add.ptr58 = getelementptr i8, i8* %add.ptr55, i64 %idx.ext57, !dbg !10014
  store i8* %add.ptr58, i8** %ofs, align 8, !dbg !10015
  %48 = load i8*, i8** %ofs, align 8, !dbg !10016
  %49 = load i8*, i8** %buffer.addr, align 8, !dbg !10017
  %50 = load i32, i32* %len.addr, align 4, !dbg !10018
  %conv59 = sext i32 %50 to i64, !dbg !10018
  call void @memcpy_toio(i8* %48, i8* %49, i64 %conv59) #12, !dbg !10019
  %51 = load i32, i32* %len.addr, align 4, !dbg !10020
  %52 = load i8*, i8** %buffer.addr, align 8, !dbg !10021
  %idx.ext60 = sext i32 %51 to i64, !dbg !10021
  %add.ptr61 = getelementptr i8, i8* %52, i64 %idx.ext60, !dbg !10021
  store i8* %add.ptr61, i8** %buffer.addr, align 8, !dbg !10021
  %53 = load i16, i16* %tail, align 2, !dbg !10022
  %conv62 = zext i16 %53 to i32, !dbg !10022
  %54 = load i32, i32* %len.addr, align 4, !dbg !10023
  %add63 = add i32 %conv62, %54, !dbg !10024
  %55 = load i16, i16* %tx_mask, align 2, !dbg !10025
  %conv64 = zext i16 %55 to i32, !dbg !10025
  %and = and i32 %add63, %conv64, !dbg !10026
  %conv65 = trunc i32 %and to i16, !dbg !10027
  store i16 %conv65, i16* %tail, align 2, !dbg !10028
  %56 = load i32, i32* %len.addr, align 4, !dbg !10029
  %57 = load i32, i32* %c, align 4, !dbg !10030
  %sub66 = sub i32 %57, %56, !dbg !10030
  store i32 %sub66, i32* %c, align 4, !dbg !10030
  br label %while.cond, !dbg !9982, !llvm.loop !10031

while.end:                                        ; preds = %while.cond
  br label %if.end107, !dbg !10033

if.else67:                                        ; preds = %if.end
  %58 = load i16, i16* %spage, align 2, !dbg !10034
  %conv68 = zext i16 %58 to i32, !dbg !10034
  %59 = load i16, i16* %tail, align 2, !dbg !10036
  %conv69 = zext i16 %59 to i32, !dbg !10036
  %shr = ashr i32 %conv69, 13, !dbg !10037
  %add70 = add i32 %conv68, %shr, !dbg !10038
  %conv71 = trunc i32 %add70 to i16, !dbg !10034
  store i16 %conv71, i16* %pageno, align 2, !dbg !10039
  %60 = load i16, i16* %tail, align 2, !dbg !10040
  %conv72 = zext i16 %60 to i32, !dbg !10040
  %and73 = and i32 %conv72, 8191, !dbg !10041
  %conv74 = trunc i32 %and73 to i16, !dbg !10040
  store i16 %conv74, i16* %pageofs, align 2, !dbg !10042
  br label %while.cond75, !dbg !10043

while.cond75:                                     ; preds = %if.end99, %if.else67
  %61 = load i32, i32* %c, align 4, !dbg !10044
  %cmp76 = icmp ugt i32 %61, 0, !dbg !10045
  br i1 %cmp76, label %while.body78, label %while.end101, !dbg !10043

while.body78:                                     ; preds = %while.cond75
  %62 = load i16, i16* %pageofs, align 2, !dbg !10046
  %conv79 = zext i16 %62 to i32, !dbg !10046
  %sub80 = sub i32 8192, %conv79, !dbg !10048
  store i32 %sub80, i32* %len.addr, align 4, !dbg !10049
  %63 = load i32, i32* %len.addr, align 4, !dbg !10050
  %64 = load i32, i32* %c, align 4, !dbg !10052
  %cmp81 = icmp ugt i32 %63, %64, !dbg !10053
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !10054

if.then83:                                        ; preds = %while.body78
  %65 = load i32, i32* %c, align 4, !dbg !10055
  store i32 %65, i32* %len.addr, align 4, !dbg !10056
  br label %if.end84, !dbg !10057

if.end84:                                         ; preds = %if.then83, %while.body78
  %66 = load i16, i16* %pageno, align 2, !dbg !10058
  %conv85 = trunc i16 %66 to i8, !dbg !10058
  %67 = load i8*, i8** %baseAddr, align 8, !dbg !10059
  %add.ptr86 = getelementptr i8, i8* %67, i64 8176, !dbg !10060
  call void @writeb(i8 zeroext %conv85, i8* %add.ptr86) #12, !dbg !10061
  %68 = load i8*, i8** %baseAddr, align 8, !dbg !10062
  %add.ptr87 = getelementptr i8, i8* %68, i64 8192, !dbg !10063
  %69 = load i16, i16* %pageofs, align 2, !dbg !10064
  %conv88 = zext i16 %69 to i32, !dbg !10064
  %idx.ext89 = sext i32 %conv88 to i64, !dbg !10065
  %add.ptr90 = getelementptr i8, i8* %add.ptr87, i64 %idx.ext89, !dbg !10065
  store i8* %add.ptr90, i8** %ofs, align 8, !dbg !10066
  %70 = load i8*, i8** %ofs, align 8, !dbg !10067
  %71 = load i8*, i8** %buffer.addr, align 8, !dbg !10068
  %72 = load i32, i32* %len.addr, align 4, !dbg !10069
  %conv91 = sext i32 %72 to i64, !dbg !10069
  call void @memcpy_toio(i8* %70, i8* %71, i64 %conv91) #12, !dbg !10070
  %73 = load i32, i32* %len.addr, align 4, !dbg !10071
  %74 = load i8*, i8** %buffer.addr, align 8, !dbg !10072
  %idx.ext92 = sext i32 %73 to i64, !dbg !10072
  %add.ptr93 = getelementptr i8, i8* %74, i64 %idx.ext92, !dbg !10072
  store i8* %add.ptr93, i8** %buffer.addr, align 8, !dbg !10072
  %75 = load i16, i16* %pageno, align 2, !dbg !10073
  %inc = add i16 %75, 1, !dbg !10073
  store i16 %inc, i16* %pageno, align 2, !dbg !10073
  %conv94 = zext i16 %inc to i32, !dbg !10073
  %76 = load i16, i16* %epage, align 2, !dbg !10075
  %conv95 = zext i16 %76 to i32, !dbg !10075
  %cmp96 = icmp eq i32 %conv94, %conv95, !dbg !10076
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !10077

if.then98:                                        ; preds = %if.end84
  %77 = load i16, i16* %spage, align 2, !dbg !10078
  store i16 %77, i16* %pageno, align 2, !dbg !10079
  br label %if.end99, !dbg !10080

if.end99:                                         ; preds = %if.then98, %if.end84
  store i16 0, i16* %pageofs, align 2, !dbg !10081
  %78 = load i32, i32* %len.addr, align 4, !dbg !10082
  %79 = load i32, i32* %c, align 4, !dbg !10083
  %sub100 = sub i32 %79, %78, !dbg !10083
  store i32 %sub100, i32* %c, align 4, !dbg !10083
  br label %while.cond75, !dbg !10043, !llvm.loop !10084

while.end101:                                     ; preds = %while.cond75
  %80 = load i16, i16* %tail, align 2, !dbg !10086
  %conv102 = zext i16 %80 to i32, !dbg !10086
  %81 = load i32, i32* %total, align 4, !dbg !10087
  %add103 = add i32 %conv102, %81, !dbg !10088
  %82 = load i16, i16* %tx_mask, align 2, !dbg !10089
  %conv104 = zext i16 %82 to i32, !dbg !10089
  %and105 = and i32 %add103, %conv104, !dbg !10090
  %conv106 = trunc i32 %and105 to i16, !dbg !10091
  store i16 %conv106, i16* %tail, align 2, !dbg !10092
  br label %if.end107

if.end107:                                        ; preds = %while.end101, %while.end
  %83 = load i16, i16* %tail, align 2, !dbg !10093
  %84 = load i8*, i8** %ofsAddr, align 8, !dbg !10094
  %add.ptr108 = getelementptr i8, i8* %84, i64 6, !dbg !10095
  call void @writew(i16 zeroext %83, i8* %add.ptr108) #12, !dbg !10096
  %85 = load i8*, i8** %ofsAddr, align 8, !dbg !10097
  %add.ptr109 = getelementptr i8, i8* %85, i64 16, !dbg !10098
  call void @writeb(i8 zeroext 1, i8* %add.ptr109) #12, !dbg !10099
  %86 = load i32, i32* %total, align 4, !dbg !10100
  ret i32 %86, !dbg !10101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @MoxaPortTxFree(%struct.moxa_port* %port) #3 !dbg !10102 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %ofsAddr = alloca i8*, align 8
  %rptr = alloca i16, align 2
  %wptr = alloca i16, align 2
  %mask = alloca i16, align 2
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !10103, metadata !DIExpression()), !dbg !10104
  call void @llvm.dbg.declare(metadata i8** %ofsAddr, metadata !10105, metadata !DIExpression()), !dbg !10106
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !10107
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !10108
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !10108
  store i8* %1, i8** %ofsAddr, align 8, !dbg !10106
  call void @llvm.dbg.declare(metadata i16* %rptr, metadata !10109, metadata !DIExpression()), !dbg !10110
  call void @llvm.dbg.declare(metadata i16* %wptr, metadata !10111, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.declare(metadata i16* %mask, metadata !10113, metadata !DIExpression()), !dbg !10114
  %2 = load i8*, i8** %ofsAddr, align 8, !dbg !10115
  %add.ptr = getelementptr i8, i8* %2, i64 4, !dbg !10116
  %call = call zeroext i16 @readw(i8* %add.ptr) #12, !dbg !10117
  store i16 %call, i16* %rptr, align 2, !dbg !10118
  %3 = load i8*, i8** %ofsAddr, align 8, !dbg !10119
  %add.ptr1 = getelementptr i8, i8* %3, i64 6, !dbg !10120
  %call2 = call zeroext i16 @readw(i8* %add.ptr1) #12, !dbg !10121
  store i16 %call2, i16* %wptr, align 2, !dbg !10122
  %4 = load i8*, i8** %ofsAddr, align 8, !dbg !10123
  %add.ptr3 = getelementptr i8, i8* %4, i64 20, !dbg !10124
  %call4 = call zeroext i16 @readw(i8* %add.ptr3) #12, !dbg !10125
  store i16 %call4, i16* %mask, align 2, !dbg !10126
  %5 = load i16, i16* %mask, align 2, !dbg !10127
  %conv = zext i16 %5 to i32, !dbg !10127
  %6 = load i16, i16* %wptr, align 2, !dbg !10128
  %conv5 = zext i16 %6 to i32, !dbg !10128
  %7 = load i16, i16* %rptr, align 2, !dbg !10129
  %conv6 = zext i16 %7 to i32, !dbg !10129
  %sub = sub i32 %conv5, %conv6, !dbg !10130
  %8 = load i16, i16* %mask, align 2, !dbg !10131
  %conv7 = zext i16 %8 to i32, !dbg !10131
  %and = and i32 %sub, %conv7, !dbg !10132
  %sub8 = sub i32 %conv, %and, !dbg !10133
  ret i32 %sub8, !dbg !10134
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #3 !dbg !10135 {
entry:
  ret void, !dbg !10137
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #3 !dbg !10138 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10141, metadata !DIExpression()), !dbg !10142
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10143, metadata !DIExpression()), !dbg !10144
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10145, metadata !DIExpression()), !dbg !10147
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !10147
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !10148
  %tobool = icmp ne i32 %0, 0, !dbg !10148
  %lnot = xor i1 %tobool, true, !dbg !10148
  %lnot1 = xor i1 %lnot, true, !dbg !10148
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10148
  %conv = sext i32 %lnot.ext to i64, !dbg !10148
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10148
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10147

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10148

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !10150

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !10152

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !10150
  %2 = load i64, i64* %count.addr, align 8, !dbg !10150
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0), i32 %1, i64 %2) #12, !dbg !10150
  br label %do.body4, !dbg !10150

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !10154

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !10156

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !10154

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 134, i32 2313, i64 12) #10, !dbg !10158, !srcloc !10160
  br label %do.end8, !dbg !10158

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #10, !dbg !10161, !srcloc !10163
  br label %do.body9, !dbg !10154

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !10164

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !10154

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !10150

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !10166

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !10150

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !10150

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !10147
  %tobool15 = icmp ne i32 %3, 0, !dbg !10147
  %lnot16 = xor i1 %tobool15, true, !dbg !10147
  %lnot18 = xor i1 %lnot16, true, !dbg !10147
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !10147
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !10147
  store i64 %conv20, i64* %tmp, align 8, !dbg !10148
  %4 = load i64, i64* %tmp, align 8, !dbg !10147
  ret void, !dbg !10168
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #3 !dbg !10169 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !10176, metadata !DIExpression()), !dbg !10177
  ret void, !dbg !10178
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @MoxaPortTxDisable(%struct.moxa_port* %port) #3 !dbg !10179 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !10180, metadata !DIExpression()), !dbg !10181
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !10182
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !10183
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !10183
  call void @moxafunc(i8* %1, i16 zeroext 53, i16 zeroext 1028) #12, !dbg !10184
  ret void, !dbg !10185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @MoxaPortTxEnable(%struct.moxa_port* %port) #3 !dbg !10186 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !10187, metadata !DIExpression()), !dbg !10188
  %0 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !10189
  %tableAddr = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %0, i32 0, i32 2, !dbg !10190
  %1 = load i8*, i8** %tableAddr, align 8, !dbg !10190
  call void @moxafunc(i8* %1, i16 zeroext 52, i16 zeroext 1028) #12, !dbg !10191
  ret void, !dbg !10192
}

; Function Attrs: noredzone
declare dso_local void @tty_port_hangup(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @MoxaPortGetLineOut(%struct.moxa_port* %port, i32* %dtrState, i32* %rtsState) #3 !dbg !10193 {
entry:
  %port.addr = alloca %struct.moxa_port*, align 8
  %dtrState.addr = alloca i32*, align 8
  %rtsState.addr = alloca i32*, align 8
  store %struct.moxa_port* %port, %struct.moxa_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.moxa_port** %port.addr, metadata !10196, metadata !DIExpression()), !dbg !10197
  store i32* %dtrState, i32** %dtrState.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dtrState.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  store i32* %rtsState, i32** %rtsState.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rtsState.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  %0 = load i32*, i32** %dtrState.addr, align 8, !dbg !10202
  %tobool = icmp ne i32* %0, null, !dbg !10202
  br i1 %tobool, label %if.then, label %if.end, !dbg !10204

if.then:                                          ; preds = %entry
  %1 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !10205
  %lineCtrl = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %1, i32 0, i32 7, !dbg !10206
  %2 = load i8, i8* %lineCtrl, align 1, !dbg !10206
  %conv = zext i8 %2 to i32, !dbg !10205
  %and = and i32 %conv, 1, !dbg !10207
  %tobool1 = icmp ne i32 %and, 0, !dbg !10208
  %lnot = xor i1 %tobool1, true, !dbg !10208
  %lnot2 = xor i1 %lnot, true, !dbg !10209
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10209
  %3 = load i32*, i32** %dtrState.addr, align 8, !dbg !10210
  store i32 %lnot.ext, i32* %3, align 4, !dbg !10211
  br label %if.end, !dbg !10212

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32*, i32** %rtsState.addr, align 8, !dbg !10213
  %tobool3 = icmp ne i32* %4, null, !dbg !10213
  br i1 %tobool3, label %if.then4, label %if.end13, !dbg !10215

if.then4:                                         ; preds = %if.end
  %5 = load %struct.moxa_port*, %struct.moxa_port** %port.addr, align 8, !dbg !10216
  %lineCtrl5 = getelementptr inbounds %struct.moxa_port, %struct.moxa_port* %5, i32 0, i32 7, !dbg !10217
  %6 = load i8, i8* %lineCtrl5, align 1, !dbg !10217
  %conv6 = zext i8 %6 to i32, !dbg !10216
  %and7 = and i32 %conv6, 2, !dbg !10218
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10219
  %lnot9 = xor i1 %tobool8, true, !dbg !10219
  %lnot11 = xor i1 %lnot9, true, !dbg !10220
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !10220
  %7 = load i32*, i32** %rtsState.addr, align 8, !dbg !10221
  store i32 %lnot.ext12, i32* %7, align 4, !dbg !10222
  br label %if.end13, !dbg !10223

if.end13:                                         ; preds = %if.then4, %if.end
  ret i32 0, !dbg !10224
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { alwaysinline noredzone nounwind sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { argmemonly nounwind willreturn }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4715}
!llvm.module.flags = !{!4716, !4717, !4718, !4719}
!llvm.ident = !{!4720}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author240", scope: !2, file: !3, line: 169, type: !4712, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !112, globals: !4250, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/tty/moxa.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !100, !107}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !94, line: 305, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99}
!96 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 69, baseType: !7, size: 32, elements: !101)
!101 = !{!102, !103, !104, !105, !106}
!102 = !DIEnumerator(name: "MOXA_BOARD_C218_PCI", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "MOXA_BOARD_C218_ISA", value: 2, isUnsigned: true)
!104 = !DIEnumerator(name: "MOXA_BOARD_C320_PCI", value: 3, isUnsigned: true)
!105 = !DIEnumerator(name: "MOXA_BOARD_C320_ISA", value: 4, isUnsigned: true)
!106 = !DIEnumerator(name: "MOXA_BOARD_CP204J", value: 5, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !108, line: 10, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111}
!110 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!112 = !{!113, !114, !116, !148, !4237, !311, !4239, !4241, !412, !141, !880, !4242, !411, !4243, !4246, !4247, !4249, !276, !4055, !625, !879}
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !115, line: 148, baseType: !7)
!115 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moxa_port", file: !3, line: 129, size: 2752, elements: !118)
!118 = !{!119, !4217, !4230, !4231, !4232, !4233, !4234, !4235, !4236}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !117, file: !3, line: 130, baseType: !120, size: 2432)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !121, line: 230, size: 2432, elements: !122)
!121 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!122 = !{!123, !214, !4167, !4168, !4190, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !120, file: !121, line: 231, baseType: !124, size: 1024)
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !121, line: 85, size: 1024, elements: !125)
!125 = !{!126, !151, !179, !201, !206, !207, !211, !212, !213}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !124, file: !121, line: 86, baseType: !127, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !121, line: 58, size: 256, elements: !129)
!129 = !{!130, !140, !142, !143, !144, !145, !146}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !121, line: 59, baseType: !131, size: 64)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !121, line: 59, size: 64, elements: !132)
!132 = !{!133, !134}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !121, line: 60, baseType: !127, size: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !131, file: !121, line: 61, baseType: !135, size: 64)
!135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !136, line: 58, size: 64, elements: !137)
!136 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!137 = !{!138}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !135, file: !136, line: 59, baseType: !139, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !128, file: !121, line: 63, baseType: !141, size: 32, offset: 64)
!141 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !128, file: !121, line: 64, baseType: !141, size: 32, offset: 96)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !128, file: !121, line: 65, baseType: !141, size: 32, offset: 128)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !128, file: !121, line: 66, baseType: !141, size: 32, offset: 160)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !128, file: !121, line: 67, baseType: !141, size: 32, offset: 192)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !128, file: !121, line: 69, baseType: !147, offset: 256)
!147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, elements: !149)
!148 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!149 = !{!150}
!150 = !DISubrange(count: -1)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !124, file: !121, line: 87, baseType: !152, size: 256, offset: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !153, line: 102, size: 256, elements: !154)
!153 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!154 = !{!155, !167, !173}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !152, file: !153, line: 103, baseType: !156, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !157, line: 13, baseType: !158)
!157 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !115, line: 175, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 173, size: 64, elements: !160)
!160 = !{!161}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !159, file: !115, line: 174, baseType: !162, size: 64)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !163, line: 22, baseType: !164)
!163 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !165, line: 30, baseType: !166)
!165 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!166 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !152, file: !153, line: 104, baseType: !168, size: 128, offset: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !115, line: 178, size: 128, elements: !169)
!169 = !{!170, !172}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !168, file: !115, line: 179, baseType: !171, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !168, file: !115, line: 179, baseType: !171, size: 64, offset: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !152, file: !153, line: 105, baseType: !174, size: 64, offset: 192)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !153, line: 21, baseType: !175)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DISubroutineType(types: !177)
!177 = !{null, !178}
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !124, file: !121, line: 88, baseType: !180, size: 192, offset: 320)
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !181, line: 53, size: 192, elements: !182)
!181 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!182 = !{!183, !184, !200}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !180, file: !181, line: 54, baseType: !156, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !180, file: !181, line: 55, baseType: !185, offset: 64)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !186, line: 83, baseType: !187)
!186 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !186, line: 71, elements: !188)
!188 = !{!189}
!189 = !DIDerivedType(tag: DW_TAG_member, scope: !187, file: !186, line: 72, baseType: !190)
!190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !187, file: !186, line: 72, elements: !191)
!191 = !{!192}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !190, file: !186, line: 73, baseType: !193)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !186, line: 20, elements: !194)
!194 = !{!195}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !193, file: !186, line: 21, baseType: !196)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !197, line: 25, baseType: !198)
!197 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !197, line: 25, elements: !199)
!199 = !{}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !180, file: !181, line: 59, baseType: !168, size: 128, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !124, file: !121, line: 89, baseType: !202, size: 32, offset: 512)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !115, line: 168, baseType: !203)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !115, line: 166, size: 32, elements: !204)
!204 = !{!205}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !203, file: !115, line: 167, baseType: !141, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !124, file: !121, line: 90, baseType: !128, size: 256, offset: 576)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !124, file: !121, line: 91, baseType: !208, size: 64, offset: 832)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !136, line: 54, size: 64, elements: !209)
!209 = !{!210}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !208, file: !136, line: 55, baseType: !139, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !124, file: !121, line: 92, baseType: !202, size: 32, offset: 896)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !124, file: !121, line: 93, baseType: !141, size: 32, offset: 928)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !124, file: !121, line: 94, baseType: !127, size: 64, offset: 960)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !120, file: !121, line: 232, baseType: !215, size: 64, offset: 1024)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !121, line: 285, size: 5056, elements: !217)
!217 = !{!218, !219, !229, !3853, !4066, !4067, !4068, !4077, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !216, file: !121, line: 286, baseType: !141, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !216, file: !121, line: 287, baseType: !220, size: 32, offset: 32)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !221, line: 19, size: 32, elements: !222)
!221 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!222 = !{!223}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !220, file: !221, line: 20, baseType: !224, size: 32)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !225, line: 113, baseType: !226)
!225 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !225, line: 111, size: 32, elements: !227)
!227 = !{!228}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !226, file: !225, line: 112, baseType: !202, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !216, file: !121, line: 288, baseType: !230, size: 64, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !232)
!232 = !{!233, !3406, !3407, !3410, !3411, !3462, !3553, !3554, !3555, !3556, !3557, !3566, !3671, !3684, !3688, !3689, !3693, !3695, !3696, !3697, !3701, !3707, !3708, !3711, !3715, !3805, !3806, !3807, !3808, !3809, !3841, !3842, !3843, !3846, !3849, !3850, !3851, !3852}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !231, file: !73, line: 462, baseType: !234, size: 512)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !235, line: 64, size: 512, elements: !236)
!235 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!236 = !{!237, !241, !242, !244, !289, !3279, !3400, !3401, !3402, !3403, !3404, !3405}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !234, file: !235, line: 65, baseType: !238, size: 64)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!240 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !234, file: !235, line: 66, baseType: !168, size: 128, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !234, file: !235, line: 67, baseType: !243, size: 64, offset: 192)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !234, file: !235, line: 68, baseType: !245, size: 64, offset: 256)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !235, line: 192, size: 704, elements: !247)
!247 = !{!248, !249, !250, !251}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !246, file: !235, line: 193, baseType: !168, size: 128)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !246, file: !235, line: 194, baseType: !185, offset: 128)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !246, file: !235, line: 195, baseType: !234, size: 512, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !246, file: !235, line: 196, baseType: !252, size: 64, offset: 640)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !235, line: 156, size: 192, elements: !255)
!255 = !{!256, !261, !266}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !254, file: !235, line: 157, baseType: !257, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !258)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = !DISubroutineType(types: !260)
!260 = !{!141, !245, !243}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !254, file: !235, line: 158, baseType: !262, size: 64, offset: 64)
!262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DISubroutineType(types: !265)
!265 = !{!238, !245, !243}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !254, file: !235, line: 159, baseType: !267, size: 64, offset: 128)
!267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DISubroutineType(types: !270)
!270 = !{!141, !245, !243, !271}
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !235, line: 148, size: 20736, elements: !273)
!273 = !{!274, !279, !283, !284, !288}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !272, file: !235, line: 149, baseType: !275, size: 192)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 192, elements: !277)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!277 = !{!278}
!278 = !DISubrange(count: 3)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !272, file: !235, line: 150, baseType: !280, size: 4096, offset: 192)
!280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 4096, elements: !281)
!281 = !{!282}
!282 = !DISubrange(count: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !272, file: !235, line: 151, baseType: !141, size: 32, offset: 4288)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !272, file: !235, line: 152, baseType: !285, size: 16384, offset: 4320)
!285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 16384, elements: !286)
!286 = !{!287}
!287 = !DISubrange(count: 2048)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !272, file: !235, line: 153, baseType: !141, size: 32, offset: 20704)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !234, file: !235, line: 69, baseType: !290, size: 64, offset: 320)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !235, line: 138, size: 448, elements: !292)
!292 = !{!293, !297, !326, !328, !3241, !3269, !3273}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !291, file: !235, line: 139, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!295 = !DISubroutineType(types: !296)
!296 = !{null, !243}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !291, file: !235, line: 140, baseType: !298, size: 64, offset: 64)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !300)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !301, line: 230, size: 128, elements: !302)
!301 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!302 = !{!303, !319}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !300, file: !301, line: 231, baseType: !304, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{!307, !243, !312, !276}
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !115, line: 60, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !309, line: 73, baseType: !310)
!309 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !309, line: 15, baseType: !311)
!311 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !301, line: 30, size: 128, elements: !314)
!314 = !{!315, !316}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !313, file: !301, line: 31, baseType: !238, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !313, file: !301, line: 32, baseType: !317, size: 16, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !115, line: 19, baseType: !318)
!318 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !300, file: !301, line: 232, baseType: !320, size: 64, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!307, !243, !312, !238, !323}
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !115, line: 55, baseType: !324)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !309, line: 72, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !309, line: 16, baseType: !148)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !291, file: !235, line: 141, baseType: !327, size: 64, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !291, file: !235, line: 142, baseType: !329, size: 64, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !332)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !301, line: 84, size: 320, elements: !333)
!333 = !{!334, !335, !339, !3238, !3239}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !332, file: !301, line: 85, baseType: !238, size: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !332, file: !301, line: 86, baseType: !336, size: 64, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{!317, !243, !312, !141}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !332, file: !301, line: 88, baseType: !340, size: 64, offset: 128)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{!317, !243, !343, !141}
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !301, line: 168, size: 448, elements: !345)
!345 = !{!346, !347, !348, !349, !3233, !3234}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !344, file: !301, line: 169, baseType: !313, size: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !344, file: !301, line: 170, baseType: !323, size: 64, offset: 128)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !344, file: !301, line: 171, baseType: !113, size: 64, offset: 192)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !344, file: !301, line: 172, baseType: !350, size: 64, offset: 256)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DISubroutineType(types: !352)
!352 = !{!307, !353, !243, !343, !276, !525, !323}
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !355)
!355 = !{!356, !369, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3216, !3217, !3226, !3227, !3228, !3229, !3230, !3231, !3232}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !354, file: !44, line: 920, baseType: !357, size: 128)
!357 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !354, file: !44, line: 917, size: 128, elements: !358)
!358 = !{!359, !360}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !357, file: !44, line: 918, baseType: !135, size: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !357, file: !44, line: 919, baseType: !361, size: 128, align: 64)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !115, line: 216, size: 128, align: 64, elements: !362)
!362 = !{!363, !365}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !361, file: !115, line: 217, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !361, file: !115, line: 218, baseType: !366, size: 64, offset: 64)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DISubroutineType(types: !368)
!368 = !{null, !364}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !354, file: !44, line: 921, baseType: !370, size: 128, offset: 128)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !371, line: 8, size: 128, elements: !372)
!371 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!372 = !{!373, !377}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !370, file: !371, line: 9, baseType: !374, size: 64)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !376, line: 18, flags: DIFlagFwdDecl)
!376 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!377 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !370, file: !371, line: 10, baseType: !378, size: 64, offset: 64)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !376, line: 89, size: 1536, elements: !380)
!380 = !{!381, !382, !392, !400, !401, !422, !3166, !3168, !3180, !3181, !3182, !3183, !3184, !3190, !3191, !3192}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !379, file: !376, line: 91, baseType: !7, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !379, file: !376, line: 92, baseType: !383, size: 32, offset: 32)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !384, line: 277, baseType: !385)
!384 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !384, line: 277, size: 32, elements: !386)
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !385, file: !384, line: 277, baseType: !388, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !384, line: 70, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !384, line: 65, size: 32, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !389, file: !384, line: 66, baseType: !7, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !379, file: !376, line: 93, baseType: !393, size: 128, offset: 64)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !394, line: 38, size: 128, elements: !395)
!394 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!395 = !{!396, !398}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !393, file: !394, line: 39, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !393, file: !394, line: 39, baseType: !399, size: 64, offset: 64)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !379, file: !376, line: 94, baseType: !378, size: 64, offset: 192)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !379, file: !376, line: 95, baseType: !402, size: 128, offset: 256)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !376, line: 47, size: 128, elements: !403)
!403 = !{!404, !418}
!404 = !DIDerivedType(tag: DW_TAG_member, scope: !402, file: !376, line: 48, baseType: !405, size: 64)
!405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !402, file: !376, line: 48, size: 64, elements: !406)
!406 = !{!407, !414}
!407 = !DIDerivedType(tag: DW_TAG_member, scope: !405, file: !376, line: 49, baseType: !408, size: 64)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !405, file: !376, line: 49, size: 64, elements: !409)
!409 = !{!410, !413}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !408, file: !376, line: 50, baseType: !411, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !163, line: 21, baseType: !412)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !165, line: 27, baseType: !7)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !408, file: !376, line: 50, baseType: !411, size: 32, offset: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !405, file: !376, line: 52, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !163, line: 23, baseType: !416)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !165, line: 31, baseType: !417)
!417 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !402, file: !376, line: 54, baseType: !419, size: 64, offset: 64)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!421 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !379, file: !376, line: 96, baseType: !423, size: 64, offset: 384)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !425)
!425 = !{!426, !427, !428, !436, !443, !444, !590, !2870, !2871, !2872, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !3134, !3142, !3143, !3144, !3162, !3163, !3164, !3165}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !424, file: !44, line: 611, baseType: !317, size: 16)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !424, file: !44, line: 612, baseType: !318, size: 16, offset: 16)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !424, file: !44, line: 613, baseType: !429, size: 32, offset: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !430, line: 23, baseType: !431)
!430 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !430, line: 21, size: 32, elements: !432)
!432 = !{!433}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !431, file: !430, line: 22, baseType: !434, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !115, line: 32, baseType: !435)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !309, line: 49, baseType: !7)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !424, file: !44, line: 614, baseType: !437, size: 32, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !430, line: 28, baseType: !438)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !430, line: 26, size: 32, elements: !439)
!439 = !{!440}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !438, file: !430, line: 27, baseType: !441, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !115, line: 33, baseType: !442)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !309, line: 50, baseType: !7)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !424, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !424, file: !44, line: 622, baseType: !445, size: 64, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !447)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !448)
!448 = !{!449, !453, !466, !470, !476, !480, !486, !490, !494, !498, !502, !503, !509, !513, !537, !566, !570, !576, !581, !585, !586}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !447, file: !44, line: 1865, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DISubroutineType(types: !452)
!452 = !{!378, !423, !378, !7}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !447, file: !44, line: 1866, baseType: !454, size: 64, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DISubroutineType(types: !456)
!456 = !{!238, !378, !423, !457}
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !459, line: 10, size: 128, elements: !460)
!459 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!460 = !{!461, !465}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !458, file: !459, line: 11, baseType: !462, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{null, !113}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !458, file: !459, line: 12, baseType: !113, size: 64, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !447, file: !44, line: 1867, baseType: !467, size: 64, offset: 128)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DISubroutineType(types: !469)
!469 = !{!141, !423, !141}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !447, file: !44, line: 1868, baseType: !471, size: 64, offset: 192)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DISubroutineType(types: !473)
!473 = !{!474, !423, !141}
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !447, file: !44, line: 1870, baseType: !477, size: 64, offset: 256)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DISubroutineType(types: !479)
!479 = !{!141, !378, !276, !141}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !447, file: !44, line: 1872, baseType: !481, size: 64, offset: 320)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DISubroutineType(types: !483)
!483 = !{!141, !423, !378, !317, !484}
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !115, line: 30, baseType: !485)
!485 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !447, file: !44, line: 1873, baseType: !487, size: 64, offset: 384)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DISubroutineType(types: !489)
!489 = !{!141, !378, !423, !378}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !447, file: !44, line: 1874, baseType: !491, size: 64, offset: 448)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{!141, !423, !378}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !447, file: !44, line: 1875, baseType: !495, size: 64, offset: 512)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DISubroutineType(types: !497)
!497 = !{!141, !423, !378, !238}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !447, file: !44, line: 1876, baseType: !499, size: 64, offset: 576)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DISubroutineType(types: !501)
!501 = !{!141, !423, !378, !317}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !447, file: !44, line: 1877, baseType: !491, size: 64, offset: 640)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !447, file: !44, line: 1878, baseType: !504, size: 64, offset: 704)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{!141, !423, !378, !317, !507}
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !115, line: 16, baseType: !508)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !115, line: 13, baseType: !411)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !447, file: !44, line: 1879, baseType: !510, size: 64, offset: 768)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DISubroutineType(types: !512)
!512 = !{!141, !423, !378, !423, !378, !7}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !447, file: !44, line: 1881, baseType: !514, size: 64, offset: 832)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!141, !378, !517}
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !519)
!519 = !{!520, !521, !522, !523, !524, !527, !534, !535, !536}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !518, file: !44, line: 220, baseType: !7, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !518, file: !44, line: 221, baseType: !317, size: 16, offset: 32)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !518, file: !44, line: 222, baseType: !429, size: 32, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !518, file: !44, line: 223, baseType: !437, size: 32, offset: 96)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !518, file: !44, line: 224, baseType: !525, size: 64, offset: 128)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !115, line: 46, baseType: !526)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !309, line: 88, baseType: !166)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !518, file: !44, line: 225, baseType: !528, size: 128, offset: 192)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !529, line: 13, size: 128, elements: !530)
!529 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!530 = !{!531, !533}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !528, file: !529, line: 14, baseType: !532, size: 64)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !529, line: 8, baseType: !164)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !528, file: !529, line: 15, baseType: !311, size: 64, offset: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !518, file: !44, line: 226, baseType: !528, size: 128, offset: 320)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !518, file: !44, line: 227, baseType: !528, size: 128, offset: 448)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !518, file: !44, line: 234, baseType: !353, size: 64, offset: 576)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !447, file: !44, line: 1882, baseType: !538, size: 64, offset: 896)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{!141, !541, !543, !411, !7}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !370)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !545, line: 22, size: 1152, elements: !546)
!545 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!546 = !{!547, !548, !549, !550, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !544, file: !545, line: 23, baseType: !411, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !544, file: !545, line: 24, baseType: !317, size: 16, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !544, file: !545, line: 25, baseType: !7, size: 32, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !544, file: !545, line: 26, baseType: !551, size: 32, offset: 96)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !115, line: 104, baseType: !411)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !544, file: !545, line: 27, baseType: !415, size: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !544, file: !545, line: 28, baseType: !415, size: 64, offset: 192)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !544, file: !545, line: 37, baseType: !415, size: 64, offset: 256)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !544, file: !545, line: 38, baseType: !507, size: 32, offset: 320)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !544, file: !545, line: 39, baseType: !507, size: 32, offset: 352)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !544, file: !545, line: 40, baseType: !429, size: 32, offset: 384)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !544, file: !545, line: 41, baseType: !437, size: 32, offset: 416)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !544, file: !545, line: 42, baseType: !525, size: 64, offset: 448)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !544, file: !545, line: 43, baseType: !528, size: 128, offset: 512)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !544, file: !545, line: 44, baseType: !528, size: 128, offset: 640)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !544, file: !545, line: 45, baseType: !528, size: 128, offset: 768)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !544, file: !545, line: 46, baseType: !528, size: 128, offset: 896)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !544, file: !545, line: 47, baseType: !415, size: 64, offset: 1024)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !544, file: !545, line: 48, baseType: !415, size: 64, offset: 1088)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !447, file: !44, line: 1883, baseType: !567, size: 64, offset: 960)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{!307, !378, !276, !323}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !447, file: !44, line: 1884, baseType: !571, size: 64, offset: 1024)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DISubroutineType(types: !573)
!573 = !{!141, !423, !574, !415, !415}
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !447, file: !44, line: 1886, baseType: !577, size: 64, offset: 1088)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!141, !423, !580, !141}
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !447, file: !44, line: 1887, baseType: !582, size: 64, offset: 1152)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{!141, !423, !378, !353, !7, !317}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !447, file: !44, line: 1890, baseType: !499, size: 64, offset: 1216)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !447, file: !44, line: 1891, baseType: !587, size: 64, offset: 1280)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DISubroutineType(types: !589)
!589 = !{!141, !423, !474, !141}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !424, file: !44, line: 623, baseType: !591, size: 64, offset: 192)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !593)
!593 = !{!594, !595, !596, !597, !598, !599, !649, !2477, !2559, !2642, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2658, !2662, !2663, !2666, !2667, !2670, !2671, !2672, !2713, !2740, !2741, !2742, !2743, !2744, !2745, !2748, !2750, !2757, !2758, !2760, !2761, !2762, !2821, !2822, !2837, !2838, !2839, !2840, !2841, !2844, !2845, !2846, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !592, file: !44, line: 1417, baseType: !168, size: 128)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !592, file: !44, line: 1418, baseType: !507, size: 32, offset: 128)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !592, file: !44, line: 1419, baseType: !421, size: 8, offset: 160)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !592, file: !44, line: 1420, baseType: !148, size: 64, offset: 192)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !592, file: !44, line: 1421, baseType: !525, size: 64, offset: 256)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !592, file: !44, line: 1422, baseType: !600, size: 64, offset: 320)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !602)
!602 = !{!603, !604, !605, !612, !616, !620, !624, !628, !629, !639, !642, !643, !644, !646, !647, !648}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !601, file: !44, line: 2229, baseType: !238, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !601, file: !44, line: 2230, baseType: !141, size: 32, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !601, file: !44, line: 2238, baseType: !606, size: 64, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DISubroutineType(types: !608)
!608 = !{!141, !609}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !611, line: 28, flags: DIFlagFwdDecl)
!611 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!612 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !601, file: !44, line: 2239, baseType: !613, size: 64, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !615)
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !601, file: !44, line: 2240, baseType: !617, size: 64, offset: 256)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DISubroutineType(types: !619)
!619 = !{!378, !600, !141, !238, !113}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !601, file: !44, line: 2242, baseType: !621, size: 64, offset: 320)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DISubroutineType(types: !623)
!623 = !{null, !591}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !601, file: !44, line: 2243, baseType: !625, size: 64, offset: 384)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !627, line: 76, flags: DIFlagFwdDecl)
!627 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!628 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !601, file: !44, line: 2244, baseType: !600, size: 64, offset: 448)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !601, file: !44, line: 2245, baseType: !630, size: 64, offset: 512)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !115, line: 182, size: 64, elements: !631)
!631 = !{!632}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !630, file: !115, line: 183, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !115, line: 186, size: 128, elements: !635)
!635 = !{!636, !637}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !634, file: !115, line: 187, baseType: !633, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !634, file: !115, line: 187, baseType: !638, size: 64, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !601, file: !44, line: 2247, baseType: !640, offset: 576)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !641, line: 187, elements: !199)
!641 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!642 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !601, file: !44, line: 2248, baseType: !640, offset: 576)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !601, file: !44, line: 2249, baseType: !640, offset: 576)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !601, file: !44, line: 2250, baseType: !645, offset: 576)
!645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !640, elements: !277)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !601, file: !44, line: 2252, baseType: !640, offset: 576)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !601, file: !44, line: 2253, baseType: !640, offset: 576)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !601, file: !44, line: 2254, baseType: !640, offset: 576)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !592, file: !44, line: 1423, baseType: !650, size: 64, offset: 384)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !652)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !653)
!653 = !{!654, !658, !662, !663, !667, !673, !677, !678, !679, !683, !687, !688, !689, !690, !696, !701, !702, !745, !746, !747, !748, !2461, !2476}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !652, file: !44, line: 1936, baseType: !655, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DISubroutineType(types: !657)
!657 = !{!423, !591}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !652, file: !44, line: 1937, baseType: !659, size: 64, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{null, !423}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !652, file: !44, line: 1938, baseType: !659, size: 64, offset: 128)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !652, file: !44, line: 1940, baseType: !664, size: 64, offset: 192)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DISubroutineType(types: !666)
!666 = !{null, !423, !141}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !652, file: !44, line: 1941, baseType: !668, size: 64, offset: 256)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DISubroutineType(types: !670)
!670 = !{!141, !423, !671}
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !652, file: !44, line: 1942, baseType: !674, size: 64, offset: 320)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DISubroutineType(types: !676)
!676 = !{!141, !423}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !652, file: !44, line: 1943, baseType: !659, size: 64, offset: 384)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !652, file: !44, line: 1944, baseType: !621, size: 64, offset: 448)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !652, file: !44, line: 1945, baseType: !680, size: 64, offset: 512)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DISubroutineType(types: !682)
!682 = !{!141, !591, !141}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !652, file: !44, line: 1946, baseType: !684, size: 64, offset: 576)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DISubroutineType(types: !686)
!686 = !{!141, !591}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !652, file: !44, line: 1947, baseType: !684, size: 64, offset: 640)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !652, file: !44, line: 1948, baseType: !684, size: 64, offset: 704)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !652, file: !44, line: 1949, baseType: !684, size: 64, offset: 768)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !652, file: !44, line: 1950, baseType: !691, size: 64, offset: 832)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!141, !378, !694}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !652, file: !44, line: 1951, baseType: !697, size: 64, offset: 896)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{!141, !591, !700, !276}
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !652, file: !44, line: 1952, baseType: !621, size: 64, offset: 960)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !652, file: !44, line: 1954, baseType: !703, size: 64, offset: 1024)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!141, !706, !378}
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !708, line: 16, size: 896, elements: !709)
!708 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!709 = !{!710, !711, !712, !713, !714, !715, !716, !717, !718, !740, !741, !744}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !707, file: !708, line: 17, baseType: !276, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !707, file: !708, line: 18, baseType: !323, size: 64, offset: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !707, file: !708, line: 19, baseType: !323, size: 64, offset: 128)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !707, file: !708, line: 20, baseType: !323, size: 64, offset: 192)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !707, file: !708, line: 21, baseType: !323, size: 64, offset: 256)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !707, file: !708, line: 22, baseType: !525, size: 64, offset: 320)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !707, file: !708, line: 23, baseType: !525, size: 64, offset: 384)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !707, file: !708, line: 24, baseType: !180, size: 192, offset: 448)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !707, file: !708, line: 25, baseType: !719, size: 64, offset: 640)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !721)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !708, line: 31, size: 256, elements: !722)
!722 = !{!723, !728, !732, !736}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !721, file: !708, line: 32, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DISubroutineType(types: !726)
!726 = !{!113, !706, !727}
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !721, file: !708, line: 33, baseType: !729, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{null, !706, !113}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !721, file: !708, line: 34, baseType: !733, size: 64, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!113, !706, !113, !727}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !721, file: !708, line: 35, baseType: !737, size: 64, offset: 192)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{!141, !706, !113}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !707, file: !708, line: 26, baseType: !141, size: 32, offset: 704)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !707, file: !708, line: 27, baseType: !742, size: 64, offset: 768)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !354)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !707, file: !708, line: 28, baseType: !113, size: 64, offset: 832)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !652, file: !44, line: 1955, baseType: !703, size: 64, offset: 1088)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !652, file: !44, line: 1956, baseType: !703, size: 64, offset: 1152)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !652, file: !44, line: 1957, baseType: !703, size: 64, offset: 1216)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !652, file: !44, line: 1963, baseType: !749, size: 64, offset: 1280)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DISubroutineType(types: !751)
!751 = !{!141, !591, !752, !114}
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !754, line: 68, size: 512, align: 128, elements: !755)
!754 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!755 = !{!756, !757, !2453, !2460}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !753, file: !754, line: 69, baseType: !148, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, scope: !753, file: !754, line: 77, baseType: !758, size: 320, offset: 64)
!758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !753, file: !754, line: 77, size: 320, elements: !759)
!759 = !{!760, !936, !941, !969, !977, !983, !2384, !2452}
!760 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 78, baseType: !761, size: 320)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 78, size: 320, elements: !762)
!762 = !{!763, !764, !934, !935}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !761, file: !754, line: 84, baseType: !168, size: 128)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !761, file: !754, line: 86, baseType: !765, size: 64, offset: 128)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !767)
!767 = !{!768, !769, !776, !777, !778, !793, !802, !803, !804, !805, !927, !928, !931, !932, !933}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !766, file: !44, line: 452, baseType: !423, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !766, file: !44, line: 453, baseType: !770, size: 128, offset: 64)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !771, line: 292, size: 128, elements: !772)
!771 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!772 = !{!773, !774, !775}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !770, file: !771, line: 293, baseType: !185)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !770, file: !771, line: 295, baseType: !114, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !770, file: !771, line: 296, baseType: !113, size: 64, offset: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !766, file: !44, line: 454, baseType: !114, size: 32, offset: 192)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !766, file: !44, line: 455, baseType: !202, size: 32, offset: 224)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !766, file: !44, line: 460, baseType: !779, size: 128, offset: 256)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !780, line: 125, size: 128, elements: !781)
!780 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!781 = !{!782, !792}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !779, file: !780, line: 126, baseType: !783, size: 64)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !780, line: 31, size: 64, elements: !784)
!784 = !{!785}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !783, file: !780, line: 32, baseType: !786, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !780, line: 24, size: 192, align: 64, elements: !788)
!788 = !{!789, !790, !791}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !787, file: !780, line: 25, baseType: !148, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !787, file: !780, line: 26, baseType: !786, size: 64, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !787, file: !780, line: 27, baseType: !786, size: 64, offset: 128)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !779, file: !780, line: 127, baseType: !786, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !766, file: !44, line: 461, baseType: !794, size: 256, offset: 384)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !795, line: 35, size: 256, elements: !796)
!795 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!796 = !{!797, !798, !799, !801}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !794, file: !795, line: 36, baseType: !156, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !794, file: !795, line: 42, baseType: !156, size: 64, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !794, file: !795, line: 46, baseType: !800, offset: 128)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !186, line: 29, baseType: !193)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !794, file: !795, line: 47, baseType: !168, size: 128, offset: 128)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !766, file: !44, line: 462, baseType: !148, size: 64, offset: 640)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !766, file: !44, line: 463, baseType: !148, size: 64, offset: 704)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !766, file: !44, line: 464, baseType: !148, size: 64, offset: 768)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !766, file: !44, line: 465, baseType: !806, size: 64, offset: 832)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !808)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !809)
!809 = !{!810, !814, !818, !822, !826, !830, !836, !842, !846, !851, !855, !859, !863, !891, !895, !901, !902, !903, !907, !912, !916, !923}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !808, file: !44, line: 368, baseType: !811, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DISubroutineType(types: !813)
!813 = !{!141, !752, !671}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !808, file: !44, line: 369, baseType: !815, size: 64, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{!141, !353, !752}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !808, file: !44, line: 372, baseType: !819, size: 64, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{!141, !765, !671}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !808, file: !44, line: 375, baseType: !823, size: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{!141, !752}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !808, file: !44, line: 381, baseType: !827, size: 64, offset: 256)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!141, !353, !765, !171, !7}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !808, file: !44, line: 383, baseType: !831, size: 64, offset: 320)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{null, !834}
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !808, file: !44, line: 385, baseType: !837, size: 64, offset: 384)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{!141, !353, !765, !525, !7, !7, !840, !841}
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !808, file: !44, line: 388, baseType: !843, size: 64, offset: 448)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DISubroutineType(types: !845)
!845 = !{!141, !353, !765, !525, !7, !7, !752, !113}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !808, file: !44, line: 393, baseType: !847, size: 64, offset: 512)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{!850, !765, !850}
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !115, line: 125, baseType: !415)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !808, file: !44, line: 394, baseType: !852, size: 64, offset: 576)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DISubroutineType(types: !854)
!854 = !{null, !752, !7, !7}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !808, file: !44, line: 395, baseType: !856, size: 64, offset: 640)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DISubroutineType(types: !858)
!858 = !{!141, !752, !114}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !808, file: !44, line: 396, baseType: !860, size: 64, offset: 704)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{null, !752}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !808, file: !44, line: 397, baseType: !864, size: 64, offset: 768)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{!307, !867, !889}
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !869)
!869 = !{!870, !871, !872, !876, !877, !878, !881, !882}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !868, file: !44, line: 321, baseType: !353, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !868, file: !44, line: 326, baseType: !525, size: 64, offset: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !868, file: !44, line: 327, baseType: !873, size: 64, offset: 128)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{null, !867, !311, !311}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !868, file: !44, line: 328, baseType: !113, size: 64, offset: 192)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !868, file: !44, line: 329, baseType: !141, size: 32, offset: 256)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !868, file: !44, line: 330, baseType: !879, size: 16, offset: 288)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !163, line: 19, baseType: !880)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !165, line: 24, baseType: !318)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !868, file: !44, line: 331, baseType: !879, size: 16, offset: 304)
!882 = !DIDerivedType(tag: DW_TAG_member, scope: !868, file: !44, line: 332, baseType: !883, size: 64, offset: 320)
!883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !868, file: !44, line: 332, size: 64, elements: !884)
!884 = !{!885, !886}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !883, file: !44, line: 333, baseType: !7, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !883, file: !44, line: 334, baseType: !887, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !808, file: !44, line: 402, baseType: !892, size: 64, offset: 832)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!141, !765, !752, !752, !5}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !808, file: !44, line: 404, baseType: !896, size: 64, offset: 896)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!484, !752, !899}
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !900, line: 305, baseType: !7)
!900 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!901 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !808, file: !44, line: 405, baseType: !860, size: 64, offset: 960)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !808, file: !44, line: 406, baseType: !823, size: 64, offset: 1024)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !808, file: !44, line: 407, baseType: !904, size: 64, offset: 1088)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!141, !752, !148, !148}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !808, file: !44, line: 409, baseType: !908, size: 64, offset: 1152)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{null, !752, !911, !911}
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !808, file: !44, line: 410, baseType: !913, size: 64, offset: 1216)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!141, !765, !752}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !808, file: !44, line: 413, baseType: !917, size: 64, offset: 1280)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!141, !920, !353, !922}
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !808, file: !44, line: 415, baseType: !924, size: 64, offset: 1344)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{null, !353}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !766, file: !44, line: 466, baseType: !148, size: 64, offset: 896)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !766, file: !44, line: 467, baseType: !929, size: 32, offset: 960)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !930, line: 8, baseType: !411)
!930 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!931 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !766, file: !44, line: 468, baseType: !185, offset: 992)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !766, file: !44, line: 469, baseType: !168, size: 128, offset: 1024)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !766, file: !44, line: 470, baseType: !113, size: 64, offset: 1152)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !761, file: !754, line: 87, baseType: !148, size: 64, offset: 192)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !761, file: !754, line: 94, baseType: !148, size: 64, offset: 256)
!936 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 96, baseType: !937, size: 64)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 96, size: 64, elements: !938)
!938 = !{!939}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !937, file: !754, line: 101, baseType: !940, size: 64)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !115, line: 143, baseType: !415)
!941 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 103, baseType: !942, size: 320)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 103, size: 320, elements: !943)
!943 = !{!944, !954, !957, !958}
!944 = !DIDerivedType(tag: DW_TAG_member, scope: !942, file: !754, line: 104, baseType: !945, size: 128)
!945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !942, file: !754, line: 104, size: 128, elements: !946)
!946 = !{!947, !948}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !945, file: !754, line: 105, baseType: !168, size: 128)
!948 = !DIDerivedType(tag: DW_TAG_member, scope: !945, file: !754, line: 106, baseType: !949, size: 128)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !945, file: !754, line: 106, size: 128, elements: !950)
!950 = !{!951, !952, !953}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !949, file: !754, line: 107, baseType: !752, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !949, file: !754, line: 109, baseType: !141, size: 32, offset: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !949, file: !754, line: 110, baseType: !141, size: 32, offset: 96)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !942, file: !754, line: 117, baseType: !955, size: 64, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !754, line: 117, flags: DIFlagFwdDecl)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !942, file: !754, line: 119, baseType: !113, size: 64, offset: 192)
!958 = !DIDerivedType(tag: DW_TAG_member, scope: !942, file: !754, line: 120, baseType: !959, size: 64, offset: 256)
!959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !942, file: !754, line: 120, size: 64, elements: !960)
!960 = !{!961, !962, !963}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !959, file: !754, line: 121, baseType: !113, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !959, file: !754, line: 122, baseType: !148, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, scope: !959, file: !754, line: 123, baseType: !964, size: 32)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !959, file: !754, line: 123, size: 32, elements: !965)
!965 = !{!966, !967, !968}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !964, file: !754, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !964, file: !754, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !964, file: !754, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!969 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 130, baseType: !970, size: 192)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 130, size: 192, elements: !971)
!971 = !{!972, !973, !974, !975, !976}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !970, file: !754, line: 131, baseType: !148, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !970, file: !754, line: 134, baseType: !421, size: 8, offset: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !970, file: !754, line: 135, baseType: !421, size: 8, offset: 72)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !970, file: !754, line: 136, baseType: !202, size: 32, offset: 96)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !970, file: !754, line: 137, baseType: !7, size: 32, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 139, baseType: !978, size: 256)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 139, size: 256, elements: !979)
!979 = !{!980, !981, !982}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !978, file: !754, line: 140, baseType: !148, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !978, file: !754, line: 141, baseType: !202, size: 32, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !978, file: !754, line: 143, baseType: !168, size: 128, offset: 128)
!983 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 145, baseType: !984, size: 256)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 145, size: 256, elements: !985)
!985 = !{!986, !987, !990, !991, !2383}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !984, file: !754, line: 146, baseType: !148, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !984, file: !754, line: 147, baseType: !988, size: 64, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !989, line: 509, baseType: !752)
!989 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!990 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !984, file: !754, line: 148, baseType: !148, size: 64, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !984, file: !754, line: 149, baseType: !992, size: 64, offset: 192)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !984, file: !754, line: 149, size: 64, elements: !993)
!993 = !{!994, !2382}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !992, file: !754, line: 150, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !754, line: 388, size: 7296, elements: !997)
!997 = !{!998, !2381}
!998 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !754, line: 389, baseType: !999, size: 7296)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !754, line: 389, size: 7296, elements: !1000)
!1000 = !{!1001, !1119, !1120, !1121, !1125, !1126, !1127, !1128, !1129, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1170, !1178, !1181, !1221, !1222, !2365, !2366, !2369, !2370, !2371, !2374, !2375, !2376, !2379, !2380}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !999, file: !754, line: 390, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !754, line: 305, size: 1472, elements: !1004)
!1004 = !{!1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1019, !1020, !1025, !1026, !1029, !1113, !1114, !1115, !1116, !1117}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1003, file: !754, line: 308, baseType: !148, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1003, file: !754, line: 309, baseType: !148, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1003, file: !754, line: 313, baseType: !1002, size: 64, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1003, file: !754, line: 313, baseType: !1002, size: 64, offset: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1003, file: !754, line: 315, baseType: !787, size: 192, align: 64, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1003, file: !754, line: 323, baseType: !148, size: 64, offset: 448)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1003, file: !754, line: 327, baseType: !995, size: 64, offset: 512)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1003, file: !754, line: 333, baseType: !1013, size: 64, offset: 576)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !989, line: 284, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !989, line: 284, size: 64, elements: !1015)
!1015 = !{!1016}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1014, file: !989, line: 284, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1018, line: 19, baseType: !148)
!1018 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1003, file: !754, line: 334, baseType: !148, size: 64, offset: 640)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1003, file: !754, line: 343, baseType: !1021, size: 256, offset: 704)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1003, file: !754, line: 340, size: 256, elements: !1022)
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1021, file: !754, line: 341, baseType: !787, size: 192, align: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1021, file: !754, line: 342, baseType: !148, size: 64, offset: 192)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1003, file: !754, line: 351, baseType: !168, size: 128, offset: 960)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1003, file: !754, line: 353, baseType: !1027, size: 64, offset: 1088)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !754, line: 353, flags: DIFlagFwdDecl)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1003, file: !754, line: 356, baseType: !1030, size: 64, offset: 1152)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1033)
!1033 = !{!1034, !1038, !1039, !1043, !1047, !1087, !1091, !1095, !1099, !1100, !1101, !1105, !1109}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1032, file: !14, line: 558, baseType: !1035, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{null, !1002}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1032, file: !14, line: 559, baseType: !1035, size: 64, offset: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1032, file: !14, line: 560, baseType: !1040, size: 64, offset: 128)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!141, !1002, !148}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1032, file: !14, line: 561, baseType: !1044, size: 64, offset: 192)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!141, !1002}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1032, file: !14, line: 562, baseType: !1048, size: 64, offset: 256)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!1051, !1052}
!1051 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !754, line: 682, baseType: !7)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1054)
!1054 = !{!1055, !1056, !1057, !1058, !1059, !1060, !1067, !1074, !1080, !1081, !1082, !1084, !1086}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1053, file: !14, line: 509, baseType: !1002, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1053, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1053, file: !14, line: 511, baseType: !114, size: 32, offset: 96)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1053, file: !14, line: 512, baseType: !148, size: 64, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1053, file: !14, line: 513, baseType: !148, size: 64, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1053, file: !14, line: 514, baseType: !1061, size: 64, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !989, line: 385, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !989, line: 385, size: 64, elements: !1064)
!1064 = !{!1065}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1063, file: !989, line: 385, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1018, line: 15, baseType: !148)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1053, file: !14, line: 516, baseType: !1068, size: 64, offset: 320)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !989, line: 359, baseType: !1070)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !989, line: 359, size: 64, elements: !1071)
!1071 = !{!1072}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1070, file: !989, line: 359, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1018, line: 16, baseType: !148)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1053, file: !14, line: 519, baseType: !1075, size: 64, offset: 384)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1018, line: 21, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1018, line: 21, size: 64, elements: !1077)
!1077 = !{!1078}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1076, file: !1018, line: 21, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1018, line: 14, baseType: !148)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1053, file: !14, line: 521, baseType: !752, size: 64, offset: 448)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1053, file: !14, line: 522, baseType: !752, size: 64, offset: 512)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1053, file: !14, line: 528, baseType: !1083, size: 64, offset: 576)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1053, file: !14, line: 532, baseType: !1085, size: 64, offset: 640)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1053, file: !14, line: 536, baseType: !988, size: 64, offset: 704)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1032, file: !14, line: 563, baseType: !1088, size: 64, offset: 320)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!1051, !1052, !13}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1032, file: !14, line: 565, baseType: !1092, size: 64, offset: 384)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{null, !1052, !148, !148}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1032, file: !14, line: 567, baseType: !1096, size: 64, offset: 448)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!148, !1002}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1032, file: !14, line: 571, baseType: !1048, size: 64, offset: 512)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1032, file: !14, line: 574, baseType: !1048, size: 64, offset: 576)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1032, file: !14, line: 579, baseType: !1102, size: 64, offset: 640)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!141, !1002, !148, !113, !141, !141}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1032, file: !14, line: 585, baseType: !1106, size: 64, offset: 704)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!238, !1002}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1032, file: !14, line: 615, baseType: !1110, size: 64, offset: 768)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!752, !1002, !148}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1003, file: !754, line: 359, baseType: !148, size: 64, offset: 1216)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1003, file: !754, line: 361, baseType: !353, size: 64, offset: 1280)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1003, file: !754, line: 362, baseType: !113, size: 64, offset: 1344)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1003, file: !754, line: 365, baseType: !156, size: 64, offset: 1408)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1003, file: !754, line: 373, baseType: !1118, offset: 1472)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !754, line: 296, elements: !199)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !999, file: !754, line: 391, baseType: !783, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !999, file: !754, line: 392, baseType: !415, size: 64, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !999, file: !754, line: 394, baseType: !1122, size: 64, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!148, !353, !148, !148, !148, !148}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !999, file: !754, line: 398, baseType: !148, size: 64, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !999, file: !754, line: 399, baseType: !148, size: 64, offset: 320)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !999, file: !754, line: 405, baseType: !148, size: 64, offset: 384)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !999, file: !754, line: 406, baseType: !148, size: 64, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !999, file: !754, line: 407, baseType: !1130, size: 64, offset: 512)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !989, line: 286, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !989, line: 286, size: 64, elements: !1133)
!1133 = !{!1134}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1132, file: !989, line: 286, baseType: !1135, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1018, line: 18, baseType: !148)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !999, file: !754, line: 416, baseType: !202, size: 32, offset: 576)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !999, file: !754, line: 428, baseType: !202, size: 32, offset: 608)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !999, file: !754, line: 437, baseType: !202, size: 32, offset: 640)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !999, file: !754, line: 447, baseType: !202, size: 32, offset: 672)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !999, file: !754, line: 450, baseType: !156, size: 64, offset: 704)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !999, file: !754, line: 452, baseType: !141, size: 32, offset: 768)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !999, file: !754, line: 454, baseType: !185, offset: 800)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !999, file: !754, line: 457, baseType: !794, size: 256, offset: 832)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !999, file: !754, line: 459, baseType: !168, size: 128, offset: 1088)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !999, file: !754, line: 466, baseType: !148, size: 64, offset: 1216)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !999, file: !754, line: 467, baseType: !148, size: 64, offset: 1280)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !999, file: !754, line: 469, baseType: !148, size: 64, offset: 1344)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !999, file: !754, line: 470, baseType: !148, size: 64, offset: 1408)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !999, file: !754, line: 471, baseType: !158, size: 64, offset: 1472)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !999, file: !754, line: 472, baseType: !148, size: 64, offset: 1536)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !999, file: !754, line: 473, baseType: !148, size: 64, offset: 1600)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !999, file: !754, line: 474, baseType: !148, size: 64, offset: 1664)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !999, file: !754, line: 475, baseType: !148, size: 64, offset: 1728)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !999, file: !754, line: 477, baseType: !185, offset: 1792)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !999, file: !754, line: 478, baseType: !148, size: 64, offset: 1792)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !999, file: !754, line: 478, baseType: !148, size: 64, offset: 1856)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !999, file: !754, line: 478, baseType: !148, size: 64, offset: 1920)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !999, file: !754, line: 478, baseType: !148, size: 64, offset: 1984)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !999, file: !754, line: 479, baseType: !148, size: 64, offset: 2048)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !999, file: !754, line: 479, baseType: !148, size: 64, offset: 2112)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !999, file: !754, line: 479, baseType: !148, size: 64, offset: 2176)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !999, file: !754, line: 480, baseType: !148, size: 64, offset: 2240)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !999, file: !754, line: 480, baseType: !148, size: 64, offset: 2304)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !999, file: !754, line: 480, baseType: !148, size: 64, offset: 2368)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !999, file: !754, line: 480, baseType: !148, size: 64, offset: 2432)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !999, file: !754, line: 482, baseType: !1167, size: 2816, offset: 2496)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 2816, elements: !1168)
!1168 = !{!1169}
!1169 = !DISubrange(count: 44)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !999, file: !754, line: 488, baseType: !1171, size: 256, offset: 5312)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1172, line: 60, size: 256, elements: !1173)
!1172 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1173 = !{!1174}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1171, file: !1172, line: 61, baseType: !1175, size: 256)
!1175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 256, elements: !1176)
!1176 = !{!1177}
!1177 = !DISubrange(count: 4)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !999, file: !754, line: 490, baseType: !1179, size: 64, offset: 5568)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !754, line: 490, flags: DIFlagFwdDecl)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !999, file: !754, line: 493, baseType: !1182, size: 896, offset: 5632)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1183, line: 53, baseType: !1184)
!1183 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1183, line: 13, size: 896, elements: !1185)
!1185 = !{!1186, !1187, !1188, !1189, !1192, !1193, !1194, !1195, !1215, !1216, !1217}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1184, file: !1183, line: 18, baseType: !415, size: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1184, file: !1183, line: 28, baseType: !158, size: 64, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1184, file: !1183, line: 31, baseType: !794, size: 256, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1184, file: !1183, line: 32, baseType: !1190, size: 64, offset: 384)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1183, line: 32, flags: DIFlagFwdDecl)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1184, file: !1183, line: 37, baseType: !318, size: 16, offset: 448)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1184, file: !1183, line: 40, baseType: !180, size: 192, offset: 512)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1184, file: !1183, line: 41, baseType: !113, size: 64, offset: 704)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1184, file: !1183, line: 42, baseType: !1196, size: 64, offset: 768)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1199, line: 13, size: 896, elements: !1200)
!1199 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1200 = !{!1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1198, file: !1199, line: 14, baseType: !113, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1198, file: !1199, line: 15, baseType: !148, size: 64, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1198, file: !1199, line: 17, baseType: !148, size: 64, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1198, file: !1199, line: 17, baseType: !148, size: 64, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1198, file: !1199, line: 19, baseType: !311, size: 64, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1198, file: !1199, line: 21, baseType: !311, size: 64, offset: 320)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1198, file: !1199, line: 22, baseType: !311, size: 64, offset: 384)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1198, file: !1199, line: 23, baseType: !311, size: 64, offset: 448)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1198, file: !1199, line: 24, baseType: !311, size: 64, offset: 512)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1198, file: !1199, line: 25, baseType: !311, size: 64, offset: 576)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1198, file: !1199, line: 26, baseType: !311, size: 64, offset: 640)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1198, file: !1199, line: 27, baseType: !311, size: 64, offset: 704)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1198, file: !1199, line: 28, baseType: !311, size: 64, offset: 768)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1198, file: !1199, line: 29, baseType: !311, size: 64, offset: 832)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1184, file: !1183, line: 44, baseType: !202, size: 32, offset: 832)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1184, file: !1183, line: 50, baseType: !879, size: 16, offset: 864)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1184, file: !1183, line: 51, baseType: !1218, size: 16, offset: 880)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !163, line: 18, baseType: !1219)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !165, line: 23, baseType: !1220)
!1220 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !999, file: !754, line: 495, baseType: !148, size: 64, offset: 6528)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !999, file: !754, line: 497, baseType: !1223, size: 64, offset: 6592)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !754, line: 381, size: 384, elements: !1225)
!1225 = !{!1226, !1227, !2364}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1224, file: !754, line: 382, baseType: !202, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1224, file: !754, line: 383, baseType: !1228, size: 128, offset: 64)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !754, line: 376, size: 128, elements: !1229)
!1229 = !{!1230, !2362}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1228, file: !754, line: 377, baseType: !1231, size: 64)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1233, line: 640, size: 48640, elements: !1234)
!1233 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1234 = !{!1235, !1241, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1256, !1274, !1285, !1370, !1371, !1372, !1383, !1384, !1386, !1387, !1388, !1389, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1468, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1539, !1541, !1542, !1543, !1555, !1556, !1557, !1558, !1559, !1560, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1584, !1589, !1771, !1772, !1773, !1774, !1778, !1781, !1784, !1787, !1790, !1816, !1915, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1961, !1962, !1963, !1964, !1965, !1970, !1971, !1972, !1975, !1976, !1979, !1982, !1985, !1988, !2020, !2023, !2024, !2103, !2104, !2107, !2108, !2111, !2112, !2113, !2117, !2118, !2119, !2132, !2133, !2134, !2144, !2149, !2152, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1232, file: !1233, line: 646, baseType: !1236, size: 128)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1237, line: 56, size: 128, elements: !1238)
!1237 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1238 = !{!1239, !1240}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1236, file: !1237, line: 57, baseType: !148, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1236, file: !1237, line: 58, baseType: !411, size: 32, offset: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1232, file: !1233, line: 649, baseType: !1242, size: 64, offset: 128)
!1242 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !311)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1232, file: !1233, line: 657, baseType: !113, size: 64, offset: 192)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1232, file: !1233, line: 658, baseType: !224, size: 32, offset: 256)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1232, file: !1233, line: 660, baseType: !7, size: 32, offset: 288)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1232, file: !1233, line: 661, baseType: !7, size: 32, offset: 320)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1232, file: !1233, line: 684, baseType: !141, size: 32, offset: 352)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1232, file: !1233, line: 686, baseType: !141, size: 32, offset: 384)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1232, file: !1233, line: 687, baseType: !141, size: 32, offset: 416)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1232, file: !1233, line: 688, baseType: !141, size: 32, offset: 448)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1232, file: !1233, line: 689, baseType: !7, size: 32, offset: 480)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1232, file: !1233, line: 691, baseType: !1253, size: 64, offset: 512)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1255)
!1255 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1233, line: 691, flags: DIFlagFwdDecl)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1232, file: !1233, line: 692, baseType: !1257, size: 832, offset: 576)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1233, line: 451, size: 832, elements: !1258)
!1258 = !{!1259, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1257, file: !1233, line: 453, baseType: !1260, size: 128)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1233, line: 325, size: 128, elements: !1261)
!1261 = !{!1262, !1263}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1260, file: !1233, line: 326, baseType: !148, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1260, file: !1233, line: 327, baseType: !411, size: 32, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1257, file: !1233, line: 454, baseType: !787, size: 192, align: 64, offset: 128)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1257, file: !1233, line: 455, baseType: !168, size: 128, offset: 320)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1257, file: !1233, line: 456, baseType: !7, size: 32, offset: 448)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1257, file: !1233, line: 458, baseType: !415, size: 64, offset: 512)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1257, file: !1233, line: 459, baseType: !415, size: 64, offset: 576)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1257, file: !1233, line: 460, baseType: !415, size: 64, offset: 640)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1257, file: !1233, line: 461, baseType: !415, size: 64, offset: 704)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1257, file: !1233, line: 463, baseType: !415, size: 64, offset: 768)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1257, file: !1233, line: 465, baseType: !1273, offset: 832)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1233, line: 415, elements: !199)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1232, file: !1233, line: 693, baseType: !1275, size: 384, offset: 1408)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1233, line: 489, size: 384, elements: !1276)
!1276 = !{!1277, !1278, !1279, !1280, !1281, !1282, !1283}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1275, file: !1233, line: 490, baseType: !168, size: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1275, file: !1233, line: 491, baseType: !148, size: 64, offset: 128)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1275, file: !1233, line: 492, baseType: !148, size: 64, offset: 192)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1275, file: !1233, line: 493, baseType: !7, size: 32, offset: 256)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1275, file: !1233, line: 494, baseType: !318, size: 16, offset: 288)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1275, file: !1233, line: 495, baseType: !318, size: 16, offset: 304)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1275, file: !1233, line: 497, baseType: !1284, size: 64, offset: 320)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1232, file: !1233, line: 697, baseType: !1286, size: 1792, offset: 1792)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1233, line: 507, size: 1792, elements: !1287)
!1287 = !{!1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1367, !1368}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1286, file: !1233, line: 508, baseType: !787, size: 192, align: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1286, file: !1233, line: 515, baseType: !415, size: 64, offset: 192)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1286, file: !1233, line: 516, baseType: !415, size: 64, offset: 256)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1286, file: !1233, line: 517, baseType: !415, size: 64, offset: 320)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1286, file: !1233, line: 518, baseType: !415, size: 64, offset: 384)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1286, file: !1233, line: 519, baseType: !415, size: 64, offset: 448)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1286, file: !1233, line: 526, baseType: !162, size: 64, offset: 512)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1286, file: !1233, line: 527, baseType: !415, size: 64, offset: 576)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1286, file: !1233, line: 528, baseType: !7, size: 32, offset: 640)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1286, file: !1233, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1286, file: !1233, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1286, file: !1233, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1286, file: !1233, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1286, file: !1233, line: 563, baseType: !1302, size: 512, offset: 704)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1303)
!1303 = !{!1304, !1312, !1313, !1318, !1361, !1364, !1365, !1366}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1302, file: !20, line: 119, baseType: !1305, size: 256)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1306, line: 9, size: 256, elements: !1307)
!1306 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1307 = !{!1308, !1309}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1305, file: !1306, line: 10, baseType: !787, size: 192, align: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1305, file: !1306, line: 11, baseType: !1310, size: 64, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1311, line: 29, baseType: !162)
!1311 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1302, file: !20, line: 120, baseType: !1310, size: 64, offset: 256)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1302, file: !20, line: 121, baseType: !1314, size: 64, offset: 320)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!19, !1317}
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1302, file: !20, line: 122, baseType: !1319, size: 64, offset: 384)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1321)
!1321 = !{!1322, !1342, !1343, !1346, !1351, !1352, !1356, !1360}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1320, file: !20, line: 160, baseType: !1323, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1325)
!1325 = !{!1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1324, file: !20, line: 215, baseType: !800)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1324, file: !20, line: 216, baseType: !7, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1324, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1324, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1324, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1324, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1324, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1324, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1324, file: !20, line: 233, baseType: !1310, size: 64, offset: 128)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1324, file: !20, line: 234, baseType: !1317, size: 64, offset: 192)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1324, file: !20, line: 235, baseType: !1310, size: 64, offset: 256)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1324, file: !20, line: 236, baseType: !1317, size: 64, offset: 320)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1324, file: !20, line: 237, baseType: !1339, size: 4096, offset: 512)
!1339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1320, size: 4096, elements: !1340)
!1340 = !{!1341}
!1341 = !DISubrange(count: 8)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1320, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1320, file: !20, line: 162, baseType: !1344, size: 32, offset: 96)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !115, line: 27, baseType: !1345)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !309, line: 96, baseType: !141)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1320, file: !20, line: 163, baseType: !1347, size: 32, offset: 128)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !384, line: 276, baseType: !1348)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !384, line: 276, size: 32, elements: !1349)
!1349 = !{!1350}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1348, file: !384, line: 276, baseType: !388, size: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1320, file: !20, line: 164, baseType: !1317, size: 64, offset: 192)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1320, file: !20, line: 165, baseType: !1353, size: 128, offset: 256)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1306, line: 14, size: 128, elements: !1354)
!1354 = !{!1355}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1353, file: !1306, line: 15, baseType: !779, size: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1320, file: !20, line: 166, baseType: !1357, size: 64, offset: 384)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!1310}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1320, file: !20, line: 167, baseType: !1310, size: 64, offset: 448)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1302, file: !20, line: 123, baseType: !1362, size: 8, offset: 448)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !163, line: 17, baseType: !1363)
!1363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !165, line: 21, baseType: !421)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1302, file: !20, line: 124, baseType: !1362, size: 8, offset: 456)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1302, file: !20, line: 125, baseType: !1362, size: 8, offset: 464)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1302, file: !20, line: 126, baseType: !1362, size: 8, offset: 472)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1286, file: !1233, line: 572, baseType: !1302, size: 512, offset: 1216)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1286, file: !1233, line: 580, baseType: !1369, size: 64, offset: 1728)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1232, file: !1233, line: 721, baseType: !7, size: 32, offset: 3584)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1232, file: !1233, line: 722, baseType: !141, size: 32, offset: 3616)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1232, file: !1233, line: 723, baseType: !1373, size: 64, offset: 3648)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1376, line: 17, baseType: !1377)
!1376 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1376, line: 17, size: 64, elements: !1378)
!1378 = !{!1379}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1377, file: !1376, line: 17, baseType: !1380, size: 64)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 64, elements: !1381)
!1381 = !{!1382}
!1382 = !DISubrange(count: 1)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1232, file: !1233, line: 724, baseType: !1375, size: 64, offset: 3712)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1232, file: !1233, line: 749, baseType: !1385, offset: 3776)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1233, line: 290, elements: !199)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1232, file: !1233, line: 751, baseType: !168, size: 128, offset: 3776)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1232, file: !1233, line: 757, baseType: !995, size: 64, offset: 3904)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1232, file: !1233, line: 758, baseType: !995, size: 64, offset: 3968)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1232, file: !1233, line: 761, baseType: !1390, size: 320, offset: 4032)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1172, line: 34, size: 320, elements: !1391)
!1391 = !{!1392, !1393}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1390, file: !1172, line: 35, baseType: !415, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1390, file: !1172, line: 36, baseType: !1394, size: 256, offset: 64)
!1394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1002, size: 256, elements: !1176)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1232, file: !1233, line: 766, baseType: !141, size: 32, offset: 4352)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1232, file: !1233, line: 767, baseType: !141, size: 32, offset: 4384)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1232, file: !1233, line: 768, baseType: !141, size: 32, offset: 4416)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1232, file: !1233, line: 770, baseType: !141, size: 32, offset: 4448)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1232, file: !1233, line: 772, baseType: !148, size: 64, offset: 4480)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1232, file: !1233, line: 775, baseType: !7, size: 32, offset: 4544)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1232, file: !1233, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1232, file: !1233, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1232, file: !1233, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1232, file: !1233, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1232, file: !1233, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1232, file: !1233, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1232, file: !1233, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1232, file: !1233, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1232, file: !1233, line: 831, baseType: !148, size: 64, offset: 4672)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1232, file: !1233, line: 833, baseType: !1411, size: 384, offset: 4736)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1412)
!1412 = !{!1413, !1418}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1411, file: !25, line: 26, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!311, !1417}
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, scope: !1411, file: !25, line: 27, baseType: !1419, size: 320, offset: 64)
!1419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1411, file: !25, line: 27, size: 320, elements: !1420)
!1420 = !{!1421, !1431, !1458}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1419, file: !25, line: 36, baseType: !1422, size: 320)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1419, file: !25, line: 29, size: 320, elements: !1423)
!1423 = !{!1424, !1426, !1427, !1428, !1429, !1430}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1422, file: !25, line: 30, baseType: !1425, size: 64)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1422, file: !25, line: 31, baseType: !411, size: 32, offset: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1422, file: !25, line: 32, baseType: !411, size: 32, offset: 96)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1422, file: !25, line: 33, baseType: !411, size: 32, offset: 128)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1422, file: !25, line: 34, baseType: !415, size: 64, offset: 192)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1422, file: !25, line: 35, baseType: !1425, size: 64, offset: 256)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1419, file: !25, line: 46, baseType: !1432, size: 192)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1419, file: !25, line: 38, size: 192, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1457}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1432, file: !25, line: 39, baseType: !1344, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1432, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, scope: !1432, file: !25, line: 41, baseType: !1437, size: 64, offset: 64)
!1437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1432, file: !25, line: 41, size: 64, elements: !1438)
!1438 = !{!1439, !1447}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1437, file: !25, line: 42, baseType: !1440, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1442, line: 7, size: 128, elements: !1443)
!1442 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1443 = !{!1444, !1446}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1441, file: !1442, line: 8, baseType: !1445, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !309, line: 93, baseType: !166)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1441, file: !1442, line: 9, baseType: !166, size: 64, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1437, file: !25, line: 43, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1450, line: 7, size: 64, elements: !1451)
!1450 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1451 = !{!1452, !1456}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1449, file: !1450, line: 8, baseType: !1453, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1450, line: 5, baseType: !1454)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !163, line: 20, baseType: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !165, line: 26, baseType: !141)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1449, file: !1450, line: 9, baseType: !1454, size: 32, offset: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1432, file: !25, line: 45, baseType: !415, size: 64, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1419, file: !25, line: 54, baseType: !1459, size: 256)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1419, file: !25, line: 48, size: 256, elements: !1460)
!1460 = !{!1461, !1464, !1465, !1466, !1467}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1459, file: !25, line: 49, baseType: !1462, size: 64)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1459, file: !25, line: 50, baseType: !141, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1459, file: !25, line: 51, baseType: !141, size: 32, offset: 96)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1459, file: !25, line: 52, baseType: !148, size: 64, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1459, file: !25, line: 53, baseType: !148, size: 64, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1232, file: !1233, line: 835, baseType: !1469, size: 32, offset: 5120)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !115, line: 22, baseType: !1470)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !309, line: 28, baseType: !141)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1232, file: !1233, line: 836, baseType: !1469, size: 32, offset: 5152)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1232, file: !1233, line: 840, baseType: !148, size: 64, offset: 5184)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1232, file: !1233, line: 849, baseType: !1231, size: 64, offset: 5248)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1232, file: !1233, line: 852, baseType: !1231, size: 64, offset: 5312)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1232, file: !1233, line: 857, baseType: !168, size: 128, offset: 5376)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1232, file: !1233, line: 858, baseType: !168, size: 128, offset: 5504)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1232, file: !1233, line: 859, baseType: !1231, size: 64, offset: 5632)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1232, file: !1233, line: 867, baseType: !168, size: 128, offset: 5696)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1232, file: !1233, line: 868, baseType: !168, size: 128, offset: 5824)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1232, file: !1233, line: 871, baseType: !1481, size: 64, offset: 5952)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1483)
!1483 = !{!1484, !1485, !1486, !1487, !1489, !1490, !1497, !1498}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1482, file: !53, line: 61, baseType: !224, size: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1482, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1482, file: !53, line: 63, baseType: !185, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1482, file: !53, line: 65, baseType: !1488, size: 256, offset: 64)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 256, elements: !1176)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1482, file: !53, line: 66, baseType: !630, size: 64, offset: 320)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1482, file: !53, line: 68, baseType: !1491, size: 128, offset: 384)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1492, line: 40, baseType: !1493)
!1492 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1492, line: 36, size: 128, elements: !1494)
!1494 = !{!1495, !1496}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1493, file: !1492, line: 37, baseType: !185)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1493, file: !1492, line: 38, baseType: !168, size: 128)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1482, file: !53, line: 69, baseType: !361, size: 128, align: 64, offset: 512)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1482, file: !53, line: 70, baseType: !1499, size: 128, offset: 640)
!1499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1500, size: 128, elements: !1381)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1501)
!1501 = !{!1502, !1503}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1500, file: !53, line: 55, baseType: !141, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1500, file: !53, line: 56, baseType: !1504, size: 64, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1506, line: 20, size: 1088, elements: !1507)
!1506 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1507 = !{!1508, !1509, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1525, !1528, !1529}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1505, file: !1506, line: 21, baseType: !220, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1505, file: !1506, line: 22, baseType: !1510, size: 192, offset: 64)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1511, line: 19, size: 192, elements: !1512)
!1511 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1512 = !{!1513, !1514, !1515}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1510, file: !1511, line: 20, baseType: !770, size: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1510, file: !1511, line: 21, baseType: !7, size: 32, offset: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1510, file: !1511, line: 22, baseType: !7, size: 32, offset: 160)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1505, file: !1506, line: 23, baseType: !361, size: 128, align: 64, offset: 256)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1505, file: !1506, line: 24, baseType: !7, size: 32, offset: 384)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1505, file: !1506, line: 25, baseType: !1231, size: 64, offset: 448)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1505, file: !1506, line: 26, baseType: !955, size: 64, offset: 512)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1505, file: !1506, line: 27, baseType: !7, size: 32, offset: 576)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1505, file: !1506, line: 28, baseType: !1504, size: 64, offset: 640)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1505, file: !1506, line: 32, baseType: !1523, size: 64, offset: 704)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !430, line: 18, flags: DIFlagFwdDecl)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1505, file: !1506, line: 33, baseType: !1526, size: 64, offset: 768)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1506, line: 33, flags: DIFlagFwdDecl)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1505, file: !1506, line: 34, baseType: !141, size: 32, offset: 832)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1505, file: !1506, line: 35, baseType: !1530, size: 192, offset: 896)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1531, line: 7, size: 192, elements: !1532)
!1531 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1532 = !{!1533, !1534, !1538}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1530, file: !1531, line: 8, baseType: !156, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1530, file: !1531, line: 9, baseType: !1535, size: 64, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1537 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1531, line: 5, flags: DIFlagFwdDecl)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1530, file: !1531, line: 10, baseType: !7, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1232, file: !1233, line: 872, baseType: !1540, size: 512, offset: 6016)
!1540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 512, elements: !1176)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1232, file: !1233, line: 873, baseType: !168, size: 128, offset: 6528)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1232, file: !1233, line: 874, baseType: !168, size: 128, offset: 6656)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1232, file: !1233, line: 876, baseType: !1544, size: 64, offset: 6784)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1546, line: 26, size: 192, elements: !1547)
!1546 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1547 = !{!1548, !1549}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1545, file: !1546, line: 27, baseType: !7, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1545, file: !1546, line: 28, baseType: !1550, size: 128, offset: 64)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1551, line: 43, size: 128, elements: !1552)
!1551 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1552 = !{!1553, !1554}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1550, file: !1551, line: 44, baseType: !800)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1550, file: !1551, line: 45, baseType: !168, size: 128)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1232, file: !1233, line: 879, baseType: !700, size: 64, offset: 6848)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1232, file: !1233, line: 882, baseType: !700, size: 64, offset: 6912)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1232, file: !1233, line: 884, baseType: !415, size: 64, offset: 6976)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1232, file: !1233, line: 885, baseType: !415, size: 64, offset: 7040)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1232, file: !1233, line: 890, baseType: !415, size: 64, offset: 7104)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1232, file: !1233, line: 891, baseType: !1561, size: 128, offset: 7168)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1233, line: 242, size: 128, elements: !1562)
!1562 = !{!1563, !1564, !1565}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1561, file: !1233, line: 244, baseType: !415, size: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1561, file: !1233, line: 245, baseType: !415, size: 64, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1561, file: !1233, line: 246, baseType: !800, offset: 128)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1232, file: !1233, line: 900, baseType: !148, size: 64, offset: 7296)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1232, file: !1233, line: 901, baseType: !148, size: 64, offset: 7360)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1232, file: !1233, line: 904, baseType: !415, size: 64, offset: 7424)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1232, file: !1233, line: 907, baseType: !415, size: 64, offset: 7488)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1232, file: !1233, line: 910, baseType: !148, size: 64, offset: 7552)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1232, file: !1233, line: 911, baseType: !148, size: 64, offset: 7616)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1232, file: !1233, line: 914, baseType: !1573, size: 640, offset: 7680)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1574, line: 123, size: 640, elements: !1575)
!1574 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1575 = !{!1576, !1582, !1583}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1573, file: !1574, line: 124, baseType: !1577, size: 576)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1578, size: 576, elements: !277)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1574, line: 108, size: 192, elements: !1579)
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1578, file: !1574, line: 109, baseType: !415, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1578, file: !1574, line: 110, baseType: !1353, size: 128, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1573, file: !1574, line: 125, baseType: !7, size: 32, offset: 576)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1573, file: !1574, line: 126, baseType: !7, size: 32, offset: 608)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1232, file: !1233, line: 917, baseType: !1585, size: 192, offset: 8320)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1574, line: 134, size: 192, elements: !1586)
!1586 = !{!1587, !1588}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1585, file: !1574, line: 135, baseType: !361, size: 128, align: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1585, file: !1574, line: 136, baseType: !7, size: 32, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1232, file: !1233, line: 923, baseType: !1590, size: 64, offset: 8512)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1593, line: 111, size: 1280, elements: !1594)
!1593 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1594 = !{!1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1614, !1615, !1616, !1617, !1618, !1619, !1726, !1727, !1728, !1729, !1755, !1756, !1766}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1592, file: !1593, line: 112, baseType: !202, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1592, file: !1593, line: 120, baseType: !429, size: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1592, file: !1593, line: 121, baseType: !437, size: 32, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1592, file: !1593, line: 122, baseType: !429, size: 32, offset: 96)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1592, file: !1593, line: 123, baseType: !437, size: 32, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1592, file: !1593, line: 124, baseType: !429, size: 32, offset: 160)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1592, file: !1593, line: 125, baseType: !437, size: 32, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1592, file: !1593, line: 126, baseType: !429, size: 32, offset: 224)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1592, file: !1593, line: 127, baseType: !437, size: 32, offset: 256)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1592, file: !1593, line: 128, baseType: !7, size: 32, offset: 288)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1592, file: !1593, line: 129, baseType: !1606, size: 64, offset: 320)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1607, line: 26, baseType: !1608)
!1607 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1607, line: 24, size: 64, elements: !1609)
!1609 = !{!1610}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1608, file: !1607, line: 25, baseType: !1611, size: 64)
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, size: 64, elements: !1612)
!1612 = !{!1613}
!1613 = !DISubrange(count: 2)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1592, file: !1593, line: 130, baseType: !1606, size: 64, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1592, file: !1593, line: 131, baseType: !1606, size: 64, offset: 448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1592, file: !1593, line: 132, baseType: !1606, size: 64, offset: 512)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1592, file: !1593, line: 133, baseType: !1606, size: 64, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1592, file: !1593, line: 135, baseType: !421, size: 8, offset: 640)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1592, file: !1593, line: 137, baseType: !1620, size: 64, offset: 704)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1622, line: 189, size: 1664, elements: !1623)
!1622 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1623 = !{!1624, !1625, !1628, !1633, !1634, !1637, !1638, !1643, !1644, !1645, !1646, !1648, !1649, !1650, !1651, !1652, !1690, !1711}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1621, file: !1622, line: 190, baseType: !224, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1621, file: !1622, line: 191, baseType: !1626, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1622, line: 28, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !115, line: 98, baseType: !1454)
!1628 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 192, baseType: !1629, size: 192, offset: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 192, size: 192, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1629, file: !1622, line: 193, baseType: !168, size: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1629, file: !1622, line: 194, baseType: !787, size: 192, align: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1621, file: !1622, line: 199, baseType: !794, size: 256, offset: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1621, file: !1622, line: 200, baseType: !1635, size: 64, offset: 512)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1622, line: 200, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1621, file: !1622, line: 201, baseType: !113, size: 64, offset: 576)
!1638 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 202, baseType: !1639, size: 64, offset: 640)
!1639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 202, size: 64, elements: !1640)
!1640 = !{!1641, !1642}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1639, file: !1622, line: 203, baseType: !532, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1639, file: !1622, line: 204, baseType: !532, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1621, file: !1622, line: 206, baseType: !532, size: 64, offset: 704)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1621, file: !1622, line: 207, baseType: !429, size: 32, offset: 768)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1621, file: !1622, line: 208, baseType: !437, size: 32, offset: 800)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1621, file: !1622, line: 209, baseType: !1647, size: 32, offset: 832)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1622, line: 31, baseType: !551)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1621, file: !1622, line: 210, baseType: !318, size: 16, offset: 864)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1621, file: !1622, line: 211, baseType: !318, size: 16, offset: 880)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1621, file: !1622, line: 215, baseType: !1220, size: 16, offset: 896)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1621, file: !1622, line: 222, baseType: !148, size: 64, offset: 960)
!1652 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 239, baseType: !1653, size: 320, offset: 1024)
!1653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 239, size: 320, elements: !1654)
!1654 = !{!1655, !1682}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1653, file: !1622, line: 240, baseType: !1656, size: 320)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1622, line: 108, size: 320, elements: !1657)
!1657 = !{!1658, !1659, !1671, !1674, !1681}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1656, file: !1622, line: 110, baseType: !148, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, scope: !1656, file: !1622, line: 111, baseType: !1660, size: 64, offset: 64)
!1660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1656, file: !1622, line: 111, size: 64, elements: !1661)
!1661 = !{!1662, !1670}
!1662 = !DIDerivedType(tag: DW_TAG_member, scope: !1660, file: !1622, line: 112, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1660, file: !1622, line: 112, size: 64, elements: !1664)
!1664 = !{!1665, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1663, file: !1622, line: 114, baseType: !879, size: 16)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1663, file: !1622, line: 115, baseType: !1667, size: 48, offset: 16)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 48, elements: !1668)
!1668 = !{!1669}
!1669 = !DISubrange(count: 6)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1660, file: !1622, line: 121, baseType: !148, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1656, file: !1622, line: 123, baseType: !1672, size: 64, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1622, line: 96, flags: DIFlagFwdDecl)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1656, file: !1622, line: 124, baseType: !1675, size: 64, offset: 192)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1622, line: 102, size: 192, elements: !1677)
!1677 = !{!1678, !1679, !1680}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1676, file: !1622, line: 103, baseType: !361, size: 128, align: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1676, file: !1622, line: 104, baseType: !224, size: 32, offset: 128)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1676, file: !1622, line: 105, baseType: !484, size: 8, offset: 160)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1656, file: !1622, line: 125, baseType: !238, size: 64, offset: 256)
!1682 = !DIDerivedType(tag: DW_TAG_member, scope: !1653, file: !1622, line: 241, baseType: !1683, size: 320)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1653, file: !1622, line: 241, size: 320, elements: !1684)
!1684 = !{!1685, !1686, !1687, !1688, !1689}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1683, file: !1622, line: 242, baseType: !148, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1683, file: !1622, line: 243, baseType: !148, size: 64, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1683, file: !1622, line: 244, baseType: !1672, size: 64, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1683, file: !1622, line: 245, baseType: !1675, size: 64, offset: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1683, file: !1622, line: 246, baseType: !276, size: 64, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 254, baseType: !1691, size: 256, offset: 1344)
!1691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 254, size: 256, elements: !1692)
!1692 = !{!1693, !1699}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1691, file: !1622, line: 255, baseType: !1694, size: 256)
!1694 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1622, line: 128, size: 256, elements: !1695)
!1695 = !{!1696, !1697}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1694, file: !1622, line: 129, baseType: !113, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1694, file: !1622, line: 130, baseType: !1698, size: 256)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 256, elements: !1176)
!1699 = !DIDerivedType(tag: DW_TAG_member, scope: !1691, file: !1622, line: 256, baseType: !1700, size: 256)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1691, file: !1622, line: 256, size: 256, elements: !1701)
!1701 = !{!1702, !1703}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1700, file: !1622, line: 258, baseType: !168, size: 128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1700, file: !1622, line: 259, baseType: !1704, size: 128, offset: 128)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1705, line: 22, size: 128, elements: !1706)
!1705 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1706 = !{!1707, !1710}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1704, file: !1705, line: 23, baseType: !1708, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1705, line: 23, flags: DIFlagFwdDecl)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1704, file: !1705, line: 24, baseType: !148, size: 64, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1621, file: !1622, line: 274, baseType: !1712, size: 64, offset: 1600)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1622, line: 170, size: 192, elements: !1714)
!1714 = !{!1715, !1724, !1725}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1713, file: !1622, line: 171, baseType: !1716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1622, line: 165, baseType: !1717)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!141, !1620, !1720, !1722, !1620}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1673)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1713, file: !1622, line: 172, baseType: !1620, size: 64, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1713, file: !1622, line: 173, baseType: !1672, size: 64, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1592, file: !1593, line: 138, baseType: !1620, size: 64, offset: 768)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1592, file: !1593, line: 139, baseType: !1620, size: 64, offset: 832)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1592, file: !1593, line: 140, baseType: !1620, size: 64, offset: 896)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1592, file: !1593, line: 145, baseType: !1730, size: 64, offset: 960)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1732, line: 13, size: 896, elements: !1733)
!1732 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1733 = !{!1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1731, file: !1732, line: 14, baseType: !224, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1731, file: !1732, line: 15, baseType: !202, size: 32, offset: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1731, file: !1732, line: 16, baseType: !202, size: 32, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1731, file: !1732, line: 21, baseType: !156, size: 64, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1731, file: !1732, line: 27, baseType: !148, size: 64, offset: 192)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1731, file: !1732, line: 28, baseType: !148, size: 64, offset: 256)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1731, file: !1732, line: 29, baseType: !156, size: 64, offset: 320)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1731, file: !1732, line: 32, baseType: !634, size: 128, offset: 384)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1731, file: !1732, line: 33, baseType: !429, size: 32, offset: 512)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1731, file: !1732, line: 37, baseType: !156, size: 64, offset: 576)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1731, file: !1732, line: 44, baseType: !1745, size: 256, offset: 640)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1746, line: 15, size: 256, elements: !1747)
!1746 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1747 = !{!1748, !1749, !1750, !1751, !1752, !1753, !1754}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1745, file: !1746, line: 16, baseType: !800)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1745, file: !1746, line: 18, baseType: !141, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1745, file: !1746, line: 19, baseType: !141, size: 32, offset: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1745, file: !1746, line: 20, baseType: !141, size: 32, offset: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1745, file: !1746, line: 21, baseType: !141, size: 32, offset: 96)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1745, file: !1746, line: 22, baseType: !148, size: 64, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1745, file: !1746, line: 23, baseType: !148, size: 64, offset: 192)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1592, file: !1593, line: 146, baseType: !1523, size: 64, offset: 1024)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1592, file: !1593, line: 147, baseType: !1757, size: 64, offset: 1088)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1593, line: 25, size: 64, elements: !1759)
!1759 = !{!1760, !1761, !1762}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1758, file: !1593, line: 26, baseType: !202, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1758, file: !1593, line: 27, baseType: !141, size: 32, offset: 32)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1758, file: !1593, line: 28, baseType: !1763, offset: 64)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !437, elements: !1764)
!1764 = !{!1765}
!1765 = !DISubrange(count: 0)
!1766 = !DIDerivedType(tag: DW_TAG_member, scope: !1592, file: !1593, line: 149, baseType: !1767, size: 128, offset: 1152)
!1767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1592, file: !1593, line: 149, size: 128, elements: !1768)
!1768 = !{!1769, !1770}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1767, file: !1593, line: 150, baseType: !141, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1767, file: !1593, line: 151, baseType: !361, size: 128, align: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1232, file: !1233, line: 926, baseType: !1590, size: 64, offset: 8576)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1232, file: !1233, line: 929, baseType: !1590, size: 64, offset: 8640)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1232, file: !1233, line: 933, baseType: !1620, size: 64, offset: 8704)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1232, file: !1233, line: 943, baseType: !1775, size: 128, offset: 8768)
!1775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 128, elements: !1776)
!1776 = !{!1777}
!1777 = !DISubrange(count: 16)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1232, file: !1233, line: 945, baseType: !1779, size: 64, offset: 8896)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1233, line: 49, flags: DIFlagFwdDecl)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1232, file: !1233, line: 956, baseType: !1782, size: 64, offset: 8960)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1233, line: 45, flags: DIFlagFwdDecl)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1232, file: !1233, line: 959, baseType: !1785, size: 64, offset: 9024)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 64)
!1786 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1233, line: 959, flags: DIFlagFwdDecl)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1232, file: !1233, line: 962, baseType: !1788, size: 64, offset: 9088)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1233, line: 66, flags: DIFlagFwdDecl)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1232, file: !1233, line: 966, baseType: !1791, size: 64, offset: 9152)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1793, line: 31, size: 576, elements: !1794)
!1793 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1794 = !{!1795, !1796, !1799, !1802, !1805, !1806, !1809, !1812, !1813}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1792, file: !1793, line: 32, baseType: !202, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1792, file: !1793, line: 33, baseType: !1797, size: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1793, line: 9, flags: DIFlagFwdDecl)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1792, file: !1793, line: 34, baseType: !1800, size: 64, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1793, line: 10, flags: DIFlagFwdDecl)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1792, file: !1793, line: 35, baseType: !1803, size: 64, offset: 192)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1793, line: 8, flags: DIFlagFwdDecl)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1792, file: !1793, line: 36, baseType: !1504, size: 64, offset: 256)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1792, file: !1793, line: 37, baseType: !1807, size: 64, offset: 320)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1622, line: 34, flags: DIFlagFwdDecl)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1792, file: !1793, line: 38, baseType: !1810, size: 64, offset: 384)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1793, line: 38, flags: DIFlagFwdDecl)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1792, file: !1793, line: 39, baseType: !1810, size: 64, offset: 448)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1792, file: !1793, line: 40, baseType: !1814, size: 64, offset: 512)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !1793, line: 12, flags: DIFlagFwdDecl)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1232, file: !1233, line: 969, baseType: !1817, size: 64, offset: 9216)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1819, line: 82, size: 7296, elements: !1820)
!1819 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1820 = !{!1821, !1822, !1823, !1824, !1825, !1826, !1827, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1856, !1865, !1866, !1868, !1869, !1870, !1871, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1901, !1902, !1909, !1910, !1911, !1912, !1913, !1914}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1818, file: !1819, line: 83, baseType: !224, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1818, file: !1819, line: 84, baseType: !202, size: 32, offset: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1818, file: !1819, line: 85, baseType: !141, size: 32, offset: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1818, file: !1819, line: 86, baseType: !168, size: 128, offset: 128)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1818, file: !1819, line: 88, baseType: !1491, size: 128, offset: 256)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1818, file: !1819, line: 91, baseType: !1231, size: 64, offset: 384)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1818, file: !1819, line: 94, baseType: !1828, size: 192, offset: 448)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1829, line: 30, size: 192, elements: !1830)
!1829 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1830 = !{!1831, !1832}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1828, file: !1829, line: 31, baseType: !168, size: 128)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1828, file: !1829, line: 32, baseType: !1833, size: 64, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1834, line: 25, baseType: !1835)
!1834 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1834, line: 23, size: 64, elements: !1836)
!1836 = !{!1837}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1835, file: !1834, line: 24, baseType: !1380, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1818, file: !1819, line: 97, baseType: !630, size: 64, offset: 640)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1818, file: !1819, line: 100, baseType: !141, size: 32, offset: 704)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1818, file: !1819, line: 106, baseType: !141, size: 32, offset: 736)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1818, file: !1819, line: 107, baseType: !1231, size: 64, offset: 768)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1818, file: !1819, line: 110, baseType: !141, size: 32, offset: 832)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1818, file: !1819, line: 111, baseType: !7, size: 32, offset: 864)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1818, file: !1819, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1818, file: !1819, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1818, file: !1819, line: 128, baseType: !141, size: 32, offset: 928)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1818, file: !1819, line: 129, baseType: !168, size: 128, offset: 960)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1818, file: !1819, line: 132, baseType: !1302, size: 512, offset: 1088)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1818, file: !1819, line: 133, baseType: !1310, size: 64, offset: 1600)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1818, file: !1819, line: 140, baseType: !1851, size: 256, offset: 1664)
!1851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1852, size: 256, elements: !1612)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1819, line: 38, size: 128, elements: !1853)
!1853 = !{!1854, !1855}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1852, file: !1819, line: 39, baseType: !415, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1852, file: !1819, line: 40, baseType: !415, size: 64, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1818, file: !1819, line: 146, baseType: !1857, size: 192, offset: 1920)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1819, line: 66, size: 192, elements: !1858)
!1858 = !{!1859}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1857, file: !1819, line: 67, baseType: !1860, size: 192)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1819, line: 47, size: 192, elements: !1861)
!1861 = !{!1862, !1863, !1864}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1860, file: !1819, line: 48, baseType: !158, size: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1860, file: !1819, line: 49, baseType: !158, size: 64, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1860, file: !1819, line: 50, baseType: !158, size: 64, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1818, file: !1819, line: 150, baseType: !1573, size: 640, offset: 2112)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1818, file: !1819, line: 153, baseType: !1867, size: 256, offset: 2752)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1481, size: 256, elements: !1176)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1818, file: !1819, line: 159, baseType: !1481, size: 64, offset: 3008)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1818, file: !1819, line: 162, baseType: !141, size: 32, offset: 3072)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1818, file: !1819, line: 164, baseType: !215, size: 64, offset: 3136)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1818, file: !1819, line: 175, baseType: !1872, size: 32, offset: 3200)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !384, line: 805, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !384, line: 798, size: 32, elements: !1874)
!1874 = !{!1875, !1876}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1873, file: !384, line: 803, baseType: !383, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1873, file: !384, line: 804, baseType: !185, offset: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1818, file: !1819, line: 176, baseType: !415, size: 64, offset: 3264)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1818, file: !1819, line: 176, baseType: !415, size: 64, offset: 3328)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1818, file: !1819, line: 176, baseType: !415, size: 64, offset: 3392)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1818, file: !1819, line: 176, baseType: !415, size: 64, offset: 3456)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1818, file: !1819, line: 177, baseType: !415, size: 64, offset: 3520)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1818, file: !1819, line: 178, baseType: !415, size: 64, offset: 3584)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1818, file: !1819, line: 179, baseType: !1561, size: 128, offset: 3648)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1818, file: !1819, line: 180, baseType: !148, size: 64, offset: 3776)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1818, file: !1819, line: 180, baseType: !148, size: 64, offset: 3840)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1818, file: !1819, line: 180, baseType: !148, size: 64, offset: 3904)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1818, file: !1819, line: 180, baseType: !148, size: 64, offset: 3968)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1818, file: !1819, line: 181, baseType: !148, size: 64, offset: 4032)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1818, file: !1819, line: 181, baseType: !148, size: 64, offset: 4096)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1818, file: !1819, line: 181, baseType: !148, size: 64, offset: 4160)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1818, file: !1819, line: 181, baseType: !148, size: 64, offset: 4224)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1818, file: !1819, line: 182, baseType: !148, size: 64, offset: 4288)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1818, file: !1819, line: 182, baseType: !148, size: 64, offset: 4352)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1818, file: !1819, line: 182, baseType: !148, size: 64, offset: 4416)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1818, file: !1819, line: 182, baseType: !148, size: 64, offset: 4480)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1818, file: !1819, line: 183, baseType: !148, size: 64, offset: 4544)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1818, file: !1819, line: 183, baseType: !148, size: 64, offset: 4608)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1818, file: !1819, line: 184, baseType: !1899, offset: 4672)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1900, line: 12, elements: !199)
!1900 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1818, file: !1819, line: 192, baseType: !417, size: 64, offset: 4672)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1818, file: !1819, line: 203, baseType: !1903, size: 2048, offset: 4736)
!1903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1904, size: 2048, elements: !1776)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1905, line: 43, size: 128, elements: !1906)
!1905 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1906 = !{!1907, !1908}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1904, file: !1905, line: 44, baseType: !325, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1904, file: !1905, line: 45, baseType: !325, size: 64, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1818, file: !1819, line: 220, baseType: !484, size: 8, offset: 6784)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1818, file: !1819, line: 221, baseType: !1220, size: 16, offset: 6800)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1818, file: !1819, line: 222, baseType: !1220, size: 16, offset: 6816)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1818, file: !1819, line: 224, baseType: !995, size: 64, offset: 6848)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1818, file: !1819, line: 227, baseType: !180, size: 192, offset: 6912)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1818, file: !1819, line: 233, baseType: !180, size: 192, offset: 7104)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1232, file: !1233, line: 970, baseType: !1916, size: 64, offset: 9280)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1819, line: 20, size: 16576, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1922}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1917, file: !1819, line: 21, baseType: !185)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1917, file: !1819, line: 22, baseType: !224, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1917, file: !1819, line: 23, baseType: !1491, size: 128, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1917, file: !1819, line: 24, baseType: !1923, size: 16384, offset: 192)
!1923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1924, size: 16384, elements: !281)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1829, line: 49, size: 256, elements: !1925)
!1925 = !{!1926}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1924, file: !1829, line: 50, baseType: !1927, size: 256)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1829, line: 35, size: 256, elements: !1928)
!1928 = !{!1929, !1936, !1937, !1943}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1927, file: !1829, line: 37, baseType: !1930, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1931, line: 19, baseType: !1932)
!1931 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1931, line: 18, baseType: !1934)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{null, !141}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1927, file: !1829, line: 38, baseType: !148, size: 64, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1927, file: !1829, line: 44, baseType: !1938, size: 64, offset: 128)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1931, line: 22, baseType: !1939)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1931, line: 21, baseType: !1941)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{null}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1927, file: !1829, line: 46, baseType: !1833, size: 64, offset: 192)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1232, file: !1233, line: 971, baseType: !1833, size: 64, offset: 9344)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1232, file: !1233, line: 972, baseType: !1833, size: 64, offset: 9408)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1232, file: !1233, line: 974, baseType: !1833, size: 64, offset: 9472)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1232, file: !1233, line: 975, baseType: !1828, size: 192, offset: 9536)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1232, file: !1233, line: 976, baseType: !148, size: 64, offset: 9728)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1232, file: !1233, line: 977, baseType: !323, size: 64, offset: 9792)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1232, file: !1233, line: 978, baseType: !7, size: 32, offset: 9856)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1232, file: !1233, line: 980, baseType: !364, size: 64, offset: 9920)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1232, file: !1233, line: 989, baseType: !1953, size: 128, offset: 9984)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1954, line: 35, size: 128, elements: !1955)
!1954 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1955 = !{!1956, !1957, !1958}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1953, file: !1954, line: 36, baseType: !141, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1953, file: !1954, line: 37, baseType: !202, size: 32, offset: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1953, file: !1954, line: 38, baseType: !1959, size: 64, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1954, line: 23, flags: DIFlagFwdDecl)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1232, file: !1233, line: 992, baseType: !415, size: 64, offset: 10112)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1232, file: !1233, line: 993, baseType: !415, size: 64, offset: 10176)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1232, file: !1233, line: 996, baseType: !185, offset: 10240)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1232, file: !1233, line: 999, baseType: !800, offset: 10240)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1232, file: !1233, line: 1001, baseType: !1966, size: 64, offset: 10240)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1233, line: 636, size: 64, elements: !1967)
!1967 = !{!1968}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1966, file: !1233, line: 637, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1232, file: !1233, line: 1005, baseType: !779, size: 128, offset: 10304)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1232, file: !1233, line: 1007, baseType: !1231, size: 64, offset: 10432)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1232, file: !1233, line: 1009, baseType: !1973, size: 64, offset: 10496)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1974 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1233, line: 1009, flags: DIFlagFwdDecl)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1232, file: !1233, line: 1043, baseType: !113, size: 64, offset: 10560)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1232, file: !1233, line: 1046, baseType: !1977, size: 64, offset: 10624)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!1978 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1233, line: 41, flags: DIFlagFwdDecl)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1232, file: !1233, line: 1050, baseType: !1980, size: 64, offset: 10688)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!1981 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1233, line: 42, flags: DIFlagFwdDecl)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1232, file: !1233, line: 1054, baseType: !1983, size: 64, offset: 10752)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1233, line: 55, flags: DIFlagFwdDecl)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1232, file: !1233, line: 1056, baseType: !1986, size: 64, offset: 10816)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1233, line: 40, flags: DIFlagFwdDecl)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1232, file: !1233, line: 1058, baseType: !1989, size: 64, offset: 10880)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1991, line: 99, size: 704, elements: !1992)
!1991 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1992 = !{!1993, !1994, !1995, !1996, !1997, !1998, !1999, !2018, !2019}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1990, file: !1991, line: 100, baseType: !156, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1990, file: !1991, line: 101, baseType: !202, size: 32, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1990, file: !1991, line: 102, baseType: !202, size: 32, offset: 96)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1990, file: !1991, line: 105, baseType: !185, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1990, file: !1991, line: 107, baseType: !318, size: 16, offset: 128)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1990, file: !1991, line: 109, baseType: !770, size: 128, offset: 192)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1990, file: !1991, line: 110, baseType: !2000, size: 64, offset: 320)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1991, line: 73, size: 448, elements: !2002)
!2002 = !{!2003, !2006, !2007, !2012, !2017}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2001, file: !1991, line: 74, baseType: !2004, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1991, line: 74, flags: DIFlagFwdDecl)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2001, file: !1991, line: 75, baseType: !1989, size: 64, offset: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, scope: !2001, file: !1991, line: 83, baseType: !2008, size: 128, offset: 128)
!2008 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2001, file: !1991, line: 83, size: 128, elements: !2009)
!2009 = !{!2010, !2011}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2008, file: !1991, line: 84, baseType: !168, size: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2008, file: !1991, line: 85, baseType: !955, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, scope: !2001, file: !1991, line: 87, baseType: !2013, size: 128, offset: 256)
!2013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2001, file: !1991, line: 87, size: 128, elements: !2014)
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2013, file: !1991, line: 88, baseType: !634, size: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2013, file: !1991, line: 89, baseType: !361, size: 128, align: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2001, file: !1991, line: 92, baseType: !7, size: 32, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1990, file: !1991, line: 111, baseType: !630, size: 64, offset: 384)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1990, file: !1991, line: 113, baseType: !152, size: 256, offset: 448)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1232, file: !1233, line: 1061, baseType: !2021, size: 64, offset: 10944)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1233, line: 43, flags: DIFlagFwdDecl)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1232, file: !1233, line: 1064, baseType: !148, size: 64, offset: 11008)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1232, file: !1233, line: 1065, baseType: !2025, size: 64, offset: 11072)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1829, line: 14, baseType: !2027)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1829, line: 12, size: 384, elements: !2028)
!2028 = !{!2029}
!2029 = !DIDerivedType(tag: DW_TAG_member, scope: !2027, file: !1829, line: 13, baseType: !2030, size: 384)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2027, file: !1829, line: 13, size: 384, elements: !2031)
!2031 = !{!2032, !2033, !2034, !2035}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2030, file: !1829, line: 13, baseType: !141, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2030, file: !1829, line: 13, baseType: !141, size: 32, offset: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2030, file: !1829, line: 13, baseType: !141, size: 32, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2030, file: !1829, line: 13, baseType: !2036, size: 256, offset: 128)
!2036 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2037, line: 32, size: 256, elements: !2038)
!2037 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2038 = !{!2039, !2044, !2057, !2063, !2072, !2092, !2097}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2036, file: !2037, line: 37, baseType: !2040, size: 64)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2036, file: !2037, line: 34, size: 64, elements: !2041)
!2041 = !{!2042, !2043}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2040, file: !2037, line: 35, baseType: !1470, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2040, file: !2037, line: 36, baseType: !435, size: 32, offset: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2036, file: !2037, line: 45, baseType: !2045, size: 192)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2036, file: !2037, line: 40, size: 192, elements: !2046)
!2046 = !{!2047, !2049, !2050, !2056}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2045, file: !2037, line: 41, baseType: !2048, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !309, line: 95, baseType: !141)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2045, file: !2037, line: 42, baseType: !141, size: 32, offset: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2045, file: !2037, line: 43, baseType: !2051, size: 64, offset: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2037, line: 11, baseType: !2052)
!2052 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2037, line: 8, size: 64, elements: !2053)
!2053 = !{!2054, !2055}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2052, file: !2037, line: 9, baseType: !141, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2052, file: !2037, line: 10, baseType: !113, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2045, file: !2037, line: 44, baseType: !141, size: 32, offset: 128)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2036, file: !2037, line: 52, baseType: !2058, size: 128)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2036, file: !2037, line: 48, size: 128, elements: !2059)
!2059 = !{!2060, !2061, !2062}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2058, file: !2037, line: 49, baseType: !1470, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2058, file: !2037, line: 50, baseType: !435, size: 32, offset: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2058, file: !2037, line: 51, baseType: !2051, size: 64, offset: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2036, file: !2037, line: 61, baseType: !2064, size: 256)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2036, file: !2037, line: 55, size: 256, elements: !2065)
!2065 = !{!2066, !2067, !2068, !2069, !2071}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2064, file: !2037, line: 56, baseType: !1470, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2064, file: !2037, line: 57, baseType: !435, size: 32, offset: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2064, file: !2037, line: 58, baseType: !141, size: 32, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2064, file: !2037, line: 59, baseType: !2070, size: 64, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !309, line: 94, baseType: !310)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2064, file: !2037, line: 60, baseType: !2070, size: 64, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2036, file: !2037, line: 95, baseType: !2073, size: 256)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2036, file: !2037, line: 64, size: 256, elements: !2074)
!2074 = !{!2075, !2076}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2073, file: !2037, line: 65, baseType: !113, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, scope: !2073, file: !2037, line: 77, baseType: !2077, size: 192, offset: 64)
!2077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2073, file: !2037, line: 77, size: 192, elements: !2078)
!2078 = !{!2079, !2080, !2087}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2077, file: !2037, line: 82, baseType: !1220, size: 16)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2077, file: !2037, line: 88, baseType: !2081, size: 192)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2077, file: !2037, line: 84, size: 192, elements: !2082)
!2082 = !{!2083, !2085, !2086}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2081, file: !2037, line: 85, baseType: !2084, size: 64)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 64, elements: !1340)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2081, file: !2037, line: 86, baseType: !113, size: 64, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2081, file: !2037, line: 87, baseType: !113, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2077, file: !2037, line: 93, baseType: !2088, size: 96)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2077, file: !2037, line: 90, size: 96, elements: !2089)
!2089 = !{!2090, !2091}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2088, file: !2037, line: 91, baseType: !2084, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2088, file: !2037, line: 92, baseType: !412, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2036, file: !2037, line: 101, baseType: !2093, size: 128)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2036, file: !2037, line: 98, size: 128, elements: !2094)
!2094 = !{!2095, !2096}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2093, file: !2037, line: 99, baseType: !311, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2093, file: !2037, line: 100, baseType: !141, size: 32, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2036, file: !2037, line: 108, baseType: !2098, size: 128)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2036, file: !2037, line: 104, size: 128, elements: !2099)
!2099 = !{!2100, !2101, !2102}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2098, file: !2037, line: 105, baseType: !113, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2098, file: !2037, line: 106, baseType: !141, size: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2098, file: !2037, line: 107, baseType: !7, size: 32, offset: 96)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1232, file: !1233, line: 1067, baseType: !1899, offset: 11136)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1232, file: !1233, line: 1099, baseType: !2105, size: 64, offset: 11136)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1233, line: 56, flags: DIFlagFwdDecl)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1232, file: !1233, line: 1103, baseType: !168, size: 128, offset: 11200)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1232, file: !1233, line: 1104, baseType: !2109, size: 64, offset: 11328)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1233, line: 46, flags: DIFlagFwdDecl)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1232, file: !1233, line: 1105, baseType: !180, size: 192, offset: 11392)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1232, file: !1233, line: 1106, baseType: !7, size: 32, offset: 11584)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1232, file: !1233, line: 1109, baseType: !2114, size: 128, offset: 11648)
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2115, size: 128, elements: !1612)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1233, line: 51, flags: DIFlagFwdDecl)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1232, file: !1233, line: 1110, baseType: !180, size: 192, offset: 11776)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1232, file: !1233, line: 1111, baseType: !168, size: 128, offset: 11968)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1232, file: !1233, line: 1173, baseType: !2120, size: 64, offset: 12096)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2122, line: 62, size: 256, align: 256, elements: !2123)
!2122 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2123 = !{!2124, !2125, !2126, !2131}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2121, file: !2122, line: 75, baseType: !412, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2121, file: !2122, line: 90, baseType: !412, size: 32, offset: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2121, file: !2122, line: 124, baseType: !2127, size: 64, offset: 64)
!2127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2121, file: !2122, line: 109, size: 64, elements: !2128)
!2128 = !{!2129, !2130}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2127, file: !2122, line: 110, baseType: !416, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2127, file: !2122, line: 112, baseType: !416, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2121, file: !2122, line: 144, baseType: !412, size: 32, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1232, file: !1233, line: 1174, baseType: !411, size: 32, offset: 12160)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1232, file: !1233, line: 1179, baseType: !148, size: 64, offset: 12224)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1232, file: !1233, line: 1182, baseType: !2135, size: 128, offset: 12288)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1172, line: 76, size: 128, elements: !2136)
!2136 = !{!2137, !2142, !2143}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2135, file: !1172, line: 85, baseType: !2138, size: 64)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2139, line: 7, size: 64, elements: !2140)
!2139 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2140 = !{!2141}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2138, file: !2139, line: 12, baseType: !1377, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2135, file: !1172, line: 88, baseType: !484, size: 8, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2135, file: !1172, line: 95, baseType: !484, size: 8, offset: 72)
!2144 = !DIDerivedType(tag: DW_TAG_member, scope: !1232, file: !1233, line: 1184, baseType: !2145, size: 128, offset: 12416)
!2145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1232, file: !1233, line: 1184, size: 128, elements: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2145, file: !1233, line: 1185, baseType: !224, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2145, file: !1233, line: 1186, baseType: !361, size: 128, align: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1232, file: !1233, line: 1190, baseType: !2150, size: 64, offset: 12544)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1233, line: 53, flags: DIFlagFwdDecl)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1232, file: !1233, line: 1192, baseType: !2153, size: 128, offset: 12608)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1172, line: 64, size: 128, elements: !2154)
!2154 = !{!2155, !2156, !2157}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2153, file: !1172, line: 65, baseType: !752, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2153, file: !1172, line: 67, baseType: !412, size: 32, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2153, file: !1172, line: 68, baseType: !412, size: 32, offset: 96)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1232, file: !1233, line: 1206, baseType: !141, size: 32, offset: 12736)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1232, file: !1233, line: 1207, baseType: !141, size: 32, offset: 12768)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1232, file: !1233, line: 1209, baseType: !148, size: 64, offset: 12800)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1232, file: !1233, line: 1219, baseType: !415, size: 64, offset: 12864)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1232, file: !1233, line: 1220, baseType: !415, size: 64, offset: 12928)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1232, file: !1233, line: 1317, baseType: !141, size: 32, offset: 12992)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1232, file: !1233, line: 1319, baseType: !1231, size: 64, offset: 13056)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1232, file: !1233, line: 1322, baseType: !2166, size: 64, offset: 13120)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2168, line: 56, size: 512, elements: !2169)
!2168 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2169 = !{!2170, !2171, !2172, !2173, !2174, !2175, !2176, !2178}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2167, file: !2168, line: 57, baseType: !2166, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2167, file: !2168, line: 58, baseType: !113, size: 64, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2167, file: !2168, line: 59, baseType: !148, size: 64, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2167, file: !2168, line: 60, baseType: !148, size: 64, offset: 192)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2167, file: !2168, line: 61, baseType: !840, size: 64, offset: 256)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2167, file: !2168, line: 62, baseType: !7, size: 32, offset: 320)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2167, file: !2168, line: 63, baseType: !2177, size: 64, offset: 384)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !115, line: 153, baseType: !415)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2167, file: !2168, line: 64, baseType: !2179, size: 64, offset: 448)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1232, file: !1233, line: 1326, baseType: !224, size: 32, offset: 13184)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1232, file: !1233, line: 1342, baseType: !113, size: 64, offset: 13248)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1232, file: !1233, line: 1343, baseType: !416, size: 64, offset: 13312)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1232, file: !1233, line: 1344, baseType: !415, size: 64, offset: 13376)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1232, file: !1233, line: 1345, baseType: !416, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1232, file: !1233, line: 1346, baseType: !416, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1232, file: !1233, line: 1347, baseType: !416, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1232, file: !1233, line: 1348, baseType: !361, size: 128, align: 64, offset: 13504)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1232, file: !1233, line: 1358, baseType: !2190, size: 34816, offset: 13824)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2191, line: 485, size: 34816, elements: !2192)
!2191 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2192 = !{!2193, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2222, !2223, !2224, !2225, !2226, !2227, !2230, !2231, !2232}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2190, file: !2191, line: 487, baseType: !2194, size: 192)
!2194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2195, size: 192, elements: !277)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2196, line: 16, size: 64, elements: !2197)
!2196 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2197 = !{!2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2195, file: !2196, line: 17, baseType: !879, size: 16)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2195, file: !2196, line: 18, baseType: !879, size: 16, offset: 16)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2195, file: !2196, line: 19, baseType: !879, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2195, file: !2196, line: 19, baseType: !879, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2195, file: !2196, line: 19, baseType: !879, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2195, file: !2196, line: 19, baseType: !879, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2195, file: !2196, line: 19, baseType: !879, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2195, file: !2196, line: 20, baseType: !879, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2195, file: !2196, line: 20, baseType: !879, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2195, file: !2196, line: 20, baseType: !879, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2195, file: !2196, line: 20, baseType: !879, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2195, file: !2196, line: 20, baseType: !879, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2195, file: !2196, line: 20, baseType: !879, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2190, file: !2191, line: 491, baseType: !148, size: 64, offset: 192)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2190, file: !2191, line: 495, baseType: !318, size: 16, offset: 256)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2190, file: !2191, line: 496, baseType: !318, size: 16, offset: 272)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2190, file: !2191, line: 497, baseType: !318, size: 16, offset: 288)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2190, file: !2191, line: 498, baseType: !318, size: 16, offset: 304)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2190, file: !2191, line: 502, baseType: !148, size: 64, offset: 320)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2190, file: !2191, line: 503, baseType: !148, size: 64, offset: 384)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2190, file: !2191, line: 514, baseType: !2219, size: 256, offset: 448)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2220, size: 256, elements: !1176)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2191, line: 483, flags: DIFlagFwdDecl)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2190, file: !2191, line: 516, baseType: !148, size: 64, offset: 704)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2190, file: !2191, line: 518, baseType: !148, size: 64, offset: 768)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2190, file: !2191, line: 520, baseType: !148, size: 64, offset: 832)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2190, file: !2191, line: 521, baseType: !148, size: 64, offset: 896)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2190, file: !2191, line: 522, baseType: !148, size: 64, offset: 960)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2190, file: !2191, line: 528, baseType: !2228, size: 64, offset: 1024)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2191, line: 10, flags: DIFlagFwdDecl)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2190, file: !2191, line: 535, baseType: !148, size: 64, offset: 1088)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2190, file: !2191, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2190, file: !2191, line: 540, baseType: !2233, size: 33280, offset: 1536)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2234, line: 317, size: 33280, elements: !2235)
!2234 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2235 = !{!2236, !2237, !2238}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2233, file: !2234, line: 330, baseType: !7, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2233, file: !2234, line: 337, baseType: !148, size: 64, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2233, file: !2234, line: 348, baseType: !2239, size: 32768, offset: 512)
!2239 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2234, line: 304, size: 32768, elements: !2240)
!2240 = !{!2241, !2256, !2295, !2345, !2358}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2239, file: !2234, line: 305, baseType: !2242, size: 896)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2234, line: 12, size: 896, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2255}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2242, file: !2234, line: 13, baseType: !411, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2242, file: !2234, line: 14, baseType: !411, size: 32, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2242, file: !2234, line: 15, baseType: !411, size: 32, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2242, file: !2234, line: 16, baseType: !411, size: 32, offset: 96)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2242, file: !2234, line: 17, baseType: !411, size: 32, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2242, file: !2234, line: 18, baseType: !411, size: 32, offset: 160)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2242, file: !2234, line: 19, baseType: !411, size: 32, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2242, file: !2234, line: 22, baseType: !2252, size: 640, offset: 224)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 640, elements: !2253)
!2253 = !{!2254}
!2254 = !DISubrange(count: 20)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2242, file: !2234, line: 25, baseType: !411, size: 32, offset: 864)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2239, file: !2234, line: 306, baseType: !2257, size: 4096, align: 128)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2234, line: 34, size: 4096, align: 128, elements: !2258)
!2258 = !{!2259, !2260, !2261, !2262, !2263, !2278, !2279, !2280, !2284, !2286, !2290}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2257, file: !2234, line: 35, baseType: !879, size: 16)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2257, file: !2234, line: 36, baseType: !879, size: 16, offset: 16)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2257, file: !2234, line: 37, baseType: !879, size: 16, offset: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2257, file: !2234, line: 38, baseType: !879, size: 16, offset: 48)
!2263 = !DIDerivedType(tag: DW_TAG_member, scope: !2257, file: !2234, line: 39, baseType: !2264, size: 128, offset: 64)
!2264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2257, file: !2234, line: 39, size: 128, elements: !2265)
!2265 = !{!2266, !2271}
!2266 = !DIDerivedType(tag: DW_TAG_member, scope: !2264, file: !2234, line: 40, baseType: !2267, size: 128)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2264, file: !2234, line: 40, size: 128, elements: !2268)
!2268 = !{!2269, !2270}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2267, file: !2234, line: 41, baseType: !415, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2267, file: !2234, line: 42, baseType: !415, size: 64, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, scope: !2264, file: !2234, line: 44, baseType: !2272, size: 128)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2264, file: !2234, line: 44, size: 128, elements: !2273)
!2273 = !{!2274, !2275, !2276, !2277}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2272, file: !2234, line: 45, baseType: !411, size: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2272, file: !2234, line: 46, baseType: !411, size: 32, offset: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2272, file: !2234, line: 47, baseType: !411, size: 32, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2272, file: !2234, line: 48, baseType: !411, size: 32, offset: 96)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2257, file: !2234, line: 51, baseType: !411, size: 32, offset: 192)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2257, file: !2234, line: 52, baseType: !411, size: 32, offset: 224)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2257, file: !2234, line: 55, baseType: !2281, size: 1024, offset: 256)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 1024, elements: !2282)
!2282 = !{!2283}
!2283 = !DISubrange(count: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2257, file: !2234, line: 58, baseType: !2285, size: 2048, offset: 1280)
!2285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 2048, elements: !281)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2257, file: !2234, line: 60, baseType: !2287, size: 384, offset: 3328)
!2287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 384, elements: !2288)
!2288 = !{!2289}
!2289 = !DISubrange(count: 12)
!2290 = !DIDerivedType(tag: DW_TAG_member, scope: !2257, file: !2234, line: 62, baseType: !2291, size: 384, offset: 3712)
!2291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2257, file: !2234, line: 62, size: 384, elements: !2292)
!2292 = !{!2293, !2294}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2291, file: !2234, line: 63, baseType: !2287, size: 384)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2291, file: !2234, line: 64, baseType: !2287, size: 384)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2239, file: !2234, line: 307, baseType: !2296, size: 1088)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2234, line: 79, size: 1088, elements: !2297)
!2297 = !{!2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2344}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2296, file: !2234, line: 80, baseType: !411, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2296, file: !2234, line: 81, baseType: !411, size: 32, offset: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2296, file: !2234, line: 82, baseType: !411, size: 32, offset: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2296, file: !2234, line: 83, baseType: !411, size: 32, offset: 96)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2296, file: !2234, line: 84, baseType: !411, size: 32, offset: 128)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2296, file: !2234, line: 85, baseType: !411, size: 32, offset: 160)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2296, file: !2234, line: 86, baseType: !411, size: 32, offset: 192)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2296, file: !2234, line: 88, baseType: !2252, size: 640, offset: 224)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2296, file: !2234, line: 89, baseType: !1362, size: 8, offset: 864)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2296, file: !2234, line: 90, baseType: !1362, size: 8, offset: 872)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2296, file: !2234, line: 91, baseType: !1362, size: 8, offset: 880)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2296, file: !2234, line: 92, baseType: !1362, size: 8, offset: 888)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2296, file: !2234, line: 93, baseType: !1362, size: 8, offset: 896)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2296, file: !2234, line: 94, baseType: !1362, size: 8, offset: 904)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2296, file: !2234, line: 95, baseType: !2313, size: 64, offset: 960)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2315, line: 11, size: 128, elements: !2316)
!2315 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2316 = !{!2317, !2318}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2314, file: !2315, line: 12, baseType: !311, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2314, file: !2315, line: 13, baseType: !2319, size: 64, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2321, line: 56, size: 1344, elements: !2322)
!2321 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2322 = !{!2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2320, file: !2321, line: 61, baseType: !148, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2320, file: !2321, line: 62, baseType: !148, size: 64, offset: 64)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2320, file: !2321, line: 63, baseType: !148, size: 64, offset: 128)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2320, file: !2321, line: 64, baseType: !148, size: 64, offset: 192)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2320, file: !2321, line: 65, baseType: !148, size: 64, offset: 256)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2320, file: !2321, line: 66, baseType: !148, size: 64, offset: 320)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2320, file: !2321, line: 68, baseType: !148, size: 64, offset: 384)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2320, file: !2321, line: 69, baseType: !148, size: 64, offset: 448)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2320, file: !2321, line: 70, baseType: !148, size: 64, offset: 512)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2320, file: !2321, line: 71, baseType: !148, size: 64, offset: 576)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2320, file: !2321, line: 72, baseType: !148, size: 64, offset: 640)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2320, file: !2321, line: 73, baseType: !148, size: 64, offset: 704)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2320, file: !2321, line: 74, baseType: !148, size: 64, offset: 768)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2320, file: !2321, line: 75, baseType: !148, size: 64, offset: 832)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2320, file: !2321, line: 76, baseType: !148, size: 64, offset: 896)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2320, file: !2321, line: 81, baseType: !148, size: 64, offset: 960)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2320, file: !2321, line: 83, baseType: !148, size: 64, offset: 1024)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2320, file: !2321, line: 84, baseType: !148, size: 64, offset: 1088)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2320, file: !2321, line: 85, baseType: !148, size: 64, offset: 1152)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2320, file: !2321, line: 86, baseType: !148, size: 64, offset: 1216)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2320, file: !2321, line: 87, baseType: !148, size: 64, offset: 1280)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2296, file: !2234, line: 96, baseType: !411, size: 32, offset: 1024)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2239, file: !2234, line: 308, baseType: !2346, size: 4608, align: 512)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2234, line: 289, size: 4608, align: 512, elements: !2347)
!2347 = !{!2348, !2349, !2356}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2346, file: !2234, line: 290, baseType: !2257, size: 4096, align: 128)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2346, file: !2234, line: 291, baseType: !2350, size: 512, offset: 4096)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2234, line: 268, size: 512, elements: !2351)
!2351 = !{!2352, !2353, !2354}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2350, file: !2234, line: 269, baseType: !415, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2350, file: !2234, line: 270, baseType: !415, size: 64, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2350, file: !2234, line: 271, baseType: !2355, size: 384, offset: 128)
!2355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 384, elements: !1668)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2346, file: !2234, line: 292, baseType: !2357, offset: 4608)
!2357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1362, elements: !1764)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2239, file: !2234, line: 309, baseType: !2359, size: 32768)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1362, size: 32768, elements: !2360)
!2360 = !{!2361}
!2361 = !DISubrange(count: 4096)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1228, file: !754, line: 378, baseType: !2363, size: 64, offset: 64)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1224, file: !754, line: 384, baseType: !1545, size: 192, offset: 192)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !999, file: !754, line: 500, baseType: !185, offset: 6656)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !999, file: !754, line: 501, baseType: !2367, size: 64, offset: 6656)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64)
!2368 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !754, line: 387, flags: DIFlagFwdDecl)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !999, file: !754, line: 516, baseType: !1523, size: 64, offset: 6720)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !999, file: !754, line: 519, baseType: !353, size: 64, offset: 6784)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !999, file: !754, line: 521, baseType: !2372, size: 64, offset: 6848)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !754, line: 521, flags: DIFlagFwdDecl)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !999, file: !754, line: 545, baseType: !202, size: 32, offset: 6912)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !999, file: !754, line: 548, baseType: !484, size: 8, offset: 6944)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !999, file: !754, line: 550, baseType: !2377, offset: 6952)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2378, line: 142, elements: !199)
!2378 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !999, file: !754, line: 554, baseType: !152, size: 256, offset: 6976)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !999, file: !754, line: 557, baseType: !411, size: 32, offset: 7232)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !996, file: !754, line: 565, baseType: !147, offset: 7296)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !992, file: !754, line: 151, baseType: !202, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !984, file: !754, line: 156, baseType: !185, offset: 256)
!2384 = !DIDerivedType(tag: DW_TAG_member, scope: !758, file: !754, line: 159, baseType: !2385, size: 128)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !758, file: !754, line: 159, size: 128, elements: !2386)
!2386 = !{!2387, !2451}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2385, file: !754, line: 161, baseType: !2388, size: 64)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2390)
!2390 = !{!2391, !2401, !2422, !2423, !2424, !2425, !2426, !2438, !2439, !2440}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2389, file: !31, line: 111, baseType: !2392, size: 384)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2393)
!2393 = !{!2394, !2396, !2397, !2398, !2399, !2400}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2392, file: !31, line: 20, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2392, file: !31, line: 21, baseType: !2395, size: 64, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2392, file: !31, line: 22, baseType: !2395, size: 64, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2392, file: !31, line: 23, baseType: !148, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2392, file: !31, line: 24, baseType: !148, size: 64, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2392, file: !31, line: 25, baseType: !148, size: 64, offset: 320)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2389, file: !31, line: 112, baseType: !2402, size: 64, offset: 384)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2404, line: 105, size: 128, elements: !2405)
!2404 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2405 = !{!2406, !2407}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2403, file: !2404, line: 110, baseType: !148, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2403, file: !2404, line: 118, baseType: !2408, size: 64, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2404, line: 95, size: 448, elements: !2410)
!2410 = !{!2411, !2412, !2417, !2418, !2419, !2420, !2421}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2409, file: !2404, line: 96, baseType: !156, size: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2409, file: !2404, line: 97, baseType: !2413, size: 64, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2404, line: 60, baseType: !2415)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !2402}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2409, file: !2404, line: 98, baseType: !2413, size: 64, offset: 128)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2409, file: !2404, line: 99, baseType: !484, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2409, file: !2404, line: 100, baseType: !484, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2409, file: !2404, line: 101, baseType: !361, size: 128, align: 64, offset: 256)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2409, file: !2404, line: 102, baseType: !2402, size: 64, offset: 384)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2389, file: !31, line: 113, baseType: !2403, size: 128, offset: 448)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2389, file: !31, line: 114, baseType: !1545, size: 192, offset: 576)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2389, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2389, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2389, file: !31, line: 117, baseType: !2427, size: 64, offset: 832)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2429)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2430)
!2430 = !{!2431, !2432, !2436, !2437}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2429, file: !31, line: 73, baseType: !860, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2429, file: !31, line: 78, baseType: !2433, size: 64, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{null, !2388}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2429, file: !31, line: 83, baseType: !2433, size: 64, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2429, file: !31, line: 89, baseType: !1048, size: 64, offset: 192)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2389, file: !31, line: 118, baseType: !113, size: 64, offset: 896)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2389, file: !31, line: 119, baseType: !141, size: 32, offset: 960)
!2440 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !31, line: 120, baseType: !2441, size: 128, offset: 1024)
!2441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !31, line: 120, size: 128, elements: !2442)
!2442 = !{!2443, !2449}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2441, file: !31, line: 121, baseType: !2444, size: 128)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2445, line: 6, size: 128, elements: !2446)
!2445 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2446 = !{!2447, !2448}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2444, file: !2445, line: 7, baseType: !415, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2444, file: !2445, line: 8, baseType: !415, size: 64, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2441, file: !31, line: 122, baseType: !2450)
!2450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2444, elements: !1764)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2385, file: !754, line: 162, baseType: !113, size: 64, offset: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !758, file: !754, line: 176, baseType: !361, size: 128, align: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, scope: !753, file: !754, line: 179, baseType: !2454, size: 32, offset: 384)
!2454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !753, file: !754, line: 179, size: 32, elements: !2455)
!2455 = !{!2456, !2457, !2458, !2459}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2454, file: !754, line: 184, baseType: !202, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2454, file: !754, line: 192, baseType: !7, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2454, file: !754, line: 194, baseType: !7, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2454, file: !754, line: 195, baseType: !141, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !753, file: !754, line: 199, baseType: !202, size: 32, offset: 416)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !652, file: !44, line: 1964, baseType: !2462, size: 64, offset: 1344)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = !DISubroutineType(types: !2464)
!2464 = !{!311, !591, !2465}
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2466, size: 64)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2467, line: 12, size: 256, elements: !2468)
!2467 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2468 = !{!2469, !2470, !2471, !2472, !2473}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2466, file: !2467, line: 13, baseType: !114, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2466, file: !2467, line: 16, baseType: !141, size: 32, offset: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2466, file: !2467, line: 23, baseType: !148, size: 64, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2466, file: !2467, line: 30, baseType: !148, size: 64, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2466, file: !2467, line: 33, baseType: !2474, size: 64, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2475 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !754, line: 27, flags: DIFlagFwdDecl)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !652, file: !44, line: 1966, baseType: !2462, size: 64, offset: 1408)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !592, file: !44, line: 1424, baseType: !2478, size: 64, offset: 448)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2480)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2481)
!2481 = !{!2482, !2528, !2532, !2536, !2537, !2538, !2539, !2540, !2545, !2550, !2554}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2480, file: !38, line: 323, baseType: !2483, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 64)
!2484 = !DISubroutineType(types: !2485)
!2485 = !{!141, !2486}
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 64)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2488)
!2488 = !{!2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2513, !2514, !2515}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2487, file: !38, line: 295, baseType: !634, size: 128)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2487, file: !38, line: 296, baseType: !168, size: 128, offset: 128)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2487, file: !38, line: 297, baseType: !168, size: 128, offset: 256)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2487, file: !38, line: 298, baseType: !168, size: 128, offset: 384)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2487, file: !38, line: 299, baseType: !180, size: 192, offset: 512)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2487, file: !38, line: 300, baseType: !185, offset: 704)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2487, file: !38, line: 301, baseType: !202, size: 32, offset: 704)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2487, file: !38, line: 302, baseType: !591, size: 64, offset: 768)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2487, file: !38, line: 303, baseType: !2498, size: 64, offset: 832)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2499)
!2499 = !{!2500, !2512}
!2500 = !DIDerivedType(tag: DW_TAG_member, scope: !2498, file: !38, line: 69, baseType: !2501, size: 32)
!2501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2498, file: !38, line: 69, size: 32, elements: !2502)
!2502 = !{!2503, !2504, !2505}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2501, file: !38, line: 70, baseType: !429, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2501, file: !38, line: 71, baseType: !437, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2501, file: !38, line: 72, baseType: !2506, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2507, line: 24, baseType: !2508)
!2507 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2507, line: 22, size: 32, elements: !2509)
!2509 = !{!2510}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2508, file: !2507, line: 23, baseType: !2511, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2507, line: 20, baseType: !435)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2498, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2487, file: !38, line: 304, baseType: !525, size: 64, offset: 896)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2487, file: !38, line: 305, baseType: !148, size: 64, offset: 960)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2487, file: !38, line: 306, baseType: !2516, size: 576, offset: 1024)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2517)
!2517 = !{!2518, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2516, file: !38, line: 206, baseType: !2519, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !166)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2516, file: !38, line: 207, baseType: !2519, size: 64, offset: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2516, file: !38, line: 208, baseType: !2519, size: 64, offset: 128)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2516, file: !38, line: 209, baseType: !2519, size: 64, offset: 192)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2516, file: !38, line: 210, baseType: !2519, size: 64, offset: 256)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2516, file: !38, line: 211, baseType: !2519, size: 64, offset: 320)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2516, file: !38, line: 212, baseType: !2519, size: 64, offset: 384)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2516, file: !38, line: 213, baseType: !532, size: 64, offset: 448)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2516, file: !38, line: 214, baseType: !532, size: 64, offset: 512)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2480, file: !38, line: 324, baseType: !2529, size: 64, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{!2486, !591, !141}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2480, file: !38, line: 325, baseType: !2533, size: 64, offset: 128)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = !DISubroutineType(types: !2535)
!2535 = !{null, !2486}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2480, file: !38, line: 326, baseType: !2483, size: 64, offset: 192)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2480, file: !38, line: 327, baseType: !2483, size: 64, offset: 256)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2480, file: !38, line: 328, baseType: !2483, size: 64, offset: 320)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2480, file: !38, line: 329, baseType: !680, size: 64, offset: 384)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2480, file: !38, line: 332, baseType: !2541, size: 64, offset: 448)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = !DISubroutineType(types: !2543)
!2543 = !{!2544, !423}
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2480, file: !38, line: 333, baseType: !2546, size: 64, offset: 512)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{!141, !423, !2549}
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2480, file: !38, line: 335, baseType: !2551, size: 64, offset: 576)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!141, !423, !2544}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2480, file: !38, line: 337, baseType: !2555, size: 64, offset: 640)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DISubroutineType(types: !2557)
!2557 = !{!141, !591, !2558}
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !592, file: !44, line: 1425, baseType: !2560, size: 64, offset: 512)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2562)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2563)
!2563 = !{!2564, !2568, !2569, !2573, !2574, !2575, !2590, !2613, !2617, !2618, !2641}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2562, file: !38, line: 429, baseType: !2565, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = !DISubroutineType(types: !2567)
!2567 = !{!141, !591, !141, !141, !541}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2562, file: !38, line: 430, baseType: !680, size: 64, offset: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2562, file: !38, line: 431, baseType: !2570, size: 64, offset: 128)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{!141, !591, !7}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2562, file: !38, line: 432, baseType: !2570, size: 64, offset: 192)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2562, file: !38, line: 433, baseType: !680, size: 64, offset: 256)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2562, file: !38, line: 434, baseType: !2576, size: 64, offset: 320)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DISubroutineType(types: !2578)
!2578 = !{!141, !591, !141, !2579}
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2581)
!2581 = !{!2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2580, file: !38, line: 416, baseType: !141, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2580, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2580, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2580, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2580, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2580, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2580, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2580, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2562, file: !38, line: 435, baseType: !2591, size: 64, offset: 384)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{!141, !591, !2498, !2594}
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2596)
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2595, file: !38, line: 344, baseType: !141, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2595, file: !38, line: 345, baseType: !415, size: 64, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2595, file: !38, line: 346, baseType: !415, size: 64, offset: 128)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2595, file: !38, line: 347, baseType: !415, size: 64, offset: 192)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2595, file: !38, line: 348, baseType: !415, size: 64, offset: 256)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2595, file: !38, line: 349, baseType: !415, size: 64, offset: 320)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2595, file: !38, line: 350, baseType: !415, size: 64, offset: 384)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2595, file: !38, line: 351, baseType: !162, size: 64, offset: 448)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2595, file: !38, line: 353, baseType: !162, size: 64, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2595, file: !38, line: 354, baseType: !141, size: 32, offset: 576)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2595, file: !38, line: 355, baseType: !141, size: 32, offset: 608)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2595, file: !38, line: 356, baseType: !415, size: 64, offset: 640)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2595, file: !38, line: 357, baseType: !415, size: 64, offset: 704)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2595, file: !38, line: 358, baseType: !415, size: 64, offset: 768)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2595, file: !38, line: 359, baseType: !162, size: 64, offset: 832)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2595, file: !38, line: 360, baseType: !141, size: 32, offset: 896)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2562, file: !38, line: 436, baseType: !2614, size: 64, offset: 448)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 64)
!2615 = !DISubroutineType(types: !2616)
!2616 = !{!141, !591, !2558, !2594}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2562, file: !38, line: 438, baseType: !2591, size: 64, offset: 512)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2562, file: !38, line: 439, baseType: !2619, size: 64, offset: 576)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!141, !591, !2622}
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2624)
!2624 = !{!2625, !2626}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2623, file: !38, line: 410, baseType: !7, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2623, file: !38, line: 411, baseType: !2627, size: 1344, offset: 64)
!2627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2628, size: 1344, elements: !277)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2629)
!2629 = !{!2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2640}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2628, file: !38, line: 396, baseType: !7, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2628, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2628, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2628, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2628, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2628, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2628, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2628, file: !38, line: 404, baseType: !417, size: 64, offset: 256)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2628, file: !38, line: 405, baseType: !2639, size: 64, offset: 320)
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !115, line: 126, baseType: !415)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2628, file: !38, line: 406, baseType: !2639, size: 64, offset: 384)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2562, file: !38, line: 440, baseType: !2570, size: 64, offset: 640)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !592, file: !44, line: 1426, baseType: !2643, size: 64, offset: 576)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2645)
!2645 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !592, file: !44, line: 1427, baseType: !148, size: 64, offset: 640)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !592, file: !44, line: 1428, baseType: !148, size: 64, offset: 704)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !592, file: !44, line: 1429, baseType: !148, size: 64, offset: 768)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !592, file: !44, line: 1430, baseType: !378, size: 64, offset: 832)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !592, file: !44, line: 1431, baseType: !794, size: 256, offset: 896)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !592, file: !44, line: 1432, baseType: !141, size: 32, offset: 1152)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !592, file: !44, line: 1433, baseType: !202, size: 32, offset: 1184)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !592, file: !44, line: 1437, baseType: !2654, size: 64, offset: 1216)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2657)
!2657 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !592, file: !44, line: 1449, baseType: !2659, size: 64, offset: 1280)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !394, line: 34, size: 64, elements: !2660)
!2660 = !{!2661}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2659, file: !394, line: 35, baseType: !397, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !592, file: !44, line: 1450, baseType: !168, size: 128, offset: 1344)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !592, file: !44, line: 1451, baseType: !2664, size: 64, offset: 1472)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !592, file: !44, line: 1452, baseType: !1986, size: 64, offset: 1536)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !592, file: !44, line: 1453, baseType: !2668, size: 64, offset: 1600)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !592, file: !44, line: 1454, baseType: !634, size: 128, offset: 1664)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !592, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !592, file: !44, line: 1456, baseType: !2673, size: 2432, offset: 1856)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2674)
!2674 = !{!2675, !2676, !2677, !2679, !2711}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2673, file: !38, line: 519, baseType: !7, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2673, file: !38, line: 520, baseType: !794, size: 256, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2673, file: !38, line: 521, baseType: !2678, size: 192, offset: 320)
!2678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 192, elements: !277)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2673, file: !38, line: 522, baseType: !2680, size: 1728, offset: 512)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2681, size: 1728, elements: !277)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2682)
!2682 = !{!2683, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2681, file: !38, line: 223, baseType: !2684, size: 64)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2686)
!2686 = !{!2687, !2688, !2701, !2702}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2685, file: !38, line: 444, baseType: !141, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2685, file: !38, line: 445, baseType: !2689, size: 64, offset: 64)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2691)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2692)
!2692 = !{!2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2691, file: !38, line: 311, baseType: !680, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2691, file: !38, line: 312, baseType: !680, size: 64, offset: 64)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2691, file: !38, line: 313, baseType: !680, size: 64, offset: 128)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2691, file: !38, line: 314, baseType: !680, size: 64, offset: 192)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2691, file: !38, line: 315, baseType: !2483, size: 64, offset: 256)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2691, file: !38, line: 316, baseType: !2483, size: 64, offset: 320)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2691, file: !38, line: 317, baseType: !2483, size: 64, offset: 384)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2691, file: !38, line: 318, baseType: !2555, size: 64, offset: 448)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2685, file: !38, line: 446, baseType: !625, size: 64, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2685, file: !38, line: 447, baseType: !2684, size: 64, offset: 192)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2681, file: !38, line: 224, baseType: !141, size: 32, offset: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2681, file: !38, line: 226, baseType: !168, size: 128, offset: 128)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2681, file: !38, line: 227, baseType: !148, size: 64, offset: 256)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2681, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2681, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2681, file: !38, line: 230, baseType: !2519, size: 64, offset: 384)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2681, file: !38, line: 231, baseType: !2519, size: 64, offset: 448)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2681, file: !38, line: 232, baseType: !113, size: 64, offset: 512)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2673, file: !38, line: 523, baseType: !2712, size: 192, offset: 2240)
!2712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2689, size: 192, elements: !277)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !592, file: !44, line: 1458, baseType: !2714, size: 2112, offset: 4288)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2715)
!2715 = !{!2716, !2717, !2718}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2714, file: !44, line: 1411, baseType: !141, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2714, file: !44, line: 1412, baseType: !1491, size: 128, offset: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2714, file: !44, line: 1413, baseType: !2719, size: 1920, offset: 192)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2720, size: 1920, elements: !277)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2721, line: 12, size: 640, elements: !2722)
!2721 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2722 = !{!2723, !2731, !2733, !2738, !2739}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2720, file: !2721, line: 13, baseType: !2724, size: 320)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2725, line: 17, size: 320, elements: !2726)
!2725 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2726 = !{!2727, !2728, !2729, !2730}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2724, file: !2725, line: 18, baseType: !141, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2724, file: !2725, line: 19, baseType: !141, size: 32, offset: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2724, file: !2725, line: 20, baseType: !1491, size: 128, offset: 64)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2724, file: !2725, line: 22, baseType: !361, size: 128, align: 64, offset: 192)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2720, file: !2721, line: 14, baseType: !2732, size: 64, offset: 320)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2720, file: !2721, line: 15, baseType: !2734, size: 64, offset: 384)
!2734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2735, line: 16, size: 64, elements: !2736)
!2735 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2736 = !{!2737}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2734, file: !2735, line: 17, baseType: !1231, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2720, file: !2721, line: 16, baseType: !1491, size: 128, offset: 448)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2720, file: !2721, line: 17, baseType: !202, size: 32, offset: 576)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !592, file: !44, line: 1465, baseType: !113, size: 64, offset: 6400)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !592, file: !44, line: 1468, baseType: !411, size: 32, offset: 6464)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !592, file: !44, line: 1470, baseType: !532, size: 64, offset: 6528)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !592, file: !44, line: 1471, baseType: !532, size: 64, offset: 6592)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !592, file: !44, line: 1473, baseType: !412, size: 32, offset: 6656)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !592, file: !44, line: 1474, baseType: !2746, size: 64, offset: 6720)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !592, file: !44, line: 1477, baseType: !2749, size: 256, offset: 6784)
!2749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 256, elements: !2282)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !592, file: !44, line: 1478, baseType: !2751, size: 128, offset: 7040)
!2751 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2752, line: 18, baseType: !2753)
!2752 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2752, line: 16, size: 128, elements: !2754)
!2754 = !{!2755}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2753, file: !2752, line: 17, baseType: !2756, size: 128)
!2756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1363, size: 128, elements: !1776)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !592, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !592, file: !44, line: 1481, baseType: !2759, size: 32, offset: 7200)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !115, line: 150, baseType: !7)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !592, file: !44, line: 1487, baseType: !180, size: 192, offset: 7232)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !592, file: !44, line: 1493, baseType: !238, size: 64, offset: 7424)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !592, file: !44, line: 1495, baseType: !2763, size: 64, offset: 7488)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2765)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !376, line: 135, size: 1024, align: 512, elements: !2766)
!2766 = !{!2767, !2771, !2772, !2779, !2785, !2789, !2793, !2797, !2798, !2802, !2806, !2811, !2815}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2765, file: !376, line: 136, baseType: !2768, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DISubroutineType(types: !2770)
!2770 = !{!141, !378, !7}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2765, file: !376, line: 137, baseType: !2768, size: 64, offset: 64)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2765, file: !376, line: 138, baseType: !2773, size: 64, offset: 128)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!141, !2776, !2778}
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !379)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2765, file: !376, line: 139, baseType: !2780, size: 64, offset: 192)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{!141, !2776, !7, !238, !2783}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !402)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2765, file: !376, line: 141, baseType: !2786, size: 64, offset: 256)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!141, !2776}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2765, file: !376, line: 142, baseType: !2790, size: 64, offset: 320)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{!141, !378}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2765, file: !376, line: 143, baseType: !2794, size: 64, offset: 384)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DISubroutineType(types: !2796)
!2796 = !{null, !378}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2765, file: !376, line: 144, baseType: !2794, size: 64, offset: 448)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2765, file: !376, line: 145, baseType: !2799, size: 64, offset: 512)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{null, !378, !423}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2765, file: !376, line: 146, baseType: !2803, size: 64, offset: 576)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = !DISubroutineType(types: !2805)
!2805 = !{!276, !378, !276, !141}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2765, file: !376, line: 147, baseType: !2807, size: 64, offset: 640)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!374, !2810}
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2765, file: !376, line: 148, baseType: !2812, size: 64, offset: 704)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!141, !541, !484}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2765, file: !376, line: 149, baseType: !2816, size: 64, offset: 768)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!378, !378, !2819}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !424)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !592, file: !44, line: 1500, baseType: !141, size: 32, offset: 7552)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !592, file: !44, line: 1502, baseType: !2823, size: 448, offset: 7616)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2467, line: 60, size: 448, elements: !2824)
!2824 = !{!2825, !2830, !2831, !2832, !2833, !2834, !2835}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2823, file: !2467, line: 61, baseType: !2826, size: 64)
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2827 = !DISubroutineType(types: !2828)
!2828 = !{!148, !2829, !2465}
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2823, file: !2467, line: 63, baseType: !2826, size: 64, offset: 64)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2823, file: !2467, line: 66, baseType: !311, size: 64, offset: 128)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2823, file: !2467, line: 67, baseType: !141, size: 32, offset: 192)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2823, file: !2467, line: 68, baseType: !7, size: 32, offset: 224)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2823, file: !2467, line: 71, baseType: !168, size: 128, offset: 256)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2823, file: !2467, line: 77, baseType: !2836, size: 64, offset: 384)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !592, file: !44, line: 1505, baseType: !156, size: 64, offset: 8064)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !592, file: !44, line: 1508, baseType: !156, size: 64, offset: 8128)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !592, file: !44, line: 1511, baseType: !141, size: 32, offset: 8192)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !592, file: !44, line: 1514, baseType: !929, size: 32, offset: 8224)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !592, file: !44, line: 1517, baseType: !2842, size: 64, offset: 8256)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !153, line: 18, flags: DIFlagFwdDecl)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !592, file: !44, line: 1518, baseType: !630, size: 64, offset: 8320)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !592, file: !44, line: 1525, baseType: !1523, size: 64, offset: 8384)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !592, file: !44, line: 1532, baseType: !2847, size: 64, offset: 8448)
!2847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2848, line: 52, size: 64, elements: !2849)
!2848 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2849 = !{!2850}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2847, file: !2848, line: 53, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2848, line: 40, size: 256, elements: !2853)
!2853 = !{!2854, !2855, !2860}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2852, file: !2848, line: 42, baseType: !185)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2852, file: !2848, line: 44, baseType: !2856, size: 192)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2848, line: 28, size: 192, elements: !2857)
!2857 = !{!2858, !2859}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2856, file: !2848, line: 29, baseType: !168, size: 128)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2856, file: !2848, line: 31, baseType: !311, size: 64, offset: 128)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2852, file: !2848, line: 49, baseType: !311, size: 64, offset: 192)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !592, file: !44, line: 1533, baseType: !2847, size: 64, offset: 8512)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !592, file: !44, line: 1534, baseType: !361, size: 128, align: 64, offset: 8576)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !592, file: !44, line: 1535, baseType: !152, size: 256, offset: 8704)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !592, file: !44, line: 1537, baseType: !180, size: 192, offset: 8960)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !592, file: !44, line: 1542, baseType: !141, size: 32, offset: 9152)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !592, file: !44, line: 1545, baseType: !185, offset: 9184)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !592, file: !44, line: 1546, baseType: !168, size: 128, offset: 9216)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !592, file: !44, line: 1548, baseType: !185, offset: 9344)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !592, file: !44, line: 1549, baseType: !168, size: 128, offset: 9344)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !424, file: !44, line: 624, baseType: !765, size: 64, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !424, file: !44, line: 631, baseType: !148, size: 64, offset: 320)
!2872 = !DIDerivedType(tag: DW_TAG_member, scope: !424, file: !44, line: 639, baseType: !2873, size: 32, offset: 384)
!2873 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !424, file: !44, line: 639, size: 32, elements: !2874)
!2874 = !{!2875, !2877}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2873, file: !44, line: 640, baseType: !2876, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2873, file: !44, line: 641, baseType: !7, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !424, file: !44, line: 643, baseType: !507, size: 32, offset: 416)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !424, file: !44, line: 644, baseType: !525, size: 64, offset: 448)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !424, file: !44, line: 645, baseType: !528, size: 128, offset: 512)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !424, file: !44, line: 646, baseType: !528, size: 128, offset: 640)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !424, file: !44, line: 647, baseType: !528, size: 128, offset: 768)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !424, file: !44, line: 648, baseType: !185, offset: 896)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !424, file: !44, line: 649, baseType: !318, size: 16, offset: 896)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !424, file: !44, line: 650, baseType: !1362, size: 8, offset: 912)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !424, file: !44, line: 651, baseType: !1362, size: 8, offset: 920)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !424, file: !44, line: 652, baseType: !2639, size: 64, offset: 960)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !424, file: !44, line: 659, baseType: !148, size: 64, offset: 1024)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !424, file: !44, line: 660, baseType: !794, size: 256, offset: 1088)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !424, file: !44, line: 662, baseType: !148, size: 64, offset: 1344)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !424, file: !44, line: 663, baseType: !148, size: 64, offset: 1408)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !424, file: !44, line: 665, baseType: !634, size: 128, offset: 1472)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !424, file: !44, line: 666, baseType: !168, size: 128, offset: 1600)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !424, file: !44, line: 675, baseType: !168, size: 128, offset: 1728)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !424, file: !44, line: 676, baseType: !168, size: 128, offset: 1856)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !424, file: !44, line: 677, baseType: !168, size: 128, offset: 1984)
!2897 = !DIDerivedType(tag: DW_TAG_member, scope: !424, file: !44, line: 678, baseType: !2898, size: 128, offset: 2112)
!2898 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !424, file: !44, line: 678, size: 128, elements: !2899)
!2899 = !{!2900, !2901}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2898, file: !44, line: 679, baseType: !630, size: 64)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2898, file: !44, line: 680, baseType: !361, size: 128, align: 64)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !424, file: !44, line: 682, baseType: !158, size: 64, offset: 2240)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !424, file: !44, line: 683, baseType: !158, size: 64, offset: 2304)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !424, file: !44, line: 684, baseType: !202, size: 32, offset: 2368)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !424, file: !44, line: 685, baseType: !202, size: 32, offset: 2400)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !424, file: !44, line: 686, baseType: !202, size: 32, offset: 2432)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !424, file: !44, line: 688, baseType: !202, size: 32, offset: 2464)
!2908 = !DIDerivedType(tag: DW_TAG_member, scope: !424, file: !44, line: 690, baseType: !2909, size: 64, offset: 2496)
!2909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !424, file: !44, line: 690, size: 64, elements: !2910)
!2910 = !{!2911, !3133}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2909, file: !44, line: 691, baseType: !2912, size: 64)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2914)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2915)
!2915 = !{!2916, !2917, !2921, !2925, !2929, !2930, !2931, !2935, !2948, !2949, !2957, !2961, !2962, !2966, !2967, !2971, !2976, !2977, !2981, !2985, !3093, !3097, !3098, !3102, !3103, !3107, !3111, !3116, !3120, !3124, !3128, !3132}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2914, file: !44, line: 1823, baseType: !625, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2914, file: !44, line: 1824, baseType: !2918, size: 64, offset: 64)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 64)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{!525, !353, !525, !141}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2914, file: !44, line: 1825, baseType: !2922, size: 64, offset: 128)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = !DISubroutineType(types: !2924)
!2924 = !{!307, !353, !276, !323, !727}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2914, file: !44, line: 1826, baseType: !2926, size: 64, offset: 192)
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{!307, !353, !238, !323, !727}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2914, file: !44, line: 1827, baseType: !864, size: 64, offset: 256)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2914, file: !44, line: 1828, baseType: !864, size: 64, offset: 320)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2914, file: !44, line: 1829, baseType: !2932, size: 64, offset: 384)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{!141, !867, !484}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2914, file: !44, line: 1830, baseType: !2936, size: 64, offset: 448)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{!141, !353, !2939}
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2941)
!2941 = !{!2942, !2947}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2940, file: !44, line: 1777, baseType: !2943, size: 64)
!2943 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2944)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DISubroutineType(types: !2946)
!2946 = !{!141, !2939, !238, !141, !525, !415, !7}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2940, file: !44, line: 1778, baseType: !525, size: 64, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2914, file: !44, line: 1831, baseType: !2936, size: 64, offset: 512)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2914, file: !44, line: 1832, baseType: !2950, size: 64, offset: 576)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!2953, !353, !2955}
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2954, line: 52, baseType: !7)
!2954 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 64)
!2956 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !611, line: 27, flags: DIFlagFwdDecl)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2914, file: !44, line: 1833, baseType: !2958, size: 64, offset: 640)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 64)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{!311, !353, !7, !148}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2914, file: !44, line: 1834, baseType: !2958, size: 64, offset: 704)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2914, file: !44, line: 1835, baseType: !2963, size: 64, offset: 768)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DISubroutineType(types: !2965)
!2965 = !{!141, !353, !1002}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2914, file: !44, line: 1836, baseType: !148, size: 64, offset: 832)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2914, file: !44, line: 1837, baseType: !2968, size: 64, offset: 896)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{!141, !423, !353}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2914, file: !44, line: 1838, baseType: !2972, size: 64, offset: 960)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{!141, !353, !2975}
!2975 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !113)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2914, file: !44, line: 1839, baseType: !2968, size: 64, offset: 1024)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2914, file: !44, line: 1840, baseType: !2978, size: 64, offset: 1088)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!141, !353, !525, !525, !141}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2914, file: !44, line: 1841, baseType: !2982, size: 64, offset: 1152)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{!141, !141, !353, !141}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2914, file: !44, line: 1842, baseType: !2986, size: 64, offset: 1216)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{!141, !353, !141, !2989}
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 64)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !2991)
!2991 = !{!2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3023, !3024, !3025, !3038, !3069}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2990, file: !44, line: 1063, baseType: !2989, size: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2990, file: !44, line: 1064, baseType: !168, size: 128, offset: 64)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2990, file: !44, line: 1065, baseType: !634, size: 128, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2990, file: !44, line: 1066, baseType: !168, size: 128, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2990, file: !44, line: 1069, baseType: !168, size: 128, offset: 448)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2990, file: !44, line: 1072, baseType: !2975, size: 64, offset: 576)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2990, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2990, file: !44, line: 1074, baseType: !421, size: 8, offset: 672)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2990, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2990, file: !44, line: 1076, baseType: !141, size: 32, offset: 736)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2990, file: !44, line: 1077, baseType: !1491, size: 128, offset: 768)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2990, file: !44, line: 1078, baseType: !353, size: 64, offset: 896)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2990, file: !44, line: 1079, baseType: !525, size: 64, offset: 960)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2990, file: !44, line: 1080, baseType: !525, size: 64, offset: 1024)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2990, file: !44, line: 1082, baseType: !3007, size: 64, offset: 1088)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3009)
!3009 = !{!3010, !3018, !3019, !3020, !3021, !3022}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3008, file: !44, line: 1315, baseType: !3011)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3012, line: 20, baseType: !3013)
!3012 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3012, line: 11, elements: !3014)
!3014 = !{!3015}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3013, file: !3012, line: 12, baseType: !3016)
!3016 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !197, line: 33, baseType: !3017)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !197, line: 31, elements: !199)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3008, file: !44, line: 1316, baseType: !141, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3008, file: !44, line: 1317, baseType: !141, size: 32, offset: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3008, file: !44, line: 1318, baseType: !3007, size: 64, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3008, file: !44, line: 1319, baseType: !353, size: 64, offset: 128)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3008, file: !44, line: 1320, baseType: !361, size: 128, align: 64, offset: 192)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2990, file: !44, line: 1084, baseType: !148, size: 64, offset: 1152)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2990, file: !44, line: 1085, baseType: !148, size: 64, offset: 1216)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2990, file: !44, line: 1087, baseType: !3026, size: 64, offset: 1280)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3028)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3029)
!3029 = !{!3030, !3034}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3028, file: !44, line: 1012, baseType: !3031, size: 64)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!3032 = !DISubroutineType(types: !3033)
!3033 = !{null, !2989, !2989}
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3028, file: !44, line: 1013, baseType: !3035, size: 64, offset: 64)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{null, !2989}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2990, file: !44, line: 1088, baseType: !3039, size: 64, offset: 1344)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3041)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3042)
!3042 = !{!3043, !3047, !3051, !3052, !3056, !3060, !3064, !3068}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3041, file: !44, line: 1017, baseType: !3044, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{!2975, !2975}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3041, file: !44, line: 1018, baseType: !3048, size: 64, offset: 64)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{null, !2975}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3041, file: !44, line: 1019, baseType: !3035, size: 64, offset: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3041, file: !44, line: 1020, baseType: !3053, size: 64, offset: 192)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!141, !2989, !141}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3041, file: !44, line: 1021, baseType: !3057, size: 64, offset: 256)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{!484, !2989}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3041, file: !44, line: 1022, baseType: !3061, size: 64, offset: 320)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!141, !2989, !141, !171}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3041, file: !44, line: 1023, baseType: !3065, size: 64, offset: 384)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{null, !2989, !841}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3041, file: !44, line: 1024, baseType: !3057, size: 64, offset: 448)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2990, file: !44, line: 1097, baseType: !3070, size: 256, offset: 1408)
!3070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2990, file: !44, line: 1089, size: 256, elements: !3071)
!3071 = !{!3072, !3081, !3087}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3070, file: !44, line: 1090, baseType: !3073, size: 256)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3074, line: 10, size: 256, elements: !3075)
!3074 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3075 = !{!3076, !3077, !3080}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3073, file: !3074, line: 11, baseType: !411, size: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3073, file: !3074, line: 12, baseType: !3078, size: 64, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3074, line: 5, flags: DIFlagFwdDecl)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3073, file: !3074, line: 13, baseType: !168, size: 128, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3070, file: !44, line: 1091, baseType: !3082, size: 64)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3074, line: 17, size: 64, elements: !3083)
!3083 = !{!3084}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3082, file: !3074, line: 18, baseType: !3085, size: 64)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3074, line: 16, flags: DIFlagFwdDecl)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3070, file: !44, line: 1096, baseType: !3088, size: 192)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3070, file: !44, line: 1092, size: 192, elements: !3089)
!3089 = !{!3090, !3091, !3092}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3088, file: !44, line: 1093, baseType: !168, size: 128)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3088, file: !44, line: 1094, baseType: !141, size: 32, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3088, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2914, file: !44, line: 1843, baseType: !3094, size: 64, offset: 1280)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!307, !353, !752, !141, !323, !727, !141}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2914, file: !44, line: 1844, baseType: !1122, size: 64, offset: 1344)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2914, file: !44, line: 1845, baseType: !3099, size: 64, offset: 1408)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{!141, !141}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2914, file: !44, line: 1846, baseType: !2986, size: 64, offset: 1472)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2914, file: !44, line: 1847, baseType: !3104, size: 64, offset: 1536)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = !DISubroutineType(types: !3106)
!3106 = !{!307, !2150, !353, !727, !323, !7}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2914, file: !44, line: 1848, baseType: !3108, size: 64, offset: 1600)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{!307, !353, !727, !2150, !323, !7}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2914, file: !44, line: 1849, baseType: !3112, size: 64, offset: 1664)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 64)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{!141, !353, !311, !3115, !841}
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2914, file: !44, line: 1850, baseType: !3117, size: 64, offset: 1728)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = !DISubroutineType(types: !3119)
!3119 = !{!311, !353, !141, !525, !525}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2914, file: !44, line: 1852, baseType: !3121, size: 64, offset: 1792)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{null, !706, !353}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2914, file: !44, line: 1856, baseType: !3125, size: 64, offset: 1856)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = !DISubroutineType(types: !3127)
!3127 = !{!307, !353, !525, !353, !525, !323, !7}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2914, file: !44, line: 1858, baseType: !3129, size: 64, offset: 1920)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!525, !353, !525, !353, !525, !525, !7}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2914, file: !44, line: 1861, baseType: !2978, size: 64, offset: 1984)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2909, file: !44, line: 692, baseType: !659, size: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !424, file: !44, line: 694, baseType: !3135, size: 64, offset: 2560)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3137)
!3137 = !{!3138, !3139, !3140, !3141}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3136, file: !44, line: 1101, baseType: !185)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3136, file: !44, line: 1102, baseType: !168, size: 128)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3136, file: !44, line: 1103, baseType: !168, size: 128, offset: 128)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3136, file: !44, line: 1104, baseType: !168, size: 128, offset: 256)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !424, file: !44, line: 695, baseType: !766, size: 1216, align: 64, offset: 2624)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !424, file: !44, line: 696, baseType: !168, size: 128, offset: 3840)
!3144 = !DIDerivedType(tag: DW_TAG_member, scope: !424, file: !44, line: 697, baseType: !3145, size: 64, offset: 3968)
!3145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !424, file: !44, line: 697, size: 64, elements: !3146)
!3146 = !{!3147, !3148, !3149, !3160, !3161}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3145, file: !44, line: 698, baseType: !2150, size: 64)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3145, file: !44, line: 699, baseType: !2664, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3145, file: !44, line: 700, baseType: !3150, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3152, line: 14, size: 832, elements: !3153)
!3152 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3153 = !{!3154, !3155, !3156, !3157, !3158, !3159}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3151, file: !3152, line: 15, baseType: !234, size: 512)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3151, file: !3152, line: 16, baseType: !625, size: 64, offset: 512)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3151, file: !3152, line: 17, baseType: !2912, size: 64, offset: 576)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3151, file: !3152, line: 18, baseType: !168, size: 128, offset: 640)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3151, file: !3152, line: 19, baseType: !507, size: 32, offset: 768)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3151, file: !3152, line: 20, baseType: !7, size: 32, offset: 800)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3145, file: !44, line: 701, baseType: !276, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3145, file: !44, line: 702, baseType: !7, size: 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !424, file: !44, line: 705, baseType: !412, size: 32, offset: 4032)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !424, file: !44, line: 708, baseType: !412, size: 32, offset: 4064)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !424, file: !44, line: 709, baseType: !2746, size: 64, offset: 4096)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !424, file: !44, line: 720, baseType: !113, size: 64, offset: 4160)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !379, file: !376, line: 98, baseType: !3167, size: 256, offset: 448)
!3167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 256, elements: !2282)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !379, file: !376, line: 101, baseType: !3169, size: 32, offset: 704)
!3169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3170, line: 25, size: 32, elements: !3171)
!3170 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3171 = !{!3172}
!3172 = !DIDerivedType(tag: DW_TAG_member, scope: !3169, file: !3170, line: 26, baseType: !3173, size: 32)
!3173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3169, file: !3170, line: 26, size: 32, elements: !3174)
!3174 = !{!3175}
!3175 = !DIDerivedType(tag: DW_TAG_member, scope: !3173, file: !3170, line: 30, baseType: !3176, size: 32)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3173, file: !3170, line: 30, size: 32, elements: !3177)
!3177 = !{!3178, !3179}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3176, file: !3170, line: 31, baseType: !185)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3176, file: !3170, line: 32, baseType: !141, size: 32)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !379, file: !376, line: 102, baseType: !2763, size: 64, offset: 768)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !379, file: !376, line: 103, baseType: !591, size: 64, offset: 832)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !379, file: !376, line: 104, baseType: !148, size: 64, offset: 896)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !379, file: !376, line: 105, baseType: !113, size: 64, offset: 960)
!3184 = !DIDerivedType(tag: DW_TAG_member, scope: !379, file: !376, line: 107, baseType: !3185, size: 128, offset: 1024)
!3185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !379, file: !376, line: 107, size: 128, elements: !3186)
!3186 = !{!3187, !3188}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3185, file: !376, line: 108, baseType: !168, size: 128)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3185, file: !376, line: 109, baseType: !3189, size: 64)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !379, file: !376, line: 111, baseType: !168, size: 128, offset: 1152)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !379, file: !376, line: 112, baseType: !168, size: 128, offset: 1280)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !379, file: !376, line: 120, baseType: !3193, size: 128, offset: 1408)
!3193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !379, file: !376, line: 116, size: 128, elements: !3194)
!3194 = !{!3195, !3196, !3197}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3193, file: !376, line: 117, baseType: !634, size: 128)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3193, file: !376, line: 118, baseType: !393, size: 128)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3193, file: !376, line: 119, baseType: !361, size: 128, align: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !354, file: !44, line: 922, baseType: !423, size: 64, offset: 256)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !354, file: !44, line: 923, baseType: !2912, size: 64, offset: 320)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !354, file: !44, line: 929, baseType: !185, offset: 384)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !354, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !354, file: !44, line: 931, baseType: !156, size: 64, offset: 448)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !354, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !354, file: !44, line: 933, baseType: !2759, size: 32, offset: 544)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !354, file: !44, line: 934, baseType: !180, size: 192, offset: 576)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !354, file: !44, line: 935, baseType: !525, size: 64, offset: 768)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !354, file: !44, line: 936, baseType: !3208, size: 192, offset: 832)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3213, !3214, !3215}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3208, file: !44, line: 886, baseType: !3011)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3208, file: !44, line: 887, baseType: !1481, size: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3208, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3208, file: !44, line: 889, baseType: !429, size: 32, offset: 96)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3208, file: !44, line: 889, baseType: !429, size: 32, offset: 128)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3208, file: !44, line: 890, baseType: !141, size: 32, offset: 160)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !354, file: !44, line: 937, baseType: !1590, size: 64, offset: 1024)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !354, file: !44, line: 938, baseType: !3218, size: 256, offset: 1088)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3219)
!3219 = !{!3220, !3221, !3222, !3223, !3224, !3225}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3218, file: !44, line: 897, baseType: !148, size: 64)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3218, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3218, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3218, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3218, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3218, file: !44, line: 904, baseType: !525, size: 64, offset: 192)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !354, file: !44, line: 940, baseType: !415, size: 64, offset: 1344)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !354, file: !44, line: 945, baseType: !113, size: 64, offset: 1408)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !354, file: !44, line: 949, baseType: !168, size: 128, offset: 1472)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !354, file: !44, line: 950, baseType: !168, size: 128, offset: 1600)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !354, file: !44, line: 952, baseType: !765, size: 64, offset: 1728)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !354, file: !44, line: 953, baseType: !929, size: 32, offset: 1792)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !354, file: !44, line: 954, baseType: !929, size: 32, offset: 1824)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !344, file: !301, line: 174, baseType: !350, size: 64, offset: 320)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !344, file: !301, line: 176, baseType: !3235, size: 64, offset: 384)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3236 = !DISubroutineType(types: !3237)
!3237 = !{!141, !353, !243, !343, !1002}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !332, file: !301, line: 90, baseType: !327, size: 64, offset: 192)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !332, file: !301, line: 91, baseType: !3240, size: 64, offset: 256)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !291, file: !235, line: 143, baseType: !3242, size: 64, offset: 256)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{!3245, !243}
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3247)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3248)
!3248 = !{!3249, !3250, !3254, !3258, !3264, !3268}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3247, file: !61, line: 40, baseType: !60, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3247, file: !61, line: 41, baseType: !3251, size: 64, offset: 64)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!484}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3247, file: !61, line: 42, baseType: !3255, size: 64, offset: 128)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!113}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3247, file: !61, line: 43, baseType: !3259, size: 64, offset: 192)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{!2179, !3262}
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3247, file: !61, line: 44, baseType: !3265, size: 64, offset: 256)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!2179}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3247, file: !61, line: 45, baseType: !462, size: 64, offset: 320)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !291, file: !235, line: 144, baseType: !3270, size: 64, offset: 320)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{!2179, !243}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !291, file: !235, line: 145, baseType: !3274, size: 64, offset: 384)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{null, !243, !3277, !3278}
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !234, file: !235, line: 70, baseType: !3280, size: 64, offset: 384)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !611, line: 123, size: 1024, elements: !3282)
!3282 = !{!3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3393, !3394, !3395, !3396, !3397}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3281, file: !611, line: 124, baseType: !202, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3281, file: !611, line: 125, baseType: !202, size: 32, offset: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3281, file: !611, line: 135, baseType: !3280, size: 64, offset: 64)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3281, file: !611, line: 136, baseType: !238, size: 64, offset: 128)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3281, file: !611, line: 138, baseType: !787, size: 192, align: 64, offset: 192)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3281, file: !611, line: 140, baseType: !2179, size: 64, offset: 384)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3281, file: !611, line: 141, baseType: !7, size: 32, offset: 448)
!3290 = !DIDerivedType(tag: DW_TAG_member, scope: !3281, file: !611, line: 142, baseType: !3291, size: 256, offset: 512)
!3291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3281, file: !611, line: 142, size: 256, elements: !3292)
!3292 = !{!3293, !3333, !3337}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3291, file: !611, line: 143, baseType: !3294, size: 192)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !611, line: 91, size: 192, elements: !3295)
!3295 = !{!3296, !3297, !3298}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3294, file: !611, line: 92, baseType: !148, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3294, file: !611, line: 94, baseType: !783, size: 64, offset: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3294, file: !611, line: 100, baseType: !3299, size: 64, offset: 128)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !611, line: 180, size: 704, elements: !3301)
!3301 = !{!3302, !3303, !3304, !3305, !3306, !3307, !3331, !3332}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3300, file: !611, line: 182, baseType: !3280, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3300, file: !611, line: 183, baseType: !7, size: 32, offset: 64)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3300, file: !611, line: 186, baseType: !1510, size: 192, offset: 128)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3300, file: !611, line: 187, baseType: !411, size: 32, offset: 320)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3300, file: !611, line: 188, baseType: !411, size: 32, offset: 352)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3300, file: !611, line: 189, baseType: !3308, size: 64, offset: 384)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3309, size: 64)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !611, line: 168, size: 320, elements: !3310)
!3310 = !{!3311, !3315, !3319, !3323, !3327}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3309, file: !611, line: 169, baseType: !3312, size: 64)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!141, !706, !3299}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3309, file: !611, line: 171, baseType: !3316, size: 64, offset: 64)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{!141, !3280, !238, !317}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3309, file: !611, line: 173, baseType: !3320, size: 64, offset: 128)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!141, !3280}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3309, file: !611, line: 174, baseType: !3324, size: 64, offset: 192)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!141, !3280, !3280, !238}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3309, file: !611, line: 176, baseType: !3328, size: 64, offset: 256)
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3329, size: 64)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!141, !706, !3280, !3299}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3300, file: !611, line: 192, baseType: !168, size: 128, offset: 448)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3300, file: !611, line: 194, baseType: !1491, size: 128, offset: 576)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3291, file: !611, line: 144, baseType: !3334, size: 64)
!3334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !611, line: 103, size: 64, elements: !3335)
!3335 = !{!3336}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3334, file: !611, line: 104, baseType: !3280, size: 64)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3291, file: !611, line: 145, baseType: !3338, size: 256)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !611, line: 107, size: 256, elements: !3339)
!3339 = !{!3340, !3388, !3391, !3392}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3338, file: !611, line: 108, baseType: !3341, size: 64)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3343)
!3343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !611, line: 217, size: 768, elements: !3344)
!3344 = !{!3345, !3365, !3369, !3370, !3371, !3372, !3373, !3377, !3378, !3379, !3380, !3384}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3343, file: !611, line: 222, baseType: !3346, size: 64)
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 64)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{!141, !3349}
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3350, size: 64)
!3350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !611, line: 197, size: 1088, elements: !3351)
!3351 = !{!3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364}
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3350, file: !611, line: 199, baseType: !3280, size: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3350, file: !611, line: 200, baseType: !353, size: 64, offset: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3350, file: !611, line: 201, baseType: !706, size: 64, offset: 128)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3350, file: !611, line: 202, baseType: !113, size: 64, offset: 192)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3350, file: !611, line: 205, baseType: !180, size: 192, offset: 256)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3350, file: !611, line: 206, baseType: !180, size: 192, offset: 448)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3350, file: !611, line: 207, baseType: !141, size: 32, offset: 640)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3350, file: !611, line: 208, baseType: !168, size: 128, offset: 704)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3350, file: !611, line: 209, baseType: !276, size: 64, offset: 832)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3350, file: !611, line: 211, baseType: !323, size: 64, offset: 896)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3350, file: !611, line: 212, baseType: !484, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3350, file: !611, line: 213, baseType: !484, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3350, file: !611, line: 214, baseType: !1030, size: 64, offset: 1024)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3343, file: !611, line: 223, baseType: !3366, size: 64, offset: 64)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{null, !3349}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3343, file: !611, line: 236, baseType: !737, size: 64, offset: 128)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3343, file: !611, line: 238, baseType: !724, size: 64, offset: 192)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3343, file: !611, line: 239, baseType: !733, size: 64, offset: 256)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3343, file: !611, line: 240, baseType: !729, size: 64, offset: 320)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3343, file: !611, line: 242, baseType: !3374, size: 64, offset: 384)
!3374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3375, size: 64)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{!307, !3349, !276, !323, !525}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3343, file: !611, line: 252, baseType: !323, size: 64, offset: 448)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3343, file: !611, line: 259, baseType: !484, size: 8, offset: 512)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3343, file: !611, line: 260, baseType: !3374, size: 64, offset: 576)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3343, file: !611, line: 263, baseType: !3381, size: 64, offset: 640)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!2953, !3349, !2955}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3343, file: !611, line: 266, baseType: !3385, size: 64, offset: 704)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!141, !3349, !1002}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3338, file: !611, line: 109, baseType: !3389, size: 64, offset: 64)
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3390 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !611, line: 31, flags: DIFlagFwdDecl)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3338, file: !611, line: 110, baseType: !525, size: 64, offset: 128)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3338, file: !611, line: 111, baseType: !3280, size: 64, offset: 192)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3281, file: !611, line: 148, baseType: !113, size: 64, offset: 768)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3281, file: !611, line: 154, baseType: !415, size: 64, offset: 832)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3281, file: !611, line: 156, baseType: !318, size: 16, offset: 896)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3281, file: !611, line: 157, baseType: !317, size: 16, offset: 912)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3281, file: !611, line: 158, baseType: !3398, size: 64, offset: 960)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !611, line: 32, flags: DIFlagFwdDecl)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !234, file: !235, line: 71, baseType: !220, size: 32, offset: 448)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !234, file: !235, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !234, file: !235, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !234, file: !235, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !234, file: !235, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !234, file: !235, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !231, file: !73, line: 463, baseType: !230, size: 64, offset: 512)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !231, file: !73, line: 465, baseType: !3408, size: 64, offset: 576)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !231, file: !73, line: 467, baseType: !238, size: 64, offset: 640)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !231, file: !73, line: 468, baseType: !3412, size: 64, offset: 704)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3414)
!3414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3415)
!3415 = !{!3416, !3417, !3418, !3422, !3427, !3431}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3414, file: !73, line: 88, baseType: !238, size: 64)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3414, file: !73, line: 89, baseType: !329, size: 64, offset: 64)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3414, file: !73, line: 90, baseType: !3419, size: 64, offset: 128)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!141, !230, !271}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3414, file: !73, line: 91, baseType: !3423, size: 64, offset: 192)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{!276, !230, !3426, !3277, !3278}
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3414, file: !73, line: 93, baseType: !3428, size: 64, offset: 256)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{null, !230}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3414, file: !73, line: 95, baseType: !3432, size: 64, offset: 320)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3434)
!3434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3435)
!3435 = !{!3436, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3434, file: !80, line: 279, baseType: !3437, size: 64)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{!141, !230}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3434, file: !80, line: 280, baseType: !3428, size: 64, offset: 64)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3434, file: !80, line: 281, baseType: !3437, size: 64, offset: 128)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3434, file: !80, line: 282, baseType: !3437, size: 64, offset: 192)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3434, file: !80, line: 283, baseType: !3437, size: 64, offset: 256)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3434, file: !80, line: 284, baseType: !3437, size: 64, offset: 320)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3434, file: !80, line: 285, baseType: !3437, size: 64, offset: 384)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3434, file: !80, line: 286, baseType: !3437, size: 64, offset: 448)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3434, file: !80, line: 287, baseType: !3437, size: 64, offset: 512)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3434, file: !80, line: 288, baseType: !3437, size: 64, offset: 576)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3434, file: !80, line: 289, baseType: !3437, size: 64, offset: 640)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3434, file: !80, line: 290, baseType: !3437, size: 64, offset: 704)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3434, file: !80, line: 291, baseType: !3437, size: 64, offset: 768)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3434, file: !80, line: 292, baseType: !3437, size: 64, offset: 832)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3434, file: !80, line: 293, baseType: !3437, size: 64, offset: 896)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3434, file: !80, line: 294, baseType: !3437, size: 64, offset: 960)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3434, file: !80, line: 295, baseType: !3437, size: 64, offset: 1024)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3434, file: !80, line: 296, baseType: !3437, size: 64, offset: 1088)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3434, file: !80, line: 297, baseType: !3437, size: 64, offset: 1152)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3434, file: !80, line: 298, baseType: !3437, size: 64, offset: 1216)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3434, file: !80, line: 299, baseType: !3437, size: 64, offset: 1280)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3434, file: !80, line: 300, baseType: !3437, size: 64, offset: 1344)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3434, file: !80, line: 301, baseType: !3437, size: 64, offset: 1408)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !231, file: !73, line: 470, baseType: !3463, size: 64, offset: 768)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3465, line: 82, size: 1408, elements: !3466)
!3465 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3466 = !{!3467, !3468, !3469, !3470, !3471, !3472, !3473, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3548, !3551, !3552}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3464, file: !3465, line: 83, baseType: !238, size: 64)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3464, file: !3465, line: 84, baseType: !238, size: 64, offset: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3464, file: !3465, line: 85, baseType: !230, size: 64, offset: 128)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3464, file: !3465, line: 86, baseType: !329, size: 64, offset: 192)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3464, file: !3465, line: 87, baseType: !329, size: 64, offset: 256)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3464, file: !3465, line: 88, baseType: !329, size: 64, offset: 320)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3464, file: !3465, line: 90, baseType: !3474, size: 64, offset: 384)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!141, !230, !3477}
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3479)
!3479 = !{!3480, !3481, !3482, !3483, !3484, !3485, !3486, !3499, !3512, !3513, !3514, !3515, !3516, !3524, !3525, !3526, !3527, !3528, !3529}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3478, file: !67, line: 96, baseType: !238, size: 64)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3478, file: !67, line: 97, baseType: !3463, size: 64, offset: 64)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3478, file: !67, line: 99, baseType: !625, size: 64, offset: 128)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3478, file: !67, line: 100, baseType: !238, size: 64, offset: 192)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3478, file: !67, line: 102, baseType: !484, size: 8, offset: 256)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3478, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3478, file: !67, line: 105, baseType: !3487, size: 64, offset: 320)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3489)
!3489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3490, line: 262, size: 1600, elements: !3491)
!3490 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3491 = !{!3492, !3493, !3494, !3498}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3489, file: !3490, line: 263, baseType: !2749, size: 256)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3489, file: !3490, line: 264, baseType: !2749, size: 256, offset: 256)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3489, file: !3490, line: 265, baseType: !3495, size: 1024, offset: 512)
!3495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 1024, elements: !3496)
!3496 = !{!3497}
!3497 = !DISubrange(count: 128)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3489, file: !3490, line: 266, baseType: !2179, size: 64, offset: 1536)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3478, file: !67, line: 106, baseType: !3500, size: 64, offset: 384)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3502)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3490, line: 210, size: 256, elements: !3503)
!3503 = !{!3504, !3508, !3510, !3511}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3502, file: !3490, line: 211, baseType: !3505, size: 72)
!3505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1363, size: 72, elements: !3506)
!3506 = !{!3507}
!3507 = !DISubrange(count: 9)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3502, file: !3490, line: 212, baseType: !3509, size: 64, offset: 128)
!3509 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3490, line: 14, baseType: !148)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3502, file: !3490, line: 213, baseType: !412, size: 32, offset: 192)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3502, file: !3490, line: 214, baseType: !412, size: 32, offset: 224)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3478, file: !67, line: 108, baseType: !3437, size: 64, offset: 448)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3478, file: !67, line: 109, baseType: !3428, size: 64, offset: 512)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3478, file: !67, line: 110, baseType: !3437, size: 64, offset: 576)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3478, file: !67, line: 111, baseType: !3428, size: 64, offset: 640)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3478, file: !67, line: 112, baseType: !3517, size: 64, offset: 704)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!141, !230, !3520}
!3520 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3521)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3522)
!3522 = !{!3523}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3521, file: !80, line: 51, baseType: !141, size: 32)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3478, file: !67, line: 113, baseType: !3437, size: 64, offset: 768)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3478, file: !67, line: 114, baseType: !329, size: 64, offset: 832)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3478, file: !67, line: 115, baseType: !329, size: 64, offset: 896)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3478, file: !67, line: 117, baseType: !3432, size: 64, offset: 960)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3478, file: !67, line: 118, baseType: !3428, size: 64, offset: 1024)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3478, file: !67, line: 120, baseType: !3530, size: 64, offset: 1088)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3464, file: !3465, line: 91, baseType: !3419, size: 64, offset: 448)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3464, file: !3465, line: 92, baseType: !3437, size: 64, offset: 512)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3464, file: !3465, line: 93, baseType: !3428, size: 64, offset: 576)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3464, file: !3465, line: 94, baseType: !3437, size: 64, offset: 640)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3464, file: !3465, line: 95, baseType: !3428, size: 64, offset: 704)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3464, file: !3465, line: 97, baseType: !3437, size: 64, offset: 768)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3464, file: !3465, line: 98, baseType: !3437, size: 64, offset: 832)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3464, file: !3465, line: 100, baseType: !3517, size: 64, offset: 896)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3464, file: !3465, line: 101, baseType: !3437, size: 64, offset: 960)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3464, file: !3465, line: 103, baseType: !3437, size: 64, offset: 1024)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3464, file: !3465, line: 105, baseType: !3437, size: 64, offset: 1088)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3464, file: !3465, line: 107, baseType: !3432, size: 64, offset: 1152)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3464, file: !3465, line: 109, baseType: !3545, size: 64, offset: 1216)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3547)
!3547 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3465, line: 109, flags: DIFlagFwdDecl)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3464, file: !3465, line: 111, baseType: !3549, size: 64, offset: 1280)
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 64)
!3550 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3465, line: 111, flags: DIFlagFwdDecl)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3464, file: !3465, line: 112, baseType: !640, offset: 1344)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3464, file: !3465, line: 114, baseType: !484, size: 8, offset: 1344)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !231, file: !73, line: 471, baseType: !3477, size: 64, offset: 832)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !231, file: !73, line: 473, baseType: !113, size: 64, offset: 896)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !231, file: !73, line: 475, baseType: !113, size: 64, offset: 960)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !231, file: !73, line: 480, baseType: !180, size: 192, offset: 1024)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !231, file: !73, line: 484, baseType: !3558, size: 576, offset: 1216)
!3558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3559)
!3559 = !{!3560, !3561, !3562, !3563, !3564, !3565}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3558, file: !73, line: 362, baseType: !168, size: 128)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3558, file: !73, line: 363, baseType: !168, size: 128, offset: 128)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3558, file: !73, line: 364, baseType: !168, size: 128, offset: 256)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3558, file: !73, line: 365, baseType: !168, size: 128, offset: 384)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3558, file: !73, line: 366, baseType: !484, size: 8, offset: 512)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3558, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !231, file: !73, line: 485, baseType: !3567, size: 2304, offset: 1792)
!3567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3568)
!3568 = !{!3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3664, !3668}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3567, file: !80, line: 566, baseType: !3520, size: 32)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3567, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3567, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3567, file: !80, line: 569, baseType: !484, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3567, file: !80, line: 570, baseType: !484, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3567, file: !80, line: 571, baseType: !484, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3567, file: !80, line: 572, baseType: !484, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3567, file: !80, line: 573, baseType: !484, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3567, file: !80, line: 574, baseType: !484, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3567, file: !80, line: 575, baseType: !484, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3567, file: !80, line: 576, baseType: !484, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3567, file: !80, line: 577, baseType: !411, size: 32, offset: 64)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3567, file: !80, line: 578, baseType: !185, offset: 96)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3567, file: !80, line: 580, baseType: !168, size: 128, offset: 128)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3567, file: !80, line: 581, baseType: !1545, size: 192, offset: 256)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3567, file: !80, line: 582, baseType: !3585, size: 64, offset: 448)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3587, line: 43, size: 1472, elements: !3588)
!3587 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3588 = !{!3589, !3590, !3591, !3592, !3593, !3596, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3586, file: !3587, line: 44, baseType: !238, size: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3586, file: !3587, line: 45, baseType: !141, size: 32, offset: 64)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3586, file: !3587, line: 46, baseType: !168, size: 128, offset: 128)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3586, file: !3587, line: 47, baseType: !185, offset: 256)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3586, file: !3587, line: 48, baseType: !3594, size: 64, offset: 256)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3586, file: !3587, line: 49, baseType: !3597, size: 320, offset: 320)
!3597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3598, line: 11, size: 320, elements: !3599)
!3598 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3599 = !{!3600, !3601, !3602, !3607}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3597, file: !3598, line: 16, baseType: !634, size: 128)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3597, file: !3598, line: 17, baseType: !148, size: 64, offset: 128)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3597, file: !3598, line: 18, baseType: !3603, size: 64, offset: 192)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{null, !3606}
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3597, file: !3598, line: 19, baseType: !411, size: 32, offset: 256)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3586, file: !3587, line: 50, baseType: !148, size: 64, offset: 640)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3586, file: !3587, line: 51, baseType: !1310, size: 64, offset: 704)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3586, file: !3587, line: 52, baseType: !1310, size: 64, offset: 768)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3586, file: !3587, line: 53, baseType: !1310, size: 64, offset: 832)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3586, file: !3587, line: 54, baseType: !1310, size: 64, offset: 896)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3586, file: !3587, line: 55, baseType: !1310, size: 64, offset: 960)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3586, file: !3587, line: 56, baseType: !148, size: 64, offset: 1024)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3586, file: !3587, line: 57, baseType: !148, size: 64, offset: 1088)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3586, file: !3587, line: 58, baseType: !148, size: 64, offset: 1152)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3586, file: !3587, line: 59, baseType: !148, size: 64, offset: 1216)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3586, file: !3587, line: 60, baseType: !148, size: 64, offset: 1280)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3586, file: !3587, line: 61, baseType: !230, size: 64, offset: 1344)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3586, file: !3587, line: 62, baseType: !484, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3586, file: !3587, line: 63, baseType: !484, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3567, file: !80, line: 583, baseType: !484, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3567, file: !80, line: 584, baseType: !484, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3567, file: !80, line: 585, baseType: !484, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3567, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3567, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3567, file: !80, line: 592, baseType: !1302, size: 512, offset: 576)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3567, file: !80, line: 593, baseType: !415, size: 64, offset: 1088)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3567, file: !80, line: 594, baseType: !152, size: 256, offset: 1152)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3567, file: !80, line: 595, baseType: !1491, size: 128, offset: 1408)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3567, file: !80, line: 596, baseType: !3594, size: 64, offset: 1536)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3567, file: !80, line: 597, baseType: !202, size: 32, offset: 1600)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3567, file: !80, line: 598, baseType: !202, size: 32, offset: 1632)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3567, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3567, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3567, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3567, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3567, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3567, file: !80, line: 604, baseType: !484, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3567, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3567, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3567, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3567, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3567, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3567, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3567, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3567, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3567, file: !80, line: 613, baseType: !141, size: 32, offset: 1792)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3567, file: !80, line: 614, baseType: !141, size: 32, offset: 1824)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3567, file: !80, line: 615, baseType: !415, size: 64, offset: 1856)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3567, file: !80, line: 616, baseType: !415, size: 64, offset: 1920)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3567, file: !80, line: 617, baseType: !415, size: 64, offset: 1984)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3567, file: !80, line: 618, baseType: !415, size: 64, offset: 2048)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3567, file: !80, line: 620, baseType: !3655, size: 64, offset: 2112)
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3657)
!3657 = !{!3658, !3659, !3660, !3661}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3656, file: !80, line: 537, baseType: !185)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3656, file: !80, line: 538, baseType: !7, size: 32)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3656, file: !80, line: 540, baseType: !168, size: 128, offset: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3656, file: !80, line: 543, baseType: !3662, size: 64, offset: 192)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3567, file: !80, line: 621, baseType: !3665, size: 64, offset: 2176)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{null, !230, !1454}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3567, file: !80, line: 622, baseType: !3669, size: 64, offset: 2240)
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 64)
!3670 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !231, file: !73, line: 486, baseType: !3672, size: 64, offset: 4096)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 64)
!3673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3674)
!3674 = !{!3675, !3676, !3677, !3681, !3682, !3683}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3673, file: !80, line: 643, baseType: !3434, size: 1472)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3673, file: !80, line: 644, baseType: !3437, size: 64, offset: 1472)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3673, file: !80, line: 645, baseType: !3678, size: 64, offset: 1536)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{null, !230, !484}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3673, file: !80, line: 646, baseType: !3437, size: 64, offset: 1600)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3673, file: !80, line: 647, baseType: !3428, size: 64, offset: 1664)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3673, file: !80, line: 648, baseType: !3428, size: 64, offset: 1728)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !231, file: !73, line: 493, baseType: !3685, size: 64, offset: 4160)
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3686 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !3687, line: 13, flags: DIFlagFwdDecl)
!3687 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !231, file: !73, line: 499, baseType: !168, size: 128, offset: 4224)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !231, file: !73, line: 502, baseType: !3690, size: 64, offset: 4352)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3692)
!3692 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !231, file: !73, line: 504, baseType: !3694, size: 64, offset: 4416)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !231, file: !73, line: 505, baseType: !415, size: 64, offset: 4480)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !231, file: !73, line: 510, baseType: !415, size: 64, offset: 4544)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !231, file: !73, line: 511, baseType: !3698, size: 64, offset: 4608)
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 64)
!3699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3700)
!3700 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !231, file: !73, line: 513, baseType: !3702, size: 64, offset: 4672)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3704)
!3704 = !{!3705, !3706}
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3703, file: !73, line: 293, baseType: !7, size: 32)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3703, file: !73, line: 294, baseType: !148, size: 64, offset: 64)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !231, file: !73, line: 515, baseType: !168, size: 128, offset: 4736)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !231, file: !73, line: 526, baseType: !3709, offset: 4864)
!3709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3710, line: 5, elements: !199)
!3710 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !231, file: !73, line: 528, baseType: !3712, size: 64, offset: 4864)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 64)
!3713 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3714, line: 14, flags: DIFlagFwdDecl)
!3714 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !231, file: !73, line: 529, baseType: !3716, size: 64, offset: 4928)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3718, line: 17, size: 192, elements: !3719)
!3718 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3719 = !{!3720, !3721, !3804}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3717, file: !3718, line: 18, baseType: !3716, size: 64)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3717, file: !3718, line: 19, baseType: !3722, size: 64, offset: 64)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3724)
!3724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3718, line: 110, size: 1152, elements: !3725)
!3725 = !{!3726, !3730, !3734, !3740, !3746, !3750, !3754, !3759, !3763, !3764, !3768, !3772, !3776, !3787, !3788, !3789, !3790, !3800}
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3724, file: !3718, line: 111, baseType: !3727, size: 64)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{!3716, !3716}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3724, file: !3718, line: 112, baseType: !3731, size: 64, offset: 64)
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3732, size: 64)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{null, !3716}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3724, file: !3718, line: 113, baseType: !3735, size: 64, offset: 128)
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 64)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!484, !3738}
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3717)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3724, file: !3718, line: 114, baseType: !3741, size: 64, offset: 192)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DISubroutineType(types: !3743)
!3743 = !{!2179, !3738, !3744}
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 64)
!3745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !231)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3724, file: !3718, line: 116, baseType: !3747, size: 64, offset: 256)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!484, !3738, !238}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3724, file: !3718, line: 118, baseType: !3751, size: 64, offset: 320)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!141, !3738, !238, !7, !113, !323}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3724, file: !3718, line: 123, baseType: !3755, size: 64, offset: 384)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!141, !3738, !238, !3758, !323}
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3724, file: !3718, line: 126, baseType: !3760, size: 64, offset: 448)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{!238, !3738}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3724, file: !3718, line: 127, baseType: !3760, size: 64, offset: 512)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3724, file: !3718, line: 128, baseType: !3765, size: 64, offset: 576)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!3716, !3738}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3724, file: !3718, line: 130, baseType: !3769, size: 64, offset: 640)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{!3716, !3738, !3716}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3724, file: !3718, line: 133, baseType: !3773, size: 64, offset: 704)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!3716, !3738, !238}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3724, file: !3718, line: 135, baseType: !3777, size: 64, offset: 768)
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{!141, !3738, !238, !238, !7, !7, !3780}
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3718, line: 43, size: 640, elements: !3782)
!3782 = !{!3783, !3784, !3785}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3781, file: !3718, line: 44, baseType: !3716, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3781, file: !3718, line: 45, baseType: !7, size: 32, offset: 64)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3781, file: !3718, line: 46, baseType: !3786, size: 512, offset: 128)
!3786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !415, size: 512, elements: !1340)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3724, file: !3718, line: 140, baseType: !3769, size: 64, offset: 832)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3724, file: !3718, line: 143, baseType: !3765, size: 64, offset: 896)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3724, file: !3718, line: 145, baseType: !3727, size: 64, offset: 960)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3724, file: !3718, line: 146, baseType: !3791, size: 64, offset: 1024)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 64)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{!141, !3738, !3794}
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3718, line: 29, size: 128, elements: !3796)
!3796 = !{!3797, !3798, !3799}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3795, file: !3718, line: 30, baseType: !7, size: 32)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3795, file: !3718, line: 31, baseType: !7, size: 32, offset: 32)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3795, file: !3718, line: 32, baseType: !3738, size: 64, offset: 64)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3724, file: !3718, line: 148, baseType: !3801, size: 64, offset: 1088)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 64)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!141, !3738, !230}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3717, file: !3718, line: 20, baseType: !230, size: 64, offset: 128)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !231, file: !73, line: 534, baseType: !507, size: 32, offset: 4992)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !231, file: !73, line: 535, baseType: !411, size: 32, offset: 5024)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !231, file: !73, line: 537, baseType: !185, offset: 5056)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !231, file: !73, line: 538, baseType: !168, size: 128, offset: 5056)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !231, file: !73, line: 540, baseType: !3810, size: 64, offset: 5184)
!3810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3811, size: 64)
!3811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3812, line: 54, size: 960, elements: !3813)
!3812 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3813 = !{!3814, !3815, !3816, !3817, !3818, !3819, !3820, !3824, !3828, !3829, !3830, !3831, !3835, !3839, !3840}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3811, file: !3812, line: 55, baseType: !238, size: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3811, file: !3812, line: 56, baseType: !625, size: 64, offset: 64)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3811, file: !3812, line: 58, baseType: !329, size: 64, offset: 128)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3811, file: !3812, line: 59, baseType: !329, size: 64, offset: 192)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3811, file: !3812, line: 60, baseType: !243, size: 64, offset: 256)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3811, file: !3812, line: 62, baseType: !3419, size: 64, offset: 320)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3811, file: !3812, line: 63, baseType: !3821, size: 64, offset: 384)
!3821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3822, size: 64)
!3822 = !DISubroutineType(types: !3823)
!3823 = !{!276, !230, !3426}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3811, file: !3812, line: 65, baseType: !3825, size: 64, offset: 448)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{null, !3810}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3811, file: !3812, line: 66, baseType: !3428, size: 64, offset: 512)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3811, file: !3812, line: 68, baseType: !3437, size: 64, offset: 576)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3811, file: !3812, line: 70, baseType: !3245, size: 64, offset: 640)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3811, file: !3812, line: 71, baseType: !3832, size: 64, offset: 704)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{!2179, !230}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3811, file: !3812, line: 73, baseType: !3836, size: 64, offset: 768)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{null, !230, !3277, !3278}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3811, file: !3812, line: 75, baseType: !3432, size: 64, offset: 832)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3811, file: !3812, line: 77, baseType: !3549, size: 64, offset: 896)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !231, file: !73, line: 541, baseType: !329, size: 64, offset: 5248)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !231, file: !73, line: 543, baseType: !3428, size: 64, offset: 5312)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !231, file: !73, line: 544, baseType: !3844, size: 64, offset: 5376)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !231, file: !73, line: 545, baseType: !3847, size: 64, offset: 5440)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !231, file: !73, line: 547, baseType: !484, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !231, file: !73, line: 548, baseType: !484, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !231, file: !73, line: 549, baseType: !484, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !231, file: !73, line: 550, baseType: !484, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !216, file: !121, line: 289, baseType: !3854, size: 64, offset: 128)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !3856, line: 302, size: 1472, elements: !3857)
!3856 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!3857 = !{!3858, !3859, !3860, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3889, !3890, !3894, !3895, !3897, !3900, !3903, !3904, !4065}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3855, file: !3856, line: 303, baseType: !141, size: 32)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3855, file: !3856, line: 304, baseType: !220, size: 32, offset: 32)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !3855, file: !3856, line: 305, baseType: !3861, size: 64, offset: 64)
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3855, file: !3856, line: 306, baseType: !625, size: 64, offset: 128)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !3855, file: !3856, line: 307, baseType: !238, size: 64, offset: 192)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3855, file: !3856, line: 308, baseType: !238, size: 64, offset: 256)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !3855, file: !3856, line: 309, baseType: !141, size: 32, offset: 320)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3855, file: !3856, line: 310, baseType: !141, size: 32, offset: 352)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !3855, file: !3856, line: 311, baseType: !141, size: 32, offset: 384)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3855, file: !3856, line: 312, baseType: !7, size: 32, offset: 416)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3855, file: !3856, line: 313, baseType: !1220, size: 16, offset: 448)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !3855, file: !3856, line: 314, baseType: !1220, size: 16, offset: 464)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !3855, file: !3856, line: 315, baseType: !3872, size: 352, offset: 480)
!3872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !3873, line: 32, size: 352, elements: !3874)
!3873 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!3874 = !{!3875, !3877, !3878, !3879, !3880, !3882, !3886, !3888}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !3872, file: !3873, line: 33, baseType: !3876, size: 32)
!3876 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !3873, line: 9, baseType: !7)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !3872, file: !3873, line: 34, baseType: !3876, size: 32, offset: 32)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !3872, file: !3873, line: 35, baseType: !3876, size: 32, offset: 64)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !3872, file: !3873, line: 36, baseType: !3876, size: 32, offset: 96)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !3872, file: !3873, line: 37, baseType: !3881, size: 8, offset: 128)
!3881 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !3873, line: 7, baseType: !421)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !3872, file: !3873, line: 38, baseType: !3883, size: 152, offset: 136)
!3883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3881, size: 152, elements: !3884)
!3884 = !{!3885}
!3885 = !DISubrange(count: 19)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !3872, file: !3873, line: 39, baseType: !3887, size: 32, offset: 288)
!3887 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !3873, line: 8, baseType: !7)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !3872, file: !3873, line: 40, baseType: !3887, size: 32, offset: 320)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3855, file: !3856, line: 316, baseType: !148, size: 64, offset: 832)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !3855, file: !3856, line: 317, baseType: !3891, size: 64, offset: 896)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3893, line: 123, flags: DIFlagFwdDecl)
!3893 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !3855, file: !3856, line: 318, baseType: !3854, size: 64, offset: 960)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !3855, file: !3856, line: 323, baseType: !3896, size: 64, offset: 1024)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !3855, file: !3856, line: 324, baseType: !3898, size: 64, offset: 1088)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !3855, file: !3856, line: 325, baseType: !3901, size: 64, offset: 1152)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !3855, file: !3856, line: 326, baseType: !113, size: 64, offset: 1216)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3855, file: !3856, line: 332, baseType: !3905, size: 64, offset: 1280)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3907)
!3907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !3856, line: 254, size: 2176, elements: !3908)
!3908 = !{!3909, !3913, !3917, !3921, !3925, !3929, !3933, !3934, !3938, !3942, !3943, !3947, !3948, !3952, !3956, !3960, !3961, !3962, !3963, !3964, !3965, !3969, !3970, !3971, !3975, !3979, !3980, !3984, !3996, !4011, !4032, !4059, !4060, !4064}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !3907, file: !3856, line: 255, baseType: !3910, size: 64)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!215, !3854, !353, !141}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !3907, file: !3856, line: 257, baseType: !3914, size: 64, offset: 64)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{!141, !3854, !215}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3907, file: !3856, line: 258, baseType: !3918, size: 64, offset: 128)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DISubroutineType(types: !3920)
!3920 = !{null, !3854, !215}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3907, file: !3856, line: 259, baseType: !3922, size: 64, offset: 192)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!141, !215, !353}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3907, file: !3856, line: 260, baseType: !3926, size: 64, offset: 256)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{null, !215, !353}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3907, file: !3856, line: 261, baseType: !3930, size: 64, offset: 320)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{null, !215}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3907, file: !3856, line: 262, baseType: !3930, size: 64, offset: 384)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3907, file: !3856, line: 263, baseType: !3935, size: 64, offset: 448)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!141, !215, !419, !141}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !3907, file: !3856, line: 265, baseType: !3939, size: 64, offset: 512)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = !DISubroutineType(types: !3941)
!3941 = !{!141, !215, !421}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !3907, file: !3856, line: 266, baseType: !3930, size: 64, offset: 576)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !3907, file: !3856, line: 267, baseType: !3944, size: 64, offset: 640)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!141, !215}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !3907, file: !3856, line: 268, baseType: !3944, size: 64, offset: 704)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3907, file: !3856, line: 269, baseType: !3949, size: 64, offset: 768)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!141, !215, !7, !148}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3907, file: !3856, line: 271, baseType: !3953, size: 64, offset: 832)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{!311, !215, !7, !148}
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !3907, file: !3856, line: 273, baseType: !3957, size: 64, offset: 896)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{null, !215, !3902}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !3907, file: !3856, line: 274, baseType: !3930, size: 64, offset: 960)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !3907, file: !3856, line: 275, baseType: !3930, size: 64, offset: 1024)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !3907, file: !3856, line: 276, baseType: !3930, size: 64, offset: 1088)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3907, file: !3856, line: 277, baseType: !3930, size: 64, offset: 1152)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !3907, file: !3856, line: 278, baseType: !3930, size: 64, offset: 1216)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !3907, file: !3856, line: 279, baseType: !3966, size: 64, offset: 1280)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!141, !215, !141}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !3907, file: !3856, line: 280, baseType: !3930, size: 64, offset: 1344)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !3907, file: !3856, line: 281, baseType: !3930, size: 64, offset: 1408)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !3907, file: !3856, line: 282, baseType: !3972, size: 64, offset: 1472)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{null, !215, !141}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !3907, file: !3856, line: 283, baseType: !3976, size: 64, offset: 1536)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{null, !215, !240}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !3907, file: !3856, line: 284, baseType: !3944, size: 64, offset: 1600)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !3907, file: !3856, line: 285, baseType: !3981, size: 64, offset: 1664)
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3982, size: 64)
!3982 = !DISubroutineType(types: !3983)
!3983 = !{!141, !215, !7, !7}
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !3907, file: !3856, line: 287, baseType: !3985, size: 64, offset: 1728)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DISubroutineType(types: !3987)
!3987 = !{!141, !215, !3988}
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !3990, line: 15, size: 64, elements: !3991)
!3990 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!3991 = !{!3992, !3993, !3994, !3995}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !3989, file: !3990, line: 16, baseType: !318, size: 16)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !3989, file: !3990, line: 17, baseType: !318, size: 16, offset: 16)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !3989, file: !3990, line: 18, baseType: !318, size: 16, offset: 32)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !3989, file: !3990, line: 19, baseType: !318, size: 16, offset: 48)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !3907, file: !3856, line: 288, baseType: !3997, size: 64, offset: 1792)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!141, !215, !4000}
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !4002, line: 10, size: 128, elements: !4003)
!4002 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!4003 = !{!4004, !4005, !4006, !4010}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !4001, file: !4002, line: 12, baseType: !880, size: 16)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !4001, file: !4002, line: 13, baseType: !880, size: 16, offset: 16)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !4001, file: !4002, line: 14, baseType: !4007, size: 80, offset: 32)
!4007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !880, size: 80, elements: !4008)
!4008 = !{!4009}
!4009 = !DISubrange(count: 5)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !4001, file: !4002, line: 15, baseType: !880, size: 16, offset: 112)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !3907, file: !3856, line: 289, baseType: !4012, size: 64, offset: 1856)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{!141, !215, !4015}
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !4017, line: 102, size: 640, elements: !4018)
!4017 = !DIFile(filename: "./include/uapi/linux/serial.h", directory: "/home/lizy2001/genbc/linux")
!4018 = !{!4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4016, file: !4017, line: 103, baseType: !141, size: 32)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4016, file: !4017, line: 103, baseType: !141, size: 32, offset: 32)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4016, file: !4017, line: 103, baseType: !141, size: 32, offset: 64)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4016, file: !4017, line: 103, baseType: !141, size: 32, offset: 96)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4016, file: !4017, line: 104, baseType: !141, size: 32, offset: 128)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4016, file: !4017, line: 104, baseType: !141, size: 32, offset: 160)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4016, file: !4017, line: 105, baseType: !141, size: 32, offset: 192)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4016, file: !4017, line: 105, baseType: !141, size: 32, offset: 224)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4016, file: !4017, line: 105, baseType: !141, size: 32, offset: 256)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4016, file: !4017, line: 105, baseType: !141, size: 32, offset: 288)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4016, file: !4017, line: 106, baseType: !141, size: 32, offset: 320)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4016, file: !4017, line: 107, baseType: !4031, size: 288, offset: 352)
!4031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 288, elements: !3506)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !3907, file: !3856, line: 291, baseType: !4033, size: 64, offset: 1920)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!141, !215, !4036}
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !4017, line: 19, size: 576, elements: !4038)
!4038 = !{!4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4051, !4052, !4053, !4054, !4056, !4057, !4058}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4037, file: !4017, line: 20, baseType: !141, size: 32)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !4037, file: !4017, line: 21, baseType: !141, size: 32, offset: 32)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4037, file: !4017, line: 22, baseType: !7, size: 32, offset: 64)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4037, file: !4017, line: 23, baseType: !141, size: 32, offset: 96)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4037, file: !4017, line: 24, baseType: !141, size: 32, offset: 128)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_fifo_size", scope: !4037, file: !4017, line: 25, baseType: !141, size: 32, offset: 160)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !4037, file: !4017, line: 26, baseType: !141, size: 32, offset: 192)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "baud_base", scope: !4037, file: !4017, line: 27, baseType: !141, size: 32, offset: 224)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !4037, file: !4017, line: 28, baseType: !318, size: 16, offset: 256)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "io_type", scope: !4037, file: !4017, line: 29, baseType: !240, size: 8, offset: 272)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_char", scope: !4037, file: !4017, line: 30, baseType: !4050, size: 8, offset: 280)
!4050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 8, elements: !1381)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "hub6", scope: !4037, file: !4017, line: 31, baseType: !141, size: 32, offset: 288)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !4037, file: !4017, line: 32, baseType: !318, size: 16, offset: 320)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait2", scope: !4037, file: !4017, line: 33, baseType: !318, size: 16, offset: 336)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_base", scope: !4037, file: !4017, line: 34, baseType: !4055, size: 64, offset: 384)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_reg_shift", scope: !4037, file: !4017, line: 35, baseType: !318, size: 16, offset: 448)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "port_high", scope: !4037, file: !4017, line: 36, baseType: !7, size: 32, offset: 480)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "iomap_base", scope: !4037, file: !4017, line: 37, baseType: !148, size: 64, offset: 512)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !3907, file: !3856, line: 292, baseType: !4033, size: 64, offset: 1984)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3907, file: !3856, line: 293, baseType: !4061, size: 64, offset: 2048)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{null, !215, !706}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !3907, file: !3856, line: 299, baseType: !737, size: 64, offset: 2112)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !3855, file: !3856, line: 333, baseType: !168, size: 128, offset: 1344)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !216, file: !121, line: 290, baseType: !3905, size: 64, offset: 192)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !216, file: !121, line: 291, baseType: !141, size: 32, offset: 256)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !216, file: !121, line: 294, baseType: !4069, size: 384, offset: 320)
!4069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !4070, line: 133, size: 384, elements: !4071)
!4070 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!4071 = !{!4072, !4073, !4074, !4075, !4076}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4069, file: !4070, line: 134, baseType: !156, size: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4069, file: !4070, line: 135, baseType: !800, offset: 64)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !4069, file: !4070, line: 136, baseType: !7, size: 32, offset: 64)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !4069, file: !4070, line: 137, baseType: !168, size: 128, offset: 128)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !4069, file: !4070, line: 138, baseType: !168, size: 128, offset: 256)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !216, file: !121, line: 295, baseType: !4078, size: 64, offset: 704)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !4070, line: 215, size: 128, elements: !4080)
!4080 = !{!4081, !4126}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4079, file: !4070, line: 216, baseType: !4082, size: 64)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !4070, line: 175, size: 1216, elements: !4084)
!4084 = !{!4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4096, !4100, !4104, !4105, !4106, !4110, !4111, !4115, !4116, !4120, !4124, !4125}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4083, file: !4070, line: 176, baseType: !141, size: 32)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4083, file: !4070, line: 177, baseType: !276, size: 64, offset: 64)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4083, file: !4070, line: 178, baseType: !141, size: 32, offset: 128)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4083, file: !4070, line: 179, baseType: !141, size: 32, offset: 160)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4083, file: !4070, line: 184, baseType: !3944, size: 64, offset: 192)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4083, file: !4070, line: 185, baseType: !3930, size: 64, offset: 256)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4083, file: !4070, line: 186, baseType: !3930, size: 64, offset: 320)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4083, file: !4070, line: 187, baseType: !4093, size: 64, offset: 384)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!307, !215, !353, !4055, !323}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4083, file: !4070, line: 189, baseType: !4097, size: 64, offset: 448)
!4097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4098, size: 64)
!4098 = !DISubroutineType(types: !4099)
!4099 = !{!307, !215, !353, !419, !323}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4083, file: !4070, line: 191, baseType: !4101, size: 64, offset: 512)
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{!141, !215, !353, !7, !148}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4083, file: !4070, line: 193, baseType: !4101, size: 64, offset: 576)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4083, file: !4070, line: 195, baseType: !3957, size: 64, offset: 640)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4083, file: !4070, line: 196, baseType: !4107, size: 64, offset: 704)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{!2953, !215, !353, !2955}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !4083, file: !4070, line: 198, baseType: !3944, size: 64, offset: 768)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4083, file: !4070, line: 203, baseType: !4112, size: 64, offset: 832)
!4112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4113, size: 64)
!4113 = !DISubroutineType(types: !4114)
!4114 = !{null, !215, !419, !276, !141}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4083, file: !4070, line: 205, baseType: !3930, size: 64, offset: 896)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !4083, file: !4070, line: 206, baseType: !4117, size: 64, offset: 960)
!4117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4118, size: 64)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{null, !215, !7}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !4083, file: !4070, line: 207, baseType: !4121, size: 64, offset: 1024)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!141, !215, !419, !276, !141}
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4083, file: !4070, line: 210, baseType: !625, size: 64, offset: 1088)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4083, file: !4070, line: 212, baseType: !141, size: 32, offset: 1152)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4079, file: !4070, line: 217, baseType: !215, size: 64, offset: 64)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !216, file: !121, line: 297, baseType: !180, size: 192, offset: 768)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !216, file: !121, line: 298, baseType: !180, size: 192, offset: 960)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !216, file: !121, line: 299, baseType: !180, size: 192, offset: 1152)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !216, file: !121, line: 300, baseType: !794, size: 256, offset: 1344)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !216, file: !121, line: 301, baseType: !180, size: 192, offset: 1600)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !216, file: !121, line: 302, baseType: !185, offset: 1792)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !216, file: !121, line: 303, baseType: !185, offset: 1792)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !216, file: !121, line: 305, baseType: !3872, size: 352, offset: 1792)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !216, file: !121, line: 305, baseType: !3872, size: 352, offset: 2144)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !216, file: !121, line: 306, baseType: !4000, size: 64, offset: 2496)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !216, file: !121, line: 307, baseType: !4138, size: 512, offset: 2560)
!4138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 512, elements: !281)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !216, file: !121, line: 308, baseType: !1481, size: 64, offset: 3072)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !216, file: !121, line: 313, baseType: !1481, size: 64, offset: 3136)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !216, file: !121, line: 314, baseType: !148, size: 64, offset: 3200)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !216, file: !121, line: 315, baseType: !141, size: 32, offset: 3264)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !216, file: !121, line: 316, baseType: !3989, size: 64, offset: 3296)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !216, file: !121, line: 317, baseType: !148, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !216, file: !121, line: 318, baseType: !148, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !216, file: !121, line: 319, baseType: !148, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !216, file: !121, line: 320, baseType: !141, size: 32, offset: 3456)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !216, file: !121, line: 321, baseType: !148, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !216, file: !121, line: 322, baseType: !148, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !216, file: !121, line: 323, baseType: !148, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !216, file: !121, line: 324, baseType: !7, size: 32, offset: 3584)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !216, file: !121, line: 325, baseType: !141, size: 32, offset: 3616)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !216, file: !121, line: 327, baseType: !215, size: 64, offset: 3648)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !216, file: !121, line: 328, baseType: !3007, size: 64, offset: 3712)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !216, file: !121, line: 329, baseType: !1491, size: 128, offset: 3776)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !216, file: !121, line: 330, baseType: !1491, size: 128, offset: 3904)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !216, file: !121, line: 331, baseType: !152, size: 256, offset: 4032)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !216, file: !121, line: 332, baseType: !113, size: 64, offset: 4288)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !216, file: !121, line: 333, baseType: !113, size: 64, offset: 4352)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !216, file: !121, line: 334, baseType: !185, offset: 4416)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !216, file: !121, line: 335, baseType: !168, size: 128, offset: 4416)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !216, file: !121, line: 339, baseType: !141, size: 32, offset: 4544)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !216, file: !121, line: 340, baseType: !4055, size: 64, offset: 4608)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !216, file: !121, line: 341, baseType: !141, size: 32, offset: 4672)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !216, file: !121, line: 343, baseType: !152, size: 256, offset: 4736)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !216, file: !121, line: 344, baseType: !3899, size: 64, offset: 4992)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !120, file: !121, line: 233, baseType: !215, size: 64, offset: 1088)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !120, file: !121, line: 234, baseType: !4169, size: 64, offset: 1152)
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4170, size: 64)
!4170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4171)
!4171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !121, line: 205, size: 320, elements: !4172)
!4172 = !{!4173, !4177, !4181, !4185, !4189}
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !4171, file: !121, line: 207, baseType: !4174, size: 64)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!141, !3899}
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !4171, file: !121, line: 209, baseType: !4178, size: 64, offset: 64)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 64)
!4179 = !DISubroutineType(types: !4180)
!4180 = !{null, !3899, !141}
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4171, file: !121, line: 213, baseType: !4182, size: 64, offset: 128)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{null, !3899}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4171, file: !121, line: 218, baseType: !4186, size: 64, offset: 192)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!141, !3899, !215}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !4171, file: !121, line: 220, baseType: !4182, size: 64, offset: 256)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !120, file: !121, line: 235, baseType: !4191, size: 64, offset: 1216)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4193)
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !121, line: 223, size: 128, elements: !4194)
!4194 = !{!4195, !4199}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4193, file: !121, line: 224, baseType: !4196, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{!141, !3899, !419, !419, !323}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4193, file: !121, line: 225, baseType: !4182, size: 64, offset: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !120, file: !121, line: 236, baseType: !185, offset: 1280)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !120, file: !121, line: 237, baseType: !141, size: 32, offset: 1280)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !120, file: !121, line: 238, baseType: !141, size: 32, offset: 1312)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !120, file: !121, line: 239, baseType: !1491, size: 128, offset: 1344)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !120, file: !121, line: 240, baseType: !1491, size: 128, offset: 1472)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !120, file: !121, line: 241, baseType: !148, size: 64, offset: 1600)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !120, file: !121, line: 242, baseType: !148, size: 64, offset: 1664)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !120, file: !121, line: 243, baseType: !421, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !120, file: !121, line: 244, baseType: !421, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !120, file: !121, line: 245, baseType: !180, size: 192, offset: 1792)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !120, file: !121, line: 246, baseType: !180, size: 192, offset: 1984)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !120, file: !121, line: 247, baseType: !4055, size: 64, offset: 2176)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !120, file: !121, line: 248, baseType: !7, size: 32, offset: 2240)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !120, file: !121, line: 249, baseType: !7, size: 32, offset: 2272)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !120, file: !121, line: 250, baseType: !141, size: 32, offset: 2304)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !120, file: !121, line: 253, baseType: !220, size: 32, offset: 2336)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !120, file: !121, line: 254, baseType: !113, size: 64, offset: 2368)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "board", scope: !117, file: !3, line: 131, baseType: !4218, size: 64, offset: 2432)
!4218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4219, size: 64)
!4219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moxa_board_conf", file: !3, line: 101, size: 448, elements: !4220)
!4220 = !{!4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "boardType", scope: !4219, file: !3, line: 102, baseType: !141, size: 32)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "numPorts", scope: !4219, file: !3, line: 103, baseType: !141, size: 32, offset: 32)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "busType", scope: !4219, file: !3, line: 104, baseType: !141, size: 32, offset: 64)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "ready", scope: !4219, file: !3, line: 106, baseType: !7, size: 32, offset: 96)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !4219, file: !3, line: 108, baseType: !116, size: 64, offset: 128)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "basemem", scope: !4219, file: !3, line: 110, baseType: !113, size: 64, offset: 192)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "intNdx", scope: !4219, file: !3, line: 111, baseType: !113, size: 64, offset: 256)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "intPend", scope: !4219, file: !3, line: 112, baseType: !113, size: 64, offset: 320)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "intTable", scope: !4219, file: !3, line: 113, baseType: !113, size: 64, offset: 384)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "tableAddr", scope: !117, file: !3, line: 132, baseType: !113, size: 64, offset: 2496)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !117, file: !3, line: 134, baseType: !141, size: 32, offset: 2560)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "cflag", scope: !117, file: !3, line: 135, baseType: !141, size: 32, offset: 2592)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "statusflags", scope: !117, file: !3, line: 136, baseType: !148, size: 64, offset: 2624)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "DCDState", scope: !117, file: !3, line: 138, baseType: !1362, size: 8, offset: 2688)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "lineCtrl", scope: !117, file: !3, line: 139, baseType: !1362, size: 8, offset: 2696)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "lowChkFlag", scope: !117, file: !3, line: 140, baseType: !1362, size: 8, offset: 2704)
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 64)
!4238 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !318)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4240 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !421)
!4241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !2954, line: 31, baseType: !412)
!4242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !2954, line: 29, baseType: !880)
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 64)
!4244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4245)
!4245 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !638)
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !240)
!4249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!4250 = !{!0, !4251, !4256, !4261, !4266, !4268, !4270, !4272, !4324, !4329, !4334, !4336, !4341, !4344, !4346, !4351, !4356, !4358, !4360, !4362, !4367, !4370, !4372, !4377, !4379, !4382, !4387, !4389, !4392, !4394, !4396, !4398, !4400, !4402, !4677, !4680, !4682, !4684, !4687, !4689, !4691, !4694, !4696, !4698, !4706, !4708, !4710}
!4251 = !DIGlobalVariableExpression(var: !4252, expr: !DIExpression())
!4252 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description241", scope: !2, file: !3, line: 170, type: !4253, isLocal: true, isDefinition: true, align: 8)
!4253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 544, elements: !4254)
!4254 = !{!4255}
!4255 = !DISubrange(count: 68)
!4256 = !DIGlobalVariableExpression(var: !4257, expr: !DIExpression())
!4257 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file242", scope: !2, file: !3, line: 171, type: !4258, isLocal: true, isDefinition: true, align: 8)
!4258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 216, elements: !4259)
!4259 = !{!4260}
!4260 = !DISubrange(count: 27)
!4261 = !DIGlobalVariableExpression(var: !4262, expr: !DIExpression())
!4262 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license243", scope: !2, file: !3, line: 171, type: !4263, isLocal: true, isDefinition: true, align: 8)
!4263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 136, elements: !4264)
!4264 = !{!4265}
!4265 = !DISubrange(count: 17)
!4266 = !DIGlobalVariableExpression(var: !4267, expr: !DIExpression())
!4267 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware244", scope: !2, file: !3, line: 172, type: !4258, isLocal: true, isDefinition: true, align: 8)
!4268 = !DIGlobalVariableExpression(var: !4269, expr: !DIExpression())
!4269 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware245", scope: !2, file: !3, line: 173, type: !4258, isLocal: true, isDefinition: true, align: 8)
!4270 = !DIGlobalVariableExpression(var: !4271, expr: !DIExpression())
!4271 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_firmware246", scope: !2, file: !3, line: 174, type: !4258, isLocal: true, isDefinition: true, align: 8)
!4272 = !DIGlobalVariableExpression(var: !4273, expr: !DIExpression())
!4273 = distinct !DIGlobalVariable(name: "__param_type", scope: !2, file: !3, line: 176, type: !4274, isLocal: true, isDefinition: true, align: 64)
!4274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4275)
!4275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4276, line: 69, size: 320, elements: !4277)
!4276 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4277 = !{!4278, !4279, !4280, !4296, !4298, !4302, !4303}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4275, file: !4276, line: 70, baseType: !238, size: 64)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4275, file: !4276, line: 71, baseType: !625, size: 64, offset: 64)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4275, file: !4276, line: 72, baseType: !4281, size: 64, offset: 128)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4283)
!4283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4276, line: 47, size: 256, elements: !4284)
!4284 = !{!4285, !4286, !4291, !4295}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4283, file: !4276, line: 49, baseType: !7, size: 32)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4283, file: !4276, line: 51, baseType: !4287, size: 64, offset: 64)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{!141, !238, !4290}
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4274, size: 64)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4283, file: !4276, line: 53, baseType: !4292, size: 64, offset: 128)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!141, !276, !4290}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4283, file: !4276, line: 55, baseType: !462, size: 64, offset: 192)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4275, file: !4276, line: 73, baseType: !4297, size: 16, offset: 192)
!4297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !879)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4275, file: !4276, line: 74, baseType: !4299, size: 8, offset: 208)
!4299 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !163, line: 16, baseType: !4300)
!4300 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !165, line: 20, baseType: !4301)
!4301 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4275, file: !4276, line: 75, baseType: !1362, size: 8, offset: 216)
!4303 = !DIDerivedType(tag: DW_TAG_member, scope: !4275, file: !4276, line: 76, baseType: !4304, size: 64, offset: 256)
!4304 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4275, file: !4276, line: 76, size: 64, elements: !4305)
!4305 = !{!4306, !4307, !4314}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4304, file: !4276, line: 77, baseType: !113, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4304, file: !4276, line: 78, baseType: !4308, size: 64)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 64)
!4309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4310)
!4310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4276, line: 86, size: 128, elements: !4311)
!4311 = !{!4312, !4313}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4310, file: !4276, line: 87, baseType: !7, size: 32)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4310, file: !4276, line: 88, baseType: !276, size: 64, offset: 64)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4304, file: !4276, line: 79, baseType: !4315, size: 64)
!4315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4316, size: 64)
!4316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4317)
!4317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4276, line: 92, size: 256, elements: !4318)
!4318 = !{!4319, !4320, !4321, !4322, !4323}
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4317, file: !4276, line: 94, baseType: !7, size: 32)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4317, file: !4276, line: 95, baseType: !7, size: 32, offset: 32)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4317, file: !4276, line: 96, baseType: !2732, size: 64, offset: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4317, file: !4276, line: 97, baseType: !4281, size: 64, offset: 128)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4317, file: !4276, line: 98, baseType: !113, size: 64, offset: 192)
!4324 = !DIGlobalVariableExpression(var: !4325, expr: !DIExpression())
!4325 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_typetype247", scope: !2, file: !3, line: 176, type: !4326, isLocal: true, isDefinition: true, align: 8)
!4326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 264, elements: !4327)
!4327 = !{!4328}
!4328 = !DISubrange(count: 33)
!4329 = !DIGlobalVariableExpression(var: !4330, expr: !DIExpression())
!4330 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_type248", scope: !2, file: !3, line: 177, type: !4331, isLocal: true, isDefinition: true, align: 8)
!4331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 328, elements: !4332)
!4332 = !{!4333}
!4333 = !DISubrange(count: 41)
!4334 = !DIGlobalVariableExpression(var: !4335, expr: !DIExpression())
!4335 = distinct !DIGlobalVariable(name: "__param_baseaddr", scope: !2, file: !3, line: 178, type: !4274, isLocal: true, isDefinition: true, align: 64)
!4336 = !DIGlobalVariableExpression(var: !4337, expr: !DIExpression())
!4337 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_baseaddrtype249", scope: !2, file: !3, line: 178, type: !4338, isLocal: true, isDefinition: true, align: 8)
!4338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 304, elements: !4339)
!4339 = !{!4340}
!4340 = !DISubrange(count: 38)
!4341 = !DIGlobalVariableExpression(var: !4342, expr: !DIExpression())
!4342 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_baseaddr250", scope: !2, file: !3, line: 179, type: !4343, isLocal: true, isDefinition: true, align: 8)
!4343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 256, elements: !2282)
!4344 = !DIGlobalVariableExpression(var: !4345, expr: !DIExpression())
!4345 = distinct !DIGlobalVariable(name: "__param_numports", scope: !2, file: !3, line: 180, type: !4274, isLocal: true, isDefinition: true, align: 64)
!4346 = !DIGlobalVariableExpression(var: !4347, expr: !DIExpression())
!4347 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_numportstype251", scope: !2, file: !3, line: 180, type: !4348, isLocal: true, isDefinition: true, align: 8)
!4348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 296, elements: !4349)
!4349 = !{!4350}
!4350 = !DISubrange(count: 37)
!4351 = !DIGlobalVariableExpression(var: !4352, expr: !DIExpression())
!4352 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_numports252", scope: !2, file: !3, line: 181, type: !4353, isLocal: true, isDefinition: true, align: 8)
!4353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 376, elements: !4354)
!4354 = !{!4355}
!4355 = !DISubrange(count: 47)
!4356 = !DIGlobalVariableExpression(var: !4357, expr: !DIExpression())
!4357 = distinct !DIGlobalVariable(name: "__param_ttymajor", scope: !2, file: !3, line: 183, type: !4274, isLocal: true, isDefinition: true, align: 64)
!4358 = !DIGlobalVariableExpression(var: !4359, expr: !DIExpression())
!4359 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ttymajortype253", scope: !2, file: !3, line: 183, type: !4258, isLocal: true, isDefinition: true, align: 8)
!4360 = !DIGlobalVariableExpression(var: !4361, expr: !DIExpression())
!4361 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_moxa_init255", scope: !2, file: !3, line: 1127, type: !113, isLocal: true, isDefinition: true)
!4362 = !DIGlobalVariableExpression(var: !4363, expr: !DIExpression())
!4363 = distinct !DIGlobalVariable(name: "__exitcall_moxa_exit", scope: !2, file: !3, line: 1128, type: !4364, isLocal: true, isDefinition: true)
!4364 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4365, line: 117, baseType: !4366)
!4365 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!4367 = !DIGlobalVariableExpression(var: !4368, expr: !DIExpression())
!4368 = distinct !DIGlobalVariable(name: "moxa_boards", scope: !2, file: !3, line: 114, type: !4369, isLocal: true, isDefinition: true)
!4369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4219, size: 1792, elements: !1176)
!4370 = !DIGlobalVariableExpression(var: !4371, expr: !DIExpression())
!4371 = distinct !DIGlobalVariable(name: "moxaDriver", scope: !2, file: !3, line: 418, type: !3854, isLocal: true, isDefinition: true)
!4372 = !DIGlobalVariableExpression(var: !4373, expr: !DIExpression())
!4373 = distinct !DIGlobalVariable(name: "__param_str_type", scope: !2, file: !3, line: 176, type: !4374, isLocal: true, isDefinition: true)
!4374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 80, elements: !4375)
!4375 = !{!4376}
!4376 = !DISubrange(count: 10)
!4377 = !DIGlobalVariableExpression(var: !4378, expr: !DIExpression())
!4378 = distinct !DIGlobalVariable(name: "__param_arr_type", scope: !2, file: !3, line: 176, type: !4316, isLocal: true, isDefinition: true)
!4379 = !DIGlobalVariableExpression(var: !4380, expr: !DIExpression())
!4380 = distinct !DIGlobalVariable(name: "type", scope: !2, file: !3, line: 165, type: !4381, isLocal: true, isDefinition: true)
!4381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1176)
!4382 = !DIGlobalVariableExpression(var: !4383, expr: !DIExpression())
!4383 = distinct !DIGlobalVariable(name: "__param_str_baseaddr", scope: !2, file: !3, line: 178, type: !4384, isLocal: true, isDefinition: true)
!4384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 112, elements: !4385)
!4385 = !{!4386}
!4386 = !DISubrange(count: 14)
!4387 = !DIGlobalVariableExpression(var: !4388, expr: !DIExpression())
!4388 = distinct !DIGlobalVariable(name: "__param_arr_baseaddr", scope: !2, file: !3, line: 178, type: !4316, isLocal: true, isDefinition: true)
!4389 = !DIGlobalVariableExpression(var: !4390, expr: !DIExpression())
!4390 = distinct !DIGlobalVariable(name: "baseaddr", scope: !2, file: !3, line: 164, type: !4391, isLocal: true, isDefinition: true)
!4391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 256, elements: !1176)
!4392 = !DIGlobalVariableExpression(var: !4393, expr: !DIExpression())
!4393 = distinct !DIGlobalVariable(name: "__param_str_numports", scope: !2, file: !3, line: 180, type: !4384, isLocal: true, isDefinition: true)
!4394 = !DIGlobalVariableExpression(var: !4395, expr: !DIExpression())
!4395 = distinct !DIGlobalVariable(name: "__param_arr_numports", scope: !2, file: !3, line: 180, type: !4316, isLocal: true, isDefinition: true)
!4396 = !DIGlobalVariableExpression(var: !4397, expr: !DIExpression())
!4397 = distinct !DIGlobalVariable(name: "numports", scope: !2, file: !3, line: 166, type: !4381, isLocal: true, isDefinition: true)
!4398 = !DIGlobalVariableExpression(var: !4399, expr: !DIExpression())
!4399 = distinct !DIGlobalVariable(name: "__param_str_ttymajor", scope: !2, file: !3, line: 183, type: !4384, isLocal: true, isDefinition: true)
!4400 = !DIGlobalVariableExpression(var: !4401, expr: !DIExpression())
!4401 = distinct !DIGlobalVariable(name: "ttymajor", scope: !2, file: !3, line: 157, type: !141, isLocal: true, isDefinition: true)
!4402 = !DIGlobalVariableExpression(var: !4403, expr: !DIExpression())
!4403 = distinct !DIGlobalVariable(name: "moxa_pci_driver", scope: !2, file: !3, line: 1015, type: !4404, isLocal: true, isDefinition: true)
!4404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !4405, line: 858, size: 2048, elements: !4406)
!4405 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!4406 = !{!4407, !4408, !4409, !4421, !4635, !4639, !4643, !4647, !4648, !4652, !4670, !4671, !4672}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4404, file: !4405, line: 859, baseType: !168, size: 128)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4404, file: !4405, line: 860, baseType: !238, size: 64, offset: 128)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4404, file: !4405, line: 861, baseType: !4410, size: 64, offset: 192)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 64)
!4411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4412)
!4412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3490, line: 38, size: 256, elements: !4413)
!4413 = !{!4414, !4415, !4416, !4417, !4418, !4419, !4420}
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4412, file: !3490, line: 39, baseType: !412, size: 32)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4412, file: !3490, line: 39, baseType: !412, size: 32, offset: 32)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4412, file: !3490, line: 40, baseType: !412, size: 32, offset: 64)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4412, file: !3490, line: 40, baseType: !412, size: 32, offset: 96)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4412, file: !3490, line: 41, baseType: !412, size: 32, offset: 128)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4412, file: !3490, line: 41, baseType: !412, size: 32, offset: 160)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4412, file: !3490, line: 42, baseType: !3509, size: 64, offset: 192)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4404, file: !4405, line: 862, baseType: !4422, size: 64, offset: 256)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!141, !4425, !4410}
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!4426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4405, line: 309, size: 19264, elements: !4427)
!4427 = !{!4428, !4429, !4501, !4502, !4503, !4504, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4533, !4534, !4535, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4559, !4560, !4561, !4562, !4564, !4565, !4566, !4567, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4608, !4609, !4611, !4612, !4613, !4614, !4616, !4617, !4618, !4621, !4628, !4629, !4630, !4631, !4632, !4633, !4634}
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !4426, file: !4405, line: 310, baseType: !168, size: 128)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4426, file: !4405, line: 311, baseType: !4430, size: 64, offset: 128)
!4430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 64)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !4405, line: 605, size: 8064, elements: !4432)
!4432 = !{!4433, !4434, !4435, !4436, !4437, !4438, !4439, !4454, !4455, !4456, !4480, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4493, !4494, !4496, !4497, !4498, !4499, !4500}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4431, file: !4405, line: 606, baseType: !168, size: 128)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4431, file: !4405, line: 607, baseType: !4430, size: 64, offset: 128)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4431, file: !4405, line: 608, baseType: !168, size: 128, offset: 192)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4431, file: !4405, line: 609, baseType: !168, size: 128, offset: 320)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4431, file: !4405, line: 610, baseType: !4425, size: 64, offset: 448)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !4431, file: !4405, line: 611, baseType: !168, size: 128, offset: 512)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4431, file: !4405, line: 613, baseType: !4440, size: 256, offset: 640)
!4440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4441, size: 256, elements: !1176)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4443, line: 20, size: 512, elements: !4444)
!4443 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4444 = !{!4445, !4447, !4448, !4449, !4450, !4451, !4452, !4453}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4442, file: !4443, line: 21, baseType: !4446, size: 64)
!4446 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !115, line: 158, baseType: !2177)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4442, file: !4443, line: 22, baseType: !4446, size: 64, offset: 64)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4442, file: !4443, line: 23, baseType: !238, size: 64, offset: 128)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4442, file: !4443, line: 24, baseType: !148, size: 64, offset: 192)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4442, file: !4443, line: 25, baseType: !148, size: 64, offset: 256)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4442, file: !4443, line: 26, baseType: !4441, size: 64, offset: 320)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4442, file: !4443, line: 26, baseType: !4441, size: 64, offset: 384)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4442, file: !4443, line: 26, baseType: !4441, size: 64, offset: 448)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4431, file: !4405, line: 614, baseType: !168, size: 128, offset: 896)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !4431, file: !4405, line: 615, baseType: !4442, size: 512, offset: 1024)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4431, file: !4405, line: 617, baseType: !4457, size: 64, offset: 1536)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4458, size: 64)
!4458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !4405, line: 731, size: 320, elements: !4459)
!4459 = !{!4460, !4464, !4468, !4472, !4476}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4458, file: !4405, line: 732, baseType: !4461, size: 64)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{!141, !4430}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4458, file: !4405, line: 733, baseType: !4465, size: 64, offset: 64)
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 64)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{null, !4430}
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4458, file: !4405, line: 734, baseType: !4469, size: 64, offset: 128)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!113, !4430, !7, !141}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4458, file: !4405, line: 735, baseType: !4473, size: 64, offset: 192)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{!141, !4430, !7, !141, !141, !1425}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4458, file: !4405, line: 736, baseType: !4477, size: 64, offset: 256)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 64)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!141, !4430, !7, !141, !141, !411}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4431, file: !4405, line: 618, baseType: !4481, size: 64, offset: 1600)
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4482, size: 64)
!4482 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !4405, line: 537, flags: DIFlagFwdDecl)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4431, file: !4405, line: 619, baseType: !113, size: 64, offset: 1664)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !4431, file: !4405, line: 620, baseType: !3891, size: 64, offset: 1728)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4431, file: !4405, line: 622, baseType: !421, size: 8, offset: 1792)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4431, file: !4405, line: 623, baseType: !421, size: 8, offset: 1800)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !4431, file: !4405, line: 624, baseType: !421, size: 8, offset: 1808)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !4431, file: !4405, line: 625, baseType: !421, size: 8, offset: 1816)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4431, file: !4405, line: 630, baseType: !4490, size: 384, offset: 1824)
!4490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 384, elements: !4491)
!4491 = !{!4492}
!4492 = !DISubrange(count: 48)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !4431, file: !4405, line: 632, baseType: !318, size: 16, offset: 2208)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4431, file: !4405, line: 633, baseType: !4495, size: 16, offset: 2224)
!4495 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !4405, line: 237, baseType: !318)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !4431, file: !4405, line: 634, baseType: !230, size: 64, offset: 2240)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4431, file: !4405, line: 635, baseType: !231, size: 5568, offset: 2304)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !4431, file: !4405, line: 636, baseType: !343, size: 64, offset: 7872)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !4431, file: !4405, line: 637, baseType: !343, size: 64, offset: 7936)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !4431, file: !4405, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !4426, file: !4405, line: 312, baseType: !4430, size: 64, offset: 192)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4426, file: !4405, line: 314, baseType: !113, size: 64, offset: 256)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !4426, file: !4405, line: 315, baseType: !3891, size: 64, offset: 320)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4426, file: !4405, line: 316, baseType: !4505, size: 64, offset: 384)
!4505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 64)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !4405, line: 69, size: 832, elements: !4507)
!4507 = !{!4508, !4509, !4510, !4513, !4514}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4506, file: !4405, line: 70, baseType: !4430, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4506, file: !4405, line: 71, baseType: !168, size: 128, offset: 64)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4506, file: !4405, line: 72, baseType: !4511, size: 64, offset: 192)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !4405, line: 72, flags: DIFlagFwdDecl)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4506, file: !4405, line: 73, baseType: !421, size: 8, offset: 256)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4506, file: !4405, line: 74, baseType: !234, size: 512, offset: 320)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !4426, file: !4405, line: 318, baseType: !7, size: 32, offset: 448)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4426, file: !4405, line: 319, baseType: !318, size: 16, offset: 480)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4426, file: !4405, line: 320, baseType: !318, size: 16, offset: 496)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4426, file: !4405, line: 321, baseType: !318, size: 16, offset: 512)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4426, file: !4405, line: 322, baseType: !318, size: 16, offset: 528)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4426, file: !4405, line: 323, baseType: !7, size: 32, offset: 544)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4426, file: !4405, line: 324, baseType: !1362, size: 8, offset: 576)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4426, file: !4405, line: 325, baseType: !1362, size: 8, offset: 584)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !4426, file: !4405, line: 330, baseType: !1362, size: 8, offset: 592)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !4426, file: !4405, line: 331, baseType: !1362, size: 8, offset: 600)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !4426, file: !4405, line: 332, baseType: !1362, size: 8, offset: 608)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !4426, file: !4405, line: 333, baseType: !1362, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !4426, file: !4405, line: 334, baseType: !1362, size: 8, offset: 624)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4426, file: !4405, line: 335, baseType: !1362, size: 8, offset: 632)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !4426, file: !4405, line: 336, baseType: !879, size: 16, offset: 640)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !4426, file: !4405, line: 337, baseType: !4246, size: 64, offset: 704)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4426, file: !4405, line: 339, baseType: !4532, size: 64, offset: 768)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 64)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4426, file: !4405, line: 340, baseType: !415, size: 64, offset: 832)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4426, file: !4405, line: 346, baseType: !3703, size: 128, offset: 896)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !4426, file: !4405, line: 348, baseType: !4536, size: 32, offset: 1024)
!4536 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !4405, line: 155, baseType: !141)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !4426, file: !4405, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !4426, file: !4405, line: 352, baseType: !1362, size: 8, offset: 1064)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !4426, file: !4405, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !4426, file: !4405, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !4426, file: !4405, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !4426, file: !4405, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !4426, file: !4405, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !4426, file: !4405, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4426, file: !4405, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !4426, file: !4405, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !4426, file: !4405, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !4426, file: !4405, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !4426, file: !4405, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !4426, file: !4405, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !4426, file: !4405, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !4426, file: !4405, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !4426, file: !4405, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !4426, file: !4405, line: 376, baseType: !7, size: 32, offset: 1120)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !4426, file: !4405, line: 377, baseType: !7, size: 32, offset: 1152)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !4426, file: !4405, line: 380, baseType: !4557, size: 64, offset: 1216)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !4405, line: 303, flags: DIFlagFwdDecl)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !4426, file: !4405, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !4426, file: !4405, line: 383, baseType: !141, size: 32, offset: 1312)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !4426, file: !4405, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !4426, file: !4405, line: 387, baseType: !4563, size: 32, offset: 1376)
!4563 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !4405, line: 180, baseType: !7)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4426, file: !4405, line: 388, baseType: !231, size: 5568, offset: 1408)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !4426, file: !4405, line: 390, baseType: !141, size: 32, offset: 6976)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4426, file: !4405, line: 396, baseType: !7, size: 32, offset: 7008)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4426, file: !4405, line: 397, baseType: !4568, size: 8704, offset: 7040)
!4568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4442, size: 8704, elements: !4264)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4426, file: !4405, line: 399, baseType: !484, size: 8, offset: 15744)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !4426, file: !4405, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !4426, file: !4405, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !4426, file: !4405, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !4426, file: !4405, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !4426, file: !4405, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !4426, file: !4405, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !4426, file: !4405, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !4426, file: !4405, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !4426, file: !4405, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !4426, file: !4405, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !4426, file: !4405, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4426, file: !4405, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4426, file: !4405, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !4426, file: !4405, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !4426, file: !4405, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !4426, file: !4405, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !4426, file: !4405, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4426, file: !4405, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !4426, file: !4405, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !4426, file: !4405, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !4426, file: !4405, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !4426, file: !4405, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !4426, file: !4405, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !4426, file: !4405, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !4426, file: !4405, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !4426, file: !4405, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !4426, file: !4405, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !4426, file: !4405, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !4426, file: !4405, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !4426, file: !4405, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !4426, file: !4405, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !4426, file: !4405, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !4426, file: !4405, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !4426, file: !4405, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !4426, file: !4405, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !4426, file: !4405, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !4426, file: !4405, line: 450, baseType: !4607, size: 16, offset: 15792)
!4607 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !4405, line: 206, baseType: !318)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !4426, file: !4405, line: 451, baseType: !202, size: 32, offset: 15808)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !4426, file: !4405, line: 453, baseType: !4610, size: 512, offset: 15840)
!4610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 512, elements: !1776)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !4426, file: !4405, line: 454, baseType: !630, size: 64, offset: 16384)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !4426, file: !4405, line: 455, baseType: !343, size: 64, offset: 16448)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !4426, file: !4405, line: 456, baseType: !141, size: 32, offset: 16512)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !4426, file: !4405, line: 457, baseType: !4615, size: 1088, offset: 16576)
!4615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 1088, elements: !4264)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !4426, file: !4405, line: 458, baseType: !4615, size: 1088, offset: 17664)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !4426, file: !4405, line: 469, baseType: !329, size: 64, offset: 18752)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !4426, file: !4405, line: 471, baseType: !4619, size: 64, offset: 18816)
!4619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4620, size: 64)
!4620 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !4405, line: 304, flags: DIFlagFwdDecl)
!4621 = !DIDerivedType(tag: DW_TAG_member, scope: !4426, file: !4405, line: 478, baseType: !4622, size: 64, offset: 18880)
!4622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4426, file: !4405, line: 478, size: 64, elements: !4623)
!4623 = !{!4624, !4627}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4622, file: !4405, line: 479, baseType: !4625, size: 64)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4405, line: 305, flags: DIFlagFwdDecl)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4622, file: !4405, line: 480, baseType: !4425, size: 64)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !4426, file: !4405, line: 482, baseType: !879, size: 16, offset: 18944)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !4426, file: !4405, line: 483, baseType: !1362, size: 8, offset: 18960)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !4426, file: !4405, line: 497, baseType: !879, size: 16, offset: 18976)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !4426, file: !4405, line: 498, baseType: !2177, size: 64, offset: 19008)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !4426, file: !4405, line: 499, baseType: !323, size: 64, offset: 19072)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4426, file: !4405, line: 500, baseType: !276, size: 64, offset: 19136)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !4426, file: !4405, line: 502, baseType: !148, size: 64, offset: 19200)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4404, file: !4405, line: 863, baseType: !4636, size: 64, offset: 320)
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4637, size: 64)
!4637 = !DISubroutineType(types: !4638)
!4638 = !{null, !4425}
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4404, file: !4405, line: 864, baseType: !4640, size: 64, offset: 384)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!141, !4425, !3520}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4404, file: !4405, line: 865, baseType: !4644, size: 64, offset: 448)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!141, !4425}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4404, file: !4405, line: 866, baseType: !4636, size: 64, offset: 512)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4404, file: !4405, line: 867, baseType: !4649, size: 64, offset: 576)
!4649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4650, size: 64)
!4650 = !DISubroutineType(types: !4651)
!4651 = !{!141, !4425, !141}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4404, file: !4405, line: 868, baseType: !4653, size: 64, offset: 640)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4655)
!4655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !4405, line: 795, size: 384, elements: !4656)
!4656 = !{!4657, !4662, !4666, !4667, !4668, !4669}
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4655, file: !4405, line: 797, baseType: !4658, size: 64)
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = !DISubroutineType(types: !4660)
!4660 = !{!4661, !4425, !4563}
!4661 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !4405, line: 772, baseType: !7)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4655, file: !4405, line: 801, baseType: !4663, size: 64, offset: 64)
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 64)
!4664 = !DISubroutineType(types: !4665)
!4665 = !{!4661, !4425}
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4655, file: !4405, line: 804, baseType: !4663, size: 64, offset: 128)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4655, file: !4405, line: 807, baseType: !4636, size: 64, offset: 192)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4655, file: !4405, line: 808, baseType: !4636, size: 64, offset: 256)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4655, file: !4405, line: 811, baseType: !4636, size: 64, offset: 320)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4404, file: !4405, line: 869, baseType: !329, size: 64, offset: 704)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4404, file: !4405, line: 870, baseType: !3478, size: 1152, offset: 768)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4404, file: !4405, line: 871, baseType: !4673, size: 128, offset: 1920)
!4673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !4405, line: 759, size: 128, elements: !4674)
!4674 = !{!4675, !4676}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4673, file: !4405, line: 760, baseType: !185)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4673, file: !4405, line: 761, baseType: !168, size: 128)
!4677 = !DIGlobalVariableExpression(var: !4678, expr: !DIExpression())
!4678 = distinct !DIGlobalVariable(name: "moxa_pcibrds", scope: !2, file: !3, line: 87, type: !4679, isLocal: true, isDefinition: true)
!4679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4411, size: 1024, elements: !1176)
!4680 = !DIGlobalVariableExpression(var: !4681, expr: !DIExpression())
!4681 = distinct !DIGlobalVariable(name: "moxa_port_ops", scope: !2, file: !3, line: 412, type: !4170, isLocal: true, isDefinition: true)
!4682 = !DIGlobalVariableExpression(var: !4683, expr: !DIExpression())
!4683 = distinct !DIGlobalVariable(name: "moxafunc_lock", scope: !2, file: !3, line: 232, type: !185, isLocal: true, isDefinition: true)
!4684 = !DIGlobalVariableExpression(var: !4685, expr: !DIExpression())
!4685 = distinct !DIGlobalVariable(name: "_rs", scope: !4686, file: !3, line: 242, type: !1745, isLocal: true, isDefinition: true)
!4686 = distinct !DISubprogram(name: "moxa_wait_finish", scope: !3, file: !3, line: 234, type: !463, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4687 = !DIGlobalVariableExpression(var: !4688, expr: !DIExpression())
!4688 = distinct !DIGlobalVariable(name: "moxaFuncTout", scope: !2, file: !3, line: 159, type: !7, isLocal: true, isDefinition: true)
!4689 = !DIGlobalVariableExpression(var: !4690, expr: !DIExpression())
!4690 = distinct !DIGlobalVariable(name: "moxa_lock", scope: !2, file: !3, line: 162, type: !185, isLocal: true, isDefinition: true)
!4691 = !DIGlobalVariableExpression(var: !4692, expr: !DIExpression())
!4692 = distinct !DIGlobalVariable(name: "moxa_brdname", scope: !2, file: !3, line: 77, type: !4693, isLocal: true, isDefinition: true)
!4693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 320, elements: !4008)
!4694 = !DIGlobalVariableExpression(var: !4695, expr: !DIExpression())
!4695 = distinct !DIGlobalVariable(name: "moxa_openlock", scope: !2, file: !3, line: 161, type: !180, isLocal: true, isDefinition: true)
!4696 = !DIGlobalVariableExpression(var: !4697, expr: !DIExpression())
!4697 = distinct !DIGlobalVariable(name: "moxaTimer", scope: !2, file: !3, line: 419, type: !3597, isLocal: true, isDefinition: true)
!4698 = !DIGlobalVariableExpression(var: !4699, expr: !DIExpression())
!4699 = distinct !DIGlobalVariable(name: "moxaLog", scope: !2, file: !3, line: 158, type: !4700, isLocal: true, isDefinition: true)
!4700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mon_str", file: !3, line: 143, size: 8224, elements: !4701)
!4701 = !{!4702, !4703, !4705}
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "tick", scope: !4700, file: !3, line: 144, baseType: !141, size: 32)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "rxcnt", scope: !4700, file: !3, line: 145, baseType: !4704, size: 4096, offset: 32)
!4704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 4096, elements: !3496)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "txcnt", scope: !4700, file: !3, line: 146, baseType: !4704, size: 4096, offset: 4128)
!4706 = !DIGlobalVariableExpression(var: !4707, expr: !DIExpression())
!4707 = distinct !DIGlobalVariable(name: "moxaLowWaterChk", scope: !2, file: !3, line: 160, type: !7, isLocal: true, isDefinition: true)
!4708 = !DIGlobalVariableExpression(var: !4709, expr: !DIExpression())
!4709 = distinct !DIGlobalVariable(name: "moxa_service_port", scope: !2, file: !3, line: 167, type: !120, isLocal: true, isDefinition: true)
!4710 = !DIGlobalVariableExpression(var: !4711, expr: !DIExpression())
!4711 = distinct !DIGlobalVariable(name: "moxa_ops", scope: !2, file: !3, line: 393, type: !3906, isLocal: true, isDefinition: true)
!4712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 200, elements: !4713)
!4713 = !{!4714}
!4714 = !DISubrange(count: 25)
!4715 = !{!"rsp"}
!4716 = !{i32 7, !"Dwarf Version", i32 4}
!4717 = !{i32 2, !"Debug Info Version", i32 3}
!4718 = !{i32 1, !"wchar_size", i32 2}
!4719 = !{i32 1, !"Code Model", i32 2}
!4720 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4721 = distinct !DISubprogram(name: "moxa_exit", scope: !3, file: !3, line: 1107, type: !1941, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4722 = !DILocalVariable(name: "i", scope: !4721, file: !3, line: 1109, type: !7)
!4723 = !DILocation(line: 1109, column: 15, scope: !4721)
!4724 = !DILocation(line: 1112, column: 2, scope: !4721)
!4725 = !DILocation(line: 1115, column: 9, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 1115, column: 2)
!4727 = !DILocation(line: 1115, column: 7, scope: !4726)
!4728 = !DILocation(line: 1115, column: 14, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4726, file: !3, line: 1115, column: 2)
!4730 = !DILocation(line: 1115, column: 16, scope: !4729)
!4731 = !DILocation(line: 1115, column: 2, scope: !4726)
!4732 = !DILocation(line: 1116, column: 19, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4729, file: !3, line: 1116, column: 7)
!4734 = !DILocation(line: 1116, column: 7, scope: !4733)
!4735 = !DILocation(line: 1116, column: 22, scope: !4733)
!4736 = !DILocation(line: 1116, column: 7, scope: !4729)
!4737 = !DILocation(line: 1117, column: 35, scope: !4733)
!4738 = !DILocation(line: 1117, column: 23, scope: !4733)
!4739 = !DILocation(line: 1117, column: 4, scope: !4733)
!4740 = !DILocation(line: 1115, column: 31, scope: !4729)
!4741 = !DILocation(line: 1115, column: 2, scope: !4729)
!4742 = distinct !{!4742, !4731, !4743}
!4743 = !DILocation(line: 1117, column: 37, scope: !4726)
!4744 = !DILocation(line: 1119, column: 2, scope: !4721)
!4745 = !DILocation(line: 1121, column: 28, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 1121, column: 6)
!4747 = !DILocation(line: 1121, column: 6, scope: !4746)
!4748 = !DILocation(line: 1121, column: 6, scope: !4721)
!4749 = !DILocation(line: 1122, column: 3, scope: !4746)
!4750 = !DILocation(line: 1124, column: 17, scope: !4721)
!4751 = !DILocation(line: 1124, column: 2, scope: !4721)
!4752 = !DILocation(line: 1125, column: 1, scope: !4721)
!4753 = distinct !DISubprogram(name: "moxa_board_deinit", scope: !3, file: !3, line: 892, type: !4754, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4754 = !DISubroutineType(types: !4755)
!4755 = !{null, !4218}
!4756 = !DILocalVariable(name: "brd", arg: 1, scope: !4753, file: !3, line: 892, type: !4218)
!4757 = !DILocation(line: 892, column: 55, scope: !4753)
!4758 = !DILocalVariable(name: "a", scope: !4753, file: !3, line: 894, type: !7)
!4759 = !DILocation(line: 894, column: 15, scope: !4753)
!4760 = !DILocalVariable(name: "opened", scope: !4753, file: !3, line: 894, type: !7)
!4761 = !DILocation(line: 894, column: 18, scope: !4753)
!4762 = !DILocalVariable(name: "first_idx", scope: !4753, file: !3, line: 894, type: !7)
!4763 = !DILocation(line: 894, column: 26, scope: !4753)
!4764 = !DILocation(line: 896, column: 2, scope: !4753)
!4765 = !DILocation(line: 897, column: 2, scope: !4753)
!4766 = !DILocation(line: 898, column: 2, scope: !4753)
!4767 = !DILocation(line: 898, column: 7, scope: !4753)
!4768 = !DILocation(line: 898, column: 13, scope: !4753)
!4769 = !DILocation(line: 899, column: 2, scope: !4753)
!4770 = !DILocation(line: 902, column: 9, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 902, column: 2)
!4772 = !DILocation(line: 902, column: 7, scope: !4771)
!4773 = !DILocation(line: 902, column: 14, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 902, column: 2)
!4775 = !DILocation(line: 902, column: 18, scope: !4774)
!4776 = !DILocation(line: 902, column: 23, scope: !4774)
!4777 = !DILocation(line: 902, column: 16, scope: !4774)
!4778 = !DILocation(line: 902, column: 2, scope: !4771)
!4779 = !DILocation(line: 903, column: 29, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4774, file: !3, line: 903, column: 7)
!4781 = !DILocation(line: 903, column: 34, scope: !4780)
!4782 = !DILocation(line: 903, column: 40, scope: !4780)
!4783 = !DILocation(line: 903, column: 43, scope: !4780)
!4784 = !DILocation(line: 903, column: 7, scope: !4780)
!4785 = !DILocation(line: 903, column: 7, scope: !4774)
!4786 = !DILocation(line: 904, column: 25, scope: !4780)
!4787 = !DILocation(line: 904, column: 30, scope: !4780)
!4788 = !DILocation(line: 904, column: 36, scope: !4780)
!4789 = !DILocation(line: 904, column: 39, scope: !4780)
!4790 = !DILocation(line: 904, column: 4, scope: !4780)
!4791 = !DILocation(line: 903, column: 47, scope: !4780)
!4792 = !DILocation(line: 902, column: 34, scope: !4774)
!4793 = !DILocation(line: 902, column: 2, scope: !4774)
!4794 = distinct !{!4794, !4778, !4795}
!4795 = !DILocation(line: 904, column: 50, scope: !4771)
!4796 = !DILocation(line: 906, column: 9, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 906, column: 2)
!4798 = !DILocation(line: 906, column: 7, scope: !4797)
!4799 = !DILocation(line: 906, column: 14, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 906, column: 2)
!4801 = !DILocation(line: 906, column: 16, scope: !4800)
!4802 = !DILocation(line: 906, column: 2, scope: !4797)
!4803 = !DILocation(line: 907, column: 21, scope: !4800)
!4804 = !DILocation(line: 907, column: 26, scope: !4800)
!4805 = !DILocation(line: 907, column: 32, scope: !4800)
!4806 = !DILocation(line: 907, column: 35, scope: !4800)
!4807 = !DILocation(line: 907, column: 3, scope: !4800)
!4808 = !DILocation(line: 906, column: 40, scope: !4800)
!4809 = !DILocation(line: 906, column: 2, scope: !4800)
!4810 = distinct !{!4810, !4802, !4811}
!4811 = !DILocation(line: 907, column: 39, scope: !4797)
!4812 = !DILocation(line: 909, column: 2, scope: !4753)
!4813 = !DILocation(line: 910, column: 10, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 909, column: 12)
!4815 = !DILocation(line: 911, column: 10, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 911, column: 3)
!4817 = !DILocation(line: 911, column: 8, scope: !4816)
!4818 = !DILocation(line: 911, column: 15, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4816, file: !3, line: 911, column: 3)
!4820 = !DILocation(line: 911, column: 19, scope: !4819)
!4821 = !DILocation(line: 911, column: 24, scope: !4819)
!4822 = !DILocation(line: 911, column: 17, scope: !4819)
!4823 = !DILocation(line: 911, column: 3, scope: !4816)
!4824 = !DILocation(line: 912, column: 30, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 912, column: 8)
!4826 = !DILocation(line: 912, column: 35, scope: !4825)
!4827 = !DILocation(line: 912, column: 41, scope: !4825)
!4828 = !DILocation(line: 912, column: 44, scope: !4825)
!4829 = !DILocation(line: 912, column: 8, scope: !4825)
!4830 = !DILocation(line: 912, column: 8, scope: !4819)
!4831 = !DILocation(line: 913, column: 11, scope: !4825)
!4832 = !DILocation(line: 913, column: 5, scope: !4825)
!4833 = !DILocation(line: 912, column: 48, scope: !4825)
!4834 = !DILocation(line: 911, column: 35, scope: !4819)
!4835 = !DILocation(line: 911, column: 3, scope: !4819)
!4836 = distinct !{!4836, !4823, !4837}
!4837 = !DILocation(line: 913, column: 11, scope: !4816)
!4838 = !DILocation(line: 914, column: 3, scope: !4814)
!4839 = !DILocation(line: 915, column: 8, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 915, column: 7)
!4841 = !DILocation(line: 915, column: 7, scope: !4814)
!4842 = !DILocation(line: 916, column: 4, scope: !4840)
!4843 = !DILocation(line: 917, column: 3, scope: !4814)
!4844 = !DILocation(line: 918, column: 3, scope: !4814)
!4845 = distinct !{!4845, !4812, !4846}
!4846 = !DILocation(line: 919, column: 2, scope: !4753)
!4847 = !DILocation(line: 921, column: 15, scope: !4753)
!4848 = !DILocation(line: 921, column: 19, scope: !4753)
!4849 = !DILocation(line: 921, column: 34, scope: !4753)
!4850 = !DILocation(line: 921, column: 14, scope: !4753)
!4851 = !DILocation(line: 921, column: 12, scope: !4753)
!4852 = !DILocation(line: 922, column: 9, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 922, column: 2)
!4854 = !DILocation(line: 922, column: 7, scope: !4853)
!4855 = !DILocation(line: 922, column: 14, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 922, column: 2)
!4857 = !DILocation(line: 922, column: 18, scope: !4856)
!4858 = !DILocation(line: 922, column: 23, scope: !4856)
!4859 = !DILocation(line: 922, column: 16, scope: !4856)
!4860 = !DILocation(line: 922, column: 2, scope: !4853)
!4861 = !DILocation(line: 923, column: 25, scope: !4856)
!4862 = !DILocation(line: 923, column: 37, scope: !4856)
!4863 = !DILocation(line: 923, column: 49, scope: !4856)
!4864 = !DILocation(line: 923, column: 47, scope: !4856)
!4865 = !DILocation(line: 923, column: 3, scope: !4856)
!4866 = !DILocation(line: 922, column: 34, scope: !4856)
!4867 = !DILocation(line: 922, column: 2, scope: !4856)
!4868 = distinct !{!4868, !4860, !4869}
!4869 = !DILocation(line: 923, column: 50, scope: !4853)
!4870 = !DILocation(line: 925, column: 10, scope: !4753)
!4871 = !DILocation(line: 925, column: 15, scope: !4753)
!4872 = !DILocation(line: 925, column: 2, scope: !4753)
!4873 = !DILocation(line: 926, column: 2, scope: !4753)
!4874 = !DILocation(line: 926, column: 7, scope: !4753)
!4875 = !DILocation(line: 926, column: 15, scope: !4753)
!4876 = !DILocation(line: 927, column: 8, scope: !4753)
!4877 = !DILocation(line: 927, column: 13, scope: !4753)
!4878 = !DILocation(line: 927, column: 2, scope: !4753)
!4879 = !DILocation(line: 928, column: 1, scope: !4753)
!4880 = distinct !DISubprogram(name: "moxa_init", scope: !3, file: !3, line: 1023, type: !4881, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{!141}
!4883 = !DILocalVariable(name: "isabrds", scope: !4880, file: !3, line: 1025, type: !7)
!4884 = !DILocation(line: 1025, column: 15, scope: !4880)
!4885 = !DILocalVariable(name: "retval", scope: !4880, file: !3, line: 1026, type: !141)
!4886 = !DILocation(line: 1026, column: 6, scope: !4880)
!4887 = !DILocalVariable(name: "brd", scope: !4880, file: !3, line: 1027, type: !4218)
!4888 = !DILocation(line: 1027, column: 26, scope: !4880)
!4889 = !DILocalVariable(name: "i", scope: !4880, file: !3, line: 1028, type: !7)
!4890 = !DILocation(line: 1028, column: 15, scope: !4880)
!4891 = !DILocation(line: 1030, column: 2, scope: !4880)
!4892 = !DILocation(line: 1033, column: 2, scope: !4880)
!4893 = !DILocation(line: 1035, column: 15, scope: !4880)
!4894 = !DILocation(line: 1035, column: 13, scope: !4880)
!4895 = !DILocation(line: 1038, column: 13, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 1038, column: 6)
!4897 = !DILocation(line: 1038, column: 6, scope: !4896)
!4898 = !DILocation(line: 1038, column: 6, scope: !4880)
!4899 = !DILocation(line: 1039, column: 18, scope: !4896)
!4900 = !DILocation(line: 1039, column: 10, scope: !4896)
!4901 = !DILocation(line: 1039, column: 3, scope: !4896)
!4902 = !DILocation(line: 1041, column: 2, scope: !4880)
!4903 = !DILocation(line: 1041, column: 14, scope: !4880)
!4904 = !DILocation(line: 1041, column: 19, scope: !4880)
!4905 = !DILocation(line: 1042, column: 22, scope: !4880)
!4906 = !DILocation(line: 1042, column: 2, scope: !4880)
!4907 = !DILocation(line: 1042, column: 14, scope: !4880)
!4908 = !DILocation(line: 1042, column: 20, scope: !4880)
!4909 = !DILocation(line: 1043, column: 2, scope: !4880)
!4910 = !DILocation(line: 1043, column: 14, scope: !4880)
!4911 = !DILocation(line: 1043, column: 26, scope: !4880)
!4912 = !DILocation(line: 1044, column: 2, scope: !4880)
!4913 = !DILocation(line: 1044, column: 14, scope: !4880)
!4914 = !DILocation(line: 1044, column: 19, scope: !4880)
!4915 = !DILocation(line: 1045, column: 2, scope: !4880)
!4916 = !DILocation(line: 1045, column: 14, scope: !4880)
!4917 = !DILocation(line: 1045, column: 22, scope: !4880)
!4918 = !DILocation(line: 1046, column: 2, scope: !4880)
!4919 = !DILocation(line: 1046, column: 14, scope: !4880)
!4920 = !DILocation(line: 1046, column: 29, scope: !4880)
!4921 = !DILocation(line: 1047, column: 2, scope: !4880)
!4922 = !DILocation(line: 1047, column: 14, scope: !4880)
!4923 = !DILocation(line: 1047, column: 27, scope: !4880)
!4924 = !DILocation(line: 1047, column: 35, scope: !4880)
!4925 = !DILocation(line: 1048, column: 2, scope: !4880)
!4926 = !DILocation(line: 1048, column: 14, scope: !4880)
!4927 = !DILocation(line: 1048, column: 27, scope: !4880)
!4928 = !DILocation(line: 1048, column: 36, scope: !4880)
!4929 = !DILocation(line: 1049, column: 2, scope: !4880)
!4930 = !DILocation(line: 1049, column: 14, scope: !4880)
!4931 = !DILocation(line: 1049, column: 27, scope: !4880)
!4932 = !DILocation(line: 1049, column: 36, scope: !4880)
!4933 = !DILocation(line: 1050, column: 21, scope: !4880)
!4934 = !DILocation(line: 1050, column: 2, scope: !4880)
!4935 = !DILocation(line: 1052, column: 43, scope: !4880)
!4936 = !DILocation(line: 1052, column: 2, scope: !4880)
!4937 = !DILocation(line: 1054, column: 26, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 1054, column: 6)
!4939 = !DILocation(line: 1054, column: 6, scope: !4938)
!4940 = !DILocation(line: 1054, column: 6, scope: !4880)
!4941 = !DILocation(line: 1055, column: 3, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 1054, column: 39)
!4943 = !DILocation(line: 1056, column: 18, scope: !4942)
!4944 = !DILocation(line: 1056, column: 3, scope: !4942)
!4945 = !DILocation(line: 1057, column: 3, scope: !4942)
!4946 = !DILocation(line: 1062, column: 9, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 1062, column: 2)
!4948 = !DILocation(line: 1062, column: 7, scope: !4947)
!4949 = !DILocation(line: 1062, column: 14, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 1062, column: 2)
!4951 = !DILocation(line: 1062, column: 16, scope: !4950)
!4952 = !DILocation(line: 1062, column: 2, scope: !4947)
!4953 = !DILocation(line: 1063, column: 17, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 1063, column: 7)
!4955 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 1062, column: 35)
!4956 = !DILocation(line: 1063, column: 8, scope: !4954)
!4957 = !DILocation(line: 1063, column: 7, scope: !4955)
!4958 = !DILocation(line: 1064, column: 4, scope: !4954)
!4959 = !DILocation(line: 1065, column: 12, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 1065, column: 7)
!4961 = !DILocation(line: 1065, column: 7, scope: !4960)
!4962 = !DILocation(line: 1065, column: 15, scope: !4960)
!4963 = !DILocation(line: 1065, column: 38, scope: !4960)
!4964 = !DILocation(line: 1066, column: 10, scope: !4960)
!4965 = !DILocation(line: 1066, column: 5, scope: !4960)
!4966 = !DILocation(line: 1066, column: 13, scope: !4960)
!4967 = !DILocation(line: 1065, column: 7, scope: !4955)
!4968 = !DILocation(line: 1067, column: 4, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 1067, column: 4)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 1067, column: 4)
!4971 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 1066, column: 37)
!4972 = !DILocation(line: 1067, column: 4, scope: !4970)
!4973 = !DILocation(line: 1070, column: 26, scope: !4971)
!4974 = !DILocation(line: 1070, column: 21, scope: !4971)
!4975 = !DILocation(line: 1070, column: 4, scope: !4971)
!4976 = !DILocation(line: 1070, column: 9, scope: !4971)
!4977 = !DILocation(line: 1070, column: 19, scope: !4971)
!4978 = !DILocation(line: 1071, column: 25, scope: !4971)
!4979 = !DILocation(line: 1071, column: 20, scope: !4971)
!4980 = !DILocation(line: 1071, column: 28, scope: !4971)
!4981 = !DILocation(line: 1072, column: 15, scope: !4971)
!4982 = !DILocation(line: 1072, column: 6, scope: !4971)
!4983 = !DILocation(line: 1071, column: 4, scope: !4971)
!4984 = !DILocation(line: 1071, column: 9, scope: !4971)
!4985 = !DILocation(line: 1071, column: 18, scope: !4971)
!4986 = !DILocation(line: 1073, column: 4, scope: !4971)
!4987 = !DILocation(line: 1073, column: 9, scope: !4971)
!4988 = !DILocation(line: 1073, column: 17, scope: !4971)
!4989 = !DILocation(line: 1074, column: 36, scope: !4971)
!4990 = !DILocation(line: 1074, column: 27, scope: !4971)
!4991 = !DILocation(line: 1074, column: 19, scope: !4971)
!4992 = !DILocation(line: 1074, column: 4, scope: !4971)
!4993 = !DILocation(line: 1074, column: 9, scope: !4971)
!4994 = !DILocation(line: 1074, column: 17, scope: !4971)
!4995 = !DILocation(line: 1075, column: 9, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 1075, column: 8)
!4997 = !DILocation(line: 1075, column: 14, scope: !4996)
!4998 = !DILocation(line: 1075, column: 8, scope: !4971)
!4999 = !DILocation(line: 1077, column: 16, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 1075, column: 23)
!5001 = !DILocation(line: 1077, column: 7, scope: !5000)
!5002 = !DILocation(line: 1076, column: 5, scope: !5000)
!5003 = !DILocation(line: 1078, column: 5, scope: !5000)
!5004 = !DILocation(line: 1080, column: 24, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 1080, column: 8)
!5006 = !DILocation(line: 1080, column: 8, scope: !5005)
!5007 = !DILocation(line: 1080, column: 8, scope: !4971)
!5008 = !DILocation(line: 1081, column: 13, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1080, column: 36)
!5010 = !DILocation(line: 1081, column: 18, scope: !5009)
!5011 = !DILocation(line: 1081, column: 5, scope: !5009)
!5012 = !DILocation(line: 1082, column: 5, scope: !5009)
!5013 = !DILocation(line: 1082, column: 10, scope: !5009)
!5014 = !DILocation(line: 1082, column: 18, scope: !5009)
!5015 = !DILocation(line: 1083, column: 5, scope: !5009)
!5016 = !DILocation(line: 1088, column: 15, scope: !4971)
!5017 = !DILocation(line: 1088, column: 6, scope: !4971)
!5018 = !DILocation(line: 1088, column: 19, scope: !4971)
!5019 = !DILocation(line: 1088, column: 24, scope: !4971)
!5020 = !DILocation(line: 1086, column: 4, scope: !4971)
!5021 = !DILocation(line: 1090, column: 7, scope: !4971)
!5022 = !DILocation(line: 1091, column: 11, scope: !4971)
!5023 = !DILocation(line: 1092, column: 3, scope: !4971)
!5024 = !DILocation(line: 1093, column: 2, scope: !4955)
!5025 = !DILocation(line: 1062, column: 31, scope: !4950)
!5026 = !DILocation(line: 1062, column: 2, scope: !4950)
!5027 = distinct !{!5027, !4952, !5028}
!5028 = !DILocation(line: 1093, column: 2, scope: !4947)
!5029 = !DILocation(line: 1096, column: 11, scope: !4880)
!5030 = !DILocation(line: 1096, column: 9, scope: !4880)
!5031 = !DILocation(line: 1097, column: 6, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 1097, column: 6)
!5033 = !DILocation(line: 1097, column: 6, scope: !4880)
!5034 = !DILocation(line: 1098, column: 3, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 1097, column: 14)
!5036 = !DILocation(line: 1099, column: 7, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 1099, column: 7)
!5038 = !DILocation(line: 1099, column: 7, scope: !5035)
!5039 = !DILocation(line: 1100, column: 11, scope: !5037)
!5040 = !DILocation(line: 1100, column: 4, scope: !5037)
!5041 = !DILocation(line: 1101, column: 2, scope: !5035)
!5042 = !DILocation(line: 1104, column: 9, scope: !4880)
!5043 = !DILocation(line: 1104, column: 2, scope: !4880)
!5044 = !DILocation(line: 1105, column: 1, scope: !4880)
!5045 = distinct !DISubprogram(name: "moxa_pci_probe", scope: !3, file: !3, line: 931, type: !4423, scopeLine: 933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5046 = !DILocalVariable(name: "pdev", arg: 1, scope: !5045, file: !3, line: 931, type: !4425)
!5047 = !DILocation(line: 931, column: 43, scope: !5045)
!5048 = !DILocalVariable(name: "ent", arg: 2, scope: !5045, file: !3, line: 932, type: !4410)
!5049 = !DILocation(line: 932, column: 31, scope: !5045)
!5050 = !DILocalVariable(name: "board", scope: !5045, file: !3, line: 934, type: !4218)
!5051 = !DILocation(line: 934, column: 26, scope: !5045)
!5052 = !DILocalVariable(name: "i", scope: !5045, file: !3, line: 935, type: !7)
!5053 = !DILocation(line: 935, column: 15, scope: !5045)
!5054 = !DILocalVariable(name: "board_type", scope: !5045, file: !3, line: 936, type: !141)
!5055 = !DILocation(line: 936, column: 6, scope: !5045)
!5056 = !DILocation(line: 936, column: 19, scope: !5045)
!5057 = !DILocation(line: 936, column: 24, scope: !5045)
!5058 = !DILocalVariable(name: "retval", scope: !5045, file: !3, line: 937, type: !141)
!5059 = !DILocation(line: 937, column: 6, scope: !5045)
!5060 = !DILocation(line: 939, column: 29, scope: !5045)
!5061 = !DILocation(line: 939, column: 11, scope: !5045)
!5062 = !DILocation(line: 939, column: 9, scope: !5045)
!5063 = !DILocation(line: 940, column: 6, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 940, column: 6)
!5065 = !DILocation(line: 940, column: 6, scope: !5045)
!5066 = !DILocation(line: 941, column: 3, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 940, column: 14)
!5068 = !DILocation(line: 942, column: 3, scope: !5067)
!5069 = !DILocation(line: 945, column: 9, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 945, column: 2)
!5071 = !DILocation(line: 945, column: 7, scope: !5070)
!5072 = !DILocation(line: 945, column: 14, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 945, column: 2)
!5074 = !DILocation(line: 945, column: 16, scope: !5073)
!5075 = !DILocation(line: 945, column: 2, scope: !5070)
!5076 = !DILocation(line: 946, column: 19, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 946, column: 7)
!5078 = !DILocation(line: 946, column: 7, scope: !5077)
!5079 = !DILocation(line: 946, column: 22, scope: !5077)
!5080 = !DILocation(line: 946, column: 30, scope: !5077)
!5081 = !DILocation(line: 946, column: 7, scope: !5073)
!5082 = !DILocation(line: 947, column: 4, scope: !5077)
!5083 = !DILocation(line: 946, column: 33, scope: !5077)
!5084 = !DILocation(line: 945, column: 31, scope: !5073)
!5085 = !DILocation(line: 945, column: 2, scope: !5073)
!5086 = distinct !{!5086, !5075, !5087}
!5087 = !DILocation(line: 947, column: 4, scope: !5070)
!5088 = !DILocation(line: 949, column: 9, scope: !5045)
!5089 = !DILocation(line: 950, column: 6, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 950, column: 6)
!5091 = !DILocation(line: 950, column: 8, scope: !5090)
!5092 = !DILocation(line: 950, column: 6, scope: !5045)
!5093 = !DILocation(line: 951, column: 3, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 950, column: 23)
!5095 = !DILocation(line: 953, column: 3, scope: !5094)
!5096 = !DILocation(line: 956, column: 23, scope: !5045)
!5097 = !DILocation(line: 956, column: 11, scope: !5045)
!5098 = !DILocation(line: 956, column: 8, scope: !5045)
!5099 = !DILocation(line: 958, column: 30, scope: !5045)
!5100 = !DILocation(line: 958, column: 11, scope: !5045)
!5101 = !DILocation(line: 958, column: 9, scope: !5045)
!5102 = !DILocation(line: 959, column: 6, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 959, column: 6)
!5104 = !DILocation(line: 959, column: 6, scope: !5045)
!5105 = !DILocation(line: 960, column: 3, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 959, column: 14)
!5107 = !DILocation(line: 961, column: 3, scope: !5106)
!5108 = !DILocation(line: 964, column: 27, scope: !5045)
!5109 = !DILocation(line: 964, column: 19, scope: !5045)
!5110 = !DILocation(line: 964, column: 2, scope: !5045)
!5111 = !DILocation(line: 964, column: 9, scope: !5045)
!5112 = !DILocation(line: 964, column: 17, scope: !5045)
!5113 = !DILocation(line: 965, column: 6, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 965, column: 6)
!5115 = !DILocation(line: 965, column: 13, scope: !5114)
!5116 = !DILocation(line: 965, column: 21, scope: !5114)
!5117 = !DILocation(line: 965, column: 6, scope: !5045)
!5118 = !DILocation(line: 966, column: 3, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 965, column: 30)
!5120 = !DILocation(line: 967, column: 10, scope: !5119)
!5121 = !DILocation(line: 968, column: 3, scope: !5119)
!5122 = !DILocation(line: 971, column: 21, scope: !5045)
!5123 = !DILocation(line: 971, column: 2, scope: !5045)
!5124 = !DILocation(line: 971, column: 9, scope: !5045)
!5125 = !DILocation(line: 971, column: 19, scope: !5045)
!5126 = !DILocation(line: 972, column: 10, scope: !5045)
!5127 = !DILocation(line: 972, column: 2, scope: !5045)
!5128 = !DILocation(line: 975, column: 3, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 972, column: 22)
!5130 = !DILocation(line: 975, column: 10, scope: !5129)
!5131 = !DILocation(line: 975, column: 19, scope: !5129)
!5132 = !DILocation(line: 976, column: 3, scope: !5129)
!5133 = !DILocation(line: 979, column: 3, scope: !5129)
!5134 = !DILocation(line: 979, column: 10, scope: !5129)
!5135 = !DILocation(line: 979, column: 19, scope: !5129)
!5136 = !DILocation(line: 980, column: 3, scope: !5129)
!5137 = !DILocation(line: 982, column: 3, scope: !5129)
!5138 = !DILocation(line: 982, column: 10, scope: !5129)
!5139 = !DILocation(line: 982, column: 19, scope: !5129)
!5140 = !DILocation(line: 983, column: 3, scope: !5129)
!5141 = !DILocation(line: 985, column: 2, scope: !5045)
!5142 = !DILocation(line: 985, column: 9, scope: !5045)
!5143 = !DILocation(line: 985, column: 17, scope: !5045)
!5144 = !DILocation(line: 987, column: 27, scope: !5045)
!5145 = !DILocation(line: 987, column: 35, scope: !5045)
!5146 = !DILocation(line: 987, column: 41, scope: !5045)
!5147 = !DILocation(line: 987, column: 11, scope: !5045)
!5148 = !DILocation(line: 987, column: 9, scope: !5045)
!5149 = !DILocation(line: 988, column: 6, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 988, column: 6)
!5151 = !DILocation(line: 988, column: 6, scope: !5045)
!5152 = !DILocation(line: 989, column: 3, scope: !5150)
!5153 = !DILocation(line: 991, column: 18, scope: !5045)
!5154 = !DILocation(line: 991, column: 24, scope: !5045)
!5155 = !DILocation(line: 991, column: 2, scope: !5045)
!5156 = !DILocation(line: 993, column: 2, scope: !5045)
!5157 = !DILocation(line: 996, column: 2, scope: !5045)
!5158 = !DILabel(scope: !5045, name: "err_base", file: !3, line: 997)
!5159 = !DILocation(line: 997, column: 1, scope: !5045)
!5160 = !DILocation(line: 998, column: 10, scope: !5045)
!5161 = !DILocation(line: 998, column: 17, scope: !5045)
!5162 = !DILocation(line: 998, column: 2, scope: !5045)
!5163 = !DILocation(line: 999, column: 2, scope: !5045)
!5164 = !DILocation(line: 999, column: 9, scope: !5045)
!5165 = !DILocation(line: 999, column: 17, scope: !5045)
!5166 = !DILabel(scope: !5045, name: "err_reg", file: !3, line: 1000)
!5167 = !DILocation(line: 1000, column: 1, scope: !5045)
!5168 = !DILocation(line: 1001, column: 21, scope: !5045)
!5169 = !DILocation(line: 1001, column: 2, scope: !5045)
!5170 = !DILabel(scope: !5045, name: "err", file: !3, line: 1002)
!5171 = !DILocation(line: 1002, column: 1, scope: !5045)
!5172 = !DILocation(line: 1003, column: 9, scope: !5045)
!5173 = !DILocation(line: 1003, column: 2, scope: !5045)
!5174 = !DILocation(line: 1004, column: 1, scope: !5045)
!5175 = distinct !DISubprogram(name: "moxa_pci_remove", scope: !3, file: !3, line: 1006, type: !4637, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5176 = !DILocalVariable(name: "pdev", arg: 1, scope: !5175, file: !3, line: 1006, type: !4425)
!5177 = !DILocation(line: 1006, column: 45, scope: !5175)
!5178 = !DILocalVariable(name: "brd", scope: !5175, file: !3, line: 1008, type: !4218)
!5179 = !DILocation(line: 1008, column: 26, scope: !5175)
!5180 = !DILocation(line: 1008, column: 48, scope: !5175)
!5181 = !DILocation(line: 1008, column: 32, scope: !5175)
!5182 = !DILocation(line: 1010, column: 20, scope: !5175)
!5183 = !DILocation(line: 1010, column: 2, scope: !5175)
!5184 = !DILocation(line: 1012, column: 21, scope: !5175)
!5185 = !DILocation(line: 1012, column: 2, scope: !5175)
!5186 = !DILocation(line: 1013, column: 1, scope: !5175)
!5187 = distinct !DISubprogram(name: "moxa_init_board", scope: !3, file: !3, line: 820, type: !5188, scopeLine: 821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5188 = !DISubroutineType(types: !5189)
!5189 = !{!141, !4218, !230}
!5190 = !DILocalVariable(name: "brd", arg: 1, scope: !5187, file: !3, line: 820, type: !4218)
!5191 = !DILocation(line: 820, column: 52, scope: !5187)
!5192 = !DILocalVariable(name: "dev", arg: 2, scope: !5187, file: !3, line: 820, type: !230)
!5193 = !DILocation(line: 820, column: 72, scope: !5187)
!5194 = !DILocalVariable(name: "fw", scope: !5187, file: !3, line: 822, type: !5195)
!5195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5196, size: 64)
!5196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5197)
!5197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "firmware", file: !5198, line: 12, size: 192, elements: !5199)
!5198 = !DIFile(filename: "./include/linux/firmware.h", directory: "/home/lizy2001/genbc/linux")
!5199 = !{!5200, !5201, !5204}
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5197, file: !5198, line: 13, baseType: !323, size: 64)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5197, file: !5198, line: 14, baseType: !5202, size: 64, offset: 64)
!5202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5203, size: 64)
!5203 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5197, file: !5198, line: 17, baseType: !113, size: 64, offset: 128)
!5205 = !DILocation(line: 822, column: 25, scope: !5187)
!5206 = !DILocalVariable(name: "file", scope: !5187, file: !3, line: 823, type: !238)
!5207 = !DILocation(line: 823, column: 14, scope: !5187)
!5208 = !DILocalVariable(name: "p", scope: !5187, file: !3, line: 824, type: !116)
!5209 = !DILocation(line: 824, column: 20, scope: !5187)
!5210 = !DILocalVariable(name: "i", scope: !5187, file: !3, line: 825, type: !7)
!5211 = !DILocation(line: 825, column: 15, scope: !5187)
!5212 = !DILocalVariable(name: "first_idx", scope: !5187, file: !3, line: 825, type: !7)
!5213 = !DILocation(line: 825, column: 18, scope: !5187)
!5214 = !DILocalVariable(name: "ret", scope: !5187, file: !3, line: 826, type: !141)
!5215 = !DILocation(line: 826, column: 6, scope: !5187)
!5216 = !DILocation(line: 828, column: 15, scope: !5187)
!5217 = !DILocation(line: 828, column: 2, scope: !5187)
!5218 = !DILocation(line: 828, column: 7, scope: !5187)
!5219 = !DILocation(line: 828, column: 13, scope: !5187)
!5220 = !DILocation(line: 830, column: 6, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 830, column: 6)
!5222 = !DILocation(line: 830, column: 11, scope: !5221)
!5223 = !DILocation(line: 830, column: 17, scope: !5221)
!5224 = !DILocation(line: 830, column: 6, scope: !5187)
!5225 = !DILocation(line: 831, column: 3, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 830, column: 26)
!5227 = !DILocation(line: 832, column: 7, scope: !5226)
!5228 = !DILocation(line: 833, column: 3, scope: !5226)
!5229 = !DILocation(line: 836, column: 9, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 836, column: 2)
!5231 = !DILocation(line: 836, column: 18, scope: !5230)
!5232 = !DILocation(line: 836, column: 23, scope: !5230)
!5233 = !DILocation(line: 836, column: 16, scope: !5230)
!5234 = !DILocation(line: 836, column: 7, scope: !5230)
!5235 = !DILocation(line: 836, column: 30, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 836, column: 2)
!5237 = !DILocation(line: 836, column: 32, scope: !5236)
!5238 = !DILocation(line: 836, column: 2, scope: !5230)
!5239 = !DILocation(line: 837, column: 18, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5236, file: !3, line: 836, column: 65)
!5241 = !DILocation(line: 837, column: 21, scope: !5240)
!5242 = !DILocation(line: 837, column: 3, scope: !5240)
!5243 = !DILocation(line: 838, column: 3, scope: !5240)
!5244 = !DILocation(line: 838, column: 6, scope: !5240)
!5245 = !DILocation(line: 838, column: 11, scope: !5240)
!5246 = !DILocation(line: 838, column: 15, scope: !5240)
!5247 = !DILocation(line: 839, column: 3, scope: !5240)
!5248 = !DILocation(line: 839, column: 6, scope: !5240)
!5249 = !DILocation(line: 839, column: 11, scope: !5240)
!5250 = !DILocation(line: 840, column: 3, scope: !5240)
!5251 = !DILocation(line: 840, column: 6, scope: !5240)
!5252 = !DILocation(line: 840, column: 12, scope: !5240)
!5253 = !DILocation(line: 841, column: 2, scope: !5240)
!5254 = !DILocation(line: 836, column: 56, scope: !5236)
!5255 = !DILocation(line: 836, column: 61, scope: !5236)
!5256 = !DILocation(line: 836, column: 2, scope: !5236)
!5257 = distinct !{!5257, !5238, !5258}
!5258 = !DILocation(line: 841, column: 2, scope: !5230)
!5259 = !DILocation(line: 843, column: 10, scope: !5187)
!5260 = !DILocation(line: 843, column: 15, scope: !5187)
!5261 = !DILocation(line: 843, column: 2, scope: !5187)
!5262 = !DILocation(line: 846, column: 8, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 843, column: 26)
!5264 = !DILocation(line: 847, column: 3, scope: !5263)
!5265 = !DILocation(line: 849, column: 8, scope: !5263)
!5266 = !DILocation(line: 850, column: 3, scope: !5263)
!5267 = !DILocation(line: 852, column: 8, scope: !5263)
!5268 = !DILocation(line: 853, column: 3, scope: !5263)
!5269 = !DILocation(line: 856, column: 30, scope: !5187)
!5270 = !DILocation(line: 856, column: 36, scope: !5187)
!5271 = !DILocation(line: 856, column: 8, scope: !5187)
!5272 = !DILocation(line: 856, column: 6, scope: !5187)
!5273 = !DILocation(line: 857, column: 6, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 857, column: 6)
!5275 = !DILocation(line: 857, column: 6, scope: !5187)
!5276 = !DILocation(line: 861, column: 5, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 857, column: 11)
!5278 = !DILocation(line: 858, column: 3, scope: !5277)
!5279 = !DILocation(line: 862, column: 3, scope: !5277)
!5280 = !DILocation(line: 865, column: 21, scope: !5187)
!5281 = !DILocation(line: 865, column: 26, scope: !5187)
!5282 = !DILocation(line: 865, column: 8, scope: !5187)
!5283 = !DILocation(line: 865, column: 6, scope: !5187)
!5284 = !DILocation(line: 867, column: 19, scope: !5187)
!5285 = !DILocation(line: 867, column: 2, scope: !5187)
!5286 = !DILocation(line: 869, column: 6, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 869, column: 6)
!5288 = !DILocation(line: 869, column: 6, scope: !5187)
!5289 = !DILocation(line: 870, column: 3, scope: !5287)
!5290 = !DILocation(line: 872, column: 2, scope: !5187)
!5291 = !DILocation(line: 873, column: 2, scope: !5187)
!5292 = !DILocation(line: 873, column: 7, scope: !5187)
!5293 = !DILocation(line: 873, column: 13, scope: !5187)
!5294 = !DILocation(line: 874, column: 7, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 874, column: 6)
!5296 = !DILocation(line: 874, column: 6, scope: !5187)
!5297 = !DILocation(line: 875, column: 25, scope: !5295)
!5298 = !DILocation(line: 875, column: 33, scope: !5295)
!5299 = !DILocation(line: 875, column: 3, scope: !5295)
!5300 = !DILocation(line: 876, column: 2, scope: !5187)
!5301 = !DILocation(line: 878, column: 15, scope: !5187)
!5302 = !DILocation(line: 878, column: 19, scope: !5187)
!5303 = !DILocation(line: 878, column: 34, scope: !5187)
!5304 = !DILocation(line: 878, column: 14, scope: !5187)
!5305 = !DILocation(line: 878, column: 12, scope: !5187)
!5306 = !DILocation(line: 879, column: 9, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 879, column: 2)
!5308 = !DILocation(line: 879, column: 7, scope: !5307)
!5309 = !DILocation(line: 879, column: 14, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 879, column: 2)
!5311 = !DILocation(line: 879, column: 18, scope: !5310)
!5312 = !DILocation(line: 879, column: 23, scope: !5310)
!5313 = !DILocation(line: 879, column: 16, scope: !5310)
!5314 = !DILocation(line: 879, column: 2, scope: !5307)
!5315 = !DILocation(line: 880, column: 29, scope: !5310)
!5316 = !DILocation(line: 880, column: 34, scope: !5310)
!5317 = !DILocation(line: 880, column: 40, scope: !5310)
!5318 = !DILocation(line: 880, column: 43, scope: !5310)
!5319 = !DILocation(line: 880, column: 49, scope: !5310)
!5320 = !DILocation(line: 881, column: 5, scope: !5310)
!5321 = !DILocation(line: 881, column: 17, scope: !5310)
!5322 = !DILocation(line: 881, column: 15, scope: !5310)
!5323 = !DILocation(line: 881, column: 20, scope: !5310)
!5324 = !DILocation(line: 880, column: 3, scope: !5310)
!5325 = !DILocation(line: 879, column: 34, scope: !5310)
!5326 = !DILocation(line: 879, column: 2, scope: !5310)
!5327 = distinct !{!5327, !5314, !5328}
!5328 = !DILocation(line: 881, column: 23, scope: !5307)
!5329 = !DILocation(line: 883, column: 2, scope: !5187)
!5330 = !DILabel(scope: !5187, name: "err_free", file: !3, line: 884)
!5331 = !DILocation(line: 884, column: 1, scope: !5187)
!5332 = !DILocation(line: 885, column: 9, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 885, column: 2)
!5334 = !DILocation(line: 885, column: 7, scope: !5333)
!5335 = !DILocation(line: 885, column: 14, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 885, column: 2)
!5337 = !DILocation(line: 885, column: 16, scope: !5336)
!5338 = !DILocation(line: 885, column: 2, scope: !5333)
!5339 = !DILocation(line: 886, column: 21, scope: !5336)
!5340 = !DILocation(line: 886, column: 26, scope: !5336)
!5341 = !DILocation(line: 886, column: 32, scope: !5336)
!5342 = !DILocation(line: 886, column: 35, scope: !5336)
!5343 = !DILocation(line: 886, column: 3, scope: !5336)
!5344 = !DILocation(line: 885, column: 40, scope: !5336)
!5345 = !DILocation(line: 885, column: 2, scope: !5336)
!5346 = distinct !{!5346, !5338, !5347}
!5347 = !DILocation(line: 886, column: 39, scope: !5333)
!5348 = !DILocation(line: 887, column: 8, scope: !5187)
!5349 = !DILocation(line: 887, column: 13, scope: !5187)
!5350 = !DILocation(line: 887, column: 2, scope: !5187)
!5351 = !DILabel(scope: !5187, name: "err", file: !3, line: 888)
!5352 = !DILocation(line: 888, column: 1, scope: !5187)
!5353 = !DILocation(line: 889, column: 9, scope: !5187)
!5354 = !DILocation(line: 889, column: 2, scope: !5187)
!5355 = !DILocation(line: 890, column: 1, scope: !5187)
!5356 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !4405, file: !4405, line: 1870, type: !5357, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5357 = !DISubroutineType(types: !5358)
!5358 = !{null, !4425, !113}
!5359 = !DILocalVariable(name: "pdev", arg: 1, scope: !5356, file: !4405, line: 1870, type: !4425)
!5360 = !DILocation(line: 1870, column: 52, scope: !5356)
!5361 = !DILocalVariable(name: "data", arg: 2, scope: !5356, file: !4405, line: 1870, type: !113)
!5362 = !DILocation(line: 1870, column: 64, scope: !5356)
!5363 = !DILocation(line: 1872, column: 19, scope: !5356)
!5364 = !DILocation(line: 1872, column: 25, scope: !5356)
!5365 = !DILocation(line: 1872, column: 30, scope: !5356)
!5366 = !DILocation(line: 1872, column: 2, scope: !5356)
!5367 = !DILocation(line: 1873, column: 1, scope: !5356)
!5368 = distinct !DISubprogram(name: "kcalloc", scope: !94, file: !94, line: 601, type: !5369, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5369 = !DISubroutineType(types: !5370)
!5370 = !{!113, !323, !323, !114}
!5371 = !DILocalVariable(name: "n", arg: 1, scope: !5368, file: !94, line: 601, type: !323)
!5372 = !DILocation(line: 601, column: 36, scope: !5368)
!5373 = !DILocalVariable(name: "size", arg: 2, scope: !5368, file: !94, line: 601, type: !323)
!5374 = !DILocation(line: 601, column: 46, scope: !5368)
!5375 = !DILocalVariable(name: "flags", arg: 3, scope: !5368, file: !94, line: 601, type: !114)
!5376 = !DILocation(line: 601, column: 58, scope: !5368)
!5377 = !DILocation(line: 603, column: 23, scope: !5368)
!5378 = !DILocation(line: 603, column: 26, scope: !5368)
!5379 = !DILocation(line: 603, column: 32, scope: !5368)
!5380 = !DILocation(line: 603, column: 38, scope: !5368)
!5381 = !DILocation(line: 603, column: 9, scope: !5368)
!5382 = !DILocation(line: 603, column: 2, scope: !5368)
!5383 = distinct !DISubprogram(name: "moxa_load_fw", scope: !3, file: !3, line: 731, type: !5384, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{!141, !4218, !5195}
!5386 = !DILocalVariable(name: "brd", arg: 1, scope: !5383, file: !3, line: 731, type: !4218)
!5387 = !DILocation(line: 731, column: 49, scope: !5383)
!5388 = !DILocalVariable(name: "fw", arg: 2, scope: !5383, file: !3, line: 731, type: !5195)
!5389 = !DILocation(line: 731, column: 77, scope: !5383)
!5390 = !DILocalVariable(name: "ptr", scope: !5383, file: !3, line: 733, type: !2179)
!5391 = !DILocation(line: 733, column: 14, scope: !5383)
!5392 = !DILocation(line: 733, column: 20, scope: !5383)
!5393 = !DILocation(line: 733, column: 24, scope: !5383)
!5394 = !DILocalVariable(name: "rsn", scope: !5383, file: !3, line: 734, type: !4138)
!5395 = !DILocation(line: 734, column: 7, scope: !5383)
!5396 = !DILocalVariable(name: "lens", scope: !5383, file: !3, line: 735, type: !5397)
!5397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !879, size: 80, elements: !4008)
!5398 = !DILocation(line: 735, column: 6, scope: !5383)
!5399 = !DILocalVariable(name: "len", scope: !5383, file: !3, line: 736, type: !323)
!5400 = !DILocation(line: 736, column: 9, scope: !5383)
!5401 = !DILocalVariable(name: "a", scope: !5383, file: !3, line: 737, type: !7)
!5402 = !DILocation(line: 737, column: 15, scope: !5383)
!5403 = !DILocalVariable(name: "lenp", scope: !5383, file: !3, line: 737, type: !7)
!5404 = !DILocation(line: 737, column: 18, scope: !5383)
!5405 = !DILocalVariable(name: "lencnt", scope: !5383, file: !3, line: 737, type: !7)
!5406 = !DILocation(line: 737, column: 24, scope: !5383)
!5407 = !DILocalVariable(name: "ret", scope: !5383, file: !3, line: 738, type: !141)
!5408 = !DILocation(line: 738, column: 6, scope: !5383)
!5409 = !DILocalVariable(name: "hdr", scope: !5383, file: !3, line: 746, type: !5410)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5412)
!5412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5383, file: !3, line: 739, size: 224, elements: !5413)
!5413 = !{!5414, !5415, !5417, !5418, !5419, !5421}
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5412, file: !3, line: 740, baseType: !4241, size: 32)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5412, file: !3, line: 741, baseType: !5416, size: 16, offset: 32)
!5416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1362, size: 16, elements: !1612)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5412, file: !3, line: 742, baseType: !1362, size: 8, offset: 48)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5412, file: !3, line: 743, baseType: !1362, size: 8, offset: 56)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5412, file: !3, line: 744, baseType: !5420, size: 64, offset: 64)
!5420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1362, size: 64, elements: !1340)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5412, file: !3, line: 745, baseType: !5422, size: 80, offset: 128)
!5422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4242, size: 80, elements: !4008)
!5423 = !DILocation(line: 746, column: 11, scope: !5383)
!5424 = !DILocation(line: 746, column: 17, scope: !5383)
!5425 = !DILocation(line: 748, column: 2, scope: !5383)
!5426 = !DILocation(line: 748, column: 2, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 748, column: 2)
!5428 = !DILocation(line: 750, column: 6, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 750, column: 6)
!5430 = !DILocation(line: 750, column: 10, scope: !5429)
!5431 = !DILocation(line: 750, column: 15, scope: !5429)
!5432 = !DILocation(line: 750, column: 6, scope: !5383)
!5433 = !DILocation(line: 751, column: 10, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 750, column: 33)
!5435 = !DILocation(line: 751, column: 3, scope: !5434)
!5436 = !DILocation(line: 752, column: 3, scope: !5434)
!5437 = !DILocation(line: 754, column: 6, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 754, column: 6)
!5439 = !DILocation(line: 754, column: 11, scope: !5438)
!5440 = !DILocation(line: 754, column: 17, scope: !5438)
!5441 = !DILocation(line: 754, column: 6, scope: !5383)
!5442 = !DILocation(line: 755, column: 11, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 754, column: 45)
!5444 = !DILocation(line: 755, column: 35, scope: !5443)
!5445 = !DILocation(line: 755, column: 3, scope: !5443)
!5446 = !DILocation(line: 756, column: 3, scope: !5443)
!5447 = !DILocation(line: 758, column: 6, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 758, column: 6)
!5449 = !DILocation(line: 758, column: 11, scope: !5448)
!5450 = !DILocation(line: 758, column: 16, scope: !5448)
!5451 = !DILocation(line: 758, column: 6, scope: !5383)
!5452 = !DILocation(line: 759, column: 11, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 758, column: 22)
!5454 = !DILocation(line: 759, column: 45, scope: !5453)
!5455 = !DILocation(line: 759, column: 50, scope: !5453)
!5456 = !DILocation(line: 759, column: 3, scope: !5453)
!5457 = !DILocation(line: 760, column: 3, scope: !5453)
!5458 = !DILocation(line: 762, column: 26, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 762, column: 6)
!5460 = !DILocation(line: 762, column: 31, scope: !5459)
!5461 = !DILocation(line: 762, column: 36, scope: !5459)
!5462 = !DILocation(line: 762, column: 6, scope: !5459)
!5463 = !DILocation(line: 762, column: 6, scope: !5383)
!5464 = !DILocation(line: 763, column: 11, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 762, column: 44)
!5466 = !DILocation(line: 763, column: 50, scope: !5465)
!5467 = !DILocation(line: 763, column: 55, scope: !5465)
!5468 = !DILocation(line: 763, column: 3, scope: !5465)
!5469 = !DILocation(line: 764, column: 3, scope: !5465)
!5470 = !DILocation(line: 767, column: 6, scope: !5383)
!5471 = !DILocation(line: 768, column: 11, scope: !5383)
!5472 = !DILocation(line: 768, column: 16, scope: !5383)
!5473 = !DILocation(line: 768, column: 22, scope: !5383)
!5474 = !DILocation(line: 768, column: 9, scope: !5383)
!5475 = !DILocation(line: 769, column: 9, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 769, column: 2)
!5477 = !DILocation(line: 769, column: 7, scope: !5476)
!5478 = !DILocation(line: 769, column: 14, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 769, column: 2)
!5480 = !DILocation(line: 769, column: 16, scope: !5479)
!5481 = !DILocation(line: 769, column: 2, scope: !5476)
!5482 = !DILocation(line: 770, column: 13, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 769, column: 41)
!5484 = !DILocation(line: 770, column: 8, scope: !5483)
!5485 = !DILocation(line: 770, column: 3, scope: !5483)
!5486 = !DILocation(line: 770, column: 11, scope: !5483)
!5487 = !DILocation(line: 771, column: 12, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 771, column: 7)
!5489 = !DILocation(line: 771, column: 7, scope: !5488)
!5490 = !DILocation(line: 771, column: 15, scope: !5488)
!5491 = !DILocation(line: 771, column: 18, scope: !5488)
!5492 = !DILocation(line: 771, column: 29, scope: !5488)
!5493 = !DILocation(line: 771, column: 24, scope: !5488)
!5494 = !DILocation(line: 771, column: 22, scope: !5488)
!5495 = !DILocation(line: 771, column: 35, scope: !5488)
!5496 = !DILocation(line: 771, column: 39, scope: !5488)
!5497 = !DILocation(line: 771, column: 32, scope: !5488)
!5498 = !DILocation(line: 771, column: 44, scope: !5488)
!5499 = !DILocation(line: 772, column: 20, scope: !5488)
!5500 = !DILocation(line: 772, column: 24, scope: !5488)
!5501 = !DILocation(line: 772, column: 29, scope: !5488)
!5502 = !DILocation(line: 772, column: 5, scope: !5488)
!5503 = !DILocation(line: 771, column: 7, scope: !5483)
!5504 = !DILocation(line: 774, column: 42, scope: !5488)
!5505 = !DILocation(line: 774, column: 37, scope: !5488)
!5506 = !DILocation(line: 773, column: 4, scope: !5488)
!5507 = !DILocation(line: 775, column: 13, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 775, column: 7)
!5509 = !DILocation(line: 775, column: 8, scope: !5508)
!5510 = !DILocation(line: 775, column: 16, scope: !5508)
!5511 = !DILocation(line: 775, column: 19, scope: !5508)
!5512 = !DILocation(line: 775, column: 23, scope: !5508)
!5513 = !DILocation(line: 775, column: 21, scope: !5508)
!5514 = !DILocation(line: 775, column: 7, scope: !5483)
!5515 = !DILocation(line: 776, column: 12, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 775, column: 31)
!5517 = !DILocation(line: 776, column: 4, scope: !5516)
!5518 = !DILocation(line: 777, column: 4, scope: !5516)
!5519 = !DILocation(line: 779, column: 15, scope: !5483)
!5520 = !DILocation(line: 779, column: 10, scope: !5483)
!5521 = !DILocation(line: 779, column: 7, scope: !5483)
!5522 = !DILocation(line: 780, column: 2, scope: !5483)
!5523 = !DILocation(line: 769, column: 37, scope: !5479)
!5524 = !DILocation(line: 769, column: 2, scope: !5479)
!5525 = distinct !{!5525, !5481, !5526}
!5526 = !DILocation(line: 780, column: 2, scope: !5476)
!5527 = !DILocation(line: 782, column: 6, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 782, column: 6)
!5529 = !DILocation(line: 782, column: 13, scope: !5528)
!5530 = !DILocation(line: 782, column: 17, scope: !5528)
!5531 = !DILocation(line: 782, column: 10, scope: !5528)
!5532 = !DILocation(line: 782, column: 6, scope: !5383)
!5533 = !DILocation(line: 783, column: 11, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 782, column: 23)
!5535 = !DILocation(line: 783, column: 54, scope: !5534)
!5536 = !DILocation(line: 783, column: 58, scope: !5534)
!5537 = !DILocation(line: 783, column: 49, scope: !5534)
!5538 = !DILocation(line: 784, column: 10, scope: !5534)
!5539 = !DILocation(line: 784, column: 5, scope: !5534)
!5540 = !DILocation(line: 783, column: 3, scope: !5534)
!5541 = !DILocation(line: 785, column: 3, scope: !5534)
!5542 = !DILocation(line: 788, column: 6, scope: !5383)
!5543 = !DILocation(line: 789, column: 7, scope: !5383)
!5544 = !DILocation(line: 791, column: 9, scope: !5383)
!5545 = !DILocation(line: 791, column: 2, scope: !5383)
!5546 = !DILocation(line: 793, column: 23, scope: !5383)
!5547 = !DILocation(line: 793, column: 28, scope: !5383)
!5548 = !DILocation(line: 793, column: 38, scope: !5383)
!5549 = !DILocation(line: 793, column: 33, scope: !5383)
!5550 = !DILocation(line: 793, column: 8, scope: !5383)
!5551 = !DILocation(line: 793, column: 6, scope: !5383)
!5552 = !DILocation(line: 794, column: 6, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 794, column: 6)
!5554 = !DILocation(line: 794, column: 6, scope: !5383)
!5555 = !DILocation(line: 795, column: 3, scope: !5553)
!5556 = !DILocation(line: 798, column: 14, scope: !5383)
!5557 = !DILocation(line: 798, column: 9, scope: !5383)
!5558 = !DILocation(line: 798, column: 27, scope: !5383)
!5559 = !DILocation(line: 798, column: 32, scope: !5383)
!5560 = !DILocation(line: 798, column: 22, scope: !5383)
!5561 = !DILocation(line: 798, column: 20, scope: !5383)
!5562 = !DILocation(line: 798, column: 6, scope: !5383)
!5563 = !DILocation(line: 799, column: 7, scope: !5383)
!5564 = !DILocation(line: 801, column: 6, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 801, column: 6)
!5566 = !DILocation(line: 801, column: 11, scope: !5565)
!5567 = !DILocation(line: 801, column: 17, scope: !5565)
!5568 = !DILocation(line: 801, column: 6, scope: !5383)
!5569 = !DILocation(line: 802, column: 24, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 801, column: 23)
!5571 = !DILocation(line: 802, column: 29, scope: !5570)
!5572 = !DILocation(line: 802, column: 39, scope: !5570)
!5573 = !DILocation(line: 802, column: 34, scope: !5570)
!5574 = !DILocation(line: 802, column: 9, scope: !5570)
!5575 = !DILocation(line: 802, column: 7, scope: !5570)
!5576 = !DILocation(line: 803, column: 7, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 803, column: 7)
!5578 = !DILocation(line: 803, column: 7, scope: !5570)
!5579 = !DILocation(line: 804, column: 4, scope: !5577)
!5580 = !DILocation(line: 806, column: 15, scope: !5570)
!5581 = !DILocation(line: 806, column: 10, scope: !5570)
!5582 = !DILocation(line: 806, column: 28, scope: !5570)
!5583 = !DILocation(line: 806, column: 33, scope: !5570)
!5584 = !DILocation(line: 806, column: 23, scope: !5570)
!5585 = !DILocation(line: 806, column: 21, scope: !5570)
!5586 = !DILocation(line: 806, column: 7, scope: !5570)
!5587 = !DILocation(line: 807, column: 8, scope: !5570)
!5588 = !DILocation(line: 808, column: 2, scope: !5570)
!5589 = !DILocation(line: 810, column: 23, scope: !5383)
!5590 = !DILocation(line: 810, column: 28, scope: !5383)
!5591 = !DILocation(line: 810, column: 38, scope: !5383)
!5592 = !DILocation(line: 810, column: 33, scope: !5383)
!5593 = !DILocation(line: 810, column: 8, scope: !5383)
!5594 = !DILocation(line: 810, column: 6, scope: !5383)
!5595 = !DILocation(line: 811, column: 6, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 811, column: 6)
!5597 = !DILocation(line: 811, column: 6, scope: !5383)
!5598 = !DILocation(line: 812, column: 3, scope: !5596)
!5599 = !DILocation(line: 814, column: 2, scope: !5383)
!5600 = !DILabel(scope: !5383, name: "err", file: !3, line: 815)
!5601 = !DILocation(line: 815, column: 1, scope: !5383)
!5602 = !DILocation(line: 816, column: 59, scope: !5383)
!5603 = !DILocation(line: 816, column: 2, scope: !5383)
!5604 = !DILocation(line: 817, column: 9, scope: !5383)
!5605 = !DILocation(line: 817, column: 2, scope: !5383)
!5606 = !DILocation(line: 818, column: 1, scope: !5383)
!5607 = distinct !DISubprogram(name: "spin_lock_bh", scope: !5608, file: !5608, line: 357, type: !5609, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5608 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5609 = !DISubroutineType(types: !5610)
!5610 = !{null, !1085}
!5611 = !DILocalVariable(name: "val", arg: 1, scope: !5612, file: !5613, line: 77, type: !141)
!5612 = distinct !DISubprogram(name: "__preempt_count_add", scope: !5613, file: !5613, line: 77, type: !1934, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5613 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!5614 = !DILocation(line: 77, column: 53, scope: !5612, inlinedAt: !5615)
!5615 = distinct !DILocation(line: 12, column: 2, scope: !5616, inlinedAt: !5620)
!5616 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !5617, file: !5617, line: 10, type: !5618, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5617 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!5618 = !DISubroutineType(types: !5619)
!5619 = !{null, !148, !7}
!5620 = distinct !DILocation(line: 359, column: 2, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5607, file: !5608, line: 359, column: 2)
!5622 = !DILocalVariable(name: "pao_ID__", scope: !5623, file: !5613, line: 79, type: !5624)
!5623 = distinct !DILexicalBlock(scope: !5612, file: !5613, line: 79, column: 2)
!5624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!5625 = !DILocation(line: 79, column: 2, scope: !5623, inlinedAt: !5615)
!5626 = !DILocalVariable(name: "pto_val__", scope: !5627, file: !5613, line: 79, type: !411)
!5627 = distinct !DILexicalBlock(scope: !5628, file: !5613, line: 79, column: 2)
!5628 = distinct !DILexicalBlock(scope: !5629, file: !5613, line: 79, column: 2)
!5629 = distinct !DILexicalBlock(scope: !5623, file: !5613, line: 79, column: 2)
!5630 = !DILocation(line: 79, column: 2, scope: !5627, inlinedAt: !5615)
!5631 = !DILocalVariable(name: "ip", arg: 1, scope: !5616, file: !5617, line: 10, type: !148)
!5632 = !DILocation(line: 10, column: 65, scope: !5616, inlinedAt: !5620)
!5633 = !DILocalVariable(name: "cnt", arg: 2, scope: !5616, file: !5617, line: 10, type: !7)
!5634 = !DILocation(line: 10, column: 82, scope: !5616, inlinedAt: !5620)
!5635 = !DILocalVariable(name: "lock", arg: 1, scope: !5607, file: !5608, line: 357, type: !1085)
!5636 = !DILocation(line: 357, column: 54, scope: !5607)
!5637 = !DILocation(line: 359, column: 2, scope: !5607)
!5638 = !DILocation(line: 359, column: 2, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5621, file: !5608, line: 359, column: 2)
!5640 = !DILabel(scope: !5639, name: "__here", file: !5608, line: 359)
!5641 = !DILocation(line: 12, column: 2, scope: !5616, inlinedAt: !5620)
!5642 = !{i32 -2145498997}
!5643 = !DILocation(line: 13, column: 2, scope: !5616, inlinedAt: !5620)
!5644 = !{i32 -2145489395}
!5645 = !DILocation(line: 359, column: 2, scope: !5621)
!5646 = !DILocation(line: 359, column: 2, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5621, file: !5608, line: 359, column: 2)
!5648 = !DILocation(line: 360, column: 1, scope: !5607)
!5649 = distinct !DISubprogram(name: "timer_pending", scope: !3598, file: !3598, line: 166, type: !5650, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5650 = !DISubroutineType(types: !5651)
!5651 = !{!141, !5652}
!5652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5653, size: 64)
!5653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3597)
!5654 = !DILocalVariable(name: "timer", arg: 1, scope: !5649, file: !3598, line: 166, type: !5652)
!5655 = !DILocation(line: 166, column: 59, scope: !5649)
!5656 = !DILocation(line: 168, column: 35, scope: !5649)
!5657 = !DILocation(line: 168, column: 42, scope: !5649)
!5658 = !DILocation(line: 168, column: 10, scope: !5649)
!5659 = !DILocation(line: 168, column: 9, scope: !5649)
!5660 = !DILocation(line: 168, column: 2, scope: !5649)
!5661 = distinct !DISubprogram(name: "spin_unlock_bh", scope: !5608, file: !5608, line: 397, type: !5609, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5662 = !DILocalVariable(name: "lock", arg: 1, scope: !5661, file: !5608, line: 397, type: !1085)
!5663 = !DILocation(line: 397, column: 56, scope: !5661)
!5664 = !DILocation(line: 399, column: 2, scope: !5661)
!5665 = !DILocation(line: 399, column: 2, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5667, file: !5608, line: 399, column: 2)
!5667 = distinct !DILexicalBlock(scope: !5661, file: !5608, line: 399, column: 2)
!5668 = !DILabel(scope: !5666, name: "__here", file: !5608, line: 399)
!5669 = !DILocation(line: 399, column: 2, scope: !5667)
!5670 = !DILocation(line: 399, column: 2, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5667, file: !5608, line: 399, column: 2)
!5672 = !DILocation(line: 400, column: 1, scope: !5661)
!5673 = distinct !DISubprogram(name: "kmalloc_array", scope: !94, file: !94, line: 584, type: !5369, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5674 = !DILocalVariable(name: "s", arg: 1, scope: !5675, file: !94, line: 445, type: !955)
!5675 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !94, file: !94, line: 445, type: !5676, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5676 = !DISubroutineType(types: !5677)
!5677 = !{!113, !955, !114, !323}
!5678 = !DILocation(line: 445, column: 72, scope: !5675, inlinedAt: !5679)
!5679 = distinct !DILocation(line: 552, column: 10, scope: !5680, inlinedAt: !5685)
!5680 = distinct !DILexicalBlock(scope: !5681, file: !94, line: 540, column: 34)
!5681 = distinct !DILexicalBlock(scope: !5682, file: !94, line: 540, column: 6)
!5682 = distinct !DISubprogram(name: "kmalloc", scope: !94, file: !94, line: 538, type: !5683, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{!113, !323, !114}
!5685 = distinct !DILocation(line: 591, column: 10, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5673, file: !94, line: 590, column: 6)
!5687 = !DILocalVariable(name: "flags", arg: 2, scope: !5675, file: !94, line: 446, type: !114)
!5688 = !DILocation(line: 446, column: 9, scope: !5675, inlinedAt: !5679)
!5689 = !DILocalVariable(name: "size", arg: 3, scope: !5675, file: !94, line: 446, type: !323)
!5690 = !DILocation(line: 446, column: 23, scope: !5675, inlinedAt: !5679)
!5691 = !DILocalVariable(name: "ret", scope: !5675, file: !94, line: 448, type: !113)
!5692 = !DILocation(line: 448, column: 8, scope: !5675, inlinedAt: !5679)
!5693 = !DILocalVariable(name: "flags", arg: 1, scope: !5694, file: !94, line: 318, type: !114)
!5694 = distinct !DISubprogram(name: "kmalloc_type", scope: !94, file: !94, line: 318, type: !5695, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5695 = !DISubroutineType(types: !5696)
!5696 = !{!93, !114}
!5697 = !DILocation(line: 318, column: 67, scope: !5694, inlinedAt: !5698)
!5698 = distinct !DILocation(line: 553, column: 20, scope: !5680, inlinedAt: !5685)
!5699 = !DILocalVariable(name: "size", arg: 1, scope: !5700, file: !94, line: 346, type: !323)
!5700 = distinct !DISubprogram(name: "kmalloc_index", scope: !94, file: !94, line: 346, type: !5701, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5701 = !DISubroutineType(types: !5702)
!5702 = !{!7, !323}
!5703 = !DILocation(line: 346, column: 58, scope: !5700, inlinedAt: !5704)
!5704 = distinct !DILocation(line: 547, column: 11, scope: !5680, inlinedAt: !5685)
!5705 = !DILocalVariable(name: "size", arg: 1, scope: !5706, file: !94, line: 472, type: !323)
!5706 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !94, file: !94, line: 472, type: !5707, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5707 = !DISubroutineType(types: !5708)
!5708 = !{!113, !323, !114, !7}
!5709 = !DILocation(line: 472, column: 28, scope: !5706, inlinedAt: !5710)
!5710 = distinct !DILocation(line: 481, column: 9, scope: !5711, inlinedAt: !5712)
!5711 = distinct !DISubprogram(name: "kmalloc_large", scope: !94, file: !94, line: 478, type: !5683, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5712 = distinct !DILocation(line: 545, column: 11, scope: !5713, inlinedAt: !5685)
!5713 = distinct !DILexicalBlock(scope: !5680, file: !94, line: 544, column: 7)
!5714 = !DILocalVariable(name: "flags", arg: 2, scope: !5706, file: !94, line: 472, type: !114)
!5715 = !DILocation(line: 472, column: 40, scope: !5706, inlinedAt: !5710)
!5716 = !DILocalVariable(name: "order", arg: 3, scope: !5706, file: !94, line: 472, type: !7)
!5717 = !DILocation(line: 472, column: 60, scope: !5706, inlinedAt: !5710)
!5718 = !DILocalVariable(name: "size", arg: 1, scope: !5711, file: !94, line: 478, type: !323)
!5719 = !DILocation(line: 478, column: 51, scope: !5711, inlinedAt: !5712)
!5720 = !DILocalVariable(name: "flags", arg: 2, scope: !5711, file: !94, line: 478, type: !114)
!5721 = !DILocation(line: 478, column: 63, scope: !5711, inlinedAt: !5712)
!5722 = !DILocalVariable(name: "order", scope: !5711, file: !94, line: 480, type: !7)
!5723 = !DILocation(line: 480, column: 15, scope: !5711, inlinedAt: !5712)
!5724 = !DILocalVariable(name: "size", arg: 1, scope: !5682, file: !94, line: 538, type: !323)
!5725 = !DILocation(line: 538, column: 45, scope: !5682, inlinedAt: !5685)
!5726 = !DILocalVariable(name: "flags", arg: 2, scope: !5682, file: !94, line: 538, type: !114)
!5727 = !DILocation(line: 538, column: 57, scope: !5682, inlinedAt: !5685)
!5728 = !DILocalVariable(name: "index", scope: !5680, file: !94, line: 542, type: !7)
!5729 = !DILocation(line: 542, column: 16, scope: !5680, inlinedAt: !5685)
!5730 = !DILocalVariable(name: "n", arg: 1, scope: !5673, file: !94, line: 584, type: !323)
!5731 = !DILocation(line: 584, column: 42, scope: !5673)
!5732 = !DILocalVariable(name: "size", arg: 2, scope: !5673, file: !94, line: 584, type: !323)
!5733 = !DILocation(line: 584, column: 52, scope: !5673)
!5734 = !DILocalVariable(name: "flags", arg: 3, scope: !5673, file: !94, line: 584, type: !114)
!5735 = !DILocation(line: 584, column: 64, scope: !5673)
!5736 = !DILocalVariable(name: "bytes", scope: !5673, file: !94, line: 586, type: !323)
!5737 = !DILocation(line: 586, column: 9, scope: !5673)
!5738 = !DILocalVariable(name: "__a", scope: !5739, file: !94, line: 588, type: !323)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !94, line: 588, column: 6)
!5740 = distinct !DILexicalBlock(scope: !5673, file: !94, line: 588, column: 6)
!5741 = !DILocation(line: 588, column: 6, scope: !5739)
!5742 = !DILocalVariable(name: "__b", scope: !5739, file: !94, line: 588, type: !323)
!5743 = !DILocalVariable(name: "__d", scope: !5739, file: !94, line: 588, type: !5744)
!5744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!5745 = !DILocation(line: 588, column: 6, scope: !5740)
!5746 = !DILocation(line: 588, column: 6, scope: !5673)
!5747 = !DILocation(line: 589, column: 3, scope: !5740)
!5748 = !DILocation(line: 590, column: 27, scope: !5686)
!5749 = !DILocation(line: 590, column: 6, scope: !5686)
!5750 = !DILocation(line: 590, column: 30, scope: !5686)
!5751 = !DILocation(line: 590, column: 54, scope: !5686)
!5752 = !DILocation(line: 590, column: 33, scope: !5686)
!5753 = !DILocation(line: 590, column: 6, scope: !5673)
!5754 = !DILocation(line: 591, column: 18, scope: !5686)
!5755 = !DILocation(line: 591, column: 25, scope: !5686)
!5756 = !DILocation(line: 540, column: 27, scope: !5681, inlinedAt: !5685)
!5757 = !DILocation(line: 540, column: 6, scope: !5681, inlinedAt: !5685)
!5758 = !DILocation(line: 540, column: 6, scope: !5682, inlinedAt: !5685)
!5759 = !DILocation(line: 544, column: 7, scope: !5713, inlinedAt: !5685)
!5760 = !DILocation(line: 544, column: 12, scope: !5713, inlinedAt: !5685)
!5761 = !DILocation(line: 544, column: 7, scope: !5680, inlinedAt: !5685)
!5762 = !DILocation(line: 545, column: 25, scope: !5713, inlinedAt: !5685)
!5763 = !DILocation(line: 545, column: 31, scope: !5713, inlinedAt: !5685)
!5764 = !DILocation(line: 480, column: 33, scope: !5711, inlinedAt: !5712)
!5765 = !DILocation(line: 480, column: 23, scope: !5711, inlinedAt: !5712)
!5766 = !DILocation(line: 481, column: 29, scope: !5711, inlinedAt: !5712)
!5767 = !DILocation(line: 481, column: 35, scope: !5711, inlinedAt: !5712)
!5768 = !DILocation(line: 481, column: 42, scope: !5711, inlinedAt: !5712)
!5769 = !DILocation(line: 474, column: 23, scope: !5706, inlinedAt: !5710)
!5770 = !DILocation(line: 474, column: 29, scope: !5706, inlinedAt: !5710)
!5771 = !DILocation(line: 474, column: 36, scope: !5706, inlinedAt: !5710)
!5772 = !DILocation(line: 474, column: 9, scope: !5706, inlinedAt: !5710)
!5773 = !DILocation(line: 545, column: 4, scope: !5713, inlinedAt: !5685)
!5774 = !DILocation(line: 547, column: 25, scope: !5680, inlinedAt: !5685)
!5775 = !DILocation(line: 348, column: 7, scope: !5776, inlinedAt: !5704)
!5776 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 348, column: 6)
!5777 = !DILocation(line: 348, column: 6, scope: !5700, inlinedAt: !5704)
!5778 = !DILocation(line: 349, column: 3, scope: !5776, inlinedAt: !5704)
!5779 = !DILocation(line: 351, column: 6, scope: !5780, inlinedAt: !5704)
!5780 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 351, column: 6)
!5781 = !DILocation(line: 351, column: 11, scope: !5780, inlinedAt: !5704)
!5782 = !DILocation(line: 351, column: 6, scope: !5700, inlinedAt: !5704)
!5783 = !DILocation(line: 352, column: 3, scope: !5780, inlinedAt: !5704)
!5784 = !DILocation(line: 354, column: 32, scope: !5785, inlinedAt: !5704)
!5785 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 354, column: 6)
!5786 = !DILocation(line: 354, column: 37, scope: !5785, inlinedAt: !5704)
!5787 = !DILocation(line: 354, column: 42, scope: !5785, inlinedAt: !5704)
!5788 = !DILocation(line: 354, column: 45, scope: !5785, inlinedAt: !5704)
!5789 = !DILocation(line: 354, column: 50, scope: !5785, inlinedAt: !5704)
!5790 = !DILocation(line: 354, column: 6, scope: !5700, inlinedAt: !5704)
!5791 = !DILocation(line: 355, column: 3, scope: !5785, inlinedAt: !5704)
!5792 = !DILocation(line: 356, column: 32, scope: !5793, inlinedAt: !5704)
!5793 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 356, column: 6)
!5794 = !DILocation(line: 356, column: 37, scope: !5793, inlinedAt: !5704)
!5795 = !DILocation(line: 356, column: 43, scope: !5793, inlinedAt: !5704)
!5796 = !DILocation(line: 356, column: 46, scope: !5793, inlinedAt: !5704)
!5797 = !DILocation(line: 356, column: 51, scope: !5793, inlinedAt: !5704)
!5798 = !DILocation(line: 356, column: 6, scope: !5700, inlinedAt: !5704)
!5799 = !DILocation(line: 357, column: 3, scope: !5793, inlinedAt: !5704)
!5800 = !DILocation(line: 358, column: 6, scope: !5801, inlinedAt: !5704)
!5801 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 358, column: 6)
!5802 = !DILocation(line: 358, column: 11, scope: !5801, inlinedAt: !5704)
!5803 = !DILocation(line: 358, column: 6, scope: !5700, inlinedAt: !5704)
!5804 = !DILocation(line: 358, column: 26, scope: !5801, inlinedAt: !5704)
!5805 = !DILocation(line: 359, column: 6, scope: !5806, inlinedAt: !5704)
!5806 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 359, column: 6)
!5807 = !DILocation(line: 359, column: 11, scope: !5806, inlinedAt: !5704)
!5808 = !DILocation(line: 359, column: 6, scope: !5700, inlinedAt: !5704)
!5809 = !DILocation(line: 359, column: 26, scope: !5806, inlinedAt: !5704)
!5810 = !DILocation(line: 360, column: 6, scope: !5811, inlinedAt: !5704)
!5811 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 360, column: 6)
!5812 = !DILocation(line: 360, column: 11, scope: !5811, inlinedAt: !5704)
!5813 = !DILocation(line: 360, column: 6, scope: !5700, inlinedAt: !5704)
!5814 = !DILocation(line: 360, column: 26, scope: !5811, inlinedAt: !5704)
!5815 = !DILocation(line: 361, column: 6, scope: !5816, inlinedAt: !5704)
!5816 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 361, column: 6)
!5817 = !DILocation(line: 361, column: 11, scope: !5816, inlinedAt: !5704)
!5818 = !DILocation(line: 361, column: 6, scope: !5700, inlinedAt: !5704)
!5819 = !DILocation(line: 361, column: 26, scope: !5816, inlinedAt: !5704)
!5820 = !DILocation(line: 362, column: 6, scope: !5821, inlinedAt: !5704)
!5821 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 362, column: 6)
!5822 = !DILocation(line: 362, column: 11, scope: !5821, inlinedAt: !5704)
!5823 = !DILocation(line: 362, column: 6, scope: !5700, inlinedAt: !5704)
!5824 = !DILocation(line: 362, column: 26, scope: !5821, inlinedAt: !5704)
!5825 = !DILocation(line: 363, column: 6, scope: !5826, inlinedAt: !5704)
!5826 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 363, column: 6)
!5827 = !DILocation(line: 363, column: 11, scope: !5826, inlinedAt: !5704)
!5828 = !DILocation(line: 363, column: 6, scope: !5700, inlinedAt: !5704)
!5829 = !DILocation(line: 363, column: 26, scope: !5826, inlinedAt: !5704)
!5830 = !DILocation(line: 364, column: 6, scope: !5831, inlinedAt: !5704)
!5831 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 364, column: 6)
!5832 = !DILocation(line: 364, column: 11, scope: !5831, inlinedAt: !5704)
!5833 = !DILocation(line: 364, column: 6, scope: !5700, inlinedAt: !5704)
!5834 = !DILocation(line: 364, column: 26, scope: !5831, inlinedAt: !5704)
!5835 = !DILocation(line: 365, column: 6, scope: !5836, inlinedAt: !5704)
!5836 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 365, column: 6)
!5837 = !DILocation(line: 365, column: 11, scope: !5836, inlinedAt: !5704)
!5838 = !DILocation(line: 365, column: 6, scope: !5700, inlinedAt: !5704)
!5839 = !DILocation(line: 365, column: 26, scope: !5836, inlinedAt: !5704)
!5840 = !DILocation(line: 366, column: 6, scope: !5841, inlinedAt: !5704)
!5841 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 366, column: 6)
!5842 = !DILocation(line: 366, column: 11, scope: !5841, inlinedAt: !5704)
!5843 = !DILocation(line: 366, column: 6, scope: !5700, inlinedAt: !5704)
!5844 = !DILocation(line: 366, column: 26, scope: !5841, inlinedAt: !5704)
!5845 = !DILocation(line: 367, column: 6, scope: !5846, inlinedAt: !5704)
!5846 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 367, column: 6)
!5847 = !DILocation(line: 367, column: 11, scope: !5846, inlinedAt: !5704)
!5848 = !DILocation(line: 367, column: 6, scope: !5700, inlinedAt: !5704)
!5849 = !DILocation(line: 367, column: 26, scope: !5846, inlinedAt: !5704)
!5850 = !DILocation(line: 368, column: 6, scope: !5851, inlinedAt: !5704)
!5851 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 368, column: 6)
!5852 = !DILocation(line: 368, column: 11, scope: !5851, inlinedAt: !5704)
!5853 = !DILocation(line: 368, column: 6, scope: !5700, inlinedAt: !5704)
!5854 = !DILocation(line: 368, column: 26, scope: !5851, inlinedAt: !5704)
!5855 = !DILocation(line: 369, column: 6, scope: !5856, inlinedAt: !5704)
!5856 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 369, column: 6)
!5857 = !DILocation(line: 369, column: 11, scope: !5856, inlinedAt: !5704)
!5858 = !DILocation(line: 369, column: 6, scope: !5700, inlinedAt: !5704)
!5859 = !DILocation(line: 369, column: 26, scope: !5856, inlinedAt: !5704)
!5860 = !DILocation(line: 370, column: 6, scope: !5861, inlinedAt: !5704)
!5861 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 370, column: 6)
!5862 = !DILocation(line: 370, column: 11, scope: !5861, inlinedAt: !5704)
!5863 = !DILocation(line: 370, column: 6, scope: !5700, inlinedAt: !5704)
!5864 = !DILocation(line: 370, column: 26, scope: !5861, inlinedAt: !5704)
!5865 = !DILocation(line: 371, column: 6, scope: !5866, inlinedAt: !5704)
!5866 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 371, column: 6)
!5867 = !DILocation(line: 371, column: 11, scope: !5866, inlinedAt: !5704)
!5868 = !DILocation(line: 371, column: 6, scope: !5700, inlinedAt: !5704)
!5869 = !DILocation(line: 371, column: 26, scope: !5866, inlinedAt: !5704)
!5870 = !DILocation(line: 372, column: 6, scope: !5871, inlinedAt: !5704)
!5871 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 372, column: 6)
!5872 = !DILocation(line: 372, column: 11, scope: !5871, inlinedAt: !5704)
!5873 = !DILocation(line: 372, column: 6, scope: !5700, inlinedAt: !5704)
!5874 = !DILocation(line: 372, column: 26, scope: !5871, inlinedAt: !5704)
!5875 = !DILocation(line: 373, column: 6, scope: !5876, inlinedAt: !5704)
!5876 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 373, column: 6)
!5877 = !DILocation(line: 373, column: 11, scope: !5876, inlinedAt: !5704)
!5878 = !DILocation(line: 373, column: 6, scope: !5700, inlinedAt: !5704)
!5879 = !DILocation(line: 373, column: 26, scope: !5876, inlinedAt: !5704)
!5880 = !DILocation(line: 374, column: 6, scope: !5881, inlinedAt: !5704)
!5881 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 374, column: 6)
!5882 = !DILocation(line: 374, column: 11, scope: !5881, inlinedAt: !5704)
!5883 = !DILocation(line: 374, column: 6, scope: !5700, inlinedAt: !5704)
!5884 = !DILocation(line: 374, column: 26, scope: !5881, inlinedAt: !5704)
!5885 = !DILocation(line: 375, column: 6, scope: !5886, inlinedAt: !5704)
!5886 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 375, column: 6)
!5887 = !DILocation(line: 375, column: 11, scope: !5886, inlinedAt: !5704)
!5888 = !DILocation(line: 375, column: 6, scope: !5700, inlinedAt: !5704)
!5889 = !DILocation(line: 375, column: 27, scope: !5886, inlinedAt: !5704)
!5890 = !DILocation(line: 376, column: 6, scope: !5891, inlinedAt: !5704)
!5891 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 376, column: 6)
!5892 = !DILocation(line: 376, column: 11, scope: !5891, inlinedAt: !5704)
!5893 = !DILocation(line: 376, column: 6, scope: !5700, inlinedAt: !5704)
!5894 = !DILocation(line: 376, column: 32, scope: !5891, inlinedAt: !5704)
!5895 = !DILocation(line: 377, column: 6, scope: !5896, inlinedAt: !5704)
!5896 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 377, column: 6)
!5897 = !DILocation(line: 377, column: 11, scope: !5896, inlinedAt: !5704)
!5898 = !DILocation(line: 377, column: 6, scope: !5700, inlinedAt: !5704)
!5899 = !DILocation(line: 377, column: 32, scope: !5896, inlinedAt: !5704)
!5900 = !DILocation(line: 378, column: 6, scope: !5901, inlinedAt: !5704)
!5901 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 378, column: 6)
!5902 = !DILocation(line: 378, column: 11, scope: !5901, inlinedAt: !5704)
!5903 = !DILocation(line: 378, column: 6, scope: !5700, inlinedAt: !5704)
!5904 = !DILocation(line: 378, column: 32, scope: !5901, inlinedAt: !5704)
!5905 = !DILocation(line: 379, column: 6, scope: !5906, inlinedAt: !5704)
!5906 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 379, column: 6)
!5907 = !DILocation(line: 379, column: 11, scope: !5906, inlinedAt: !5704)
!5908 = !DILocation(line: 379, column: 6, scope: !5700, inlinedAt: !5704)
!5909 = !DILocation(line: 379, column: 33, scope: !5906, inlinedAt: !5704)
!5910 = !DILocation(line: 380, column: 6, scope: !5911, inlinedAt: !5704)
!5911 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 380, column: 6)
!5912 = !DILocation(line: 380, column: 11, scope: !5911, inlinedAt: !5704)
!5913 = !DILocation(line: 380, column: 6, scope: !5700, inlinedAt: !5704)
!5914 = !DILocation(line: 380, column: 33, scope: !5911, inlinedAt: !5704)
!5915 = !DILocation(line: 381, column: 6, scope: !5916, inlinedAt: !5704)
!5916 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 381, column: 6)
!5917 = !DILocation(line: 381, column: 11, scope: !5916, inlinedAt: !5704)
!5918 = !DILocation(line: 381, column: 6, scope: !5700, inlinedAt: !5704)
!5919 = !DILocation(line: 381, column: 33, scope: !5916, inlinedAt: !5704)
!5920 = !DILocation(line: 382, column: 2, scope: !5921, inlinedAt: !5704)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !94, line: 382, column: 2)
!5922 = distinct !DILexicalBlock(scope: !5700, file: !94, line: 382, column: 2)
!5923 = !{i32 -2141815870, i32 -2141815841, i32 -2141815795, i32 -2141815737, i32 -2141815683, i32 -2141815629, i32 -2141815574, i32 -2141815543}
!5924 = !DILocation(line: 382, column: 2, scope: !5925, inlinedAt: !5704)
!5925 = distinct !DILexicalBlock(scope: !5926, file: !94, line: 382, column: 2)
!5926 = distinct !DILexicalBlock(scope: !5922, file: !94, line: 382, column: 2)
!5927 = !{i32 -2141815100, i32 -2141815093, i32 -2141815039, i32 -2141815008, i32 -2141814978}
!5928 = !DILocation(line: 382, column: 2, scope: !5926, inlinedAt: !5704)
!5929 = !DILocation(line: 386, column: 1, scope: !5700, inlinedAt: !5704)
!5930 = !DILocation(line: 547, column: 9, scope: !5680, inlinedAt: !5685)
!5931 = !DILocation(line: 549, column: 8, scope: !5932, inlinedAt: !5685)
!5932 = distinct !DILexicalBlock(scope: !5680, file: !94, line: 549, column: 7)
!5933 = !DILocation(line: 549, column: 7, scope: !5680, inlinedAt: !5685)
!5934 = !DILocation(line: 550, column: 4, scope: !5932, inlinedAt: !5685)
!5935 = !DILocation(line: 553, column: 33, scope: !5680, inlinedAt: !5685)
!5936 = !DILocation(line: 325, column: 6, scope: !5937, inlinedAt: !5698)
!5937 = distinct !DILexicalBlock(scope: !5694, file: !94, line: 325, column: 6)
!5938 = !DILocation(line: 325, column: 6, scope: !5694, inlinedAt: !5698)
!5939 = !DILocation(line: 326, column: 3, scope: !5937, inlinedAt: !5698)
!5940 = !DILocation(line: 332, column: 9, scope: !5694, inlinedAt: !5698)
!5941 = !DILocation(line: 332, column: 15, scope: !5694, inlinedAt: !5698)
!5942 = !DILocation(line: 332, column: 2, scope: !5694, inlinedAt: !5698)
!5943 = !DILocation(line: 336, column: 1, scope: !5694, inlinedAt: !5698)
!5944 = !DILocation(line: 553, column: 5, scope: !5680, inlinedAt: !5685)
!5945 = !DILocation(line: 553, column: 41, scope: !5680, inlinedAt: !5685)
!5946 = !DILocation(line: 554, column: 5, scope: !5680, inlinedAt: !5685)
!5947 = !DILocation(line: 554, column: 12, scope: !5680, inlinedAt: !5685)
!5948 = !DILocation(line: 448, column: 31, scope: !5675, inlinedAt: !5679)
!5949 = !DILocation(line: 448, column: 34, scope: !5675, inlinedAt: !5679)
!5950 = !DILocation(line: 448, column: 14, scope: !5675, inlinedAt: !5679)
!5951 = !DILocation(line: 450, column: 22, scope: !5675, inlinedAt: !5679)
!5952 = !DILocation(line: 450, column: 25, scope: !5675, inlinedAt: !5679)
!5953 = !DILocation(line: 450, column: 30, scope: !5675, inlinedAt: !5679)
!5954 = !DILocation(line: 450, column: 36, scope: !5675, inlinedAt: !5679)
!5955 = !DILocation(line: 450, column: 8, scope: !5675, inlinedAt: !5679)
!5956 = !DILocation(line: 450, column: 6, scope: !5675, inlinedAt: !5679)
!5957 = !DILocation(line: 451, column: 9, scope: !5675, inlinedAt: !5679)
!5958 = !DILocation(line: 552, column: 3, scope: !5680, inlinedAt: !5685)
!5959 = !DILocation(line: 557, column: 19, scope: !5682, inlinedAt: !5685)
!5960 = !DILocation(line: 557, column: 25, scope: !5682, inlinedAt: !5685)
!5961 = !DILocation(line: 557, column: 9, scope: !5682, inlinedAt: !5685)
!5962 = !DILocation(line: 557, column: 2, scope: !5682, inlinedAt: !5685)
!5963 = !DILocation(line: 558, column: 1, scope: !5682, inlinedAt: !5685)
!5964 = !DILocation(line: 591, column: 3, scope: !5686)
!5965 = !DILocation(line: 592, column: 19, scope: !5673)
!5966 = !DILocation(line: 592, column: 26, scope: !5673)
!5967 = !DILocation(line: 592, column: 9, scope: !5673)
!5968 = !DILocation(line: 592, column: 2, scope: !5673)
!5969 = !DILocation(line: 593, column: 1, scope: !5673)
!5970 = distinct !DISubprogram(name: "__must_check_overflow", scope: !5971, file: !5971, line: 52, type: !5972, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5971 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!5972 = !DISubroutineType(types: !5973)
!5973 = !{!484, !484}
!5974 = !DILocalVariable(name: "overflow", arg: 1, scope: !5970, file: !5971, line: 52, type: !484)
!5975 = !DILocation(line: 52, column: 60, scope: !5970)
!5976 = !DILocation(line: 54, column: 9, scope: !5970)
!5977 = !DILocation(line: 54, column: 2, scope: !5970)
!5978 = distinct !DISubprogram(name: "get_order", scope: !5979, file: !5979, line: 29, type: !5980, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5979 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!5980 = !DISubroutineType(types: !5981)
!5981 = !{!141, !148}
!5982 = !DILocalVariable(name: "x", arg: 1, scope: !5983, file: !5984, line: 366, type: !416)
!5983 = distinct !DISubprogram(name: "fls64", scope: !5984, file: !5984, line: 366, type: !5985, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!5984 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5985 = !DISubroutineType(types: !5986)
!5986 = !{!141, !416}
!5987 = !DILocation(line: 366, column: 40, scope: !5983, inlinedAt: !5988)
!5988 = distinct !DILocation(line: 46, column: 9, scope: !5978)
!5989 = !DILocalVariable(name: "bitpos", scope: !5983, file: !5984, line: 368, type: !141)
!5990 = !DILocation(line: 368, column: 6, scope: !5983, inlinedAt: !5988)
!5991 = !DILocalVariable(name: "size", arg: 1, scope: !5978, file: !5979, line: 29, type: !148)
!5992 = !DILocation(line: 29, column: 63, scope: !5978)
!5993 = !DILocation(line: 31, column: 27, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5978, file: !5979, line: 31, column: 6)
!5995 = !DILocation(line: 31, column: 6, scope: !5994)
!5996 = !DILocation(line: 31, column: 6, scope: !5978)
!5997 = !DILocation(line: 32, column: 8, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !5979, line: 32, column: 7)
!5999 = distinct !DILexicalBlock(scope: !5994, file: !5979, line: 31, column: 34)
!6000 = !DILocation(line: 32, column: 7, scope: !5999)
!6001 = !DILocation(line: 33, column: 4, scope: !5998)
!6002 = !DILocation(line: 35, column: 7, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5999, file: !5979, line: 35, column: 7)
!6004 = !DILocation(line: 35, column: 12, scope: !6003)
!6005 = !DILocation(line: 35, column: 7, scope: !5999)
!6006 = !DILocation(line: 36, column: 4, scope: !6003)
!6007 = !DILocation(line: 38, column: 10, scope: !5999)
!6008 = !DILocation(line: 38, column: 28, scope: !5999)
!6009 = !DILocation(line: 38, column: 41, scope: !5999)
!6010 = !DILocation(line: 38, column: 3, scope: !5999)
!6011 = !DILocation(line: 41, column: 6, scope: !5978)
!6012 = !DILocation(line: 42, column: 7, scope: !5978)
!6013 = !DILocation(line: 46, column: 15, scope: !5978)
!6014 = !DILocation(line: 374, column: 2, scope: !5983, inlinedAt: !5988)
!6015 = !DILocation(line: 376, column: 14, scope: !5983, inlinedAt: !5988)
!6016 = !{i32 349890}
!6017 = !DILocation(line: 377, column: 9, scope: !5983, inlinedAt: !5988)
!6018 = !DILocation(line: 377, column: 16, scope: !5983, inlinedAt: !5988)
!6019 = !DILocation(line: 46, column: 2, scope: !5978)
!6020 = !DILocation(line: 48, column: 1, scope: !5978)
!6021 = distinct !DISubprogram(name: "__ilog2_u64", scope: !6022, file: !6022, line: 30, type: !6023, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6022 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!6023 = !DISubroutineType(types: !6024)
!6024 = !{!141, !415}
!6025 = !DILocation(line: 366, column: 40, scope: !5983, inlinedAt: !6026)
!6026 = distinct !DILocation(line: 32, column: 9, scope: !6021)
!6027 = !DILocation(line: 368, column: 6, scope: !5983, inlinedAt: !6026)
!6028 = !DILocalVariable(name: "n", arg: 1, scope: !6021, file: !6022, line: 30, type: !415)
!6029 = !DILocation(line: 30, column: 21, scope: !6021)
!6030 = !DILocation(line: 32, column: 15, scope: !6021)
!6031 = !DILocation(line: 374, column: 2, scope: !5983, inlinedAt: !6026)
!6032 = !DILocation(line: 376, column: 14, scope: !5983, inlinedAt: !6026)
!6033 = !DILocation(line: 377, column: 9, scope: !5983, inlinedAt: !6026)
!6034 = !DILocation(line: 377, column: 16, scope: !5983, inlinedAt: !6026)
!6035 = !DILocation(line: 32, column: 18, scope: !6021)
!6036 = !DILocation(line: 32, column: 2, scope: !6021)
!6037 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !6038, file: !6038, line: 137, type: !6039, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6038 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!6039 = !DISubroutineType(types: !6040)
!6040 = !{!113, !955, !2179, !323, !114}
!6041 = !DILocalVariable(name: "s", arg: 1, scope: !6037, file: !6038, line: 137, type: !955)
!6042 = !DILocation(line: 137, column: 54, scope: !6037)
!6043 = !DILocalVariable(name: "object", arg: 2, scope: !6037, file: !6038, line: 137, type: !2179)
!6044 = !DILocation(line: 137, column: 69, scope: !6037)
!6045 = !DILocalVariable(name: "size", arg: 3, scope: !6037, file: !6038, line: 138, type: !323)
!6046 = !DILocation(line: 138, column: 12, scope: !6037)
!6047 = !DILocalVariable(name: "flags", arg: 4, scope: !6037, file: !6038, line: 138, type: !114)
!6048 = !DILocation(line: 138, column: 24, scope: !6037)
!6049 = !DILocation(line: 140, column: 17, scope: !6037)
!6050 = !DILocation(line: 140, column: 2, scope: !6037)
!6051 = distinct !DISubprogram(name: "moxa_carrier_raised", scope: !3, file: !3, line: 1137, type: !4175, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6052 = !DILocalVariable(name: "lock", arg: 1, scope: !6053, file: !5608, line: 402, type: !1085)
!6053 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !5608, file: !5608, line: 402, type: !5609, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6054 = !DILocation(line: 402, column: 57, scope: !6053, inlinedAt: !6055)
!6055 = distinct !DILocation(line: 1144, column: 2, scope: !6051)
!6056 = !DILocalVariable(name: "lock", arg: 1, scope: !6057, file: !5608, line: 377, type: !1085)
!6057 = distinct !DISubprogram(name: "spin_lock_irq", scope: !5608, file: !5608, line: 377, type: !5609, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6058 = !DILocation(line: 377, column: 55, scope: !6057, inlinedAt: !6059)
!6059 = distinct !DILocation(line: 1142, column: 2, scope: !6051)
!6060 = !DILocalVariable(name: "port", arg: 1, scope: !6051, file: !3, line: 1137, type: !3899)
!6061 = !DILocation(line: 1137, column: 49, scope: !6051)
!6062 = !DILocalVariable(name: "ch", scope: !6051, file: !3, line: 1139, type: !116)
!6063 = !DILocation(line: 1139, column: 20, scope: !6051)
!6064 = !DILocalVariable(name: "__mptr", scope: !6065, file: !3, line: 1139, type: !113)
!6065 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 1139, column: 25)
!6066 = !DILocation(line: 1139, column: 25, scope: !6065)
!6067 = !DILocation(line: 1139, column: 25, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 1139, column: 25)
!6069 = !DILocalVariable(name: "dcd", scope: !6051, file: !3, line: 1140, type: !141)
!6070 = !DILocation(line: 1140, column: 6, scope: !6051)
!6071 = !DILocation(line: 1142, column: 17, scope: !6051)
!6072 = !DILocation(line: 1142, column: 23, scope: !6051)
!6073 = !DILocation(line: 379, column: 2, scope: !6074, inlinedAt: !6059)
!6074 = distinct !DILexicalBlock(scope: !6075, file: !5608, line: 379, column: 2)
!6075 = distinct !DILexicalBlock(scope: !6057, file: !5608, line: 379, column: 2)
!6076 = !DILocation(line: 379, column: 2, scope: !6077, inlinedAt: !6059)
!6077 = distinct !DILexicalBlock(scope: !6075, file: !5608, line: 379, column: 2)
!6078 = !{i32 -2145427292}
!6079 = !DILocation(line: 379, column: 2, scope: !6080, inlinedAt: !6059)
!6080 = distinct !DILexicalBlock(scope: !6077, file: !5608, line: 379, column: 2)
!6081 = !DILocation(line: 1143, column: 8, scope: !6051)
!6082 = !DILocation(line: 1143, column: 12, scope: !6051)
!6083 = !DILocation(line: 1143, column: 6, scope: !6051)
!6084 = !DILocation(line: 1144, column: 19, scope: !6051)
!6085 = !DILocation(line: 1144, column: 25, scope: !6051)
!6086 = !DILocation(line: 404, column: 2, scope: !6087, inlinedAt: !6055)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !5608, line: 404, column: 2)
!6088 = distinct !DILexicalBlock(scope: !6053, file: !5608, line: 404, column: 2)
!6089 = !DILocation(line: 404, column: 2, scope: !6090, inlinedAt: !6055)
!6090 = distinct !DILexicalBlock(scope: !6088, file: !5608, line: 404, column: 2)
!6091 = !{i32 -2145425544}
!6092 = !DILocation(line: 404, column: 2, scope: !6093, inlinedAt: !6055)
!6093 = distinct !DILexicalBlock(scope: !6090, file: !5608, line: 404, column: 2)
!6094 = !DILocation(line: 1145, column: 9, scope: !6051)
!6095 = !DILocation(line: 1145, column: 2, scope: !6051)
!6096 = distinct !DISubprogram(name: "moxa_dtr_rts", scope: !3, file: !3, line: 1148, type: !4179, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6097 = !DILocalVariable(name: "port", arg: 1, scope: !6096, file: !3, line: 1148, type: !3899)
!6098 = !DILocation(line: 1148, column: 43, scope: !6096)
!6099 = !DILocalVariable(name: "onoff", arg: 2, scope: !6096, file: !3, line: 1148, type: !141)
!6100 = !DILocation(line: 1148, column: 53, scope: !6096)
!6101 = !DILocalVariable(name: "ch", scope: !6096, file: !3, line: 1150, type: !116)
!6102 = !DILocation(line: 1150, column: 20, scope: !6096)
!6103 = !DILocalVariable(name: "__mptr", scope: !6104, file: !3, line: 1150, type: !113)
!6104 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 1150, column: 25)
!6105 = !DILocation(line: 1150, column: 25, scope: !6104)
!6106 = !DILocation(line: 1150, column: 25, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 1150, column: 25)
!6108 = !DILocation(line: 1151, column: 19, scope: !6096)
!6109 = !DILocation(line: 1151, column: 23, scope: !6096)
!6110 = !DILocation(line: 1151, column: 30, scope: !6096)
!6111 = !DILocation(line: 1151, column: 2, scope: !6096)
!6112 = !DILocation(line: 1152, column: 1, scope: !6096)
!6113 = distinct !DISubprogram(name: "moxa_shutdown", scope: !3, file: !3, line: 1130, type: !4183, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6114 = !DILocalVariable(name: "port", arg: 1, scope: !6113, file: !3, line: 1130, type: !3899)
!6115 = !DILocation(line: 1130, column: 44, scope: !6113)
!6116 = !DILocalVariable(name: "ch", scope: !6113, file: !3, line: 1132, type: !116)
!6117 = !DILocation(line: 1132, column: 20, scope: !6113)
!6118 = !DILocalVariable(name: "__mptr", scope: !6119, file: !3, line: 1132, type: !113)
!6119 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 1132, column: 25)
!6120 = !DILocation(line: 1132, column: 25, scope: !6119)
!6121 = !DILocation(line: 1132, column: 25, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 1132, column: 25)
!6123 = !DILocation(line: 1133, column: 25, scope: !6113)
!6124 = !DILocation(line: 1133, column: 9, scope: !6113)
!6125 = !DILocation(line: 1134, column: 20, scope: !6113)
!6126 = !DILocation(line: 1134, column: 2, scope: !6113)
!6127 = !DILocation(line: 1135, column: 1, scope: !6113)
!6128 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6129, file: !6129, line: 656, type: !1941, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6129 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6130 = !DILocalVariable(name: "__edi", scope: !6131, file: !6129, line: 658, type: !148)
!6131 = distinct !DILexicalBlock(scope: !6128, file: !6129, line: 658, column: 2)
!6132 = !DILocation(line: 658, column: 2, scope: !6131)
!6133 = !DILocalVariable(name: "__esi", scope: !6131, file: !6129, line: 658, type: !148)
!6134 = !DILocalVariable(name: "__edx", scope: !6131, file: !6129, line: 658, type: !148)
!6135 = !DILocalVariable(name: "__ecx", scope: !6131, file: !6129, line: 658, type: !148)
!6136 = !DILocalVariable(name: "__eax", scope: !6131, file: !6129, line: 658, type: !148)
!6137 = !{i32 -2145730975, i32 -2145730243, i32 -2145730009, i32 -2145729958, i32 -2145729930, i32 -2145729905, i32 -2145730221, i32 -2145730208, i32 -2145729770, i32 -2145729651, i32 -2145730116, i32 -2145730089, i32 -2145730061, i32 -2145730031}
!6138 = !DILocation(line: 659, column: 1, scope: !6128)
!6139 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !6129, file: !6129, line: 661, type: !1941, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6140 = !DILocalVariable(name: "__edi", scope: !6141, file: !6129, line: 663, type: !148)
!6141 = distinct !DILexicalBlock(scope: !6139, file: !6129, line: 663, column: 2)
!6142 = !DILocation(line: 663, column: 2, scope: !6141)
!6143 = !DILocalVariable(name: "__esi", scope: !6141, file: !6129, line: 663, type: !148)
!6144 = !DILocalVariable(name: "__edx", scope: !6141, file: !6129, line: 663, type: !148)
!6145 = !DILocalVariable(name: "__ecx", scope: !6141, file: !6129, line: 663, type: !148)
!6146 = !DILocalVariable(name: "__eax", scope: !6141, file: !6129, line: 663, type: !148)
!6147 = !{i32 -2145728391, i32 -2145727661, i32 -2145727427, i32 -2145727376, i32 -2145727348, i32 -2145727323, i32 -2145727639, i32 -2145727626, i32 -2145727188, i32 -2145727069, i32 -2145727534, i32 -2145727507, i32 -2145727479, i32 -2145727449}
!6148 = !DILocation(line: 664, column: 1, scope: !6139)
!6149 = distinct !DISubprogram(name: "MoxaPortLineCtrl", scope: !3, file: !3, line: 1818, type: !6150, scopeLine: 1819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6150 = !DISubroutineType(types: !6151)
!6151 = !{null, !116, !141, !141}
!6152 = !DILocalVariable(name: "port", arg: 1, scope: !6149, file: !3, line: 1818, type: !116)
!6153 = !DILocation(line: 1818, column: 48, scope: !6149)
!6154 = !DILocalVariable(name: "dtr", arg: 2, scope: !6149, file: !3, line: 1818, type: !141)
!6155 = !DILocation(line: 1818, column: 58, scope: !6149)
!6156 = !DILocalVariable(name: "rts", arg: 3, scope: !6149, file: !3, line: 1818, type: !141)
!6157 = !DILocation(line: 1818, column: 67, scope: !6149)
!6158 = !DILocalVariable(name: "mode", scope: !6149, file: !3, line: 1820, type: !1362)
!6159 = !DILocation(line: 1820, column: 5, scope: !6149)
!6160 = !DILocation(line: 1822, column: 6, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 1822, column: 6)
!6162 = !DILocation(line: 1822, column: 6, scope: !6149)
!6163 = !DILocation(line: 1823, column: 8, scope: !6161)
!6164 = !DILocation(line: 1823, column: 3, scope: !6161)
!6165 = !DILocation(line: 1824, column: 6, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 1824, column: 6)
!6167 = !DILocation(line: 1824, column: 6, scope: !6149)
!6168 = !DILocation(line: 1825, column: 8, scope: !6166)
!6169 = !DILocation(line: 1825, column: 3, scope: !6166)
!6170 = !DILocation(line: 1826, column: 19, scope: !6149)
!6171 = !DILocation(line: 1826, column: 2, scope: !6149)
!6172 = !DILocation(line: 1826, column: 8, scope: !6149)
!6173 = !DILocation(line: 1826, column: 17, scope: !6149)
!6174 = !DILocation(line: 1827, column: 11, scope: !6149)
!6175 = !DILocation(line: 1827, column: 17, scope: !6149)
!6176 = !DILocation(line: 1827, column: 44, scope: !6149)
!6177 = !DILocation(line: 1827, column: 2, scope: !6149)
!6178 = !DILocation(line: 1828, column: 1, scope: !6149)
!6179 = distinct !DISubprogram(name: "moxafunc", scope: !3, file: !3, line: 245, type: !6180, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6180 = !DISubroutineType(types: !6181)
!6181 = !{null, !113, !879, !879}
!6182 = !DILocalVariable(name: "lock", arg: 1, scope: !6183, file: !5608, line: 407, type: !1085)
!6183 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5608, file: !5608, line: 407, type: !6184, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{null, !1085, !148}
!6186 = !DILocation(line: 407, column: 64, scope: !6183, inlinedAt: !6187)
!6187 = distinct !DILocation(line: 252, column: 2, scope: !6179)
!6188 = !DILocalVariable(name: "flags", arg: 2, scope: !6183, file: !5608, line: 407, type: !148)
!6189 = !DILocation(line: 407, column: 84, scope: !6183, inlinedAt: !6187)
!6190 = !DILocalVariable(name: "lock", arg: 1, scope: !6191, file: !5608, line: 327, type: !1085)
!6191 = distinct !DISubprogram(name: "spinlock_check", scope: !5608, file: !5608, line: 327, type: !6192, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6192 = !DISubroutineType(types: !6193)
!6193 = !{!6194, !1085}
!6194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!6195 = !DILocation(line: 327, column: 67, scope: !6191, inlinedAt: !6196)
!6196 = distinct !DILocation(line: 248, column: 9, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 248, column: 9)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 248, column: 9)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 248, column: 9)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 248, column: 9)
!6201 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 248, column: 9)
!6202 = !DILocalVariable(name: "ofsAddr", arg: 1, scope: !6179, file: !3, line: 245, type: !113)
!6203 = !DILocation(line: 245, column: 36, scope: !6179)
!6204 = !DILocalVariable(name: "cmd", arg: 2, scope: !6179, file: !3, line: 245, type: !879)
!6205 = !DILocation(line: 245, column: 49, scope: !6179)
!6206 = !DILocalVariable(name: "arg", arg: 3, scope: !6179, file: !3, line: 245, type: !879)
!6207 = !DILocation(line: 245, column: 58, scope: !6179)
!6208 = !DILocalVariable(name: "flags", scope: !6179, file: !3, line: 247, type: !148)
!6209 = !DILocation(line: 247, column: 23, scope: !6179)
!6210 = !DILocation(line: 248, column: 9, scope: !6179)
!6211 = !DILocation(line: 248, column: 9, scope: !6201)
!6212 = !DILocalVariable(name: "__dummy", scope: !6213, file: !3, line: 248, type: !148)
!6213 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 248, column: 9)
!6214 = !DILocation(line: 248, column: 9, scope: !6213)
!6215 = !DILocalVariable(name: "__dummy2", scope: !6213, file: !3, line: 248, type: !148)
!6216 = !DILocation(line: 248, column: 9, scope: !6200)
!6217 = !DILocation(line: 248, column: 9, scope: !6199)
!6218 = !DILocation(line: 248, column: 9, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 248, column: 9)
!6220 = !DILocalVariable(name: "__dummy", scope: !6221, file: !3, line: 248, type: !148)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 248, column: 9)
!6222 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 248, column: 9)
!6223 = !DILocation(line: 248, column: 9, scope: !6221)
!6224 = !DILocalVariable(name: "__dummy2", scope: !6221, file: !3, line: 248, type: !148)
!6225 = !DILocation(line: 248, column: 9, scope: !6222)
!6226 = !DILocation(line: 248, column: 9, scope: !6198)
!6227 = !{i32 -2141506279}
!6228 = !DILocation(line: 329, column: 10, scope: !6191, inlinedAt: !6196)
!6229 = !DILocation(line: 329, column: 16, scope: !6191, inlinedAt: !6196)
!6230 = !DILocation(line: 248, column: 9, scope: !6197)
!6231 = !DILocation(line: 249, column: 9, scope: !6179)
!6232 = !DILocation(line: 249, column: 14, scope: !6179)
!6233 = !DILocation(line: 249, column: 22, scope: !6179)
!6234 = !DILocation(line: 249, column: 2, scope: !6179)
!6235 = !DILocation(line: 250, column: 9, scope: !6179)
!6236 = !DILocation(line: 250, column: 14, scope: !6179)
!6237 = !DILocation(line: 250, column: 22, scope: !6179)
!6238 = !DILocation(line: 250, column: 2, scope: !6179)
!6239 = !DILocation(line: 251, column: 19, scope: !6179)
!6240 = !DILocation(line: 251, column: 2, scope: !6179)
!6241 = !DILocation(line: 252, column: 41, scope: !6179)
!6242 = !DILocalVariable(name: "__dummy", scope: !6243, file: !5608, line: 409, type: !148)
!6243 = distinct !DILexicalBlock(scope: !6244, file: !5608, line: 409, column: 2)
!6244 = distinct !DILexicalBlock(scope: !6183, file: !5608, line: 409, column: 2)
!6245 = !DILocation(line: 409, column: 2, scope: !6243, inlinedAt: !6187)
!6246 = !DILocalVariable(name: "__dummy2", scope: !6243, file: !5608, line: 409, type: !148)
!6247 = !DILocalVariable(name: "__dummy", scope: !6248, file: !5608, line: 409, type: !148)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !5608, line: 409, column: 2)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !5608, line: 409, column: 2)
!6250 = distinct !DILexicalBlock(scope: !6251, file: !5608, line: 409, column: 2)
!6251 = distinct !DILexicalBlock(scope: !6244, file: !5608, line: 409, column: 2)
!6252 = !DILocation(line: 409, column: 2, scope: !6248, inlinedAt: !6187)
!6253 = !DILocalVariable(name: "__dummy2", scope: !6248, file: !5608, line: 409, type: !148)
!6254 = !DILocation(line: 409, column: 2, scope: !6249, inlinedAt: !6187)
!6255 = !DILocation(line: 409, column: 2, scope: !6256, inlinedAt: !6187)
!6256 = distinct !DILexicalBlock(scope: !6251, file: !5608, line: 409, column: 2)
!6257 = !{i32 -2145424500}
!6258 = !DILocation(line: 409, column: 2, scope: !6259, inlinedAt: !6187)
!6259 = distinct !DILexicalBlock(scope: !6256, file: !5608, line: 409, column: 2)
!6260 = !DILocation(line: 253, column: 1, scope: !6179)
!6261 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6129, file: !6129, line: 666, type: !6262, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!148}
!6264 = !DILocalVariable(name: "f", scope: !6261, file: !6129, line: 668, type: !148)
!6265 = !DILocation(line: 668, column: 16, scope: !6261)
!6266 = !DILocation(line: 670, column: 6, scope: !6261)
!6267 = !DILocation(line: 670, column: 4, scope: !6261)
!6268 = !DILocation(line: 671, column: 2, scope: !6261)
!6269 = !DILocation(line: 672, column: 9, scope: !6261)
!6270 = !DILocation(line: 672, column: 2, scope: !6261)
!6271 = distinct !DISubprogram(name: "writew", scope: !6272, file: !6272, line: 66, type: !6273, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6272 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!6273 = !DISubroutineType(types: !6274)
!6274 = !{null, !318, !6275}
!6275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6276, size: 64)
!6276 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6277 = !DILocalVariable(name: "val", arg: 1, scope: !6271, file: !6272, line: 66, type: !318)
!6278 = !DILocation(line: 66, column: 1, scope: !6271)
!6279 = !DILocalVariable(name: "addr", arg: 2, scope: !6271, file: !6272, line: 66, type: !6275)
!6280 = !{i32 -2141917870}
!6281 = !DILocalVariable(name: "ofsAddr", arg: 1, scope: !4686, file: !3, line: 234, type: !113)
!6282 = !DILocation(line: 234, column: 44, scope: !4686)
!6283 = !DILocalVariable(name: "end", scope: !4686, file: !3, line: 236, type: !148)
!6284 = !DILocation(line: 236, column: 16, scope: !4686)
!6285 = !DILocation(line: 236, column: 22, scope: !4686)
!6286 = !DILocation(line: 236, column: 32, scope: !4686)
!6287 = !DILocation(line: 236, column: 30, scope: !4686)
!6288 = !DILocation(line: 238, column: 2, scope: !4686)
!6289 = !DILocation(line: 238, column: 15, scope: !4686)
!6290 = !DILocation(line: 238, column: 23, scope: !4686)
!6291 = !DILocation(line: 238, column: 9, scope: !4686)
!6292 = !DILocation(line: 238, column: 35, scope: !4686)
!6293 = !DILocation(line: 239, column: 7, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 239, column: 7)
!6295 = !DILocation(line: 239, column: 7, scope: !4686)
!6296 = !DILocation(line: 240, column: 4, scope: !6294)
!6297 = distinct !{!6297, !6288, !6298}
!6298 = !DILocation(line: 240, column: 4, scope: !4686)
!6299 = !DILocation(line: 241, column: 12, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !4686, file: !3, line: 241, column: 6)
!6301 = !DILocation(line: 241, column: 20, scope: !6300)
!6302 = !DILocation(line: 241, column: 6, scope: !6300)
!6303 = !DILocation(line: 241, column: 32, scope: !6300)
!6304 = !DILocation(line: 241, column: 6, scope: !4686)
!6305 = !DILocation(line: 242, column: 3, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 242, column: 3)
!6307 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 242, column: 3)
!6308 = !DILocation(line: 242, column: 3, scope: !6307)
!6309 = !DILocation(line: 242, column: 3, scope: !6300)
!6310 = !DILocation(line: 243, column: 1, scope: !4686)
!6311 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6129, file: !6129, line: 646, type: !6262, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6312 = !DILocalVariable(name: "__ret", scope: !6313, file: !6129, line: 648, type: !148)
!6313 = distinct !DILexicalBlock(scope: !6311, file: !6129, line: 648, column: 9)
!6314 = !DILocation(line: 648, column: 9, scope: !6313)
!6315 = !DILocalVariable(name: "__edi", scope: !6313, file: !6129, line: 648, type: !148)
!6316 = !DILocalVariable(name: "__esi", scope: !6313, file: !6129, line: 648, type: !148)
!6317 = !DILocalVariable(name: "__edx", scope: !6313, file: !6129, line: 648, type: !148)
!6318 = !DILocalVariable(name: "__ecx", scope: !6313, file: !6129, line: 648, type: !148)
!6319 = !DILocalVariable(name: "__eax", scope: !6313, file: !6129, line: 648, type: !148)
!6320 = !DILocation(line: 648, column: 9, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6322, file: !6129, line: 648, column: 9)
!6322 = distinct !DILexicalBlock(scope: !6313, file: !6129, line: 648, column: 9)
!6323 = !{i32 -2145738069, i32 -2145735754, i32 -2145735520, i32 -2145735469, i32 -2145735441, i32 -2145735416, i32 -2145735732, i32 -2145735719, i32 -2145735281, i32 -2145735162, i32 -2145735627, i32 -2145735600, i32 -2145735572, i32 -2145735542}
!6324 = !DILocalVariable(name: "__mask", scope: !6325, file: !6129, line: 648, type: !148)
!6325 = distinct !DILexicalBlock(scope: !6321, file: !6129, line: 648, column: 9)
!6326 = !DILocation(line: 648, column: 9, scope: !6325)
!6327 = !DILocation(line: 648, column: 9, scope: !6322)
!6328 = !DILocation(line: 648, column: 2, scope: !6311)
!6329 = distinct !DISubprogram(name: "readw", scope: !6272, file: !6272, line: 58, type: !6330, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6330 = !DISubroutineType(types: !6331)
!6331 = !{!318, !6332}
!6332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6333, size: 64)
!6333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6276)
!6334 = !DILocalVariable(name: "addr", arg: 1, scope: !6329, file: !6272, line: 58, type: !6332)
!6335 = !DILocation(line: 58, column: 1, scope: !6329)
!6336 = !DILocalVariable(name: "ret", scope: !6329, file: !6272, line: 58, type: !318)
!6337 = !{i32 -2141920294}
!6338 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6129, file: !6129, line: 651, type: !6339, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{null, !148}
!6341 = !DILocalVariable(name: "f", arg: 1, scope: !6338, file: !6129, line: 651, type: !148)
!6342 = !DILocation(line: 651, column: 65, scope: !6338)
!6343 = !DILocalVariable(name: "__edi", scope: !6344, file: !6129, line: 653, type: !148)
!6344 = distinct !DILexicalBlock(scope: !6338, file: !6129, line: 653, column: 2)
!6345 = !DILocation(line: 653, column: 2, scope: !6344)
!6346 = !DILocalVariable(name: "__esi", scope: !6344, file: !6129, line: 653, type: !148)
!6347 = !DILocalVariable(name: "__edx", scope: !6344, file: !6129, line: 653, type: !148)
!6348 = !DILocalVariable(name: "__ecx", scope: !6344, file: !6129, line: 653, type: !148)
!6349 = !DILocalVariable(name: "__eax", scope: !6344, file: !6129, line: 653, type: !148)
!6350 = !{i32 -2145733602, i32 -2145732852, i32 -2145732618, i32 -2145732567, i32 -2145732539, i32 -2145732514, i32 -2145732830, i32 -2145732817, i32 -2145732379, i32 -2145732260, i32 -2145732725, i32 -2145732698, i32 -2145732670, i32 -2145732640}
!6351 = !DILocation(line: 654, column: 1, scope: !6338)
!6352 = distinct !DISubprogram(name: "MoxaPortDisable", scope: !3, file: !3, line: 1719, type: !6353, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{null, !116}
!6355 = !DILocalVariable(name: "port", arg: 1, scope: !6352, file: !3, line: 1719, type: !116)
!6356 = !DILocation(line: 1719, column: 47, scope: !6352)
!6357 = !DILocalVariable(name: "ofsAddr", scope: !6352, file: !3, line: 1721, type: !113)
!6358 = !DILocation(line: 1721, column: 16, scope: !6352)
!6359 = !DILocation(line: 1721, column: 26, scope: !6352)
!6360 = !DILocation(line: 1721, column: 32, scope: !6352)
!6361 = !DILocation(line: 1723, column: 11, scope: !6352)
!6362 = !DILocation(line: 1723, column: 2, scope: !6352)
!6363 = !DILocation(line: 1724, column: 11, scope: !6352)
!6364 = !DILocation(line: 1724, column: 2, scope: !6352)
!6365 = !DILocation(line: 1725, column: 12, scope: !6352)
!6366 = !DILocation(line: 1725, column: 20, scope: !6352)
!6367 = !DILocation(line: 1725, column: 2, scope: !6352)
!6368 = !DILocation(line: 1726, column: 11, scope: !6352)
!6369 = !DILocation(line: 1726, column: 2, scope: !6352)
!6370 = !DILocation(line: 1727, column: 1, scope: !6352)
!6371 = distinct !DISubprogram(name: "MoxaPortFlushData", scope: !3, file: !3, line: 1494, type: !6372, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{null, !116, !141}
!6374 = !DILocalVariable(name: "port", arg: 1, scope: !6371, file: !3, line: 1494, type: !116)
!6375 = !DILocation(line: 1494, column: 49, scope: !6371)
!6376 = !DILocalVariable(name: "mode", arg: 2, scope: !6371, file: !3, line: 1494, type: !141)
!6377 = !DILocation(line: 1494, column: 59, scope: !6371)
!6378 = !DILocalVariable(name: "ofsAddr", scope: !6371, file: !3, line: 1496, type: !113)
!6379 = !DILocation(line: 1496, column: 16, scope: !6371)
!6380 = !DILocation(line: 1497, column: 6, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 1497, column: 6)
!6382 = !DILocation(line: 1497, column: 11, scope: !6381)
!6383 = !DILocation(line: 1497, column: 15, scope: !6381)
!6384 = !DILocation(line: 1497, column: 18, scope: !6381)
!6385 = !DILocation(line: 1497, column: 23, scope: !6381)
!6386 = !DILocation(line: 1497, column: 6, scope: !6371)
!6387 = !DILocation(line: 1498, column: 3, scope: !6381)
!6388 = !DILocation(line: 1499, column: 12, scope: !6371)
!6389 = !DILocation(line: 1499, column: 18, scope: !6371)
!6390 = !DILocation(line: 1499, column: 10, scope: !6371)
!6391 = !DILocation(line: 1500, column: 11, scope: !6371)
!6392 = !DILocation(line: 1500, column: 35, scope: !6371)
!6393 = !DILocation(line: 1500, column: 2, scope: !6371)
!6394 = !DILocation(line: 1501, column: 6, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 1501, column: 6)
!6396 = !DILocation(line: 1501, column: 11, scope: !6395)
!6397 = !DILocation(line: 1501, column: 6, scope: !6371)
!6398 = !DILocation(line: 1502, column: 3, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 1501, column: 17)
!6400 = !DILocation(line: 1502, column: 9, scope: !6399)
!6401 = !DILocation(line: 1502, column: 20, scope: !6399)
!6402 = !DILocation(line: 1503, column: 24, scope: !6399)
!6403 = !DILocation(line: 1503, column: 3, scope: !6399)
!6404 = !DILocation(line: 1504, column: 2, scope: !6399)
!6405 = !DILocation(line: 1505, column: 1, scope: !6371)
!6406 = distinct !DISubprogram(name: "moxa_low_water_check", scope: !3, file: !3, line: 268, type: !463, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6407 = !DILocalVariable(name: "ofsAddr", arg: 1, scope: !6406, file: !3, line: 268, type: !113)
!6408 = !DILocation(line: 268, column: 48, scope: !6406)
!6409 = !DILocalVariable(name: "rptr", scope: !6406, file: !3, line: 270, type: !879)
!6410 = !DILocation(line: 270, column: 6, scope: !6406)
!6411 = !DILocalVariable(name: "wptr", scope: !6406, file: !3, line: 270, type: !879)
!6412 = !DILocation(line: 270, column: 12, scope: !6406)
!6413 = !DILocalVariable(name: "mask", scope: !6406, file: !3, line: 270, type: !879)
!6414 = !DILocation(line: 270, column: 18, scope: !6406)
!6415 = !DILocalVariable(name: "len", scope: !6406, file: !3, line: 270, type: !879)
!6416 = !DILocation(line: 270, column: 24, scope: !6406)
!6417 = !DILocation(line: 272, column: 12, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 272, column: 6)
!6419 = !DILocation(line: 272, column: 20, scope: !6418)
!6420 = !DILocation(line: 272, column: 6, scope: !6418)
!6421 = !DILocation(line: 272, column: 32, scope: !6418)
!6422 = !DILocation(line: 272, column: 6, scope: !6406)
!6423 = !DILocation(line: 273, column: 16, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 272, column: 46)
!6425 = !DILocation(line: 273, column: 24, scope: !6424)
!6426 = !DILocation(line: 273, column: 10, scope: !6424)
!6427 = !DILocation(line: 273, column: 8, scope: !6424)
!6428 = !DILocation(line: 274, column: 16, scope: !6424)
!6429 = !DILocation(line: 274, column: 24, scope: !6424)
!6430 = !DILocation(line: 274, column: 10, scope: !6424)
!6431 = !DILocation(line: 274, column: 8, scope: !6424)
!6432 = !DILocation(line: 275, column: 16, scope: !6424)
!6433 = !DILocation(line: 275, column: 24, scope: !6424)
!6434 = !DILocation(line: 275, column: 10, scope: !6424)
!6435 = !DILocation(line: 275, column: 8, scope: !6424)
!6436 = !DILocation(line: 276, column: 10, scope: !6424)
!6437 = !DILocation(line: 276, column: 17, scope: !6424)
!6438 = !DILocation(line: 276, column: 15, scope: !6424)
!6439 = !DILocation(line: 276, column: 25, scope: !6424)
!6440 = !DILocation(line: 276, column: 23, scope: !6424)
!6441 = !DILocation(line: 276, column: 9, scope: !6424)
!6442 = !DILocation(line: 276, column: 7, scope: !6424)
!6443 = !DILocation(line: 277, column: 7, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6424, file: !3, line: 277, column: 7)
!6445 = !DILocation(line: 277, column: 11, scope: !6444)
!6446 = !DILocation(line: 277, column: 7, scope: !6424)
!6447 = !DILocation(line: 278, column: 13, scope: !6444)
!6448 = !DILocation(line: 278, column: 4, scope: !6444)
!6449 = !DILocation(line: 279, column: 2, scope: !6424)
!6450 = !DILocation(line: 280, column: 1, scope: !6406)
!6451 = distinct !DISubprogram(name: "readb", scope: !6272, file: !6272, line: 57, type: !6452, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6452 = !DISubroutineType(types: !6453)
!6453 = !{!421, !6332}
!6454 = !DILocalVariable(name: "addr", arg: 1, scope: !6451, file: !6272, line: 57, type: !6332)
!6455 = !DILocation(line: 57, column: 1, scope: !6451)
!6456 = !DILocalVariable(name: "ret", scope: !6451, file: !6272, line: 57, type: !421)
!6457 = !{i32 -2141920708}
!6458 = distinct !DISubprogram(name: "moxa_check_fw_model", scope: !3, file: !3, line: 425, type: !6459, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6459 = !DISubroutineType(types: !6460)
!6460 = !{!141, !4218, !1362}
!6461 = !DILocalVariable(name: "brd", arg: 1, scope: !6458, file: !3, line: 425, type: !4218)
!6462 = !DILocation(line: 425, column: 56, scope: !6458)
!6463 = !DILocalVariable(name: "model", arg: 2, scope: !6458, file: !3, line: 425, type: !1362)
!6464 = !DILocation(line: 425, column: 64, scope: !6458)
!6465 = !DILocation(line: 427, column: 10, scope: !6458)
!6466 = !DILocation(line: 427, column: 15, scope: !6458)
!6467 = !DILocation(line: 427, column: 2, scope: !6458)
!6468 = !DILocation(line: 430, column: 7, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 430, column: 7)
!6470 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 427, column: 26)
!6471 = !DILocation(line: 430, column: 13, scope: !6469)
!6472 = !DILocation(line: 430, column: 7, scope: !6470)
!6473 = !DILocation(line: 431, column: 4, scope: !6469)
!6474 = !DILocation(line: 432, column: 3, scope: !6470)
!6475 = !DILocation(line: 434, column: 7, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 434, column: 7)
!6477 = !DILocation(line: 434, column: 13, scope: !6476)
!6478 = !DILocation(line: 434, column: 7, scope: !6470)
!6479 = !DILocation(line: 435, column: 4, scope: !6476)
!6480 = !DILocation(line: 436, column: 3, scope: !6470)
!6481 = !DILocation(line: 438, column: 7, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 438, column: 7)
!6483 = !DILocation(line: 438, column: 13, scope: !6482)
!6484 = !DILocation(line: 438, column: 7, scope: !6470)
!6485 = !DILocation(line: 439, column: 4, scope: !6482)
!6486 = !DILocation(line: 440, column: 3, scope: !6470)
!6487 = !DILocation(line: 442, column: 2, scope: !6458)
!6488 = !DILabel(scope: !6458, name: "err", file: !3, line: 443)
!6489 = !DILocation(line: 443, column: 1, scope: !6458)
!6490 = !DILocation(line: 444, column: 2, scope: !6458)
!6491 = !DILocation(line: 445, column: 1, scope: !6458)
!6492 = distinct !DISubprogram(name: "moxa_check_fw", scope: !3, file: !3, line: 447, type: !6493, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6493 = !DISubroutineType(types: !6494)
!6494 = !{!141, !2179}
!6495 = !DILocalVariable(name: "ptr", arg: 1, scope: !6492, file: !3, line: 447, type: !2179)
!6496 = !DILocation(line: 447, column: 38, scope: !6492)
!6497 = !DILocalVariable(name: "lptr", scope: !6492, file: !3, line: 449, type: !6498)
!6498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6499, size: 64)
!6499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4242)
!6500 = !DILocation(line: 449, column: 16, scope: !6492)
!6501 = !DILocation(line: 449, column: 23, scope: !6492)
!6502 = !DILocation(line: 451, column: 7, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 451, column: 6)
!6504 = !DILocation(line: 451, column: 6, scope: !6503)
!6505 = !DILocation(line: 451, column: 12, scope: !6503)
!6506 = !DILocation(line: 451, column: 6, scope: !6492)
!6507 = !DILocation(line: 452, column: 3, scope: !6503)
!6508 = !DILocation(line: 454, column: 2, scope: !6492)
!6509 = !DILocation(line: 455, column: 1, scope: !6492)
!6510 = distinct !DISubprogram(name: "moxa_load_bios", scope: !3, file: !3, line: 457, type: !6511, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6511 = !DISubroutineType(types: !6512)
!6512 = !{!141, !4218, !5202, !323}
!6513 = !DILocalVariable(name: "brd", arg: 1, scope: !6510, file: !3, line: 457, type: !4218)
!6514 = !DILocation(line: 457, column: 51, scope: !6510)
!6515 = !DILocalVariable(name: "buf", arg: 2, scope: !6510, file: !3, line: 457, type: !5202)
!6516 = !DILocation(line: 457, column: 66, scope: !6510)
!6517 = !DILocalVariable(name: "len", arg: 3, scope: !6510, file: !3, line: 458, type: !323)
!6518 = !DILocation(line: 458, column: 10, scope: !6510)
!6519 = !DILocalVariable(name: "baseAddr", scope: !6510, file: !3, line: 460, type: !113)
!6520 = !DILocation(line: 460, column: 16, scope: !6510)
!6521 = !DILocation(line: 460, column: 27, scope: !6510)
!6522 = !DILocation(line: 460, column: 32, scope: !6510)
!6523 = !DILocalVariable(name: "tmp", scope: !6510, file: !3, line: 461, type: !879)
!6524 = !DILocation(line: 461, column: 6, scope: !6510)
!6525 = !DILocation(line: 463, column: 19, scope: !6510)
!6526 = !DILocation(line: 463, column: 28, scope: !6510)
!6527 = !DILocation(line: 463, column: 2, scope: !6510)
!6528 = !DILocation(line: 464, column: 2, scope: !6510)
!6529 = !DILocation(line: 465, column: 12, scope: !6510)
!6530 = !DILocation(line: 465, column: 2, scope: !6510)
!6531 = !DILocation(line: 466, column: 14, scope: !6510)
!6532 = !DILocation(line: 466, column: 24, scope: !6510)
!6533 = !DILocation(line: 466, column: 29, scope: !6510)
!6534 = !DILocation(line: 466, column: 2, scope: !6510)
!6535 = !DILocation(line: 467, column: 12, scope: !6510)
!6536 = !DILocation(line: 467, column: 21, scope: !6510)
!6537 = !DILocation(line: 467, column: 2, scope: !6510)
!6538 = !DILocation(line: 469, column: 2, scope: !6510)
!6539 = !DILocation(line: 471, column: 10, scope: !6510)
!6540 = !DILocation(line: 471, column: 15, scope: !6510)
!6541 = !DILocation(line: 471, column: 2, scope: !6510)
!6542 = !DILocation(line: 474, column: 15, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 471, column: 26)
!6544 = !DILocation(line: 474, column: 24, scope: !6543)
!6545 = !DILocation(line: 474, column: 9, scope: !6543)
!6546 = !DILocation(line: 474, column: 7, scope: !6543)
!6547 = !DILocation(line: 475, column: 7, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 475, column: 7)
!6549 = !DILocation(line: 475, column: 11, scope: !6548)
!6550 = !DILocation(line: 475, column: 7, scope: !6543)
!6551 = !DILocation(line: 476, column: 4, scope: !6548)
!6552 = !DILocation(line: 477, column: 3, scope: !6543)
!6553 = !DILocation(line: 479, column: 15, scope: !6543)
!6554 = !DILocation(line: 479, column: 24, scope: !6543)
!6555 = !DILocation(line: 479, column: 9, scope: !6543)
!6556 = !DILocation(line: 479, column: 7, scope: !6543)
!6557 = !DILocation(line: 480, column: 7, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 480, column: 7)
!6559 = !DILocation(line: 480, column: 11, scope: !6558)
!6560 = !DILocation(line: 480, column: 7, scope: !6543)
!6561 = !DILocation(line: 481, column: 4, scope: !6558)
!6562 = !DILocation(line: 482, column: 3, scope: !6543)
!6563 = !DILocation(line: 484, column: 15, scope: !6543)
!6564 = !DILocation(line: 484, column: 24, scope: !6543)
!6565 = !DILocation(line: 484, column: 26, scope: !6543)
!6566 = !DILocation(line: 484, column: 9, scope: !6543)
!6567 = !DILocation(line: 484, column: 7, scope: !6543)
!6568 = !DILocation(line: 485, column: 7, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 485, column: 7)
!6570 = !DILocation(line: 485, column: 11, scope: !6569)
!6571 = !DILocation(line: 485, column: 7, scope: !6543)
!6572 = !DILocation(line: 486, column: 4, scope: !6569)
!6573 = !DILocation(line: 487, column: 15, scope: !6543)
!6574 = !DILocation(line: 487, column: 24, scope: !6543)
!6575 = !DILocation(line: 487, column: 26, scope: !6543)
!6576 = !DILocation(line: 487, column: 9, scope: !6543)
!6577 = !DILocation(line: 487, column: 7, scope: !6543)
!6578 = !DILocation(line: 488, column: 7, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 488, column: 7)
!6580 = !DILocation(line: 488, column: 11, scope: !6579)
!6581 = !DILocation(line: 488, column: 7, scope: !6543)
!6582 = !DILocation(line: 489, column: 4, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 488, column: 24)
!6584 = !DILocation(line: 491, column: 4, scope: !6583)
!6585 = !DILocation(line: 493, column: 3, scope: !6543)
!6586 = !DILocation(line: 496, column: 2, scope: !6510)
!6587 = !DILabel(scope: !6510, name: "err", file: !3, line: 497)
!6588 = !DILocation(line: 497, column: 1, scope: !6510)
!6589 = !DILocation(line: 498, column: 2, scope: !6510)
!6590 = !DILocation(line: 499, column: 2, scope: !6510)
!6591 = !DILocation(line: 500, column: 1, scope: !6510)
!6592 = distinct !DISubprogram(name: "moxa_load_320b", scope: !3, file: !3, line: 502, type: !6511, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6593 = !DILocalVariable(name: "brd", arg: 1, scope: !6592, file: !3, line: 502, type: !4218)
!6594 = !DILocation(line: 502, column: 51, scope: !6592)
!6595 = !DILocalVariable(name: "ptr", arg: 2, scope: !6592, file: !3, line: 502, type: !5202)
!6596 = !DILocation(line: 502, column: 66, scope: !6592)
!6597 = !DILocalVariable(name: "len", arg: 3, scope: !6592, file: !3, line: 503, type: !323)
!6598 = !DILocation(line: 503, column: 10, scope: !6592)
!6599 = !DILocalVariable(name: "baseAddr", scope: !6592, file: !3, line: 505, type: !113)
!6600 = !DILocation(line: 505, column: 16, scope: !6592)
!6601 = !DILocation(line: 505, column: 27, scope: !6592)
!6602 = !DILocation(line: 505, column: 32, scope: !6592)
!6603 = !DILocation(line: 507, column: 6, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 507, column: 6)
!6605 = !DILocation(line: 507, column: 10, scope: !6604)
!6606 = !DILocation(line: 507, column: 6, scope: !6592)
!6607 = !DILocation(line: 508, column: 3, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 507, column: 18)
!6609 = !DILocation(line: 509, column: 3, scope: !6608)
!6610 = !DILocation(line: 512, column: 9, scope: !6592)
!6611 = !DILocation(line: 512, column: 13, scope: !6592)
!6612 = !DILocation(line: 512, column: 20, scope: !6592)
!6613 = !DILocation(line: 512, column: 25, scope: !6592)
!6614 = !DILocation(line: 512, column: 34, scope: !6592)
!6615 = !DILocation(line: 512, column: 36, scope: !6592)
!6616 = !DILocation(line: 512, column: 2, scope: !6592)
!6617 = !DILocation(line: 513, column: 12, scope: !6592)
!6618 = !DILocation(line: 513, column: 21, scope: !6592)
!6619 = !DILocation(line: 513, column: 2, scope: !6592)
!6620 = !DILocation(line: 514, column: 14, scope: !6592)
!6621 = !DILocation(line: 514, column: 23, scope: !6592)
!6622 = !DILocation(line: 514, column: 39, scope: !6592)
!6623 = !DILocation(line: 514, column: 2, scope: !6592)
!6624 = !DILocation(line: 515, column: 12, scope: !6592)
!6625 = !DILocation(line: 515, column: 21, scope: !6592)
!6626 = !DILocation(line: 515, column: 2, scope: !6592)
!6627 = !DILocation(line: 516, column: 14, scope: !6592)
!6628 = !DILocation(line: 516, column: 23, scope: !6592)
!6629 = !DILocation(line: 516, column: 39, scope: !6592)
!6630 = !DILocation(line: 516, column: 43, scope: !6592)
!6631 = !DILocation(line: 516, column: 51, scope: !6592)
!6632 = !DILocation(line: 516, column: 55, scope: !6592)
!6633 = !DILocation(line: 516, column: 2, scope: !6592)
!6634 = !DILocation(line: 518, column: 2, scope: !6592)
!6635 = !DILocation(line: 519, column: 1, scope: !6592)
!6636 = distinct !DISubprogram(name: "moxa_load_code", scope: !3, file: !3, line: 643, type: !6637, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{!141, !4218, !2179, !323}
!6639 = !DILocalVariable(name: "brd", arg: 1, scope: !6636, file: !3, line: 643, type: !4218)
!6640 = !DILocation(line: 643, column: 51, scope: !6636)
!6641 = !DILocalVariable(name: "ptr", arg: 2, scope: !6636, file: !3, line: 643, type: !2179)
!6642 = !DILocation(line: 643, column: 68, scope: !6636)
!6643 = !DILocalVariable(name: "len", arg: 3, scope: !6636, file: !3, line: 644, type: !323)
!6644 = !DILocation(line: 644, column: 10, scope: !6636)
!6645 = !DILocalVariable(name: "ofsAddr", scope: !6636, file: !3, line: 646, type: !113)
!6646 = !DILocation(line: 646, column: 16, scope: !6636)
!6647 = !DILocalVariable(name: "baseAddr", scope: !6636, file: !3, line: 646, type: !113)
!6648 = !DILocation(line: 646, column: 26, scope: !6636)
!6649 = !DILocation(line: 646, column: 37, scope: !6636)
!6650 = !DILocation(line: 646, column: 42, scope: !6636)
!6651 = !DILocalVariable(name: "port", scope: !6636, file: !3, line: 647, type: !116)
!6652 = !DILocation(line: 647, column: 20, scope: !6636)
!6653 = !DILocalVariable(name: "retval", scope: !6636, file: !3, line: 648, type: !141)
!6654 = !DILocation(line: 648, column: 6, scope: !6636)
!6655 = !DILocalVariable(name: "i", scope: !6636, file: !3, line: 648, type: !141)
!6656 = !DILocation(line: 648, column: 14, scope: !6636)
!6657 = !DILocation(line: 650, column: 6, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 650, column: 6)
!6659 = !DILocation(line: 650, column: 10, scope: !6658)
!6660 = !DILocation(line: 650, column: 6, scope: !6636)
!6661 = !DILocation(line: 651, column: 3, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 650, column: 15)
!6663 = !DILocation(line: 652, column: 3, scope: !6662)
!6664 = !DILocation(line: 655, column: 31, scope: !6636)
!6665 = !DILocation(line: 655, column: 36, scope: !6636)
!6666 = !DILocation(line: 655, column: 41, scope: !6636)
!6667 = !DILocation(line: 655, column: 11, scope: !6636)
!6668 = !DILocation(line: 655, column: 9, scope: !6636)
!6669 = !DILocation(line: 656, column: 6, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 656, column: 6)
!6671 = !DILocation(line: 656, column: 6, scope: !6636)
!6672 = !DILocation(line: 657, column: 10, scope: !6670)
!6673 = !DILocation(line: 657, column: 3, scope: !6670)
!6674 = !DILocation(line: 659, column: 10, scope: !6636)
!6675 = !DILocation(line: 659, column: 15, scope: !6636)
!6676 = !DILocation(line: 659, column: 2, scope: !6636)
!6677 = !DILocation(line: 663, column: 10, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 659, column: 26)
!6679 = !DILocation(line: 663, column: 15, scope: !6678)
!6680 = !DILocation(line: 663, column: 8, scope: !6678)
!6681 = !DILocation(line: 664, column: 10, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 664, column: 3)
!6683 = !DILocation(line: 664, column: 8, scope: !6682)
!6684 = !DILocation(line: 664, column: 15, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 664, column: 3)
!6686 = !DILocation(line: 664, column: 19, scope: !6685)
!6687 = !DILocation(line: 664, column: 24, scope: !6685)
!6688 = !DILocation(line: 664, column: 17, scope: !6685)
!6689 = !DILocation(line: 664, column: 3, scope: !6682)
!6690 = !DILocation(line: 665, column: 18, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 664, column: 47)
!6692 = !DILocation(line: 665, column: 4, scope: !6691)
!6693 = !DILocation(line: 665, column: 10, scope: !6691)
!6694 = !DILocation(line: 665, column: 16, scope: !6691)
!6695 = !DILocation(line: 666, column: 4, scope: !6691)
!6696 = !DILocation(line: 666, column: 10, scope: !6691)
!6697 = !DILocation(line: 666, column: 19, scope: !6691)
!6698 = !DILocation(line: 667, column: 22, scope: !6691)
!6699 = !DILocation(line: 667, column: 31, scope: !6691)
!6700 = !DILocation(line: 668, column: 20, scope: !6691)
!6701 = !DILocation(line: 668, column: 18, scope: !6691)
!6702 = !DILocation(line: 667, column: 46, scope: !6691)
!6703 = !DILocation(line: 667, column: 4, scope: !6691)
!6704 = !DILocation(line: 667, column: 10, scope: !6691)
!6705 = !DILocation(line: 667, column: 20, scope: !6691)
!6706 = !DILocation(line: 669, column: 14, scope: !6691)
!6707 = !DILocation(line: 669, column: 20, scope: !6691)
!6708 = !DILocation(line: 669, column: 12, scope: !6691)
!6709 = !DILocation(line: 670, column: 24, scope: !6691)
!6710 = !DILocation(line: 670, column: 32, scope: !6691)
!6711 = !DILocation(line: 670, column: 4, scope: !6691)
!6712 = !DILocation(line: 671, column: 24, scope: !6691)
!6713 = !DILocation(line: 671, column: 32, scope: !6691)
!6714 = !DILocation(line: 671, column: 4, scope: !6691)
!6715 = !DILocation(line: 672, column: 26, scope: !6691)
!6716 = !DILocation(line: 672, column: 28, scope: !6691)
!6717 = !DILocation(line: 672, column: 24, scope: !6691)
!6718 = !DILocation(line: 672, column: 11, scope: !6691)
!6719 = !DILocation(line: 672, column: 46, scope: !6691)
!6720 = !DILocation(line: 672, column: 54, scope: !6691)
!6721 = !DILocation(line: 672, column: 4, scope: !6691)
!6722 = !DILocation(line: 673, column: 17, scope: !6691)
!6723 = !DILocation(line: 673, column: 25, scope: !6691)
!6724 = !DILocation(line: 673, column: 11, scope: !6691)
!6725 = !DILocation(line: 673, column: 37, scope: !6691)
!6726 = !DILocation(line: 673, column: 54, scope: !6691)
!6727 = !DILocation(line: 673, column: 62, scope: !6691)
!6728 = !DILocation(line: 673, column: 4, scope: !6691)
!6729 = !DILocation(line: 675, column: 26, scope: !6691)
!6730 = !DILocation(line: 675, column: 28, scope: !6691)
!6731 = !DILocation(line: 675, column: 24, scope: !6691)
!6732 = !DILocation(line: 675, column: 11, scope: !6691)
!6733 = !DILocation(line: 675, column: 46, scope: !6691)
!6734 = !DILocation(line: 675, column: 54, scope: !6691)
!6735 = !DILocation(line: 675, column: 4, scope: !6691)
!6736 = !DILocation(line: 676, column: 17, scope: !6691)
!6737 = !DILocation(line: 676, column: 25, scope: !6691)
!6738 = !DILocation(line: 676, column: 11, scope: !6691)
!6739 = !DILocation(line: 676, column: 37, scope: !6691)
!6740 = !DILocation(line: 676, column: 54, scope: !6691)
!6741 = !DILocation(line: 676, column: 62, scope: !6691)
!6742 = !DILocation(line: 676, column: 4, scope: !6691)
!6743 = !DILocation(line: 678, column: 3, scope: !6691)
!6744 = !DILocation(line: 664, column: 35, scope: !6685)
!6745 = !DILocation(line: 664, column: 43, scope: !6685)
!6746 = !DILocation(line: 664, column: 3, scope: !6685)
!6747 = distinct !{!6747, !6689, !6748}
!6748 = !DILocation(line: 678, column: 3, scope: !6682)
!6749 = !DILocation(line: 679, column: 3, scope: !6678)
!6750 = !DILocation(line: 681, column: 10, scope: !6678)
!6751 = !DILocation(line: 681, column: 15, scope: !6678)
!6752 = !DILocation(line: 681, column: 8, scope: !6678)
!6753 = !DILocation(line: 682, column: 10, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 682, column: 3)
!6755 = !DILocation(line: 682, column: 8, scope: !6754)
!6756 = !DILocation(line: 682, column: 15, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 682, column: 3)
!6758 = !DILocation(line: 682, column: 19, scope: !6757)
!6759 = !DILocation(line: 682, column: 24, scope: !6757)
!6760 = !DILocation(line: 682, column: 17, scope: !6757)
!6761 = !DILocation(line: 682, column: 3, scope: !6754)
!6762 = !DILocation(line: 683, column: 18, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 682, column: 47)
!6764 = !DILocation(line: 683, column: 4, scope: !6763)
!6765 = !DILocation(line: 683, column: 10, scope: !6763)
!6766 = !DILocation(line: 683, column: 16, scope: !6763)
!6767 = !DILocation(line: 684, column: 4, scope: !6763)
!6768 = !DILocation(line: 684, column: 10, scope: !6763)
!6769 = !DILocation(line: 684, column: 19, scope: !6763)
!6770 = !DILocation(line: 685, column: 22, scope: !6763)
!6771 = !DILocation(line: 685, column: 31, scope: !6763)
!6772 = !DILocation(line: 686, column: 20, scope: !6763)
!6773 = !DILocation(line: 686, column: 18, scope: !6763)
!6774 = !DILocation(line: 685, column: 46, scope: !6763)
!6775 = !DILocation(line: 685, column: 4, scope: !6763)
!6776 = !DILocation(line: 685, column: 10, scope: !6763)
!6777 = !DILocation(line: 685, column: 20, scope: !6763)
!6778 = !DILocation(line: 687, column: 14, scope: !6763)
!6779 = !DILocation(line: 687, column: 20, scope: !6763)
!6780 = !DILocation(line: 687, column: 12, scope: !6763)
!6781 = !DILocation(line: 688, column: 12, scope: !6763)
!6782 = !DILocation(line: 688, column: 17, scope: !6763)
!6783 = !DILocation(line: 688, column: 4, scope: !6763)
!6784 = !DILocation(line: 690, column: 27, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 688, column: 27)
!6786 = !DILocation(line: 690, column: 35, scope: !6785)
!6787 = !DILocation(line: 690, column: 5, scope: !6785)
!6788 = !DILocation(line: 691, column: 27, scope: !6785)
!6789 = !DILocation(line: 691, column: 35, scope: !6785)
!6790 = !DILocation(line: 691, column: 5, scope: !6785)
!6791 = !DILocation(line: 692, column: 29, scope: !6785)
!6792 = !DILocation(line: 692, column: 31, scope: !6785)
!6793 = !DILocation(line: 692, column: 27, scope: !6785)
!6794 = !DILocation(line: 692, column: 12, scope: !6785)
!6795 = !DILocation(line: 692, column: 49, scope: !6785)
!6796 = !DILocation(line: 692, column: 57, scope: !6785)
!6797 = !DILocation(line: 692, column: 5, scope: !6785)
!6798 = !DILocation(line: 693, column: 18, scope: !6785)
!6799 = !DILocation(line: 693, column: 26, scope: !6785)
!6800 = !DILocation(line: 693, column: 12, scope: !6785)
!6801 = !DILocation(line: 693, column: 38, scope: !6785)
!6802 = !DILocation(line: 693, column: 55, scope: !6785)
!6803 = !DILocation(line: 693, column: 63, scope: !6785)
!6804 = !DILocation(line: 693, column: 5, scope: !6785)
!6805 = !DILocation(line: 694, column: 29, scope: !6785)
!6806 = !DILocation(line: 694, column: 31, scope: !6785)
!6807 = !DILocation(line: 694, column: 27, scope: !6785)
!6808 = !DILocation(line: 694, column: 12, scope: !6785)
!6809 = !DILocation(line: 694, column: 49, scope: !6785)
!6810 = !DILocation(line: 694, column: 57, scope: !6785)
!6811 = !DILocation(line: 694, column: 5, scope: !6785)
!6812 = !DILocation(line: 695, column: 18, scope: !6785)
!6813 = !DILocation(line: 695, column: 26, scope: !6785)
!6814 = !DILocation(line: 695, column: 12, scope: !6785)
!6815 = !DILocation(line: 695, column: 38, scope: !6785)
!6816 = !DILocation(line: 695, column: 55, scope: !6785)
!6817 = !DILocation(line: 695, column: 63, scope: !6785)
!6818 = !DILocation(line: 695, column: 5, scope: !6785)
!6819 = !DILocation(line: 697, column: 5, scope: !6785)
!6820 = !DILocation(line: 699, column: 28, scope: !6785)
!6821 = !DILocation(line: 699, column: 36, scope: !6785)
!6822 = !DILocation(line: 699, column: 5, scope: !6785)
!6823 = !DILocation(line: 700, column: 28, scope: !6785)
!6824 = !DILocation(line: 700, column: 36, scope: !6785)
!6825 = !DILocation(line: 700, column: 5, scope: !6785)
!6826 = !DILocation(line: 701, column: 30, scope: !6785)
!6827 = !DILocation(line: 701, column: 32, scope: !6785)
!6828 = !DILocation(line: 701, column: 28, scope: !6785)
!6829 = !DILocation(line: 701, column: 12, scope: !6785)
!6830 = !DILocation(line: 701, column: 51, scope: !6785)
!6831 = !DILocation(line: 701, column: 59, scope: !6785)
!6832 = !DILocation(line: 701, column: 5, scope: !6785)
!6833 = !DILocation(line: 702, column: 18, scope: !6785)
!6834 = !DILocation(line: 702, column: 26, scope: !6785)
!6835 = !DILocation(line: 702, column: 12, scope: !6785)
!6836 = !DILocation(line: 702, column: 38, scope: !6785)
!6837 = !DILocation(line: 702, column: 56, scope: !6785)
!6838 = !DILocation(line: 702, column: 64, scope: !6785)
!6839 = !DILocation(line: 702, column: 5, scope: !6785)
!6840 = !DILocation(line: 703, column: 30, scope: !6785)
!6841 = !DILocation(line: 703, column: 32, scope: !6785)
!6842 = !DILocation(line: 703, column: 28, scope: !6785)
!6843 = !DILocation(line: 703, column: 12, scope: !6785)
!6844 = !DILocation(line: 703, column: 51, scope: !6785)
!6845 = !DILocation(line: 703, column: 59, scope: !6785)
!6846 = !DILocation(line: 703, column: 5, scope: !6785)
!6847 = !DILocation(line: 704, column: 18, scope: !6785)
!6848 = !DILocation(line: 704, column: 26, scope: !6785)
!6849 = !DILocation(line: 704, column: 12, scope: !6785)
!6850 = !DILocation(line: 704, column: 38, scope: !6785)
!6851 = !DILocation(line: 704, column: 56, scope: !6785)
!6852 = !DILocation(line: 704, column: 64, scope: !6785)
!6853 = !DILocation(line: 704, column: 5, scope: !6785)
!6854 = !DILocation(line: 705, column: 5, scope: !6785)
!6855 = !DILocation(line: 708, column: 28, scope: !6785)
!6856 = !DILocation(line: 708, column: 36, scope: !6785)
!6857 = !DILocation(line: 708, column: 5, scope: !6785)
!6858 = !DILocation(line: 709, column: 28, scope: !6785)
!6859 = !DILocation(line: 709, column: 36, scope: !6785)
!6860 = !DILocation(line: 709, column: 5, scope: !6785)
!6861 = !DILocation(line: 710, column: 30, scope: !6785)
!6862 = !DILocation(line: 710, column: 32, scope: !6785)
!6863 = !DILocation(line: 710, column: 28, scope: !6785)
!6864 = !DILocation(line: 710, column: 12, scope: !6785)
!6865 = !DILocation(line: 710, column: 51, scope: !6785)
!6866 = !DILocation(line: 710, column: 59, scope: !6785)
!6867 = !DILocation(line: 710, column: 5, scope: !6785)
!6868 = !DILocation(line: 711, column: 18, scope: !6785)
!6869 = !DILocation(line: 711, column: 26, scope: !6785)
!6870 = !DILocation(line: 711, column: 12, scope: !6785)
!6871 = !DILocation(line: 711, column: 38, scope: !6785)
!6872 = !DILocation(line: 711, column: 56, scope: !6785)
!6873 = !DILocation(line: 711, column: 64, scope: !6785)
!6874 = !DILocation(line: 711, column: 5, scope: !6785)
!6875 = !DILocation(line: 712, column: 30, scope: !6785)
!6876 = !DILocation(line: 712, column: 32, scope: !6785)
!6877 = !DILocation(line: 712, column: 28, scope: !6785)
!6878 = !DILocation(line: 712, column: 12, scope: !6785)
!6879 = !DILocation(line: 712, column: 51, scope: !6785)
!6880 = !DILocation(line: 712, column: 59, scope: !6785)
!6881 = !DILocation(line: 712, column: 5, scope: !6785)
!6882 = !DILocation(line: 713, column: 18, scope: !6785)
!6883 = !DILocation(line: 713, column: 26, scope: !6785)
!6884 = !DILocation(line: 713, column: 12, scope: !6785)
!6885 = !DILocation(line: 713, column: 39, scope: !6785)
!6886 = !DILocation(line: 713, column: 47, scope: !6785)
!6887 = !DILocation(line: 713, column: 5, scope: !6785)
!6888 = !DILocation(line: 714, column: 5, scope: !6785)
!6889 = !DILocation(line: 716, column: 28, scope: !6785)
!6890 = !DILocation(line: 716, column: 36, scope: !6785)
!6891 = !DILocation(line: 716, column: 5, scope: !6785)
!6892 = !DILocation(line: 717, column: 28, scope: !6785)
!6893 = !DILocation(line: 717, column: 36, scope: !6785)
!6894 = !DILocation(line: 717, column: 5, scope: !6785)
!6895 = !DILocation(line: 718, column: 27, scope: !6785)
!6896 = !DILocation(line: 718, column: 35, scope: !6785)
!6897 = !DILocation(line: 718, column: 5, scope: !6785)
!6898 = !DILocation(line: 719, column: 30, scope: !6785)
!6899 = !DILocation(line: 719, column: 32, scope: !6785)
!6900 = !DILocation(line: 719, column: 28, scope: !6785)
!6901 = !DILocation(line: 719, column: 12, scope: !6785)
!6902 = !DILocation(line: 719, column: 51, scope: !6785)
!6903 = !DILocation(line: 719, column: 59, scope: !6785)
!6904 = !DILocation(line: 719, column: 5, scope: !6785)
!6905 = !DILocation(line: 720, column: 18, scope: !6785)
!6906 = !DILocation(line: 720, column: 26, scope: !6785)
!6907 = !DILocation(line: 720, column: 12, scope: !6785)
!6908 = !DILocation(line: 720, column: 39, scope: !6785)
!6909 = !DILocation(line: 720, column: 47, scope: !6785)
!6910 = !DILocation(line: 720, column: 5, scope: !6785)
!6911 = !DILocation(line: 721, column: 30, scope: !6785)
!6912 = !DILocation(line: 721, column: 32, scope: !6785)
!6913 = !DILocation(line: 721, column: 28, scope: !6785)
!6914 = !DILocation(line: 721, column: 12, scope: !6785)
!6915 = !DILocation(line: 721, column: 51, scope: !6785)
!6916 = !DILocation(line: 721, column: 59, scope: !6785)
!6917 = !DILocation(line: 721, column: 5, scope: !6785)
!6918 = !DILocation(line: 722, column: 18, scope: !6785)
!6919 = !DILocation(line: 722, column: 26, scope: !6785)
!6920 = !DILocation(line: 722, column: 12, scope: !6785)
!6921 = !DILocation(line: 722, column: 39, scope: !6785)
!6922 = !DILocation(line: 722, column: 47, scope: !6785)
!6923 = !DILocation(line: 722, column: 5, scope: !6785)
!6924 = !DILocation(line: 723, column: 5, scope: !6785)
!6925 = !DILocation(line: 725, column: 3, scope: !6763)
!6926 = !DILocation(line: 682, column: 35, scope: !6757)
!6927 = !DILocation(line: 682, column: 43, scope: !6757)
!6928 = !DILocation(line: 682, column: 3, scope: !6757)
!6929 = distinct !{!6929, !6761, !6930}
!6930 = !DILocation(line: 725, column: 3, scope: !6754)
!6931 = !DILocation(line: 726, column: 3, scope: !6678)
!6932 = !DILocation(line: 728, column: 2, scope: !6636)
!6933 = !DILocation(line: 729, column: 1, scope: !6636)
!6934 = distinct !DISubprogram(name: "writeb", scope: !6272, file: !6272, line: 65, type: !6935, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6935 = !DISubroutineType(types: !6936)
!6936 = !{null, !421, !6275}
!6937 = !DILocalVariable(name: "val", arg: 1, scope: !6934, file: !6272, line: 65, type: !421)
!6938 = !DILocation(line: 65, column: 1, scope: !6934)
!6939 = !DILocalVariable(name: "addr", arg: 2, scope: !6934, file: !6272, line: 65, type: !6275)
!6940 = !{i32 -2141918254}
!6941 = distinct !DISubprogram(name: "moxa_real_load_code", scope: !3, file: !3, line: 521, type: !6637, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!6942 = !DILocalVariable(name: "brd", arg: 1, scope: !6941, file: !3, line: 521, type: !4218)
!6943 = !DILocation(line: 521, column: 56, scope: !6941)
!6944 = !DILocalVariable(name: "ptr", arg: 2, scope: !6941, file: !3, line: 521, type: !2179)
!6945 = !DILocation(line: 521, column: 73, scope: !6941)
!6946 = !DILocalVariable(name: "len", arg: 3, scope: !6941, file: !3, line: 522, type: !323)
!6947 = !DILocation(line: 522, column: 10, scope: !6941)
!6948 = !DILocalVariable(name: "baseAddr", scope: !6941, file: !3, line: 524, type: !113)
!6949 = !DILocation(line: 524, column: 16, scope: !6941)
!6950 = !DILocation(line: 524, column: 27, scope: !6941)
!6951 = !DILocation(line: 524, column: 32, scope: !6941)
!6952 = !DILocalVariable(name: "uptr", scope: !6941, file: !3, line: 525, type: !6498)
!6953 = !DILocation(line: 525, column: 16, scope: !6941)
!6954 = !DILocation(line: 525, column: 23, scope: !6941)
!6955 = !DILocalVariable(name: "wlen", scope: !6941, file: !3, line: 526, type: !323)
!6956 = !DILocation(line: 526, column: 9, scope: !6941)
!6957 = !DILocalVariable(name: "len2", scope: !6941, file: !3, line: 526, type: !323)
!6958 = !DILocation(line: 526, column: 15, scope: !6941)
!6959 = !DILocalVariable(name: "j", scope: !6941, file: !3, line: 526, type: !323)
!6960 = !DILocation(line: 526, column: 21, scope: !6941)
!6961 = !DILocalVariable(name: "key", scope: !6941, file: !3, line: 527, type: !148)
!6962 = !DILocation(line: 527, column: 16, scope: !6941)
!6963 = !DILocalVariable(name: "loadbuf", scope: !6941, file: !3, line: 527, type: !148)
!6964 = !DILocation(line: 527, column: 21, scope: !6941)
!6965 = !DILocalVariable(name: "loadlen", scope: !6941, file: !3, line: 527, type: !148)
!6966 = !DILocation(line: 527, column: 30, scope: !6941)
!6967 = !DILocalVariable(name: "checksum", scope: !6941, file: !3, line: 527, type: !148)
!6968 = !DILocation(line: 527, column: 39, scope: !6941)
!6969 = !DILocalVariable(name: "checksum_ok", scope: !6941, file: !3, line: 527, type: !148)
!6970 = !DILocation(line: 527, column: 49, scope: !6941)
!6971 = !DILocalVariable(name: "i", scope: !6941, file: !3, line: 528, type: !7)
!6972 = !DILocation(line: 528, column: 15, scope: !6941)
!6973 = !DILocalVariable(name: "retry", scope: !6941, file: !3, line: 528, type: !7)
!6974 = !DILocation(line: 528, column: 18, scope: !6941)
!6975 = !DILocalVariable(name: "usum", scope: !6941, file: !3, line: 529, type: !879)
!6976 = !DILocation(line: 529, column: 6, scope: !6941)
!6977 = !DILocalVariable(name: "keycode", scope: !6941, file: !3, line: 529, type: !879)
!6978 = !DILocation(line: 529, column: 12, scope: !6941)
!6979 = !DILocation(line: 531, column: 13, scope: !6941)
!6980 = !DILocation(line: 531, column: 18, scope: !6941)
!6981 = !DILocation(line: 531, column: 28, scope: !6941)
!6982 = !DILocation(line: 531, column: 12, scope: !6941)
!6983 = !DILocation(line: 531, column: 10, scope: !6941)
!6984 = !DILocation(line: 534, column: 10, scope: !6941)
!6985 = !DILocation(line: 534, column: 15, scope: !6941)
!6986 = !DILocation(line: 534, column: 2, scope: !6941)
!6987 = !DILocation(line: 538, column: 7, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 534, column: 26)
!6989 = !DILocation(line: 539, column: 11, scope: !6988)
!6990 = !DILocation(line: 540, column: 11, scope: !6988)
!6991 = !DILocation(line: 541, column: 12, scope: !6988)
!6992 = !DILocation(line: 542, column: 15, scope: !6988)
!6993 = !DILocation(line: 543, column: 3, scope: !6988)
!6994 = !DILocation(line: 545, column: 7, scope: !6988)
!6995 = !DILocation(line: 546, column: 11, scope: !6988)
!6996 = !DILocation(line: 547, column: 11, scope: !6988)
!6997 = !DILocation(line: 548, column: 11, scope: !6988)
!6998 = !DILocation(line: 549, column: 12, scope: !6988)
!6999 = !DILocation(line: 550, column: 15, scope: !6988)
!7000 = !DILocation(line: 551, column: 3, scope: !6988)
!7001 = !DILocation(line: 554, column: 7, scope: !6941)
!7002 = !DILocation(line: 555, column: 9, scope: !6941)
!7003 = !DILocation(line: 555, column: 13, scope: !6941)
!7004 = !DILocation(line: 555, column: 7, scope: !6941)
!7005 = !DILocation(line: 556, column: 9, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 556, column: 2)
!7007 = !DILocation(line: 556, column: 7, scope: !7006)
!7008 = !DILocation(line: 556, column: 14, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 556, column: 2)
!7010 = !DILocation(line: 556, column: 18, scope: !7009)
!7011 = !DILocation(line: 556, column: 16, scope: !7009)
!7012 = !DILocation(line: 556, column: 2, scope: !7006)
!7013 = !DILocation(line: 557, column: 11, scope: !7009)
!7014 = !DILocation(line: 557, column: 8, scope: !7009)
!7015 = !DILocation(line: 557, column: 3, scope: !7009)
!7016 = !DILocation(line: 556, column: 25, scope: !7009)
!7017 = !DILocation(line: 556, column: 2, scope: !7009)
!7018 = distinct !{!7018, !7012, !7019}
!7019 = !DILocation(line: 557, column: 11, scope: !7006)
!7020 = !DILocation(line: 558, column: 8, scope: !6941)
!7021 = !DILocation(line: 559, column: 2, scope: !6941)
!7022 = !DILocation(line: 560, column: 10, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 559, column: 5)
!7024 = !DILocation(line: 560, column: 14, scope: !7023)
!7025 = !DILocation(line: 560, column: 8, scope: !7023)
!7026 = !DILocation(line: 561, column: 5, scope: !7023)
!7027 = !DILocation(line: 562, column: 3, scope: !7023)
!7028 = !DILocation(line: 562, column: 10, scope: !7023)
!7029 = !DILocation(line: 563, column: 12, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 562, column: 16)
!7031 = !DILocation(line: 563, column: 17, scope: !7030)
!7032 = !DILocation(line: 563, column: 11, scope: !7030)
!7033 = !DILocation(line: 563, column: 34, scope: !7030)
!7034 = !DILocation(line: 563, column: 9, scope: !7030)
!7035 = !DILocation(line: 564, column: 12, scope: !7030)
!7036 = !DILocation(line: 564, column: 9, scope: !7030)
!7037 = !DILocation(line: 565, column: 16, scope: !7030)
!7038 = !DILocation(line: 565, column: 27, scope: !7030)
!7039 = !DILocation(line: 565, column: 25, scope: !7030)
!7040 = !DILocation(line: 565, column: 36, scope: !7030)
!7041 = !DILocation(line: 565, column: 42, scope: !7030)
!7042 = !DILocation(line: 565, column: 40, scope: !7030)
!7043 = !DILocation(line: 565, column: 45, scope: !7030)
!7044 = !DILocation(line: 565, column: 50, scope: !7030)
!7045 = !DILocation(line: 565, column: 4, scope: !7030)
!7046 = !DILocation(line: 566, column: 9, scope: !7030)
!7047 = !DILocation(line: 566, column: 14, scope: !7030)
!7048 = !DILocation(line: 566, column: 6, scope: !7030)
!7049 = !DILocation(line: 568, column: 11, scope: !7030)
!7050 = !DILocation(line: 568, column: 17, scope: !7030)
!7051 = !DILocation(line: 568, column: 28, scope: !7030)
!7052 = !DILocation(line: 568, column: 26, scope: !7030)
!7053 = !DILocation(line: 568, column: 4, scope: !7030)
!7054 = !DILocation(line: 569, column: 14, scope: !7030)
!7055 = !DILocation(line: 569, column: 25, scope: !7030)
!7056 = !DILocation(line: 569, column: 23, scope: !7030)
!7057 = !DILocation(line: 569, column: 4, scope: !7030)
!7058 = !DILocation(line: 570, column: 11, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 570, column: 4)
!7060 = !DILocation(line: 570, column: 9, scope: !7059)
!7061 = !DILocation(line: 570, column: 16, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 570, column: 4)
!7063 = !DILocation(line: 570, column: 18, scope: !7062)
!7064 = !DILocation(line: 570, column: 4, scope: !7059)
!7065 = !DILocation(line: 571, column: 15, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 571, column: 9)
!7067 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 570, column: 30)
!7068 = !DILocation(line: 571, column: 26, scope: !7066)
!7069 = !DILocation(line: 571, column: 24, scope: !7066)
!7070 = !DILocation(line: 571, column: 9, scope: !7066)
!7071 = !DILocation(line: 571, column: 34, scope: !7066)
!7072 = !DILocation(line: 571, column: 31, scope: !7066)
!7073 = !DILocation(line: 571, column: 9, scope: !7067)
!7074 = !DILocation(line: 572, column: 6, scope: !7066)
!7075 = !DILocation(line: 573, column: 5, scope: !7067)
!7076 = !DILocation(line: 574, column: 4, scope: !7067)
!7077 = !DILocation(line: 570, column: 26, scope: !7062)
!7078 = !DILocation(line: 570, column: 4, scope: !7062)
!7079 = distinct !{!7079, !7064, !7080}
!7080 = !DILocation(line: 574, column: 4, scope: !7059)
!7081 = !DILocation(line: 575, column: 14, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 575, column: 8)
!7083 = !DILocation(line: 575, column: 25, scope: !7082)
!7084 = !DILocation(line: 575, column: 23, scope: !7082)
!7085 = !DILocation(line: 575, column: 8, scope: !7082)
!7086 = !DILocation(line: 575, column: 33, scope: !7082)
!7087 = !DILocation(line: 575, column: 30, scope: !7082)
!7088 = !DILocation(line: 575, column: 8, scope: !7030)
!7089 = !DILocation(line: 576, column: 5, scope: !7082)
!7090 = distinct !{!7090, !7027, !7091}
!7091 = !DILocation(line: 577, column: 3, scope: !7023)
!7092 = !DILocation(line: 578, column: 13, scope: !7023)
!7093 = !DILocation(line: 578, column: 24, scope: !7023)
!7094 = !DILocation(line: 578, column: 22, scope: !7023)
!7095 = !DILocation(line: 578, column: 3, scope: !7023)
!7096 = !DILocation(line: 579, column: 10, scope: !7023)
!7097 = !DILocation(line: 579, column: 16, scope: !7023)
!7098 = !DILocation(line: 579, column: 27, scope: !7023)
!7099 = !DILocation(line: 579, column: 25, scope: !7023)
!7100 = !DILocation(line: 579, column: 3, scope: !7023)
!7101 = !DILocation(line: 580, column: 13, scope: !7023)
!7102 = !DILocation(line: 580, column: 24, scope: !7023)
!7103 = !DILocation(line: 580, column: 22, scope: !7023)
!7104 = !DILocation(line: 580, column: 3, scope: !7023)
!7105 = !DILocation(line: 581, column: 10, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 581, column: 3)
!7107 = !DILocation(line: 581, column: 8, scope: !7106)
!7108 = !DILocation(line: 581, column: 15, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 581, column: 3)
!7110 = !DILocation(line: 581, column: 17, scope: !7109)
!7111 = !DILocation(line: 581, column: 3, scope: !7106)
!7112 = !DILocation(line: 582, column: 14, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 582, column: 8)
!7114 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 581, column: 29)
!7115 = !DILocation(line: 582, column: 25, scope: !7113)
!7116 = !DILocation(line: 582, column: 23, scope: !7113)
!7117 = !DILocation(line: 582, column: 8, scope: !7113)
!7118 = !DILocation(line: 582, column: 33, scope: !7113)
!7119 = !DILocation(line: 582, column: 30, scope: !7113)
!7120 = !DILocation(line: 582, column: 8, scope: !7114)
!7121 = !DILocation(line: 583, column: 5, scope: !7113)
!7122 = !DILocation(line: 584, column: 4, scope: !7114)
!7123 = !DILocation(line: 585, column: 3, scope: !7114)
!7124 = !DILocation(line: 581, column: 25, scope: !7109)
!7125 = !DILocation(line: 581, column: 3, scope: !7109)
!7126 = distinct !{!7126, !7111, !7127}
!7127 = !DILocation(line: 585, column: 3, scope: !7106)
!7128 = !DILocation(line: 586, column: 8, scope: !7023)
!7129 = !DILocation(line: 587, column: 2, scope: !7023)
!7130 = !DILocation(line: 587, column: 18, scope: !6941)
!7131 = !DILocation(line: 587, column: 29, scope: !6941)
!7132 = !DILocation(line: 587, column: 27, scope: !6941)
!7133 = !DILocation(line: 587, column: 12, scope: !6941)
!7134 = !DILocation(line: 587, column: 42, scope: !6941)
!7135 = !DILocation(line: 587, column: 48, scope: !6941)
!7136 = !DILocation(line: 587, column: 52, scope: !6941)
!7137 = !DILocation(line: 587, column: 58, scope: !6941)
!7138 = !DILocation(line: 0, scope: !6941)
!7139 = distinct !{!7139, !7021, !7140}
!7140 = !DILocation(line: 587, column: 62, scope: !6941)
!7141 = !DILocation(line: 588, column: 12, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 588, column: 6)
!7143 = !DILocation(line: 588, column: 23, scope: !7142)
!7144 = !DILocation(line: 588, column: 21, scope: !7142)
!7145 = !DILocation(line: 588, column: 6, scope: !7142)
!7146 = !DILocation(line: 588, column: 36, scope: !7142)
!7147 = !DILocation(line: 588, column: 6, scope: !6941)
!7148 = !DILocation(line: 589, column: 3, scope: !7142)
!7149 = !DILocation(line: 591, column: 12, scope: !6941)
!7150 = !DILocation(line: 591, column: 23, scope: !6941)
!7151 = !DILocation(line: 591, column: 21, scope: !6941)
!7152 = !DILocation(line: 591, column: 2, scope: !6941)
!7153 = !DILocation(line: 592, column: 9, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 592, column: 2)
!7155 = !DILocation(line: 592, column: 7, scope: !7154)
!7156 = !DILocation(line: 592, column: 14, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 592, column: 2)
!7158 = !DILocation(line: 592, column: 16, scope: !7157)
!7159 = !DILocation(line: 592, column: 2, scope: !7154)
!7160 = !DILocation(line: 593, column: 13, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 593, column: 7)
!7162 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 592, column: 28)
!7163 = !DILocation(line: 593, column: 22, scope: !7161)
!7164 = !DILocation(line: 593, column: 7, scope: !7161)
!7165 = !DILocation(line: 593, column: 34, scope: !7161)
!7166 = !DILocation(line: 593, column: 7, scope: !7162)
!7167 = !DILocation(line: 594, column: 4, scope: !7161)
!7168 = !DILocation(line: 595, column: 3, scope: !7162)
!7169 = !DILocation(line: 596, column: 2, scope: !7162)
!7170 = !DILocation(line: 592, column: 24, scope: !7157)
!7171 = !DILocation(line: 592, column: 2, scope: !7157)
!7172 = distinct !{!7172, !7159, !7173}
!7173 = !DILocation(line: 596, column: 2, scope: !7154)
!7174 = !DILocation(line: 597, column: 12, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 597, column: 6)
!7176 = !DILocation(line: 597, column: 21, scope: !7175)
!7177 = !DILocation(line: 597, column: 6, scope: !7175)
!7178 = !DILocation(line: 597, column: 33, scope: !7175)
!7179 = !DILocation(line: 597, column: 6, scope: !6941)
!7180 = !DILocation(line: 598, column: 3, scope: !7175)
!7181 = !DILocation(line: 600, column: 6, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 600, column: 6)
!7183 = !DILocation(line: 600, column: 6, scope: !6941)
!7184 = !DILocation(line: 601, column: 7, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 601, column: 7)
!7186 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 600, column: 24)
!7187 = !DILocation(line: 601, column: 12, scope: !7185)
!7188 = !DILocation(line: 601, column: 20, scope: !7185)
!7189 = !DILocation(line: 601, column: 7, scope: !7186)
!7190 = !DILocation(line: 602, column: 19, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 601, column: 42)
!7192 = !DILocation(line: 602, column: 28, scope: !7191)
!7193 = !DILocation(line: 602, column: 4, scope: !7191)
!7194 = !DILocation(line: 603, column: 19, scope: !7191)
!7195 = !DILocation(line: 603, column: 28, scope: !7191)
!7196 = !DILocation(line: 603, column: 4, scope: !7191)
!7197 = !DILocation(line: 604, column: 18, scope: !7191)
!7198 = !DILocation(line: 604, column: 27, scope: !7191)
!7199 = !DILocation(line: 604, column: 4, scope: !7191)
!7200 = !DILocation(line: 605, column: 3, scope: !7191)
!7201 = !DILocation(line: 606, column: 19, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 605, column: 10)
!7203 = !DILocation(line: 606, column: 28, scope: !7202)
!7204 = !DILocation(line: 606, column: 4, scope: !7202)
!7205 = !DILocation(line: 607, column: 19, scope: !7202)
!7206 = !DILocation(line: 607, column: 28, scope: !7202)
!7207 = !DILocation(line: 607, column: 4, scope: !7202)
!7208 = !DILocation(line: 608, column: 18, scope: !7202)
!7209 = !DILocation(line: 608, column: 27, scope: !7202)
!7210 = !DILocation(line: 608, column: 4, scope: !7202)
!7211 = !DILocation(line: 610, column: 2, scope: !7186)
!7212 = !DILocation(line: 611, column: 12, scope: !6941)
!7213 = !DILocation(line: 611, column: 21, scope: !6941)
!7214 = !DILocation(line: 611, column: 2, scope: !6941)
!7215 = !DILocation(line: 612, column: 12, scope: !6941)
!7216 = !DILocation(line: 612, column: 21, scope: !6941)
!7217 = !DILocation(line: 612, column: 2, scope: !6941)
!7218 = !DILocation(line: 613, column: 9, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 613, column: 2)
!7220 = !DILocation(line: 613, column: 7, scope: !7219)
!7221 = !DILocation(line: 613, column: 14, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7219, file: !3, line: 613, column: 2)
!7223 = !DILocation(line: 613, column: 16, scope: !7222)
!7224 = !DILocation(line: 613, column: 2, scope: !7219)
!7225 = !DILocation(line: 614, column: 13, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 614, column: 7)
!7227 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 613, column: 28)
!7228 = !DILocation(line: 614, column: 22, scope: !7226)
!7229 = !DILocation(line: 614, column: 7, scope: !7226)
!7230 = !DILocation(line: 614, column: 34, scope: !7226)
!7231 = !DILocation(line: 614, column: 7, scope: !7227)
!7232 = !DILocation(line: 615, column: 4, scope: !7226)
!7233 = !DILocation(line: 616, column: 3, scope: !7227)
!7234 = !DILocation(line: 617, column: 2, scope: !7227)
!7235 = !DILocation(line: 613, column: 24, scope: !7222)
!7236 = !DILocation(line: 613, column: 2, scope: !7222)
!7237 = distinct !{!7237, !7224, !7238}
!7238 = !DILocation(line: 617, column: 2, scope: !7219)
!7239 = !DILocation(line: 618, column: 12, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 618, column: 6)
!7241 = !DILocation(line: 618, column: 21, scope: !7240)
!7242 = !DILocation(line: 618, column: 6, scope: !7240)
!7243 = !DILocation(line: 618, column: 33, scope: !7240)
!7244 = !DILocation(line: 618, column: 6, scope: !6941)
!7245 = !DILocation(line: 619, column: 3, scope: !7240)
!7246 = !DILocation(line: 621, column: 6, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 621, column: 6)
!7248 = !DILocation(line: 621, column: 6, scope: !6941)
!7249 = !DILocation(line: 622, column: 13, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 621, column: 24)
!7251 = !DILocation(line: 622, column: 22, scope: !7250)
!7252 = !DILocation(line: 622, column: 7, scope: !7250)
!7253 = !DILocation(line: 622, column: 5, scope: !7250)
!7254 = !DILocation(line: 623, column: 7, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 623, column: 7)
!7256 = !DILocation(line: 623, column: 9, scope: !7255)
!7257 = !DILocation(line: 623, column: 7, scope: !7250)
!7258 = !DILocation(line: 624, column: 4, scope: !7255)
!7259 = !DILocation(line: 625, column: 19, scope: !7250)
!7260 = !DILocation(line: 625, column: 21, scope: !7250)
!7261 = !DILocation(line: 625, column: 3, scope: !7250)
!7262 = !DILocation(line: 625, column: 8, scope: !7250)
!7263 = !DILocation(line: 625, column: 17, scope: !7250)
!7264 = !DILocation(line: 626, column: 10, scope: !7250)
!7265 = !DILocation(line: 626, column: 13, scope: !7250)
!7266 = !DILocation(line: 626, column: 22, scope: !7250)
!7267 = !DILocation(line: 626, column: 3, scope: !7250)
!7268 = !DILocation(line: 627, column: 13, scope: !7250)
!7269 = !DILocation(line: 627, column: 22, scope: !7250)
!7270 = !DILocation(line: 627, column: 3, scope: !7250)
!7271 = !DILocation(line: 628, column: 10, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 628, column: 3)
!7273 = !DILocation(line: 628, column: 8, scope: !7272)
!7274 = !DILocation(line: 628, column: 15, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7272, file: !3, line: 628, column: 3)
!7276 = !DILocation(line: 628, column: 17, scope: !7275)
!7277 = !DILocation(line: 628, column: 3, scope: !7272)
!7278 = !DILocation(line: 629, column: 14, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 629, column: 8)
!7280 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 628, column: 29)
!7281 = !DILocation(line: 629, column: 23, scope: !7279)
!7282 = !DILocation(line: 629, column: 8, scope: !7279)
!7283 = !DILocation(line: 629, column: 35, scope: !7279)
!7284 = !DILocation(line: 629, column: 8, scope: !7280)
!7285 = !DILocation(line: 630, column: 5, scope: !7279)
!7286 = !DILocation(line: 631, column: 4, scope: !7280)
!7287 = !DILocation(line: 632, column: 3, scope: !7280)
!7288 = !DILocation(line: 628, column: 25, scope: !7275)
!7289 = !DILocation(line: 628, column: 3, scope: !7275)
!7290 = distinct !{!7290, !7277, !7291}
!7291 = !DILocation(line: 632, column: 3, scope: !7272)
!7292 = !DILocation(line: 633, column: 13, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 633, column: 7)
!7294 = !DILocation(line: 633, column: 22, scope: !7293)
!7295 = !DILocation(line: 633, column: 7, scope: !7293)
!7296 = !DILocation(line: 633, column: 34, scope: !7293)
!7297 = !DILocation(line: 633, column: 7, scope: !7250)
!7298 = !DILocation(line: 634, column: 4, scope: !7293)
!7299 = !DILocation(line: 635, column: 2, scope: !7250)
!7300 = !DILocation(line: 636, column: 16, scope: !6941)
!7301 = !DILocation(line: 636, column: 25, scope: !6941)
!7302 = !DILocation(line: 636, column: 2, scope: !6941)
!7303 = !DILocation(line: 636, column: 7, scope: !6941)
!7304 = !DILocation(line: 636, column: 14, scope: !6941)
!7305 = !DILocation(line: 637, column: 17, scope: !6941)
!7306 = !DILocation(line: 637, column: 26, scope: !6941)
!7307 = !DILocation(line: 637, column: 2, scope: !6941)
!7308 = !DILocation(line: 637, column: 7, scope: !6941)
!7309 = !DILocation(line: 637, column: 15, scope: !6941)
!7310 = !DILocation(line: 638, column: 18, scope: !6941)
!7311 = !DILocation(line: 638, column: 27, scope: !6941)
!7312 = !DILocation(line: 638, column: 2, scope: !6941)
!7313 = !DILocation(line: 638, column: 7, scope: !6941)
!7314 = !DILocation(line: 638, column: 16, scope: !6941)
!7315 = !DILocation(line: 640, column: 2, scope: !6941)
!7316 = !DILocation(line: 641, column: 1, scope: !6941)
!7317 = distinct !DISubprogram(name: "hlist_unhashed_lockless", scope: !7318, file: !7318, line: 819, type: !7319, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7318 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!7319 = !DISubroutineType(types: !7320)
!7320 = !{!141, !7321}
!7321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7322, size: 64)
!7322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!7323 = !DILocalVariable(name: "h", arg: 1, scope: !7317, file: !7318, line: 819, type: !7321)
!7324 = !DILocation(line: 819, column: 68, scope: !7317)
!7325 = !DILocation(line: 821, column: 10, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7317, file: !7318, line: 821, column: 10)
!7327 = !DILocation(line: 821, column: 10, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7326, file: !7318, line: 821, column: 10)
!7329 = !DILocation(line: 821, column: 9, scope: !7317)
!7330 = !DILocation(line: 821, column: 2, scope: !7317)
!7331 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !73, file: !73, line: 660, type: !7332, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7332 = !DISubroutineType(types: !7333)
!7333 = !{null, !230, !113}
!7334 = !DILocalVariable(name: "dev", arg: 1, scope: !7331, file: !73, line: 660, type: !230)
!7335 = !DILocation(line: 660, column: 51, scope: !7331)
!7336 = !DILocalVariable(name: "data", arg: 2, scope: !7331, file: !73, line: 660, type: !113)
!7337 = !DILocation(line: 660, column: 62, scope: !7331)
!7338 = !DILocation(line: 662, column: 21, scope: !7331)
!7339 = !DILocation(line: 662, column: 2, scope: !7331)
!7340 = !DILocation(line: 662, column: 7, scope: !7331)
!7341 = !DILocation(line: 662, column: 19, scope: !7331)
!7342 = !DILocation(line: 663, column: 1, scope: !7331)
!7343 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !4405, file: !4405, line: 1865, type: !7344, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7344 = !DISubroutineType(types: !7345)
!7345 = !{!113, !4425}
!7346 = !DILocalVariable(name: "pdev", arg: 1, scope: !7343, file: !4405, line: 1865, type: !4425)
!7347 = !DILocation(line: 1865, column: 53, scope: !7343)
!7348 = !DILocation(line: 1867, column: 26, scope: !7343)
!7349 = !DILocation(line: 1867, column: 32, scope: !7343)
!7350 = !DILocation(line: 1867, column: 9, scope: !7343)
!7351 = !DILocation(line: 1867, column: 2, scope: !7343)
!7352 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !7353, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7353 = !DISubroutineType(types: !7354)
!7354 = !{!113, !3744}
!7355 = !DILocalVariable(name: "dev", arg: 1, scope: !7352, file: !73, line: 655, type: !3744)
!7356 = !DILocation(line: 655, column: 58, scope: !7352)
!7357 = !DILocation(line: 657, column: 9, scope: !7352)
!7358 = !DILocation(line: 657, column: 14, scope: !7352)
!7359 = !DILocation(line: 657, column: 2, scope: !7352)
!7360 = distinct !DISubprogram(name: "tty_port_initialized", scope: !121, file: !121, line: 664, type: !7361, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7361 = !DISubroutineType(types: !7362)
!7362 = !{!484, !3899}
!7363 = !DILocalVariable(name: "port", arg: 1, scope: !7360, file: !121, line: 664, type: !3899)
!7364 = !DILocation(line: 664, column: 58, scope: !7360)
!7365 = !DILocation(line: 666, column: 41, scope: !7360)
!7366 = !DILocation(line: 666, column: 47, scope: !7360)
!7367 = !DILocation(line: 666, column: 9, scope: !7360)
!7368 = !DILocation(line: 666, column: 2, scope: !7360)
!7369 = distinct !DISubprogram(name: "test_bit", scope: !7370, file: !7370, line: 132, type: !7371, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7370 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7371 = !DISubroutineType(types: !7372)
!7372 = !{!484, !311, !7373}
!7373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7374, size: 64)
!7374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7375)
!7375 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !148)
!7376 = !DILocalVariable(name: "nr", arg: 1, scope: !7377, file: !5984, line: 210, type: !311)
!7377 = distinct !DISubprogram(name: "variable_test_bit", scope: !5984, file: !5984, line: 210, type: !7371, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7378 = !DILocation(line: 210, column: 52, scope: !7377, inlinedAt: !7379)
!7379 = distinct !DILocation(line: 135, column: 9, scope: !7369)
!7380 = !DILocalVariable(name: "addr", arg: 2, scope: !7377, file: !5984, line: 210, type: !7373)
!7381 = !DILocation(line: 210, column: 86, scope: !7377, inlinedAt: !7379)
!7382 = !DILocalVariable(name: "oldbit", scope: !7377, file: !5984, line: 212, type: !484)
!7383 = !DILocation(line: 212, column: 7, scope: !7377, inlinedAt: !7379)
!7384 = !DILocalVariable(name: "nr", arg: 1, scope: !7385, file: !5984, line: 204, type: !311)
!7385 = distinct !DISubprogram(name: "constant_test_bit", scope: !5984, file: !5984, line: 204, type: !7371, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7386 = !DILocation(line: 204, column: 52, scope: !7385, inlinedAt: !7387)
!7387 = distinct !DILocation(line: 135, column: 9, scope: !7369)
!7388 = !DILocalVariable(name: "addr", arg: 2, scope: !7385, file: !5984, line: 204, type: !7373)
!7389 = !DILocation(line: 204, column: 86, scope: !7385, inlinedAt: !7387)
!7390 = !DILocalVariable(name: "v", arg: 1, scope: !7391, file: !7392, line: 69, type: !6332)
!7391 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !7392, file: !7392, line: 69, type: !7393, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7392 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7393 = !DISubroutineType(types: !7394)
!7394 = !{null, !6332, !323}
!7395 = !DILocation(line: 69, column: 73, scope: !7391, inlinedAt: !7396)
!7396 = distinct !DILocation(line: 134, column: 2, scope: !7369)
!7397 = !DILocalVariable(name: "size", arg: 2, scope: !7391, file: !7392, line: 69, type: !323)
!7398 = !DILocation(line: 69, column: 83, scope: !7391, inlinedAt: !7396)
!7399 = !DILocalVariable(name: "nr", arg: 1, scope: !7369, file: !7370, line: 132, type: !311)
!7400 = !DILocation(line: 132, column: 34, scope: !7369)
!7401 = !DILocalVariable(name: "addr", arg: 2, scope: !7369, file: !7370, line: 132, type: !7373)
!7402 = !DILocation(line: 132, column: 68, scope: !7369)
!7403 = !DILocation(line: 134, column: 25, scope: !7369)
!7404 = !DILocation(line: 134, column: 32, scope: !7369)
!7405 = !DILocation(line: 134, column: 30, scope: !7369)
!7406 = !DILocation(line: 71, column: 19, scope: !7391, inlinedAt: !7396)
!7407 = !DILocation(line: 71, column: 22, scope: !7391, inlinedAt: !7396)
!7408 = !DILocation(line: 71, column: 2, scope: !7391, inlinedAt: !7396)
!7409 = !DILocation(line: 72, column: 2, scope: !7391, inlinedAt: !7396)
!7410 = !DILocation(line: 135, column: 9, scope: !7369)
!7411 = !DILocation(line: 206, column: 19, scope: !7385, inlinedAt: !7387)
!7412 = !DILocation(line: 206, column: 22, scope: !7385, inlinedAt: !7387)
!7413 = !DILocation(line: 206, column: 15, scope: !7385, inlinedAt: !7387)
!7414 = !DILocation(line: 207, column: 4, scope: !7385, inlinedAt: !7387)
!7415 = !DILocation(line: 207, column: 9, scope: !7385, inlinedAt: !7387)
!7416 = !DILocation(line: 207, column: 12, scope: !7385, inlinedAt: !7387)
!7417 = !DILocation(line: 206, column: 44, scope: !7385, inlinedAt: !7387)
!7418 = !DILocation(line: 207, column: 37, scope: !7385, inlinedAt: !7387)
!7419 = !DILocation(line: 217, column: 33, scope: !7377, inlinedAt: !7379)
!7420 = !DILocation(line: 217, column: 46, scope: !7377, inlinedAt: !7379)
!7421 = !DILocation(line: 214, column: 2, scope: !7377, inlinedAt: !7379)
!7422 = !{i32 -2147093083, i32 -2147093023}
!7423 = !DILocation(line: 219, column: 9, scope: !7377, inlinedAt: !7379)
!7424 = !DILocation(line: 135, column: 2, scope: !7369)
!7425 = distinct !DISubprogram(name: "kasan_check_read", scope: !7426, file: !7426, line: 34, type: !7427, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7426 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7427 = !DISubroutineType(types: !7428)
!7428 = !{!484, !6332, !7}
!7429 = !DILocalVariable(name: "p", arg: 1, scope: !7425, file: !7426, line: 34, type: !6332)
!7430 = !DILocation(line: 34, column: 58, scope: !7425)
!7431 = !DILocalVariable(name: "size", arg: 2, scope: !7425, file: !7426, line: 34, type: !7)
!7432 = !DILocation(line: 34, column: 74, scope: !7425)
!7433 = !DILocation(line: 36, column: 2, scope: !7425)
!7434 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7435, file: !7435, line: 178, type: !7436, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7435 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7436 = !DISubroutineType(types: !7437)
!7437 = !{null, !6332, !323, !141}
!7438 = !DILocalVariable(name: "ptr", arg: 1, scope: !7434, file: !7435, line: 178, type: !6332)
!7439 = !DILocation(line: 178, column: 60, scope: !7434)
!7440 = !DILocalVariable(name: "size", arg: 2, scope: !7434, file: !7435, line: 178, type: !323)
!7441 = !DILocation(line: 178, column: 72, scope: !7434)
!7442 = !DILocalVariable(name: "type", arg: 3, scope: !7434, file: !7435, line: 179, type: !141)
!7443 = !DILocation(line: 179, column: 15, scope: !7434)
!7444 = !DILocation(line: 179, column: 23, scope: !7434)
!7445 = distinct !DISubprogram(name: "moxa_poll", scope: !3, file: !3, line: 1424, type: !3604, scopeLine: 1425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7446 = !DILocalVariable(name: "lock", arg: 1, scope: !7447, file: !5608, line: 392, type: !1085)
!7447 = distinct !DISubprogram(name: "spin_unlock", scope: !5608, file: !5608, line: 392, type: !5609, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7448 = !DILocation(line: 392, column: 53, scope: !7447, inlinedAt: !7449)
!7449 = distinct !DILocation(line: 1461, column: 2, scope: !7445)
!7450 = !DILocalVariable(name: "lock", arg: 1, scope: !7451, file: !5608, line: 352, type: !1085)
!7451 = distinct !DISubprogram(name: "spin_lock", scope: !5608, file: !5608, line: 352, type: !5609, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7452 = !DILocation(line: 352, column: 51, scope: !7451, inlinedAt: !7453)
!7453 = distinct !DILocation(line: 1430, column: 2, scope: !7445)
!7454 = !DILocalVariable(name: "unused", arg: 1, scope: !7445, file: !3, line: 1424, type: !3606)
!7455 = !DILocation(line: 1424, column: 42, scope: !7445)
!7456 = !DILocalVariable(name: "brd", scope: !7445, file: !3, line: 1426, type: !4218)
!7457 = !DILocation(line: 1426, column: 26, scope: !7445)
!7458 = !DILocalVariable(name: "ip", scope: !7445, file: !3, line: 1427, type: !7459)
!7459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!7460 = !DILocation(line: 1427, column: 15, scope: !7445)
!7461 = !DILocalVariable(name: "card", scope: !7445, file: !3, line: 1428, type: !7)
!7462 = !DILocation(line: 1428, column: 15, scope: !7445)
!7463 = !DILocalVariable(name: "port", scope: !7445, file: !3, line: 1428, type: !7)
!7464 = !DILocation(line: 1428, column: 21, scope: !7445)
!7465 = !DILocalVariable(name: "served", scope: !7445, file: !3, line: 1428, type: !7)
!7466 = !DILocation(line: 1428, column: 27, scope: !7445)
!7467 = !DILocation(line: 354, column: 2, scope: !7468, inlinedAt: !7453)
!7468 = distinct !DILexicalBlock(scope: !7451, file: !5608, line: 354, column: 2)
!7469 = !{i32 -2145429187}
!7470 = !DILocation(line: 354, column: 2, scope: !7471, inlinedAt: !7453)
!7471 = distinct !DILexicalBlock(scope: !7468, file: !5608, line: 354, column: 2)
!7472 = !DILocation(line: 1431, column: 12, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1431, column: 2)
!7474 = !DILocation(line: 1431, column: 7, scope: !7473)
!7475 = !DILocation(line: 1431, column: 17, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 1431, column: 2)
!7477 = !DILocation(line: 1431, column: 22, scope: !7476)
!7478 = !DILocation(line: 1431, column: 2, scope: !7473)
!7479 = !DILocation(line: 1432, column: 22, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 1431, column: 44)
!7481 = !DILocation(line: 1432, column: 10, scope: !7480)
!7482 = !DILocation(line: 1432, column: 7, scope: !7480)
!7483 = !DILocation(line: 1433, column: 8, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 1433, column: 7)
!7485 = !DILocation(line: 1433, column: 13, scope: !7484)
!7486 = !DILocation(line: 1433, column: 7, scope: !7480)
!7487 = !DILocation(line: 1434, column: 4, scope: !7484)
!7488 = !DILocation(line: 1436, column: 9, scope: !7480)
!7489 = !DILocation(line: 1438, column: 6, scope: !7480)
!7490 = !DILocation(line: 1439, column: 13, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 1439, column: 7)
!7492 = !DILocation(line: 1439, column: 18, scope: !7491)
!7493 = !DILocation(line: 1439, column: 7, scope: !7491)
!7494 = !DILocation(line: 1439, column: 27, scope: !7491)
!7495 = !DILocation(line: 1439, column: 7, scope: !7480)
!7496 = !DILocation(line: 1440, column: 9, scope: !7491)
!7497 = !DILocation(line: 1440, column: 14, scope: !7491)
!7498 = !DILocation(line: 1440, column: 31, scope: !7491)
!7499 = !DILocation(line: 1440, column: 36, scope: !7491)
!7500 = !DILocation(line: 1440, column: 25, scope: !7491)
!7501 = !DILocation(line: 1440, column: 23, scope: !7491)
!7502 = !DILocation(line: 1440, column: 7, scope: !7491)
!7503 = !DILocation(line: 1440, column: 4, scope: !7491)
!7504 = !DILocation(line: 1442, column: 13, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 1442, column: 3)
!7506 = !DILocation(line: 1442, column: 8, scope: !7505)
!7507 = !DILocation(line: 1442, column: 18, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7505, file: !3, line: 1442, column: 3)
!7509 = !DILocation(line: 1442, column: 25, scope: !7508)
!7510 = !DILocation(line: 1442, column: 30, scope: !7508)
!7511 = !DILocation(line: 1442, column: 23, scope: !7508)
!7512 = !DILocation(line: 1442, column: 3, scope: !7505)
!7513 = !DILocation(line: 1443, column: 20, scope: !7508)
!7514 = !DILocation(line: 1443, column: 25, scope: !7508)
!7515 = !DILocation(line: 1443, column: 31, scope: !7508)
!7516 = !DILocation(line: 1443, column: 40, scope: !7508)
!7517 = !DILocation(line: 1443, column: 39, scope: !7508)
!7518 = !DILocation(line: 1443, column: 38, scope: !7508)
!7519 = !DILocation(line: 1443, column: 44, scope: !7508)
!7520 = !DILocation(line: 1443, column: 49, scope: !7508)
!7521 = !DILocation(line: 1443, column: 47, scope: !7508)
!7522 = !DILocation(line: 1443, column: 4, scope: !7508)
!7523 = !DILocation(line: 1442, column: 44, scope: !7508)
!7524 = !DILocation(line: 1442, column: 3, scope: !7508)
!7525 = distinct !{!7525, !7512, !7526}
!7526 = !DILocation(line: 1443, column: 53, scope: !7505)
!7527 = !DILocation(line: 1445, column: 7, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 1445, column: 7)
!7529 = !DILocation(line: 1445, column: 7, scope: !7480)
!7530 = !DILocation(line: 1446, column: 14, scope: !7528)
!7531 = !DILocation(line: 1446, column: 19, scope: !7528)
!7532 = !DILocation(line: 1446, column: 4, scope: !7528)
!7533 = !DILocation(line: 1448, column: 7, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 1448, column: 7)
!7535 = !DILocation(line: 1448, column: 7, scope: !7480)
!7536 = !DILocalVariable(name: "p", scope: !7537, file: !3, line: 1449, type: !116)
!7537 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 1448, column: 24)
!7538 = !DILocation(line: 1449, column: 22, scope: !7537)
!7539 = !DILocation(line: 1449, column: 26, scope: !7537)
!7540 = !DILocation(line: 1449, column: 31, scope: !7537)
!7541 = !DILocation(line: 1450, column: 14, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 1450, column: 4)
!7543 = !DILocation(line: 1450, column: 9, scope: !7542)
!7544 = !DILocation(line: 1450, column: 19, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 1450, column: 4)
!7546 = !DILocation(line: 1450, column: 26, scope: !7545)
!7547 = !DILocation(line: 1450, column: 31, scope: !7545)
!7548 = !DILocation(line: 1450, column: 24, scope: !7545)
!7549 = !DILocation(line: 1450, column: 4, scope: !7542)
!7550 = !DILocation(line: 1451, column: 9, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7545, file: !3, line: 1451, column: 9)
!7552 = !DILocation(line: 1451, column: 12, scope: !7551)
!7553 = !DILocation(line: 1451, column: 9, scope: !7545)
!7554 = !DILocation(line: 1452, column: 6, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7551, file: !3, line: 1451, column: 24)
!7556 = !DILocation(line: 1452, column: 9, scope: !7555)
!7557 = !DILocation(line: 1452, column: 20, scope: !7555)
!7558 = !DILocation(line: 1453, column: 27, scope: !7555)
!7559 = !DILocation(line: 1453, column: 30, scope: !7555)
!7560 = !DILocation(line: 1453, column: 6, scope: !7555)
!7561 = !DILocation(line: 1454, column: 5, scope: !7555)
!7562 = !DILocation(line: 1450, column: 45, scope: !7545)
!7563 = !DILocation(line: 1450, column: 50, scope: !7545)
!7564 = !DILocation(line: 1450, column: 4, scope: !7545)
!7565 = distinct !{!7565, !7549, !7566}
!7566 = !DILocation(line: 1454, column: 5, scope: !7542)
!7567 = !DILocation(line: 1455, column: 3, scope: !7537)
!7568 = !DILocation(line: 1456, column: 2, scope: !7480)
!7569 = !DILocation(line: 1431, column: 40, scope: !7476)
!7570 = !DILocation(line: 1431, column: 2, scope: !7476)
!7571 = distinct !{!7571, !7478, !7572}
!7572 = !DILocation(line: 1456, column: 2, scope: !7473)
!7573 = !DILocation(line: 1457, column: 18, scope: !7445)
!7574 = !DILocation(line: 1459, column: 6, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1459, column: 6)
!7576 = !DILocation(line: 1459, column: 6, scope: !7445)
!7577 = !DILocation(line: 1460, column: 25, scope: !7575)
!7578 = !DILocation(line: 1460, column: 33, scope: !7575)
!7579 = !DILocation(line: 1460, column: 3, scope: !7575)
!7580 = !DILocation(line: 394, column: 2, scope: !7581, inlinedAt: !7449)
!7581 = distinct !DILexicalBlock(scope: !7447, file: !5608, line: 394, column: 2)
!7582 = !{i32 -2145426826}
!7583 = !DILocation(line: 394, column: 2, scope: !7584, inlinedAt: !7449)
!7584 = distinct !DILexicalBlock(scope: !7581, file: !5608, line: 394, column: 2)
!7585 = !DILocation(line: 1462, column: 1, scope: !7445)
!7586 = distinct !DISubprogram(name: "moxa_poll_port", scope: !3, file: !3, line: 1365, type: !7587, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7587 = !DISubroutineType(types: !7588)
!7588 = !{!141, !116, !7, !7459}
!7589 = !DILocalVariable(name: "p", arg: 1, scope: !7586, file: !3, line: 1365, type: !116)
!7590 = !DILocation(line: 1365, column: 45, scope: !7586)
!7591 = !DILocalVariable(name: "handle", arg: 2, scope: !7586, file: !3, line: 1365, type: !7)
!7592 = !DILocation(line: 1365, column: 61, scope: !7586)
!7593 = !DILocalVariable(name: "ip", arg: 3, scope: !7586, file: !3, line: 1366, type: !7459)
!7594 = !DILocation(line: 1366, column: 16, scope: !7586)
!7595 = !DILocalVariable(name: "tty", scope: !7586, file: !3, line: 1368, type: !215)
!7596 = !DILocation(line: 1368, column: 21, scope: !7586)
!7597 = !DILocation(line: 1368, column: 45, scope: !7586)
!7598 = !DILocation(line: 1368, column: 48, scope: !7586)
!7599 = !DILocation(line: 1368, column: 27, scope: !7586)
!7600 = !DILocalVariable(name: "ofsAddr", scope: !7586, file: !3, line: 1369, type: !113)
!7601 = !DILocation(line: 1369, column: 16, scope: !7586)
!7602 = !DILocalVariable(name: "inited", scope: !7586, file: !3, line: 1370, type: !7)
!7603 = !DILocation(line: 1370, column: 15, scope: !7586)
!7604 = !DILocation(line: 1370, column: 46, scope: !7586)
!7605 = !DILocation(line: 1370, column: 49, scope: !7586)
!7606 = !DILocation(line: 1370, column: 24, scope: !7586)
!7607 = !DILocalVariable(name: "intr", scope: !7586, file: !3, line: 1371, type: !879)
!7608 = !DILocation(line: 1371, column: 6, scope: !7586)
!7609 = !DILocation(line: 1373, column: 6, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 1373, column: 6)
!7611 = !DILocation(line: 1373, column: 6, scope: !7586)
!7612 = !DILocation(line: 1374, column: 28, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 1374, column: 7)
!7614 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 1373, column: 11)
!7615 = !DILocation(line: 1374, column: 31, scope: !7613)
!7616 = !DILocation(line: 1374, column: 7, scope: !7613)
!7617 = !DILocation(line: 1374, column: 44, scope: !7613)
!7618 = !DILocation(line: 1375, column: 21, scope: !7613)
!7619 = !DILocation(line: 1375, column: 5, scope: !7613)
!7620 = !DILocation(line: 1375, column: 24, scope: !7613)
!7621 = !DILocation(line: 1374, column: 7, scope: !7614)
!7622 = !DILocation(line: 1376, column: 26, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 1375, column: 30)
!7624 = !DILocation(line: 1376, column: 29, scope: !7623)
!7625 = !DILocation(line: 1376, column: 4, scope: !7623)
!7626 = !DILocation(line: 1377, column: 15, scope: !7623)
!7627 = !DILocation(line: 1377, column: 4, scope: !7623)
!7628 = !DILocation(line: 1378, column: 3, scope: !7623)
!7629 = !DILocation(line: 1379, column: 26, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 1379, column: 7)
!7631 = !DILocation(line: 1379, column: 29, scope: !7630)
!7632 = !DILocation(line: 1379, column: 7, scope: !7630)
!7633 = !DILocation(line: 1379, column: 42, scope: !7630)
!7634 = !DILocation(line: 1379, column: 46, scope: !7630)
!7635 = !DILocation(line: 1379, column: 51, scope: !7630)
!7636 = !DILocation(line: 1379, column: 59, scope: !7630)
!7637 = !DILocation(line: 1380, column: 21, scope: !7630)
!7638 = !DILocation(line: 1380, column: 5, scope: !7630)
!7639 = !DILocation(line: 1380, column: 24, scope: !7630)
!7640 = !DILocation(line: 1379, column: 7, scope: !7614)
!7641 = !DILocation(line: 1381, column: 24, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7630, file: !3, line: 1380, column: 41)
!7643 = !DILocation(line: 1381, column: 27, scope: !7642)
!7644 = !DILocation(line: 1381, column: 4, scope: !7642)
!7645 = !DILocation(line: 1382, column: 15, scope: !7642)
!7646 = !DILocation(line: 1382, column: 4, scope: !7642)
!7647 = !DILocation(line: 1383, column: 3, scope: !7642)
!7648 = !DILocation(line: 1385, column: 7, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 1385, column: 7)
!7650 = !DILocation(line: 1385, column: 14, scope: !7649)
!7651 = !DILocation(line: 1385, column: 32, scope: !7649)
!7652 = !DILocation(line: 1385, column: 18, scope: !7649)
!7653 = !DILocation(line: 1385, column: 37, scope: !7649)
!7654 = !DILocation(line: 1386, column: 21, scope: !7649)
!7655 = !DILocation(line: 1386, column: 5, scope: !7649)
!7656 = !DILocation(line: 1386, column: 24, scope: !7649)
!7657 = !DILocation(line: 1385, column: 7, scope: !7614)
!7658 = !DILocation(line: 1387, column: 21, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 1386, column: 29)
!7660 = !DILocation(line: 1387, column: 4, scope: !7659)
!7661 = !DILocation(line: 1388, column: 23, scope: !7659)
!7662 = !DILocation(line: 1388, column: 26, scope: !7659)
!7663 = !DILocation(line: 1388, column: 4, scope: !7659)
!7664 = !DILocation(line: 1389, column: 3, scope: !7659)
!7665 = !DILocation(line: 1390, column: 2, scope: !7614)
!7666 = !DILocation(line: 1391, column: 25, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 1390, column: 9)
!7668 = !DILocation(line: 1391, column: 28, scope: !7667)
!7669 = !DILocation(line: 1391, column: 3, scope: !7667)
!7670 = !DILocation(line: 1392, column: 21, scope: !7667)
!7671 = !DILocation(line: 1392, column: 3, scope: !7667)
!7672 = !DILocation(line: 1395, column: 7, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 1395, column: 6)
!7674 = !DILocation(line: 1395, column: 6, scope: !7586)
!7675 = !DILocation(line: 1396, column: 3, scope: !7673)
!7676 = !DILocation(line: 1398, column: 15, scope: !7586)
!7677 = !DILocation(line: 1398, column: 9, scope: !7586)
!7678 = !DILocation(line: 1398, column: 7, scope: !7586)
!7679 = !DILocation(line: 1399, column: 6, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 1399, column: 6)
!7681 = !DILocation(line: 1399, column: 11, scope: !7680)
!7682 = !DILocation(line: 1399, column: 6, scope: !7586)
!7683 = !DILocation(line: 1400, column: 3, scope: !7680)
!7684 = !DILocation(line: 1402, column: 12, scope: !7586)
!7685 = !DILocation(line: 1402, column: 2, scope: !7586)
!7686 = !DILocation(line: 1403, column: 12, scope: !7586)
!7687 = !DILocation(line: 1403, column: 15, scope: !7586)
!7688 = !DILocation(line: 1403, column: 10, scope: !7586)
!7689 = !DILocation(line: 1404, column: 6, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 1404, column: 6)
!7691 = !DILocation(line: 1404, column: 11, scope: !7690)
!7692 = !DILocation(line: 1404, column: 6, scope: !7586)
!7693 = !DILocation(line: 1405, column: 16, scope: !7690)
!7694 = !DILocation(line: 1405, column: 24, scope: !7690)
!7695 = !DILocation(line: 1405, column: 10, scope: !7690)
!7696 = !DILocation(line: 1405, column: 36, scope: !7690)
!7697 = !DILocation(line: 1406, column: 5, scope: !7690)
!7698 = !DILocation(line: 1406, column: 13, scope: !7690)
!7699 = !DILocation(line: 1405, column: 3, scope: !7690)
!7700 = !DILocation(line: 1408, column: 7, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 1408, column: 6)
!7702 = !DILocation(line: 1408, column: 6, scope: !7586)
!7703 = !DILocation(line: 1409, column: 3, scope: !7701)
!7704 = !DILocation(line: 1411, column: 6, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 1411, column: 6)
!7706 = !DILocation(line: 1411, column: 10, scope: !7705)
!7707 = !DILocation(line: 1411, column: 14, scope: !7705)
!7708 = !DILocation(line: 1411, column: 19, scope: !7705)
!7709 = !DILocation(line: 1411, column: 32, scope: !7705)
!7710 = !DILocation(line: 1411, column: 36, scope: !7705)
!7711 = !DILocation(line: 1411, column: 6, scope: !7586)
!7712 = !DILocation(line: 1412, column: 25, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 1411, column: 51)
!7714 = !DILocation(line: 1412, column: 28, scope: !7713)
!7715 = !DILocation(line: 1412, column: 3, scope: !7713)
!7716 = !DILocation(line: 1413, column: 22, scope: !7713)
!7717 = !DILocation(line: 1413, column: 25, scope: !7713)
!7718 = !DILocation(line: 1413, column: 3, scope: !7713)
!7719 = !DILocation(line: 1414, column: 2, scope: !7713)
!7720 = !DILocation(line: 1416, column: 6, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7586, file: !3, line: 1416, column: 6)
!7722 = !DILocation(line: 1416, column: 11, scope: !7721)
!7723 = !DILocation(line: 1416, column: 6, scope: !7586)
!7724 = !DILocation(line: 1417, column: 21, scope: !7721)
!7725 = !DILocation(line: 1417, column: 30, scope: !7721)
!7726 = !DILocation(line: 1417, column: 38, scope: !7721)
!7727 = !DILocation(line: 1417, column: 24, scope: !7721)
!7728 = !DILocation(line: 1417, column: 50, scope: !7721)
!7729 = !DILocation(line: 1417, column: 3, scope: !7721)
!7730 = !DILocation(line: 1416, column: 13, scope: !7721)
!7731 = !DILabel(scope: !7586, name: "put", file: !3, line: 1418)
!7732 = !DILocation(line: 1418, column: 1, scope: !7586)
!7733 = !DILocation(line: 1419, column: 15, scope: !7586)
!7734 = !DILocation(line: 1419, column: 2, scope: !7586)
!7735 = !DILocation(line: 1421, column: 2, scope: !7586)
!7736 = distinct !DISubprogram(name: "MoxaPortTxQueue", scope: !3, file: !3, line: 1986, type: !7737, scopeLine: 1987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7737 = !DISubroutineType(types: !7738)
!7738 = !{!141, !116}
!7739 = !DILocalVariable(name: "port", arg: 1, scope: !7736, file: !3, line: 1986, type: !116)
!7740 = !DILocation(line: 1986, column: 46, scope: !7736)
!7741 = !DILocalVariable(name: "ofsAddr", scope: !7736, file: !3, line: 1988, type: !113)
!7742 = !DILocation(line: 1988, column: 16, scope: !7736)
!7743 = !DILocation(line: 1988, column: 26, scope: !7736)
!7744 = !DILocation(line: 1988, column: 32, scope: !7736)
!7745 = !DILocalVariable(name: "rptr", scope: !7736, file: !3, line: 1989, type: !879)
!7746 = !DILocation(line: 1989, column: 6, scope: !7736)
!7747 = !DILocalVariable(name: "wptr", scope: !7736, file: !3, line: 1989, type: !879)
!7748 = !DILocation(line: 1989, column: 12, scope: !7736)
!7749 = !DILocalVariable(name: "mask", scope: !7736, file: !3, line: 1989, type: !879)
!7750 = !DILocation(line: 1989, column: 18, scope: !7736)
!7751 = !DILocation(line: 1991, column: 15, scope: !7736)
!7752 = !DILocation(line: 1991, column: 23, scope: !7736)
!7753 = !DILocation(line: 1991, column: 9, scope: !7736)
!7754 = !DILocation(line: 1991, column: 7, scope: !7736)
!7755 = !DILocation(line: 1992, column: 15, scope: !7736)
!7756 = !DILocation(line: 1992, column: 23, scope: !7736)
!7757 = !DILocation(line: 1992, column: 9, scope: !7736)
!7758 = !DILocation(line: 1992, column: 7, scope: !7736)
!7759 = !DILocation(line: 1993, column: 15, scope: !7736)
!7760 = !DILocation(line: 1993, column: 23, scope: !7736)
!7761 = !DILocation(line: 1993, column: 9, scope: !7736)
!7762 = !DILocation(line: 1993, column: 7, scope: !7736)
!7763 = !DILocation(line: 1994, column: 10, scope: !7736)
!7764 = !DILocation(line: 1994, column: 17, scope: !7736)
!7765 = !DILocation(line: 1994, column: 15, scope: !7736)
!7766 = !DILocation(line: 1994, column: 25, scope: !7736)
!7767 = !DILocation(line: 1994, column: 23, scope: !7736)
!7768 = !DILocation(line: 1994, column: 2, scope: !7736)
!7769 = distinct !DISubprogram(name: "clear_bit", scope: !7770, file: !7770, line: 39, type: !7771, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7770 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7771 = !DISubroutineType(types: !7772)
!7772 = !{null, !311, !7773}
!7773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7375, size: 64)
!7774 = !DILocalVariable(name: "nr", arg: 1, scope: !7775, file: !5984, line: 72, type: !311)
!7775 = distinct !DISubprogram(name: "arch_clear_bit", scope: !5984, file: !5984, line: 72, type: !7771, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7776 = !DILocation(line: 72, column: 21, scope: !7775, inlinedAt: !7777)
!7777 = distinct !DILocation(line: 42, column: 2, scope: !7769)
!7778 = !DILocalVariable(name: "addr", arg: 2, scope: !7775, file: !5984, line: 72, type: !7773)
!7779 = !DILocation(line: 72, column: 49, scope: !7775, inlinedAt: !7777)
!7780 = !DILocalVariable(name: "v", arg: 1, scope: !7781, file: !7392, line: 84, type: !6332)
!7781 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !7392, file: !7392, line: 84, type: !7393, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7782 = !DILocation(line: 84, column: 74, scope: !7781, inlinedAt: !7783)
!7783 = distinct !DILocation(line: 41, column: 2, scope: !7769)
!7784 = !DILocalVariable(name: "size", arg: 2, scope: !7781, file: !7392, line: 84, type: !323)
!7785 = !DILocation(line: 84, column: 84, scope: !7781, inlinedAt: !7783)
!7786 = !DILocalVariable(name: "nr", arg: 1, scope: !7769, file: !7770, line: 39, type: !311)
!7787 = !DILocation(line: 39, column: 35, scope: !7769)
!7788 = !DILocalVariable(name: "addr", arg: 2, scope: !7769, file: !7770, line: 39, type: !7773)
!7789 = !DILocation(line: 39, column: 63, scope: !7769)
!7790 = !DILocation(line: 41, column: 26, scope: !7769)
!7791 = !DILocation(line: 41, column: 33, scope: !7769)
!7792 = !DILocation(line: 41, column: 31, scope: !7769)
!7793 = !DILocation(line: 86, column: 20, scope: !7781, inlinedAt: !7783)
!7794 = !DILocation(line: 86, column: 23, scope: !7781, inlinedAt: !7783)
!7795 = !DILocation(line: 86, column: 2, scope: !7781, inlinedAt: !7783)
!7796 = !DILocation(line: 87, column: 2, scope: !7781, inlinedAt: !7783)
!7797 = !DILocation(line: 42, column: 17, scope: !7769)
!7798 = !DILocation(line: 42, column: 21, scope: !7769)
!7799 = !DILocation(line: 74, column: 27, scope: !7800, inlinedAt: !7777)
!7800 = distinct !DILexicalBlock(scope: !7775, file: !5984, line: 74, column: 6)
!7801 = !DILocation(line: 74, column: 6, scope: !7800, inlinedAt: !7777)
!7802 = !DILocation(line: 74, column: 6, scope: !7775, inlinedAt: !7777)
!7803 = !DILocation(line: 76, column: 6, scope: !7804, inlinedAt: !7777)
!7804 = distinct !DILexicalBlock(scope: !7800, file: !5984, line: 74, column: 32)
!7805 = !DILocation(line: 77, column: 13, scope: !7804, inlinedAt: !7777)
!7806 = !DILocation(line: 77, column: 12, scope: !7804, inlinedAt: !7777)
!7807 = !DILocation(line: 75, column: 3, scope: !7804, inlinedAt: !7777)
!7808 = !{i32 -2147101377}
!7809 = !DILocation(line: 78, column: 2, scope: !7804, inlinedAt: !7777)
!7810 = !DILocation(line: 80, column: 8, scope: !7811, inlinedAt: !7777)
!7811 = distinct !DILexicalBlock(scope: !7800, file: !5984, line: 78, column: 9)
!7812 = !DILocation(line: 80, column: 32, scope: !7811, inlinedAt: !7777)
!7813 = !DILocation(line: 79, column: 3, scope: !7811, inlinedAt: !7777)
!7814 = !{i32 -2147101245}
!7815 = !DILocation(line: 43, column: 1, scope: !7769)
!7816 = distinct !DISubprogram(name: "tty_throttled", scope: !121, file: !121, line: 404, type: !7817, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7817 = !DISubroutineType(types: !7818)
!7818 = !{!484, !215}
!7819 = !DILocalVariable(name: "tty", arg: 1, scope: !7816, file: !121, line: 404, type: !215)
!7820 = !DILocation(line: 404, column: 53, scope: !7816)
!7821 = !DILocation(line: 406, column: 34, scope: !7816)
!7822 = !DILocation(line: 406, column: 39, scope: !7816)
!7823 = !DILocation(line: 406, column: 9, scope: !7816)
!7824 = !DILocation(line: 406, column: 2, scope: !7816)
!7825 = distinct !DISubprogram(name: "MoxaPortRxQueue", scope: !3, file: !3, line: 2008, type: !7737, scopeLine: 2009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7826 = !DILocalVariable(name: "port", arg: 1, scope: !7825, file: !3, line: 2008, type: !116)
!7827 = !DILocation(line: 2008, column: 46, scope: !7825)
!7828 = !DILocalVariable(name: "ofsAddr", scope: !7825, file: !3, line: 2010, type: !113)
!7829 = !DILocation(line: 2010, column: 16, scope: !7825)
!7830 = !DILocation(line: 2010, column: 26, scope: !7825)
!7831 = !DILocation(line: 2010, column: 32, scope: !7825)
!7832 = !DILocalVariable(name: "rptr", scope: !7825, file: !3, line: 2011, type: !879)
!7833 = !DILocation(line: 2011, column: 6, scope: !7825)
!7834 = !DILocalVariable(name: "wptr", scope: !7825, file: !3, line: 2011, type: !879)
!7835 = !DILocation(line: 2011, column: 12, scope: !7825)
!7836 = !DILocalVariable(name: "mask", scope: !7825, file: !3, line: 2011, type: !879)
!7837 = !DILocation(line: 2011, column: 18, scope: !7825)
!7838 = !DILocation(line: 2013, column: 15, scope: !7825)
!7839 = !DILocation(line: 2013, column: 23, scope: !7825)
!7840 = !DILocation(line: 2013, column: 9, scope: !7825)
!7841 = !DILocation(line: 2013, column: 7, scope: !7825)
!7842 = !DILocation(line: 2014, column: 15, scope: !7825)
!7843 = !DILocation(line: 2014, column: 23, scope: !7825)
!7844 = !DILocation(line: 2014, column: 9, scope: !7825)
!7845 = !DILocation(line: 2014, column: 7, scope: !7825)
!7846 = !DILocation(line: 2015, column: 15, scope: !7825)
!7847 = !DILocation(line: 2015, column: 23, scope: !7825)
!7848 = !DILocation(line: 2015, column: 9, scope: !7825)
!7849 = !DILocation(line: 2015, column: 7, scope: !7825)
!7850 = !DILocation(line: 2016, column: 10, scope: !7825)
!7851 = !DILocation(line: 2016, column: 17, scope: !7825)
!7852 = !DILocation(line: 2016, column: 15, scope: !7825)
!7853 = !DILocation(line: 2016, column: 25, scope: !7825)
!7854 = !DILocation(line: 2016, column: 23, scope: !7825)
!7855 = !DILocation(line: 2016, column: 2, scope: !7825)
!7856 = distinct !DISubprogram(name: "MoxaPortReadData", scope: !3, file: !3, line: 1925, type: !7737, scopeLine: 1926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!7857 = !DILocalVariable(name: "port", arg: 1, scope: !7856, file: !3, line: 1925, type: !116)
!7858 = !DILocation(line: 1925, column: 47, scope: !7856)
!7859 = !DILocalVariable(name: "tty", scope: !7856, file: !3, line: 1927, type: !215)
!7860 = !DILocation(line: 1927, column: 21, scope: !7856)
!7861 = !DILocation(line: 1927, column: 27, scope: !7856)
!7862 = !DILocation(line: 1927, column: 33, scope: !7856)
!7863 = !DILocation(line: 1927, column: 38, scope: !7856)
!7864 = !DILocalVariable(name: "dst", scope: !7856, file: !3, line: 1928, type: !4055)
!7865 = !DILocation(line: 1928, column: 17, scope: !7856)
!7866 = !DILocalVariable(name: "baseAddr", scope: !7856, file: !3, line: 1929, type: !113)
!7867 = !DILocation(line: 1929, column: 16, scope: !7856)
!7868 = !DILocalVariable(name: "ofsAddr", scope: !7856, file: !3, line: 1929, type: !113)
!7869 = !DILocation(line: 1929, column: 27, scope: !7856)
!7870 = !DILocalVariable(name: "ofs", scope: !7856, file: !3, line: 1929, type: !113)
!7871 = !DILocation(line: 1929, column: 37, scope: !7856)
!7872 = !DILocalVariable(name: "count", scope: !7856, file: !3, line: 1930, type: !7)
!7873 = !DILocation(line: 1930, column: 15, scope: !7856)
!7874 = !DILocalVariable(name: "len", scope: !7856, file: !3, line: 1930, type: !7)
!7875 = !DILocation(line: 1930, column: 22, scope: !7856)
!7876 = !DILocalVariable(name: "total", scope: !7856, file: !3, line: 1930, type: !7)
!7877 = !DILocation(line: 1930, column: 27, scope: !7856)
!7878 = !DILocalVariable(name: "tail", scope: !7856, file: !3, line: 1931, type: !879)
!7879 = !DILocation(line: 1931, column: 6, scope: !7856)
!7880 = !DILocalVariable(name: "rx_mask", scope: !7856, file: !3, line: 1931, type: !879)
!7881 = !DILocation(line: 1931, column: 12, scope: !7856)
!7882 = !DILocalVariable(name: "spage", scope: !7856, file: !3, line: 1931, type: !879)
!7883 = !DILocation(line: 1931, column: 21, scope: !7856)
!7884 = !DILocalVariable(name: "epage", scope: !7856, file: !3, line: 1931, type: !879)
!7885 = !DILocation(line: 1931, column: 28, scope: !7856)
!7886 = !DILocalVariable(name: "pageno", scope: !7856, file: !3, line: 1932, type: !879)
!7887 = !DILocation(line: 1932, column: 6, scope: !7856)
!7888 = !DILocalVariable(name: "pageofs", scope: !7856, file: !3, line: 1932, type: !879)
!7889 = !DILocation(line: 1932, column: 14, scope: !7856)
!7890 = !DILocalVariable(name: "bufhead", scope: !7856, file: !3, line: 1932, type: !879)
!7891 = !DILocation(line: 1932, column: 23, scope: !7856)
!7892 = !DILocalVariable(name: "head", scope: !7856, file: !3, line: 1932, type: !879)
!7893 = !DILocation(line: 1932, column: 32, scope: !7856)
!7894 = !DILocation(line: 1934, column: 12, scope: !7856)
!7895 = !DILocation(line: 1934, column: 18, scope: !7856)
!7896 = !DILocation(line: 1934, column: 10, scope: !7856)
!7897 = !DILocation(line: 1935, column: 13, scope: !7856)
!7898 = !DILocation(line: 1935, column: 19, scope: !7856)
!7899 = !DILocation(line: 1935, column: 26, scope: !7856)
!7900 = !DILocation(line: 1935, column: 11, scope: !7856)
!7901 = !DILocation(line: 1936, column: 15, scope: !7856)
!7902 = !DILocation(line: 1936, column: 23, scope: !7856)
!7903 = !DILocation(line: 1936, column: 9, scope: !7856)
!7904 = !DILocation(line: 1936, column: 7, scope: !7856)
!7905 = !DILocation(line: 1937, column: 15, scope: !7856)
!7906 = !DILocation(line: 1937, column: 23, scope: !7856)
!7907 = !DILocation(line: 1937, column: 9, scope: !7856)
!7908 = !DILocation(line: 1937, column: 7, scope: !7856)
!7909 = !DILocation(line: 1938, column: 18, scope: !7856)
!7910 = !DILocation(line: 1938, column: 26, scope: !7856)
!7911 = !DILocation(line: 1938, column: 12, scope: !7856)
!7912 = !DILocation(line: 1938, column: 10, scope: !7856)
!7913 = !DILocation(line: 1939, column: 16, scope: !7856)
!7914 = !DILocation(line: 1939, column: 24, scope: !7856)
!7915 = !DILocation(line: 1939, column: 10, scope: !7856)
!7916 = !DILocation(line: 1939, column: 8, scope: !7856)
!7917 = !DILocation(line: 1940, column: 16, scope: !7856)
!7918 = !DILocation(line: 1940, column: 24, scope: !7856)
!7919 = !DILocation(line: 1940, column: 10, scope: !7856)
!7920 = !DILocation(line: 1940, column: 8, scope: !7856)
!7921 = !DILocation(line: 1941, column: 11, scope: !7856)
!7922 = !DILocation(line: 1941, column: 19, scope: !7856)
!7923 = !DILocation(line: 1941, column: 16, scope: !7856)
!7924 = !DILocation(line: 1941, column: 10, scope: !7856)
!7925 = !DILocation(line: 1941, column: 28, scope: !7856)
!7926 = !DILocation(line: 1941, column: 35, scope: !7856)
!7927 = !DILocation(line: 1941, column: 33, scope: !7856)
!7928 = !DILocation(line: 1941, column: 44, scope: !7856)
!7929 = !DILocation(line: 1941, column: 51, scope: !7856)
!7930 = !DILocation(line: 1941, column: 49, scope: !7856)
!7931 = !DILocation(line: 1941, column: 58, scope: !7856)
!7932 = !DILocation(line: 1941, column: 56, scope: !7856)
!7933 = !DILocation(line: 1941, column: 66, scope: !7856)
!7934 = !DILocation(line: 1941, column: 8, scope: !7856)
!7935 = !DILocation(line: 1942, column: 6, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 1942, column: 6)
!7937 = !DILocation(line: 1942, column: 12, scope: !7936)
!7938 = !DILocation(line: 1942, column: 6, scope: !7856)
!7939 = !DILocation(line: 1943, column: 3, scope: !7936)
!7940 = !DILocation(line: 1945, column: 10, scope: !7856)
!7941 = !DILocation(line: 1945, column: 8, scope: !7856)
!7942 = !DILocation(line: 1946, column: 31, scope: !7856)
!7943 = !DILocation(line: 1946, column: 16, scope: !7856)
!7944 = !DILocation(line: 1946, column: 21, scope: !7856)
!7945 = !DILocation(line: 1946, column: 2, scope: !7856)
!7946 = !DILocation(line: 1946, column: 28, scope: !7856)
!7947 = !DILocation(line: 1947, column: 6, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 1947, column: 6)
!7949 = !DILocation(line: 1947, column: 15, scope: !7948)
!7950 = !DILocation(line: 1947, column: 12, scope: !7948)
!7951 = !DILocation(line: 1947, column: 6, scope: !7856)
!7952 = !DILocation(line: 1948, column: 19, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 1947, column: 22)
!7954 = !DILocation(line: 1948, column: 27, scope: !7953)
!7955 = !DILocation(line: 1948, column: 13, scope: !7953)
!7956 = !DILocation(line: 1948, column: 11, scope: !7953)
!7957 = !DILocation(line: 1949, column: 10, scope: !7953)
!7958 = !DILocation(line: 1949, column: 17, scope: !7953)
!7959 = !DILocation(line: 1949, column: 26, scope: !7953)
!7960 = !DILocation(line: 1949, column: 3, scope: !7953)
!7961 = !DILocation(line: 1950, column: 3, scope: !7953)
!7962 = !DILocation(line: 1950, column: 10, scope: !7953)
!7963 = !DILocation(line: 1950, column: 16, scope: !7953)
!7964 = !DILocation(line: 1951, column: 10, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 1950, column: 21)
!7966 = !DILocation(line: 1951, column: 19, scope: !7965)
!7967 = !DILocation(line: 1951, column: 36, scope: !7965)
!7968 = !DILocation(line: 1951, column: 34, scope: !7965)
!7969 = !DILocation(line: 1951, column: 46, scope: !7965)
!7970 = !DILocation(line: 1951, column: 44, scope: !7965)
!7971 = !DILocation(line: 1951, column: 8, scope: !7965)
!7972 = !DILocation(line: 1952, column: 11, scope: !7965)
!7973 = !DILocation(line: 1952, column: 19, scope: !7965)
!7974 = !DILocation(line: 1952, column: 16, scope: !7965)
!7975 = !DILocation(line: 1952, column: 10, scope: !7965)
!7976 = !DILocation(line: 1952, column: 28, scope: !7965)
!7977 = !DILocation(line: 1952, column: 35, scope: !7965)
!7978 = !DILocation(line: 1952, column: 33, scope: !7965)
!7979 = !DILocation(line: 1953, column: 7, scope: !7965)
!7980 = !DILocation(line: 1953, column: 15, scope: !7965)
!7981 = !DILocation(line: 1953, column: 21, scope: !7965)
!7982 = !DILocation(line: 1953, column: 19, scope: !7965)
!7983 = !DILocation(line: 1952, column: 8, scope: !7965)
!7984 = !DILocation(line: 1954, column: 35, scope: !7965)
!7985 = !DILocation(line: 1954, column: 41, scope: !7965)
!7986 = !DILocalVariable(name: "__UNIQUE_ID___x259", scope: !7987, file: !3, line: 1955, type: !7)
!7987 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 1955, column: 6)
!7988 = !DILocation(line: 1955, column: 6, scope: !7987)
!7989 = !DILocalVariable(name: "__UNIQUE_ID___y260", scope: !7987, file: !3, line: 1955, type: !7)
!7990 = !DILocation(line: 1955, column: 6, scope: !7965)
!7991 = !DILocation(line: 1954, column: 10, scope: !7965)
!7992 = !DILocation(line: 1954, column: 8, scope: !7965)
!7993 = !DILocation(line: 1956, column: 18, scope: !7965)
!7994 = !DILocation(line: 1956, column: 23, scope: !7965)
!7995 = !DILocation(line: 1956, column: 28, scope: !7965)
!7996 = !DILocation(line: 1956, column: 4, scope: !7965)
!7997 = !DILocation(line: 1957, column: 12, scope: !7965)
!7998 = !DILocation(line: 1957, column: 19, scope: !7965)
!7999 = !DILocation(line: 1957, column: 17, scope: !7965)
!8000 = !DILocation(line: 1957, column: 26, scope: !7965)
!8001 = !DILocation(line: 1957, column: 24, scope: !7965)
!8002 = !DILocation(line: 1957, column: 11, scope: !7965)
!8003 = !DILocation(line: 1957, column: 9, scope: !7965)
!8004 = !DILocation(line: 1958, column: 13, scope: !7965)
!8005 = !DILocation(line: 1958, column: 10, scope: !7965)
!8006 = distinct !{!8006, !7961, !8007}
!8007 = !DILocation(line: 1959, column: 3, scope: !7953)
!8008 = !DILocation(line: 1960, column: 2, scope: !7953)
!8009 = !DILocation(line: 1961, column: 12, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 1960, column: 9)
!8011 = !DILocation(line: 1961, column: 21, scope: !8010)
!8012 = !DILocation(line: 1961, column: 26, scope: !8010)
!8013 = !DILocation(line: 1961, column: 18, scope: !8010)
!8014 = !DILocation(line: 1961, column: 10, scope: !8010)
!8015 = !DILocation(line: 1962, column: 13, scope: !8010)
!8016 = !DILocation(line: 1962, column: 18, scope: !8010)
!8017 = !DILocation(line: 1962, column: 11, scope: !8010)
!8018 = !DILocation(line: 1963, column: 3, scope: !8010)
!8019 = !DILocation(line: 1963, column: 10, scope: !8010)
!8020 = !DILocation(line: 1963, column: 16, scope: !8010)
!8021 = !DILocation(line: 1964, column: 11, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 1963, column: 21)
!8023 = !DILocation(line: 1964, column: 19, scope: !8022)
!8024 = !DILocation(line: 1964, column: 28, scope: !8022)
!8025 = !DILocation(line: 1964, column: 4, scope: !8022)
!8026 = !DILocation(line: 1965, column: 10, scope: !8022)
!8027 = !DILocation(line: 1965, column: 19, scope: !8022)
!8028 = !DILocation(line: 1965, column: 36, scope: !8022)
!8029 = !DILocation(line: 1965, column: 34, scope: !8022)
!8030 = !DILocation(line: 1965, column: 8, scope: !8022)
!8031 = !DILocation(line: 1966, column: 35, scope: !8022)
!8032 = !DILocation(line: 1966, column: 41, scope: !8022)
!8033 = !DILocalVariable(name: "__UNIQUE_ID___x261", scope: !8034, file: !3, line: 1967, type: !7)
!8034 = distinct !DILexicalBlock(scope: !8022, file: !3, line: 1967, column: 6)
!8035 = !DILocation(line: 1967, column: 6, scope: !8034)
!8036 = !DILocalVariable(name: "__UNIQUE_ID___y262", scope: !8034, file: !3, line: 1967, type: !7)
!8037 = !DILocation(line: 1967, column: 6, scope: !8022)
!8038 = !DILocation(line: 1966, column: 10, scope: !8022)
!8039 = !DILocation(line: 1966, column: 8, scope: !8022)
!8040 = !DILocation(line: 1968, column: 18, scope: !8022)
!8041 = !DILocation(line: 1968, column: 23, scope: !8022)
!8042 = !DILocation(line: 1968, column: 28, scope: !8022)
!8043 = !DILocation(line: 1968, column: 4, scope: !8022)
!8044 = !DILocation(line: 1970, column: 13, scope: !8022)
!8045 = !DILocation(line: 1970, column: 10, scope: !8022)
!8046 = !DILocation(line: 1971, column: 15, scope: !8022)
!8047 = !DILocation(line: 1971, column: 25, scope: !8022)
!8048 = !DILocation(line: 1971, column: 23, scope: !8022)
!8049 = !DILocation(line: 1971, column: 30, scope: !8022)
!8050 = !DILocation(line: 1971, column: 14, scope: !8022)
!8051 = !DILocation(line: 1971, column: 12, scope: !8022)
!8052 = !DILocation(line: 1972, column: 8, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8022, file: !3, line: 1972, column: 8)
!8054 = !DILocation(line: 1972, column: 16, scope: !8053)
!8055 = !DILocation(line: 1972, column: 21, scope: !8053)
!8056 = !DILocation(line: 1972, column: 24, scope: !8053)
!8057 = !DILocation(line: 1972, column: 36, scope: !8053)
!8058 = !DILocation(line: 1972, column: 33, scope: !8053)
!8059 = !DILocation(line: 1972, column: 8, scope: !8022)
!8060 = !DILocation(line: 1973, column: 14, scope: !8053)
!8061 = !DILocation(line: 1973, column: 12, scope: !8053)
!8062 = !DILocation(line: 1973, column: 5, scope: !8053)
!8063 = distinct !{!8063, !8018, !8064}
!8064 = !DILocation(line: 1974, column: 3, scope: !8010)
!8065 = !DILocation(line: 1975, column: 11, scope: !8010)
!8066 = !DILocation(line: 1975, column: 18, scope: !8010)
!8067 = !DILocation(line: 1975, column: 16, scope: !8010)
!8068 = !DILocation(line: 1975, column: 27, scope: !8010)
!8069 = !DILocation(line: 1975, column: 25, scope: !8010)
!8070 = !DILocation(line: 1975, column: 10, scope: !8010)
!8071 = !DILocation(line: 1975, column: 8, scope: !8010)
!8072 = !DILocation(line: 1977, column: 9, scope: !7856)
!8073 = !DILocation(line: 1977, column: 15, scope: !7856)
!8074 = !DILocation(line: 1977, column: 23, scope: !7856)
!8075 = !DILocation(line: 1977, column: 2, scope: !7856)
!8076 = !DILocation(line: 1978, column: 12, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 1978, column: 6)
!8078 = !DILocation(line: 1978, column: 20, scope: !8077)
!8079 = !DILocation(line: 1978, column: 6, scope: !8077)
!8080 = !DILocation(line: 1978, column: 32, scope: !8077)
!8081 = !DILocation(line: 1978, column: 6, scope: !7856)
!8082 = !DILocation(line: 1979, column: 19, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8077, file: !3, line: 1978, column: 46)
!8084 = !DILocation(line: 1980, column: 3, scope: !8083)
!8085 = !DILocation(line: 1980, column: 9, scope: !8083)
!8086 = !DILocation(line: 1980, column: 20, scope: !8083)
!8087 = !DILocation(line: 1981, column: 2, scope: !8083)
!8088 = !DILocation(line: 1982, column: 9, scope: !7856)
!8089 = !DILocation(line: 1982, column: 2, scope: !7856)
!8090 = !DILocation(line: 1983, column: 1, scope: !7856)
!8091 = distinct !DISubprogram(name: "tty_insert_flip_char", scope: !8092, file: !8092, line: 18, type: !8093, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8092 = !DIFile(filename: "./include/linux/tty_flip.h", directory: "/home/lizy2001/genbc/linux")
!8093 = !DISubroutineType(types: !8094)
!8094 = !{!141, !3899, !421, !240}
!8095 = !DILocalVariable(name: "port", arg: 1, scope: !8091, file: !8092, line: 18, type: !3899)
!8096 = !DILocation(line: 18, column: 57, scope: !8091)
!8097 = !DILocalVariable(name: "ch", arg: 2, scope: !8091, file: !8092, line: 19, type: !421)
!8098 = !DILocation(line: 19, column: 20, scope: !8091)
!8099 = !DILocalVariable(name: "flag", arg: 3, scope: !8091, file: !8092, line: 19, type: !240)
!8100 = !DILocation(line: 19, column: 29, scope: !8091)
!8101 = !DILocalVariable(name: "tb", scope: !8091, file: !8092, line: 21, type: !127)
!8102 = !DILocation(line: 21, column: 21, scope: !8091)
!8103 = !DILocation(line: 21, column: 26, scope: !8091)
!8104 = !DILocation(line: 21, column: 32, scope: !8091)
!8105 = !DILocation(line: 21, column: 36, scope: !8091)
!8106 = !DILocalVariable(name: "change", scope: !8091, file: !8092, line: 22, type: !141)
!8107 = !DILocation(line: 22, column: 6, scope: !8091)
!8108 = !DILocation(line: 24, column: 12, scope: !8091)
!8109 = !DILocation(line: 24, column: 16, scope: !8091)
!8110 = !DILocation(line: 24, column: 22, scope: !8091)
!8111 = !DILocation(line: 24, column: 37, scope: !8091)
!8112 = !DILocation(line: 24, column: 41, scope: !8091)
!8113 = !DILocation(line: 24, column: 46, scope: !8091)
!8114 = !DILocation(line: 0, scope: !8091)
!8115 = !DILocation(line: 24, column: 9, scope: !8091)
!8116 = !DILocation(line: 25, column: 7, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8091, file: !8092, line: 25, column: 6)
!8118 = !DILocation(line: 25, column: 14, scope: !8117)
!8119 = !DILocation(line: 25, column: 17, scope: !8117)
!8120 = !DILocation(line: 25, column: 21, scope: !8117)
!8121 = !DILocation(line: 25, column: 28, scope: !8117)
!8122 = !DILocation(line: 25, column: 32, scope: !8117)
!8123 = !DILocation(line: 25, column: 26, scope: !8117)
!8124 = !DILocation(line: 25, column: 6, scope: !8091)
!8125 = !DILocation(line: 26, column: 8, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8127, file: !8092, line: 26, column: 7)
!8127 = distinct !DILexicalBlock(scope: !8117, file: !8092, line: 25, column: 38)
!8128 = !DILocation(line: 26, column: 12, scope: !8126)
!8129 = !DILocation(line: 26, column: 7, scope: !8126)
!8130 = !DILocation(line: 26, column: 18, scope: !8126)
!8131 = !DILocation(line: 26, column: 7, scope: !8127)
!8132 = !DILocation(line: 27, column: 34, scope: !8126)
!8133 = !DILocation(line: 27, column: 18, scope: !8126)
!8134 = !DILocation(line: 27, column: 22, scope: !8126)
!8135 = !DILocation(line: 27, column: 26, scope: !8126)
!8136 = !DILocation(line: 27, column: 5, scope: !8126)
!8137 = !DILocation(line: 27, column: 32, scope: !8126)
!8138 = !DILocation(line: 27, column: 4, scope: !8126)
!8139 = !DILocation(line: 28, column: 35, scope: !8127)
!8140 = !DILocation(line: 28, column: 17, scope: !8127)
!8141 = !DILocation(line: 28, column: 21, scope: !8127)
!8142 = !DILocation(line: 28, column: 25, scope: !8127)
!8143 = !DILocation(line: 28, column: 29, scope: !8127)
!8144 = !DILocation(line: 28, column: 4, scope: !8127)
!8145 = !DILocation(line: 28, column: 33, scope: !8127)
!8146 = !DILocation(line: 29, column: 3, scope: !8127)
!8147 = !DILocation(line: 31, column: 32, scope: !8091)
!8148 = !DILocation(line: 31, column: 38, scope: !8091)
!8149 = !DILocation(line: 31, column: 42, scope: !8091)
!8150 = !DILocation(line: 31, column: 9, scope: !8091)
!8151 = !DILocation(line: 31, column: 2, scope: !8091)
!8152 = !DILocation(line: 32, column: 1, scope: !8091)
!8153 = distinct !DISubprogram(name: "moxa_new_dcdstate", scope: !3, file: !3, line: 1349, type: !8154, scopeLine: 1350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8154 = !DISubroutineType(types: !8155)
!8155 = !{null, !116, !1362}
!8156 = !DILocation(line: 407, column: 64, scope: !6183, inlinedAt: !8157)
!8157 = distinct !DILocation(line: 1357, column: 10, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 1355, column: 26)
!8159 = distinct !DILexicalBlock(scope: !8153, file: !3, line: 1355, column: 6)
!8160 = !DILocation(line: 407, column: 84, scope: !6183, inlinedAt: !8157)
!8161 = !DILocation(line: 407, column: 64, scope: !6183, inlinedAt: !8162)
!8162 = distinct !DILocation(line: 1362, column: 3, scope: !8159)
!8163 = !DILocation(line: 407, column: 84, scope: !6183, inlinedAt: !8162)
!8164 = !DILocation(line: 327, column: 67, scope: !6191, inlinedAt: !8165)
!8165 = distinct !DILocation(line: 1354, column: 2, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 1354, column: 2)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 1354, column: 2)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 1354, column: 2)
!8169 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 1354, column: 2)
!8170 = distinct !DILexicalBlock(scope: !8153, file: !3, line: 1354, column: 2)
!8171 = !DILocalVariable(name: "p", arg: 1, scope: !8153, file: !3, line: 1349, type: !116)
!8172 = !DILocation(line: 1349, column: 49, scope: !8153)
!8173 = !DILocalVariable(name: "dcd", arg: 2, scope: !8153, file: !3, line: 1349, type: !1362)
!8174 = !DILocation(line: 1349, column: 55, scope: !8153)
!8175 = !DILocalVariable(name: "flags", scope: !8153, file: !3, line: 1351, type: !148)
!8176 = !DILocation(line: 1351, column: 16, scope: !8153)
!8177 = !DILocation(line: 1352, column: 10, scope: !8153)
!8178 = !DILocation(line: 1352, column: 9, scope: !8153)
!8179 = !DILocation(line: 1352, column: 8, scope: !8153)
!8180 = !DILocation(line: 1352, column: 6, scope: !8153)
!8181 = !DILocation(line: 1354, column: 2, scope: !8153)
!8182 = !DILocation(line: 1354, column: 2, scope: !8170)
!8183 = !DILocalVariable(name: "__dummy", scope: !8184, file: !3, line: 1354, type: !148)
!8184 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 1354, column: 2)
!8185 = !DILocation(line: 1354, column: 2, scope: !8184)
!8186 = !DILocalVariable(name: "__dummy2", scope: !8184, file: !3, line: 1354, type: !148)
!8187 = !DILocation(line: 1354, column: 2, scope: !8169)
!8188 = !DILocation(line: 1354, column: 2, scope: !8168)
!8189 = !DILocation(line: 1354, column: 2, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 1354, column: 2)
!8191 = !DILocalVariable(name: "__dummy", scope: !8192, file: !3, line: 1354, type: !148)
!8192 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 1354, column: 2)
!8193 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 1354, column: 2)
!8194 = !DILocation(line: 1354, column: 2, scope: !8192)
!8195 = !DILocalVariable(name: "__dummy2", scope: !8192, file: !3, line: 1354, type: !148)
!8196 = !DILocation(line: 1354, column: 2, scope: !8193)
!8197 = !DILocation(line: 1354, column: 2, scope: !8167)
!8198 = !{i32 -2141486256}
!8199 = !DILocation(line: 1354, column: 2, scope: !8166)
!8200 = !DILocation(line: 329, column: 10, scope: !6191, inlinedAt: !8165)
!8201 = !DILocation(line: 329, column: 16, scope: !6191, inlinedAt: !8165)
!8202 = !DILocation(line: 1355, column: 6, scope: !8159)
!8203 = !DILocation(line: 1355, column: 13, scope: !8159)
!8204 = !DILocation(line: 1355, column: 16, scope: !8159)
!8205 = !DILocation(line: 1355, column: 10, scope: !8159)
!8206 = !DILocation(line: 1355, column: 6, scope: !8153)
!8207 = !DILocation(line: 1356, column: 24, scope: !8158)
!8208 = !DILocation(line: 1356, column: 10, scope: !8158)
!8209 = !DILocation(line: 1356, column: 13, scope: !8158)
!8210 = !DILocation(line: 1356, column: 22, scope: !8158)
!8211 = !DILocation(line: 1357, column: 34, scope: !8158)
!8212 = !DILocation(line: 1357, column: 37, scope: !8158)
!8213 = !DILocation(line: 1357, column: 42, scope: !8158)
!8214 = !DILocation(line: 1357, column: 48, scope: !8158)
!8215 = !DILocation(line: 409, column: 2, scope: !6243, inlinedAt: !8157)
!8216 = !DILocation(line: 409, column: 2, scope: !6248, inlinedAt: !8157)
!8217 = !DILocation(line: 409, column: 2, scope: !6249, inlinedAt: !8157)
!8218 = !DILocation(line: 409, column: 2, scope: !6256, inlinedAt: !8157)
!8219 = !DILocation(line: 409, column: 2, scope: !6259, inlinedAt: !8157)
!8220 = !DILocation(line: 1358, column: 8, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 1358, column: 7)
!8222 = !DILocation(line: 1358, column: 7, scope: !8158)
!8223 = !DILocation(line: 1359, column: 25, scope: !8221)
!8224 = !DILocation(line: 1359, column: 28, scope: !8221)
!8225 = !DILocation(line: 1359, column: 4, scope: !8221)
!8226 = !DILocation(line: 1360, column: 2, scope: !8158)
!8227 = !DILocation(line: 1362, column: 27, scope: !8159)
!8228 = !DILocation(line: 1362, column: 30, scope: !8159)
!8229 = !DILocation(line: 1362, column: 35, scope: !8159)
!8230 = !DILocation(line: 1362, column: 41, scope: !8159)
!8231 = !DILocation(line: 409, column: 2, scope: !6243, inlinedAt: !8162)
!8232 = !DILocation(line: 409, column: 2, scope: !6248, inlinedAt: !8162)
!8233 = !DILocation(line: 409, column: 2, scope: !6249, inlinedAt: !8162)
!8234 = !DILocation(line: 409, column: 2, scope: !6256, inlinedAt: !8162)
!8235 = !DILocation(line: 409, column: 2, scope: !6259, inlinedAt: !8162)
!8236 = !DILocation(line: 1363, column: 1, scope: !8153)
!8237 = distinct !DISubprogram(name: "kasan_check_write", scope: !7426, file: !7426, line: 38, type: !7427, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8238 = !DILocalVariable(name: "p", arg: 1, scope: !8237, file: !7426, line: 38, type: !6332)
!8239 = !DILocation(line: 38, column: 59, scope: !8237)
!8240 = !DILocalVariable(name: "size", arg: 2, scope: !8237, file: !7426, line: 38, type: !7)
!8241 = !DILocation(line: 38, column: 75, scope: !8237)
!8242 = !DILocation(line: 40, column: 2, scope: !8237)
!8243 = distinct !DISubprogram(name: "flag_buf_ptr", scope: !121, file: !121, line: 80, type: !8244, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8244 = !DISubroutineType(types: !8245)
!8245 = !{!276, !127, !141}
!8246 = !DILocalVariable(name: "b", arg: 1, scope: !8243, file: !121, line: 80, type: !127)
!8247 = !DILocation(line: 80, column: 53, scope: !8243)
!8248 = !DILocalVariable(name: "ofs", arg: 2, scope: !8243, file: !121, line: 80, type: !141)
!8249 = !DILocation(line: 80, column: 60, scope: !8243)
!8250 = !DILocation(line: 82, column: 30, scope: !8243)
!8251 = !DILocation(line: 82, column: 33, scope: !8243)
!8252 = !DILocation(line: 82, column: 17, scope: !8243)
!8253 = !DILocation(line: 82, column: 40, scope: !8243)
!8254 = !DILocation(line: 82, column: 43, scope: !8243)
!8255 = !DILocation(line: 82, column: 38, scope: !8243)
!8256 = !DILocation(line: 82, column: 2, scope: !8243)
!8257 = distinct !DISubprogram(name: "char_buf_ptr", scope: !121, file: !121, line: 75, type: !8258, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8258 = !DISubroutineType(types: !8259)
!8259 = !{!4055, !127, !141}
!8260 = !DILocalVariable(name: "b", arg: 1, scope: !8257, file: !121, line: 75, type: !127)
!8261 = !DILocation(line: 75, column: 62, scope: !8257)
!8262 = !DILocalVariable(name: "ofs", arg: 2, scope: !8257, file: !121, line: 75, type: !141)
!8263 = !DILocation(line: 75, column: 69, scope: !8257)
!8264 = !DILocation(line: 77, column: 27, scope: !8257)
!8265 = !DILocation(line: 77, column: 30, scope: !8257)
!8266 = !DILocation(line: 77, column: 10, scope: !8257)
!8267 = !DILocation(line: 77, column: 38, scope: !8257)
!8268 = !DILocation(line: 77, column: 36, scope: !8257)
!8269 = !DILocation(line: 77, column: 2, scope: !8257)
!8270 = distinct !DISubprogram(name: "IS_ERR", scope: !8271, file: !8271, line: 34, type: !8272, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8271 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!8272 = !DISubroutineType(types: !8273)
!8273 = !{!484, !2179}
!8274 = !DILocalVariable(name: "ptr", arg: 1, scope: !8270, file: !8271, line: 34, type: !2179)
!8275 = !DILocation(line: 34, column: 60, scope: !8270)
!8276 = !DILocation(line: 36, column: 9, scope: !8270)
!8277 = !DILocation(line: 36, column: 2, scope: !8270)
!8278 = distinct !DISubprogram(name: "PTR_ERR", scope: !8271, file: !8271, line: 29, type: !8279, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8279 = !DISubroutineType(types: !8280)
!8280 = !{!311, !2179}
!8281 = !DILocalVariable(name: "ptr", arg: 1, scope: !8278, file: !8271, line: 29, type: !2179)
!8282 = !DILocation(line: 29, column: 61, scope: !8278)
!8283 = !DILocation(line: 31, column: 16, scope: !8278)
!8284 = !DILocation(line: 31, column: 9, scope: !8278)
!8285 = !DILocation(line: 31, column: 2, scope: !8278)
!8286 = distinct !DISubprogram(name: "moxa_open", scope: !3, file: !3, line: 1155, type: !3923, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8287 = !DILocalVariable(name: "tty", arg: 1, scope: !8286, file: !3, line: 1155, type: !215)
!8288 = !DILocation(line: 1155, column: 41, scope: !8286)
!8289 = !DILocalVariable(name: "filp", arg: 2, scope: !8286, file: !3, line: 1155, type: !353)
!8290 = !DILocation(line: 1155, column: 59, scope: !8286)
!8291 = !DILocalVariable(name: "brd", scope: !8286, file: !3, line: 1157, type: !4218)
!8292 = !DILocation(line: 1157, column: 26, scope: !8286)
!8293 = !DILocalVariable(name: "ch", scope: !8286, file: !3, line: 1158, type: !116)
!8294 = !DILocation(line: 1158, column: 20, scope: !8286)
!8295 = !DILocalVariable(name: "port", scope: !8286, file: !3, line: 1159, type: !141)
!8296 = !DILocation(line: 1159, column: 6, scope: !8286)
!8297 = !DILocation(line: 1161, column: 9, scope: !8286)
!8298 = !DILocation(line: 1161, column: 14, scope: !8286)
!8299 = !DILocation(line: 1161, column: 7, scope: !8286)
!8300 = !DILocation(line: 1162, column: 6, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 1162, column: 6)
!8302 = !DILocation(line: 1162, column: 11, scope: !8301)
!8303 = !DILocation(line: 1162, column: 6, scope: !8286)
!8304 = !DILocation(line: 1163, column: 10, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 1162, column: 25)
!8306 = !DILocation(line: 1163, column: 3, scope: !8305)
!8307 = !DILocation(line: 1165, column: 6, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 1165, column: 6)
!8309 = !DILocation(line: 1165, column: 6, scope: !8286)
!8310 = !DILocation(line: 1166, column: 3, scope: !8308)
!8311 = !DILocation(line: 1167, column: 21, scope: !8286)
!8312 = !DILocation(line: 1167, column: 26, scope: !8286)
!8313 = !DILocation(line: 1167, column: 9, scope: !8286)
!8314 = !DILocation(line: 1167, column: 6, scope: !8286)
!8315 = !DILocation(line: 1168, column: 7, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 1168, column: 6)
!8317 = !DILocation(line: 1168, column: 12, scope: !8316)
!8318 = !DILocation(line: 1168, column: 6, scope: !8286)
!8319 = !DILocation(line: 1169, column: 3, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8316, file: !3, line: 1168, column: 19)
!8321 = !DILocation(line: 1170, column: 3, scope: !8320)
!8322 = !DILocation(line: 1173, column: 6, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 1173, column: 6)
!8324 = !DILocation(line: 1173, column: 11, scope: !8323)
!8325 = !DILocation(line: 1173, column: 36, scope: !8323)
!8326 = !DILocation(line: 1173, column: 41, scope: !8323)
!8327 = !DILocation(line: 1173, column: 33, scope: !8323)
!8328 = !DILocation(line: 1173, column: 6, scope: !8286)
!8329 = !DILocation(line: 1174, column: 3, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 1173, column: 51)
!8331 = !DILocation(line: 1175, column: 3, scope: !8330)
!8332 = !DILocation(line: 1178, column: 8, scope: !8286)
!8333 = !DILocation(line: 1178, column: 13, scope: !8286)
!8334 = !DILocation(line: 1178, column: 19, scope: !8286)
!8335 = !DILocation(line: 1178, column: 24, scope: !8286)
!8336 = !DILocation(line: 1178, column: 5, scope: !8286)
!8337 = !DILocation(line: 1179, column: 2, scope: !8286)
!8338 = !DILocation(line: 1179, column: 6, scope: !8286)
!8339 = !DILocation(line: 1179, column: 11, scope: !8286)
!8340 = !DILocation(line: 1179, column: 16, scope: !8286)
!8341 = !DILocation(line: 1180, column: 21, scope: !8286)
!8342 = !DILocation(line: 1180, column: 2, scope: !8286)
!8343 = !DILocation(line: 1180, column: 7, scope: !8286)
!8344 = !DILocation(line: 1180, column: 19, scope: !8286)
!8345 = !DILocation(line: 1181, column: 20, scope: !8286)
!8346 = !DILocation(line: 1181, column: 24, scope: !8286)
!8347 = !DILocation(line: 1181, column: 30, scope: !8286)
!8348 = !DILocation(line: 1181, column: 2, scope: !8286)
!8349 = !DILocation(line: 1182, column: 14, scope: !8286)
!8350 = !DILocation(line: 1182, column: 18, scope: !8286)
!8351 = !DILocation(line: 1182, column: 23, scope: !8286)
!8352 = !DILocation(line: 1182, column: 2, scope: !8286)
!8353 = !DILocation(line: 1183, column: 29, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 1183, column: 6)
!8355 = !DILocation(line: 1183, column: 33, scope: !8354)
!8356 = !DILocation(line: 1183, column: 7, scope: !8354)
!8357 = !DILocation(line: 1183, column: 6, scope: !8286)
!8358 = !DILocation(line: 1184, column: 3, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1183, column: 40)
!8360 = !DILocation(line: 1184, column: 7, scope: !8359)
!8361 = !DILocation(line: 1184, column: 19, scope: !8359)
!8362 = !DILocation(line: 1185, column: 22, scope: !8359)
!8363 = !DILocation(line: 1185, column: 28, scope: !8359)
!8364 = !DILocation(line: 1185, column: 33, scope: !8359)
!8365 = !DILocation(line: 1185, column: 3, scope: !8359)
!8366 = !DILocation(line: 1186, column: 20, scope: !8359)
!8367 = !DILocation(line: 1186, column: 3, scope: !8359)
!8368 = !DILocation(line: 1187, column: 18, scope: !8359)
!8369 = !DILocation(line: 1187, column: 3, scope: !8359)
!8370 = !DILocation(line: 1188, column: 15, scope: !8359)
!8371 = !DILocation(line: 1188, column: 19, scope: !8359)
!8372 = !DILocation(line: 1188, column: 23, scope: !8359)
!8373 = !DILocation(line: 1188, column: 28, scope: !8359)
!8374 = !DILocation(line: 1188, column: 3, scope: !8359)
!8375 = !DILocation(line: 1189, column: 29, scope: !8359)
!8376 = !DILocation(line: 1189, column: 33, scope: !8359)
!8377 = !DILocation(line: 1189, column: 3, scope: !8359)
!8378 = !DILocation(line: 1190, column: 2, scope: !8359)
!8379 = !DILocation(line: 1191, column: 16, scope: !8286)
!8380 = !DILocation(line: 1191, column: 20, scope: !8286)
!8381 = !DILocation(line: 1191, column: 25, scope: !8286)
!8382 = !DILocation(line: 1191, column: 2, scope: !8286)
!8383 = !DILocation(line: 1192, column: 2, scope: !8286)
!8384 = !DILocation(line: 1194, column: 35, scope: !8286)
!8385 = !DILocation(line: 1194, column: 39, scope: !8286)
!8386 = !DILocation(line: 1194, column: 45, scope: !8286)
!8387 = !DILocation(line: 1194, column: 50, scope: !8286)
!8388 = !DILocation(line: 1194, column: 9, scope: !8286)
!8389 = !DILocation(line: 1194, column: 2, scope: !8286)
!8390 = !DILocation(line: 1195, column: 1, scope: !8286)
!8391 = distinct !DISubprogram(name: "moxa_close", scope: !3, file: !3, line: 1197, type: !3927, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8392 = !DILocalVariable(name: "tty", arg: 1, scope: !8391, file: !3, line: 1197, type: !215)
!8393 = !DILocation(line: 1197, column: 43, scope: !8391)
!8394 = !DILocalVariable(name: "filp", arg: 2, scope: !8391, file: !3, line: 1197, type: !353)
!8395 = !DILocation(line: 1197, column: 61, scope: !8391)
!8396 = !DILocalVariable(name: "ch", scope: !8391, file: !3, line: 1199, type: !116)
!8397 = !DILocation(line: 1199, column: 20, scope: !8391)
!8398 = !DILocation(line: 1199, column: 25, scope: !8391)
!8399 = !DILocation(line: 1199, column: 30, scope: !8391)
!8400 = !DILocation(line: 1200, column: 14, scope: !8391)
!8401 = !DILocation(line: 1200, column: 19, scope: !8391)
!8402 = !DILocation(line: 1200, column: 27, scope: !8391)
!8403 = !DILocation(line: 1200, column: 2, scope: !8391)
!8404 = !DILocation(line: 1200, column: 6, scope: !8391)
!8405 = !DILocation(line: 1200, column: 12, scope: !8391)
!8406 = !DILocation(line: 1201, column: 18, scope: !8391)
!8407 = !DILocation(line: 1201, column: 22, scope: !8391)
!8408 = !DILocation(line: 1201, column: 28, scope: !8391)
!8409 = !DILocation(line: 1201, column: 33, scope: !8391)
!8410 = !DILocation(line: 1201, column: 2, scope: !8391)
!8411 = !DILocation(line: 1202, column: 1, scope: !8391)
!8412 = distinct !DISubprogram(name: "moxa_write", scope: !3, file: !3, line: 1204, type: !3936, scopeLine: 1206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8413 = !DILocation(line: 407, column: 64, scope: !6183, inlinedAt: !8414)
!8414 = distinct !DILocation(line: 1216, column: 2, scope: !8412)
!8415 = !DILocation(line: 407, column: 84, scope: !6183, inlinedAt: !8414)
!8416 = !DILocation(line: 327, column: 67, scope: !6191, inlinedAt: !8417)
!8417 = distinct !DILocation(line: 1214, column: 2, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 1214, column: 2)
!8419 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 1214, column: 2)
!8420 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 1214, column: 2)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 1214, column: 2)
!8422 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 1214, column: 2)
!8423 = !DILocalVariable(name: "tty", arg: 1, scope: !8412, file: !3, line: 1204, type: !215)
!8424 = !DILocation(line: 1204, column: 42, scope: !8412)
!8425 = !DILocalVariable(name: "buf", arg: 2, scope: !8412, file: !3, line: 1205, type: !419)
!8426 = !DILocation(line: 1205, column: 30, scope: !8412)
!8427 = !DILocalVariable(name: "count", arg: 3, scope: !8412, file: !3, line: 1205, type: !141)
!8428 = !DILocation(line: 1205, column: 39, scope: !8412)
!8429 = !DILocalVariable(name: "ch", scope: !8412, file: !3, line: 1207, type: !116)
!8430 = !DILocation(line: 1207, column: 20, scope: !8412)
!8431 = !DILocation(line: 1207, column: 25, scope: !8412)
!8432 = !DILocation(line: 1207, column: 30, scope: !8412)
!8433 = !DILocalVariable(name: "flags", scope: !8412, file: !3, line: 1208, type: !148)
!8434 = !DILocation(line: 1208, column: 16, scope: !8412)
!8435 = !DILocalVariable(name: "len", scope: !8412, file: !3, line: 1209, type: !141)
!8436 = !DILocation(line: 1209, column: 6, scope: !8412)
!8437 = !DILocation(line: 1211, column: 6, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 1211, column: 6)
!8439 = !DILocation(line: 1211, column: 9, scope: !8438)
!8440 = !DILocation(line: 1211, column: 6, scope: !8412)
!8441 = !DILocation(line: 1212, column: 3, scope: !8438)
!8442 = !DILocation(line: 1214, column: 2, scope: !8412)
!8443 = !DILocation(line: 1214, column: 2, scope: !8422)
!8444 = !DILocalVariable(name: "__dummy", scope: !8445, file: !3, line: 1214, type: !148)
!8445 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 1214, column: 2)
!8446 = !DILocation(line: 1214, column: 2, scope: !8445)
!8447 = !DILocalVariable(name: "__dummy2", scope: !8445, file: !3, line: 1214, type: !148)
!8448 = !DILocation(line: 1214, column: 2, scope: !8421)
!8449 = !DILocation(line: 1214, column: 2, scope: !8420)
!8450 = !DILocation(line: 1214, column: 2, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 1214, column: 2)
!8452 = !DILocalVariable(name: "__dummy", scope: !8453, file: !3, line: 1214, type: !148)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 1214, column: 2)
!8454 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 1214, column: 2)
!8455 = !DILocation(line: 1214, column: 2, scope: !8453)
!8456 = !DILocalVariable(name: "__dummy2", scope: !8453, file: !3, line: 1214, type: !148)
!8457 = !DILocation(line: 1214, column: 2, scope: !8454)
!8458 = !DILocation(line: 1214, column: 2, scope: !8419)
!8459 = !{i32 -2141487591}
!8460 = !DILocation(line: 329, column: 10, scope: !6191, inlinedAt: !8417)
!8461 = !DILocation(line: 329, column: 16, scope: !6191, inlinedAt: !8417)
!8462 = !DILocation(line: 1214, column: 2, scope: !8418)
!8463 = !DILocation(line: 1215, column: 26, scope: !8412)
!8464 = !DILocation(line: 1215, column: 31, scope: !8412)
!8465 = !DILocation(line: 1215, column: 36, scope: !8412)
!8466 = !DILocation(line: 1215, column: 8, scope: !8412)
!8467 = !DILocation(line: 1215, column: 6, scope: !8412)
!8468 = !DILocation(line: 1216, column: 37, scope: !8412)
!8469 = !DILocation(line: 409, column: 2, scope: !6243, inlinedAt: !8414)
!8470 = !DILocation(line: 409, column: 2, scope: !6248, inlinedAt: !8414)
!8471 = !DILocation(line: 409, column: 2, scope: !6249, inlinedAt: !8414)
!8472 = !DILocation(line: 409, column: 2, scope: !6256, inlinedAt: !8414)
!8473 = !DILocation(line: 409, column: 2, scope: !6259, inlinedAt: !8414)
!8474 = !DILocation(line: 1218, column: 20, scope: !8412)
!8475 = !DILocation(line: 1218, column: 24, scope: !8412)
!8476 = !DILocation(line: 1218, column: 2, scope: !8412)
!8477 = !DILocation(line: 1219, column: 9, scope: !8412)
!8478 = !DILocation(line: 1219, column: 2, scope: !8412)
!8479 = !DILocation(line: 1220, column: 1, scope: !8412)
!8480 = distinct !DISubprogram(name: "moxa_write_room", scope: !3, file: !3, line: 1222, type: !3945, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8481 = !DILocalVariable(name: "tty", arg: 1, scope: !8480, file: !3, line: 1222, type: !215)
!8482 = !DILocation(line: 1222, column: 47, scope: !8480)
!8483 = !DILocalVariable(name: "ch", scope: !8480, file: !3, line: 1224, type: !116)
!8484 = !DILocation(line: 1224, column: 20, scope: !8480)
!8485 = !DILocation(line: 1226, column: 6, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 1226, column: 6)
!8487 = !DILocation(line: 1226, column: 11, scope: !8486)
!8488 = !DILocation(line: 1226, column: 6, scope: !8480)
!8489 = !DILocation(line: 1227, column: 3, scope: !8486)
!8490 = !DILocation(line: 1228, column: 7, scope: !8480)
!8491 = !DILocation(line: 1228, column: 12, scope: !8480)
!8492 = !DILocation(line: 1228, column: 5, scope: !8480)
!8493 = !DILocation(line: 1229, column: 6, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 1229, column: 6)
!8495 = !DILocation(line: 1229, column: 9, scope: !8494)
!8496 = !DILocation(line: 1229, column: 6, scope: !8480)
!8497 = !DILocation(line: 1230, column: 3, scope: !8494)
!8498 = !DILocation(line: 1231, column: 24, scope: !8480)
!8499 = !DILocation(line: 1231, column: 9, scope: !8480)
!8500 = !DILocation(line: 1231, column: 2, scope: !8480)
!8501 = !DILocation(line: 1232, column: 1, scope: !8480)
!8502 = distinct !DISubprogram(name: "moxa_chars_in_buffer", scope: !3, file: !3, line: 1244, type: !3945, scopeLine: 1245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8503 = !DILocalVariable(name: "tty", arg: 1, scope: !8502, file: !3, line: 1244, type: !215)
!8504 = !DILocation(line: 1244, column: 52, scope: !8502)
!8505 = !DILocalVariable(name: "ch", scope: !8502, file: !3, line: 1246, type: !116)
!8506 = !DILocation(line: 1246, column: 20, scope: !8502)
!8507 = !DILocation(line: 1246, column: 25, scope: !8502)
!8508 = !DILocation(line: 1246, column: 30, scope: !8502)
!8509 = !DILocalVariable(name: "chars", scope: !8502, file: !3, line: 1247, type: !141)
!8510 = !DILocation(line: 1247, column: 6, scope: !8502)
!8511 = !DILocation(line: 1249, column: 26, scope: !8502)
!8512 = !DILocation(line: 1249, column: 10, scope: !8502)
!8513 = !DILocation(line: 1249, column: 8, scope: !8502)
!8514 = !DILocation(line: 1250, column: 6, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 1250, column: 6)
!8516 = !DILocation(line: 1250, column: 6, scope: !8502)
!8517 = !DILocation(line: 1255, column: 30, scope: !8515)
!8518 = !DILocation(line: 1255, column: 34, scope: !8515)
!8519 = !DILocation(line: 1255, column: 10, scope: !8515)
!8520 = !DILocation(line: 1256, column: 9, scope: !8502)
!8521 = !DILocation(line: 1256, column: 2, scope: !8502)
!8522 = distinct !DISubprogram(name: "moxa_ioctl", scope: !3, file: !3, line: 286, type: !3950, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8523 = !DILocalVariable(name: "addr", arg: 1, scope: !8524, file: !8525, line: 138, type: !2179)
!8524 = distinct !DISubprogram(name: "check_copy_size", scope: !8525, file: !8525, line: 138, type: !8526, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8525 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!8526 = !DISubroutineType(types: !8527)
!8527 = !{!484, !2179, !323, !484}
!8528 = !DILocation(line: 138, column: 29, scope: !8524, inlinedAt: !8529)
!8529 = distinct !DILocation(line: 199, column: 6, scope: !8530, inlinedAt: !8535)
!8530 = distinct !DILexicalBlock(scope: !8532, file: !8531, line: 199, column: 6)
!8531 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!8532 = distinct !DISubprogram(name: "copy_to_user", scope: !8531, file: !8531, line: 197, type: !8533, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8533 = !DISubroutineType(types: !8534)
!8534 = !{!148, !113, !2179, !148}
!8535 = distinct !DILocation(line: 372, column: 9, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 372, column: 9)
!8537 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 346, column: 59)
!8538 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 346, column: 4)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 346, column: 4)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 344, column: 36)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 344, column: 3)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 344, column: 3)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 338, column: 24)
!8544 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 300, column: 15)
!8545 = !DILocalVariable(name: "bytes", arg: 2, scope: !8524, file: !8525, line: 138, type: !323)
!8546 = !DILocation(line: 138, column: 42, scope: !8524, inlinedAt: !8529)
!8547 = !DILocalVariable(name: "is_source", arg: 3, scope: !8524, file: !8525, line: 138, type: !484)
!8548 = !DILocation(line: 138, column: 54, scope: !8524, inlinedAt: !8529)
!8549 = !DILocalVariable(name: "sz", scope: !8524, file: !8525, line: 140, type: !141)
!8550 = !DILocation(line: 140, column: 6, scope: !8524, inlinedAt: !8529)
!8551 = !DILocalVariable(name: "__ret_warn_on", scope: !8552, file: !8525, line: 150, type: !141)
!8552 = distinct !DILexicalBlock(scope: !8553, file: !8525, line: 150, column: 6)
!8553 = distinct !DILexicalBlock(scope: !8524, file: !8525, line: 150, column: 6)
!8554 = !DILocation(line: 150, column: 6, scope: !8552, inlinedAt: !8529)
!8555 = !DILocalVariable(name: "to", arg: 1, scope: !8532, file: !8531, line: 197, type: !113)
!8556 = !DILocation(line: 197, column: 27, scope: !8532, inlinedAt: !8535)
!8557 = !DILocalVariable(name: "from", arg: 2, scope: !8532, file: !8531, line: 197, type: !2179)
!8558 = !DILocation(line: 197, column: 43, scope: !8532, inlinedAt: !8535)
!8559 = !DILocalVariable(name: "n", arg: 3, scope: !8532, file: !8531, line: 197, type: !148)
!8560 = !DILocation(line: 197, column: 63, scope: !8532, inlinedAt: !8535)
!8561 = !DILocation(line: 138, column: 29, scope: !8524, inlinedAt: !8562)
!8562 = distinct !DILocation(line: 199, column: 6, scope: !8530, inlinedAt: !8563)
!8563 = distinct !DILocation(line: 325, column: 9, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 325, column: 9)
!8565 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 317, column: 59)
!8566 = distinct !DILexicalBlock(scope: !8567, file: !3, line: 317, column: 4)
!8567 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 317, column: 4)
!8568 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 315, column: 36)
!8569 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 315, column: 3)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 315, column: 3)
!8571 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 309, column: 25)
!8572 = !DILocation(line: 138, column: 42, scope: !8524, inlinedAt: !8562)
!8573 = !DILocation(line: 138, column: 54, scope: !8524, inlinedAt: !8562)
!8574 = !DILocation(line: 140, column: 6, scope: !8524, inlinedAt: !8562)
!8575 = !DILocation(line: 150, column: 6, scope: !8552, inlinedAt: !8562)
!8576 = !DILocation(line: 197, column: 27, scope: !8532, inlinedAt: !8563)
!8577 = !DILocation(line: 197, column: 43, scope: !8532, inlinedAt: !8563)
!8578 = !DILocation(line: 197, column: 63, scope: !8532, inlinedAt: !8563)
!8579 = !DILocation(line: 138, column: 29, scope: !8524, inlinedAt: !8580)
!8580 = distinct !DILocation(line: 199, column: 6, scope: !8530, inlinedAt: !8581)
!8581 = distinct !DILocation(line: 303, column: 7, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 303, column: 7)
!8583 = !DILocation(line: 138, column: 42, scope: !8524, inlinedAt: !8580)
!8584 = !DILocation(line: 138, column: 54, scope: !8524, inlinedAt: !8580)
!8585 = !DILocation(line: 140, column: 6, scope: !8524, inlinedAt: !8580)
!8586 = !DILocation(line: 150, column: 6, scope: !8552, inlinedAt: !8580)
!8587 = !DILocation(line: 197, column: 27, scope: !8532, inlinedAt: !8581)
!8588 = !DILocation(line: 197, column: 43, scope: !8532, inlinedAt: !8581)
!8589 = !DILocation(line: 197, column: 63, scope: !8532, inlinedAt: !8581)
!8590 = !DILocalVariable(name: "tty", arg: 1, scope: !8522, file: !3, line: 286, type: !215)
!8591 = !DILocation(line: 286, column: 42, scope: !8522)
!8592 = !DILocalVariable(name: "cmd", arg: 2, scope: !8522, file: !3, line: 287, type: !7)
!8593 = !DILocation(line: 287, column: 22, scope: !8522)
!8594 = !DILocalVariable(name: "arg", arg: 3, scope: !8522, file: !3, line: 287, type: !148)
!8595 = !DILocation(line: 287, column: 41, scope: !8522)
!8596 = !DILocalVariable(name: "ch", scope: !8522, file: !3, line: 289, type: !116)
!8597 = !DILocation(line: 289, column: 20, scope: !8522)
!8598 = !DILocation(line: 289, column: 25, scope: !8522)
!8599 = !DILocation(line: 289, column: 30, scope: !8522)
!8600 = !DILocalVariable(name: "argp", scope: !8522, file: !3, line: 290, type: !113)
!8601 = !DILocation(line: 290, column: 15, scope: !8522)
!8602 = !DILocation(line: 290, column: 37, scope: !8522)
!8603 = !DILocation(line: 290, column: 22, scope: !8522)
!8604 = !DILocalVariable(name: "status", scope: !8522, file: !3, line: 291, type: !141)
!8605 = !DILocation(line: 291, column: 6, scope: !8522)
!8606 = !DILocalVariable(name: "ret", scope: !8522, file: !3, line: 291, type: !141)
!8607 = !DILocation(line: 291, column: 14, scope: !8522)
!8608 = !DILocation(line: 293, column: 6, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 293, column: 6)
!8610 = !DILocation(line: 293, column: 11, scope: !8609)
!8611 = !DILocation(line: 293, column: 17, scope: !8609)
!8612 = !DILocation(line: 293, column: 6, scope: !8522)
!8613 = !DILocation(line: 294, column: 7, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 294, column: 7)
!8615 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 293, column: 31)
!8616 = !DILocation(line: 294, column: 11, scope: !8614)
!8617 = !DILocation(line: 294, column: 32, scope: !8614)
!8618 = !DILocation(line: 294, column: 35, scope: !8614)
!8619 = !DILocation(line: 294, column: 39, scope: !8614)
!8620 = !DILocation(line: 294, column: 59, scope: !8614)
!8621 = !DILocation(line: 295, column: 5, scope: !8614)
!8622 = !DILocation(line: 295, column: 9, scope: !8614)
!8623 = !DILocation(line: 294, column: 7, scope: !8615)
!8624 = !DILocation(line: 296, column: 4, scope: !8614)
!8625 = !DILocation(line: 297, column: 2, scope: !8615)
!8626 = !DILocation(line: 297, column: 14, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 297, column: 13)
!8628 = !DILocation(line: 297, column: 13, scope: !8609)
!8629 = !DILocation(line: 298, column: 3, scope: !8627)
!8630 = !DILocation(line: 300, column: 10, scope: !8522)
!8631 = !DILocation(line: 300, column: 2, scope: !8522)
!8632 = !DILocation(line: 302, column: 18, scope: !8544)
!8633 = !DILocation(line: 302, column: 16, scope: !8544)
!8634 = !DILocation(line: 303, column: 20, scope: !8582)
!8635 = !DILocation(line: 199, column: 6, scope: !8530, inlinedAt: !8581)
!8636 = !DILocation(line: 141, column: 6, scope: !8637, inlinedAt: !8580)
!8637 = distinct !DILexicalBlock(scope: !8524, file: !8525, line: 141, column: 6)
!8638 = !DILocation(line: 0, scope: !8637, inlinedAt: !8580)
!8639 = !DILocation(line: 141, column: 6, scope: !8524, inlinedAt: !8580)
!8640 = !DILocation(line: 142, column: 29, scope: !8641, inlinedAt: !8580)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !8525, line: 142, column: 7)
!8642 = distinct !DILexicalBlock(scope: !8637, file: !8525, line: 141, column: 39)
!8643 = !DILocation(line: 142, column: 8, scope: !8641, inlinedAt: !8580)
!8644 = !DILocation(line: 142, column: 7, scope: !8642, inlinedAt: !8580)
!8645 = !DILocation(line: 143, column: 18, scope: !8641, inlinedAt: !8580)
!8646 = !DILocation(line: 143, column: 22, scope: !8641, inlinedAt: !8580)
!8647 = !DILocation(line: 143, column: 4, scope: !8641, inlinedAt: !8580)
!8648 = !DILocation(line: 144, column: 12, scope: !8649, inlinedAt: !8580)
!8649 = distinct !DILexicalBlock(scope: !8641, file: !8525, line: 144, column: 12)
!8650 = !DILocation(line: 144, column: 12, scope: !8641, inlinedAt: !8580)
!8651 = !DILocation(line: 145, column: 4, scope: !8649, inlinedAt: !8580)
!8652 = !DILocation(line: 147, column: 4, scope: !8649, inlinedAt: !8580)
!8653 = !DILocation(line: 148, column: 3, scope: !8642, inlinedAt: !8580)
!8654 = !DILocation(line: 150, column: 6, scope: !8655, inlinedAt: !8580)
!8655 = distinct !DILexicalBlock(scope: !8552, file: !8525, line: 150, column: 6)
!8656 = !DILocation(line: 150, column: 6, scope: !8657, inlinedAt: !8580)
!8657 = distinct !DILexicalBlock(scope: !8658, file: !8525, line: 150, column: 6)
!8658 = distinct !DILexicalBlock(scope: !8655, file: !8525, line: 150, column: 6)
!8659 = !{i32 -2145506942, i32 -2145506913, i32 -2145506867, i32 -2145506809, i32 -2145506755, i32 -2145506701, i32 -2145506646, i32 -2145506615}
!8660 = !DILocation(line: 150, column: 6, scope: !8661, inlinedAt: !8580)
!8661 = distinct !DILexicalBlock(scope: !8658, file: !8525, line: 150, column: 6)
!8662 = !{i32 -2145506195, i32 -2145506188, i32 -2145506136, i32 -2145506105, i32 -2145506075}
!8663 = !DILocation(line: 150, column: 6, scope: !8658, inlinedAt: !8580)
!8664 = !DILocation(line: 150, column: 6, scope: !8553, inlinedAt: !8580)
!8665 = !DILocation(line: 150, column: 6, scope: !8524, inlinedAt: !8580)
!8666 = !DILocation(line: 151, column: 3, scope: !8553, inlinedAt: !8580)
!8667 = !DILocation(line: 152, column: 20, scope: !8524, inlinedAt: !8580)
!8668 = !DILocation(line: 152, column: 26, scope: !8524, inlinedAt: !8580)
!8669 = !DILocation(line: 152, column: 33, scope: !8524, inlinedAt: !8580)
!8670 = !DILocation(line: 152, column: 2, scope: !8524, inlinedAt: !8580)
!8671 = !DILocation(line: 153, column: 2, scope: !8524, inlinedAt: !8580)
!8672 = !DILocation(line: 154, column: 1, scope: !8524, inlinedAt: !8580)
!8673 = !DILocation(line: 199, column: 6, scope: !8532, inlinedAt: !8581)
!8674 = !DILocation(line: 200, column: 21, scope: !8530, inlinedAt: !8581)
!8675 = !DILocation(line: 200, column: 25, scope: !8530, inlinedAt: !8581)
!8676 = !DILocation(line: 200, column: 31, scope: !8530, inlinedAt: !8581)
!8677 = !DILocation(line: 200, column: 7, scope: !8530, inlinedAt: !8581)
!8678 = !DILocation(line: 200, column: 5, scope: !8530, inlinedAt: !8581)
!8679 = !DILocation(line: 200, column: 3, scope: !8530, inlinedAt: !8581)
!8680 = !DILocation(line: 201, column: 9, scope: !8532, inlinedAt: !8581)
!8681 = !DILocation(line: 303, column: 7, scope: !8582)
!8682 = !DILocation(line: 303, column: 7, scope: !8544)
!8683 = !DILocation(line: 304, column: 8, scope: !8582)
!8684 = !DILocation(line: 304, column: 4, scope: !8582)
!8685 = !DILocation(line: 305, column: 3, scope: !8544)
!8686 = !DILocation(line: 307, column: 21, scope: !8544)
!8687 = !DILocation(line: 307, column: 25, scope: !8544)
!8688 = !DILocation(line: 307, column: 3, scope: !8544)
!8689 = !DILocation(line: 308, column: 3, scope: !8544)
!8690 = !DILocalVariable(name: "argm", scope: !8571, file: !3, line: 310, type: !8691)
!8691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8692, size: 64)
!8692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "moxaq_str", file: !3, line: 124, size: 64, elements: !8693)
!8693 = !{!8694, !8695}
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "inq", scope: !8692, file: !3, line: 125, baseType: !141, size: 32)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "outq", scope: !8692, file: !3, line: 126, baseType: !141, size: 32, offset: 32)
!8696 = !DILocation(line: 310, column: 28, scope: !8571)
!8697 = !DILocation(line: 310, column: 35, scope: !8571)
!8698 = !DILocalVariable(name: "tmp", scope: !8571, file: !3, line: 311, type: !8692)
!8699 = !DILocation(line: 311, column: 20, scope: !8571)
!8700 = !DILocalVariable(name: "p", scope: !8571, file: !3, line: 312, type: !116)
!8701 = !DILocation(line: 312, column: 21, scope: !8571)
!8702 = !DILocalVariable(name: "i", scope: !8571, file: !3, line: 313, type: !7)
!8703 = !DILocation(line: 313, column: 16, scope: !8571)
!8704 = !DILocalVariable(name: "j", scope: !8571, file: !3, line: 313, type: !7)
!8705 = !DILocation(line: 313, column: 19, scope: !8571)
!8706 = !DILocation(line: 315, column: 10, scope: !8570)
!8707 = !DILocation(line: 315, column: 8, scope: !8570)
!8708 = !DILocation(line: 315, column: 15, scope: !8569)
!8709 = !DILocation(line: 315, column: 17, scope: !8569)
!8710 = !DILocation(line: 315, column: 3, scope: !8570)
!8711 = !DILocation(line: 316, column: 20, scope: !8568)
!8712 = !DILocation(line: 316, column: 8, scope: !8568)
!8713 = !DILocation(line: 316, column: 23, scope: !8568)
!8714 = !DILocation(line: 316, column: 6, scope: !8568)
!8715 = !DILocation(line: 317, column: 11, scope: !8567)
!8716 = !DILocation(line: 317, column: 9, scope: !8567)
!8717 = !DILocation(line: 317, column: 16, scope: !8566)
!8718 = !DILocation(line: 317, column: 18, scope: !8566)
!8719 = !DILocation(line: 317, column: 4, scope: !8567)
!8720 = !DILocation(line: 318, column: 5, scope: !8565)
!8721 = !DILocation(line: 319, column: 5, scope: !8565)
!8722 = !DILocation(line: 320, column: 21, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 320, column: 9)
!8724 = !DILocation(line: 320, column: 9, scope: !8723)
!8725 = !DILocation(line: 320, column: 24, scope: !8723)
!8726 = !DILocation(line: 320, column: 9, scope: !8565)
!8727 = !DILocation(line: 321, column: 32, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 320, column: 31)
!8729 = !DILocation(line: 321, column: 16, scope: !8728)
!8730 = !DILocation(line: 321, column: 10, scope: !8728)
!8731 = !DILocation(line: 321, column: 14, scope: !8728)
!8732 = !DILocation(line: 322, column: 33, scope: !8728)
!8733 = !DILocation(line: 322, column: 17, scope: !8728)
!8734 = !DILocation(line: 322, column: 10, scope: !8728)
!8735 = !DILocation(line: 322, column: 15, scope: !8728)
!8736 = !DILocation(line: 323, column: 5, scope: !8728)
!8737 = !DILocation(line: 324, column: 5, scope: !8565)
!8738 = !DILocation(line: 325, column: 22, scope: !8564)
!8739 = !DILocation(line: 325, column: 28, scope: !8564)
!8740 = !DILocation(line: 199, column: 6, scope: !8530, inlinedAt: !8563)
!8741 = !DILocation(line: 141, column: 6, scope: !8637, inlinedAt: !8562)
!8742 = !DILocation(line: 0, scope: !8637, inlinedAt: !8562)
!8743 = !DILocation(line: 141, column: 6, scope: !8524, inlinedAt: !8562)
!8744 = !DILocation(line: 142, column: 29, scope: !8641, inlinedAt: !8562)
!8745 = !DILocation(line: 142, column: 8, scope: !8641, inlinedAt: !8562)
!8746 = !DILocation(line: 142, column: 7, scope: !8642, inlinedAt: !8562)
!8747 = !DILocation(line: 143, column: 18, scope: !8641, inlinedAt: !8562)
!8748 = !DILocation(line: 143, column: 22, scope: !8641, inlinedAt: !8562)
!8749 = !DILocation(line: 143, column: 4, scope: !8641, inlinedAt: !8562)
!8750 = !DILocation(line: 144, column: 12, scope: !8649, inlinedAt: !8562)
!8751 = !DILocation(line: 144, column: 12, scope: !8641, inlinedAt: !8562)
!8752 = !DILocation(line: 145, column: 4, scope: !8649, inlinedAt: !8562)
!8753 = !DILocation(line: 147, column: 4, scope: !8649, inlinedAt: !8562)
!8754 = !DILocation(line: 148, column: 3, scope: !8642, inlinedAt: !8562)
!8755 = !DILocation(line: 150, column: 6, scope: !8655, inlinedAt: !8562)
!8756 = !DILocation(line: 150, column: 6, scope: !8657, inlinedAt: !8562)
!8757 = !DILocation(line: 150, column: 6, scope: !8661, inlinedAt: !8562)
!8758 = !DILocation(line: 150, column: 6, scope: !8658, inlinedAt: !8562)
!8759 = !DILocation(line: 150, column: 6, scope: !8553, inlinedAt: !8562)
!8760 = !DILocation(line: 150, column: 6, scope: !8524, inlinedAt: !8562)
!8761 = !DILocation(line: 151, column: 3, scope: !8553, inlinedAt: !8562)
!8762 = !DILocation(line: 152, column: 20, scope: !8524, inlinedAt: !8562)
!8763 = !DILocation(line: 152, column: 26, scope: !8524, inlinedAt: !8562)
!8764 = !DILocation(line: 152, column: 33, scope: !8524, inlinedAt: !8562)
!8765 = !DILocation(line: 152, column: 2, scope: !8524, inlinedAt: !8562)
!8766 = !DILocation(line: 153, column: 2, scope: !8524, inlinedAt: !8562)
!8767 = !DILocation(line: 154, column: 1, scope: !8524, inlinedAt: !8562)
!8768 = !DILocation(line: 199, column: 6, scope: !8532, inlinedAt: !8563)
!8769 = !DILocation(line: 200, column: 21, scope: !8530, inlinedAt: !8563)
!8770 = !DILocation(line: 200, column: 25, scope: !8530, inlinedAt: !8563)
!8771 = !DILocation(line: 200, column: 31, scope: !8530, inlinedAt: !8563)
!8772 = !DILocation(line: 200, column: 7, scope: !8530, inlinedAt: !8563)
!8773 = !DILocation(line: 200, column: 5, scope: !8530, inlinedAt: !8563)
!8774 = !DILocation(line: 200, column: 3, scope: !8530, inlinedAt: !8563)
!8775 = !DILocation(line: 201, column: 9, scope: !8532, inlinedAt: !8563)
!8776 = !DILocation(line: 325, column: 9, scope: !8564)
!8777 = !DILocation(line: 325, column: 9, scope: !8565)
!8778 = !DILocation(line: 326, column: 6, scope: !8564)
!8779 = !DILocation(line: 327, column: 4, scope: !8565)
!8780 = !DILocation(line: 317, column: 42, scope: !8566)
!8781 = !DILocation(line: 317, column: 47, scope: !8566)
!8782 = !DILocation(line: 317, column: 55, scope: !8566)
!8783 = !DILocation(line: 317, column: 4, scope: !8566)
!8784 = distinct !{!8784, !8719, !8785}
!8785 = !DILocation(line: 327, column: 4, scope: !8567)
!8786 = !DILocation(line: 328, column: 3, scope: !8568)
!8787 = !DILocation(line: 315, column: 32, scope: !8569)
!8788 = !DILocation(line: 315, column: 3, scope: !8569)
!8789 = distinct !{!8789, !8710, !8790}
!8790 = !DILocation(line: 328, column: 3, scope: !8570)
!8791 = !DILocation(line: 329, column: 3, scope: !8571)
!8792 = !DILocation(line: 331, column: 28, scope: !8544)
!8793 = !DILocation(line: 331, column: 12, scope: !8544)
!8794 = !DILocation(line: 331, column: 10, scope: !8544)
!8795 = !DILocation(line: 332, column: 9, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 332, column: 9)
!8797 = !DILocalVariable(name: "__ret_pu", scope: !8798, file: !3, line: 332, type: !141)
!8798 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 332, column: 9)
!8799 = !DILocation(line: 332, column: 9, scope: !8798)
!8800 = !DILocalVariable(name: "__ptr_pu", scope: !8798, file: !3, line: 332, type: !113)
!8801 = !DILocalVariable(name: "__val_pu", scope: !8798, file: !3, line: 332, type: !148)
!8802 = !{i32 -2141504490}
!8803 = !DILocation(line: 332, column: 9, scope: !8544)
!8804 = !DILocation(line: 332, column: 7, scope: !8544)
!8805 = !DILocation(line: 333, column: 3, scope: !8544)
!8806 = !DILocation(line: 335, column: 28, scope: !8544)
!8807 = !DILocation(line: 335, column: 12, scope: !8544)
!8808 = !DILocation(line: 335, column: 10, scope: !8544)
!8809 = !DILocation(line: 336, column: 9, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 336, column: 9)
!8811 = !DILocalVariable(name: "__ret_pu", scope: !8812, file: !3, line: 336, type: !141)
!8812 = distinct !DILexicalBlock(scope: !8810, file: !3, line: 336, column: 9)
!8813 = !DILocation(line: 336, column: 9, scope: !8812)
!8814 = !DILocalVariable(name: "__ptr_pu", scope: !8812, file: !3, line: 336, type: !113)
!8815 = !DILocalVariable(name: "__val_pu", scope: !8812, file: !3, line: 336, type: !148)
!8816 = !{i32 -2141503603}
!8817 = !DILocation(line: 336, column: 9, scope: !8544)
!8818 = !DILocation(line: 336, column: 7, scope: !8544)
!8819 = !DILocation(line: 337, column: 3, scope: !8544)
!8820 = !DILocalVariable(name: "argm", scope: !8543, file: !3, line: 339, type: !8821)
!8821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8822, size: 64)
!8822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxser_mstatus", file: !3, line: 116, size: 160, elements: !8823)
!8823 = !{!8824, !8825, !8826, !8827, !8828}
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "cflag", scope: !8822, file: !3, line: 117, baseType: !3876, size: 32)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !8822, file: !3, line: 118, baseType: !141, size: 32, offset: 32)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !8822, file: !3, line: 119, baseType: !141, size: 32, offset: 64)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "ri", scope: !8822, file: !3, line: 120, baseType: !141, size: 32, offset: 96)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !8822, file: !3, line: 121, baseType: !141, size: 32, offset: 128)
!8829 = !DILocation(line: 339, column: 32, scope: !8543)
!8830 = !DILocation(line: 339, column: 39, scope: !8543)
!8831 = !DILocalVariable(name: "tmp", scope: !8543, file: !3, line: 340, type: !8822)
!8832 = !DILocation(line: 340, column: 24, scope: !8543)
!8833 = !DILocalVariable(name: "p", scope: !8543, file: !3, line: 341, type: !116)
!8834 = !DILocation(line: 341, column: 21, scope: !8543)
!8835 = !DILocalVariable(name: "i", scope: !8543, file: !3, line: 342, type: !7)
!8836 = !DILocation(line: 342, column: 16, scope: !8543)
!8837 = !DILocalVariable(name: "j", scope: !8543, file: !3, line: 342, type: !7)
!8838 = !DILocation(line: 342, column: 19, scope: !8543)
!8839 = !DILocation(line: 344, column: 10, scope: !8542)
!8840 = !DILocation(line: 344, column: 8, scope: !8542)
!8841 = !DILocation(line: 344, column: 15, scope: !8541)
!8842 = !DILocation(line: 344, column: 17, scope: !8541)
!8843 = !DILocation(line: 344, column: 3, scope: !8542)
!8844 = !DILocation(line: 345, column: 20, scope: !8540)
!8845 = !DILocation(line: 345, column: 8, scope: !8540)
!8846 = !DILocation(line: 345, column: 23, scope: !8540)
!8847 = !DILocation(line: 345, column: 6, scope: !8540)
!8848 = !DILocation(line: 346, column: 11, scope: !8539)
!8849 = !DILocation(line: 346, column: 9, scope: !8539)
!8850 = !DILocation(line: 346, column: 16, scope: !8538)
!8851 = !DILocation(line: 346, column: 18, scope: !8538)
!8852 = !DILocation(line: 346, column: 4, scope: !8539)
!8853 = !DILocalVariable(name: "ttyp", scope: !8537, file: !3, line: 347, type: !215)
!8854 = !DILocation(line: 347, column: 24, scope: !8537)
!8855 = !DILocation(line: 348, column: 5, scope: !8537)
!8856 = !DILocation(line: 349, column: 5, scope: !8537)
!8857 = !DILocation(line: 350, column: 22, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 350, column: 9)
!8859 = !DILocation(line: 350, column: 10, scope: !8858)
!8860 = !DILocation(line: 350, column: 25, scope: !8858)
!8861 = !DILocation(line: 350, column: 9, scope: !8537)
!8862 = !DILocation(line: 351, column: 13, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 350, column: 32)
!8864 = !DILocation(line: 352, column: 6, scope: !8863)
!8865 = !DILocation(line: 355, column: 33, scope: !8537)
!8866 = !DILocation(line: 355, column: 14, scope: !8537)
!8867 = !DILocation(line: 355, column: 12, scope: !8537)
!8868 = !DILocation(line: 356, column: 5, scope: !8537)
!8869 = !DILocation(line: 358, column: 9, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 358, column: 9)
!8871 = !DILocation(line: 358, column: 16, scope: !8870)
!8872 = !DILocation(line: 358, column: 9, scope: !8537)
!8873 = !DILocation(line: 359, column: 10, scope: !8870)
!8874 = !DILocation(line: 359, column: 14, scope: !8870)
!8875 = !DILocation(line: 359, column: 6, scope: !8870)
!8876 = !DILocation(line: 360, column: 9, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 360, column: 9)
!8878 = !DILocation(line: 360, column: 16, scope: !8877)
!8879 = !DILocation(line: 360, column: 9, scope: !8537)
!8880 = !DILocation(line: 361, column: 10, scope: !8877)
!8881 = !DILocation(line: 361, column: 14, scope: !8877)
!8882 = !DILocation(line: 361, column: 6, scope: !8877)
!8883 = !DILocation(line: 362, column: 9, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 362, column: 9)
!8885 = !DILocation(line: 362, column: 16, scope: !8884)
!8886 = !DILocation(line: 362, column: 9, scope: !8537)
!8887 = !DILocation(line: 363, column: 10, scope: !8884)
!8888 = !DILocation(line: 363, column: 14, scope: !8884)
!8889 = !DILocation(line: 363, column: 6, scope: !8884)
!8890 = !DILocation(line: 365, column: 30, scope: !8537)
!8891 = !DILocation(line: 365, column: 33, scope: !8537)
!8892 = !DILocation(line: 365, column: 12, scope: !8537)
!8893 = !DILocation(line: 365, column: 10, scope: !8537)
!8894 = !DILocation(line: 366, column: 10, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 366, column: 9)
!8896 = !DILocation(line: 366, column: 9, scope: !8537)
!8897 = !DILocation(line: 367, column: 18, scope: !8895)
!8898 = !DILocation(line: 367, column: 21, scope: !8895)
!8899 = !DILocation(line: 367, column: 10, scope: !8895)
!8900 = !DILocation(line: 367, column: 16, scope: !8895)
!8901 = !DILocation(line: 367, column: 6, scope: !8895)
!8902 = !DILocation(line: 369, column: 18, scope: !8895)
!8903 = !DILocation(line: 369, column: 24, scope: !8895)
!8904 = !DILocation(line: 369, column: 32, scope: !8895)
!8905 = !DILocation(line: 369, column: 10, scope: !8895)
!8906 = !DILocation(line: 369, column: 16, scope: !8895)
!8907 = !DILocation(line: 370, column: 18, scope: !8537)
!8908 = !DILocation(line: 370, column: 5, scope: !8537)
!8909 = !DILabel(scope: !8537, name: "copy", file: !3, line: 371)
!8910 = !DILocation(line: 371, column: 1, scope: !8537)
!8911 = !DILocation(line: 372, column: 22, scope: !8536)
!8912 = !DILocation(line: 372, column: 28, scope: !8536)
!8913 = !DILocation(line: 199, column: 6, scope: !8530, inlinedAt: !8535)
!8914 = !DILocation(line: 141, column: 6, scope: !8637, inlinedAt: !8529)
!8915 = !DILocation(line: 0, scope: !8637, inlinedAt: !8529)
!8916 = !DILocation(line: 141, column: 6, scope: !8524, inlinedAt: !8529)
!8917 = !DILocation(line: 142, column: 29, scope: !8641, inlinedAt: !8529)
!8918 = !DILocation(line: 142, column: 8, scope: !8641, inlinedAt: !8529)
!8919 = !DILocation(line: 142, column: 7, scope: !8642, inlinedAt: !8529)
!8920 = !DILocation(line: 143, column: 18, scope: !8641, inlinedAt: !8529)
!8921 = !DILocation(line: 143, column: 22, scope: !8641, inlinedAt: !8529)
!8922 = !DILocation(line: 143, column: 4, scope: !8641, inlinedAt: !8529)
!8923 = !DILocation(line: 144, column: 12, scope: !8649, inlinedAt: !8529)
!8924 = !DILocation(line: 144, column: 12, scope: !8641, inlinedAt: !8529)
!8925 = !DILocation(line: 145, column: 4, scope: !8649, inlinedAt: !8529)
!8926 = !DILocation(line: 147, column: 4, scope: !8649, inlinedAt: !8529)
!8927 = !DILocation(line: 148, column: 3, scope: !8642, inlinedAt: !8529)
!8928 = !DILocation(line: 150, column: 6, scope: !8655, inlinedAt: !8529)
!8929 = !DILocation(line: 150, column: 6, scope: !8657, inlinedAt: !8529)
!8930 = !DILocation(line: 150, column: 6, scope: !8661, inlinedAt: !8529)
!8931 = !DILocation(line: 150, column: 6, scope: !8658, inlinedAt: !8529)
!8932 = !DILocation(line: 150, column: 6, scope: !8553, inlinedAt: !8529)
!8933 = !DILocation(line: 150, column: 6, scope: !8524, inlinedAt: !8529)
!8934 = !DILocation(line: 151, column: 3, scope: !8553, inlinedAt: !8529)
!8935 = !DILocation(line: 152, column: 20, scope: !8524, inlinedAt: !8529)
!8936 = !DILocation(line: 152, column: 26, scope: !8524, inlinedAt: !8529)
!8937 = !DILocation(line: 152, column: 33, scope: !8524, inlinedAt: !8529)
!8938 = !DILocation(line: 152, column: 2, scope: !8524, inlinedAt: !8529)
!8939 = !DILocation(line: 153, column: 2, scope: !8524, inlinedAt: !8529)
!8940 = !DILocation(line: 154, column: 1, scope: !8524, inlinedAt: !8529)
!8941 = !DILocation(line: 199, column: 6, scope: !8532, inlinedAt: !8535)
!8942 = !DILocation(line: 200, column: 21, scope: !8530, inlinedAt: !8535)
!8943 = !DILocation(line: 200, column: 25, scope: !8530, inlinedAt: !8535)
!8944 = !DILocation(line: 200, column: 31, scope: !8530, inlinedAt: !8535)
!8945 = !DILocation(line: 200, column: 7, scope: !8530, inlinedAt: !8535)
!8946 = !DILocation(line: 200, column: 5, scope: !8530, inlinedAt: !8535)
!8947 = !DILocation(line: 200, column: 3, scope: !8530, inlinedAt: !8535)
!8948 = !DILocation(line: 201, column: 9, scope: !8532, inlinedAt: !8535)
!8949 = !DILocation(line: 372, column: 9, scope: !8536)
!8950 = !DILocation(line: 372, column: 9, scope: !8537)
!8951 = !DILocation(line: 373, column: 6, scope: !8536)
!8952 = !DILocation(line: 374, column: 4, scope: !8537)
!8953 = !DILocation(line: 346, column: 42, scope: !8538)
!8954 = !DILocation(line: 346, column: 47, scope: !8538)
!8955 = !DILocation(line: 346, column: 55, scope: !8538)
!8956 = !DILocation(line: 346, column: 4, scope: !8538)
!8957 = distinct !{!8957, !8852, !8958}
!8958 = !DILocation(line: 374, column: 4, scope: !8539)
!8959 = !DILocation(line: 375, column: 3, scope: !8540)
!8960 = !DILocation(line: 344, column: 32, scope: !8541)
!8961 = !DILocation(line: 344, column: 3, scope: !8541)
!8962 = distinct !{!8962, !8843, !8963}
!8963 = !DILocation(line: 375, column: 3, scope: !8542)
!8964 = !DILocation(line: 376, column: 3, scope: !8543)
!8965 = !DILocation(line: 379, column: 7, scope: !8544)
!8966 = !DILocation(line: 380, column: 2, scope: !8544)
!8967 = !DILocation(line: 381, column: 9, scope: !8522)
!8968 = !DILocation(line: 381, column: 2, scope: !8522)
!8969 = !DILocation(line: 382, column: 1, scope: !8522)
!8970 = distinct !DISubprogram(name: "moxa_set_termios", scope: !3, file: !3, line: 1306, type: !3958, scopeLine: 1308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8971 = !DILocalVariable(name: "tty", arg: 1, scope: !8970, file: !3, line: 1306, type: !215)
!8972 = !DILocation(line: 1306, column: 49, scope: !8970)
!8973 = !DILocalVariable(name: "old_termios", arg: 2, scope: !8970, file: !3, line: 1307, type: !3902)
!8974 = !DILocation(line: 1307, column: 20, scope: !8970)
!8975 = !DILocalVariable(name: "ch", scope: !8970, file: !3, line: 1309, type: !116)
!8976 = !DILocation(line: 1309, column: 20, scope: !8970)
!8977 = !DILocation(line: 1309, column: 25, scope: !8970)
!8978 = !DILocation(line: 1309, column: 30, scope: !8970)
!8979 = !DILocation(line: 1311, column: 6, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 1311, column: 6)
!8981 = !DILocation(line: 1311, column: 9, scope: !8980)
!8982 = !DILocation(line: 1311, column: 6, scope: !8970)
!8983 = !DILocation(line: 1312, column: 3, scope: !8980)
!8984 = !DILocation(line: 1313, column: 21, scope: !8970)
!8985 = !DILocation(line: 1313, column: 26, scope: !8970)
!8986 = !DILocation(line: 1313, column: 2, scope: !8970)
!8987 = !DILocation(line: 1314, column: 8, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 1314, column: 6)
!8989 = !DILocation(line: 1314, column: 21, scope: !8988)
!8990 = !DILocation(line: 1314, column: 29, scope: !8988)
!8991 = !DILocation(line: 1314, column: 39, scope: !8988)
!8992 = !DILocation(line: 1314, column: 42, scope: !8988)
!8993 = !DILocation(line: 1314, column: 6, scope: !8970)
!8994 = !DILocation(line: 1315, column: 3, scope: !8988)
!8995 = !DILocation(line: 1316, column: 1, scope: !8970)
!8996 = distinct !DISubprogram(name: "moxa_stop", scope: !3, file: !3, line: 1318, type: !3931, scopeLine: 1319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!8997 = !DILocalVariable(name: "tty", arg: 1, scope: !8996, file: !3, line: 1318, type: !215)
!8998 = !DILocation(line: 1318, column: 42, scope: !8996)
!8999 = !DILocalVariable(name: "ch", scope: !8996, file: !3, line: 1320, type: !116)
!9000 = !DILocation(line: 1320, column: 20, scope: !8996)
!9001 = !DILocation(line: 1320, column: 25, scope: !8996)
!9002 = !DILocation(line: 1320, column: 30, scope: !8996)
!9003 = !DILocation(line: 1322, column: 6, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 1322, column: 6)
!9005 = !DILocation(line: 1322, column: 9, scope: !9004)
!9006 = !DILocation(line: 1322, column: 6, scope: !8996)
!9007 = !DILocation(line: 1323, column: 3, scope: !9004)
!9008 = !DILocation(line: 1324, column: 20, scope: !8996)
!9009 = !DILocation(line: 1324, column: 2, scope: !8996)
!9010 = !DILocation(line: 1325, column: 22, scope: !8996)
!9011 = !DILocation(line: 1325, column: 26, scope: !8996)
!9012 = !DILocation(line: 1325, column: 2, scope: !8996)
!9013 = !DILocation(line: 1326, column: 1, scope: !8996)
!9014 = distinct !DISubprogram(name: "moxa_start", scope: !3, file: !3, line: 1329, type: !3931, scopeLine: 1330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9015 = !DILocalVariable(name: "tty", arg: 1, scope: !9014, file: !3, line: 1329, type: !215)
!9016 = !DILocation(line: 1329, column: 43, scope: !9014)
!9017 = !DILocalVariable(name: "ch", scope: !9014, file: !3, line: 1331, type: !116)
!9018 = !DILocation(line: 1331, column: 20, scope: !9014)
!9019 = !DILocation(line: 1331, column: 25, scope: !9014)
!9020 = !DILocation(line: 1331, column: 30, scope: !9014)
!9021 = !DILocation(line: 1333, column: 6, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 1333, column: 6)
!9023 = !DILocation(line: 1333, column: 9, scope: !9022)
!9024 = !DILocation(line: 1333, column: 6, scope: !9014)
!9025 = !DILocation(line: 1334, column: 3, scope: !9022)
!9026 = !DILocation(line: 1336, column: 28, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 1336, column: 6)
!9028 = !DILocation(line: 1336, column: 32, scope: !9027)
!9029 = !DILocation(line: 1336, column: 7, scope: !9027)
!9030 = !DILocation(line: 1336, column: 6, scope: !9014)
!9031 = !DILocation(line: 1337, column: 3, scope: !9027)
!9032 = !DILocation(line: 1339, column: 19, scope: !9014)
!9033 = !DILocation(line: 1339, column: 2, scope: !9014)
!9034 = !DILocation(line: 1340, column: 24, scope: !9014)
!9035 = !DILocation(line: 1340, column: 28, scope: !9014)
!9036 = !DILocation(line: 1340, column: 2, scope: !9014)
!9037 = !DILocation(line: 1341, column: 1, scope: !9014)
!9038 = distinct !DISubprogram(name: "moxa_hangup", scope: !3, file: !3, line: 1343, type: !3931, scopeLine: 1344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9039 = !DILocalVariable(name: "tty", arg: 1, scope: !9038, file: !3, line: 1343, type: !215)
!9040 = !DILocation(line: 1343, column: 44, scope: !9038)
!9041 = !DILocalVariable(name: "ch", scope: !9038, file: !3, line: 1345, type: !116)
!9042 = !DILocation(line: 1345, column: 20, scope: !9038)
!9043 = !DILocation(line: 1345, column: 25, scope: !9038)
!9044 = !DILocation(line: 1345, column: 30, scope: !9038)
!9045 = !DILocation(line: 1346, column: 19, scope: !9038)
!9046 = !DILocation(line: 1346, column: 23, scope: !9038)
!9047 = !DILocation(line: 1346, column: 2, scope: !9038)
!9048 = !DILocation(line: 1347, column: 1, scope: !9038)
!9049 = distinct !DISubprogram(name: "moxa_break_ctl", scope: !3, file: !3, line: 384, type: !3967, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9050 = !DILocalVariable(name: "tty", arg: 1, scope: !9049, file: !3, line: 384, type: !215)
!9051 = !DILocation(line: 384, column: 46, scope: !9049)
!9052 = !DILocalVariable(name: "state", arg: 2, scope: !9049, file: !3, line: 384, type: !141)
!9053 = !DILocation(line: 384, column: 55, scope: !9049)
!9054 = !DILocalVariable(name: "port", scope: !9049, file: !3, line: 386, type: !116)
!9055 = !DILocation(line: 386, column: 20, scope: !9049)
!9056 = !DILocation(line: 386, column: 27, scope: !9049)
!9057 = !DILocation(line: 386, column: 32, scope: !9049)
!9058 = !DILocation(line: 388, column: 11, scope: !9049)
!9059 = !DILocation(line: 388, column: 17, scope: !9049)
!9060 = !DILocation(line: 388, column: 28, scope: !9049)
!9061 = !DILocation(line: 388, column: 2, scope: !9049)
!9062 = !DILocation(line: 390, column: 2, scope: !9049)
!9063 = distinct !DISubprogram(name: "moxa_flush_buffer", scope: !3, file: !3, line: 1234, type: !3931, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9064 = !DILocalVariable(name: "tty", arg: 1, scope: !9063, file: !3, line: 1234, type: !215)
!9065 = !DILocation(line: 1234, column: 50, scope: !9063)
!9066 = !DILocalVariable(name: "ch", scope: !9063, file: !3, line: 1236, type: !116)
!9067 = !DILocation(line: 1236, column: 20, scope: !9063)
!9068 = !DILocation(line: 1236, column: 25, scope: !9063)
!9069 = !DILocation(line: 1236, column: 30, scope: !9063)
!9070 = !DILocation(line: 1238, column: 6, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1238, column: 6)
!9072 = !DILocation(line: 1238, column: 9, scope: !9071)
!9073 = !DILocation(line: 1238, column: 6, scope: !9063)
!9074 = !DILocation(line: 1239, column: 3, scope: !9071)
!9075 = !DILocation(line: 1240, column: 20, scope: !9063)
!9076 = !DILocation(line: 1240, column: 2, scope: !9063)
!9077 = !DILocation(line: 1241, column: 13, scope: !9063)
!9078 = !DILocation(line: 1241, column: 2, scope: !9063)
!9079 = !DILocation(line: 1242, column: 1, scope: !9063)
!9080 = distinct !DISubprogram(name: "moxa_tiocmget", scope: !3, file: !3, line: 1259, type: !3945, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9081 = !DILocalVariable(name: "tty", arg: 1, scope: !9080, file: !3, line: 1259, type: !215)
!9082 = !DILocation(line: 1259, column: 45, scope: !9080)
!9083 = !DILocalVariable(name: "ch", scope: !9080, file: !3, line: 1261, type: !116)
!9084 = !DILocation(line: 1261, column: 20, scope: !9080)
!9085 = !DILocation(line: 1261, column: 25, scope: !9080)
!9086 = !DILocation(line: 1261, column: 30, scope: !9080)
!9087 = !DILocalVariable(name: "flag", scope: !9080, file: !3, line: 1262, type: !141)
!9088 = !DILocation(line: 1262, column: 6, scope: !9080)
!9089 = !DILocalVariable(name: "dtr", scope: !9080, file: !3, line: 1262, type: !141)
!9090 = !DILocation(line: 1262, column: 16, scope: !9080)
!9091 = !DILocalVariable(name: "rts", scope: !9080, file: !3, line: 1262, type: !141)
!9092 = !DILocation(line: 1262, column: 21, scope: !9080)
!9093 = !DILocation(line: 1264, column: 21, scope: !9080)
!9094 = !DILocation(line: 1264, column: 2, scope: !9080)
!9095 = !DILocation(line: 1265, column: 6, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 1265, column: 6)
!9097 = !DILocation(line: 1265, column: 6, scope: !9080)
!9098 = !DILocation(line: 1266, column: 8, scope: !9096)
!9099 = !DILocation(line: 1266, column: 3, scope: !9096)
!9100 = !DILocation(line: 1267, column: 6, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 1267, column: 6)
!9102 = !DILocation(line: 1267, column: 6, scope: !9080)
!9103 = !DILocation(line: 1268, column: 8, scope: !9101)
!9104 = !DILocation(line: 1268, column: 3, scope: !9101)
!9105 = !DILocation(line: 1269, column: 27, scope: !9080)
!9106 = !DILocation(line: 1269, column: 8, scope: !9080)
!9107 = !DILocation(line: 1269, column: 6, scope: !9080)
!9108 = !DILocation(line: 1270, column: 6, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 1270, column: 6)
!9110 = !DILocation(line: 1270, column: 10, scope: !9109)
!9111 = !DILocation(line: 1270, column: 6, scope: !9080)
!9112 = !DILocation(line: 1271, column: 8, scope: !9109)
!9113 = !DILocation(line: 1271, column: 3, scope: !9109)
!9114 = !DILocation(line: 1272, column: 6, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 1272, column: 6)
!9116 = !DILocation(line: 1272, column: 10, scope: !9115)
!9117 = !DILocation(line: 1272, column: 6, scope: !9080)
!9118 = !DILocation(line: 1273, column: 8, scope: !9115)
!9119 = !DILocation(line: 1273, column: 3, scope: !9115)
!9120 = !DILocation(line: 1274, column: 6, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 1274, column: 6)
!9122 = !DILocation(line: 1274, column: 10, scope: !9121)
!9123 = !DILocation(line: 1274, column: 6, scope: !9080)
!9124 = !DILocation(line: 1275, column: 8, scope: !9121)
!9125 = !DILocation(line: 1275, column: 3, scope: !9121)
!9126 = !DILocation(line: 1276, column: 9, scope: !9080)
!9127 = !DILocation(line: 1276, column: 2, scope: !9080)
!9128 = distinct !DISubprogram(name: "moxa_tiocmset", scope: !3, file: !3, line: 1279, type: !3982, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9129 = !DILocalVariable(name: "tty", arg: 1, scope: !9128, file: !3, line: 1279, type: !215)
!9130 = !DILocation(line: 1279, column: 45, scope: !9128)
!9131 = !DILocalVariable(name: "set", arg: 2, scope: !9128, file: !3, line: 1280, type: !7)
!9132 = !DILocation(line: 1280, column: 18, scope: !9128)
!9133 = !DILocalVariable(name: "clear", arg: 3, scope: !9128, file: !3, line: 1280, type: !7)
!9134 = !DILocation(line: 1280, column: 36, scope: !9128)
!9135 = !DILocalVariable(name: "ch", scope: !9128, file: !3, line: 1282, type: !116)
!9136 = !DILocation(line: 1282, column: 20, scope: !9128)
!9137 = !DILocalVariable(name: "dtr", scope: !9128, file: !3, line: 1283, type: !141)
!9138 = !DILocation(line: 1283, column: 6, scope: !9128)
!9139 = !DILocalVariable(name: "rts", scope: !9128, file: !3, line: 1283, type: !141)
!9140 = !DILocation(line: 1283, column: 11, scope: !9128)
!9141 = !DILocation(line: 1285, column: 2, scope: !9128)
!9142 = !DILocation(line: 1286, column: 7, scope: !9128)
!9143 = !DILocation(line: 1286, column: 12, scope: !9128)
!9144 = !DILocation(line: 1286, column: 5, scope: !9128)
!9145 = !DILocation(line: 1287, column: 7, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 1287, column: 6)
!9147 = !DILocation(line: 1287, column: 6, scope: !9128)
!9148 = !DILocation(line: 1288, column: 3, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1287, column: 11)
!9150 = !DILocation(line: 1289, column: 3, scope: !9149)
!9151 = !DILocation(line: 1292, column: 21, scope: !9128)
!9152 = !DILocation(line: 1292, column: 2, scope: !9128)
!9153 = !DILocation(line: 1293, column: 6, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 1293, column: 6)
!9155 = !DILocation(line: 1293, column: 10, scope: !9154)
!9156 = !DILocation(line: 1293, column: 6, scope: !9128)
!9157 = !DILocation(line: 1294, column: 7, scope: !9154)
!9158 = !DILocation(line: 1294, column: 3, scope: !9154)
!9159 = !DILocation(line: 1295, column: 6, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 1295, column: 6)
!9161 = !DILocation(line: 1295, column: 10, scope: !9160)
!9162 = !DILocation(line: 1295, column: 6, scope: !9128)
!9163 = !DILocation(line: 1296, column: 7, scope: !9160)
!9164 = !DILocation(line: 1296, column: 3, scope: !9160)
!9165 = !DILocation(line: 1297, column: 6, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 1297, column: 6)
!9167 = !DILocation(line: 1297, column: 12, scope: !9166)
!9168 = !DILocation(line: 1297, column: 6, scope: !9128)
!9169 = !DILocation(line: 1298, column: 7, scope: !9166)
!9170 = !DILocation(line: 1298, column: 3, scope: !9166)
!9171 = !DILocation(line: 1299, column: 6, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 1299, column: 6)
!9173 = !DILocation(line: 1299, column: 12, scope: !9172)
!9174 = !DILocation(line: 1299, column: 6, scope: !9128)
!9175 = !DILocation(line: 1300, column: 7, scope: !9172)
!9176 = !DILocation(line: 1300, column: 3, scope: !9172)
!9177 = !DILocation(line: 1301, column: 19, scope: !9128)
!9178 = !DILocation(line: 1301, column: 23, scope: !9128)
!9179 = !DILocation(line: 1301, column: 28, scope: !9128)
!9180 = !DILocation(line: 1301, column: 2, scope: !9128)
!9181 = !DILocation(line: 1302, column: 2, scope: !9128)
!9182 = !DILocation(line: 1303, column: 2, scope: !9128)
!9183 = !DILocation(line: 1304, column: 1, scope: !9128)
!9184 = distinct !DISubprogram(name: "moxa_get_serial_info", scope: !3, file: !3, line: 2029, type: !4034, scopeLine: 2031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9185 = !DILocalVariable(name: "tty", arg: 1, scope: !9184, file: !3, line: 2029, type: !215)
!9186 = !DILocation(line: 2029, column: 52, scope: !9184)
!9187 = !DILocalVariable(name: "ss", arg: 2, scope: !9184, file: !3, line: 2030, type: !4036)
!9188 = !DILocation(line: 2030, column: 25, scope: !9184)
!9189 = !DILocalVariable(name: "info", scope: !9184, file: !3, line: 2032, type: !116)
!9190 = !DILocation(line: 2032, column: 20, scope: !9184)
!9191 = !DILocation(line: 2032, column: 27, scope: !9184)
!9192 = !DILocation(line: 2032, column: 32, scope: !9184)
!9193 = !DILocation(line: 2034, column: 6, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 2034, column: 6)
!9195 = !DILocation(line: 2034, column: 11, scope: !9194)
!9196 = !DILocation(line: 2034, column: 17, scope: !9194)
!9197 = !DILocation(line: 2034, column: 6, scope: !9184)
!9198 = !DILocation(line: 2035, column: 3, scope: !9194)
!9199 = !DILocation(line: 2036, column: 7, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 2036, column: 6)
!9201 = !DILocation(line: 2036, column: 6, scope: !9184)
!9202 = !DILocation(line: 2037, column: 3, scope: !9200)
!9203 = !DILocation(line: 2038, column: 14, scope: !9184)
!9204 = !DILocation(line: 2038, column: 20, scope: !9184)
!9205 = !DILocation(line: 2038, column: 25, scope: !9184)
!9206 = !DILocation(line: 2038, column: 2, scope: !9184)
!9207 = !DILocation(line: 2039, column: 13, scope: !9184)
!9208 = !DILocation(line: 2039, column: 19, scope: !9184)
!9209 = !DILocation(line: 2039, column: 2, scope: !9184)
!9210 = !DILocation(line: 2039, column: 6, scope: !9184)
!9211 = !DILocation(line: 2039, column: 11, scope: !9184)
!9212 = !DILocation(line: 2040, column: 13, scope: !9184)
!9213 = !DILocation(line: 2040, column: 19, scope: !9184)
!9214 = !DILocation(line: 2040, column: 24, scope: !9184)
!9215 = !DILocation(line: 2040, column: 29, scope: !9184)
!9216 = !DILocation(line: 2040, column: 2, scope: !9184)
!9217 = !DILocation(line: 2040, column: 6, scope: !9184)
!9218 = !DILocation(line: 2040, column: 11, scope: !9184)
!9219 = !DILocation(line: 2041, column: 14, scope: !9184)
!9220 = !DILocation(line: 2041, column: 20, scope: !9184)
!9221 = !DILocation(line: 2041, column: 25, scope: !9184)
!9222 = !DILocation(line: 2041, column: 2, scope: !9184)
!9223 = !DILocation(line: 2041, column: 6, scope: !9184)
!9224 = !DILocation(line: 2041, column: 12, scope: !9184)
!9225 = !DILocation(line: 2042, column: 2, scope: !9184)
!9226 = !DILocation(line: 2042, column: 6, scope: !9184)
!9227 = !DILocation(line: 2042, column: 16, scope: !9184)
!9228 = !DILocation(line: 2043, column: 20, scope: !9184)
!9229 = !DILocation(line: 2043, column: 26, scope: !9184)
!9230 = !DILocation(line: 2043, column: 31, scope: !9184)
!9231 = !DILocation(line: 2043, column: 2, scope: !9184)
!9232 = !DILocation(line: 2043, column: 6, scope: !9184)
!9233 = !DILocation(line: 2043, column: 18, scope: !9184)
!9234 = !DILocation(line: 2044, column: 16, scope: !9184)
!9235 = !DILocation(line: 2044, column: 22, scope: !9184)
!9236 = !DILocation(line: 2044, column: 27, scope: !9184)
!9237 = !DILocation(line: 2044, column: 2, scope: !9184)
!9238 = !DILocation(line: 2045, column: 2, scope: !9184)
!9239 = !DILocation(line: 2046, column: 1, scope: !9184)
!9240 = distinct !DISubprogram(name: "moxa_set_serial_info", scope: !3, file: !3, line: 2049, type: !4034, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9241 = !DILocalVariable(name: "tty", arg: 1, scope: !9240, file: !3, line: 2049, type: !215)
!9242 = !DILocation(line: 2049, column: 52, scope: !9240)
!9243 = !DILocalVariable(name: "ss", arg: 2, scope: !9240, file: !3, line: 2050, type: !4036)
!9244 = !DILocation(line: 2050, column: 25, scope: !9240)
!9245 = !DILocalVariable(name: "info", scope: !9240, file: !3, line: 2052, type: !116)
!9246 = !DILocation(line: 2052, column: 20, scope: !9240)
!9247 = !DILocation(line: 2052, column: 27, scope: !9240)
!9248 = !DILocation(line: 2052, column: 32, scope: !9240)
!9249 = !DILocation(line: 2054, column: 6, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 2054, column: 6)
!9251 = !DILocation(line: 2054, column: 11, scope: !9250)
!9252 = !DILocation(line: 2054, column: 17, scope: !9250)
!9253 = !DILocation(line: 2054, column: 6, scope: !9240)
!9254 = !DILocation(line: 2055, column: 3, scope: !9250)
!9255 = !DILocation(line: 2056, column: 7, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 2056, column: 6)
!9257 = !DILocation(line: 2056, column: 6, scope: !9240)
!9258 = !DILocation(line: 2057, column: 3, scope: !9256)
!9259 = !DILocation(line: 2059, column: 6, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 2059, column: 6)
!9261 = !DILocation(line: 2059, column: 10, scope: !9260)
!9262 = !DILocation(line: 2059, column: 14, scope: !9260)
!9263 = !DILocation(line: 2059, column: 19, scope: !9260)
!9264 = !DILocation(line: 2059, column: 22, scope: !9260)
!9265 = !DILocation(line: 2059, column: 26, scope: !9260)
!9266 = !DILocation(line: 2059, column: 31, scope: !9260)
!9267 = !DILocation(line: 2059, column: 36, scope: !9260)
!9268 = !DILocation(line: 2060, column: 4, scope: !9260)
!9269 = !DILocation(line: 2060, column: 8, scope: !9260)
!9270 = !DILocation(line: 2060, column: 23, scope: !9260)
!9271 = !DILocation(line: 2060, column: 28, scope: !9260)
!9272 = !DILocation(line: 2061, column: 4, scope: !9260)
!9273 = !DILocation(line: 2061, column: 8, scope: !9260)
!9274 = !DILocation(line: 2061, column: 18, scope: !9260)
!9275 = !DILocation(line: 2059, column: 6, scope: !9240)
!9276 = !DILocation(line: 2062, column: 3, scope: !9260)
!9277 = !DILocation(line: 2064, column: 14, scope: !9240)
!9278 = !DILocation(line: 2064, column: 20, scope: !9240)
!9279 = !DILocation(line: 2064, column: 25, scope: !9240)
!9280 = !DILocation(line: 2064, column: 2, scope: !9240)
!9281 = !DILocation(line: 2065, column: 7, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 2065, column: 6)
!9283 = !DILocation(line: 2065, column: 6, scope: !9240)
!9284 = !DILocation(line: 2066, column: 9, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 2066, column: 7)
!9286 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 2065, column: 31)
!9287 = !DILocation(line: 2066, column: 13, scope: !9285)
!9288 = !DILocation(line: 2066, column: 19, scope: !9285)
!9289 = !DILocation(line: 2066, column: 8, scope: !9285)
!9290 = !DILocation(line: 2067, column: 9, scope: !9285)
!9291 = !DILocation(line: 2067, column: 15, scope: !9285)
!9292 = !DILocation(line: 2067, column: 20, scope: !9285)
!9293 = !DILocation(line: 2067, column: 26, scope: !9285)
!9294 = !DILocation(line: 2066, column: 38, scope: !9285)
!9295 = !DILocation(line: 2066, column: 7, scope: !9286)
!9296 = !DILocation(line: 2068, column: 18, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 2067, column: 47)
!9298 = !DILocation(line: 2068, column: 24, scope: !9297)
!9299 = !DILocation(line: 2068, column: 29, scope: !9297)
!9300 = !DILocation(line: 2068, column: 4, scope: !9297)
!9301 = !DILocation(line: 2069, column: 4, scope: !9297)
!9302 = !DILocation(line: 2071, column: 2, scope: !9286)
!9303 = !DILocation(line: 2072, column: 27, scope: !9240)
!9304 = !DILocation(line: 2072, column: 31, scope: !9240)
!9305 = !DILocation(line: 2072, column: 43, scope: !9240)
!9306 = !DILocation(line: 2072, column: 48, scope: !9240)
!9307 = !DILocation(line: 2072, column: 2, scope: !9240)
!9308 = !DILocation(line: 2072, column: 8, scope: !9240)
!9309 = !DILocation(line: 2072, column: 13, scope: !9240)
!9310 = !DILocation(line: 2072, column: 25, scope: !9240)
!9311 = !DILocation(line: 2074, column: 14, scope: !9240)
!9312 = !DILocation(line: 2074, column: 20, scope: !9240)
!9313 = !DILocation(line: 2074, column: 24, scope: !9240)
!9314 = !DILocation(line: 2074, column: 29, scope: !9240)
!9315 = !DILocation(line: 2074, column: 2, scope: !9240)
!9316 = !DILocation(line: 2076, column: 15, scope: !9240)
!9317 = !DILocation(line: 2076, column: 19, scope: !9240)
!9318 = !DILocation(line: 2076, column: 2, scope: !9240)
!9319 = !DILocation(line: 2076, column: 8, scope: !9240)
!9320 = !DILocation(line: 2076, column: 13, scope: !9240)
!9321 = !DILocation(line: 2077, column: 16, scope: !9240)
!9322 = !DILocation(line: 2077, column: 22, scope: !9240)
!9323 = !DILocation(line: 2077, column: 27, scope: !9240)
!9324 = !DILocation(line: 2077, column: 2, scope: !9240)
!9325 = !DILocation(line: 2078, column: 2, scope: !9240)
!9326 = !DILocation(line: 2079, column: 1, scope: !9240)
!9327 = distinct !DISubprogram(name: "moxa_set_tty_param", scope: !3, file: !3, line: 1466, type: !3958, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9328 = !DILocalVariable(name: "tty", arg: 1, scope: !9327, file: !3, line: 1466, type: !215)
!9329 = !DILocation(line: 1466, column: 51, scope: !9327)
!9330 = !DILocalVariable(name: "old_termios", arg: 2, scope: !9327, file: !3, line: 1466, type: !3902)
!9331 = !DILocation(line: 1466, column: 73, scope: !9327)
!9332 = !DILocalVariable(name: "ts", scope: !9327, file: !3, line: 1468, type: !3902)
!9333 = !DILocation(line: 1468, column: 28, scope: !9327)
!9334 = !DILocation(line: 1468, column: 34, scope: !9327)
!9335 = !DILocation(line: 1468, column: 39, scope: !9327)
!9336 = !DILocalVariable(name: "ch", scope: !9327, file: !3, line: 1469, type: !116)
!9337 = !DILocation(line: 1469, column: 20, scope: !9327)
!9338 = !DILocation(line: 1469, column: 25, scope: !9327)
!9339 = !DILocation(line: 1469, column: 30, scope: !9327)
!9340 = !DILocalVariable(name: "rts", scope: !9327, file: !3, line: 1470, type: !141)
!9341 = !DILocation(line: 1470, column: 6, scope: !9327)
!9342 = !DILocalVariable(name: "cts", scope: !9327, file: !3, line: 1470, type: !141)
!9343 = !DILocation(line: 1470, column: 11, scope: !9327)
!9344 = !DILocalVariable(name: "txflow", scope: !9327, file: !3, line: 1470, type: !141)
!9345 = !DILocation(line: 1470, column: 16, scope: !9327)
!9346 = !DILocalVariable(name: "rxflow", scope: !9327, file: !3, line: 1470, type: !141)
!9347 = !DILocation(line: 1470, column: 24, scope: !9327)
!9348 = !DILocalVariable(name: "xany", scope: !9327, file: !3, line: 1470, type: !141)
!9349 = !DILocation(line: 1470, column: 32, scope: !9327)
!9350 = !DILocalVariable(name: "baud", scope: !9327, file: !3, line: 1470, type: !141)
!9351 = !DILocation(line: 1470, column: 38, scope: !9327)
!9352 = !DILocation(line: 1472, column: 37, scope: !9327)
!9353 = !DILocation(line: 1472, column: 30, scope: !9327)
!9354 = !DILocation(line: 1472, column: 21, scope: !9327)
!9355 = !DILocation(line: 1472, column: 12, scope: !9327)
!9356 = !DILocation(line: 1472, column: 6, scope: !9327)
!9357 = !DILocation(line: 1473, column: 6, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 1473, column: 6)
!9359 = !DILocation(line: 1473, column: 10, scope: !9358)
!9360 = !DILocation(line: 1473, column: 18, scope: !9358)
!9361 = !DILocation(line: 1473, column: 6, scope: !9327)
!9362 = !DILocation(line: 1474, column: 13, scope: !9358)
!9363 = !DILocation(line: 1474, column: 7, scope: !9358)
!9364 = !DILocation(line: 1474, column: 3, scope: !9358)
!9365 = !DILocation(line: 1475, column: 6, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 1475, column: 6)
!9367 = !DILocation(line: 1475, column: 10, scope: !9366)
!9368 = !DILocation(line: 1475, column: 18, scope: !9366)
!9369 = !DILocation(line: 1475, column: 6, scope: !9327)
!9370 = !DILocation(line: 1476, column: 10, scope: !9366)
!9371 = !DILocation(line: 1476, column: 3, scope: !9366)
!9372 = !DILocation(line: 1477, column: 6, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 1477, column: 6)
!9374 = !DILocation(line: 1477, column: 10, scope: !9373)
!9375 = !DILocation(line: 1477, column: 18, scope: !9373)
!9376 = !DILocation(line: 1477, column: 6, scope: !9327)
!9377 = !DILocation(line: 1478, column: 10, scope: !9373)
!9378 = !DILocation(line: 1478, column: 3, scope: !9373)
!9379 = !DILocation(line: 1479, column: 6, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 1479, column: 6)
!9381 = !DILocation(line: 1479, column: 10, scope: !9380)
!9382 = !DILocation(line: 1479, column: 18, scope: !9380)
!9383 = !DILocation(line: 1479, column: 6, scope: !9327)
!9384 = !DILocation(line: 1480, column: 8, scope: !9380)
!9385 = !DILocation(line: 1480, column: 3, scope: !9380)
!9386 = !DILocation(line: 1482, column: 19, scope: !9327)
!9387 = !DILocation(line: 1482, column: 23, scope: !9327)
!9388 = !DILocation(line: 1482, column: 28, scope: !9327)
!9389 = !DILocation(line: 1482, column: 33, scope: !9327)
!9390 = !DILocation(line: 1482, column: 41, scope: !9327)
!9391 = !DILocation(line: 1482, column: 49, scope: !9327)
!9392 = !DILocation(line: 1482, column: 2, scope: !9327)
!9393 = !DILocation(line: 1483, column: 27, scope: !9327)
!9394 = !DILocation(line: 1483, column: 31, scope: !9327)
!9395 = !DILocation(line: 1483, column: 53, scope: !9327)
!9396 = !DILocation(line: 1483, column: 35, scope: !9327)
!9397 = !DILocation(line: 1483, column: 9, scope: !9327)
!9398 = !DILocation(line: 1483, column: 7, scope: !9327)
!9399 = !DILocation(line: 1484, column: 6, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 1484, column: 6)
!9401 = !DILocation(line: 1484, column: 11, scope: !9400)
!9402 = !DILocation(line: 1484, column: 6, scope: !9327)
!9403 = !DILocation(line: 1485, column: 32, scope: !9400)
!9404 = !DILocation(line: 1485, column: 10, scope: !9400)
!9405 = !DILocation(line: 1485, column: 8, scope: !9400)
!9406 = !DILocation(line: 1485, column: 3, scope: !9400)
!9407 = !DILocation(line: 1487, column: 23, scope: !9327)
!9408 = !DILocation(line: 1487, column: 28, scope: !9327)
!9409 = !DILocation(line: 1487, column: 34, scope: !9327)
!9410 = !DILocation(line: 1487, column: 2, scope: !9327)
!9411 = !DILocation(line: 1488, column: 1, scope: !9327)
!9412 = distinct !DISubprogram(name: "MoxaPortEnable", scope: !3, file: !3, line: 1699, type: !6353, scopeLine: 1700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9413 = !DILocalVariable(name: "port", arg: 1, scope: !9412, file: !3, line: 1699, type: !116)
!9414 = !DILocation(line: 1699, column: 46, scope: !9412)
!9415 = !DILocalVariable(name: "ofsAddr", scope: !9412, file: !3, line: 1701, type: !113)
!9416 = !DILocation(line: 1701, column: 16, scope: !9412)
!9417 = !DILocalVariable(name: "lowwater", scope: !9412, file: !3, line: 1702, type: !879)
!9418 = !DILocation(line: 1702, column: 6, scope: !9412)
!9419 = !DILocation(line: 1704, column: 12, scope: !9412)
!9420 = !DILocation(line: 1704, column: 18, scope: !9412)
!9421 = !DILocation(line: 1704, column: 10, scope: !9412)
!9422 = !DILocation(line: 1705, column: 9, scope: !9412)
!9423 = !DILocation(line: 1705, column: 19, scope: !9412)
!9424 = !DILocation(line: 1705, column: 27, scope: !9412)
!9425 = !DILocation(line: 1705, column: 2, scope: !9412)
!9426 = !DILocation(line: 1706, column: 6, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 1706, column: 6)
!9428 = !DILocation(line: 1706, column: 6, scope: !9412)
!9429 = !DILocation(line: 1707, column: 12, scope: !9427)
!9430 = !DILocation(line: 1707, column: 3, scope: !9427)
!9431 = !DILocation(line: 1709, column: 16, scope: !9427)
!9432 = !DILocation(line: 1709, column: 24, scope: !9427)
!9433 = !DILocation(line: 1709, column: 10, scope: !9427)
!9434 = !DILocation(line: 1709, column: 36, scope: !9427)
!9435 = !DILocation(line: 1710, column: 5, scope: !9427)
!9436 = !DILocation(line: 1710, column: 13, scope: !9427)
!9437 = !DILocation(line: 1709, column: 3, scope: !9427)
!9438 = !DILocation(line: 1712, column: 11, scope: !9412)
!9439 = !DILocation(line: 1712, column: 2, scope: !9412)
!9440 = !DILocation(line: 1713, column: 11, scope: !9412)
!9441 = !DILocation(line: 1713, column: 2, scope: !9412)
!9442 = !DILocation(line: 1715, column: 11, scope: !9412)
!9443 = !DILocation(line: 1715, column: 2, scope: !9412)
!9444 = !DILocation(line: 1716, column: 21, scope: !9412)
!9445 = !DILocation(line: 1716, column: 2, scope: !9412)
!9446 = !DILocation(line: 1717, column: 1, scope: !9412)
!9447 = distinct !DISubprogram(name: "MoxaSetFifo", scope: !3, file: !3, line: 2087, type: !6372, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9448 = !DILocalVariable(name: "port", arg: 1, scope: !9447, file: !3, line: 2087, type: !116)
!9449 = !DILocation(line: 2087, column: 43, scope: !9447)
!9450 = !DILocalVariable(name: "enable", arg: 2, scope: !9447, file: !3, line: 2087, type: !141)
!9451 = !DILocation(line: 2087, column: 53, scope: !9447)
!9452 = !DILocalVariable(name: "ofsAddr", scope: !9447, file: !3, line: 2089, type: !113)
!9453 = !DILocation(line: 2089, column: 16, scope: !9447)
!9454 = !DILocation(line: 2089, column: 26, scope: !9447)
!9455 = !DILocation(line: 2089, column: 32, scope: !9447)
!9456 = !DILocation(line: 2091, column: 7, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 2091, column: 6)
!9458 = !DILocation(line: 2091, column: 6, scope: !9447)
!9459 = !DILocation(line: 2092, column: 12, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 2091, column: 15)
!9461 = !DILocation(line: 2092, column: 3, scope: !9460)
!9462 = !DILocation(line: 2093, column: 12, scope: !9460)
!9463 = !DILocation(line: 2093, column: 3, scope: !9460)
!9464 = !DILocation(line: 2094, column: 2, scope: !9460)
!9465 = !DILocation(line: 2095, column: 12, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 2094, column: 9)
!9467 = !DILocation(line: 2095, column: 3, scope: !9466)
!9468 = !DILocation(line: 2096, column: 12, scope: !9466)
!9469 = !DILocation(line: 2096, column: 3, scope: !9466)
!9470 = !DILocation(line: 2098, column: 1, scope: !9447)
!9471 = distinct !DISubprogram(name: "tty_port_set_initialized", scope: !121, file: !121, line: 669, type: !9472, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9472 = !DISubroutineType(types: !9473)
!9473 = !{null, !3899, !484}
!9474 = !DILocalVariable(name: "port", arg: 1, scope: !9471, file: !121, line: 669, type: !3899)
!9475 = !DILocation(line: 669, column: 62, scope: !9471)
!9476 = !DILocalVariable(name: "val", arg: 2, scope: !9471, file: !121, line: 669, type: !484)
!9477 = !DILocation(line: 669, column: 73, scope: !9471)
!9478 = !DILocation(line: 671, column: 6, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9471, file: !121, line: 671, column: 6)
!9480 = !DILocation(line: 671, column: 6, scope: !9471)
!9481 = !DILocation(line: 672, column: 34, scope: !9479)
!9482 = !DILocation(line: 672, column: 40, scope: !9479)
!9483 = !DILocation(line: 672, column: 3, scope: !9479)
!9484 = !DILocation(line: 674, column: 36, scope: !9479)
!9485 = !DILocation(line: 674, column: 42, scope: !9479)
!9486 = !DILocation(line: 674, column: 3, scope: !9479)
!9487 = !DILocation(line: 675, column: 1, scope: !9471)
!9488 = distinct !DISubprogram(name: "MoxaPortFlowCtrl", scope: !3, file: !3, line: 1830, type: !9489, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{null, !116, !141, !141, !141, !141, !141}
!9491 = !DILocalVariable(name: "port", arg: 1, scope: !9488, file: !3, line: 1830, type: !116)
!9492 = !DILocation(line: 1830, column: 48, scope: !9488)
!9493 = !DILocalVariable(name: "rts", arg: 2, scope: !9488, file: !3, line: 1830, type: !141)
!9494 = !DILocation(line: 1830, column: 58, scope: !9488)
!9495 = !DILocalVariable(name: "cts", arg: 3, scope: !9488, file: !3, line: 1830, type: !141)
!9496 = !DILocation(line: 1830, column: 67, scope: !9488)
!9497 = !DILocalVariable(name: "txflow", arg: 4, scope: !9488, file: !3, line: 1831, type: !141)
!9498 = !DILocation(line: 1831, column: 7, scope: !9488)
!9499 = !DILocalVariable(name: "rxflow", arg: 5, scope: !9488, file: !3, line: 1831, type: !141)
!9500 = !DILocation(line: 1831, column: 19, scope: !9488)
!9501 = !DILocalVariable(name: "txany", arg: 6, scope: !9488, file: !3, line: 1831, type: !141)
!9502 = !DILocation(line: 1831, column: 31, scope: !9488)
!9503 = !DILocalVariable(name: "mode", scope: !9488, file: !3, line: 1833, type: !141)
!9504 = !DILocation(line: 1833, column: 6, scope: !9488)
!9505 = !DILocation(line: 1835, column: 6, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 1835, column: 6)
!9507 = !DILocation(line: 1835, column: 6, scope: !9488)
!9508 = !DILocation(line: 1836, column: 8, scope: !9506)
!9509 = !DILocation(line: 1836, column: 3, scope: !9506)
!9510 = !DILocation(line: 1837, column: 6, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 1837, column: 6)
!9512 = !DILocation(line: 1837, column: 6, scope: !9488)
!9513 = !DILocation(line: 1838, column: 8, scope: !9511)
!9514 = !DILocation(line: 1838, column: 3, scope: !9511)
!9515 = !DILocation(line: 1839, column: 6, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 1839, column: 6)
!9517 = !DILocation(line: 1839, column: 6, scope: !9488)
!9518 = !DILocation(line: 1840, column: 8, scope: !9516)
!9519 = !DILocation(line: 1840, column: 3, scope: !9516)
!9520 = !DILocation(line: 1841, column: 6, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 1841, column: 6)
!9522 = !DILocation(line: 1841, column: 6, scope: !9488)
!9523 = !DILocation(line: 1842, column: 8, scope: !9521)
!9524 = !DILocation(line: 1842, column: 3, scope: !9521)
!9525 = !DILocation(line: 1843, column: 6, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 1843, column: 6)
!9527 = !DILocation(line: 1843, column: 6, scope: !9488)
!9528 = !DILocation(line: 1844, column: 8, scope: !9526)
!9529 = !DILocation(line: 1844, column: 3, scope: !9526)
!9530 = !DILocation(line: 1845, column: 11, scope: !9488)
!9531 = !DILocation(line: 1845, column: 17, scope: !9488)
!9532 = !DILocation(line: 1845, column: 43, scope: !9488)
!9533 = !DILocation(line: 1845, column: 2, scope: !9488)
!9534 = !DILocation(line: 1846, column: 1, scope: !9488)
!9535 = distinct !DISubprogram(name: "MoxaPortSetTermio", scope: !3, file: !3, line: 1747, type: !9536, scopeLine: 1749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9536 = !DISubroutineType(types: !9537)
!9537 = !{!141, !116, !3902, !3887}
!9538 = !DILocation(line: 402, column: 57, scope: !6053, inlinedAt: !9539)
!9539 = distinct !DILocation(line: 1801, column: 3, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 1795, column: 48)
!9541 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 1795, column: 6)
!9542 = !DILocation(line: 377, column: 55, scope: !6057, inlinedAt: !9543)
!9543 = distinct !DILocation(line: 1796, column: 10, scope: !9540)
!9544 = !DILocalVariable(name: "port", arg: 1, scope: !9535, file: !3, line: 1747, type: !116)
!9545 = !DILocation(line: 1747, column: 48, scope: !9535)
!9546 = !DILocalVariable(name: "termio", arg: 2, scope: !9535, file: !3, line: 1747, type: !3902)
!9547 = !DILocation(line: 1747, column: 71, scope: !9535)
!9548 = !DILocalVariable(name: "baud", arg: 3, scope: !9535, file: !3, line: 1748, type: !3887)
!9549 = !DILocation(line: 1748, column: 11, scope: !9535)
!9550 = !DILocalVariable(name: "ofsAddr", scope: !9535, file: !3, line: 1750, type: !113)
!9551 = !DILocation(line: 1750, column: 16, scope: !9535)
!9552 = !DILocalVariable(name: "mode", scope: !9535, file: !3, line: 1751, type: !3876)
!9553 = !DILocation(line: 1751, column: 11, scope: !9535)
!9554 = !DILocation(line: 1753, column: 12, scope: !9535)
!9555 = !DILocation(line: 1753, column: 18, scope: !9535)
!9556 = !DILocation(line: 1753, column: 10, scope: !9535)
!9557 = !DILocation(line: 1755, column: 9, scope: !9535)
!9558 = !DILocation(line: 1755, column: 17, scope: !9535)
!9559 = !DILocation(line: 1755, column: 25, scope: !9535)
!9560 = !DILocation(line: 1755, column: 7, scope: !9535)
!9561 = !DILocation(line: 1756, column: 6, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 1756, column: 6)
!9563 = !DILocation(line: 1756, column: 11, scope: !9562)
!9564 = !DILocation(line: 1756, column: 6, scope: !9535)
!9565 = !DILocation(line: 1757, column: 8, scope: !9562)
!9566 = !DILocation(line: 1757, column: 3, scope: !9562)
!9567 = !DILocation(line: 1758, column: 11, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9562, file: !3, line: 1758, column: 11)
!9569 = !DILocation(line: 1758, column: 16, scope: !9568)
!9570 = !DILocation(line: 1758, column: 11, scope: !9562)
!9571 = !DILocation(line: 1759, column: 8, scope: !9568)
!9572 = !DILocation(line: 1759, column: 3, scope: !9568)
!9573 = !DILocation(line: 1760, column: 11, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 1760, column: 11)
!9575 = !DILocation(line: 1760, column: 16, scope: !9574)
!9576 = !DILocation(line: 1760, column: 11, scope: !9568)
!9577 = !DILocation(line: 1761, column: 8, scope: !9574)
!9578 = !DILocation(line: 1761, column: 3, scope: !9574)
!9579 = !DILocation(line: 1762, column: 11, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 1762, column: 11)
!9581 = !DILocation(line: 1762, column: 16, scope: !9580)
!9582 = !DILocation(line: 1762, column: 11, scope: !9574)
!9583 = !DILocation(line: 1763, column: 8, scope: !9580)
!9584 = !DILocation(line: 1763, column: 3, scope: !9580)
!9585 = !DILocation(line: 1765, column: 6, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 1765, column: 6)
!9587 = !DILocation(line: 1765, column: 14, scope: !9586)
!9588 = !DILocation(line: 1765, column: 22, scope: !9586)
!9589 = !DILocation(line: 1765, column: 6, scope: !9535)
!9590 = !DILocation(line: 1766, column: 7, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 1766, column: 7)
!9592 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 1765, column: 32)
!9593 = !DILocation(line: 1766, column: 12, scope: !9591)
!9594 = !DILocation(line: 1766, column: 7, scope: !9592)
!9595 = !DILocation(line: 1767, column: 9, scope: !9591)
!9596 = !DILocation(line: 1767, column: 4, scope: !9591)
!9597 = !DILocation(line: 1769, column: 9, scope: !9591)
!9598 = !DILocation(line: 1770, column: 2, scope: !9592)
!9599 = !DILocation(line: 1771, column: 8, scope: !9586)
!9600 = !DILocation(line: 1773, column: 6, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 1773, column: 6)
!9602 = !DILocation(line: 1773, column: 14, scope: !9601)
!9603 = !DILocation(line: 1773, column: 22, scope: !9601)
!9604 = !DILocation(line: 1773, column: 6, scope: !9535)
!9605 = !DILocation(line: 1774, column: 7, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 1774, column: 7)
!9607 = distinct !DILexicalBlock(scope: !9601, file: !3, line: 1773, column: 32)
!9608 = !DILocation(line: 1774, column: 15, scope: !9606)
!9609 = !DILocation(line: 1774, column: 23, scope: !9606)
!9610 = !DILocation(line: 1774, column: 7, scope: !9607)
!9611 = !DILocation(line: 1775, column: 8, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 1775, column: 8)
!9613 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1774, column: 33)
!9614 = !DILocation(line: 1775, column: 16, scope: !9612)
!9615 = !DILocation(line: 1775, column: 24, scope: !9612)
!9616 = !DILocation(line: 1775, column: 8, scope: !9613)
!9617 = !DILocation(line: 1776, column: 10, scope: !9612)
!9618 = !DILocation(line: 1776, column: 5, scope: !9612)
!9619 = !DILocation(line: 1778, column: 10, scope: !9612)
!9620 = !DILocation(line: 1779, column: 3, scope: !9613)
!9621 = !DILocation(line: 1780, column: 8, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9623, file: !3, line: 1780, column: 8)
!9623 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1779, column: 10)
!9624 = !DILocation(line: 1780, column: 16, scope: !9622)
!9625 = !DILocation(line: 1780, column: 24, scope: !9622)
!9626 = !DILocation(line: 1780, column: 8, scope: !9623)
!9627 = !DILocation(line: 1781, column: 10, scope: !9622)
!9628 = !DILocation(line: 1781, column: 5, scope: !9622)
!9629 = !DILocation(line: 1783, column: 10, scope: !9622)
!9630 = !DILocation(line: 1785, column: 2, scope: !9607)
!9631 = !DILocation(line: 1786, column: 8, scope: !9601)
!9632 = !DILocation(line: 1788, column: 11, scope: !9535)
!9633 = !DILocation(line: 1788, column: 41, scope: !9535)
!9634 = !DILocation(line: 1788, column: 36, scope: !9535)
!9635 = !DILocation(line: 1788, column: 2, scope: !9535)
!9636 = !DILocation(line: 1790, column: 6, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 1790, column: 6)
!9638 = !DILocation(line: 1790, column: 31, scope: !9637)
!9639 = !DILocation(line: 1790, column: 34, scope: !9637)
!9640 = !DILocation(line: 1790, column: 39, scope: !9637)
!9641 = !DILocation(line: 1790, column: 6, scope: !9535)
!9642 = !DILocation(line: 1791, column: 3, scope: !9637)
!9643 = !DILocation(line: 1793, column: 25, scope: !9535)
!9644 = !DILocation(line: 1793, column: 31, scope: !9535)
!9645 = !DILocation(line: 1793, column: 9, scope: !9535)
!9646 = !DILocation(line: 1793, column: 7, scope: !9535)
!9647 = !DILocation(line: 1795, column: 6, scope: !9541)
!9648 = !DILocation(line: 1795, column: 14, scope: !9541)
!9649 = !DILocation(line: 1795, column: 22, scope: !9541)
!9650 = !DILocation(line: 1795, column: 6, scope: !9535)
!9651 = !DILocation(line: 379, column: 2, scope: !6074, inlinedAt: !9543)
!9652 = !DILocation(line: 379, column: 2, scope: !6077, inlinedAt: !9543)
!9653 = !DILocation(line: 379, column: 2, scope: !6080, inlinedAt: !9543)
!9654 = !DILocation(line: 1797, column: 10, scope: !9540)
!9655 = !DILocation(line: 1797, column: 18, scope: !9540)
!9656 = !DILocation(line: 1797, column: 32, scope: !9540)
!9657 = !DILocation(line: 1797, column: 40, scope: !9540)
!9658 = !DILocation(line: 1797, column: 3, scope: !9540)
!9659 = !DILocation(line: 1798, column: 10, scope: !9540)
!9660 = !DILocation(line: 1798, column: 18, scope: !9540)
!9661 = !DILocation(line: 1798, column: 31, scope: !9540)
!9662 = !DILocation(line: 1798, column: 39, scope: !9540)
!9663 = !DILocation(line: 1798, column: 3, scope: !9540)
!9664 = !DILocation(line: 1799, column: 25, scope: !9540)
!9665 = !DILocation(line: 1799, column: 33, scope: !9540)
!9666 = !DILocation(line: 1799, column: 3, scope: !9540)
!9667 = !DILocation(line: 1800, column: 20, scope: !9540)
!9668 = !DILocation(line: 1800, column: 3, scope: !9540)
!9669 = !DILocation(line: 404, column: 2, scope: !6087, inlinedAt: !9539)
!9670 = !DILocation(line: 404, column: 2, scope: !6090, inlinedAt: !9539)
!9671 = !DILocation(line: 404, column: 2, scope: !6093, inlinedAt: !9539)
!9672 = !DILocation(line: 1803, column: 2, scope: !9540)
!9673 = !DILocation(line: 1804, column: 9, scope: !9535)
!9674 = !DILocation(line: 1804, column: 2, scope: !9535)
!9675 = !DILocation(line: 1805, column: 1, scope: !9535)
!9676 = distinct !DISubprogram(name: "tty_get_baud_rate", scope: !121, file: !121, line: 538, type: !9677, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9677 = !DISubroutineType(types: !9678)
!9678 = !{!3887, !215}
!9679 = !DILocalVariable(name: "tty", arg: 1, scope: !9676, file: !121, line: 538, type: !215)
!9680 = !DILocation(line: 538, column: 60, scope: !9676)
!9681 = !DILocation(line: 540, column: 32, scope: !9676)
!9682 = !DILocation(line: 540, column: 37, scope: !9676)
!9683 = !DILocation(line: 540, column: 9, scope: !9676)
!9684 = !DILocation(line: 540, column: 2, scope: !9676)
!9685 = distinct !DISubprogram(name: "MoxaPortSetBaud", scope: !3, file: !3, line: 1729, type: !9686, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9686 = !DISubroutineType(types: !9687)
!9687 = !{!3887, !116, !3887}
!9688 = !DILocalVariable(name: "port", arg: 1, scope: !9685, file: !3, line: 1729, type: !116)
!9689 = !DILocation(line: 1729, column: 50, scope: !9685)
!9690 = !DILocalVariable(name: "baud", arg: 2, scope: !9685, file: !3, line: 1729, type: !3887)
!9691 = !DILocation(line: 1729, column: 64, scope: !9685)
!9692 = !DILocalVariable(name: "ofsAddr", scope: !9685, file: !3, line: 1731, type: !113)
!9693 = !DILocation(line: 1731, column: 16, scope: !9685)
!9694 = !DILocation(line: 1731, column: 26, scope: !9685)
!9695 = !DILocation(line: 1731, column: 32, scope: !9685)
!9696 = !DILocalVariable(name: "clock", scope: !9685, file: !3, line: 1732, type: !7)
!9697 = !DILocation(line: 1732, column: 15, scope: !9685)
!9698 = !DILocalVariable(name: "val", scope: !9685, file: !3, line: 1732, type: !7)
!9699 = !DILocation(line: 1732, column: 22, scope: !9685)
!9700 = !DILocalVariable(name: "max", scope: !9685, file: !3, line: 1733, type: !3887)
!9701 = !DILocation(line: 1733, column: 10, scope: !9685)
!9702 = !DILocation(line: 1735, column: 8, scope: !9685)
!9703 = !DILocation(line: 1735, column: 6, scope: !9685)
!9704 = !DILocation(line: 1736, column: 6, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 1736, column: 6)
!9706 = !DILocation(line: 1736, column: 11, scope: !9705)
!9707 = !DILocation(line: 1736, column: 6, scope: !9685)
!9708 = !DILocation(line: 1737, column: 3, scope: !9705)
!9709 = !DILocation(line: 1738, column: 6, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 1738, column: 6)
!9711 = !DILocation(line: 1738, column: 13, scope: !9710)
!9712 = !DILocation(line: 1738, column: 11, scope: !9710)
!9713 = !DILocation(line: 1738, column: 6, scope: !9685)
!9714 = !DILocation(line: 1739, column: 10, scope: !9710)
!9715 = !DILocation(line: 1739, column: 8, scope: !9710)
!9716 = !DILocation(line: 1739, column: 3, scope: !9710)
!9717 = !DILocation(line: 1740, column: 8, scope: !9685)
!9718 = !DILocation(line: 1741, column: 8, scope: !9685)
!9719 = !DILocation(line: 1741, column: 16, scope: !9685)
!9720 = !DILocation(line: 1741, column: 14, scope: !9685)
!9721 = !DILocation(line: 1741, column: 6, scope: !9685)
!9722 = !DILocation(line: 1742, column: 11, scope: !9685)
!9723 = !DILocation(line: 1742, column: 32, scope: !9685)
!9724 = !DILocation(line: 1742, column: 2, scope: !9685)
!9725 = !DILocation(line: 1743, column: 9, scope: !9685)
!9726 = !DILocation(line: 1743, column: 17, scope: !9685)
!9727 = !DILocation(line: 1743, column: 15, scope: !9685)
!9728 = !DILocation(line: 1743, column: 7, scope: !9685)
!9729 = !DILocation(line: 1744, column: 9, scope: !9685)
!9730 = !DILocation(line: 1744, column: 2, scope: !9685)
!9731 = !DILocation(line: 1745, column: 1, scope: !9685)
!9732 = distinct !DISubprogram(name: "MoxaPortLineStatus", scope: !3, file: !3, line: 1848, type: !7737, scopeLine: 1849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9733 = !DILocalVariable(name: "port", arg: 1, scope: !9732, file: !3, line: 1848, type: !116)
!9734 = !DILocation(line: 1848, column: 49, scope: !9732)
!9735 = !DILocalVariable(name: "ofsAddr", scope: !9732, file: !3, line: 1850, type: !113)
!9736 = !DILocation(line: 1850, column: 16, scope: !9732)
!9737 = !DILocalVariable(name: "val", scope: !9732, file: !3, line: 1851, type: !141)
!9738 = !DILocation(line: 1851, column: 6, scope: !9732)
!9739 = !DILocation(line: 1853, column: 12, scope: !9732)
!9740 = !DILocation(line: 1853, column: 18, scope: !9732)
!9741 = !DILocation(line: 1853, column: 10, scope: !9732)
!9742 = !DILocation(line: 1854, column: 6, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1854, column: 6)
!9744 = !DILocation(line: 1854, column: 6, scope: !9732)
!9745 = !DILocation(line: 1855, column: 21, scope: !9743)
!9746 = !DILocation(line: 1855, column: 9, scope: !9743)
!9747 = !DILocation(line: 1855, column: 7, scope: !9743)
!9748 = !DILocation(line: 1855, column: 3, scope: !9743)
!9749 = !DILocation(line: 1857, column: 15, scope: !9743)
!9750 = !DILocation(line: 1857, column: 23, scope: !9743)
!9751 = !DILocation(line: 1857, column: 9, scope: !9743)
!9752 = !DILocation(line: 1857, column: 35, scope: !9743)
!9753 = !DILocation(line: 1857, column: 7, scope: !9743)
!9754 = !DILocation(line: 1858, column: 6, scope: !9732)
!9755 = !DILocation(line: 1859, column: 6, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1859, column: 6)
!9757 = !DILocation(line: 1859, column: 10, scope: !9756)
!9758 = !DILocation(line: 1859, column: 6, scope: !9732)
!9759 = !DILocation(line: 1860, column: 7, scope: !9756)
!9760 = !DILocation(line: 1860, column: 3, scope: !9756)
!9761 = !DILocation(line: 1861, column: 20, scope: !9732)
!9762 = !DILocation(line: 1861, column: 26, scope: !9732)
!9763 = !DILocation(line: 1861, column: 30, scope: !9732)
!9764 = !DILocation(line: 1861, column: 2, scope: !9732)
!9765 = !DILocation(line: 1862, column: 6, scope: !9732)
!9766 = !DILocation(line: 1863, column: 9, scope: !9732)
!9767 = !DILocation(line: 1863, column: 2, scope: !9732)
!9768 = distinct !DISubprogram(name: "moxafuncret", scope: !3, file: !3, line: 255, type: !9769, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9769 = !DISubroutineType(types: !9770)
!9770 = !{!141, !113, !879, !879}
!9771 = !DILocation(line: 407, column: 64, scope: !6183, inlinedAt: !9772)
!9772 = distinct !DILocation(line: 264, column: 2, scope: !9768)
!9773 = !DILocation(line: 407, column: 84, scope: !6183, inlinedAt: !9772)
!9774 = !DILocation(line: 327, column: 67, scope: !6191, inlinedAt: !9775)
!9775 = distinct !DILocation(line: 259, column: 9, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !3, line: 259, column: 9)
!9777 = distinct !DILexicalBlock(scope: !9778, file: !3, line: 259, column: 9)
!9778 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 259, column: 9)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 259, column: 9)
!9780 = distinct !DILexicalBlock(scope: !9768, file: !3, line: 259, column: 9)
!9781 = !DILocalVariable(name: "ofsAddr", arg: 1, scope: !9768, file: !3, line: 255, type: !113)
!9782 = !DILocation(line: 255, column: 38, scope: !9768)
!9783 = !DILocalVariable(name: "cmd", arg: 2, scope: !9768, file: !3, line: 255, type: !879)
!9784 = !DILocation(line: 255, column: 51, scope: !9768)
!9785 = !DILocalVariable(name: "arg", arg: 3, scope: !9768, file: !3, line: 255, type: !879)
!9786 = !DILocation(line: 255, column: 60, scope: !9768)
!9787 = !DILocalVariable(name: "flags", scope: !9768, file: !3, line: 257, type: !148)
!9788 = !DILocation(line: 257, column: 23, scope: !9768)
!9789 = !DILocalVariable(name: "ret", scope: !9768, file: !3, line: 258, type: !879)
!9790 = !DILocation(line: 258, column: 13, scope: !9768)
!9791 = !DILocation(line: 259, column: 9, scope: !9768)
!9792 = !DILocation(line: 259, column: 9, scope: !9780)
!9793 = !DILocalVariable(name: "__dummy", scope: !9794, file: !3, line: 259, type: !148)
!9794 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 259, column: 9)
!9795 = !DILocation(line: 259, column: 9, scope: !9794)
!9796 = !DILocalVariable(name: "__dummy2", scope: !9794, file: !3, line: 259, type: !148)
!9797 = !DILocation(line: 259, column: 9, scope: !9779)
!9798 = !DILocation(line: 259, column: 9, scope: !9778)
!9799 = !DILocation(line: 259, column: 9, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9778, file: !3, line: 259, column: 9)
!9801 = !DILocalVariable(name: "__dummy", scope: !9802, file: !3, line: 259, type: !148)
!9802 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 259, column: 9)
!9803 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 259, column: 9)
!9804 = !DILocation(line: 259, column: 9, scope: !9802)
!9805 = !DILocalVariable(name: "__dummy2", scope: !9802, file: !3, line: 259, type: !148)
!9806 = !DILocation(line: 259, column: 9, scope: !9803)
!9807 = !DILocation(line: 259, column: 9, scope: !9777)
!9808 = !{i32 -2141505215}
!9809 = !DILocation(line: 329, column: 10, scope: !6191, inlinedAt: !9775)
!9810 = !DILocation(line: 329, column: 16, scope: !6191, inlinedAt: !9775)
!9811 = !DILocation(line: 259, column: 9, scope: !9776)
!9812 = !DILocation(line: 260, column: 9, scope: !9768)
!9813 = !DILocation(line: 260, column: 14, scope: !9768)
!9814 = !DILocation(line: 260, column: 22, scope: !9768)
!9815 = !DILocation(line: 260, column: 2, scope: !9768)
!9816 = !DILocation(line: 261, column: 9, scope: !9768)
!9817 = !DILocation(line: 261, column: 14, scope: !9768)
!9818 = !DILocation(line: 261, column: 22, scope: !9768)
!9819 = !DILocation(line: 261, column: 2, scope: !9768)
!9820 = !DILocation(line: 262, column: 19, scope: !9768)
!9821 = !DILocation(line: 262, column: 2, scope: !9768)
!9822 = !DILocation(line: 263, column: 14, scope: !9768)
!9823 = !DILocation(line: 263, column: 22, scope: !9768)
!9824 = !DILocation(line: 263, column: 8, scope: !9768)
!9825 = !DILocation(line: 263, column: 6, scope: !9768)
!9826 = !DILocation(line: 264, column: 41, scope: !9768)
!9827 = !DILocation(line: 409, column: 2, scope: !6243, inlinedAt: !9772)
!9828 = !DILocation(line: 409, column: 2, scope: !6248, inlinedAt: !9772)
!9829 = !DILocation(line: 409, column: 2, scope: !6249, inlinedAt: !9772)
!9830 = !DILocation(line: 409, column: 2, scope: !6256, inlinedAt: !9772)
!9831 = !DILocation(line: 409, column: 2, scope: !6259, inlinedAt: !9772)
!9832 = !DILocation(line: 265, column: 9, scope: !9768)
!9833 = !DILocation(line: 265, column: 2, scope: !9768)
!9834 = distinct !DISubprogram(name: "set_bit", scope: !7770, file: !7770, line: 26, type: !7771, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9835 = !DILocalVariable(name: "nr", arg: 1, scope: !9836, file: !5984, line: 52, type: !311)
!9836 = distinct !DISubprogram(name: "arch_set_bit", scope: !5984, file: !5984, line: 52, type: !7771, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9837 = !DILocation(line: 52, column: 19, scope: !9836, inlinedAt: !9838)
!9838 = distinct !DILocation(line: 29, column: 2, scope: !9834)
!9839 = !DILocalVariable(name: "addr", arg: 2, scope: !9836, file: !5984, line: 52, type: !7773)
!9840 = !DILocation(line: 52, column: 47, scope: !9836, inlinedAt: !9838)
!9841 = !DILocation(line: 84, column: 74, scope: !7781, inlinedAt: !9842)
!9842 = distinct !DILocation(line: 28, column: 2, scope: !9834)
!9843 = !DILocation(line: 84, column: 84, scope: !7781, inlinedAt: !9842)
!9844 = !DILocalVariable(name: "nr", arg: 1, scope: !9834, file: !7770, line: 26, type: !311)
!9845 = !DILocation(line: 26, column: 33, scope: !9834)
!9846 = !DILocalVariable(name: "addr", arg: 2, scope: !9834, file: !7770, line: 26, type: !7773)
!9847 = !DILocation(line: 26, column: 61, scope: !9834)
!9848 = !DILocation(line: 28, column: 26, scope: !9834)
!9849 = !DILocation(line: 28, column: 33, scope: !9834)
!9850 = !DILocation(line: 28, column: 31, scope: !9834)
!9851 = !DILocation(line: 86, column: 20, scope: !7781, inlinedAt: !9842)
!9852 = !DILocation(line: 86, column: 23, scope: !7781, inlinedAt: !9842)
!9853 = !DILocation(line: 86, column: 2, scope: !7781, inlinedAt: !9842)
!9854 = !DILocation(line: 87, column: 2, scope: !7781, inlinedAt: !9842)
!9855 = !DILocation(line: 29, column: 15, scope: !9834)
!9856 = !DILocation(line: 29, column: 19, scope: !9834)
!9857 = !DILocation(line: 54, column: 27, scope: !9858, inlinedAt: !9838)
!9858 = distinct !DILexicalBlock(scope: !9836, file: !5984, line: 54, column: 6)
!9859 = !DILocation(line: 54, column: 6, scope: !9858, inlinedAt: !9838)
!9860 = !DILocation(line: 54, column: 6, scope: !9836, inlinedAt: !9838)
!9861 = !DILocation(line: 56, column: 6, scope: !9862, inlinedAt: !9838)
!9862 = distinct !DILexicalBlock(scope: !9858, file: !5984, line: 54, column: 32)
!9863 = !DILocation(line: 57, column: 12, scope: !9862, inlinedAt: !9838)
!9864 = !DILocation(line: 55, column: 3, scope: !9862, inlinedAt: !9838)
!9865 = !{i32 -2147102331}
!9866 = !DILocation(line: 59, column: 2, scope: !9862, inlinedAt: !9838)
!9867 = !DILocation(line: 61, column: 8, scope: !9868, inlinedAt: !9838)
!9868 = distinct !DILexicalBlock(scope: !9858, file: !5984, line: 59, column: 9)
!9869 = !DILocation(line: 61, column: 32, scope: !9868, inlinedAt: !9838)
!9870 = !DILocation(line: 60, column: 3, scope: !9868, inlinedAt: !9838)
!9871 = !{i32 -2147102199}
!9872 = !DILocation(line: 30, column: 1, scope: !9834)
!9873 = distinct !DISubprogram(name: "MoxaPortWriteData", scope: !3, file: !3, line: 1866, type: !3936, scopeLine: 1868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!9874 = !DILocalVariable(name: "tty", arg: 1, scope: !9873, file: !3, line: 1866, type: !215)
!9875 = !DILocation(line: 1866, column: 49, scope: !9873)
!9876 = !DILocalVariable(name: "buffer", arg: 2, scope: !9873, file: !3, line: 1867, type: !419)
!9877 = !DILocation(line: 1867, column: 24, scope: !9873)
!9878 = !DILocalVariable(name: "len", arg: 3, scope: !9873, file: !3, line: 1867, type: !141)
!9879 = !DILocation(line: 1867, column: 36, scope: !9873)
!9880 = !DILocalVariable(name: "port", scope: !9873, file: !3, line: 1869, type: !116)
!9881 = !DILocation(line: 1869, column: 20, scope: !9873)
!9882 = !DILocation(line: 1869, column: 27, scope: !9873)
!9883 = !DILocation(line: 1869, column: 32, scope: !9873)
!9884 = !DILocalVariable(name: "baseAddr", scope: !9873, file: !3, line: 1870, type: !113)
!9885 = !DILocation(line: 1870, column: 16, scope: !9873)
!9886 = !DILocalVariable(name: "ofsAddr", scope: !9873, file: !3, line: 1870, type: !113)
!9887 = !DILocation(line: 1870, column: 27, scope: !9873)
!9888 = !DILocalVariable(name: "ofs", scope: !9873, file: !3, line: 1870, type: !113)
!9889 = !DILocation(line: 1870, column: 37, scope: !9873)
!9890 = !DILocalVariable(name: "c", scope: !9873, file: !3, line: 1871, type: !7)
!9891 = !DILocation(line: 1871, column: 15, scope: !9873)
!9892 = !DILocalVariable(name: "total", scope: !9873, file: !3, line: 1871, type: !7)
!9893 = !DILocation(line: 1871, column: 18, scope: !9873)
!9894 = !DILocalVariable(name: "head", scope: !9873, file: !3, line: 1872, type: !879)
!9895 = !DILocation(line: 1872, column: 6, scope: !9873)
!9896 = !DILocalVariable(name: "tail", scope: !9873, file: !3, line: 1872, type: !879)
!9897 = !DILocation(line: 1872, column: 12, scope: !9873)
!9898 = !DILocalVariable(name: "tx_mask", scope: !9873, file: !3, line: 1872, type: !879)
!9899 = !DILocation(line: 1872, column: 18, scope: !9873)
!9900 = !DILocalVariable(name: "spage", scope: !9873, file: !3, line: 1872, type: !879)
!9901 = !DILocation(line: 1872, column: 27, scope: !9873)
!9902 = !DILocalVariable(name: "epage", scope: !9873, file: !3, line: 1872, type: !879)
!9903 = !DILocation(line: 1872, column: 34, scope: !9873)
!9904 = !DILocalVariable(name: "pageno", scope: !9873, file: !3, line: 1873, type: !879)
!9905 = !DILocation(line: 1873, column: 6, scope: !9873)
!9906 = !DILocalVariable(name: "pageofs", scope: !9873, file: !3, line: 1873, type: !879)
!9907 = !DILocation(line: 1873, column: 14, scope: !9873)
!9908 = !DILocalVariable(name: "bufhead", scope: !9873, file: !3, line: 1873, type: !879)
!9909 = !DILocation(line: 1873, column: 23, scope: !9873)
!9910 = !DILocation(line: 1875, column: 12, scope: !9873)
!9911 = !DILocation(line: 1875, column: 18, scope: !9873)
!9912 = !DILocation(line: 1875, column: 10, scope: !9873)
!9913 = !DILocation(line: 1876, column: 13, scope: !9873)
!9914 = !DILocation(line: 1876, column: 19, scope: !9873)
!9915 = !DILocation(line: 1876, column: 26, scope: !9873)
!9916 = !DILocation(line: 1876, column: 11, scope: !9873)
!9917 = !DILocation(line: 1877, column: 18, scope: !9873)
!9918 = !DILocation(line: 1877, column: 26, scope: !9873)
!9919 = !DILocation(line: 1877, column: 12, scope: !9873)
!9920 = !DILocation(line: 1877, column: 10, scope: !9873)
!9921 = !DILocation(line: 1878, column: 16, scope: !9873)
!9922 = !DILocation(line: 1878, column: 24, scope: !9873)
!9923 = !DILocation(line: 1878, column: 10, scope: !9873)
!9924 = !DILocation(line: 1878, column: 8, scope: !9873)
!9925 = !DILocation(line: 1879, column: 16, scope: !9873)
!9926 = !DILocation(line: 1879, column: 24, scope: !9873)
!9927 = !DILocation(line: 1879, column: 10, scope: !9873)
!9928 = !DILocation(line: 1879, column: 8, scope: !9873)
!9929 = !DILocation(line: 1880, column: 15, scope: !9873)
!9930 = !DILocation(line: 1880, column: 23, scope: !9873)
!9931 = !DILocation(line: 1880, column: 9, scope: !9873)
!9932 = !DILocation(line: 1880, column: 7, scope: !9873)
!9933 = !DILocation(line: 1881, column: 15, scope: !9873)
!9934 = !DILocation(line: 1881, column: 23, scope: !9873)
!9935 = !DILocation(line: 1881, column: 9, scope: !9873)
!9936 = !DILocation(line: 1881, column: 7, scope: !9873)
!9937 = !DILocation(line: 1882, column: 7, scope: !9873)
!9938 = !DILocation(line: 1882, column: 14, scope: !9873)
!9939 = !DILocation(line: 1882, column: 12, scope: !9873)
!9940 = !DILocation(line: 1882, column: 6, scope: !9873)
!9941 = !DILocation(line: 1882, column: 23, scope: !9873)
!9942 = !DILocation(line: 1882, column: 30, scope: !9873)
!9943 = !DILocation(line: 1882, column: 28, scope: !9873)
!9944 = !DILocation(line: 1882, column: 35, scope: !9873)
!9945 = !DILocation(line: 1882, column: 43, scope: !9873)
!9946 = !DILocation(line: 1882, column: 50, scope: !9873)
!9947 = !DILocation(line: 1882, column: 48, scope: !9873)
!9948 = !DILocation(line: 1882, column: 57, scope: !9873)
!9949 = !DILocation(line: 1882, column: 55, scope: !9873)
!9950 = !DILocation(line: 1882, column: 4, scope: !9873)
!9951 = !DILocation(line: 1883, column: 6, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 1883, column: 6)
!9953 = !DILocation(line: 1883, column: 10, scope: !9952)
!9954 = !DILocation(line: 1883, column: 8, scope: !9952)
!9955 = !DILocation(line: 1883, column: 6, scope: !9873)
!9956 = !DILocation(line: 1884, column: 7, scope: !9952)
!9957 = !DILocation(line: 1884, column: 5, scope: !9952)
!9958 = !DILocation(line: 1884, column: 3, scope: !9952)
!9959 = !DILocation(line: 1885, column: 42, scope: !9873)
!9960 = !DILocation(line: 1885, column: 16, scope: !9873)
!9961 = !DILocation(line: 1885, column: 22, scope: !9873)
!9962 = !DILocation(line: 1885, column: 27, scope: !9873)
!9963 = !DILocation(line: 1885, column: 32, scope: !9873)
!9964 = !DILocation(line: 1885, column: 2, scope: !9873)
!9965 = !DILocation(line: 1885, column: 39, scope: !9873)
!9966 = !DILocation(line: 1886, column: 10, scope: !9873)
!9967 = !DILocation(line: 1886, column: 8, scope: !9873)
!9968 = !DILocation(line: 1887, column: 6, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 1887, column: 6)
!9970 = !DILocation(line: 1887, column: 15, scope: !9969)
!9971 = !DILocation(line: 1887, column: 12, scope: !9969)
!9972 = !DILocation(line: 1887, column: 6, scope: !9873)
!9973 = !DILocation(line: 1888, column: 19, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1887, column: 22)
!9975 = !DILocation(line: 1888, column: 27, scope: !9974)
!9976 = !DILocation(line: 1888, column: 13, scope: !9974)
!9977 = !DILocation(line: 1888, column: 11, scope: !9974)
!9978 = !DILocation(line: 1889, column: 10, scope: !9974)
!9979 = !DILocation(line: 1889, column: 17, scope: !9974)
!9980 = !DILocation(line: 1889, column: 26, scope: !9974)
!9981 = !DILocation(line: 1889, column: 3, scope: !9974)
!9982 = !DILocation(line: 1890, column: 3, scope: !9974)
!9983 = !DILocation(line: 1890, column: 10, scope: !9974)
!9984 = !DILocation(line: 1890, column: 12, scope: !9974)
!9985 = !DILocation(line: 1891, column: 8, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 1891, column: 8)
!9987 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 1890, column: 17)
!9988 = !DILocation(line: 1891, column: 15, scope: !9986)
!9989 = !DILocation(line: 1891, column: 13, scope: !9986)
!9990 = !DILocation(line: 1891, column: 8, scope: !9987)
!9991 = !DILocation(line: 1892, column: 11, scope: !9986)
!9992 = !DILocation(line: 1892, column: 18, scope: !9986)
!9993 = !DILocation(line: 1892, column: 16, scope: !9986)
!9994 = !DILocation(line: 1892, column: 23, scope: !9986)
!9995 = !DILocation(line: 1892, column: 9, scope: !9986)
!9996 = !DILocation(line: 1892, column: 5, scope: !9986)
!9997 = !DILocation(line: 1894, column: 11, scope: !9986)
!9998 = !DILocation(line: 1894, column: 19, scope: !9986)
!9999 = !DILocation(line: 1894, column: 25, scope: !9986)
!10000 = !DILocation(line: 1894, column: 23, scope: !9986)
!10001 = !DILocation(line: 1894, column: 9, scope: !9986)
!10002 = !DILocation(line: 1895, column: 11, scope: !9987)
!10003 = !DILocation(line: 1895, column: 15, scope: !9987)
!10004 = !DILocation(line: 1895, column: 13, scope: !9987)
!10005 = !DILocation(line: 1895, column: 10, scope: !9987)
!10006 = !DILocation(line: 1895, column: 22, scope: !9987)
!10007 = !DILocation(line: 1895, column: 28, scope: !9987)
!10008 = !DILocation(line: 1895, column: 8, scope: !9987)
!10009 = !DILocation(line: 1896, column: 10, scope: !9987)
!10010 = !DILocation(line: 1896, column: 19, scope: !9987)
!10011 = !DILocation(line: 1896, column: 36, scope: !9987)
!10012 = !DILocation(line: 1896, column: 34, scope: !9987)
!10013 = !DILocation(line: 1896, column: 46, scope: !9987)
!10014 = !DILocation(line: 1896, column: 44, scope: !9987)
!10015 = !DILocation(line: 1896, column: 8, scope: !9987)
!10016 = !DILocation(line: 1897, column: 16, scope: !9987)
!10017 = !DILocation(line: 1897, column: 21, scope: !9987)
!10018 = !DILocation(line: 1897, column: 29, scope: !9987)
!10019 = !DILocation(line: 1897, column: 4, scope: !9987)
!10020 = !DILocation(line: 1898, column: 14, scope: !9987)
!10021 = !DILocation(line: 1898, column: 11, scope: !9987)
!10022 = !DILocation(line: 1899, column: 12, scope: !9987)
!10023 = !DILocation(line: 1899, column: 19, scope: !9987)
!10024 = !DILocation(line: 1899, column: 17, scope: !9987)
!10025 = !DILocation(line: 1899, column: 26, scope: !9987)
!10026 = !DILocation(line: 1899, column: 24, scope: !9987)
!10027 = !DILocation(line: 1899, column: 11, scope: !9987)
!10028 = !DILocation(line: 1899, column: 9, scope: !9987)
!10029 = !DILocation(line: 1900, column: 9, scope: !9987)
!10030 = !DILocation(line: 1900, column: 6, scope: !9987)
!10031 = distinct !{!10031, !9982, !10032}
!10032 = !DILocation(line: 1901, column: 3, scope: !9974)
!10033 = !DILocation(line: 1902, column: 2, scope: !9974)
!10034 = !DILocation(line: 1903, column: 12, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1902, column: 9)
!10036 = !DILocation(line: 1903, column: 21, scope: !10035)
!10037 = !DILocation(line: 1903, column: 26, scope: !10035)
!10038 = !DILocation(line: 1903, column: 18, scope: !10035)
!10039 = !DILocation(line: 1903, column: 10, scope: !10035)
!10040 = !DILocation(line: 1904, column: 13, scope: !10035)
!10041 = !DILocation(line: 1904, column: 18, scope: !10035)
!10042 = !DILocation(line: 1904, column: 11, scope: !10035)
!10043 = !DILocation(line: 1905, column: 3, scope: !10035)
!10044 = !DILocation(line: 1905, column: 10, scope: !10035)
!10045 = !DILocation(line: 1905, column: 12, scope: !10035)
!10046 = !DILocation(line: 1906, column: 22, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 1905, column: 17)
!10048 = !DILocation(line: 1906, column: 20, scope: !10047)
!10049 = !DILocation(line: 1906, column: 8, scope: !10047)
!10050 = !DILocation(line: 1907, column: 8, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 1907, column: 8)
!10052 = !DILocation(line: 1907, column: 14, scope: !10051)
!10053 = !DILocation(line: 1907, column: 12, scope: !10051)
!10054 = !DILocation(line: 1907, column: 8, scope: !10047)
!10055 = !DILocation(line: 1908, column: 11, scope: !10051)
!10056 = !DILocation(line: 1908, column: 9, scope: !10051)
!10057 = !DILocation(line: 1908, column: 5, scope: !10051)
!10058 = !DILocation(line: 1909, column: 11, scope: !10047)
!10059 = !DILocation(line: 1909, column: 19, scope: !10047)
!10060 = !DILocation(line: 1909, column: 28, scope: !10047)
!10061 = !DILocation(line: 1909, column: 4, scope: !10047)
!10062 = !DILocation(line: 1910, column: 10, scope: !10047)
!10063 = !DILocation(line: 1910, column: 19, scope: !10047)
!10064 = !DILocation(line: 1910, column: 36, scope: !10047)
!10065 = !DILocation(line: 1910, column: 34, scope: !10047)
!10066 = !DILocation(line: 1910, column: 8, scope: !10047)
!10067 = !DILocation(line: 1911, column: 16, scope: !10047)
!10068 = !DILocation(line: 1911, column: 21, scope: !10047)
!10069 = !DILocation(line: 1911, column: 29, scope: !10047)
!10070 = !DILocation(line: 1911, column: 4, scope: !10047)
!10071 = !DILocation(line: 1912, column: 14, scope: !10047)
!10072 = !DILocation(line: 1912, column: 11, scope: !10047)
!10073 = !DILocation(line: 1913, column: 8, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 1913, column: 8)
!10075 = !DILocation(line: 1913, column: 20, scope: !10074)
!10076 = !DILocation(line: 1913, column: 17, scope: !10074)
!10077 = !DILocation(line: 1913, column: 8, scope: !10047)
!10078 = !DILocation(line: 1914, column: 14, scope: !10074)
!10079 = !DILocation(line: 1914, column: 12, scope: !10074)
!10080 = !DILocation(line: 1914, column: 5, scope: !10074)
!10081 = !DILocation(line: 1915, column: 12, scope: !10047)
!10082 = !DILocation(line: 1916, column: 9, scope: !10047)
!10083 = !DILocation(line: 1916, column: 6, scope: !10047)
!10084 = distinct !{!10084, !10043, !10085}
!10085 = !DILocation(line: 1917, column: 3, scope: !10035)
!10086 = !DILocation(line: 1918, column: 11, scope: !10035)
!10087 = !DILocation(line: 1918, column: 18, scope: !10035)
!10088 = !DILocation(line: 1918, column: 16, scope: !10035)
!10089 = !DILocation(line: 1918, column: 27, scope: !10035)
!10090 = !DILocation(line: 1918, column: 25, scope: !10035)
!10091 = !DILocation(line: 1918, column: 10, scope: !10035)
!10092 = !DILocation(line: 1918, column: 8, scope: !10035)
!10093 = !DILocation(line: 1920, column: 9, scope: !9873)
!10094 = !DILocation(line: 1920, column: 15, scope: !9873)
!10095 = !DILocation(line: 1920, column: 23, scope: !9873)
!10096 = !DILocation(line: 1920, column: 2, scope: !9873)
!10097 = !DILocation(line: 1921, column: 12, scope: !9873)
!10098 = !DILocation(line: 1921, column: 20, scope: !9873)
!10099 = !DILocation(line: 1921, column: 2, scope: !9873)
!10100 = !DILocation(line: 1922, column: 9, scope: !9873)
!10101 = !DILocation(line: 1922, column: 2, scope: !9873)
!10102 = distinct !DISubprogram(name: "MoxaPortTxFree", scope: !3, file: !3, line: 1997, type: !7737, scopeLine: 1998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!10103 = !DILocalVariable(name: "port", arg: 1, scope: !10102, file: !3, line: 1997, type: !116)
!10104 = !DILocation(line: 1997, column: 45, scope: !10102)
!10105 = !DILocalVariable(name: "ofsAddr", scope: !10102, file: !3, line: 1999, type: !113)
!10106 = !DILocation(line: 1999, column: 16, scope: !10102)
!10107 = !DILocation(line: 1999, column: 26, scope: !10102)
!10108 = !DILocation(line: 1999, column: 32, scope: !10102)
!10109 = !DILocalVariable(name: "rptr", scope: !10102, file: !3, line: 2000, type: !879)
!10110 = !DILocation(line: 2000, column: 6, scope: !10102)
!10111 = !DILocalVariable(name: "wptr", scope: !10102, file: !3, line: 2000, type: !879)
!10112 = !DILocation(line: 2000, column: 12, scope: !10102)
!10113 = !DILocalVariable(name: "mask", scope: !10102, file: !3, line: 2000, type: !879)
!10114 = !DILocation(line: 2000, column: 18, scope: !10102)
!10115 = !DILocation(line: 2002, column: 15, scope: !10102)
!10116 = !DILocation(line: 2002, column: 23, scope: !10102)
!10117 = !DILocation(line: 2002, column: 9, scope: !10102)
!10118 = !DILocation(line: 2002, column: 7, scope: !10102)
!10119 = !DILocation(line: 2003, column: 15, scope: !10102)
!10120 = !DILocation(line: 2003, column: 23, scope: !10102)
!10121 = !DILocation(line: 2003, column: 9, scope: !10102)
!10122 = !DILocation(line: 2003, column: 7, scope: !10102)
!10123 = !DILocation(line: 2004, column: 15, scope: !10102)
!10124 = !DILocation(line: 2004, column: 23, scope: !10102)
!10125 = !DILocation(line: 2004, column: 9, scope: !10102)
!10126 = !DILocation(line: 2004, column: 7, scope: !10102)
!10127 = !DILocation(line: 2005, column: 9, scope: !10102)
!10128 = !DILocation(line: 2005, column: 18, scope: !10102)
!10129 = !DILocation(line: 2005, column: 25, scope: !10102)
!10130 = !DILocation(line: 2005, column: 23, scope: !10102)
!10131 = !DILocation(line: 2005, column: 33, scope: !10102)
!10132 = !DILocation(line: 2005, column: 31, scope: !10102)
!10133 = !DILocation(line: 2005, column: 14, scope: !10102)
!10134 = !DILocation(line: 2005, column: 2, scope: !10102)
!10135 = distinct !DISubprogram(name: "might_fault", scope: !10136, file: !10136, line: 315, type: !1941, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!10136 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!10137 = !DILocation(line: 315, column: 40, scope: !10135)
!10138 = distinct !DISubprogram(name: "copy_overflow", scope: !8525, file: !8525, line: 132, type: !10139, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!10139 = !DISubroutineType(types: !10140)
!10140 = !{null, !141, !148}
!10141 = !DILocalVariable(name: "size", arg: 1, scope: !10138, file: !8525, line: 132, type: !141)
!10142 = !DILocation(line: 132, column: 38, scope: !10138)
!10143 = !DILocalVariable(name: "count", arg: 2, scope: !10138, file: !8525, line: 132, type: !148)
!10144 = !DILocation(line: 132, column: 58, scope: !10138)
!10145 = !DILocalVariable(name: "__ret_warn_on", scope: !10146, file: !8525, line: 134, type: !141)
!10146 = distinct !DILexicalBlock(scope: !10138, file: !8525, line: 134, column: 2)
!10147 = !DILocation(line: 134, column: 2, scope: !10146)
!10148 = !DILocation(line: 134, column: 2, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10146, file: !8525, line: 134, column: 2)
!10150 = !DILocation(line: 134, column: 2, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10149, file: !8525, line: 134, column: 2)
!10152 = !DILocation(line: 134, column: 2, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10151, file: !8525, line: 134, column: 2)
!10154 = !DILocation(line: 134, column: 2, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10151, file: !8525, line: 134, column: 2)
!10156 = !DILocation(line: 134, column: 2, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10155, file: !8525, line: 134, column: 2)
!10158 = !DILocation(line: 134, column: 2, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10155, file: !8525, line: 134, column: 2)
!10160 = !{i32 -2145508766, i32 -2145508737, i32 -2145508691, i32 -2145508633, i32 -2145508579, i32 -2145508525, i32 -2145508470, i32 -2145508439}
!10161 = !DILocation(line: 134, column: 2, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10155, file: !8525, line: 134, column: 2)
!10163 = !{i32 -2145508019, i32 -2145508012, i32 -2145507960, i32 -2145507929, i32 -2145507899}
!10164 = !DILocation(line: 134, column: 2, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10155, file: !8525, line: 134, column: 2)
!10166 = !DILocation(line: 134, column: 2, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10151, file: !8525, line: 134, column: 2)
!10168 = !DILocation(line: 135, column: 1, scope: !10138)
!10169 = distinct !DISubprogram(name: "check_object_size", scope: !8525, file: !8525, line: 122, type: !10170, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!10170 = !DISubroutineType(types: !10171)
!10171 = !{null, !2179, !148, !484}
!10172 = !DILocalVariable(name: "ptr", arg: 1, scope: !10169, file: !8525, line: 122, type: !2179)
!10173 = !DILocation(line: 122, column: 50, scope: !10169)
!10174 = !DILocalVariable(name: "n", arg: 2, scope: !10169, file: !8525, line: 122, type: !148)
!10175 = !DILocation(line: 122, column: 69, scope: !10169)
!10176 = !DILocalVariable(name: "to_user", arg: 3, scope: !10169, file: !8525, line: 123, type: !484)
!10177 = !DILocation(line: 123, column: 15, scope: !10169)
!10178 = !DILocation(line: 124, column: 3, scope: !10169)
!10179 = distinct !DISubprogram(name: "MoxaPortTxDisable", scope: !3, file: !3, line: 2019, type: !6353, scopeLine: 2020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!10180 = !DILocalVariable(name: "port", arg: 1, scope: !10179, file: !3, line: 2019, type: !116)
!10181 = !DILocation(line: 2019, column: 49, scope: !10179)
!10182 = !DILocation(line: 2021, column: 11, scope: !10179)
!10183 = !DILocation(line: 2021, column: 17, scope: !10179)
!10184 = !DILocation(line: 2021, column: 2, scope: !10179)
!10185 = !DILocation(line: 2022, column: 1, scope: !10179)
!10186 = distinct !DISubprogram(name: "MoxaPortTxEnable", scope: !3, file: !3, line: 2024, type: !6353, scopeLine: 2025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!10187 = !DILocalVariable(name: "port", arg: 1, scope: !10186, file: !3, line: 2024, type: !116)
!10188 = !DILocation(line: 2024, column: 48, scope: !10186)
!10189 = !DILocation(line: 2026, column: 11, scope: !10186)
!10190 = !DILocation(line: 2026, column: 17, scope: !10186)
!10191 = !DILocation(line: 2026, column: 2, scope: !10186)
!10192 = !DILocation(line: 2027, column: 1, scope: !10186)
!10193 = distinct !DISubprogram(name: "MoxaPortGetLineOut", scope: !3, file: !3, line: 1807, type: !10194, scopeLine: 1809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !199)
!10194 = !DISubroutineType(types: !10195)
!10195 = !{!141, !116, !700, !700}
!10196 = !DILocalVariable(name: "port", arg: 1, scope: !10193, file: !3, line: 1807, type: !116)
!10197 = !DILocation(line: 1807, column: 49, scope: !10193)
!10198 = !DILocalVariable(name: "dtrState", arg: 2, scope: !10193, file: !3, line: 1807, type: !700)
!10199 = !DILocation(line: 1807, column: 60, scope: !10193)
!10200 = !DILocalVariable(name: "rtsState", arg: 3, scope: !10193, file: !3, line: 1808, type: !700)
!10201 = !DILocation(line: 1808, column: 8, scope: !10193)
!10202 = !DILocation(line: 1810, column: 6, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 1810, column: 6)
!10204 = !DILocation(line: 1810, column: 6, scope: !10193)
!10205 = !DILocation(line: 1811, column: 18, scope: !10203)
!10206 = !DILocation(line: 1811, column: 24, scope: !10203)
!10207 = !DILocation(line: 1811, column: 33, scope: !10203)
!10208 = !DILocation(line: 1811, column: 16, scope: !10203)
!10209 = !DILocation(line: 1811, column: 15, scope: !10203)
!10210 = !DILocation(line: 1811, column: 4, scope: !10203)
!10211 = !DILocation(line: 1811, column: 13, scope: !10203)
!10212 = !DILocation(line: 1811, column: 3, scope: !10203)
!10213 = !DILocation(line: 1812, column: 6, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 1812, column: 6)
!10215 = !DILocation(line: 1812, column: 6, scope: !10193)
!10216 = !DILocation(line: 1813, column: 18, scope: !10214)
!10217 = !DILocation(line: 1813, column: 24, scope: !10214)
!10218 = !DILocation(line: 1813, column: 33, scope: !10214)
!10219 = !DILocation(line: 1813, column: 16, scope: !10214)
!10220 = !DILocation(line: 1813, column: 15, scope: !10214)
!10221 = !DILocation(line: 1813, column: 4, scope: !10214)
!10222 = !DILocation(line: 1813, column: 13, scope: !10214)
!10223 = !DILocation(line: 1813, column: 3, scope: !10214)
!10224 = !DILocation(line: 1815, column: 2, scope: !10193)
