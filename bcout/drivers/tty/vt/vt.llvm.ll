; ModuleID = '../bcout/drivers/tty/vt/vt.llvm.bc'
source_filename = "drivers/tty/vt/vt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.con_initcall.init\22, \22a\22\09"
module asm "__initcall_con_init:\09\09\09"
module asm ".long\09con_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"
module asm ".section\09\22.initcall2.init\22, \22a\22\09"
module asm "__initcall_vtconsole_class_init2:\09\09\09"
module asm ".long\09vtconsole_class_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.atomic_notifier_head = type { %struct.spinlock, %struct.notifier_block* }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.atomic64_t = type { i64 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.atomic_t = type { i32 }
%struct.vc = type { %struct.vc_data*, %struct.work_struct }
%struct.vc_data = type { %struct.tty_port, %struct.vc_state, %struct.vc_state, i16, i32, i32, i32, i32, i64, i64, i64, i32, i32, %struct.consw*, i16*, i32, i8, i8, i8, i8, i8, i8, i32, i16, i16, i64, i16, %struct.console_font, i16, i32, i32, [16 x i32], %struct.vt_mode, %struct.pid*, i32, %struct.wait_queue_head, i16, i8, i32, [4 x i64], [48 x i8], i16*, i32, i32, i32, i16, %struct.vc_data**, %struct.uni_pagedir*, %struct.uni_pagedir**, %struct.uni_screen* }
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.tty_buffer = type { %union.anon.1, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.1 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.2, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.2 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.3, i8* }
%union.anon.3 = type { i64 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.4, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.47, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.17, [0 x i64] }
%struct.anon.17 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.18, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.18 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.19 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.24, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.25, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.26, %union.anon.30, %struct.key_restriction* }
%union.anon.24 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.25 = type { i64 }
%union.anon.26 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.27, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.27 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.30 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.33, %union.anon.34, i32 }
%struct.request_queue = type opaque
%union.anon.33 = type { %struct.list_head }
%union.anon.34 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.35 }
%struct.anon.35 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.46, i32, [12 x i8] }
%union.anon.46 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.47 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.48, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.51 }
%union.anon.48 = type { %struct.anon.49 }
%struct.anon.49 = type { i64, i64 }
%union.anon.51 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.57 = type { %struct.callback_head }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.6 }
%union.anon.6 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.32 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.32 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.serial_icounter_struct = type opaque
%struct.serial_struct = type opaque
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.kref = type { %struct.refcount_struct }
%struct.vc_state = type { i32, i32, i8, [2 x i8], i8, i32, i8, i8, i8, i8 }
%struct.consw = type { %struct.module*, i8* ()*, void (%struct.vc_data*, i32)*, void (%struct.vc_data*)*, void (%struct.vc_data*, i32, i32, i32, i32)*, void (%struct.vc_data*, i32, i32, i32)*, void (%struct.vc_data*, i16*, i32, i32, i32)*, void (%struct.vc_data*, i32)*, i1 (%struct.vc_data*, i32, i32, i32, i32)*, {}*, i32 (%struct.vc_data*, i32, i32)*, i32 (%struct.vc_data*, %struct.console_font*, i32)*, i32 (%struct.vc_data*, %struct.console_font*)*, i32 (%struct.vc_data*, %struct.console_font*, i8*)*, i32 (%struct.vc_data*, i32)*, i32 (%struct.vc_data*, i32, i32, i32)*, void (%struct.vc_data*, i8*)*, void (%struct.vc_data*, i32)*, {}*, void (%struct.vc_data*)*, i8 (%struct.vc_data*, i8, i32, i1, i1, i1, i1)*, void (%struct.vc_data*, i16*, i32)*, i16* (%struct.vc_data*, i32)*, i64 (%struct.vc_data*, i64, i32*, i32*)*, void (%struct.vc_data*)*, {}*, {}* }
%struct.console_font = type { i32, i32, i32, i8* }
%struct.vt_mode = type { i8, i8, i16, i16, i16 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.uni_pagedir = type opaque
%struct.uni_screen = type { [0 x i32*] }
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.con_driver = type { %struct.consw*, i8*, %struct.device*, i32, i32, i32, i32 }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.67, i64 }
%union.anon.67 = type { void (i64)* }
%struct.kmem_cache = type opaque
%struct.console = type { [16 x i8], void (%struct.console*, i8*, i32)*, i32 (%struct.console*, i8*, i32)*, %struct.tty_driver* (%struct.console*, i32*)*, void ()*, i32 (%struct.console*, i8*)*, i32 (%struct.console*)*, i32 (%struct.console*, i8*, i32, i8*)*, i16, i16, i32, i8*, %struct.console* }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.vc_draw_region = type { i64, i64, i32 }
%struct.interval = type { i32, i32 }
%struct.vt_notifier_param = type { %struct.vc_data*, i32 }
%struct.tiocl_selection = type { i16, i16, i16, i16, i16 }
%struct.console_font_op = type { i32, i32, i32, i32, i32, i8* }
%struct.rgb = type { i8, i8, i8 }

@default_utf8 = dso_local global i32 1, align 4, !dbg !0
@__param_str_default_utf8 = internal constant [16 x i8] c"vt.default_utf8\00", align 16, !dbg !4619
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@__param_default_utf8 = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_default_utf8, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @default_utf8 to i8*) } }, section "__param", align 8, !dbg !4419
@__UNIQUE_ID_default_utf8type229 = internal constant [29 x i8] c"vt.parmtype=default_utf8:int\00", section ".modinfo", align 1, !dbg !4471
@global_cursor_default = dso_local global i32 -1, align 4, !dbg !4476
@__param_str_global_cursor_default = internal constant [25 x i8] c"vt.global_cursor_default\00", align 16, !dbg !4622
@__param_global_cursor_default = internal constant %struct.kernel_param { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__param_str_global_cursor_default, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @global_cursor_default to i8*) } }, section "__param", align 8, !dbg !4478
@__UNIQUE_ID_global_cursor_defaulttype230 = internal constant [38 x i8] c"vt.parmtype=global_cursor_default:int\00", section ".modinfo", align 1, !dbg !4480
@__param_str_cur_default = internal constant [15 x i8] c"vt.cur_default\00", align 1, !dbg !4627
@cur_default = internal global i32 2, align 4, !dbg !4632
@__param_cur_default = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_cur_default, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @cur_default to i8*) } }, section "__param", align 8, !dbg !4485
@__UNIQUE_ID_cur_defaulttype231 = internal constant [28 x i8] c"vt.parmtype=cur_default:int\00", section ".modinfo", align 1, !dbg !4487
@__param_str_consoleblank = internal constant [13 x i8] c"consoleblank\00", align 1, !dbg !4634
@blankinterval = internal global i32 0, align 4, !dbg !4591
@__param_consoleblank = internal constant %struct.kernel_param { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__param_str_consoleblank, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @blankinterval to i8*) } }, section "__param", align 8, !dbg !4492
@want_console = dso_local global i32 -1, align 4, !dbg !4494
@vt_notifier_list = internal global %struct.atomic_notifier_head { %struct.spinlock undef, %struct.notifier_block* null }, align 8, !dbg !4639
@console_work = internal global %struct.work_struct { %struct.atomic64_t { i64 68719476704 }, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.work_struct* @console_work to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.work_struct* @console_work to i8*), i64 8) to %struct.list_head*) }, void (%struct.work_struct*)* @console_callback }, align 8, !dbg !4656
@ignore_console_lock_warning = external dso_local global %struct.atomic_t, align 4
@oops_in_progress = external dso_local global i32, align 4
@.str = private unnamed_addr constant [20 x i8] c"drivers/tty/vt/vt.c\00", align 1
@complement_pos.old_offset = internal global i32 -1, align 4, !dbg !4496
@complement_pos.old = internal global i16 0, align 2, !dbg !4499
@complement_pos.oldx = internal global i16 0, align 2, !dbg !4501
@complement_pos.oldy = internal global i16 0, align 2, !dbg !4503
@vc_cons = dso_local global [63 x %struct.vc] zeroinitializer, align 16, !dbg !4569
@fg_console = dso_local global i32 0, align 4, !dbg !4593
@tty0dev = internal global %struct.device* null, align 8, !dbg !4613
@.str.1 = private unnamed_addr constant [7 x i8] c"active\00", align 1
@vc_port_ops = internal constant %struct.tty_port_operations { i32 (%struct.tty_port*)* null, void (%struct.tty_port*, i32)* null, void (%struct.tty_port*)* null, i32 (%struct.tty_port*, %struct.tty_struct*)* null, void (%struct.tty_port*)* @vc_port_destruct }, align 8, !dbg !4660
@color_table = dso_local constant [16 x i8] c"\00\04\02\06\01\05\03\07\08\0C\0A\0E\09\0D\0B\0F", align 16, !dbg !4505
@default_red = dso_local global [16 x i8] c"\00\AA\00\AA\00\AA\00\AAU\FFU\FFU\FFU\FF", align 16, !dbg !4508
@__param_str_default_red = internal constant [15 x i8] c"vt.default_red\00", align 1, !dbg !4664
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 8
@__param_arr_default_red = internal constant %struct.kparam_array { i32 16, i32 1, i32* null, %struct.kernel_param_ops* @param_ops_byte, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @default_red, i32 0, i32 0) }, align 8, !dbg !4666
@__param_default_red = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_default_red, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_default_red } }, section "__param", align 8, !dbg !4511
@__UNIQUE_ID_default_redtype252 = internal constant [38 x i8] c"vt.parmtype=default_red:array of byte\00", section ".modinfo", align 1, !dbg !4513
@default_grn = dso_local global [16 x i8] c"\00\00\AAU\00\00\AA\AAUU\FF\FFUU\FF\FF", align 16, !dbg !4515
@__param_str_default_grn = internal constant [15 x i8] c"vt.default_grn\00", align 1, !dbg !4668
@__param_arr_default_grn = internal constant %struct.kparam_array { i32 16, i32 1, i32* null, %struct.kernel_param_ops* @param_ops_byte, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @default_grn, i32 0, i32 0) }, align 8, !dbg !4670
@__param_default_grn = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_default_grn, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_default_grn } }, section "__param", align 8, !dbg !4517
@__UNIQUE_ID_default_grntype253 = internal constant [38 x i8] c"vt.parmtype=default_grn:array of byte\00", section ".modinfo", align 1, !dbg !4519
@default_blu = dso_local global [16 x i8] c"\00\00\00\00\AA\AA\AA\AAUUUU\FF\FF\FF\FF", align 16, !dbg !4521
@__param_str_default_blu = internal constant [15 x i8] c"vt.default_blu\00", align 1, !dbg !4672
@__param_arr_default_blu = internal constant %struct.kparam_array { i32 16, i32 1, i32* null, %struct.kernel_param_ops* @param_ops_byte, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @default_blu, i32 0, i32 0) }, align 8, !dbg !4674
@__param_default_blu = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_default_blu, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_default_blu } }, section "__param", align 8, !dbg !4523
@__UNIQUE_ID_default_blutype254 = internal constant [38 x i8] c"vt.parmtype=default_blu:array of byte\00", section ".modinfo", align 1, !dbg !4525
@.str.2 = private unnamed_addr constant [10 x i8] c"\1B[M%c%c%c\00", align 1
@vt_dont_switch = external dso_local global i8, align 1
@vt_kmsg_redirect.kmsg_con = internal global i32 0, align 4, !dbg !4527
@ignore_poke = internal global i32 0, align 4, !dbg !4581
@console_blanked = dso_local global i32 0, align 4, !dbg !4585
@__param_str_color = internal constant [9 x i8] c"vt.color\00", align 1, !dbg !4676
@default_color = internal global i32 7, align 4, !dbg !4681
@__param_color = internal constant %struct.kernel_param { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__param_str_color, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @default_color to i8*) } }, section "__param", align 8, !dbg !4530
@__UNIQUE_ID_colortype268 = internal constant [22 x i8] c"vt.parmtype=color:int\00", section ".modinfo", align 1, !dbg !4532
@__param_str_italic = internal constant [10 x i8] c"vt.italic\00", align 1, !dbg !4683
@default_italic_color = internal global i32 2, align 4, !dbg !4688
@__param_italic = internal constant %struct.kernel_param { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__param_str_italic, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @default_italic_color to i8*) } }, section "__param", align 8, !dbg !4537
@__UNIQUE_ID_italictype269 = internal constant [23 x i8] c"vt.parmtype=italic:int\00", section ".modinfo", align 1, !dbg !4539
@__param_str_underline = internal constant [13 x i8] c"vt.underline\00", align 1, !dbg !4690
@default_underline_color = internal global i32 3, align 4, !dbg !4692
@__param_underline = internal constant %struct.kernel_param { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__param_str_underline, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @default_underline_color to i8*) } }, section "__param", align 8, !dbg !4544
@__UNIQUE_ID_underlinetype270 = internal constant [26 x i8] c"vt.parmtype=underline:int\00", section ".modinfo", align 1, !dbg !4546
@__UNIQUE_ID___addressable_con_init271 = internal global i8* bitcast (i32 ()* @con_init to i8*), section ".discard.addressable", align 8, !dbg !4551
@vc0_cdev = internal global %struct.cdev zeroinitializer, align 8, !dbg !4617
@.str.3 = private unnamed_addr constant [10 x i8] c"/dev/vc/0\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"Couldn't register /dev/tty0 driver\0A\00", align 1
@tty_class = external dso_local global %struct.class*, align 8
@vt_dev_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @vt_dev_group, %struct.attribute_group* null], align 16, !dbg !4741
@.str.5 = private unnamed_addr constant [5 x i8] c"tty0\00", align 1
@console_driver = dso_local global %struct.tty_driver* null, align 8, !dbg !4615
@.str.6 = private unnamed_addr constant [34 x i8] c"Couldn't allocate console driver\0A\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@tty_std_termios = external dso_local global %struct.ktermios, align 4
@con_ops = internal constant %struct.tty_operations { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)* null, i32 (%struct.tty_driver*, %struct.tty_struct*)* @con_install, void (%struct.tty_driver*, %struct.tty_struct*)* null, i32 (%struct.tty_struct*, %struct.file*)* @con_open, void (%struct.tty_struct*, %struct.file*)* @con_close, void (%struct.tty_struct*)* @con_shutdown, void (%struct.tty_struct*)* @con_cleanup, i32 (%struct.tty_struct*, i8*, i32)* @con_write, i32 (%struct.tty_struct*, i8)* @con_put_char, void (%struct.tty_struct*)* @con_flush_chars, i32 (%struct.tty_struct*)* @con_write_room, i32 (%struct.tty_struct*)* @con_chars_in_buffer, i32 (%struct.tty_struct*, i32, i64)* @vt_ioctl, i64 (%struct.tty_struct*, i32, i64)* null, void (%struct.tty_struct*, %struct.ktermios*)* null, void (%struct.tty_struct*)* @con_throttle, void (%struct.tty_struct*)* @con_unthrottle, void (%struct.tty_struct*)* @con_stop, void (%struct.tty_struct*)* @con_start, void (%struct.tty_struct*)* null, i32 (%struct.tty_struct*, i32)* null, void (%struct.tty_struct*)* null, void (%struct.tty_struct*)* null, void (%struct.tty_struct*, i32)* null, void (%struct.tty_struct*, i8)* null, i32 (%struct.tty_struct*)* null, i32 (%struct.tty_struct*, i32, i32)* null, i32 (%struct.tty_struct*, %struct.winsize*)* @vt_resize, i32 (%struct.tty_struct*, %struct.termiox*)* null, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)* null, i32 (%struct.tty_struct*, %struct.serial_struct*)* null, i32 (%struct.tty_struct*, %struct.serial_struct*)* null, void (%struct.tty_struct*, %struct.seq_file*)* null, i32 (%struct.seq_file*, i8*)* null }, align 8, !dbg !4763
@.str.8 = private unnamed_addr constant [34 x i8] c"Couldn't register console driver\0A\00", align 1
@registered_con_driver = internal global [16 x %struct.con_driver] zeroinitializer, align 16, !dbg !4555
@con_driver_map = internal global [63 x %struct.consw*] zeroinitializer, align 16, !dbg !4578
@conswitchp = dso_local global %struct.consw* null, align 8, !dbg !4567
@saved_fg_console = internal global i32 0, align 4, !dbg !4597
@last_console = dso_local global i32 0, align 4, !dbg !4595
@saved_last_console = internal global i32 0, align 4, !dbg !4599
@saved_want_console = internal global i32 0, align 4, !dbg !4601
@saved_vc_mode = internal global i32 0, align 4, !dbg !4603
@saved_console_blanked = internal global i32 0, align 4, !dbg !4605
@con_driver_unregister_work = internal global %struct.work_struct { %struct.atomic64_t { i64 68719476704 }, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.work_struct* @con_driver_unregister_work to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.work_struct* @con_driver_unregister_work to i8*), i64 8) to %struct.list_head*) }, void (%struct.work_struct*)* @con_driver_unregister_callback }, align 8, !dbg !4797
@__UNIQUE_ID___addressable_vtconsole_class_init287 = internal global i8* bitcast (i32 ()* @vtconsole_class_init to i8*), section ".discard.addressable", align 8, !dbg !4553
@blank_state = internal global i32 0, align 4, !dbg !4609
@vesa_blank_mode = internal global i32 0, align 4, !dbg !4587
@console_timer = internal global %struct.timer_list { %struct.hlist_node { %struct.hlist_node* inttoptr (i64 -2401263026318605568 to %struct.hlist_node*), %struct.hlist_node** null }, i64 0, void (%struct.timer_list*)* @blank_screen_t, i32 0 }, align 8, !dbg !4817
@blank_timer_expired = internal global i32 0, align 4, !dbg !4611
@vesa_off_interval = internal global i32 0, align 4, !dbg !4589
@console_blank_hook = dso_local global i32 (i32)* null, align 8, !dbg !4607
@jiffies = external dso_local global i64, align 8
@.str.9 = private unnamed_addr constant [43 x i8] c"\014unblank_screen: tty %d not allocated ??\0A\00", align 1
@softcursor_original = internal global i32 -1, align 4, !dbg !4819
@do_poke_blanked_console = dso_local global i32 0, align 4, !dbg !4583
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@scrollback_delta = internal global i32 0, align 4, !dbg !4658
@keyboard_tasklet = external dso_local global %struct.tasklet_struct, align 8
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.10 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@master_display_fg = internal global %struct.vc_data* null, align 8, !dbg !4662
@param_ops_byte = external dso_local constant %struct.kernel_param_ops, align 8
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@vc_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4694
@.str.11 = private unnamed_addr constant [16 x i8] c"&vc->paste_wait\00", align 1
@dummy_con = external dso_local constant %struct.consw, align 8
@.str.12 = private unnamed_addr constant [24 x i8] c"\016Console: %s %s %dx%d\0A\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"colour\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"mono\00", align 1
@printable = internal global i32 0, align 4, !dbg !4699
@vt_console_driver = internal global %struct.console { [16 x i8] c"tty\00\00\00\00\00\00\00\00\00\00\00\00\00", void (%struct.console*, i8*, i32)* @vt_console_print, i32 (%struct.console*, i8*, i32)* null, %struct.tty_driver* (%struct.console*, i32*)* @vt_console_device, void ()* @unblank_screen, i32 (%struct.console*, i8*)* null, i32 (%struct.console*)* null, i32 (%struct.console*, i8*, i32, i8*)* null, i16 1, i16 -1, i32 0, i8* null, %struct.console* null }, align 8, !dbg !4701
@vt_console_print.printing_lock = internal global %struct.spinlock undef, align 1, !dbg !4738
@vt_dev_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([2 x %struct.attribute*], [2 x %struct.attribute*]* @vt_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4744
@vt_dev_attrs = internal global [2 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_active, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4746
@dev_attr_active = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_tty_active, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4749
@.str.15 = private unnamed_addr constant [7 x i8] c"tty%d\0A\00", align 1
@__const.do_con_write.draw = private unnamed_addr constant %struct.vc_draw_region { i64 0, i64 0, i32 -1 }, align 8
@.str.16 = private unnamed_addr constant [35 x i8] c"\013vt: argh, driver_data is NULL !\0A\00", align 1
@do_con_write.__print_once = internal global i8 0, section ".data.once", align 1, !dbg !4765
@.str.17 = private unnamed_addr constant [35 x i8] c"\014con_write: tty %d not allocated\0A\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@vc_translate_unicode.utf8_length_changes = internal constant [6 x i32] [i32 127, i32 2047, i32 65535, i32 2097151, i32 67108863, i32 2147483647], align 16, !dbg !4768
@vc_is_control.CTRL_ACTION = internal constant i32 218169217, align 4, !dbg !4775
@vc_is_control.CTRL_ALWAYS = internal constant i32 134280449, align 4, !dbg !4780
@_ctype = external dso_local constant [0 x i8], align 1
@respond_ID.vt102_id = internal constant [6 x i8] c"\1B[?6c\00", align 1, !dbg !4782
@status_report.teminal_ok = internal constant [5 x i8] c"\1B[0n\00", align 1, !dbg !4786
@.str.18 = private unnamed_addr constant [9 x i8] c"\1B[%d;%dR\00", align 1
@is_double_width.double_width = internal constant [12 x %struct.interval] [%struct.interval { i32 4352, i32 4447 }, %struct.interval { i32 9001, i32 9002 }, %struct.interval { i32 11904, i32 12350 }, %struct.interval { i32 12352, i32 42191 }, %struct.interval { i32 44032, i32 55203 }, %struct.interval { i32 63744, i32 64255 }, %struct.interval { i32 65040, i32 65049 }, %struct.interval { i32 65072, i32 65135 }, %struct.interval { i32 65280, i32 65376 }, %struct.interval { i32 65504, i32 65510 }, %struct.interval { i32 131072, i32 196605 }, %struct.interval { i32 196608, i32 262141 }], align 16, !dbg !4790
@.str.19 = private unnamed_addr constant [22 x i8] c"\016Console: switching \00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"\01cconsoles %d-%d \00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"\01cto %s %s %dx%d\0A\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"\01cto %s\0A\00", align 1
@vtconsole_class = internal global %struct.class* null, align 8, !dbg !4799
@con_dev_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @con_dev_group, %struct.attribute_group* null], align 16, !dbg !4801
@.str.23 = private unnamed_addr constant [8 x i8] c"vtcon%i\00", align 1
@.str.24 = private unnamed_addr constant [47 x i8] c"\014Unable to create device for %s; errno = %ld\0A\00", align 1
@con_dev_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([3 x %struct.attribute*], [3 x %struct.attribute*]* @con_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4803
@con_dev_attrs = internal global [3 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_bind, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_name, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4805
@dev_attr_bind = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_bind, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_bind }, align 8, !dbg !4808
@dev_attr_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_name, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4810
@.str.25 = private unnamed_addr constant [5 x i8] c"bind\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"%i\0A\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"(M)\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"(S)\00", align 1
@vtconsole_class_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4812
@.str.31 = private unnamed_addr constant [10 x i8] c"vtconsole\00", align 1
@.str.32 = private unnamed_addr constant [50 x i8] c"\014Unable to create vt console class; errno = %ld\0A\00", align 1
@.str.33 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.34 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@llvm.used = appending global [21 x i8*] [i8* bitcast (%struct.kernel_param* @__param_default_utf8 to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_default_utf8type229, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_global_cursor_default to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_global_cursor_defaulttype230, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_cur_default to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_cur_defaulttype231, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_consoleblank to i8*), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_default_red to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_default_redtype252, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_default_grn to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_default_grntype253, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_default_blu to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_default_blutype254, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_color to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_colortype268, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_italic to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_italictype269, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_underline to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_underlinetype270, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_con_init271 to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_vtconsole_class_init287 to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @register_vt_notifier(%struct.notifier_block* %nb) #0 !dbg !4827 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !4830, metadata !DIExpression()), !dbg !4831
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !4832
  %call = call i32 @atomic_notifier_chain_register(%struct.atomic_notifier_head* @vt_notifier_list, %struct.notifier_block* %0) #13, !dbg !4833
  ret i32 %call, !dbg !4834
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local i32 @atomic_notifier_chain_register(%struct.atomic_notifier_head*, %struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @unregister_vt_notifier(%struct.notifier_block* %nb) #0 !dbg !4835 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !4836, metadata !DIExpression()), !dbg !4837
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !4838
  %call = call i32 @atomic_notifier_chain_unregister(%struct.atomic_notifier_head* @vt_notifier_list, %struct.notifier_block* %0) #13, !dbg !4839
  ret i32 %call, !dbg !4840
}

; Function Attrs: noredzone
declare dso_local i32 @atomic_notifier_chain_unregister(%struct.atomic_notifier_head*, %struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @schedule_console_callback() #0 !dbg !4841 {
entry:
  %call = call zeroext i1 @schedule_work(%struct.work_struct* @console_work) #13, !dbg !4842
  ret void, !dbg !4843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #0 !dbg !4844 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !4847, metadata !DIExpression()), !dbg !4848
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !4849
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !4850
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #13, !dbg !4851
  ret i1 %call, !dbg !4852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vc_uniscr_check(%struct.vc_data* %vc) #0 !dbg !4853 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !4861
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !4875
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !4878
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !4880
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %uniscr = alloca %struct.uni_screen*, align 8
  %p = alloca i16*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %mask = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %line = alloca i32*, align 8
  %glyph = alloca i16, align 2
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !4881, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !4883, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.declare(metadata i16** %p, metadata !4885, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4887, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4889, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !4891, metadata !DIExpression()), !dbg !4892
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4893, metadata !DIExpression()), !dbg !4894
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4895
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !4895
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4896
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !4897
  %conv.i.i = trunc i64 %3 to i32, !dbg !4897
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !4898
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4899
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !4899
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !4899
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4900
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !4901
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !4901
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !4901
  %tobool = icmp ne i32 %8, 0, !dbg !4894
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !4894

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !4894
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4894
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !4894

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !4894
  %tobool3 = icmp ne i32 %9, 0, !dbg !4894
  %lnot = xor i1 %tobool3, true, !dbg !4894
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !4902
  %lnot4 = xor i1 %10, true, !dbg !4894
  %lnot5 = xor i1 %lnot4, true, !dbg !4894
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !4894
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !4894
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !4903
  %tobool6 = icmp ne i32 %11, 0, !dbg !4903
  %lnot7 = xor i1 %tobool6, true, !dbg !4903
  %lnot9 = xor i1 %lnot7, true, !dbg !4903
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !4903
  %conv = sext i32 %lnot.ext10 to i64, !dbg !4903
  %tobool11 = icmp ne i64 %conv, 0, !dbg !4903
  br i1 %tobool11, label %if.then, label %if.end, !dbg !4894

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !4903

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !4905

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !4907

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !4905

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 510, i32 2305, i64 12) #5, !dbg !4909, !srcloc !4911
  br label %do.end14, !dbg !4909

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 232) #5, !dbg !4912, !srcloc !4914
  br label %do.body15, !dbg !4905

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !4915

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !4905

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !4905

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !4894
  %tobool18 = icmp ne i32 %12, 0, !dbg !4894
  %lnot19 = xor i1 %tobool18, true, !dbg !4894
  %lnot21 = xor i1 %lnot19, true, !dbg !4894
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !4894
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !4894
  store i64 %conv23, i64* %tmp, align 8, !dbg !4903
  %13 = load i64, i64* %tmp, align 8, !dbg !4894
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !4917
  %vc_utf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 36, !dbg !4919
  %bf.load = load i16, i16* %vc_utf, align 8, !dbg !4919
  %bf.lshr = lshr i16 %bf.load, 14, !dbg !4919
  %bf.clear = and i16 %bf.lshr, 1, !dbg !4919
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !4919
  %tobool24 = icmp ne i8 %bf.cast, 0, !dbg !4917
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !4920

if.then25:                                        ; preds = %if.end
  store i32 -61, i32* %retval, align 4, !dbg !4921
  br label %return, !dbg !4921

if.end26:                                         ; preds = %if.end
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !4922
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 49, !dbg !4924
  %16 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !4924
  %tobool27 = icmp ne %struct.uni_screen* %16, null, !dbg !4922
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !4925

if.then28:                                        ; preds = %if.end26
  store i32 0, i32* %retval, align 4, !dbg !4926
  br label %return, !dbg !4926

if.end29:                                         ; preds = %if.end26
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !4927
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 4, !dbg !4928
  %18 = load i32, i32* %vc_cols, align 4, !dbg !4928
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !4929
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 5, !dbg !4930
  %20 = load i32, i32* %vc_rows, align 8, !dbg !4930
  %call30 = call %struct.uni_screen* @vc_uniscr_alloc(i32 %18, i32 %20) #13, !dbg !4931
  store %struct.uni_screen* %call30, %struct.uni_screen** %uniscr, align 8, !dbg !4932
  %21 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !4933
  %tobool31 = icmp ne %struct.uni_screen* %21, null, !dbg !4933
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !4935

if.then32:                                        ; preds = %if.end29
  store i32 -12, i32* %retval, align 4, !dbg !4936
  br label %return, !dbg !4936

if.end33:                                         ; preds = %if.end29
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !4937
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 8, !dbg !4938
  %23 = load i64, i64* %vc_origin, align 8, !dbg !4938
  %24 = inttoptr i64 %23 to i16*, !dbg !4939
  store i16* %24, i16** %p, align 8, !dbg !4940
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !4941
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 26, !dbg !4942
  %26 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !4942
  %conv34 = zext i16 %26 to i32, !dbg !4941
  %or = or i32 %conv34, 255, !dbg !4943
  store i32 %or, i32* %mask, align 4, !dbg !4944
  store i32 0, i32* %y, align 4, !dbg !4945
  br label %for.cond, !dbg !4947

for.cond:                                         ; preds = %for.inc49, %if.end33
  %27 = load i32, i32* %y, align 4, !dbg !4948
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !4950
  %vc_rows35 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 5, !dbg !4951
  %29 = load i32, i32* %vc_rows35, align 8, !dbg !4951
  %cmp = icmp ult i32 %27, %29, !dbg !4952
  br i1 %cmp, label %for.body, label %for.end51, !dbg !4953

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32** %line, metadata !4954, metadata !DIExpression()), !dbg !4956
  %30 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !4957
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %30, i32 0, i32 0, !dbg !4958
  %31 = load i32, i32* %y, align 4, !dbg !4959
  %idxprom = sext i32 %31 to i64, !dbg !4957
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines, i64 0, i64 %idxprom, !dbg !4957
  %32 = load i32*, i32** %arrayidx, align 8, !dbg !4957
  store i32* %32, i32** %line, align 8, !dbg !4956
  store i32 0, i32* %x, align 4, !dbg !4960
  br label %for.cond37, !dbg !4962

for.cond37:                                       ; preds = %for.inc, %for.body
  %33 = load i32, i32* %x, align 4, !dbg !4963
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !4965
  %vc_cols38 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %34, i32 0, i32 4, !dbg !4966
  %35 = load i32, i32* %vc_cols38, align 4, !dbg !4966
  %cmp39 = icmp ult i32 %33, %35, !dbg !4967
  br i1 %cmp39, label %for.body41, label %for.end, !dbg !4968

for.body41:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata i16* %glyph, metadata !4969, metadata !DIExpression()), !dbg !4971
  %36 = load i16*, i16** %p, align 8, !dbg !4972
  %incdec.ptr = getelementptr i16, i16* %36, i32 1, !dbg !4972
  store i16* %incdec.ptr, i16** %p, align 8, !dbg !4972
  %37 = load i16, i16* %36, align 2, !dbg !4972
  %conv42 = zext i16 %37 to i32, !dbg !4972
  %38 = load i32, i32* %mask, align 4, !dbg !4973
  %and = and i32 %conv42, %38, !dbg !4974
  %conv43 = trunc i32 %and to i16, !dbg !4972
  store i16 %conv43, i16* %glyph, align 2, !dbg !4971
  %39 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !4975
  %40 = load i16, i16* %glyph, align 2, !dbg !4976
  %conv44 = zext i16 %40 to i32, !dbg !4976
  %call45 = call zeroext i16 @inverse_translate(%struct.vc_data* %39, i32 %conv44, i32 1) #13, !dbg !4977
  %conv46 = zext i16 %call45 to i32, !dbg !4977
  %41 = load i32*, i32** %line, align 8, !dbg !4978
  %42 = load i32, i32* %x, align 4, !dbg !4979
  %idxprom47 = sext i32 %42 to i64, !dbg !4978
  %arrayidx48 = getelementptr i32, i32* %41, i64 %idxprom47, !dbg !4978
  store i32 %conv46, i32* %arrayidx48, align 4, !dbg !4980
  br label %for.inc, !dbg !4981

for.inc:                                          ; preds = %for.body41
  %43 = load i32, i32* %x, align 4, !dbg !4982
  %inc = add i32 %43, 1, !dbg !4982
  store i32 %inc, i32* %x, align 4, !dbg !4982
  br label %for.cond37, !dbg !4983, !llvm.loop !4984

for.end:                                          ; preds = %for.cond37
  br label %for.inc49, !dbg !4986

for.inc49:                                        ; preds = %for.end
  %44 = load i32, i32* %y, align 4, !dbg !4987
  %inc50 = add i32 %44, 1, !dbg !4987
  store i32 %inc50, i32* %y, align 4, !dbg !4987
  br label %for.cond, !dbg !4988, !llvm.loop !4989

for.end51:                                        ; preds = %for.cond
  %45 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !4991
  %46 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !4992
  %vc_uni_screen52 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %46, i32 0, i32 49, !dbg !4993
  store %struct.uni_screen* %45, %struct.uni_screen** %vc_uni_screen52, align 8, !dbg !4994
  store i32 0, i32* %retval, align 4, !dbg !4995
  br label %return, !dbg !4995

return:                                           ; preds = %for.end51, %if.then32, %if.then28, %if.then25
  %47 = load i32, i32* %retval, align 4, !dbg !4996
  ret i32 %47, !dbg !4996
}

; Function Attrs: noredzone
declare dso_local i32 @is_console_locked() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.uni_screen* @vc_uniscr_alloc(i32 %cols, i32 %rows) #0 !dbg !4997 {
entry:
  %retval = alloca %struct.uni_screen*, align 8
  %cols.addr = alloca i32, align 4
  %rows.addr = alloca i32, align 4
  %uniscr = alloca %struct.uni_screen*, align 8
  %p = alloca i8*, align 8
  %memsize = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %cols, i32* %cols.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cols.addr, metadata !5000, metadata !DIExpression()), !dbg !5001
  store i32 %rows, i32* %rows.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rows.addr, metadata !5002, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !5004, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5006, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.declare(metadata i32* %memsize, metadata !5008, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5010, metadata !DIExpression()), !dbg !5011
  %0 = load i32, i32* %cols.addr, align 4, !dbg !5012
  %1 = load i32, i32* %rows.addr, align 4, !dbg !5013
  %mul = mul i32 %0, %1, !dbg !5014
  %conv = zext i32 %mul to i64, !dbg !5012
  %mul1 = mul i64 %conv, 4, !dbg !5015
  %conv2 = trunc i64 %mul1 to i32, !dbg !5012
  store i32 %conv2, i32* %memsize, align 4, !dbg !5016
  %2 = load i32, i32* %rows.addr, align 4, !dbg !5017
  %conv3 = zext i32 %2 to i64, !dbg !5017
  %mul4 = mul i64 %conv3, 8, !dbg !5018
  %3 = load i32, i32* %memsize, align 4, !dbg !5019
  %conv5 = zext i32 %3 to i64, !dbg !5019
  %add = add i64 %conv5, %mul4, !dbg !5019
  %conv6 = trunc i64 %add to i32, !dbg !5019
  store i32 %conv6, i32* %memsize, align 4, !dbg !5019
  %4 = load i32, i32* %memsize, align 4, !dbg !5020
  %conv7 = zext i32 %4 to i64, !dbg !5020
  %call = call i8* @vmalloc(i64 %conv7) #13, !dbg !5021
  store i8* %call, i8** %p, align 8, !dbg !5022
  %5 = load i8*, i8** %p, align 8, !dbg !5023
  %tobool = icmp ne i8* %5, null, !dbg !5023
  br i1 %tobool, label %if.end, label %if.then, !dbg !5025

if.then:                                          ; preds = %entry
  store %struct.uni_screen* null, %struct.uni_screen** %retval, align 8, !dbg !5026
  br label %return, !dbg !5026

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %p, align 8, !dbg !5027
  %7 = bitcast i8* %6 to %struct.uni_screen*, !dbg !5027
  store %struct.uni_screen* %7, %struct.uni_screen** %uniscr, align 8, !dbg !5028
  %8 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !5029
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %8, i32 0, i32 0, !dbg !5030
  %arraydecay = getelementptr inbounds [0 x i32*], [0 x i32*]* %lines, i64 0, i64 0, !dbg !5029
  %9 = load i32, i32* %rows.addr, align 4, !dbg !5031
  %idx.ext = zext i32 %9 to i64, !dbg !5032
  %add.ptr = getelementptr i32*, i32** %arraydecay, i64 %idx.ext, !dbg !5032
  %10 = bitcast i32** %add.ptr to i8*, !dbg !5029
  store i8* %10, i8** %p, align 8, !dbg !5033
  store i32 0, i32* %i, align 4, !dbg !5034
  br label %for.cond, !dbg !5036

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !5037
  %12 = load i32, i32* %rows.addr, align 4, !dbg !5039
  %cmp = icmp ult i32 %11, %12, !dbg !5040
  br i1 %cmp, label %for.body, label %for.end, !dbg !5041

for.body:                                         ; preds = %for.cond
  %13 = load i8*, i8** %p, align 8, !dbg !5042
  %14 = bitcast i8* %13 to i32*, !dbg !5042
  %15 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !5044
  %lines9 = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %15, i32 0, i32 0, !dbg !5045
  %16 = load i32, i32* %i, align 4, !dbg !5046
  %idxprom = zext i32 %16 to i64, !dbg !5044
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines9, i64 0, i64 %idxprom, !dbg !5044
  store i32* %14, i32** %arrayidx, align 8, !dbg !5047
  %17 = load i32, i32* %cols.addr, align 4, !dbg !5048
  %conv10 = zext i32 %17 to i64, !dbg !5048
  %mul11 = mul i64 %conv10, 4, !dbg !5049
  %18 = load i8*, i8** %p, align 8, !dbg !5050
  %add.ptr12 = getelementptr i8, i8* %18, i64 %mul11, !dbg !5050
  store i8* %add.ptr12, i8** %p, align 8, !dbg !5050
  br label %for.inc, !dbg !5051

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !5052
  %inc = add i32 %19, 1, !dbg !5052
  store i32 %inc, i32* %i, align 4, !dbg !5052
  br label %for.cond, !dbg !5053, !llvm.loop !5054

for.end:                                          ; preds = %for.cond
  %20 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !5056
  store %struct.uni_screen* %20, %struct.uni_screen** %retval, align 8, !dbg !5057
  br label %return, !dbg !5057

return:                                           ; preds = %for.end, %if.then
  %21 = load %struct.uni_screen*, %struct.uni_screen** %retval, align 8, !dbg !5058
  ret %struct.uni_screen* %21, !dbg !5058
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @inverse_translate(%struct.vc_data*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vc_uniscr_copy_line(%struct.vc_data* %vc, i8* %dest, i1 zeroext %viewed, i32 %row, i32 %col, i32 %nr) #0 !dbg !5059 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %dest.addr = alloca i8*, align 8
  %viewed.addr = alloca i8, align 1
  %row.addr = alloca i32, align 4
  %col.addr = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %uniscr = alloca %struct.uni_screen*, align 8
  %offset = alloca i32, align 4
  %pos = alloca i64, align 8
  %p = alloca i16*, align 8
  %mask = alloca i32, align 4
  %uni_buf = alloca i32*, align 8
  %glyph = alloca i16, align 2
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5062, metadata !DIExpression()), !dbg !5063
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !5064, metadata !DIExpression()), !dbg !5065
  %frombool = zext i1 %viewed to i8
  store i8 %frombool, i8* %viewed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %viewed.addr, metadata !5066, metadata !DIExpression()), !dbg !5067
  store i32 %row, i32* %row.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %row.addr, metadata !5068, metadata !DIExpression()), !dbg !5069
  store i32 %col, i32* %col.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %col.addr, metadata !5070, metadata !DIExpression()), !dbg !5071
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !5072, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !5074, metadata !DIExpression()), !dbg !5075
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5076
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 49, !dbg !5076
  %1 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !5076
  store %struct.uni_screen* %1, %struct.uni_screen** %uniscr, align 8, !dbg !5075
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5077, metadata !DIExpression()), !dbg !5078
  %2 = load i32, i32* %row.addr, align 4, !dbg !5079
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5080
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 6, !dbg !5081
  %4 = load i32, i32* %vc_size_row, align 4, !dbg !5081
  %mul = mul i32 %2, %4, !dbg !5082
  %5 = load i32, i32* %col.addr, align 4, !dbg !5083
  %mul1 = mul i32 %5, 2, !dbg !5084
  %add = add i32 %mul, %mul1, !dbg !5085
  store i32 %add, i32* %offset, align 4, !dbg !5078
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !5086, metadata !DIExpression()), !dbg !5087
  br label %do.body, !dbg !5088

do.body:                                          ; preds = %entry
  %6 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !5089
  %tobool = icmp ne %struct.uni_screen* %6, null, !dbg !5089
  %lnot = xor i1 %tobool, true, !dbg !5089
  %lnot2 = xor i1 %lnot, true, !dbg !5089
  %lnot3 = xor i1 %lnot2, true, !dbg !5089
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5089
  %conv = sext i32 %lnot.ext to i64, !dbg !5089
  %tobool4 = icmp ne i64 %conv, 0, !dbg !5089
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5092

if.then:                                          ; preds = %do.body
  br label %do.body5, !dbg !5089

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !5093

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !5095

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !5093

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 554, i32 0, i64 12) #5, !dbg !5097, !srcloc !5099
  br label %do.end8, !dbg !5097

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !5093

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 233) #5, !dbg !5100, !srcloc !5103
  unreachable, !dbg !5104

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !5093

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !5093

if.end:                                           ; preds = %do.end11, %do.body
  br label %do.end12, !dbg !5092

do.end12:                                         ; preds = %if.end
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5105
  %8 = load i32, i32* %offset, align 4, !dbg !5106
  %9 = load i8, i8* %viewed.addr, align 1, !dbg !5107
  %tobool13 = trunc i8 %9 to i1, !dbg !5107
  %call = call i16* @screenpos(%struct.vc_data* %7, i32 %8, i1 zeroext %tobool13) #13, !dbg !5108
  %10 = ptrtoint i16* %call to i64, !dbg !5109
  store i64 %10, i64* %pos, align 8, !dbg !5110
  %11 = load i64, i64* %pos, align 8, !dbg !5111
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5113
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 8, !dbg !5114
  %13 = load i64, i64* %vc_origin, align 8, !dbg !5114
  %cmp = icmp uge i64 %11, %13, !dbg !5115
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5116

land.lhs.true:                                    ; preds = %do.end12
  %14 = load i64, i64* %pos, align 8, !dbg !5117
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5118
  %vc_scr_end = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 9, !dbg !5119
  %16 = load i64, i64* %vc_scr_end, align 8, !dbg !5119
  %cmp15 = icmp ult i64 %14, %16, !dbg !5120
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !5121

if.then17:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %pos, align 8, !dbg !5122
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5124
  %vc_origin18 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 8, !dbg !5125
  %19 = load i64, i64* %vc_origin18, align 8, !dbg !5125
  %sub = sub i64 %17, %19, !dbg !5126
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5127
  %vc_size_row19 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 6, !dbg !5128
  %21 = load i32, i32* %vc_size_row19, align 4, !dbg !5128
  %conv20 = zext i32 %21 to i64, !dbg !5127
  %div = udiv i64 %sub, %conv20, !dbg !5129
  %conv21 = trunc i64 %div to i32, !dbg !5130
  store i32 %conv21, i32* %row.addr, align 4, !dbg !5131
  %22 = load i64, i64* %pos, align 8, !dbg !5132
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5133
  %vc_origin22 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 8, !dbg !5134
  %24 = load i64, i64* %vc_origin22, align 8, !dbg !5134
  %sub23 = sub i64 %22, %24, !dbg !5135
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5136
  %vc_size_row24 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 6, !dbg !5137
  %26 = load i32, i32* %vc_size_row24, align 4, !dbg !5137
  %conv25 = zext i32 %26 to i64, !dbg !5136
  %rem = urem i64 %sub23, %conv25, !dbg !5138
  %div26 = udiv i64 %rem, 2, !dbg !5139
  %conv27 = trunc i64 %div26 to i32, !dbg !5140
  store i32 %conv27, i32* %col.addr, align 4, !dbg !5141
  %27 = load i8*, i8** %dest.addr, align 8, !dbg !5142
  %28 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !5143
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %28, i32 0, i32 0, !dbg !5144
  %29 = load i32, i32* %row.addr, align 4, !dbg !5145
  %idxprom = zext i32 %29 to i64, !dbg !5143
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines, i64 0, i64 %idxprom, !dbg !5143
  %30 = load i32*, i32** %arrayidx, align 8, !dbg !5143
  %31 = load i32, i32* %col.addr, align 4, !dbg !5146
  %idxprom28 = zext i32 %31 to i64, !dbg !5143
  %arrayidx29 = getelementptr i32, i32* %30, i64 %idxprom28, !dbg !5143
  %32 = bitcast i32* %arrayidx29 to i8*, !dbg !5147
  %33 = load i32, i32* %nr.addr, align 4, !dbg !5148
  %conv30 = zext i32 %33 to i64, !dbg !5148
  %mul31 = mul i64 %conv30, 4, !dbg !5149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 4 %32, i64 %mul31, i1 false), !dbg !5147
  br label %if.end40, !dbg !5150

if.else:                                          ; preds = %land.lhs.true, %do.end12
  call void @llvm.dbg.declare(metadata i16** %p, metadata !5151, metadata !DIExpression()), !dbg !5153
  %34 = load i64, i64* %pos, align 8, !dbg !5154
  %35 = inttoptr i64 %34 to i16*, !dbg !5155
  store i16* %35, i16** %p, align 8, !dbg !5153
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !5156, metadata !DIExpression()), !dbg !5157
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5158
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 26, !dbg !5159
  %37 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !5159
  %conv32 = zext i16 %37 to i32, !dbg !5158
  %or = or i32 %conv32, 255, !dbg !5160
  store i32 %or, i32* %mask, align 4, !dbg !5157
  call void @llvm.dbg.declare(metadata i32** %uni_buf, metadata !5161, metadata !DIExpression()), !dbg !5162
  %38 = load i8*, i8** %dest.addr, align 8, !dbg !5163
  %39 = bitcast i8* %38 to i32*, !dbg !5163
  store i32* %39, i32** %uni_buf, align 8, !dbg !5162
  br label %while.cond, !dbg !5164

while.cond:                                       ; preds = %while.body, %if.else
  %40 = load i32, i32* %nr.addr, align 4, !dbg !5165
  %dec = add i32 %40, -1, !dbg !5165
  store i32 %dec, i32* %nr.addr, align 4, !dbg !5165
  %tobool33 = icmp ne i32 %40, 0, !dbg !5164
  br i1 %tobool33, label %while.body, label %while.end, !dbg !5164

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i16* %glyph, metadata !5166, metadata !DIExpression()), !dbg !5168
  %41 = load i16*, i16** %p, align 8, !dbg !5169
  %incdec.ptr = getelementptr i16, i16* %41, i32 1, !dbg !5169
  store i16* %incdec.ptr, i16** %p, align 8, !dbg !5169
  %42 = load i16, i16* %41, align 2, !dbg !5169
  %conv34 = zext i16 %42 to i32, !dbg !5169
  %43 = load i32, i32* %mask, align 4, !dbg !5170
  %and = and i32 %conv34, %43, !dbg !5171
  %conv35 = trunc i32 %and to i16, !dbg !5169
  store i16 %conv35, i16* %glyph, align 2, !dbg !5168
  %44 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5172
  %45 = load i16, i16* %glyph, align 2, !dbg !5173
  %conv36 = zext i16 %45 to i32, !dbg !5173
  %call37 = call zeroext i16 @inverse_translate(%struct.vc_data* %44, i32 %conv36, i32 1) #13, !dbg !5174
  %conv38 = zext i16 %call37 to i32, !dbg !5174
  %46 = load i32*, i32** %uni_buf, align 8, !dbg !5175
  %incdec.ptr39 = getelementptr i32, i32* %46, i32 1, !dbg !5175
  store i32* %incdec.ptr39, i32** %uni_buf, align 8, !dbg !5175
  store i32 %conv38, i32* %46, align 4, !dbg !5176
  br label %while.cond, !dbg !5164, !llvm.loop !5177

while.end:                                        ; preds = %while.cond
  br label %if.end40

if.end40:                                         ; preds = %while.end, %if.then17
  ret void, !dbg !5179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i16* @screenpos(%struct.vc_data* %vc, i32 %offset, i1 zeroext %viewed) #0 !dbg !5180 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %offset.addr = alloca i32, align 4
  %viewed.addr = alloca i8, align 1
  %p = alloca i16*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5183, metadata !DIExpression()), !dbg !5184
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5185, metadata !DIExpression()), !dbg !5186
  %frombool = zext i1 %viewed to i8
  store i8 %frombool, i8* %viewed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %viewed.addr, metadata !5187, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.declare(metadata i16** %p, metadata !5189, metadata !DIExpression()), !dbg !5190
  %0 = load i8, i8* %viewed.addr, align 1, !dbg !5191
  %tobool = trunc i8 %0 to i1, !dbg !5191
  br i1 %tobool, label %if.else, label %if.then, !dbg !5193

if.then:                                          ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5194
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 8, !dbg !5195
  %2 = load i64, i64* %vc_origin, align 8, !dbg !5195
  %3 = load i32, i32* %offset.addr, align 4, !dbg !5196
  %conv = sext i32 %3 to i64, !dbg !5196
  %add = add i64 %2, %conv, !dbg !5197
  %4 = inttoptr i64 %add to i16*, !dbg !5198
  store i16* %4, i16** %p, align 8, !dbg !5199
  br label %if.end8, !dbg !5200

if.else:                                          ; preds = %entry
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5201
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 13, !dbg !5203
  %6 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !5203
  %con_screen_pos = getelementptr inbounds %struct.consw, %struct.consw* %6, i32 0, i32 22, !dbg !5204
  %7 = load i16* (%struct.vc_data*, i32)*, i16* (%struct.vc_data*, i32)** %con_screen_pos, align 8, !dbg !5204
  %tobool1 = icmp ne i16* (%struct.vc_data*, i32)* %7, null, !dbg !5201
  br i1 %tobool1, label %if.else5, label %if.then2, !dbg !5205

if.then2:                                         ; preds = %if.else
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5206
  %vc_visible_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 10, !dbg !5207
  %9 = load i64, i64* %vc_visible_origin, align 8, !dbg !5207
  %10 = load i32, i32* %offset.addr, align 4, !dbg !5208
  %conv3 = sext i32 %10 to i64, !dbg !5208
  %add4 = add i64 %9, %conv3, !dbg !5209
  %11 = inttoptr i64 %add4 to i16*, !dbg !5210
  store i16* %11, i16** %p, align 8, !dbg !5211
  br label %if.end, !dbg !5212

if.else5:                                         ; preds = %if.else
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5213
  %vc_sw6 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 13, !dbg !5214
  %13 = load %struct.consw*, %struct.consw** %vc_sw6, align 8, !dbg !5214
  %con_screen_pos7 = getelementptr inbounds %struct.consw, %struct.consw* %13, i32 0, i32 22, !dbg !5215
  %14 = load i16* (%struct.vc_data*, i32)*, i16* (%struct.vc_data*, i32)** %con_screen_pos7, align 8, !dbg !5215
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5216
  %16 = load i32, i32* %offset.addr, align 4, !dbg !5217
  %call = call i16* %14(%struct.vc_data* %15, i32 %16) #13, !dbg !5213
  store i16* %call, i16** %p, align 8, !dbg !5218
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then2
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %17 = load i16*, i16** %p, align 8, !dbg !5219
  ret i16* %17, !dbg !5220
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @update_region(%struct.vc_data* %vc, i64 %start, i32 %count) #0 !dbg !5221 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !5224
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !5228
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !5230
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !5231
  %vc.addr = alloca %struct.vc_data*, align 8
  %start.addr = alloca i64, align 8
  %count.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5232, metadata !DIExpression()), !dbg !5233
  store i64 %start, i64* %start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !5234, metadata !DIExpression()), !dbg !5235
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5236, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5238, metadata !DIExpression()), !dbg !5239
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5240
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !5240
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5241
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !5242
  %conv.i.i = trunc i64 %3 to i32, !dbg !5242
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !5243
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5244
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !5244
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !5244
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5245
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5246
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !5246
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !5246
  %tobool = icmp ne i32 %8, 0, !dbg !5239
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !5239

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !5239
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5239
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !5239

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !5239
  %tobool3 = icmp ne i32 %9, 0, !dbg !5239
  %lnot = xor i1 %tobool3, true, !dbg !5239
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5247
  %lnot4 = xor i1 %10, true, !dbg !5239
  %lnot5 = xor i1 %lnot4, true, !dbg !5239
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !5239
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5239
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !5248
  %tobool6 = icmp ne i32 %11, 0, !dbg !5248
  %lnot7 = xor i1 %tobool6, true, !dbg !5248
  %lnot9 = xor i1 %lnot7, true, !dbg !5248
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5248
  %conv = sext i32 %lnot.ext10 to i64, !dbg !5248
  %tobool11 = icmp ne i64 %conv, 0, !dbg !5248
  br i1 %tobool11, label %if.then, label %if.end, !dbg !5239

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !5248

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !5250

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !5252

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !5250

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 690, i32 2305, i64 12) #5, !dbg !5254, !srcloc !5256
  br label %do.end14, !dbg !5254

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 235) #5, !dbg !5257, !srcloc !5259
  br label %do.body15, !dbg !5250

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !5260

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !5250

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !5250

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !5239
  %tobool18 = icmp ne i32 %12, 0, !dbg !5239
  %lnot19 = xor i1 %tobool18, true, !dbg !5239
  %lnot21 = xor i1 %lnot19, true, !dbg !5239
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !5239
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !5239
  store i64 %conv23, i64* %tmp, align 8, !dbg !5248
  %13 = load i64, i64* %tmp, align 8, !dbg !5239
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5262
  %call24 = call zeroext i1 @con_should_update(%struct.vc_data* %14) #13, !dbg !5264
  br i1 %call24, label %if.then25, label %if.end26, !dbg !5265

if.then25:                                        ; preds = %if.end
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5266
  call void @hide_cursor(%struct.vc_data* %15) #13, !dbg !5268
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5269
  %17 = load i64, i64* %start.addr, align 8, !dbg !5270
  %18 = load i32, i32* %count.addr, align 4, !dbg !5271
  call void @do_update_region(%struct.vc_data* %16, i64 %17, i32 %18) #13, !dbg !5272
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5273
  call void @set_cursor(%struct.vc_data* %19) #13, !dbg !5274
  br label %if.end26, !dbg !5275

if.end26:                                         ; preds = %if.then25, %if.end
  ret void, !dbg !5276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @con_should_update(%struct.vc_data* %vc) #0 !dbg !5277 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5280, metadata !DIExpression()), !dbg !5281
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5282
  %call = call zeroext i1 @con_is_visible(%struct.vc_data* %0) #13, !dbg !5283
  br i1 %call, label %land.rhs, label %land.end, !dbg !5284

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* @console_blanked, align 4, !dbg !5285
  %tobool = icmp ne i32 %1, 0, !dbg !5286
  %lnot = xor i1 %tobool, true, !dbg !5286
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5287
  ret i1 %2, !dbg !5288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hide_cursor(%struct.vc_data* %vc) #0 !dbg !5289 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5290, metadata !DIExpression()), !dbg !5291
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5292
  %call = call zeroext i1 @vc_is_sel(%struct.vc_data* %0) #13, !dbg !5294
  br i1 %call, label %if.then, label %if.end, !dbg !5295

if.then:                                          ; preds = %entry
  call void @clear_selection() #13, !dbg !5296
  br label %if.end, !dbg !5296

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5297
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 13, !dbg !5298
  %2 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !5298
  %con_cursor = getelementptr inbounds %struct.consw, %struct.consw* %2, i32 0, i32 7, !dbg !5299
  %3 = load void (%struct.vc_data*, i32)*, void (%struct.vc_data*, i32)** %con_cursor, align 8, !dbg !5299
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5300
  call void %3(%struct.vc_data* %4, i32 2) #13, !dbg !5297
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5301
  call void @hide_softcursor(%struct.vc_data* %5) #13, !dbg !5302
  ret void, !dbg !5303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_update_region(%struct.vc_data* %vc, i64 %start, i32 %count) #0 !dbg !5304 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %start.addr = alloca i64, align 8
  %count.addr = alloca i32, align 4
  %xx = alloca i32, align 4
  %yy = alloca i32, align 4
  %offset = alloca i32, align 4
  %p = alloca i16*, align 8
  %nxx = alloca i32, align 4
  %nyy = alloca i32, align 4
  %attrib = alloca i16, align 2
  %startx = alloca i32, align 4
  %q = alloca i16*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5305, metadata !DIExpression()), !dbg !5306
  store i64 %start, i64* %start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !5307, metadata !DIExpression()), !dbg !5308
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5309, metadata !DIExpression()), !dbg !5310
  call void @llvm.dbg.declare(metadata i32* %xx, metadata !5311, metadata !DIExpression()), !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %yy, metadata !5313, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5315, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.declare(metadata i16** %p, metadata !5317, metadata !DIExpression()), !dbg !5318
  %0 = load i64, i64* %start.addr, align 8, !dbg !5319
  %1 = inttoptr i64 %0 to i16*, !dbg !5320
  store i16* %1, i16** %p, align 8, !dbg !5321
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5322
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 13, !dbg !5324
  %3 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !5324
  %con_getxy = getelementptr inbounds %struct.consw, %struct.consw* %3, i32 0, i32 23, !dbg !5325
  %4 = load i64 (%struct.vc_data*, i64, i32*, i32*)*, i64 (%struct.vc_data*, i64, i32*, i32*)** %con_getxy, align 8, !dbg !5325
  %tobool = icmp ne i64 (%struct.vc_data*, i64, i32*, i32*)* %4, null, !dbg !5322
  br i1 %tobool, label %if.else, label %if.then, !dbg !5326

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %start.addr, align 8, !dbg !5327
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5329
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 8, !dbg !5330
  %7 = load i64, i64* %vc_origin, align 8, !dbg !5330
  %sub = sub i64 %5, %7, !dbg !5331
  %div = udiv i64 %sub, 2, !dbg !5332
  %conv = trunc i64 %div to i32, !dbg !5333
  store i32 %conv, i32* %offset, align 4, !dbg !5334
  %8 = load i32, i32* %offset, align 4, !dbg !5335
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5336
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 4, !dbg !5337
  %10 = load i32, i32* %vc_cols, align 4, !dbg !5337
  %rem = urem i32 %8, %10, !dbg !5338
  store i32 %rem, i32* %xx, align 4, !dbg !5339
  %11 = load i32, i32* %offset, align 4, !dbg !5340
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5341
  %vc_cols1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 4, !dbg !5342
  %13 = load i32, i32* %vc_cols1, align 4, !dbg !5342
  %div2 = udiv i32 %11, %13, !dbg !5343
  store i32 %div2, i32* %yy, align 4, !dbg !5344
  br label %if.end, !dbg !5345

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %nxx, metadata !5346, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.declare(metadata i32* %nyy, metadata !5349, metadata !DIExpression()), !dbg !5350
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5351
  %vc_sw3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 13, !dbg !5352
  %15 = load %struct.consw*, %struct.consw** %vc_sw3, align 8, !dbg !5352
  %con_getxy4 = getelementptr inbounds %struct.consw, %struct.consw* %15, i32 0, i32 23, !dbg !5353
  %16 = load i64 (%struct.vc_data*, i64, i32*, i32*)*, i64 (%struct.vc_data*, i64, i32*, i32*)** %con_getxy4, align 8, !dbg !5353
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5354
  %18 = load i64, i64* %start.addr, align 8, !dbg !5355
  %call = call i64 %16(%struct.vc_data* %17, i64 %18, i32* %nxx, i32* %nyy) #13, !dbg !5351
  store i64 %call, i64* %start.addr, align 8, !dbg !5356
  %19 = load i32, i32* %nxx, align 4, !dbg !5357
  store i32 %19, i32* %xx, align 4, !dbg !5358
  %20 = load i32, i32* %nyy, align 4, !dbg !5359
  store i32 %20, i32* %yy, align 4, !dbg !5360
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.cond, !dbg !5361

for.cond:                                         ; preds = %if.end48, %if.end
  call void @llvm.dbg.declare(metadata i16* %attrib, metadata !5362, metadata !DIExpression()), !dbg !5366
  %21 = load i16*, i16** %p, align 8, !dbg !5367
  %22 = load i16, i16* %21, align 2, !dbg !5367
  %conv5 = zext i16 %22 to i32, !dbg !5367
  %and = and i32 %conv5, 65280, !dbg !5368
  %conv6 = trunc i32 %and to i16, !dbg !5367
  store i16 %conv6, i16* %attrib, align 2, !dbg !5366
  call void @llvm.dbg.declare(metadata i32* %startx, metadata !5369, metadata !DIExpression()), !dbg !5370
  %23 = load i32, i32* %xx, align 4, !dbg !5371
  store i32 %23, i32* %startx, align 4, !dbg !5370
  call void @llvm.dbg.declare(metadata i16** %q, metadata !5372, metadata !DIExpression()), !dbg !5373
  %24 = load i16*, i16** %p, align 8, !dbg !5374
  store i16* %24, i16** %q, align 8, !dbg !5373
  br label %while.cond, !dbg !5375

while.cond:                                       ; preds = %if.end25, %for.cond
  %25 = load i32, i32* %xx, align 4, !dbg !5376
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5377
  %vc_cols7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 4, !dbg !5378
  %27 = load i32, i32* %vc_cols7, align 4, !dbg !5378
  %cmp = icmp ult i32 %25, %27, !dbg !5379
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5380

land.rhs:                                         ; preds = %while.cond
  %28 = load i32, i32* %count.addr, align 4, !dbg !5381
  %tobool9 = icmp ne i32 %28, 0, !dbg !5380
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %29 = phi i1 [ false, %while.cond ], [ %tobool9, %land.rhs ], !dbg !5382
  br i1 %29, label %while.body, label %while.end, !dbg !5375

while.body:                                       ; preds = %land.end
  %30 = load i16, i16* %attrib, align 2, !dbg !5383
  %conv10 = zext i16 %30 to i32, !dbg !5383
  %31 = load i16*, i16** %p, align 8, !dbg !5386
  %32 = load i16, i16* %31, align 2, !dbg !5386
  %conv11 = zext i16 %32 to i32, !dbg !5386
  %and12 = and i32 %conv11, 65280, !dbg !5387
  %cmp13 = icmp ne i32 %conv10, %and12, !dbg !5388
  br i1 %cmp13, label %if.then15, label %if.end25, !dbg !5389

if.then15:                                        ; preds = %while.body
  %33 = load i16*, i16** %p, align 8, !dbg !5390
  %34 = load i16*, i16** %q, align 8, !dbg !5393
  %cmp16 = icmp ugt i16* %33, %34, !dbg !5394
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !5395

if.then18:                                        ; preds = %if.then15
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5396
  %vc_sw19 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 13, !dbg !5397
  %36 = load %struct.consw*, %struct.consw** %vc_sw19, align 8, !dbg !5397
  %con_putcs = getelementptr inbounds %struct.consw, %struct.consw* %36, i32 0, i32 6, !dbg !5398
  %37 = load void (%struct.vc_data*, i16*, i32, i32, i32)*, void (%struct.vc_data*, i16*, i32, i32, i32)** %con_putcs, align 8, !dbg !5398
  %38 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5399
  %39 = load i16*, i16** %q, align 8, !dbg !5400
  %40 = load i16*, i16** %p, align 8, !dbg !5401
  %41 = load i16*, i16** %q, align 8, !dbg !5402
  %sub.ptr.lhs.cast = ptrtoint i16* %40 to i64, !dbg !5403
  %sub.ptr.rhs.cast = ptrtoint i16* %41 to i64, !dbg !5403
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5403
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !5403
  %conv20 = trunc i64 %sub.ptr.div to i32, !dbg !5401
  %42 = load i32, i32* %yy, align 4, !dbg !5404
  %43 = load i32, i32* %startx, align 4, !dbg !5405
  call void %37(%struct.vc_data* %38, i16* %39, i32 %conv20, i32 %42, i32 %43) #13, !dbg !5396
  br label %if.end21, !dbg !5396

if.end21:                                         ; preds = %if.then18, %if.then15
  %44 = load i32, i32* %xx, align 4, !dbg !5406
  store i32 %44, i32* %startx, align 4, !dbg !5407
  %45 = load i16*, i16** %p, align 8, !dbg !5408
  store i16* %45, i16** %q, align 8, !dbg !5409
  %46 = load i16*, i16** %p, align 8, !dbg !5410
  %47 = load i16, i16* %46, align 2, !dbg !5410
  %conv22 = zext i16 %47 to i32, !dbg !5410
  %and23 = and i32 %conv22, 65280, !dbg !5411
  %conv24 = trunc i32 %and23 to i16, !dbg !5410
  store i16 %conv24, i16* %attrib, align 2, !dbg !5412
  br label %if.end25, !dbg !5413

if.end25:                                         ; preds = %if.end21, %while.body
  %48 = load i16*, i16** %p, align 8, !dbg !5414
  %incdec.ptr = getelementptr i16, i16* %48, i32 1, !dbg !5414
  store i16* %incdec.ptr, i16** %p, align 8, !dbg !5414
  %49 = load i32, i32* %xx, align 4, !dbg !5415
  %inc = add i32 %49, 1, !dbg !5415
  store i32 %inc, i32* %xx, align 4, !dbg !5415
  %50 = load i32, i32* %count.addr, align 4, !dbg !5416
  %dec = add i32 %50, -1, !dbg !5416
  store i32 %dec, i32* %count.addr, align 4, !dbg !5416
  br label %while.cond, !dbg !5375, !llvm.loop !5417

while.end:                                        ; preds = %land.end
  %51 = load i16*, i16** %p, align 8, !dbg !5419
  %52 = load i16*, i16** %q, align 8, !dbg !5421
  %cmp26 = icmp ugt i16* %51, %52, !dbg !5422
  br i1 %cmp26, label %if.then28, label %if.end36, !dbg !5423

if.then28:                                        ; preds = %while.end
  %53 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5424
  %vc_sw29 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %53, i32 0, i32 13, !dbg !5425
  %54 = load %struct.consw*, %struct.consw** %vc_sw29, align 8, !dbg !5425
  %con_putcs30 = getelementptr inbounds %struct.consw, %struct.consw* %54, i32 0, i32 6, !dbg !5426
  %55 = load void (%struct.vc_data*, i16*, i32, i32, i32)*, void (%struct.vc_data*, i16*, i32, i32, i32)** %con_putcs30, align 8, !dbg !5426
  %56 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5427
  %57 = load i16*, i16** %q, align 8, !dbg !5428
  %58 = load i16*, i16** %p, align 8, !dbg !5429
  %59 = load i16*, i16** %q, align 8, !dbg !5430
  %sub.ptr.lhs.cast31 = ptrtoint i16* %58 to i64, !dbg !5431
  %sub.ptr.rhs.cast32 = ptrtoint i16* %59 to i64, !dbg !5431
  %sub.ptr.sub33 = sub i64 %sub.ptr.lhs.cast31, %sub.ptr.rhs.cast32, !dbg !5431
  %sub.ptr.div34 = sdiv exact i64 %sub.ptr.sub33, 2, !dbg !5431
  %conv35 = trunc i64 %sub.ptr.div34 to i32, !dbg !5429
  %60 = load i32, i32* %yy, align 4, !dbg !5432
  %61 = load i32, i32* %startx, align 4, !dbg !5433
  call void %55(%struct.vc_data* %56, i16* %57, i32 %conv35, i32 %60, i32 %61) #13, !dbg !5424
  br label %if.end36, !dbg !5424

if.end36:                                         ; preds = %if.then28, %while.end
  %62 = load i32, i32* %count.addr, align 4, !dbg !5434
  %tobool37 = icmp ne i32 %62, 0, !dbg !5434
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !5436

if.then38:                                        ; preds = %if.end36
  br label %for.end, !dbg !5437

if.end39:                                         ; preds = %if.end36
  store i32 0, i32* %xx, align 4, !dbg !5438
  %63 = load i32, i32* %yy, align 4, !dbg !5439
  %inc40 = add i32 %63, 1, !dbg !5439
  store i32 %inc40, i32* %yy, align 4, !dbg !5439
  %64 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5440
  %vc_sw41 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %64, i32 0, i32 13, !dbg !5442
  %65 = load %struct.consw*, %struct.consw** %vc_sw41, align 8, !dbg !5442
  %con_getxy42 = getelementptr inbounds %struct.consw, %struct.consw* %65, i32 0, i32 23, !dbg !5443
  %66 = load i64 (%struct.vc_data*, i64, i32*, i32*)*, i64 (%struct.vc_data*, i64, i32*, i32*)** %con_getxy42, align 8, !dbg !5443
  %tobool43 = icmp ne i64 (%struct.vc_data*, i64, i32*, i32*)* %66, null, !dbg !5440
  br i1 %tobool43, label %if.then44, label %if.end48, !dbg !5444

if.then44:                                        ; preds = %if.end39
  %67 = load i64, i64* %start.addr, align 8, !dbg !5445
  %68 = inttoptr i64 %67 to i16*, !dbg !5447
  store i16* %68, i16** %p, align 8, !dbg !5448
  %69 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5449
  %vc_sw45 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %69, i32 0, i32 13, !dbg !5450
  %70 = load %struct.consw*, %struct.consw** %vc_sw45, align 8, !dbg !5450
  %con_getxy46 = getelementptr inbounds %struct.consw, %struct.consw* %70, i32 0, i32 23, !dbg !5451
  %71 = load i64 (%struct.vc_data*, i64, i32*, i32*)*, i64 (%struct.vc_data*, i64, i32*, i32*)** %con_getxy46, align 8, !dbg !5451
  %72 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5452
  %73 = load i64, i64* %start.addr, align 8, !dbg !5453
  %call47 = call i64 %71(%struct.vc_data* %72, i64 %73, i32* null, i32* null) #13, !dbg !5449
  store i64 %call47, i64* %start.addr, align 8, !dbg !5454
  br label %if.end48, !dbg !5455

if.end48:                                         ; preds = %if.then44, %if.end39
  br label %for.cond, !dbg !5456, !llvm.loop !5457

for.end:                                          ; preds = %if.then38
  ret void, !dbg !5460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_cursor(%struct.vc_data* %vc) #0 !dbg !5461 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5462, metadata !DIExpression()), !dbg !5463
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5464
  %call = call zeroext i1 @con_is_fg(%struct.vc_data* %0) #13, !dbg !5466
  br i1 %call, label %lor.lhs.false, label %if.then, !dbg !5467

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @console_blanked, align 4, !dbg !5468
  %tobool = icmp ne i32 %1, 0, !dbg !5468
  br i1 %tobool, label %if.then, label %lor.lhs.false1, !dbg !5469

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5470
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 16, !dbg !5471
  %3 = load i8, i8* %vc_mode, align 4, !dbg !5471
  %conv = zext i8 %3 to i32, !dbg !5470
  %cmp = icmp eq i32 %conv, 1, !dbg !5472
  br i1 %cmp, label %if.then, label %if.end, !dbg !5473

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  br label %if.end12, !dbg !5474

if.end:                                           ; preds = %lor.lhs.false1
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5475
  %vc_deccm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 36, !dbg !5477
  %bf.load = load i16, i16* %vc_deccm, align 8, !dbg !5477
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !5477
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5477
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5477
  %tobool3 = icmp ne i32 %bf.cast, 0, !dbg !5475
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !5478

if.then4:                                         ; preds = %if.end
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5479
  %call5 = call zeroext i1 @vc_is_sel(%struct.vc_data* %5) #13, !dbg !5482
  br i1 %call5, label %if.then6, label %if.end7, !dbg !5483

if.then6:                                         ; preds = %if.then4
  call void @clear_selection() #13, !dbg !5484
  br label %if.end7, !dbg !5484

if.end7:                                          ; preds = %if.then6, %if.then4
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5485
  call void @add_softcursor(%struct.vc_data* %6) #13, !dbg !5486
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5487
  %vc_cursor_type = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 22, !dbg !5487
  %8 = load i32, i32* %vc_cursor_type, align 4, !dbg !5487
  %and = and i32 %8, 15, !dbg !5487
  %cmp8 = icmp ne i32 %and, 1, !dbg !5489
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !5490

if.then10:                                        ; preds = %if.end7
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5491
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 13, !dbg !5492
  %10 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !5492
  %con_cursor = getelementptr inbounds %struct.consw, %struct.consw* %10, i32 0, i32 7, !dbg !5493
  %11 = load void (%struct.vc_data*, i32)*, void (%struct.vc_data*, i32)** %con_cursor, align 8, !dbg !5493
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5494
  call void %11(%struct.vc_data* %12, i32 1) #13, !dbg !5491
  br label %if.end11, !dbg !5491

if.end11:                                         ; preds = %if.then10, %if.end7
  br label %if.end12, !dbg !5495

if.else:                                          ; preds = %if.end
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5496
  call void @hide_cursor(%struct.vc_data* %13) #13, !dbg !5497
  br label %if.end12

if.end12:                                         ; preds = %if.then, %if.else, %if.end11
  ret void, !dbg !5498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @invert_screen(%struct.vc_data* %vc, i32 %offset, i32 %count, i1 zeroext %viewed) #0 !dbg !5499 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !5502
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !5506
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !5508
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !5509
  %vc.addr = alloca %struct.vc_data*, align 8
  %offset.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %viewed.addr = alloca i8, align 1
  %p = alloca i16*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %q = alloca i16*, align 8
  %cnt = alloca i32, align 4
  %a = alloca i16, align 2
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5510, metadata !DIExpression()), !dbg !5511
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5512, metadata !DIExpression()), !dbg !5513
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5514, metadata !DIExpression()), !dbg !5515
  %frombool = zext i1 %viewed to i8
  store i8 %frombool, i8* %viewed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %viewed.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.declare(metadata i16** %p, metadata !5518, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5520, metadata !DIExpression()), !dbg !5521
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5522
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !5522
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5523
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !5524
  %conv.i.i = trunc i64 %3 to i32, !dbg !5524
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !5525
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5526
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !5526
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !5526
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5527
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5528
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !5528
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !5528
  %tobool = icmp ne i32 %8, 0, !dbg !5521
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !5521

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !5521
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5521
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !5521

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !5521
  %tobool3 = icmp ne i32 %9, 0, !dbg !5521
  %lnot = xor i1 %tobool3, true, !dbg !5521
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5529
  %lnot4 = xor i1 %10, true, !dbg !5521
  %lnot5 = xor i1 %lnot4, true, !dbg !5521
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !5521
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5521
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !5530
  %tobool6 = icmp ne i32 %11, 0, !dbg !5530
  %lnot7 = xor i1 %tobool6, true, !dbg !5530
  %lnot9 = xor i1 %lnot7, true, !dbg !5530
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5530
  %conv = sext i32 %lnot.ext10 to i64, !dbg !5530
  %tobool11 = icmp ne i64 %conv, 0, !dbg !5530
  br i1 %tobool11, label %if.then, label %if.end, !dbg !5521

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !5530

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !5532

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !5534

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !5532

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 760, i32 2305, i64 12) #5, !dbg !5536, !srcloc !5538
  br label %do.end14, !dbg !5536

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 236) #5, !dbg !5539, !srcloc !5541
  br label %do.body15, !dbg !5532

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !5542

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !5532

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !5532

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !5521
  %tobool18 = icmp ne i32 %12, 0, !dbg !5521
  %lnot19 = xor i1 %tobool18, true, !dbg !5521
  %lnot21 = xor i1 %lnot19, true, !dbg !5521
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !5521
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !5521
  store i64 %conv23, i64* %tmp, align 8, !dbg !5530
  %13 = load i64, i64* %tmp, align 8, !dbg !5521
  %14 = load i32, i32* %count.addr, align 4, !dbg !5544
  %div = sdiv i32 %14, 2, !dbg !5544
  store i32 %div, i32* %count.addr, align 4, !dbg !5544
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5545
  %16 = load i32, i32* %offset.addr, align 4, !dbg !5546
  %17 = load i8, i8* %viewed.addr, align 1, !dbg !5547
  %tobool24 = trunc i8 %17 to i1, !dbg !5547
  %call25 = call i16* @screenpos(%struct.vc_data* %15, i32 %16, i1 zeroext %tobool24) #13, !dbg !5548
  store i16* %call25, i16** %p, align 8, !dbg !5549
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5550
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 13, !dbg !5552
  %19 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !5552
  %con_invert_region = getelementptr inbounds %struct.consw, %struct.consw* %19, i32 0, i32 21, !dbg !5553
  %20 = load void (%struct.vc_data*, i16*, i32)*, void (%struct.vc_data*, i16*, i32)** %con_invert_region, align 8, !dbg !5553
  %tobool26 = icmp ne void (%struct.vc_data*, i16*, i32)* %20, null, !dbg !5550
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !5554

if.then27:                                        ; preds = %if.end
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5555
  %vc_sw28 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 13, !dbg !5557
  %22 = load %struct.consw*, %struct.consw** %vc_sw28, align 8, !dbg !5557
  %con_invert_region29 = getelementptr inbounds %struct.consw, %struct.consw* %22, i32 0, i32 21, !dbg !5558
  %23 = load void (%struct.vc_data*, i16*, i32)*, void (%struct.vc_data*, i16*, i32)** %con_invert_region29, align 8, !dbg !5558
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5559
  %25 = load i16*, i16** %p, align 8, !dbg !5560
  %26 = load i32, i32* %count.addr, align 4, !dbg !5561
  call void %23(%struct.vc_data* %24, i16* %25, i32 %26) #13, !dbg !5555
  br label %if.end72, !dbg !5562

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16** %q, metadata !5563, metadata !DIExpression()), !dbg !5565
  %27 = load i16*, i16** %p, align 8, !dbg !5566
  store i16* %27, i16** %q, align 8, !dbg !5565
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !5567, metadata !DIExpression()), !dbg !5568
  %28 = load i32, i32* %count.addr, align 4, !dbg !5569
  store i32 %28, i32* %cnt, align 4, !dbg !5568
  call void @llvm.dbg.declare(metadata i16* %a, metadata !5570, metadata !DIExpression()), !dbg !5571
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5572
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 36, !dbg !5574
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !5574
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !5574
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5574
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5574
  %tobool30 = icmp ne i32 %bf.cast, 0, !dbg !5572
  br i1 %tobool30, label %if.else35, label %if.then31, !dbg !5575

if.then31:                                        ; preds = %if.else
  br label %while.cond, !dbg !5576

while.cond:                                       ; preds = %while.body, %if.then31
  %30 = load i32, i32* %cnt, align 4, !dbg !5578
  %dec = add i32 %30, -1, !dbg !5578
  store i32 %dec, i32* %cnt, align 4, !dbg !5578
  %tobool32 = icmp ne i32 %30, 0, !dbg !5576
  br i1 %tobool32, label %while.body, label %while.end, !dbg !5576

while.body:                                       ; preds = %while.cond
  %31 = load i16*, i16** %q, align 8, !dbg !5579
  %32 = load i16, i16* %31, align 2, !dbg !5579
  store i16 %32, i16* %a, align 2, !dbg !5581
  %33 = load i16, i16* %a, align 2, !dbg !5582
  %conv33 = zext i16 %33 to i32, !dbg !5582
  %xor = xor i32 %conv33, 2048, !dbg !5582
  %conv34 = trunc i32 %xor to i16, !dbg !5582
  store i16 %conv34, i16* %a, align 2, !dbg !5582
  %34 = load i16, i16* %a, align 2, !dbg !5583
  %35 = load i16*, i16** %q, align 8, !dbg !5583
  store i16 %34, i16* %35, align 2, !dbg !5583
  %36 = load i16*, i16** %q, align 8, !dbg !5584
  %incdec.ptr = getelementptr i16, i16* %36, i32 1, !dbg !5584
  store i16* %incdec.ptr, i16** %q, align 8, !dbg !5584
  br label %while.cond, !dbg !5576, !llvm.loop !5585

while.end:                                        ; preds = %while.cond
  br label %if.end71, !dbg !5587

if.else35:                                        ; preds = %if.else
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5588
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 26, !dbg !5590
  %38 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !5590
  %conv36 = zext i16 %38 to i32, !dbg !5588
  %cmp = icmp eq i32 %conv36, 256, !dbg !5591
  br i1 %cmp, label %if.then38, label %if.else52, !dbg !5592

if.then38:                                        ; preds = %if.else35
  br label %while.cond39, !dbg !5593

while.cond39:                                     ; preds = %while.body42, %if.then38
  %39 = load i32, i32* %cnt, align 4, !dbg !5595
  %dec40 = add i32 %39, -1, !dbg !5595
  store i32 %dec40, i32* %cnt, align 4, !dbg !5595
  %tobool41 = icmp ne i32 %39, 0, !dbg !5593
  br i1 %tobool41, label %while.body42, label %while.end51, !dbg !5593

while.body42:                                     ; preds = %while.cond39
  %40 = load i16*, i16** %q, align 8, !dbg !5596
  %41 = load i16, i16* %40, align 2, !dbg !5596
  store i16 %41, i16* %a, align 2, !dbg !5598
  %42 = load i16, i16* %a, align 2, !dbg !5599
  %conv43 = zext i16 %42 to i32, !dbg !5599
  %and = and i32 %conv43, 4607, !dbg !5600
  %43 = load i16, i16* %a, align 2, !dbg !5601
  %conv44 = zext i16 %43 to i32, !dbg !5601
  %and45 = and i32 %conv44, 57344, !dbg !5602
  %shr = ashr i32 %and45, 4, !dbg !5603
  %or = or i32 %and, %shr, !dbg !5604
  %44 = load i16, i16* %a, align 2, !dbg !5605
  %conv46 = zext i16 %44 to i32, !dbg !5605
  %and47 = and i32 %conv46, 3584, !dbg !5606
  %shl = shl i32 %and47, 4, !dbg !5607
  %or48 = or i32 %or, %shl, !dbg !5608
  %conv49 = trunc i32 %or48 to i16, !dbg !5609
  store i16 %conv49, i16* %a, align 2, !dbg !5610
  %45 = load i16, i16* %a, align 2, !dbg !5611
  %46 = load i16*, i16** %q, align 8, !dbg !5611
  store i16 %45, i16* %46, align 2, !dbg !5611
  %47 = load i16*, i16** %q, align 8, !dbg !5612
  %incdec.ptr50 = getelementptr i16, i16* %47, i32 1, !dbg !5612
  store i16* %incdec.ptr50, i16** %q, align 8, !dbg !5612
  br label %while.cond39, !dbg !5593, !llvm.loop !5613

while.end51:                                      ; preds = %while.cond39
  br label %if.end70, !dbg !5615

if.else52:                                        ; preds = %if.else35
  br label %while.cond53, !dbg !5616

while.cond53:                                     ; preds = %while.body56, %if.else52
  %48 = load i32, i32* %cnt, align 4, !dbg !5618
  %dec54 = add i32 %48, -1, !dbg !5618
  store i32 %dec54, i32* %cnt, align 4, !dbg !5618
  %tobool55 = icmp ne i32 %48, 0, !dbg !5616
  br i1 %tobool55, label %while.body56, label %while.end69, !dbg !5616

while.body56:                                     ; preds = %while.cond53
  %49 = load i16*, i16** %q, align 8, !dbg !5619
  %50 = load i16, i16* %49, align 2, !dbg !5619
  store i16 %50, i16* %a, align 2, !dbg !5621
  %51 = load i16, i16* %a, align 2, !dbg !5622
  %conv57 = zext i16 %51 to i32, !dbg !5622
  %and58 = and i32 %conv57, 35071, !dbg !5623
  %52 = load i16, i16* %a, align 2, !dbg !5624
  %conv59 = zext i16 %52 to i32, !dbg !5624
  %and60 = and i32 %conv59, 28672, !dbg !5625
  %shr61 = ashr i32 %and60, 4, !dbg !5626
  %or62 = or i32 %and58, %shr61, !dbg !5627
  %53 = load i16, i16* %a, align 2, !dbg !5628
  %conv63 = zext i16 %53 to i32, !dbg !5628
  %and64 = and i32 %conv63, 1792, !dbg !5629
  %shl65 = shl i32 %and64, 4, !dbg !5630
  %or66 = or i32 %or62, %shl65, !dbg !5631
  %conv67 = trunc i32 %or66 to i16, !dbg !5632
  store i16 %conv67, i16* %a, align 2, !dbg !5633
  %54 = load i16, i16* %a, align 2, !dbg !5634
  %55 = load i16*, i16** %q, align 8, !dbg !5634
  store i16 %54, i16* %55, align 2, !dbg !5634
  %56 = load i16*, i16** %q, align 8, !dbg !5635
  %incdec.ptr68 = getelementptr i16, i16* %56, i32 1, !dbg !5635
  store i16* %incdec.ptr68, i16** %q, align 8, !dbg !5635
  br label %while.cond53, !dbg !5616, !llvm.loop !5636

while.end69:                                      ; preds = %while.cond53
  br label %if.end70

if.end70:                                         ; preds = %while.end69, %while.end51
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %while.end
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then27
  %57 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5638
  %call73 = call zeroext i1 @con_should_update(%struct.vc_data* %57) #13, !dbg !5640
  br i1 %call73, label %if.then74, label %if.end75, !dbg !5641

if.then74:                                        ; preds = %if.end72
  %58 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5642
  %59 = load i16*, i16** %p, align 8, !dbg !5643
  %60 = ptrtoint i16* %59 to i64, !dbg !5644
  %61 = load i32, i32* %count.addr, align 4, !dbg !5645
  call void @do_update_region(%struct.vc_data* %58, i64 %60, i32 %61) #13, !dbg !5646
  br label %if.end75, !dbg !5646

if.end75:                                         ; preds = %if.then74, %if.end72
  %62 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5647
  call void @notify_update(%struct.vc_data* %62) #13, !dbg !5648
  ret void, !dbg !5649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @notify_update(%struct.vc_data* %vc) #0 !dbg !5650 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %param = alloca %struct.vt_notifier_param, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5651, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.declare(metadata %struct.vt_notifier_param* %param, metadata !5653, metadata !DIExpression()), !dbg !5659
  %vc1 = getelementptr inbounds %struct.vt_notifier_param, %struct.vt_notifier_param* %param, i32 0, i32 0, !dbg !5660
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5661
  store %struct.vc_data* %0, %struct.vc_data** %vc1, align 8, !dbg !5660
  %c = getelementptr inbounds %struct.vt_notifier_param, %struct.vt_notifier_param* %param, i32 0, i32 1, !dbg !5660
  store i32 0, i32* %c, align 8, !dbg !5660
  %1 = bitcast %struct.vt_notifier_param* %param to i8*, !dbg !5662
  %call = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head* @vt_notifier_list, i64 4, i8* %1) #13, !dbg !5663
  ret void, !dbg !5664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @complement_pos(%struct.vc_data* %vc, i32 %offset) #0 !dbg !4498 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !5665
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !5669
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !5671
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !5672
  %vc.addr = alloca %struct.vc_data*, align 8
  %offset.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %new = alloca i16, align 2
  %p = alloca i16*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5673, metadata !DIExpression()), !dbg !5674
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5675, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5677, metadata !DIExpression()), !dbg !5678
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5679
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !5679
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5680
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !5681
  %conv.i.i = trunc i64 %3 to i32, !dbg !5681
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !5682
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5683
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !5683
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !5683
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5684
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5685
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !5685
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !5685
  %tobool = icmp ne i32 %8, 0, !dbg !5678
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !5678

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !5678
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5678
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !5678

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !5678
  %tobool3 = icmp ne i32 %9, 0, !dbg !5678
  %lnot = xor i1 %tobool3, true, !dbg !5678
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5686
  %lnot4 = xor i1 %10, true, !dbg !5678
  %lnot5 = xor i1 %lnot4, true, !dbg !5678
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !5678
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5678
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !5687
  %tobool6 = icmp ne i32 %11, 0, !dbg !5687
  %lnot7 = xor i1 %tobool6, true, !dbg !5687
  %lnot9 = xor i1 %lnot7, true, !dbg !5687
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5687
  %conv = sext i32 %lnot.ext10 to i64, !dbg !5687
  %tobool11 = icmp ne i64 %conv, 0, !dbg !5687
  br i1 %tobool11, label %if.then, label %if.end, !dbg !5678

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !5687

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !5689

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !5691

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !5689

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 811, i32 2305, i64 12) #5, !dbg !5693, !srcloc !5695
  br label %do.end14, !dbg !5693

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 237) #5, !dbg !5696, !srcloc !5698
  br label %do.body15, !dbg !5689

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !5699

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !5689

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !5689

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !5678
  %tobool18 = icmp ne i32 %12, 0, !dbg !5678
  %lnot19 = xor i1 %tobool18, true, !dbg !5678
  %lnot21 = xor i1 %lnot19, true, !dbg !5678
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !5678
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !5678
  store i64 %conv23, i64* %tmp, align 8, !dbg !5687
  %13 = load i64, i64* %tmp, align 8, !dbg !5678
  %14 = load i32, i32* @complement_pos.old_offset, align 4, !dbg !5701
  %cmp = icmp ne i32 %14, -1, !dbg !5703
  br i1 %cmp, label %land.lhs.true25, label %if.end39, !dbg !5704

land.lhs.true25:                                  ; preds = %if.end
  %15 = load i32, i32* @complement_pos.old_offset, align 4, !dbg !5705
  %cmp26 = icmp sge i32 %15, 0, !dbg !5706
  br i1 %cmp26, label %land.lhs.true28, label %if.end39, !dbg !5707

land.lhs.true28:                                  ; preds = %land.lhs.true25
  %16 = load i32, i32* @complement_pos.old_offset, align 4, !dbg !5708
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5709
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 15, !dbg !5710
  %18 = load i32, i32* %vc_screenbuf_size, align 8, !dbg !5710
  %cmp29 = icmp ult i32 %16, %18, !dbg !5711
  br i1 %cmp29, label %if.then31, label %if.end39, !dbg !5712

if.then31:                                        ; preds = %land.lhs.true28
  %19 = load i16, i16* @complement_pos.old, align 2, !dbg !5713
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5713
  %21 = load i32, i32* @complement_pos.old_offset, align 4, !dbg !5713
  %call32 = call i16* @screenpos(%struct.vc_data* %20, i32 %21, i1 zeroext true) #13, !dbg !5713
  store i16 %19, i16* %call32, align 2, !dbg !5713
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5715
  %call33 = call zeroext i1 @con_should_update(%struct.vc_data* %22) #13, !dbg !5717
  br i1 %call33, label %if.then34, label %if.end38, !dbg !5718

if.then34:                                        ; preds = %if.then31
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5719
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 13, !dbg !5720
  %24 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !5720
  %con_putc = getelementptr inbounds %struct.consw, %struct.consw* %24, i32 0, i32 5, !dbg !5721
  %25 = load void (%struct.vc_data*, i32, i32, i32)*, void (%struct.vc_data*, i32, i32, i32)** %con_putc, align 8, !dbg !5721
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5722
  %27 = load i16, i16* @complement_pos.old, align 2, !dbg !5723
  %conv35 = zext i16 %27 to i32, !dbg !5723
  %28 = load i16, i16* @complement_pos.oldy, align 2, !dbg !5724
  %conv36 = zext i16 %28 to i32, !dbg !5724
  %29 = load i16, i16* @complement_pos.oldx, align 2, !dbg !5725
  %conv37 = zext i16 %29 to i32, !dbg !5725
  call void %25(%struct.vc_data* %26, i32 %conv35, i32 %conv36, i32 %conv37) #13, !dbg !5719
  br label %if.end38, !dbg !5719

if.end38:                                         ; preds = %if.then34, %if.then31
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5726
  call void @notify_update(%struct.vc_data* %30) #13, !dbg !5727
  br label %if.end39, !dbg !5728

if.end39:                                         ; preds = %if.end38, %land.lhs.true28, %land.lhs.true25, %if.end
  %31 = load i32, i32* %offset.addr, align 4, !dbg !5729
  store i32 %31, i32* @complement_pos.old_offset, align 4, !dbg !5730
  %32 = load i32, i32* %offset.addr, align 4, !dbg !5731
  %cmp40 = icmp ne i32 %32, -1, !dbg !5733
  br i1 %cmp40, label %land.lhs.true42, label %if.end66, !dbg !5734

land.lhs.true42:                                  ; preds = %if.end39
  %33 = load i32, i32* %offset.addr, align 4, !dbg !5735
  %cmp43 = icmp sge i32 %33, 0, !dbg !5736
  br i1 %cmp43, label %land.lhs.true45, label %if.end66, !dbg !5737

land.lhs.true45:                                  ; preds = %land.lhs.true42
  %34 = load i32, i32* %offset.addr, align 4, !dbg !5738
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5739
  %vc_screenbuf_size46 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 15, !dbg !5740
  %36 = load i32, i32* %vc_screenbuf_size46, align 8, !dbg !5740
  %cmp47 = icmp ult i32 %34, %36, !dbg !5741
  br i1 %cmp47, label %if.then49, label %if.end66, !dbg !5742

if.then49:                                        ; preds = %land.lhs.true45
  call void @llvm.dbg.declare(metadata i16* %new, metadata !5743, metadata !DIExpression()), !dbg !5745
  call void @llvm.dbg.declare(metadata i16** %p, metadata !5746, metadata !DIExpression()), !dbg !5747
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5748
  %38 = load i32, i32* %offset.addr, align 4, !dbg !5749
  %call50 = call i16* @screenpos(%struct.vc_data* %37, i32 %38, i1 zeroext true) #13, !dbg !5750
  store i16* %call50, i16** %p, align 8, !dbg !5751
  %39 = load i16*, i16** %p, align 8, !dbg !5752
  %40 = load i16, i16* %39, align 2, !dbg !5752
  store i16 %40, i16* @complement_pos.old, align 2, !dbg !5753
  %41 = load i16, i16* @complement_pos.old, align 2, !dbg !5754
  %conv51 = zext i16 %41 to i32, !dbg !5754
  %42 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5755
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 23, !dbg !5756
  %43 = load i16, i16* %vc_complement_mask, align 8, !dbg !5756
  %conv52 = zext i16 %43 to i32, !dbg !5755
  %xor = xor i32 %conv51, %conv52, !dbg !5757
  %conv53 = trunc i32 %xor to i16, !dbg !5754
  store i16 %conv53, i16* %new, align 2, !dbg !5758
  %44 = load i16, i16* %new, align 2, !dbg !5759
  %45 = load i16*, i16** %p, align 8, !dbg !5759
  store i16 %44, i16* %45, align 2, !dbg !5759
  %46 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5760
  %call54 = call zeroext i1 @con_should_update(%struct.vc_data* %46) #13, !dbg !5762
  br i1 %call54, label %if.then55, label %if.end65, !dbg !5763

if.then55:                                        ; preds = %if.then49
  %47 = load i32, i32* %offset.addr, align 4, !dbg !5764
  %shr = ashr i32 %47, 1, !dbg !5766
  %48 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5767
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %48, i32 0, i32 4, !dbg !5768
  %49 = load i32, i32* %vc_cols, align 4, !dbg !5768
  %rem = urem i32 %shr, %49, !dbg !5769
  %conv56 = trunc i32 %rem to i16, !dbg !5770
  store i16 %conv56, i16* @complement_pos.oldx, align 2, !dbg !5771
  %50 = load i32, i32* %offset.addr, align 4, !dbg !5772
  %shr57 = ashr i32 %50, 1, !dbg !5773
  %51 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5774
  %vc_cols58 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %51, i32 0, i32 4, !dbg !5775
  %52 = load i32, i32* %vc_cols58, align 4, !dbg !5775
  %div = udiv i32 %shr57, %52, !dbg !5776
  %conv59 = trunc i32 %div to i16, !dbg !5777
  store i16 %conv59, i16* @complement_pos.oldy, align 2, !dbg !5778
  %53 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5779
  %vc_sw60 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %53, i32 0, i32 13, !dbg !5780
  %54 = load %struct.consw*, %struct.consw** %vc_sw60, align 8, !dbg !5780
  %con_putc61 = getelementptr inbounds %struct.consw, %struct.consw* %54, i32 0, i32 5, !dbg !5781
  %55 = load void (%struct.vc_data*, i32, i32, i32)*, void (%struct.vc_data*, i32, i32, i32)** %con_putc61, align 8, !dbg !5781
  %56 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5782
  %57 = load i16, i16* %new, align 2, !dbg !5783
  %conv62 = zext i16 %57 to i32, !dbg !5783
  %58 = load i16, i16* @complement_pos.oldy, align 2, !dbg !5784
  %conv63 = zext i16 %58 to i32, !dbg !5784
  %59 = load i16, i16* @complement_pos.oldx, align 2, !dbg !5785
  %conv64 = zext i16 %59 to i32, !dbg !5785
  call void %55(%struct.vc_data* %56, i32 %conv62, i32 %conv63, i32 %conv64) #13, !dbg !5779
  br label %if.end65, !dbg !5786

if.end65:                                         ; preds = %if.then55, %if.then49
  %60 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5787
  call void @notify_update(%struct.vc_data* %60) #13, !dbg !5788
  br label %if.end66, !dbg !5789

if.end66:                                         ; preds = %if.end65, %land.lhs.true45, %land.lhs.true42, %if.end39
  ret void, !dbg !5790
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @clear_buffer_attributes(%struct.vc_data* %vc) #0 !dbg !5791 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %p = alloca i16*, align 8
  %count = alloca i32, align 4
  %mask = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5792, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.declare(metadata i16** %p, metadata !5794, metadata !DIExpression()), !dbg !5795
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5796
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 8, !dbg !5797
  %1 = load i64, i64* %vc_origin, align 8, !dbg !5797
  %2 = inttoptr i64 %1 to i16*, !dbg !5798
  store i16* %2, i16** %p, align 8, !dbg !5795
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5799, metadata !DIExpression()), !dbg !5800
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5801
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 15, !dbg !5802
  %4 = load i32, i32* %vc_screenbuf_size, align 8, !dbg !5802
  %div = udiv i32 %4, 2, !dbg !5803
  store i32 %div, i32* %count, align 4, !dbg !5800
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !5804, metadata !DIExpression()), !dbg !5805
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5806
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 26, !dbg !5807
  %6 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !5807
  %conv = zext i16 %6 to i32, !dbg !5806
  %or = or i32 %conv, 255, !dbg !5808
  store i32 %or, i32* %mask, align 4, !dbg !5805
  br label %for.cond, !dbg !5809

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %count, align 4, !dbg !5810
  %cmp = icmp sgt i32 %7, 0, !dbg !5813
  br i1 %cmp, label %for.body, label %for.end, !dbg !5814

for.body:                                         ; preds = %for.cond
  %8 = load i16*, i16** %p, align 8, !dbg !5815
  %9 = load i16, i16* %8, align 2, !dbg !5815
  %conv2 = zext i16 %9 to i32, !dbg !5815
  %10 = load i32, i32* %mask, align 4, !dbg !5815
  %and = and i32 %conv2, %10, !dbg !5815
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5815
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 28, !dbg !5815
  %12 = load i16, i16* %vc_video_erase_char, align 8, !dbg !5815
  %conv3 = zext i16 %12 to i32, !dbg !5815
  %13 = load i32, i32* %mask, align 4, !dbg !5815
  %neg = xor i32 %13, -1, !dbg !5815
  %and4 = and i32 %conv3, %neg, !dbg !5815
  %or5 = or i32 %and, %and4, !dbg !5815
  %conv6 = trunc i32 %or5 to i16, !dbg !5815
  %14 = load i16*, i16** %p, align 8, !dbg !5815
  store i16 %conv6, i16* %14, align 2, !dbg !5815
  br label %for.inc, !dbg !5817

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %count, align 4, !dbg !5818
  %dec = add i32 %15, -1, !dbg !5818
  store i32 %dec, i32* %count, align 4, !dbg !5818
  %16 = load i16*, i16** %p, align 8, !dbg !5819
  %incdec.ptr = getelementptr i16, i16* %16, i32 1, !dbg !5819
  store i16* %incdec.ptr, i16** %p, align 8, !dbg !5819
  br label %for.cond, !dbg !5820, !llvm.loop !5821

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5823
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @redraw_screen(%struct.vc_data* %vc, i32 %is_switch) #0 !dbg !5824 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !5825
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !5829
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !5831
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !5832
  %vc.addr = alloca %struct.vc_data*, align 8
  %is_switch.addr = alloca i32, align 4
  %redraw = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %old_vc = alloca %struct.vc_data*, align 8
  %update = alloca i32, align 4
  %old_was_color = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5833, metadata !DIExpression()), !dbg !5834
  store i32 %is_switch, i32* %is_switch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_switch.addr, metadata !5835, metadata !DIExpression()), !dbg !5836
  call void @llvm.dbg.declare(metadata i32* %redraw, metadata !5837, metadata !DIExpression()), !dbg !5838
  store i32 0, i32* %redraw, align 4, !dbg !5838
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5839, metadata !DIExpression()), !dbg !5840
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5841
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !5841
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5842
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !5843
  %conv.i.i = trunc i64 %3 to i32, !dbg !5843
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !5844
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5845
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !5845
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !5845
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5846
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5847
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !5847
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !5847
  %tobool = icmp ne i32 %8, 0, !dbg !5840
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !5840

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !5840
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5840
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !5840

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !5840
  %tobool3 = icmp ne i32 %9, 0, !dbg !5840
  %lnot = xor i1 %tobool3, true, !dbg !5840
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5848
  %lnot4 = xor i1 %10, true, !dbg !5840
  %lnot5 = xor i1 %lnot4, true, !dbg !5840
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !5840
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5840
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !5849
  %tobool6 = icmp ne i32 %11, 0, !dbg !5849
  %lnot7 = xor i1 %tobool6, true, !dbg !5849
  %lnot9 = xor i1 %lnot7, true, !dbg !5849
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5849
  %conv = sext i32 %lnot.ext10 to i64, !dbg !5849
  %tobool11 = icmp ne i64 %conv, 0, !dbg !5849
  br i1 %tobool11, label %if.then, label %if.end, !dbg !5840

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !5849

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !5851

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !5853

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !5851

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 988, i32 2305, i64 12) #5, !dbg !5855, !srcloc !5857
  br label %do.end14, !dbg !5855

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 241) #5, !dbg !5858, !srcloc !5860
  br label %do.body15, !dbg !5851

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !5861

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !5851

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !5851

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !5840
  %tobool18 = icmp ne i32 %12, 0, !dbg !5840
  %lnot19 = xor i1 %tobool18, true, !dbg !5840
  %lnot21 = xor i1 %lnot19, true, !dbg !5840
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !5840
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !5840
  store i64 %conv23, i64* %tmp, align 8, !dbg !5849
  %13 = load i64, i64* %tmp, align 8, !dbg !5840
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5863
  %tobool24 = icmp ne %struct.vc_data* %14, null, !dbg !5863
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !5865

if.then25:                                        ; preds = %if.end
  br label %if.end66, !dbg !5866

if.end26:                                         ; preds = %if.end
  %15 = load i32, i32* %is_switch.addr, align 4, !dbg !5868
  %tobool27 = icmp ne i32 %15, 0, !dbg !5868
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !5870

if.then28:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata %struct.vc_data** %old_vc, metadata !5871, metadata !DIExpression()), !dbg !5873
  %16 = load i32, i32* @fg_console, align 4, !dbg !5874
  %idxprom = sext i32 %16 to i64, !dbg !5875
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !5875
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !5876
  %17 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !5876
  store %struct.vc_data* %17, %struct.vc_data** %old_vc, align 8, !dbg !5873
  %18 = load %struct.vc_data*, %struct.vc_data** %old_vc, align 8, !dbg !5877
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5879
  %cmp = icmp eq %struct.vc_data* %18, %19, !dbg !5880
  br i1 %cmp, label %if.then30, label %if.end31, !dbg !5881

if.then30:                                        ; preds = %if.then28
  br label %if.end66, !dbg !5882

if.end31:                                         ; preds = %if.then28
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5883
  %call32 = call zeroext i1 @con_is_visible(%struct.vc_data* %20) #13, !dbg !5885
  br i1 %call32, label %if.end34, label %if.then33, !dbg !5886

if.then33:                                        ; preds = %if.end31
  store i32 1, i32* %redraw, align 4, !dbg !5887
  br label %if.end34, !dbg !5888

if.end34:                                         ; preds = %if.then33, %if.end31
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5889
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5890
  %vc_display_fg = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 46, !dbg !5891
  %23 = load %struct.vc_data**, %struct.vc_data*** %vc_display_fg, align 8, !dbg !5891
  store %struct.vc_data* %21, %struct.vc_data** %23, align 8, !dbg !5892
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5893
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %24, i32 0, i32 3, !dbg !5894
  %25 = load i16, i16* %vc_num, align 8, !dbg !5894
  %conv35 = zext i16 %25 to i32, !dbg !5893
  store i32 %conv35, i32* @fg_console, align 4, !dbg !5895
  %26 = load %struct.vc_data*, %struct.vc_data** %old_vc, align 8, !dbg !5896
  call void @hide_cursor(%struct.vc_data* %26) #13, !dbg !5897
  %27 = load %struct.vc_data*, %struct.vc_data** %old_vc, align 8, !dbg !5898
  %call36 = call zeroext i1 @con_is_visible(%struct.vc_data* %27) #13, !dbg !5900
  br i1 %call36, label %if.end38, label %if.then37, !dbg !5901

if.then37:                                        ; preds = %if.end34
  %28 = load %struct.vc_data*, %struct.vc_data** %old_vc, align 8, !dbg !5902
  call void @save_screen(%struct.vc_data* %28) #13, !dbg !5904
  %29 = load %struct.vc_data*, %struct.vc_data** %old_vc, align 8, !dbg !5905
  call void @set_origin(%struct.vc_data* %29) #13, !dbg !5906
  br label %if.end38, !dbg !5907

if.end38:                                         ; preds = %if.then37, %if.end34
  %30 = load %struct.device*, %struct.device** @tty0dev, align 8, !dbg !5908
  %tobool39 = icmp ne %struct.device* %30, null, !dbg !5908
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !5910

if.then40:                                        ; preds = %if.end38
  %31 = load %struct.device*, %struct.device** @tty0dev, align 8, !dbg !5911
  %kobj = getelementptr inbounds %struct.device, %struct.device* %31, i32 0, i32 0, !dbg !5912
  call void @sysfs_notify(%struct.kobject* %kobj, i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !5913
  br label %if.end41, !dbg !5913

if.end41:                                         ; preds = %if.then40, %if.end38
  br label %if.end42, !dbg !5914

if.else:                                          ; preds = %if.end26
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5915
  call void @hide_cursor(%struct.vc_data* %32) #13, !dbg !5917
  store i32 1, i32* %redraw, align 4, !dbg !5918
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.end41
  %33 = load i32, i32* %redraw, align 4, !dbg !5919
  %tobool43 = icmp ne i32 %33, 0, !dbg !5919
  br i1 %tobool43, label %if.then44, label %if.end63, !dbg !5921

if.then44:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i32* %update, metadata !5922, metadata !DIExpression()), !dbg !5924
  call void @llvm.dbg.declare(metadata i32* %old_was_color, metadata !5925, metadata !DIExpression()), !dbg !5926
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5927
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %34, i32 0, i32 36, !dbg !5928
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !5928
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !5928
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5928
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5928
  store i32 %bf.cast, i32* %old_was_color, align 4, !dbg !5926
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5929
  call void @set_origin(%struct.vc_data* %35) #13, !dbg !5930
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5931
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 13, !dbg !5932
  %37 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !5932
  %con_switch = getelementptr inbounds %struct.consw, %struct.consw* %37, i32 0, i32 9, !dbg !5933
  %con_switch45 = bitcast {}** %con_switch to i32 (%struct.vc_data*)**, !dbg !5933
  %38 = load i32 (%struct.vc_data*)*, i32 (%struct.vc_data*)** %con_switch45, align 8, !dbg !5933
  %39 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5934
  %call46 = call i32 %38(%struct.vc_data* %39) #13, !dbg !5931
  store i32 %call46, i32* %update, align 4, !dbg !5935
  %40 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5936
  call void @set_palette(%struct.vc_data* %40) #13, !dbg !5937
  %41 = load i32, i32* %old_was_color, align 4, !dbg !5938
  %42 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5940
  %vc_can_do_color47 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 36, !dbg !5941
  %bf.load48 = load i16, i16* %vc_can_do_color47, align 8, !dbg !5941
  %bf.lshr49 = lshr i16 %bf.load48, 11, !dbg !5941
  %bf.clear50 = and i16 %bf.lshr49, 1, !dbg !5941
  %bf.cast51 = zext i16 %bf.clear50 to i32, !dbg !5941
  %cmp52 = icmp ne i32 %41, %bf.cast51, !dbg !5942
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !5943

if.then54:                                        ; preds = %if.then44
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5944
  call void @update_attr(%struct.vc_data* %43) #13, !dbg !5946
  %44 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5947
  call void @clear_buffer_attributes(%struct.vc_data* %44) #13, !dbg !5948
  br label %if.end55, !dbg !5949

if.end55:                                         ; preds = %if.then54, %if.then44
  %45 = load i32, i32* %update, align 4, !dbg !5950
  %tobool56 = icmp ne i32 %45, 0, !dbg !5950
  br i1 %tobool56, label %land.lhs.true57, label %if.end62, !dbg !5952

land.lhs.true57:                                  ; preds = %if.end55
  %46 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5953
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %46, i32 0, i32 16, !dbg !5954
  %47 = load i8, i8* %vc_mode, align 4, !dbg !5954
  %conv58 = zext i8 %47 to i32, !dbg !5953
  %cmp59 = icmp ne i32 %conv58, 1, !dbg !5955
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !5956

if.then61:                                        ; preds = %land.lhs.true57
  %48 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5957
  %49 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5958
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %49, i32 0, i32 8, !dbg !5959
  %50 = load i64, i64* %vc_origin, align 8, !dbg !5959
  %51 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5960
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %51, i32 0, i32 15, !dbg !5961
  %52 = load i32, i32* %vc_screenbuf_size, align 8, !dbg !5961
  %div = udiv i32 %52, 2, !dbg !5962
  call void @do_update_region(%struct.vc_data* %48, i64 %50, i32 %div) #13, !dbg !5963
  br label %if.end62, !dbg !5963

if.end62:                                         ; preds = %if.then61, %land.lhs.true57, %if.end55
  br label %if.end63, !dbg !5964

if.end63:                                         ; preds = %if.end62, %if.end42
  %53 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5965
  call void @set_cursor(%struct.vc_data* %53) #13, !dbg !5966
  %54 = load i32, i32* %is_switch.addr, align 4, !dbg !5967
  %tobool64 = icmp ne i32 %54, 0, !dbg !5967
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !5969

if.then65:                                        ; preds = %if.end63
  call void @set_leds() #13, !dbg !5970
  call void @compute_shiftstate() #13, !dbg !5972
  %55 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !5973
  call void @notify_update(%struct.vc_data* %55) #13, !dbg !5974
  br label %if.end66, !dbg !5975

if.end66:                                         ; preds = %if.then25, %if.then30, %if.then65, %if.end63
  ret void, !dbg !5976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @con_is_visible(%struct.vc_data* %vc) #0 !dbg !5977 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !5978
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !5982
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !5984
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !5985
  %vc.addr = alloca %struct.vc_data*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !5986, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5988, metadata !DIExpression()), !dbg !5989
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5990
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !5990
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5991
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !5992
  %conv.i.i = trunc i64 %3 to i32, !dbg !5992
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !5993
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5994
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !5994
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !5994
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5995
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5996
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !5996
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !5996
  %tobool = icmp ne i32 %8, 0, !dbg !5989
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !5989

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !5989
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5989
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !5989

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !5989
  %tobool3 = icmp ne i32 %9, 0, !dbg !5989
  %lnot = xor i1 %tobool3, true, !dbg !5989
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5997
  %lnot4 = xor i1 %10, true, !dbg !5989
  %lnot5 = xor i1 %lnot4, true, !dbg !5989
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !5989
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5989
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !5998
  %tobool6 = icmp ne i32 %11, 0, !dbg !5998
  %lnot7 = xor i1 %tobool6, true, !dbg !5998
  %lnot9 = xor i1 %lnot7, true, !dbg !5998
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5998
  %conv = sext i32 %lnot.ext10 to i64, !dbg !5998
  %tobool11 = icmp ne i64 %conv, 0, !dbg !5998
  br i1 %tobool11, label %if.then, label %if.end, !dbg !5989

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !5998

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !6000

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !6002

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !6000

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 3980, i32 2305, i64 12) #5, !dbg !6004, !srcloc !6006
  br label %do.end14, !dbg !6004

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 283) #5, !dbg !6007, !srcloc !6009
  br label %do.body15, !dbg !6000

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !6010

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !6000

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !6000

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !5989
  %tobool18 = icmp ne i32 %12, 0, !dbg !5989
  %lnot19 = xor i1 %tobool18, true, !dbg !5989
  %lnot21 = xor i1 %lnot19, true, !dbg !5989
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !5989
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !5989
  store i64 %conv23, i64* %tmp, align 8, !dbg !5998
  %13 = load i64, i64* %tmp, align 8, !dbg !5989
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6012
  %vc_display_fg = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 46, !dbg !6013
  %15 = load %struct.vc_data**, %struct.vc_data*** %vc_display_fg, align 8, !dbg !6013
  %16 = load %struct.vc_data*, %struct.vc_data** %15, align 8, !dbg !6014
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6015
  %cmp = icmp eq %struct.vc_data* %16, %17, !dbg !6016
  ret i1 %cmp, !dbg !6017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @save_screen(%struct.vc_data* %vc) #0 !dbg !6018 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !6019
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !6023
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !6025
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !6026
  %vc.addr = alloca %struct.vc_data*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !6027, metadata !DIExpression()), !dbg !6028
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6029, metadata !DIExpression()), !dbg !6030
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6031
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !6031
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6032
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !6033
  %conv.i.i = trunc i64 %3 to i32, !dbg !6033
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !6034
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6035
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6035
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !6035
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6036
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6037
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !6037
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6037
  %tobool = icmp ne i32 %8, 0, !dbg !6030
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6030

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !6030
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6030
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !6030

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !6030
  %tobool3 = icmp ne i32 %9, 0, !dbg !6030
  %lnot = xor i1 %tobool3, true, !dbg !6030
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !6038
  %lnot4 = xor i1 %10, true, !dbg !6030
  %lnot5 = xor i1 %lnot4, true, !dbg !6030
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6030
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6030
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !6039
  %tobool6 = icmp ne i32 %11, 0, !dbg !6039
  %lnot7 = xor i1 %tobool6, true, !dbg !6039
  %lnot9 = xor i1 %lnot7, true, !dbg !6039
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !6039
  %conv = sext i32 %lnot.ext10 to i64, !dbg !6039
  %tobool11 = icmp ne i64 %conv, 0, !dbg !6039
  br i1 %tobool11, label %if.then, label %if.end, !dbg !6030

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !6039

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !6041

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !6043

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !6041

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 941, i32 2305, i64 12) #5, !dbg !6045, !srcloc !6047
  br label %do.end14, !dbg !6045

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 239) #5, !dbg !6048, !srcloc !6050
  br label %do.body15, !dbg !6041

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !6051

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !6041

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !6041

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !6030
  %tobool18 = icmp ne i32 %12, 0, !dbg !6030
  %lnot19 = xor i1 %tobool18, true, !dbg !6030
  %lnot21 = xor i1 %lnot19, true, !dbg !6030
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !6030
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !6030
  store i64 %conv23, i64* %tmp, align 8, !dbg !6039
  %13 = load i64, i64* %tmp, align 8, !dbg !6030
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6053
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 13, !dbg !6055
  %15 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !6055
  %con_save_screen = getelementptr inbounds %struct.consw, %struct.consw* %15, i32 0, i32 19, !dbg !6056
  %16 = load void (%struct.vc_data*)*, void (%struct.vc_data*)** %con_save_screen, align 8, !dbg !6056
  %tobool24 = icmp ne void (%struct.vc_data*)* %16, null, !dbg !6053
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !6057

if.then25:                                        ; preds = %if.end
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6058
  %vc_sw26 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 13, !dbg !6059
  %18 = load %struct.consw*, %struct.consw** %vc_sw26, align 8, !dbg !6059
  %con_save_screen27 = getelementptr inbounds %struct.consw, %struct.consw* %18, i32 0, i32 19, !dbg !6060
  %19 = load void (%struct.vc_data*)*, void (%struct.vc_data*)** %con_save_screen27, align 8, !dbg !6060
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6061
  call void %19(%struct.vc_data* %20) #13, !dbg !6058
  br label %if.end28, !dbg !6058

if.end28:                                         ; preds = %if.then25, %if.end
  ret void, !dbg !6062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_origin(%struct.vc_data* %vc) #0 !dbg !6063 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !6064
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !6068
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !6070
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !6071
  %vc.addr = alloca %struct.vc_data*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !6072, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6074, metadata !DIExpression()), !dbg !6075
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6076
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !6076
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6077
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !6078
  %conv.i.i = trunc i64 %3 to i32, !dbg !6078
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !6079
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6080
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6080
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !6080
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6081
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6082
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !6082
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6082
  %tobool = icmp ne i32 %8, 0, !dbg !6075
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6075

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !6075
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6075
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !6075

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !6075
  %tobool3 = icmp ne i32 %9, 0, !dbg !6075
  %lnot = xor i1 %tobool3, true, !dbg !6075
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !6083
  %lnot4 = xor i1 %10, true, !dbg !6075
  %lnot5 = xor i1 %lnot4, true, !dbg !6075
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6075
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6075
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !6084
  %tobool6 = icmp ne i32 %11, 0, !dbg !6084
  %lnot7 = xor i1 %tobool6, true, !dbg !6084
  %lnot9 = xor i1 %lnot7, true, !dbg !6084
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !6084
  %conv = sext i32 %lnot.ext10 to i64, !dbg !6084
  %tobool11 = icmp ne i64 %conv, 0, !dbg !6084
  br i1 %tobool11, label %if.then, label %if.end, !dbg !6075

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !6084

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !6086

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !6088

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !6086

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 927, i32 2305, i64 12) #5, !dbg !6090, !srcloc !6092
  br label %do.end14, !dbg !6090

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 238) #5, !dbg !6093, !srcloc !6095
  br label %do.body15, !dbg !6086

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !6096

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !6086

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !6086

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !6075
  %tobool18 = icmp ne i32 %12, 0, !dbg !6075
  %lnot19 = xor i1 %tobool18, true, !dbg !6075
  %lnot21 = xor i1 %lnot19, true, !dbg !6075
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !6075
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !6075
  store i64 %conv23, i64* %tmp, align 8, !dbg !6084
  %13 = load i64, i64* %tmp, align 8, !dbg !6075
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6098
  %call24 = call zeroext i1 @con_is_visible(%struct.vc_data* %14) #13, !dbg !6100
  br i1 %call24, label %lor.lhs.false, label %if.then33, !dbg !6101

lor.lhs.false:                                    ; preds = %if.end
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6102
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 13, !dbg !6103
  %16 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !6103
  %con_set_origin = getelementptr inbounds %struct.consw, %struct.consw* %16, i32 0, i32 18, !dbg !6104
  %con_set_origin25 = bitcast {}** %con_set_origin to i32 (%struct.vc_data*)**, !dbg !6104
  %17 = load i32 (%struct.vc_data*)*, i32 (%struct.vc_data*)** %con_set_origin25, align 8, !dbg !6104
  %tobool26 = icmp ne i32 (%struct.vc_data*)* %17, null, !dbg !6102
  br i1 %tobool26, label %lor.lhs.false27, label %if.then33, !dbg !6105

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6106
  %vc_sw28 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 13, !dbg !6107
  %19 = load %struct.consw*, %struct.consw** %vc_sw28, align 8, !dbg !6107
  %con_set_origin29 = getelementptr inbounds %struct.consw, %struct.consw* %19, i32 0, i32 18, !dbg !6108
  %con_set_origin30 = bitcast {}** %con_set_origin29 to i32 (%struct.vc_data*)**, !dbg !6108
  %20 = load i32 (%struct.vc_data*)*, i32 (%struct.vc_data*)** %con_set_origin30, align 8, !dbg !6108
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6109
  %call31 = call i32 %20(%struct.vc_data* %21) #13, !dbg !6106
  %tobool32 = icmp ne i32 %call31, 0, !dbg !6106
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !6110

if.then33:                                        ; preds = %lor.lhs.false27, %lor.lhs.false, %if.end
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6111
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 14, !dbg !6112
  %23 = load i16*, i16** %vc_screenbuf, align 8, !dbg !6112
  %24 = ptrtoint i16* %23 to i64, !dbg !6113
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6114
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 8, !dbg !6115
  store i64 %24, i64* %vc_origin, align 8, !dbg !6116
  br label %if.end34, !dbg !6114

if.end34:                                         ; preds = %if.then33, %lor.lhs.false27
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6117
  %vc_origin35 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 8, !dbg !6118
  %27 = load i64, i64* %vc_origin35, align 8, !dbg !6118
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6119
  %vc_visible_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 10, !dbg !6120
  store i64 %27, i64* %vc_visible_origin, align 8, !dbg !6121
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6122
  %vc_origin36 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 8, !dbg !6123
  %30 = load i64, i64* %vc_origin36, align 8, !dbg !6123
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6124
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %31, i32 0, i32 15, !dbg !6125
  %32 = load i32, i32* %vc_screenbuf_size, align 8, !dbg !6125
  %conv37 = zext i32 %32 to i64, !dbg !6124
  %add = add i64 %30, %conv37, !dbg !6126
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6127
  %vc_scr_end = getelementptr inbounds %struct.vc_data, %struct.vc_data* %33, i32 0, i32 9, !dbg !6128
  store i64 %add, i64* %vc_scr_end, align 8, !dbg !6129
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6130
  %vc_origin38 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %34, i32 0, i32 8, !dbg !6131
  %35 = load i64, i64* %vc_origin38, align 8, !dbg !6131
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6132
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 6, !dbg !6133
  %37 = load i32, i32* %vc_size_row, align 4, !dbg !6133
  %38 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6134
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %38, i32 0, i32 1, !dbg !6135
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !6136
  %39 = load i32, i32* %y, align 4, !dbg !6136
  %mul = mul i32 %37, %39, !dbg !6137
  %conv39 = zext i32 %mul to i64, !dbg !6132
  %add40 = add i64 %35, %conv39, !dbg !6138
  %40 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6139
  %state41 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %40, i32 0, i32 1, !dbg !6140
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state41, i32 0, i32 0, !dbg !6141
  %41 = load i32, i32* %x, align 8, !dbg !6141
  %mul42 = mul i32 2, %41, !dbg !6142
  %conv43 = zext i32 %mul42 to i64, !dbg !6143
  %add44 = add i64 %add40, %conv43, !dbg !6144
  %42 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6145
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 25, !dbg !6146
  store i64 %add44, i64* %vc_pos, align 8, !dbg !6147
  ret void, !dbg !6148
}

; Function Attrs: noredzone
declare dso_local void @sysfs_notify(%struct.kobject*, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_palette(%struct.vc_data* %vc) #0 !dbg !6149 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !6150
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !6154
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !6156
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !6157
  %vc.addr = alloca %struct.vc_data*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !6158, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6160, metadata !DIExpression()), !dbg !6161
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6162
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !6162
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6163
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !6164
  %conv.i.i = trunc i64 %3 to i32, !dbg !6164
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !6165
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6166
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6166
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !6166
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6167
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6168
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !6168
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6168
  %tobool = icmp ne i32 %8, 0, !dbg !6161
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6161

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !6161
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6161
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !6161

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !6161
  %tobool3 = icmp ne i32 %9, 0, !dbg !6161
  %lnot = xor i1 %tobool3, true, !dbg !6161
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !6169
  %lnot4 = xor i1 %10, true, !dbg !6161
  %lnot5 = xor i1 %lnot4, true, !dbg !6161
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6161
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6161
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !6170
  %tobool6 = icmp ne i32 %11, 0, !dbg !6170
  %lnot7 = xor i1 %tobool6, true, !dbg !6170
  %lnot9 = xor i1 %lnot7, true, !dbg !6170
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !6170
  %conv = sext i32 %lnot.ext10 to i64, !dbg !6170
  %tobool11 = icmp ne i64 %conv, 0, !dbg !6170
  br i1 %tobool11, label %if.then, label %if.end, !dbg !6161

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !6170

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !6172

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !6174

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !6172

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 4473, i32 2305, i64 12) #5, !dbg !6176, !srcloc !6178
  br label %do.end14, !dbg !6176

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 291) #5, !dbg !6179, !srcloc !6181
  br label %do.body15, !dbg !6172

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !6182

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !6172

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !6172

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !6161
  %tobool18 = icmp ne i32 %12, 0, !dbg !6161
  %lnot19 = xor i1 %tobool18, true, !dbg !6161
  %lnot21 = xor i1 %lnot19, true, !dbg !6161
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !6161
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !6161
  store i64 %conv23, i64* %tmp, align 8, !dbg !6170
  %13 = load i64, i64* %tmp, align 8, !dbg !6161
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6184
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 16, !dbg !6186
  %15 = load i8, i8* %vc_mode, align 4, !dbg !6186
  %conv24 = zext i8 %15 to i32, !dbg !6184
  %cmp = icmp ne i32 %conv24, 1, !dbg !6187
  br i1 %cmp, label %land.lhs.true26, label %if.end31, !dbg !6188

land.lhs.true26:                                  ; preds = %if.end
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6189
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 13, !dbg !6190
  %17 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !6190
  %con_set_palette = getelementptr inbounds %struct.consw, %struct.consw* %17, i32 0, i32 16, !dbg !6191
  %18 = load void (%struct.vc_data*, i8*)*, void (%struct.vc_data*, i8*)** %con_set_palette, align 8, !dbg !6191
  %tobool27 = icmp ne void (%struct.vc_data*, i8*)* %18, null, !dbg !6189
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !6192

if.then28:                                        ; preds = %land.lhs.true26
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6193
  %vc_sw29 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 13, !dbg !6194
  %20 = load %struct.consw*, %struct.consw** %vc_sw29, align 8, !dbg !6194
  %con_set_palette30 = getelementptr inbounds %struct.consw, %struct.consw* %20, i32 0, i32 16, !dbg !6195
  %21 = load void (%struct.vc_data*, i8*)*, void (%struct.vc_data*, i8*)** %con_set_palette30, align 8, !dbg !6195
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6196
  call void %21(%struct.vc_data* %22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @color_table, i64 0, i64 0)) #13, !dbg !6193
  br label %if.end31, !dbg !6193

if.end31:                                         ; preds = %if.then28, %land.lhs.true26, %if.end
  ret void, !dbg !6197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @update_attr(%struct.vc_data* %vc) #0 !dbg !6198 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6201
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6202
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 1, !dbg !6203
  %color = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 2, !dbg !6204
  %2 = load i8, i8* %color, align 8, !dbg !6204
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6205
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 1, !dbg !6206
  %intensity = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 5, !dbg !6207
  %4 = load i32, i32* %intensity, align 4, !dbg !6207
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6208
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 1, !dbg !6209
  %blink = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 8, !dbg !6210
  %6 = load i8, i8* %blink, align 2, !dbg !6210
  %tobool = trunc i8 %6 to i1, !dbg !6210
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6211
  %state3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !6212
  %underline = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state3, i32 0, i32 7, !dbg !6213
  %8 = load i8, i8* %underline, align 1, !dbg !6213
  %tobool4 = trunc i8 %8 to i1, !dbg !6213
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6214
  %state5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 1, !dbg !6215
  %reverse = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state5, i32 0, i32 9, !dbg !6216
  %10 = load i8, i8* %reverse, align 1, !dbg !6216
  %tobool6 = trunc i8 %10 to i1, !dbg !6216
  %conv = zext i1 %tobool6 to i32, !dbg !6214
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6217
  %vc_decscnm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 36, !dbg !6218
  %bf.load = load i16, i16* %vc_decscnm, align 8, !dbg !6218
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !6218
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6218
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6218
  %xor = xor i32 %conv, %bf.cast, !dbg !6219
  %tobool7 = icmp ne i32 %xor, 0, !dbg !6214
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6220
  %state8 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 1, !dbg !6221
  %italic = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state8, i32 0, i32 6, !dbg !6222
  %13 = load i8, i8* %italic, align 8, !dbg !6222
  %tobool9 = trunc i8 %13 to i1, !dbg !6222
  %call = call zeroext i8 @build_attr(%struct.vc_data* %0, i8 zeroext %2, i32 %4, i1 zeroext %tobool, i1 zeroext %tobool4, i1 zeroext %tobool7, i1 zeroext %tobool9) #13, !dbg !6223
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6224
  %vc_attr = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 17, !dbg !6225
  store i8 %call, i8* %vc_attr, align 1, !dbg !6226
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6227
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6228
  %state10 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 1, !dbg !6229
  %color11 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state10, i32 0, i32 2, !dbg !6230
  %17 = load i8, i8* %color11, align 8, !dbg !6230
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6231
  %state12 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 1, !dbg !6232
  %blink13 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state12, i32 0, i32 8, !dbg !6233
  %19 = load i8, i8* %blink13, align 2, !dbg !6233
  %tobool14 = trunc i8 %19 to i1, !dbg !6233
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6234
  %vc_decscnm15 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 36, !dbg !6235
  %bf.load16 = load i16, i16* %vc_decscnm15, align 8, !dbg !6235
  %bf.lshr17 = lshr i16 %bf.load16, 2, !dbg !6235
  %bf.clear18 = and i16 %bf.lshr17, 1, !dbg !6235
  %bf.cast19 = zext i16 %bf.clear18 to i32, !dbg !6235
  %tobool20 = icmp ne i32 %bf.cast19, 0, !dbg !6234
  %call21 = call zeroext i8 @build_attr(%struct.vc_data* %15, i8 zeroext %17, i32 1, i1 zeroext %tobool14, i1 zeroext false, i1 zeroext %tobool20, i1 zeroext false) #13, !dbg !6236
  %conv22 = zext i8 %call21 to i32, !dbg !6236
  %shl = shl i32 %conv22, 8, !dbg !6237
  %or = or i32 32, %shl, !dbg !6238
  %conv23 = trunc i32 %or to i16, !dbg !6239
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6240
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 28, !dbg !6241
  store i16 %conv23, i16* %vc_video_erase_char, align 8, !dbg !6242
  ret void, !dbg !6243
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_leds() #0 !dbg !6244 {
entry:
  call void @tasklet_schedule(%struct.tasklet_struct* @keyboard_tasklet) #13, !dbg !6246
  ret void, !dbg !6247
}

; Function Attrs: noredzone
declare dso_local void @compute_shiftstate() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vc_cons_allocated(i32 %i) #0 !dbg !6248 {
entry:
  %i.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6251, metadata !DIExpression()), !dbg !6252
  %0 = load i32, i32* %i.addr, align 4, !dbg !6253
  %cmp = icmp ult i32 %0, 63, !dbg !6254
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6255

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %i.addr, align 4, !dbg !6256
  %idxprom = zext i32 %1 to i64, !dbg !6257
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !6257
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !6258
  %2 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !6258
  %tobool = icmp ne %struct.vc_data* %2, null, !dbg !6255
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !6259
  %land.ext = zext i1 %3 to i32, !dbg !6255
  ret i32 %land.ext, !dbg !6260
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vc_allocate(i32 %currcons) #0 !dbg !6261 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !6262
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !6266
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !6268
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !6269
  %retval = alloca i32, align 4
  %currcons.addr = alloca i32, align 4
  %param = alloca %struct.vt_notifier_param, align 8
  %vc = alloca %struct.vc_data*, align 8
  %err = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store i32 %currcons, i32* %currcons.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %currcons.addr, metadata !6270, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.declare(metadata %struct.vt_notifier_param* %param, metadata !6272, metadata !DIExpression()), !dbg !6273
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !6274, metadata !DIExpression()), !dbg !6275
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6276, metadata !DIExpression()), !dbg !6277
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6278, metadata !DIExpression()), !dbg !6279
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6280
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !6280
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6281
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !6282
  %conv.i.i = trunc i64 %3 to i32, !dbg !6282
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !6283
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6284
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6284
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !6284
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6285
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6286
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !6286
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6286
  %tobool = icmp ne i32 %8, 0, !dbg !6279
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6279

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !6279
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6279
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !6279

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !6279
  %tobool3 = icmp ne i32 %9, 0, !dbg !6279
  %lnot = xor i1 %tobool3, true, !dbg !6279
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !6287
  %lnot4 = xor i1 %10, true, !dbg !6279
  %lnot5 = xor i1 %lnot4, true, !dbg !6279
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6279
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6279
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !6288
  %tobool6 = icmp ne i32 %11, 0, !dbg !6288
  %lnot7 = xor i1 %tobool6, true, !dbg !6288
  %lnot9 = xor i1 %lnot7, true, !dbg !6288
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !6288
  %conv = sext i32 %lnot.ext10 to i64, !dbg !6288
  %tobool11 = icmp ne i64 %conv, 0, !dbg !6288
  br i1 %tobool11, label %if.then, label %if.end, !dbg !6279

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !6288

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !6290

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !6292

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !6290

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 1115, i32 2305, i64 12) #5, !dbg !6294, !srcloc !6296
  br label %do.end14, !dbg !6294

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 243) #5, !dbg !6297, !srcloc !6299
  br label %do.body15, !dbg !6290

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !6300

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !6290

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !6290

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !6279
  %tobool18 = icmp ne i32 %12, 0, !dbg !6279
  %lnot19 = xor i1 %tobool18, true, !dbg !6279
  %lnot21 = xor i1 %lnot19, true, !dbg !6279
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !6279
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !6279
  store i64 %conv23, i64* %tmp, align 8, !dbg !6288
  %13 = load i64, i64* %tmp, align 8, !dbg !6279
  %14 = load i32, i32* %currcons.addr, align 4, !dbg !6302
  %cmp = icmp uge i32 %14, 63, !dbg !6304
  br i1 %cmp, label %if.then25, label %if.end26, !dbg !6305

if.then25:                                        ; preds = %if.end
  store i32 -6, i32* %retval, align 4, !dbg !6306
  br label %return, !dbg !6306

if.end26:                                         ; preds = %if.end
  %15 = load i32, i32* %currcons.addr, align 4, !dbg !6307
  %idxprom = zext i32 %15 to i64, !dbg !6309
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !6309
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !6310
  %16 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !6310
  %tobool27 = icmp ne %struct.vc_data* %16, null, !dbg !6309
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !6311

if.then28:                                        ; preds = %if.end26
  store i32 0, i32* %retval, align 4, !dbg !6312
  br label %return, !dbg !6312

if.end29:                                         ; preds = %if.end26
  %call30 = call i8* @kzalloc(i64 744, i32 3264) #13, !dbg !6313
  %17 = bitcast i8* %call30 to %struct.vc_data*, !dbg !6313
  store %struct.vc_data* %17, %struct.vc_data** %vc, align 8, !dbg !6314
  %vc31 = getelementptr inbounds %struct.vt_notifier_param, %struct.vt_notifier_param* %param, i32 0, i32 0, !dbg !6315
  store %struct.vc_data* %17, %struct.vc_data** %vc31, align 8, !dbg !6316
  %18 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6317
  %tobool32 = icmp ne %struct.vc_data* %18, null, !dbg !6317
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !6319

if.then33:                                        ; preds = %if.end29
  store i32 -12, i32* %retval, align 4, !dbg !6320
  br label %return, !dbg !6320

if.end34:                                         ; preds = %if.end29
  %19 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6321
  %20 = load i32, i32* %currcons.addr, align 4, !dbg !6322
  %idxprom35 = zext i32 %20 to i64, !dbg !6323
  %arrayidx36 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom35, !dbg !6323
  %d37 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx36, i32 0, i32 0, !dbg !6324
  store %struct.vc_data* %19, %struct.vc_data** %d37, align 8, !dbg !6325
  %21 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6326
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 0, !dbg !6327
  call void @tty_port_init(%struct.tty_port* %port) #13, !dbg !6328
  %22 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6329
  %port38 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 0, !dbg !6330
  %ops = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port38, i32 0, i32 3, !dbg !6331
  store %struct.tty_port_operations* @vc_port_ops, %struct.tty_port_operations** %ops, align 8, !dbg !6332
  br label %do.body39, !dbg !6333

do.body39:                                        ; preds = %if.end34
  %23 = load i32, i32* %currcons.addr, align 4, !dbg !6334
  %idxprom40 = zext i32 %23 to i64, !dbg !6334
  %arrayidx41 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom40, !dbg !6334
  %SAK_work = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx41, i32 0, i32 1, !dbg !6334
  call void @__init_work(%struct.work_struct* %SAK_work, i32 0) #13, !dbg !6334
  %24 = load i32, i32* %currcons.addr, align 4, !dbg !6334
  %idxprom42 = zext i32 %24 to i64, !dbg !6334
  %arrayidx43 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom42, !dbg !6334
  %SAK_work44 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx43, i32 0, i32 1, !dbg !6334
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %SAK_work44, i32 0, i32 0, !dbg !6334
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !6334
  store i64 68719476704, i64* %counter, align 8, !dbg !6334
  %25 = bitcast %struct.atomic64_t* %data to i8*, !dbg !6334
  %26 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !6334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 8, i1 false), !dbg !6334
  %27 = load i32, i32* %currcons.addr, align 4, !dbg !6334
  %idxprom45 = zext i32 %27 to i64, !dbg !6334
  %arrayidx46 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom45, !dbg !6334
  %SAK_work47 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx46, i32 0, i32 1, !dbg !6334
  %entry48 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %SAK_work47, i32 0, i32 1, !dbg !6334
  call void @INIT_LIST_HEAD(%struct.list_head* %entry48) #13, !dbg !6334
  %28 = load i32, i32* %currcons.addr, align 4, !dbg !6334
  %idxprom49 = zext i32 %28 to i64, !dbg !6334
  %arrayidx50 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom49, !dbg !6334
  %SAK_work51 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx50, i32 0, i32 1, !dbg !6334
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %SAK_work51, i32 0, i32 2, !dbg !6334
  store void (%struct.work_struct*)* @vc_SAK, void (%struct.work_struct*)** %func, align 8, !dbg !6334
  br label %do.end52, !dbg !6334

do.end52:                                         ; preds = %do.body39
  %29 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6336
  %30 = load i32, i32* %currcons.addr, align 4, !dbg !6337
  call void @visual_init(%struct.vc_data* %29, i32 %30, i32 1) #13, !dbg !6338
  %31 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6339
  %vc_uni_pagedir_loc = getelementptr inbounds %struct.vc_data, %struct.vc_data* %31, i32 0, i32 48, !dbg !6341
  %32 = load %struct.uni_pagedir**, %struct.uni_pagedir*** %vc_uni_pagedir_loc, align 8, !dbg !6341
  %33 = load %struct.uni_pagedir*, %struct.uni_pagedir** %32, align 8, !dbg !6342
  %tobool53 = icmp ne %struct.uni_pagedir* %33, null, !dbg !6342
  br i1 %tobool53, label %if.end56, label %if.then54, !dbg !6343

if.then54:                                        ; preds = %do.end52
  %34 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6344
  %call55 = call i32 @con_set_default_unimap(%struct.vc_data* %34) #13, !dbg !6345
  br label %if.end56, !dbg !6345

if.end56:                                         ; preds = %if.then54, %do.end52
  store i32 -22, i32* %err, align 4, !dbg !6346
  %35 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6347
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 4, !dbg !6349
  %36 = load i32, i32* %vc_cols, align 4, !dbg !6349
  %cmp57 = icmp ugt i32 %36, 32767, !dbg !6350
  br i1 %cmp57, label %if.then68, label %lor.lhs.false, !dbg !6351

lor.lhs.false:                                    ; preds = %if.end56
  %37 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6352
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 5, !dbg !6353
  %38 = load i32, i32* %vc_rows, align 8, !dbg !6353
  %cmp59 = icmp ugt i32 %38, 32767, !dbg !6354
  br i1 %cmp59, label %if.then68, label %lor.lhs.false61, !dbg !6355

lor.lhs.false61:                                  ; preds = %lor.lhs.false
  %39 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6356
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %39, i32 0, i32 15, !dbg !6357
  %40 = load i32, i32* %vc_screenbuf_size, align 8, !dbg !6357
  %conv62 = zext i32 %40 to i64, !dbg !6356
  %cmp63 = icmp ugt i64 %conv62, 4194304, !dbg !6358
  br i1 %cmp63, label %if.then68, label %lor.lhs.false65, !dbg !6359

lor.lhs.false65:                                  ; preds = %lor.lhs.false61
  %41 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6360
  %vc_screenbuf_size66 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %41, i32 0, i32 15, !dbg !6361
  %42 = load i32, i32* %vc_screenbuf_size66, align 8, !dbg !6361
  %tobool67 = icmp ne i32 %42, 0, !dbg !6360
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !6362

if.then68:                                        ; preds = %lor.lhs.false65, %lor.lhs.false61, %lor.lhs.false, %if.end56
  br label %err_free, !dbg !6363

if.end69:                                         ; preds = %lor.lhs.false65
  store i32 -12, i32* %err, align 4, !dbg !6364
  %43 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6365
  %vc_screenbuf_size70 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %43, i32 0, i32 15, !dbg !6366
  %44 = load i32, i32* %vc_screenbuf_size70, align 8, !dbg !6366
  %conv71 = zext i32 %44 to i64, !dbg !6365
  %call72 = call i8* @kzalloc(i64 %conv71, i32 3264) #13, !dbg !6367
  %45 = bitcast i8* %call72 to i16*, !dbg !6367
  %46 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6368
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %46, i32 0, i32 14, !dbg !6369
  store i16* %45, i16** %vc_screenbuf, align 8, !dbg !6370
  %47 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6371
  %vc_screenbuf73 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %47, i32 0, i32 14, !dbg !6373
  %48 = load i16*, i16** %vc_screenbuf73, align 8, !dbg !6373
  %tobool74 = icmp ne i16* %48, null, !dbg !6371
  br i1 %tobool74, label %if.end76, label %if.then75, !dbg !6374

if.then75:                                        ; preds = %if.end69
  br label %err_free, !dbg !6375

if.end76:                                         ; preds = %if.end69
  %49 = load i32, i32* @global_cursor_default, align 4, !dbg !6376
  %cmp77 = icmp eq i32 %49, -1, !dbg !6378
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !6379

if.then79:                                        ; preds = %if.end76
  store i32 1, i32* @global_cursor_default, align 4, !dbg !6380
  br label %if.end80, !dbg !6381

if.end80:                                         ; preds = %if.then79, %if.end76
  %50 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6382
  %51 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6383
  %vc_rows81 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %51, i32 0, i32 5, !dbg !6384
  %52 = load i32, i32* %vc_rows81, align 8, !dbg !6384
  %53 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6385
  %vc_cols82 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %53, i32 0, i32 4, !dbg !6386
  %54 = load i32, i32* %vc_cols82, align 4, !dbg !6386
  call void @vc_init(%struct.vc_data* %50, i32 %52, i32 %54, i32 1) #13, !dbg !6387
  %55 = load i32, i32* %currcons.addr, align 4, !dbg !6388
  call void @vcs_make_sysfs(i32 %55) #13, !dbg !6389
  %56 = bitcast %struct.vt_notifier_param* %param to i8*, !dbg !6390
  %call83 = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head* @vt_notifier_list, i64 1, i8* %56) #13, !dbg !6391
  store i32 0, i32* %retval, align 4, !dbg !6392
  br label %return, !dbg !6392

err_free:                                         ; preds = %if.then75, %if.then68
  call void @llvm.dbg.label(metadata !6393), !dbg !6394
  %57 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6395
  call void @visual_deinit(%struct.vc_data* %57) #13, !dbg !6396
  %58 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !6397
  %59 = bitcast %struct.vc_data* %58 to i8*, !dbg !6397
  call void @kfree(i8* %59) #13, !dbg !6398
  %60 = load i32, i32* %currcons.addr, align 4, !dbg !6399
  %idxprom84 = zext i32 %60 to i64, !dbg !6400
  %arrayidx85 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom84, !dbg !6400
  %d86 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx85, i32 0, i32 0, !dbg !6401
  store %struct.vc_data* null, %struct.vc_data** %d86, align 8, !dbg !6402
  %61 = load i32, i32* %err, align 4, !dbg !6403
  store i32 %61, i32* %retval, align 4, !dbg !6404
  br label %return, !dbg !6404

return:                                           ; preds = %err_free, %if.end80, %if.then33, %if.then28, %if.then25
  %62 = load i32, i32* %retval, align 4, !dbg !6405
  ret i32 %62, !dbg !6405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !6406 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6409, metadata !DIExpression()), !dbg !6413
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6419, metadata !DIExpression()), !dbg !6420
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6421, metadata !DIExpression()), !dbg !6422
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6423, metadata !DIExpression()), !dbg !6424
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6425, metadata !DIExpression()), !dbg !6429
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6431, metadata !DIExpression()), !dbg !6435
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6437, metadata !DIExpression()), !dbg !6441
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6446, metadata !DIExpression()), !dbg !6447
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6448, metadata !DIExpression()), !dbg !6449
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6450, metadata !DIExpression()), !dbg !6451
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6452, metadata !DIExpression()), !dbg !6453
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6454, metadata !DIExpression()), !dbg !6455
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6456, metadata !DIExpression()), !dbg !6457
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6458, metadata !DIExpression()), !dbg !6459
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6460, metadata !DIExpression()), !dbg !6461
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6462, metadata !DIExpression()), !dbg !6463
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  %0 = load i64, i64* %size.addr, align 8, !dbg !6466
  %1 = load i32, i32* %flags.addr, align 4, !dbg !6467
  %or = or i32 %1, 256, !dbg !6468
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !6469
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #5, !dbg !6470
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !6471

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6472
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !6473
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6474

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !6475
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !6476
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6477
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !6478
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6455
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !6479
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6480
  %10 = load i32, i32* %order.i.i, align 4, !dbg !6481
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6482
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6483
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6484
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !6485
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6485
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6485
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6485
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !6485
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6486
  br label %kmalloc.exit, !dbg !6486

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !6487
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6488
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !6488
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6490

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6491
  br label %kmalloc_index.exit.i, !dbg !6491

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6492
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !6494
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6495

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6496
  br label %kmalloc_index.exit.i, !dbg !6496

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6497
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !6499
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6500

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6501
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !6502
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6503

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6504
  br label %kmalloc_index.exit.i, !dbg !6504

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6505
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !6507
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6508

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6509
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !6510
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6511

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6512
  br label %kmalloc_index.exit.i, !dbg !6512

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6513
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !6515
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6516

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6517
  br label %kmalloc_index.exit.i, !dbg !6517

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6518
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !6520
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6521

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6522
  br label %kmalloc_index.exit.i, !dbg !6522

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6523
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !6525
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6526

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6527
  br label %kmalloc_index.exit.i, !dbg !6527

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6528
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !6530
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6531

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6532
  br label %kmalloc_index.exit.i, !dbg !6532

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6533
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !6535
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6536

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6537
  br label %kmalloc_index.exit.i, !dbg !6537

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6538
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !6540
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6541

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6542
  br label %kmalloc_index.exit.i, !dbg !6542

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6543
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !6545
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6546

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6547
  br label %kmalloc_index.exit.i, !dbg !6547

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6548
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !6550
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6551

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6552
  br label %kmalloc_index.exit.i, !dbg !6552

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6553
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !6555
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6556

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6557
  br label %kmalloc_index.exit.i, !dbg !6557

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6558
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !6560
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6561

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6562
  br label %kmalloc_index.exit.i, !dbg !6562

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6563
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !6565
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6566

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6567
  br label %kmalloc_index.exit.i, !dbg !6567

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6568
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !6570
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6571

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6572
  br label %kmalloc_index.exit.i, !dbg !6572

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6573
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !6575
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6576

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6577
  br label %kmalloc_index.exit.i, !dbg !6577

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6578
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !6580
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6581

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6582
  br label %kmalloc_index.exit.i, !dbg !6582

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6583
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !6585
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6586

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6587
  br label %kmalloc_index.exit.i, !dbg !6587

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6588
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !6590
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6591

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6592
  br label %kmalloc_index.exit.i, !dbg !6592

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6593
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !6595
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6596

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6597
  br label %kmalloc_index.exit.i, !dbg !6597

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6598
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !6600
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6601

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6602
  br label %kmalloc_index.exit.i, !dbg !6602

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6603
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !6605
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6606

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6607
  br label %kmalloc_index.exit.i, !dbg !6607

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6608
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !6610
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6611

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6612
  br label %kmalloc_index.exit.i, !dbg !6612

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6613
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !6615
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6616

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6617
  br label %kmalloc_index.exit.i, !dbg !6617

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6618
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !6620
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6621

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6622
  br label %kmalloc_index.exit.i, !dbg !6622

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6623
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !6625
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6626

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6627
  br label %kmalloc_index.exit.i, !dbg !6627

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6628
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !6630
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6631

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6632
  br label %kmalloc_index.exit.i, !dbg !6632

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !6633, !srcloc !6636
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 204) #5, !dbg !6637, !srcloc !6640
  unreachable, !dbg !6641

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !6642
  store i32 %45, i32* %index.i, align 4, !dbg !6643
  %46 = load i32, i32* %index.i, align 4, !dbg !6644
  %tobool.i = icmp ne i32 %46, 0, !dbg !6644
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6646

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6647
  br label %kmalloc.exit, !dbg !6647

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !6648
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6649
  %and.i.i = and i32 %48, 17, !dbg !6649
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6649
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6649
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6649
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6649
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6651

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6652
  br label %kmalloc_type.exit.i, !dbg !6652

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6653
  %and2.i.i = and i32 %49, 1, !dbg !6654
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6653
  %50 = zext i1 %tobool3.i.i to i64, !dbg !6653
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6653
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6655
  br label %kmalloc_type.exit.i, !dbg !6655

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !6656
  %idxprom.i = zext i32 %51 to i64, !dbg !6657
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6657
  %52 = load i32, i32* %index.i, align 4, !dbg !6658
  %idxprom6.i = zext i32 %52 to i64, !dbg !6657
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6657
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6657
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !6659
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !6660
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6661
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6662
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !6663
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6663
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6663
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6663
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !6663
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6424
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6664
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !6665
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6666
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6667
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !6668
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6669
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !6670
  store i8* %62, i8** %retval.i, align 8, !dbg !6671
  br label %kmalloc.exit, !dbg !6671

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !6672
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !6673
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !6674
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6674
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6674
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6674
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !6674
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6675
  br label %kmalloc.exit, !dbg !6675

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !6676
  ret i8* %65, !dbg !6677
}

; Function Attrs: noredzone
declare dso_local void @tty_port_init(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !6678 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !6681, metadata !DIExpression()), !dbg !6682
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !6683, metadata !DIExpression()), !dbg !6684
  ret void, !dbg !6685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !6686 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !6690, metadata !DIExpression()), !dbg !6691
  br label %do.body, !dbg !6692

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6693

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !6695

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !6693

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6697
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6697
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6697
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !6697
  br label %do.end3, !dbg !6697

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !6693

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6699
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6700
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !6701
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !6702
  ret void, !dbg !6703
}

; Function Attrs: noredzone
declare dso_local void @vc_SAK(%struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @visual_init(%struct.vc_data* %vc, i32 %num, i32 %init) #0 !dbg !6704 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %num.addr = alloca i32, align 4
  %init.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !6707, metadata !DIExpression()), !dbg !6708
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !6709, metadata !DIExpression()), !dbg !6710
  store i32 %init, i32* %init.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %init.addr, metadata !6711, metadata !DIExpression()), !dbg !6712
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6713
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 13, !dbg !6715
  %1 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !6715
  %tobool = icmp ne %struct.consw* %1, null, !dbg !6713
  br i1 %tobool, label %if.then, label %if.end, !dbg !6716

if.then:                                          ; preds = %entry
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6717
  %vc_sw1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 13, !dbg !6718
  %3 = load %struct.consw*, %struct.consw** %vc_sw1, align 8, !dbg !6718
  %owner = getelementptr inbounds %struct.consw, %struct.consw* %3, i32 0, i32 0, !dbg !6719
  %4 = load %struct.module*, %struct.module** %owner, align 8, !dbg !6719
  call void @module_put(%struct.module* %4) #13, !dbg !6720
  br label %if.end, !dbg !6720

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.consw*, %struct.consw** @conswitchp, align 8, !dbg !6721
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6722
  %vc_sw2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 13, !dbg !6723
  store %struct.consw* %5, %struct.consw** %vc_sw2, align 8, !dbg !6724
  %7 = load i32, i32* %num.addr, align 4, !dbg !6725
  %idxprom = sext i32 %7 to i64, !dbg !6727
  %arrayidx = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom, !dbg !6727
  %8 = load %struct.consw*, %struct.consw** %arrayidx, align 8, !dbg !6727
  %tobool3 = icmp ne %struct.consw* %8, null, !dbg !6727
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !6728

if.then4:                                         ; preds = %if.end
  %9 = load i32, i32* %num.addr, align 4, !dbg !6729
  %idxprom5 = sext i32 %9 to i64, !dbg !6730
  %arrayidx6 = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom5, !dbg !6730
  %10 = load %struct.consw*, %struct.consw** %arrayidx6, align 8, !dbg !6730
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6731
  %vc_sw7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 13, !dbg !6732
  store %struct.consw* %10, %struct.consw** %vc_sw7, align 8, !dbg !6733
  br label %if.end8, !dbg !6731

if.end8:                                          ; preds = %if.then4, %if.end
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6734
  %vc_sw9 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 13, !dbg !6735
  %13 = load %struct.consw*, %struct.consw** %vc_sw9, align 8, !dbg !6735
  %owner10 = getelementptr inbounds %struct.consw, %struct.consw* %13, i32 0, i32 0, !dbg !6736
  %14 = load %struct.module*, %struct.module** %owner10, align 8, !dbg !6736
  call void @__module_get(%struct.module* %14) #13, !dbg !6737
  %15 = load i32, i32* %num.addr, align 4, !dbg !6738
  %conv = trunc i32 %15 to i16, !dbg !6738
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6739
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 3, !dbg !6740
  store i16 %conv, i16* %vc_num, align 8, !dbg !6741
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6742
  %vc_display_fg = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 46, !dbg !6743
  store %struct.vc_data** @master_display_fg, %struct.vc_data*** %vc_display_fg, align 8, !dbg !6744
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6745
  %vc_uni_pagedir_loc = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 48, !dbg !6747
  %19 = load %struct.uni_pagedir**, %struct.uni_pagedir*** %vc_uni_pagedir_loc, align 8, !dbg !6747
  %tobool11 = icmp ne %struct.uni_pagedir** %19, null, !dbg !6745
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !6748

if.then12:                                        ; preds = %if.end8
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6749
  call void @con_free_unimap(%struct.vc_data* %20) #13, !dbg !6750
  br label %if.end13, !dbg !6750

if.end13:                                         ; preds = %if.then12, %if.end8
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6751
  %vc_uni_pagedir = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 47, !dbg !6752
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6753
  %vc_uni_pagedir_loc14 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 48, !dbg !6754
  store %struct.uni_pagedir** %vc_uni_pagedir, %struct.uni_pagedir*** %vc_uni_pagedir_loc14, align 8, !dbg !6755
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6756
  %vc_uni_pagedir15 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 47, !dbg !6757
  store %struct.uni_pagedir* null, %struct.uni_pagedir** %vc_uni_pagedir15, align 8, !dbg !6758
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6759
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %24, i32 0, i32 26, !dbg !6760
  store i16 0, i16* %vc_hi_font_mask, align 8, !dbg !6761
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6762
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 23, !dbg !6763
  store i16 0, i16* %vc_complement_mask, align 8, !dbg !6764
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6765
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 36, !dbg !6766
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !6767
  %bf.clear = and i16 %bf.load, -2049, !dbg !6767
  store i16 %bf.clear, i16* %vc_can_do_color, align 8, !dbg !6767
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6768
  %vc_cur_blink_ms = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 45, !dbg !6769
  store i16 200, i16* %vc_cur_blink_ms, align 4, !dbg !6770
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6771
  %vc_sw16 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 13, !dbg !6772
  %29 = load %struct.consw*, %struct.consw** %vc_sw16, align 8, !dbg !6772
  %con_init = getelementptr inbounds %struct.consw, %struct.consw* %29, i32 0, i32 2, !dbg !6773
  %30 = load void (%struct.vc_data*, i32)*, void (%struct.vc_data*, i32)** %con_init, align 8, !dbg !6773
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6774
  %32 = load i32, i32* %init.addr, align 4, !dbg !6775
  call void %30(%struct.vc_data* %31, i32 %32) #13, !dbg !6771
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6776
  %vc_complement_mask17 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %33, i32 0, i32 23, !dbg !6778
  %34 = load i16, i16* %vc_complement_mask17, align 8, !dbg !6778
  %tobool18 = icmp ne i16 %34, 0, !dbg !6776
  br i1 %tobool18, label %if.end26, label %if.then19, !dbg !6779

if.then19:                                        ; preds = %if.end13
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6780
  %vc_can_do_color20 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 36, !dbg !6781
  %bf.load21 = load i16, i16* %vc_can_do_color20, align 8, !dbg !6781
  %bf.lshr = lshr i16 %bf.load21, 11, !dbg !6781
  %bf.clear22 = and i16 %bf.lshr, 1, !dbg !6781
  %bf.cast = zext i16 %bf.clear22 to i32, !dbg !6781
  %tobool23 = icmp ne i32 %bf.cast, 0, !dbg !6780
  %36 = zext i1 %tobool23 to i64, !dbg !6780
  %cond = select i1 %tobool23, i32 30464, i32 2048, !dbg !6780
  %conv24 = trunc i32 %cond to i16, !dbg !6780
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6782
  %vc_complement_mask25 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 23, !dbg !6783
  store i16 %conv24, i16* %vc_complement_mask25, align 8, !dbg !6784
  br label %if.end26, !dbg !6782

if.end26:                                         ; preds = %if.then19, %if.end13
  %38 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6785
  %vc_complement_mask27 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %38, i32 0, i32 23, !dbg !6786
  %39 = load i16, i16* %vc_complement_mask27, align 8, !dbg !6786
  %40 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6787
  %vc_s_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %40, i32 0, i32 24, !dbg !6788
  store i16 %39, i16* %vc_s_complement_mask, align 2, !dbg !6789
  %41 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6790
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %41, i32 0, i32 4, !dbg !6791
  %42 = load i32, i32* %vc_cols, align 4, !dbg !6791
  %shl = shl i32 %42, 1, !dbg !6792
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6793
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %43, i32 0, i32 6, !dbg !6794
  store i32 %shl, i32* %vc_size_row, align 4, !dbg !6795
  %44 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6796
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %44, i32 0, i32 5, !dbg !6797
  %45 = load i32, i32* %vc_rows, align 8, !dbg !6797
  %46 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6798
  %vc_size_row28 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %46, i32 0, i32 6, !dbg !6799
  %47 = load i32, i32* %vc_size_row28, align 4, !dbg !6799
  %mul = mul i32 %45, %47, !dbg !6800
  %48 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6801
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %48, i32 0, i32 15, !dbg !6802
  store i32 %mul, i32* %vc_screenbuf_size, align 8, !dbg !6803
  ret void, !dbg !6804
}

; Function Attrs: noredzone
declare dso_local i32 @con_set_default_unimap(%struct.vc_data*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_init(%struct.vc_data* %vc, i32 %rows, i32 %cols, i32 %do_clear) #0 !dbg !4696 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %rows.addr = alloca i32, align 4
  %cols.addr = alloca i32, align 4
  %do_clear.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !6805, metadata !DIExpression()), !dbg !6806
  store i32 %rows, i32* %rows.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rows.addr, metadata !6807, metadata !DIExpression()), !dbg !6808
  store i32 %cols, i32* %cols.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cols.addr, metadata !6809, metadata !DIExpression()), !dbg !6810
  store i32 %do_clear, i32* %do_clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %do_clear.addr, metadata !6811, metadata !DIExpression()), !dbg !6812
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6813, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.declare(metadata i32* %k, metadata !6815, metadata !DIExpression()), !dbg !6816
  %0 = load i32, i32* %cols.addr, align 4, !dbg !6817
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6818
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 4, !dbg !6819
  store i32 %0, i32* %vc_cols, align 4, !dbg !6820
  %2 = load i32, i32* %rows.addr, align 4, !dbg !6821
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6822
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 5, !dbg !6823
  store i32 %2, i32* %vc_rows, align 8, !dbg !6824
  %4 = load i32, i32* %cols.addr, align 4, !dbg !6825
  %shl = shl i32 %4, 1, !dbg !6826
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6827
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 6, !dbg !6828
  store i32 %shl, i32* %vc_size_row, align 4, !dbg !6829
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6830
  %vc_rows1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 5, !dbg !6831
  %7 = load i32, i32* %vc_rows1, align 8, !dbg !6831
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6832
  %vc_size_row2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 6, !dbg !6833
  %9 = load i32, i32* %vc_size_row2, align 4, !dbg !6833
  %mul = mul i32 %7, %9, !dbg !6834
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6835
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 15, !dbg !6836
  store i32 %mul, i32* %vc_screenbuf_size, align 8, !dbg !6837
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6838
  call void @set_origin(%struct.vc_data* %11) #13, !dbg !6839
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6840
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 8, !dbg !6841
  %13 = load i64, i64* %vc_origin, align 8, !dbg !6841
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6842
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 25, !dbg !6843
  store i64 %13, i64* %vc_pos, align 8, !dbg !6844
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6845
  call void @reset_vc(%struct.vc_data* %15) #13, !dbg !6846
  store i32 0, i32* %k, align 4, !dbg !6847
  store i32 0, i32* %j, align 4, !dbg !6849
  br label %for.cond, !dbg !6850

for.cond:                                         ; preds = %for.inc, %entry
  %16 = load i32, i32* %j, align 4, !dbg !6851
  %cmp = icmp slt i32 %16, 16, !dbg !6853
  br i1 %cmp, label %for.body, label %for.end, !dbg !6854

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %j, align 4, !dbg !6855
  %idxprom = sext i32 %17 to i64, !dbg !6857
  %arrayidx = getelementptr [16 x i8], [16 x i8]* @default_red, i64 0, i64 %idxprom, !dbg !6857
  %18 = load i8, i8* %arrayidx, align 1, !dbg !6857
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6858
  %vc_palette = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 40, !dbg !6859
  %20 = load i32, i32* %k, align 4, !dbg !6860
  %inc = add i32 %20, 1, !dbg !6860
  store i32 %inc, i32* %k, align 4, !dbg !6860
  %idxprom3 = sext i32 %20 to i64, !dbg !6858
  %arrayidx4 = getelementptr [48 x i8], [48 x i8]* %vc_palette, i64 0, i64 %idxprom3, !dbg !6858
  store i8 %18, i8* %arrayidx4, align 1, !dbg !6861
  %21 = load i32, i32* %j, align 4, !dbg !6862
  %idxprom5 = sext i32 %21 to i64, !dbg !6863
  %arrayidx6 = getelementptr [16 x i8], [16 x i8]* @default_grn, i64 0, i64 %idxprom5, !dbg !6863
  %22 = load i8, i8* %arrayidx6, align 1, !dbg !6863
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6864
  %vc_palette7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 40, !dbg !6865
  %24 = load i32, i32* %k, align 4, !dbg !6866
  %inc8 = add i32 %24, 1, !dbg !6866
  store i32 %inc8, i32* %k, align 4, !dbg !6866
  %idxprom9 = sext i32 %24 to i64, !dbg !6864
  %arrayidx10 = getelementptr [48 x i8], [48 x i8]* %vc_palette7, i64 0, i64 %idxprom9, !dbg !6864
  store i8 %22, i8* %arrayidx10, align 1, !dbg !6867
  %25 = load i32, i32* %j, align 4, !dbg !6868
  %idxprom11 = sext i32 %25 to i64, !dbg !6869
  %arrayidx12 = getelementptr [16 x i8], [16 x i8]* @default_blu, i64 0, i64 %idxprom11, !dbg !6869
  %26 = load i8, i8* %arrayidx12, align 1, !dbg !6869
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6870
  %vc_palette13 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 40, !dbg !6871
  %28 = load i32, i32* %k, align 4, !dbg !6872
  %inc14 = add i32 %28, 1, !dbg !6872
  store i32 %inc14, i32* %k, align 4, !dbg !6872
  %idxprom15 = sext i32 %28 to i64, !dbg !6870
  %arrayidx16 = getelementptr [48 x i8], [48 x i8]* %vc_palette13, i64 0, i64 %idxprom15, !dbg !6870
  store i8 %26, i8* %arrayidx16, align 1, !dbg !6873
  br label %for.inc, !dbg !6874

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %j, align 4, !dbg !6875
  %inc17 = add i32 %29, 1, !dbg !6875
  store i32 %inc17, i32* %j, align 4, !dbg !6875
  br label %for.cond, !dbg !6876, !llvm.loop !6877

for.end:                                          ; preds = %for.cond
  %30 = load i32, i32* @default_color, align 4, !dbg !6879
  %conv = trunc i32 %30 to i8, !dbg !6879
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6880
  %vc_def_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %31, i32 0, i32 18, !dbg !6881
  store i8 %conv, i8* %vc_def_color, align 2, !dbg !6882
  %32 = load i32, i32* @default_underline_color, align 4, !dbg !6883
  %conv18 = trunc i32 %32 to i8, !dbg !6883
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6884
  %vc_ulcolor = getelementptr inbounds %struct.vc_data, %struct.vc_data* %33, i32 0, i32 19, !dbg !6885
  store i8 %conv18, i8* %vc_ulcolor, align 1, !dbg !6886
  %34 = load i32, i32* @default_italic_color, align 4, !dbg !6887
  %conv19 = trunc i32 %34 to i8, !dbg !6887
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6888
  %vc_itcolor = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 20, !dbg !6889
  store i8 %conv19, i8* %vc_itcolor, align 8, !dbg !6890
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6891
  %vc_halfcolor = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 21, !dbg !6892
  store i8 8, i8* %vc_halfcolor, align 1, !dbg !6893
  br label %do.body, !dbg !6894

do.body:                                          ; preds = %for.end
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6895
  %paste_wait = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 35, !dbg !6895
  call void @__init_waitqueue_head(%struct.wait_queue_head* %paste_wait, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), %struct.lock_class_key* @vc_init.__key) #13, !dbg !6895
  br label %do.end, !dbg !6895

do.end:                                           ; preds = %do.body
  %38 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6897
  %39 = load i32, i32* %do_clear.addr, align 4, !dbg !6898
  call void @reset_terminal(%struct.vc_data* %38, i32 %39) #13, !dbg !6899
  ret void, !dbg !6900
}

; Function Attrs: noredzone
declare dso_local void @vcs_make_sysfs(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head*, i64, i8*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @visual_deinit(%struct.vc_data* %vc) #0 !dbg !6901 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6904
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 13, !dbg !6905
  %1 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !6905
  %con_deinit = getelementptr inbounds %struct.consw, %struct.consw* %1, i32 0, i32 3, !dbg !6906
  %2 = load void (%struct.vc_data*)*, void (%struct.vc_data*)** %con_deinit, align 8, !dbg !6906
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6907
  call void %2(%struct.vc_data* %3) #13, !dbg !6904
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6908
  %vc_sw1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 13, !dbg !6909
  %5 = load %struct.consw*, %struct.consw** %vc_sw1, align 8, !dbg !6909
  %owner = getelementptr inbounds %struct.consw, %struct.consw* %5, i32 0, i32 0, !dbg !6910
  %6 = load %struct.module*, %struct.module** %owner, align 8, !dbg !6910
  call void @module_put(%struct.module* %6) #13, !dbg !6911
  ret void, !dbg !6912
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vc_resize(%struct.vc_data* %vc, i32 %cols, i32 %rows) #0 !dbg !6913 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %cols.addr = alloca i32, align 4
  %rows.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  store i32 %cols, i32* %cols.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cols.addr, metadata !6918, metadata !DIExpression()), !dbg !6919
  store i32 %rows, i32* %rows.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rows.addr, metadata !6920, metadata !DIExpression()), !dbg !6921
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6922
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 0, !dbg !6923
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !6924
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6924
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !6925
  %3 = load i32, i32* %cols.addr, align 4, !dbg !6926
  %4 = load i32, i32* %rows.addr, align 4, !dbg !6927
  %call = call i32 @vc_do_resize(%struct.tty_struct* %1, %struct.vc_data* %2, i32 %3, i32 %4) #13, !dbg !6928
  ret i32 %call, !dbg !6929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vc_do_resize(%struct.tty_struct* %tty, %struct.vc_data* %vc, i32 %cols, i32 %lines) #0 !dbg !6930 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !6933
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !6937
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !6939
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !6940
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %vc.addr = alloca %struct.vc_data*, align 8
  %cols.addr = alloca i32, align 4
  %lines.addr = alloca i32, align 4
  %old_origin = alloca i64, align 8
  %new_origin = alloca i64, align 8
  %new_scr_end = alloca i64, align 8
  %rlth = alloca i64, align 8
  %rrem = alloca i64, align 8
  %err = alloca i64, align 8
  %end = alloca i64, align 8
  %old_rows = alloca i32, align 4
  %old_row_size = alloca i32, align 4
  %first_copied_row = alloca i32, align 4
  %new_cols = alloca i32, align 4
  %new_rows = alloca i32, align 4
  %new_row_size = alloca i32, align 4
  %new_screen_size = alloca i32, align 4
  %user = alloca i32, align 4
  %oldscreen = alloca i16*, align 8
  %newscreen = alloca i16*, align 8
  %new_uniscr = alloca %struct.uni_screen*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x245 = alloca i32, align 4
  %__UNIQUE_ID___y246 = alloca i32, align 4
  %tmp80 = alloca i32, align 4
  %__UNIQUE_ID___x247 = alloca i32, align 4
  %__UNIQUE_ID___y248 = alloca i32, align 4
  %tmp109 = alloca i32, align 4
  %__UNIQUE_ID___x249 = alloca i32, align 4
  %__UNIQUE_ID___y250 = alloca i32, align 4
  %tmp122 = alloca i32, align 4
  %ws = alloca %struct.winsize, align 2
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !6941, metadata !DIExpression()), !dbg !6942
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !6943, metadata !DIExpression()), !dbg !6944
  store i32 %cols, i32* %cols.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cols.addr, metadata !6945, metadata !DIExpression()), !dbg !6946
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !6947, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.declare(metadata i64* %old_origin, metadata !6949, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.declare(metadata i64* %new_origin, metadata !6951, metadata !DIExpression()), !dbg !6952
  call void @llvm.dbg.declare(metadata i64* %new_scr_end, metadata !6953, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.declare(metadata i64* %rlth, metadata !6955, metadata !DIExpression()), !dbg !6956
  call void @llvm.dbg.declare(metadata i64* %rrem, metadata !6957, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.declare(metadata i64* %err, metadata !6959, metadata !DIExpression()), !dbg !6960
  store i64 0, i64* %err, align 8, !dbg !6960
  call void @llvm.dbg.declare(metadata i64* %end, metadata !6961, metadata !DIExpression()), !dbg !6962
  call void @llvm.dbg.declare(metadata i32* %old_rows, metadata !6963, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.declare(metadata i32* %old_row_size, metadata !6965, metadata !DIExpression()), !dbg !6966
  call void @llvm.dbg.declare(metadata i32* %first_copied_row, metadata !6967, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.declare(metadata i32* %new_cols, metadata !6969, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.declare(metadata i32* %new_rows, metadata !6971, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata i32* %new_row_size, metadata !6973, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.declare(metadata i32* %new_screen_size, metadata !6975, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.declare(metadata i32* %user, metadata !6977, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.declare(metadata i16** %oldscreen, metadata !6979, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.declare(metadata i16** %newscreen, metadata !6981, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %new_uniscr, metadata !6983, metadata !DIExpression()), !dbg !6984
  store %struct.uni_screen* null, %struct.uni_screen** %new_uniscr, align 8, !dbg !6984
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6985, metadata !DIExpression()), !dbg !6986
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6987
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !6987
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6988
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !6989
  %conv.i.i = trunc i64 %3 to i32, !dbg !6989
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !6990
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6991
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6991
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !6991
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6992
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6993
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !6993
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6993
  %tobool = icmp ne i32 %8, 0, !dbg !6986
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6986

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !6986
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6986
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !6986

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !6986
  %tobool3 = icmp ne i32 %9, 0, !dbg !6986
  %lnot = xor i1 %tobool3, true, !dbg !6986
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !6994
  %lnot4 = xor i1 %10, true, !dbg !6986
  %lnot5 = xor i1 %lnot4, true, !dbg !6986
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6986
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6986
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !6995
  %tobool6 = icmp ne i32 %11, 0, !dbg !6995
  %lnot7 = xor i1 %tobool6, true, !dbg !6995
  %lnot9 = xor i1 %lnot7, true, !dbg !6995
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !6995
  %conv = sext i32 %lnot.ext10 to i64, !dbg !6995
  %tobool11 = icmp ne i64 %conv, 0, !dbg !6995
  br i1 %tobool11, label %if.then, label %if.end, !dbg !6986

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !6995

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !6997

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !6999

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !6997

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 1207, i32 2305, i64 12) #5, !dbg !7001, !srcloc !7003
  br label %do.end14, !dbg !7001

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 244) #5, !dbg !7004, !srcloc !7006
  br label %do.body15, !dbg !6997

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !7007

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !6997

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !6997

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !6986
  %tobool18 = icmp ne i32 %12, 0, !dbg !6986
  %lnot19 = xor i1 %tobool18, true, !dbg !6986
  %lnot21 = xor i1 %lnot19, true, !dbg !6986
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !6986
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !6986
  store i64 %conv23, i64* %tmp, align 8, !dbg !6995
  %13 = load i64, i64* %tmp, align 8, !dbg !6986
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7009
  %tobool24 = icmp ne %struct.vc_data* %14, null, !dbg !7009
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !7011

if.then25:                                        ; preds = %if.end
  store i32 -6, i32* %retval, align 4, !dbg !7012
  br label %return, !dbg !7012

if.end26:                                         ; preds = %if.end
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7013
  %vc_resize_user = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 42, !dbg !7014
  %16 = load i32, i32* %vc_resize_user, align 8, !dbg !7014
  store i32 %16, i32* %user, align 4, !dbg !7015
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7016
  %vc_resize_user27 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 42, !dbg !7017
  store i32 0, i32* %vc_resize_user27, align 8, !dbg !7018
  %18 = load i32, i32* %cols.addr, align 4, !dbg !7019
  %cmp = icmp ugt i32 %18, 32767, !dbg !7021
  br i1 %cmp, label %if.then31, label %lor.lhs.false, !dbg !7022

lor.lhs.false:                                    ; preds = %if.end26
  %19 = load i32, i32* %lines.addr, align 4, !dbg !7023
  %cmp29 = icmp ugt i32 %19, 32767, !dbg !7024
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !7025

if.then31:                                        ; preds = %lor.lhs.false, %if.end26
  store i32 -22, i32* %retval, align 4, !dbg !7026
  br label %return, !dbg !7026

if.end32:                                         ; preds = %lor.lhs.false
  %20 = load i32, i32* %cols.addr, align 4, !dbg !7027
  %tobool33 = icmp ne i32 %20, 0, !dbg !7027
  br i1 %tobool33, label %cond.true, label %cond.false, !dbg !7027

cond.true:                                        ; preds = %if.end32
  %21 = load i32, i32* %cols.addr, align 4, !dbg !7028
  br label %cond.end, !dbg !7027

cond.false:                                       ; preds = %if.end32
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7029
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 4, !dbg !7030
  %23 = load i32, i32* %vc_cols, align 4, !dbg !7030
  br label %cond.end, !dbg !7027

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %23, %cond.false ], !dbg !7027
  store i32 %cond, i32* %new_cols, align 4, !dbg !7031
  %24 = load i32, i32* %lines.addr, align 4, !dbg !7032
  %tobool34 = icmp ne i32 %24, 0, !dbg !7032
  br i1 %tobool34, label %cond.true35, label %cond.false36, !dbg !7032

cond.true35:                                      ; preds = %cond.end
  %25 = load i32, i32* %lines.addr, align 4, !dbg !7033
  br label %cond.end37, !dbg !7032

cond.false36:                                     ; preds = %cond.end
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7034
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 5, !dbg !7035
  %27 = load i32, i32* %vc_rows, align 8, !dbg !7035
  br label %cond.end37, !dbg !7032

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi i32 [ %25, %cond.true35 ], [ %27, %cond.false36 ], !dbg !7032
  store i32 %cond38, i32* %new_rows, align 4, !dbg !7036
  %28 = load i32, i32* %new_cols, align 4, !dbg !7037
  %shl = shl i32 %28, 1, !dbg !7038
  store i32 %shl, i32* %new_row_size, align 4, !dbg !7039
  %29 = load i32, i32* %new_row_size, align 4, !dbg !7040
  %30 = load i32, i32* %new_rows, align 4, !dbg !7041
  %mul = mul i32 %29, %30, !dbg !7042
  store i32 %mul, i32* %new_screen_size, align 4, !dbg !7043
  %31 = load i32, i32* %new_cols, align 4, !dbg !7044
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7046
  %vc_cols39 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 4, !dbg !7047
  %33 = load i32, i32* %vc_cols39, align 4, !dbg !7047
  %cmp40 = icmp eq i32 %31, %33, !dbg !7048
  br i1 %cmp40, label %land.lhs.true42, label %if.end47, !dbg !7049

land.lhs.true42:                                  ; preds = %cond.end37
  %34 = load i32, i32* %new_rows, align 4, !dbg !7050
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7051
  %vc_rows43 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 5, !dbg !7052
  %36 = load i32, i32* %vc_rows43, align 8, !dbg !7052
  %cmp44 = icmp eq i32 %34, %36, !dbg !7053
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !7054

if.then46:                                        ; preds = %land.lhs.true42
  store i32 0, i32* %retval, align 4, !dbg !7055
  br label %return, !dbg !7055

if.end47:                                         ; preds = %land.lhs.true42, %cond.end37
  %37 = load i32, i32* %new_screen_size, align 4, !dbg !7056
  %conv48 = zext i32 %37 to i64, !dbg !7056
  %cmp49 = icmp ugt i64 %conv48, 4194304, !dbg !7058
  br i1 %cmp49, label %if.then53, label %lor.lhs.false51, !dbg !7059

lor.lhs.false51:                                  ; preds = %if.end47
  %38 = load i32, i32* %new_screen_size, align 4, !dbg !7060
  %tobool52 = icmp ne i32 %38, 0, !dbg !7060
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !7061

if.then53:                                        ; preds = %lor.lhs.false51, %if.end47
  store i32 -22, i32* %retval, align 4, !dbg !7062
  br label %return, !dbg !7062

if.end54:                                         ; preds = %lor.lhs.false51
  %39 = load i32, i32* %new_screen_size, align 4, !dbg !7063
  %conv55 = zext i32 %39 to i64, !dbg !7063
  %call56 = call i8* @kzalloc(i64 %conv55, i32 1051840) #13, !dbg !7064
  %40 = bitcast i8* %call56 to i16*, !dbg !7064
  store i16* %40, i16** %newscreen, align 8, !dbg !7065
  %41 = load i16*, i16** %newscreen, align 8, !dbg !7066
  %tobool57 = icmp ne i16* %41, null, !dbg !7066
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !7068

if.then58:                                        ; preds = %if.end54
  store i32 -12, i32* %retval, align 4, !dbg !7069
  br label %return, !dbg !7069

if.end59:                                         ; preds = %if.end54
  %42 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7070
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 49, !dbg !7070
  %43 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !7070
  %tobool60 = icmp ne %struct.uni_screen* %43, null, !dbg !7070
  br i1 %tobool60, label %if.then61, label %if.end66, !dbg !7072

if.then61:                                        ; preds = %if.end59
  %44 = load i32, i32* %new_cols, align 4, !dbg !7073
  %45 = load i32, i32* %new_rows, align 4, !dbg !7075
  %call62 = call %struct.uni_screen* @vc_uniscr_alloc(i32 %44, i32 %45) #13, !dbg !7076
  store %struct.uni_screen* %call62, %struct.uni_screen** %new_uniscr, align 8, !dbg !7077
  %46 = load %struct.uni_screen*, %struct.uni_screen** %new_uniscr, align 8, !dbg !7078
  %tobool63 = icmp ne %struct.uni_screen* %46, null, !dbg !7078
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !7080

if.then64:                                        ; preds = %if.then61
  %47 = load i16*, i16** %newscreen, align 8, !dbg !7081
  %48 = bitcast i16* %47 to i8*, !dbg !7081
  call void @kfree(i8* %48) #13, !dbg !7083
  store i32 -12, i32* %retval, align 4, !dbg !7084
  br label %return, !dbg !7084

if.end65:                                         ; preds = %if.then61
  br label %if.end66, !dbg !7085

if.end66:                                         ; preds = %if.end65, %if.end59
  %49 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7086
  %call67 = call zeroext i1 @vc_is_sel(%struct.vc_data* %49) #13, !dbg !7088
  br i1 %call67, label %if.then68, label %if.end69, !dbg !7089

if.then68:                                        ; preds = %if.end66
  call void @clear_selection() #13, !dbg !7090
  br label %if.end69, !dbg !7090

if.end69:                                         ; preds = %if.then68, %if.end66
  %50 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7091
  %vc_rows70 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %50, i32 0, i32 5, !dbg !7092
  %51 = load i32, i32* %vc_rows70, align 8, !dbg !7092
  store i32 %51, i32* %old_rows, align 4, !dbg !7093
  %52 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7094
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %52, i32 0, i32 6, !dbg !7095
  %53 = load i32, i32* %vc_size_row, align 4, !dbg !7095
  store i32 %53, i32* %old_row_size, align 4, !dbg !7096
  %54 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7097
  %55 = load i32, i32* %new_cols, align 4, !dbg !7098
  %56 = load i32, i32* %new_rows, align 4, !dbg !7099
  %57 = load i32, i32* %user, align 4, !dbg !7100
  %call71 = call i32 @resize_screen(%struct.vc_data* %54, i32 %55, i32 %56, i32 %57) #13, !dbg !7101
  %conv72 = sext i32 %call71 to i64, !dbg !7101
  store i64 %conv72, i64* %err, align 8, !dbg !7102
  %58 = load i64, i64* %err, align 8, !dbg !7103
  %tobool73 = icmp ne i64 %58, 0, !dbg !7103
  br i1 %tobool73, label %if.then74, label %if.end76, !dbg !7105

if.then74:                                        ; preds = %if.end69
  %59 = load i16*, i16** %newscreen, align 8, !dbg !7106
  %60 = bitcast i16* %59 to i8*, !dbg !7106
  call void @kfree(i8* %60) #13, !dbg !7108
  %61 = load %struct.uni_screen*, %struct.uni_screen** %new_uniscr, align 8, !dbg !7109
  call void @vc_uniscr_free(%struct.uni_screen* %61) #13, !dbg !7110
  %62 = load i64, i64* %err, align 8, !dbg !7111
  %conv75 = trunc i64 %62 to i32, !dbg !7111
  store i32 %conv75, i32* %retval, align 4, !dbg !7112
  br label %return, !dbg !7112

if.end76:                                         ; preds = %if.end69
  %63 = load i32, i32* %new_rows, align 4, !dbg !7113
  %64 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7114
  %vc_rows77 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %64, i32 0, i32 5, !dbg !7115
  store i32 %63, i32* %vc_rows77, align 8, !dbg !7116
  %65 = load i32, i32* %new_cols, align 4, !dbg !7117
  %66 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7118
  %vc_cols78 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %66, i32 0, i32 4, !dbg !7119
  store i32 %65, i32* %vc_cols78, align 4, !dbg !7120
  %67 = load i32, i32* %new_row_size, align 4, !dbg !7121
  %68 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7122
  %vc_size_row79 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %68, i32 0, i32 6, !dbg !7123
  store i32 %67, i32* %vc_size_row79, align 4, !dbg !7124
  %69 = load i32, i32* %new_screen_size, align 4, !dbg !7125
  %70 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7126
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %70, i32 0, i32 15, !dbg !7127
  store i32 %69, i32* %vc_screenbuf_size, align 8, !dbg !7128
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x245, metadata !7129, metadata !DIExpression()), !dbg !7131
  %71 = load i32, i32* %old_row_size, align 4, !dbg !7131
  store i32 %71, i32* %__UNIQUE_ID___x245, align 4, !dbg !7131
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y246, metadata !7132, metadata !DIExpression()), !dbg !7131
  %72 = load i32, i32* %new_row_size, align 4, !dbg !7131
  store i32 %72, i32* %__UNIQUE_ID___y246, align 4, !dbg !7131
  %73 = load i32, i32* %__UNIQUE_ID___x245, align 4, !dbg !7131
  %74 = load i32, i32* %__UNIQUE_ID___y246, align 4, !dbg !7131
  %cmp81 = icmp ult i32 %73, %74, !dbg !7131
  br i1 %cmp81, label %cond.true83, label %cond.false84, !dbg !7131

cond.true83:                                      ; preds = %if.end76
  %75 = load i32, i32* %__UNIQUE_ID___x245, align 4, !dbg !7131
  br label %cond.end85, !dbg !7131

cond.false84:                                     ; preds = %if.end76
  %76 = load i32, i32* %__UNIQUE_ID___y246, align 4, !dbg !7131
  br label %cond.end85, !dbg !7131

cond.end85:                                       ; preds = %cond.false84, %cond.true83
  %cond86 = phi i32 [ %75, %cond.true83 ], [ %76, %cond.false84 ], !dbg !7131
  store i32 %cond86, i32* %tmp80, align 4, !dbg !7131
  %77 = load i32, i32* %tmp80, align 4, !dbg !7131
  %conv87 = zext i32 %77 to i64, !dbg !7133
  store i64 %conv87, i64* %rlth, align 8, !dbg !7134
  %78 = load i32, i32* %new_row_size, align 4, !dbg !7135
  %conv88 = zext i32 %78 to i64, !dbg !7135
  %79 = load i64, i64* %rlth, align 8, !dbg !7136
  %sub = sub i64 %conv88, %79, !dbg !7137
  store i64 %sub, i64* %rrem, align 8, !dbg !7138
  %80 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7139
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %80, i32 0, i32 8, !dbg !7140
  %81 = load i64, i64* %vc_origin, align 8, !dbg !7140
  store i64 %81, i64* %old_origin, align 8, !dbg !7141
  %82 = load i16*, i16** %newscreen, align 8, !dbg !7142
  %83 = ptrtoint i16* %82 to i64, !dbg !7143
  store i64 %83, i64* %new_origin, align 8, !dbg !7144
  %84 = load i64, i64* %new_origin, align 8, !dbg !7145
  %85 = load i32, i32* %new_screen_size, align 4, !dbg !7146
  %conv89 = zext i32 %85 to i64, !dbg !7146
  %add = add i64 %84, %conv89, !dbg !7147
  store i64 %add, i64* %new_scr_end, align 8, !dbg !7148
  %86 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7149
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %86, i32 0, i32 1, !dbg !7151
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !7152
  %87 = load i32, i32* %y, align 4, !dbg !7152
  %88 = load i32, i32* %new_rows, align 4, !dbg !7153
  %cmp90 = icmp ugt i32 %87, %88, !dbg !7154
  br i1 %cmp90, label %if.then92, label %if.else107, !dbg !7155

if.then92:                                        ; preds = %cond.end85
  %89 = load i32, i32* %old_rows, align 4, !dbg !7156
  %90 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7159
  %state93 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %90, i32 0, i32 1, !dbg !7160
  %y94 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state93, i32 0, i32 1, !dbg !7161
  %91 = load i32, i32* %y94, align 4, !dbg !7161
  %sub95 = sub i32 %89, %91, !dbg !7162
  %92 = load i32, i32* %new_rows, align 4, !dbg !7163
  %cmp96 = icmp ult i32 %sub95, %92, !dbg !7164
  br i1 %cmp96, label %if.then98, label %if.else, !dbg !7165

if.then98:                                        ; preds = %if.then92
  %93 = load i32, i32* %old_rows, align 4, !dbg !7166
  %94 = load i32, i32* %new_rows, align 4, !dbg !7168
  %sub99 = sub i32 %93, %94, !dbg !7169
  store i32 %sub99, i32* %first_copied_row, align 4, !dbg !7170
  br label %if.end103, !dbg !7171

if.else:                                          ; preds = %if.then92
  %95 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7172
  %state100 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %95, i32 0, i32 1, !dbg !7174
  %y101 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state100, i32 0, i32 1, !dbg !7175
  %96 = load i32, i32* %y101, align 4, !dbg !7175
  %97 = load i32, i32* %new_rows, align 4, !dbg !7176
  %div = udiv i32 %97, 2, !dbg !7177
  %sub102 = sub i32 %96, %div, !dbg !7178
  store i32 %sub102, i32* %first_copied_row, align 4, !dbg !7179
  br label %if.end103

if.end103:                                        ; preds = %if.else, %if.then98
  %98 = load i32, i32* %first_copied_row, align 4, !dbg !7180
  %99 = load i32, i32* %old_row_size, align 4, !dbg !7181
  %mul104 = mul i32 %98, %99, !dbg !7182
  %conv105 = zext i32 %mul104 to i64, !dbg !7180
  %100 = load i64, i64* %old_origin, align 8, !dbg !7183
  %add106 = add i64 %100, %conv105, !dbg !7183
  store i64 %add106, i64* %old_origin, align 8, !dbg !7183
  br label %if.end108, !dbg !7184

if.else107:                                       ; preds = %cond.end85
  store i32 0, i32* %first_copied_row, align 4, !dbg !7185
  br label %if.end108

if.end108:                                        ; preds = %if.else107, %if.end103
  %101 = load i64, i64* %old_origin, align 8, !dbg !7186
  %102 = load i32, i32* %old_row_size, align 4, !dbg !7187
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x247, metadata !7188, metadata !DIExpression()), !dbg !7190
  %103 = load i32, i32* %old_rows, align 4, !dbg !7190
  store i32 %103, i32* %__UNIQUE_ID___x247, align 4, !dbg !7190
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y248, metadata !7191, metadata !DIExpression()), !dbg !7190
  %104 = load i32, i32* %new_rows, align 4, !dbg !7190
  store i32 %104, i32* %__UNIQUE_ID___y248, align 4, !dbg !7190
  %105 = load i32, i32* %__UNIQUE_ID___x247, align 4, !dbg !7190
  %106 = load i32, i32* %__UNIQUE_ID___y248, align 4, !dbg !7190
  %cmp110 = icmp ult i32 %105, %106, !dbg !7190
  br i1 %cmp110, label %cond.true112, label %cond.false113, !dbg !7190

cond.true112:                                     ; preds = %if.end108
  %107 = load i32, i32* %__UNIQUE_ID___x247, align 4, !dbg !7190
  br label %cond.end114, !dbg !7190

cond.false113:                                    ; preds = %if.end108
  %108 = load i32, i32* %__UNIQUE_ID___y248, align 4, !dbg !7190
  br label %cond.end114, !dbg !7190

cond.end114:                                      ; preds = %cond.false113, %cond.true112
  %cond115 = phi i32 [ %107, %cond.true112 ], [ %108, %cond.false113 ], !dbg !7190
  store i32 %cond115, i32* %tmp109, align 4, !dbg !7190
  %109 = load i32, i32* %tmp109, align 4, !dbg !7190
  %mul116 = mul i32 %102, %109, !dbg !7192
  %conv117 = zext i32 %mul116 to i64, !dbg !7187
  %add118 = add i64 %101, %conv117, !dbg !7193
  store i64 %add118, i64* %end, align 8, !dbg !7194
  %110 = load %struct.uni_screen*, %struct.uni_screen** %new_uniscr, align 8, !dbg !7195
  %111 = load i32, i32* %new_cols, align 4, !dbg !7196
  %112 = load i32, i32* %new_rows, align 4, !dbg !7197
  %113 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7198
  %vc_uni_screen119 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %113, i32 0, i32 49, !dbg !7198
  %114 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen119, align 8, !dbg !7198
  %115 = load i64, i64* %rlth, align 8, !dbg !7199
  %div120 = udiv i64 %115, 2, !dbg !7200
  %conv121 = trunc i64 %div120 to i32, !dbg !7199
  %116 = load i32, i32* %first_copied_row, align 4, !dbg !7201
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x249, metadata !7202, metadata !DIExpression()), !dbg !7204
  %117 = load i32, i32* %old_rows, align 4, !dbg !7204
  store i32 %117, i32* %__UNIQUE_ID___x249, align 4, !dbg !7204
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y250, metadata !7205, metadata !DIExpression()), !dbg !7204
  %118 = load i32, i32* %new_rows, align 4, !dbg !7204
  store i32 %118, i32* %__UNIQUE_ID___y250, align 4, !dbg !7204
  %119 = load i32, i32* %__UNIQUE_ID___x249, align 4, !dbg !7204
  %120 = load i32, i32* %__UNIQUE_ID___y250, align 4, !dbg !7204
  %cmp123 = icmp ult i32 %119, %120, !dbg !7204
  br i1 %cmp123, label %cond.true125, label %cond.false126, !dbg !7204

cond.true125:                                     ; preds = %cond.end114
  %121 = load i32, i32* %__UNIQUE_ID___x249, align 4, !dbg !7204
  br label %cond.end127, !dbg !7204

cond.false126:                                    ; preds = %cond.end114
  %122 = load i32, i32* %__UNIQUE_ID___y250, align 4, !dbg !7204
  br label %cond.end127, !dbg !7204

cond.end127:                                      ; preds = %cond.false126, %cond.true125
  %cond128 = phi i32 [ %121, %cond.true125 ], [ %122, %cond.false126 ], !dbg !7204
  store i32 %cond128, i32* %tmp122, align 4, !dbg !7204
  %123 = load i32, i32* %tmp122, align 4, !dbg !7204
  call void @vc_uniscr_copy_area(%struct.uni_screen* %110, i32 %111, i32 %112, %struct.uni_screen* %114, i32 %conv121, i32 %116, i32 %123) #13, !dbg !7206
  %124 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7207
  %125 = load %struct.uni_screen*, %struct.uni_screen** %new_uniscr, align 8, !dbg !7208
  call void @vc_uniscr_set(%struct.vc_data* %124, %struct.uni_screen* %125) #13, !dbg !7209
  %126 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7210
  call void @update_attr(%struct.vc_data* %126) #13, !dbg !7211
  br label %while.cond, !dbg !7212

while.cond:                                       ; preds = %if.end136, %cond.end127
  %127 = load i64, i64* %old_origin, align 8, !dbg !7213
  %128 = load i64, i64* %end, align 8, !dbg !7214
  %cmp129 = icmp ult i64 %127, %128, !dbg !7215
  br i1 %cmp129, label %while.body, label %while.end, !dbg !7212

while.body:                                       ; preds = %while.cond
  %129 = load i64, i64* %new_origin, align 8, !dbg !7216
  %130 = inttoptr i64 %129 to i16*, !dbg !7218
  %131 = load i64, i64* %old_origin, align 8, !dbg !7219
  %132 = inttoptr i64 %131 to i16*, !dbg !7220
  %133 = load i64, i64* %rlth, align 8, !dbg !7221
  %conv131 = trunc i64 %133 to i32, !dbg !7221
  call void @scr_memcpyw(i16* %130, i16* %132, i32 %conv131) #13, !dbg !7222
  %134 = load i64, i64* %rrem, align 8, !dbg !7223
  %tobool132 = icmp ne i64 %134, 0, !dbg !7223
  br i1 %tobool132, label %if.then133, label %if.end136, !dbg !7225

if.then133:                                       ; preds = %while.body
  %135 = load i64, i64* %new_origin, align 8, !dbg !7226
  %136 = load i64, i64* %rlth, align 8, !dbg !7227
  %add134 = add i64 %135, %136, !dbg !7228
  %137 = inttoptr i64 %add134 to i8*, !dbg !7229
  %138 = bitcast i8* %137 to i16*, !dbg !7229
  %139 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7230
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %139, i32 0, i32 28, !dbg !7231
  %140 = load i16, i16* %vc_video_erase_char, align 8, !dbg !7231
  %141 = load i64, i64* %rrem, align 8, !dbg !7232
  %conv135 = trunc i64 %141 to i32, !dbg !7232
  call void @scr_memsetw(i16* %138, i16 zeroext %140, i32 %conv135) #13, !dbg !7233
  br label %if.end136, !dbg !7233

if.end136:                                        ; preds = %if.then133, %while.body
  %142 = load i32, i32* %old_row_size, align 4, !dbg !7234
  %conv137 = zext i32 %142 to i64, !dbg !7234
  %143 = load i64, i64* %old_origin, align 8, !dbg !7235
  %add138 = add i64 %143, %conv137, !dbg !7235
  store i64 %add138, i64* %old_origin, align 8, !dbg !7235
  %144 = load i32, i32* %new_row_size, align 4, !dbg !7236
  %conv139 = zext i32 %144 to i64, !dbg !7236
  %145 = load i64, i64* %new_origin, align 8, !dbg !7237
  %add140 = add i64 %145, %conv139, !dbg !7237
  store i64 %add140, i64* %new_origin, align 8, !dbg !7237
  br label %while.cond, !dbg !7212, !llvm.loop !7238

while.end:                                        ; preds = %while.cond
  %146 = load i64, i64* %new_scr_end, align 8, !dbg !7240
  %147 = load i64, i64* %new_origin, align 8, !dbg !7242
  %cmp141 = icmp ugt i64 %146, %147, !dbg !7243
  br i1 %cmp141, label %if.then143, label %if.end147, !dbg !7244

if.then143:                                       ; preds = %while.end
  %148 = load i64, i64* %new_origin, align 8, !dbg !7245
  %149 = inttoptr i64 %148 to i8*, !dbg !7246
  %150 = bitcast i8* %149 to i16*, !dbg !7246
  %151 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7247
  %vc_video_erase_char144 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %151, i32 0, i32 28, !dbg !7248
  %152 = load i16, i16* %vc_video_erase_char144, align 8, !dbg !7248
  %153 = load i64, i64* %new_scr_end, align 8, !dbg !7249
  %154 = load i64, i64* %new_origin, align 8, !dbg !7250
  %sub145 = sub i64 %153, %154, !dbg !7251
  %conv146 = trunc i64 %sub145 to i32, !dbg !7249
  call void @scr_memsetw(i16* %150, i16 zeroext %152, i32 %conv146) #13, !dbg !7252
  br label %if.end147, !dbg !7252

if.end147:                                        ; preds = %if.then143, %while.end
  %155 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7253
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %155, i32 0, i32 14, !dbg !7254
  %156 = load i16*, i16** %vc_screenbuf, align 8, !dbg !7254
  store i16* %156, i16** %oldscreen, align 8, !dbg !7255
  %157 = load i16*, i16** %newscreen, align 8, !dbg !7256
  %158 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7257
  %vc_screenbuf148 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %158, i32 0, i32 14, !dbg !7258
  store i16* %157, i16** %vc_screenbuf148, align 8, !dbg !7259
  %159 = load i32, i32* %new_screen_size, align 4, !dbg !7260
  %160 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7261
  %vc_screenbuf_size149 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %160, i32 0, i32 15, !dbg !7262
  store i32 %159, i32* %vc_screenbuf_size149, align 8, !dbg !7263
  %161 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7264
  call void @set_origin(%struct.vc_data* %161) #13, !dbg !7265
  %162 = load i16*, i16** %oldscreen, align 8, !dbg !7266
  %163 = bitcast i16* %162 to i8*, !dbg !7266
  call void @kfree(i8* %163) #13, !dbg !7267
  %164 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7268
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %164, i32 0, i32 11, !dbg !7269
  store i32 0, i32* %vc_top, align 8, !dbg !7270
  %165 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7271
  %vc_rows150 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %165, i32 0, i32 5, !dbg !7272
  %166 = load i32, i32* %vc_rows150, align 8, !dbg !7272
  %167 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7273
  %vc_bottom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %167, i32 0, i32 12, !dbg !7274
  store i32 %166, i32* %vc_bottom, align 4, !dbg !7275
  %168 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7276
  %169 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7277
  %state151 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %169, i32 0, i32 1, !dbg !7278
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state151, i32 0, i32 0, !dbg !7279
  %170 = load i32, i32* %x, align 8, !dbg !7279
  %171 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7280
  %state152 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %171, i32 0, i32 1, !dbg !7281
  %y153 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state152, i32 0, i32 1, !dbg !7282
  %172 = load i32, i32* %y153, align 4, !dbg !7282
  call void @gotoxy(%struct.vc_data* %168, i32 %170, i32 %172) #13, !dbg !7283
  %173 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7284
  call void @save_cur(%struct.vc_data* %173) #13, !dbg !7285
  %174 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7286
  %tobool154 = icmp ne %struct.tty_struct* %174, null, !dbg !7286
  br i1 %tobool154, label %if.then155, label %if.end162, !dbg !7288

if.then155:                                       ; preds = %if.end147
  call void @llvm.dbg.declare(metadata %struct.winsize* %ws, metadata !7289, metadata !DIExpression()), !dbg !7291
  %175 = bitcast %struct.winsize* %ws to i8*, !dbg !7292
  call void @llvm.memset.p0i8.i64(i8* align 2 %175, i8 0, i64 8, i1 false), !dbg !7292
  %176 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7293
  %vc_rows156 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %176, i32 0, i32 5, !dbg !7294
  %177 = load i32, i32* %vc_rows156, align 8, !dbg !7294
  %conv157 = trunc i32 %177 to i16, !dbg !7293
  %ws_row = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 0, !dbg !7295
  store i16 %conv157, i16* %ws_row, align 2, !dbg !7296
  %178 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7297
  %vc_cols158 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %178, i32 0, i32 4, !dbg !7298
  %179 = load i32, i32* %vc_cols158, align 4, !dbg !7298
  %conv159 = trunc i32 %179 to i16, !dbg !7297
  %ws_col = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 1, !dbg !7299
  store i16 %conv159, i16* %ws_col, align 2, !dbg !7300
  %180 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7301
  %vc_scan_lines = getelementptr inbounds %struct.vc_data, %struct.vc_data* %180, i32 0, i32 7, !dbg !7302
  %181 = load i32, i32* %vc_scan_lines, align 8, !dbg !7302
  %conv160 = trunc i32 %181 to i16, !dbg !7301
  %ws_ypixel = getelementptr inbounds %struct.winsize, %struct.winsize* %ws, i32 0, i32 3, !dbg !7303
  store i16 %conv160, i16* %ws_ypixel, align 2, !dbg !7304
  %182 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7305
  %call161 = call i32 @tty_do_resize(%struct.tty_struct* %182, %struct.winsize* %ws) #13, !dbg !7306
  br label %if.end162, !dbg !7307

if.end162:                                        ; preds = %if.then155, %if.end147
  %183 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7308
  %call163 = call zeroext i1 @con_is_visible(%struct.vc_data* %183) #13, !dbg !7310
  br i1 %call163, label %if.then164, label %if.end165, !dbg !7311

if.then164:                                       ; preds = %if.end162
  %184 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7312
  call void @redraw_screen(%struct.vc_data* %184, i32 0) #13, !dbg !7312
  br label %if.end165, !dbg !7312

if.end165:                                        ; preds = %if.then164, %if.end162
  %185 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7313
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %185, i32 0, i32 3, !dbg !7314
  %186 = load i16, i16* %vc_num, align 8, !dbg !7314
  %conv166 = zext i16 %186 to i32, !dbg !7313
  %187 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7315
  %vc_num167 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %187, i32 0, i32 3, !dbg !7316
  %188 = load i16, i16* %vc_num167, align 8, !dbg !7316
  %conv168 = zext i16 %188 to i32, !dbg !7315
  call void @vt_event_post(i32 8, i32 %conv166, i32 %conv168) #13, !dbg !7317
  %189 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7318
  call void @notify_update(%struct.vc_data* %189) #13, !dbg !7319
  %190 = load i64, i64* %err, align 8, !dbg !7320
  %conv169 = trunc i64 %190 to i32, !dbg !7320
  store i32 %conv169, i32* %retval, align 4, !dbg !7321
  br label %return, !dbg !7321

return:                                           ; preds = %if.end165, %if.then74, %if.then64, %if.then58, %if.then53, %if.then46, %if.then31, %if.then25
  %191 = load i32, i32* %retval, align 4, !dbg !7322
  ret i32 %191, !dbg !7322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.vc_data* @vc_deallocate(i32 %currcons) #0 !dbg !7323 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !7326
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !7330
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !7332
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !7333
  %currcons.addr = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %param = alloca %struct.vt_notifier_param, align 8
  store i32 %currcons, i32* %currcons.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %currcons.addr, metadata !7334, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !7336, metadata !DIExpression()), !dbg !7337
  store %struct.vc_data* null, %struct.vc_data** %vc, align 8, !dbg !7337
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7338, metadata !DIExpression()), !dbg !7339
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7340
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !7340
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7341
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !7342
  %conv.i.i = trunc i64 %3 to i32, !dbg !7342
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !7343
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7344
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7344
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !7344
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7345
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7346
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !7346
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7346
  %tobool = icmp ne i32 %8, 0, !dbg !7339
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !7339

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !7339
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7339
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !7339

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !7339
  %tobool3 = icmp ne i32 %9, 0, !dbg !7339
  %lnot = xor i1 %tobool3, true, !dbg !7339
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !7347
  %lnot4 = xor i1 %10, true, !dbg !7339
  %lnot5 = xor i1 %lnot4, true, !dbg !7339
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !7339
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7339
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !7348
  %tobool6 = icmp ne i32 %11, 0, !dbg !7348
  %lnot7 = xor i1 %tobool6, true, !dbg !7348
  %lnot9 = xor i1 %lnot7, true, !dbg !7348
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !7348
  %conv = sext i32 %lnot.ext10 to i64, !dbg !7348
  %tobool11 = icmp ne i64 %conv, 0, !dbg !7348
  br i1 %tobool11, label %if.then, label %if.end, !dbg !7339

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !7348

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !7350

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !7352

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !7350

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 1376, i32 2305, i64 12) #5, !dbg !7354, !srcloc !7356
  br label %do.end14, !dbg !7354

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 251) #5, !dbg !7357, !srcloc !7359
  br label %do.body15, !dbg !7350

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !7360

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !7350

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !7350

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !7339
  %tobool18 = icmp ne i32 %12, 0, !dbg !7339
  %lnot19 = xor i1 %tobool18, true, !dbg !7339
  %lnot21 = xor i1 %lnot19, true, !dbg !7339
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !7339
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !7339
  store i64 %conv23, i64* %tmp, align 8, !dbg !7348
  %13 = load i64, i64* %tmp, align 8, !dbg !7339
  %14 = load i32, i32* %currcons.addr, align 4, !dbg !7362
  %call24 = call i32 @vc_cons_allocated(i32 %14) #13, !dbg !7364
  %tobool25 = icmp ne i32 %call24, 0, !dbg !7364
  br i1 %tobool25, label %if.then26, label %if.end32, !dbg !7365

if.then26:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.vt_notifier_param* %param, metadata !7366, metadata !DIExpression()), !dbg !7368
  %15 = load i32, i32* %currcons.addr, align 4, !dbg !7369
  %idxprom = zext i32 %15 to i64, !dbg !7370
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !7370
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !7371
  %16 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !7371
  store %struct.vc_data* %16, %struct.vc_data** %vc, align 8, !dbg !7372
  %vc27 = getelementptr inbounds %struct.vt_notifier_param, %struct.vt_notifier_param* %param, i32 0, i32 0, !dbg !7373
  store %struct.vc_data* %16, %struct.vc_data** %vc27, align 8, !dbg !7374
  %17 = bitcast %struct.vt_notifier_param* %param to i8*, !dbg !7375
  %call28 = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head* @vt_notifier_list, i64 2, i8* %17) #13, !dbg !7376
  %18 = load i32, i32* %currcons.addr, align 4, !dbg !7377
  call void @vcs_remove_sysfs(i32 %18) #13, !dbg !7378
  %19 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7379
  call void @visual_deinit(%struct.vc_data* %19) #13, !dbg !7380
  %20 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7381
  %vt_pid = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 33, !dbg !7382
  %21 = load %struct.pid*, %struct.pid** %vt_pid, align 8, !dbg !7382
  call void @put_pid(%struct.pid* %21) #13, !dbg !7383
  %22 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7384
  call void @vc_uniscr_set(%struct.vc_data* %22, %struct.uni_screen* null) #13, !dbg !7385
  %23 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7386
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 14, !dbg !7387
  %24 = load i16*, i16** %vc_screenbuf, align 8, !dbg !7387
  %25 = bitcast i16* %24 to i8*, !dbg !7386
  call void @kfree(i8* %25) #13, !dbg !7388
  %26 = load i32, i32* %currcons.addr, align 4, !dbg !7389
  %idxprom29 = zext i32 %26 to i64, !dbg !7390
  %arrayidx30 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom29, !dbg !7390
  %d31 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx30, i32 0, i32 0, !dbg !7391
  store %struct.vc_data* null, %struct.vc_data** %d31, align 8, !dbg !7392
  br label %if.end32, !dbg !7393

if.end32:                                         ; preds = %if.then26, %if.end
  %27 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7394
  ret %struct.vc_data* %27, !dbg !7395
}

; Function Attrs: noredzone
declare dso_local void @vcs_remove_sysfs(i32) #2

; Function Attrs: noredzone
declare dso_local void @put_pid(%struct.pid*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_uniscr_set(%struct.vc_data* %vc, %struct.uni_screen* %new_uniscr) #0 !dbg !7396 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %new_uniscr.addr = alloca %struct.uni_screen*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !7399, metadata !DIExpression()), !dbg !7400
  store %struct.uni_screen* %new_uniscr, %struct.uni_screen** %new_uniscr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %new_uniscr.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7403
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 49, !dbg !7404
  %1 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !7404
  call void @vc_uniscr_free(%struct.uni_screen* %1) #13, !dbg !7405
  %2 = load %struct.uni_screen*, %struct.uni_screen** %new_uniscr.addr, align 8, !dbg !7406
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7407
  %vc_uni_screen1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 49, !dbg !7408
  store %struct.uni_screen* %2, %struct.uni_screen** %vc_uni_screen1, align 8, !dbg !7409
  ret void, !dbg !7410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scrollback(%struct.vc_data* %vc) #0 !dbg !7411 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !7412, metadata !DIExpression()), !dbg !7413
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7414
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 5, !dbg !7415
  %1 = load i32, i32* %vc_rows, align 8, !dbg !7415
  %div = udiv i32 %1, 2, !dbg !7416
  %sub = sub i32 0, %div, !dbg !7417
  call void @scrolldelta(i32 %sub) #13, !dbg !7418
  ret void, !dbg !7419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scrolldelta(i32 %lines) #0 !dbg !7420 {
entry:
  %lines.addr = alloca i32, align 4
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !7421, metadata !DIExpression()), !dbg !7422
  %0 = load i32, i32* %lines.addr, align 4, !dbg !7423
  %1 = load i32, i32* @scrollback_delta, align 4, !dbg !7424
  %add = add i32 %1, %0, !dbg !7424
  store i32 %add, i32* @scrollback_delta, align 4, !dbg !7424
  call void @schedule_console_callback() #13, !dbg !7425
  ret void, !dbg !7426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @scrollfront(%struct.vc_data* %vc, i32 %lines) #0 !dbg !7427 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %lines.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !7428, metadata !DIExpression()), !dbg !7429
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !7430, metadata !DIExpression()), !dbg !7431
  %0 = load i32, i32* %lines.addr, align 4, !dbg !7432
  %tobool = icmp ne i32 %0, 0, !dbg !7432
  br i1 %tobool, label %if.end, label %if.then, !dbg !7434

if.then:                                          ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !7435
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 5, !dbg !7436
  %2 = load i32, i32* %vc_rows, align 8, !dbg !7436
  %div = udiv i32 %2, 2, !dbg !7437
  store i32 %div, i32* %lines.addr, align 4, !dbg !7438
  br label %if.end, !dbg !7439

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %lines.addr, align 4, !dbg !7440
  call void @scrolldelta(i32 %3) #13, !dbg !7441
  ret void, !dbg !7442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mouse_report(%struct.tty_struct* %tty, i32 %butt, i32 %mrx, i32 %mry) #0 !dbg !7443 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %butt.addr = alloca i32, align 4
  %mrx.addr = alloca i32, align 4
  %mry.addr = alloca i32, align 4
  %buf = alloca [8 x i8], align 1
  %len = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !7446, metadata !DIExpression()), !dbg !7447
  store i32 %butt, i32* %butt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %butt.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  store i32 %mrx, i32* %mrx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mrx.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  store i32 %mry, i32* %mry.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mry.addr, metadata !7452, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !7454, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7456, metadata !DIExpression()), !dbg !7457
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !7458
  %0 = load i32, i32* %butt.addr, align 4, !dbg !7459
  %add = add i32 32, %0, !dbg !7460
  %conv = trunc i32 %add to i8, !dbg !7461
  %conv1 = sext i8 %conv to i32, !dbg !7461
  %1 = load i32, i32* %mrx.addr, align 4, !dbg !7462
  %add2 = add i32 33, %1, !dbg !7463
  %conv3 = trunc i32 %add2 to i8, !dbg !7464
  %conv4 = sext i8 %conv3 to i32, !dbg !7464
  %2 = load i32, i32* %mry.addr, align 4, !dbg !7465
  %add5 = add i32 33, %2, !dbg !7466
  %conv6 = trunc i32 %add5 to i8, !dbg !7467
  %conv7 = sext i8 %conv6 to i32, !dbg !7467
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i32 %conv1, i32 %conv4, i32 %conv7) #13, !dbg !7468
  store i32 %call, i32* %len, align 4, !dbg !7469
  %arraydecay8 = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !7470
  %3 = load i32, i32* %len, align 4, !dbg !7471
  %conv9 = sext i32 %3 to i64, !dbg !7471
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7472
  %port = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 44, !dbg !7473
  %5 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !7473
  call void @respond_string(i8* %arraydecay8, i64 %conv9, %struct.tty_port* %5) #13, !dbg !7474
  ret void, !dbg !7475
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @respond_string(i8* %p, i64 %len, %struct.tty_port* %port) #0 !dbg !7476 {
entry:
  %p.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %port.addr = alloca %struct.tty_port*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7479, metadata !DIExpression()), !dbg !7480
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !7481, metadata !DIExpression()), !dbg !7482
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !7483, metadata !DIExpression()), !dbg !7484
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7485
  %1 = load i8*, i8** %p.addr, align 8, !dbg !7486
  %2 = load i64, i64* %len.addr, align 8, !dbg !7487
  %call = call i32 @tty_insert_flip_string(%struct.tty_port* %0, i8* %1, i64 %2) #13, !dbg !7488
  %3 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7489
  call void @tty_schedule_flip(%struct.tty_port* %3) #13, !dbg !7490
  ret void, !dbg !7491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mouse_reporting() #0 !dbg !7492 {
entry:
  %0 = load i32, i32* @fg_console, align 4, !dbg !7493
  %idxprom = sext i32 %0 to i64, !dbg !7494
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !7494
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !7495
  %1 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !7495
  %vc_report_mouse = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 36, !dbg !7496
  %bf.load = load i16, i16* %vc_report_mouse, align 8, !dbg !7496
  %bf.lshr = lshr i16 %bf.load, 12, !dbg !7496
  %bf.clear = and i16 %bf.lshr, 3, !dbg !7496
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7496
  ret i32 %bf.cast, !dbg !7497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @set_console(i32 %nr) #0 !dbg !7498 {
entry:
  %retval = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !7499, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !7501, metadata !DIExpression()), !dbg !7502
  %0 = load i32, i32* @fg_console, align 4, !dbg !7503
  %idxprom = sext i32 %0 to i64, !dbg !7504
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !7504
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !7505
  %1 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !7505
  store %struct.vc_data* %1, %struct.vc_data** %vc, align 8, !dbg !7502
  %2 = load i32, i32* %nr.addr, align 4, !dbg !7506
  %call = call i32 @vc_cons_allocated(i32 %2) #13, !dbg !7508
  %tobool = icmp ne i32 %call, 0, !dbg !7508
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7509

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8, i8* @vt_dont_switch, align 1, !dbg !7510
  %tobool1 = trunc i8 %3 to i1, !dbg !7510
  br i1 %tobool1, label %if.then, label %lor.lhs.false2, !dbg !7511

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7512
  %vt_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 32, !dbg !7513
  %mode = getelementptr inbounds %struct.vt_mode, %struct.vt_mode* %vt_mode, i32 0, i32 0, !dbg !7514
  %5 = load i8, i8* %mode, align 4, !dbg !7514
  %conv = sext i8 %5 to i32, !dbg !7512
  %cmp = icmp eq i32 %conv, 0, !dbg !7515
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7516

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %6 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7517
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 16, !dbg !7518
  %7 = load i8, i8* %vc_mode, align 4, !dbg !7518
  %conv4 = zext i8 %7 to i32, !dbg !7517
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !7519
  br i1 %cmp5, label %if.then, label %if.end, !dbg !7520

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !7521
  br label %return, !dbg !7521

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false2
  %8 = load i32, i32* %nr.addr, align 4, !dbg !7523
  store i32 %8, i32* @want_console, align 4, !dbg !7524
  call void @schedule_console_callback() #13, !dbg !7525
  store i32 0, i32* %retval, align 4, !dbg !7526
  br label %return, !dbg !7526

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7527
  ret i32 %9, !dbg !7527
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_kmsg_redirect(i32 %new) #0 !dbg !4529 {
entry:
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7528, metadata !DIExpression()), !dbg !7530
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7534, metadata !DIExpression()), !dbg !7535
  %retval = alloca i32, align 4
  %new.addr = alloca i32, align 4
  %__ai_ptr = alloca i32*, align 8
  %tmp = alloca i32, align 4
  %__ret = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store i32 %new, i32* %new.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr, metadata !7536, metadata !DIExpression()), !dbg !7537
  %0 = load i32, i32* %new.addr, align 4, !dbg !7538
  %cmp = icmp ne i32 %0, -1, !dbg !7539
  br i1 %cmp, label %if.then, label %if.else, !dbg !7540

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %__ai_ptr, metadata !7541, metadata !DIExpression()), !dbg !7542
  store i32* @vt_kmsg_redirect.kmsg_con, i32** %__ai_ptr, align 8, !dbg !7542
  %1 = load i32*, i32** %__ai_ptr, align 8, !dbg !7542
  %2 = bitcast i32* %1 to i8*, !dbg !7542
  store i8* %2, i8** %v.addr.i, align 8
  store i64 4, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7543
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7544
  %conv.i = trunc i64 %4 to i32, !dbg !7544
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !7545
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7546
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7546
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !7546
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !7547, metadata !DIExpression()), !dbg !7549
  %7 = load i32, i32* %new.addr, align 4, !dbg !7549
  store i32 %7, i32* %__ret, align 4, !dbg !7549
  %8 = load i32, i32* %__ret, align 4, !dbg !7549
  %9 = load i32*, i32** %__ai_ptr, align 8, !dbg !7549
  %10 = call i32 asm sideeffect "xchgl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %9, i32 %8, i32* %9) #5, !dbg !7549, !srcloc !7550
  store i32 %10, i32* %__ret, align 4, !dbg !7549
  %11 = load i32, i32* %__ret, align 4, !dbg !7549
  store i32 %11, i32* %tmp1, align 4, !dbg !7549
  %12 = load i32, i32* %tmp1, align 4, !dbg !7549
  store i32 %12, i32* %tmp, align 4, !dbg !7542
  %13 = load i32, i32* %tmp, align 4, !dbg !7542
  store i32 %13, i32* %retval, align 4, !dbg !7551
  br label %return, !dbg !7551

if.else:                                          ; preds = %entry
  %14 = load i32, i32* @vt_kmsg_redirect.kmsg_con, align 4, !dbg !7552
  store i32 %14, i32* %retval, align 4, !dbg !7553
  br label %return, !dbg !7553

return:                                           ; preds = %if.else, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !7554
  ret i32 %15, !dbg !7554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @tioclinux(%struct.tty_struct* %tty, i64 %arg) #0 !dbg !7555 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !7558, metadata !DIExpression()), !dbg !7564
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !7567, metadata !DIExpression()), !dbg !7569
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !7570, metadata !DIExpression()), !dbg !7572
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %arg.addr = alloca i64, align 8
  %type = alloca i8, align 1
  %data = alloca i8, align 1
  %p = alloca i8*, align 8
  %lines = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i8, align 1
  %tmp5 = alloca i64, align 8
  %tmp18 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i8, align 1
  %tmp21 = alloca i64, align 8
  %tmp27 = alloca i64, align 8
  %__ret_pu28 = alloca i32, align 4
  %__ptr_pu29 = alloca i8*, align 8
  %__val_pu30 = alloca i8, align 1
  %tmp33 = alloca i64, align 8
  %tmp41 = alloca i64, align 8
  %__ret_pu42 = alloca i32, align 4
  %__ptr_pu43 = alloca i8*, align 8
  %__val_pu44 = alloca i8, align 1
  %tmp47 = alloca i64, align 8
  %tmp53 = alloca i64, align 8
  %__ret_gu54 = alloca i32, align 4
  %__val_gu55 = alloca i8, align 1
  %tmp60 = alloca i64, align 8
  %tmp71 = alloca i64, align 8
  %__ret_gu72 = alloca i32, align 4
  %__val_gu73 = alloca i32, align 4
  %tmp78 = alloca i64, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !7573, metadata !DIExpression()), !dbg !7574
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !7575, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.declare(metadata i8* %type, metadata !7577, metadata !DIExpression()), !dbg !7578
  call void @llvm.dbg.declare(metadata i8* %data, metadata !7579, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7581, metadata !DIExpression()), !dbg !7582
  %0 = load i64, i64* %arg.addr, align 8, !dbg !7583
  %1 = inttoptr i64 %0 to i8*, !dbg !7584
  store i8* %1, i8** %p, align 8, !dbg !7582
  call void @llvm.dbg.declare(metadata i32* %lines, metadata !7585, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7587, metadata !DIExpression()), !dbg !7588
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !7569
  %2 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !7569
  %3 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #16, !dbg !7572, !srcloc !7589
  store i64 %3, i64* %pfo_val__.i, align 8, !dbg !7572
  %4 = load i64, i64* %pfo_val__.i, align 8, !dbg !7572
  %5 = inttoptr i64 %4 to %struct.task_struct*, !dbg !7572
  store %struct.task_struct* %5, %struct.task_struct** %tmp.i, align 8, !dbg !7572
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !7572
  store %struct.task_struct* %6, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7564
  %7 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7564
  store %struct.task_struct* %7, %struct.task_struct** %tmp1.i, align 8, !dbg !7564
  %8 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !7564
  %signal = getelementptr inbounds %struct.task_struct, %struct.task_struct* %8, i32 0, i32 74, !dbg !7590
  %9 = load %struct.signal_struct*, %struct.signal_struct** %signal, align 64, !dbg !7590
  %tty1 = getelementptr inbounds %struct.signal_struct, %struct.signal_struct* %9, i32 0, i32 24, !dbg !7591
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty1, align 8, !dbg !7591
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7592
  %cmp = icmp ne %struct.tty_struct* %10, %11, !dbg !7593
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7594

land.lhs.true:                                    ; preds = %entry
  %call2 = call zeroext i1 @capable(i32 21) #13, !dbg !7595
  br i1 %call2, label %if.end, label %if.then, !dbg !7596

if.then:                                          ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !7597
  br label %return, !dbg !7597

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @might_fault() #13, !dbg !7598
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !7601, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.declare(metadata i8* %__val_gu, metadata !7604, metadata !DIExpression()), !dbg !7603
  %12 = call i64 @llvm.read_register.i64(metadata !4821), !dbg !7603
  %13 = load i8*, i8** %p, align 8, !dbg !7603
  %14 = call { i8*, i8, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i8* %13, i64 1, i64 %12) #5, !dbg !7603, !srcloc !7605
  %asmresult = extractvalue { i8*, i8, i64 } %14, 0, !dbg !7603
  %asmresult3 = extractvalue { i8*, i8, i64 } %14, 1, !dbg !7603
  %asmresult4 = extractvalue { i8*, i8, i64 } %14, 2, !dbg !7603
  %15 = ptrtoint i8* %asmresult to i64, !dbg !7603
  %16 = trunc i64 %15 to i32, !dbg !7603
  store i32 %16, i32* %__ret_gu, align 4, !dbg !7603
  store i8 %asmresult3, i8* %__val_gu, align 1, !dbg !7603
  call void @llvm.write_register.i64(metadata !4821, i64 %asmresult4), !dbg !7603
  %17 = load i8, i8* %__val_gu, align 1, !dbg !7603
  store i8 %17, i8* %type, align 1, !dbg !7603
  %18 = load i32, i32* %__ret_gu, align 4, !dbg !7603
  %conv = sext i32 %18 to i64, !dbg !7603
  store i64 %conv, i64* %tmp5, align 8, !dbg !7603
  %19 = load i64, i64* %tmp5, align 8, !dbg !7603
  store i64 %19, i64* %tmp, align 8, !dbg !7598
  %20 = load i64, i64* %tmp, align 8, !dbg !7598
  %tobool = icmp ne i64 %20, 0, !dbg !7606
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !7607

if.then6:                                         ; preds = %if.end
  store i32 -14, i32* %retval, align 4, !dbg !7608
  br label %return, !dbg !7608

if.end7:                                          ; preds = %if.end
  store i32 0, i32* %ret, align 4, !dbg !7609
  %21 = load i8, i8* %type, align 1, !dbg !7610
  %conv8 = sext i8 %21 to i32, !dbg !7610
  switch i32 %conv8, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb10
    i32 4, label %sw.bb12
    i32 5, label %sw.bb13
    i32 6, label %sw.bb15
    i32 7, label %sw.bb24
    i32 10, label %sw.bb36
    i32 17, label %sw.bb38
    i32 11, label %sw.bb50
    i32 12, label %sw.bb69
    i32 13, label %sw.bb70
    i32 14, label %sw.bb84
    i32 15, label %sw.bb85
  ], !dbg !7611

sw.bb:                                            ; preds = %if.end7
  %22 = load i8*, i8** %p, align 8, !dbg !7612
  %add.ptr = getelementptr i8, i8* %22, i64 1, !dbg !7614
  %23 = bitcast i8* %add.ptr to %struct.tiocl_selection*, !dbg !7615
  %24 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7616
  %call9 = call i32 @set_selection_user(%struct.tiocl_selection* %23, %struct.tty_struct* %24) #13, !dbg !7617
  store i32 %call9, i32* %ret, align 4, !dbg !7618
  br label %sw.epilog, !dbg !7619

sw.bb10:                                          ; preds = %if.end7
  %25 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7620
  %call11 = call i32 @paste_selection(%struct.tty_struct* %25) #13, !dbg !7621
  store i32 %call11, i32* %ret, align 4, !dbg !7622
  br label %sw.epilog, !dbg !7623

sw.bb12:                                          ; preds = %if.end7
  call void @console_lock() #13, !dbg !7624
  call void @unblank_screen() #13, !dbg !7625
  call void @console_unlock() #13, !dbg !7626
  br label %sw.epilog, !dbg !7627

sw.bb13:                                          ; preds = %if.end7
  call void @console_lock() #13, !dbg !7628
  %26 = load i8*, i8** %p, align 8, !dbg !7629
  %call14 = call i32 @sel_loadlut(i8* %26) #13, !dbg !7630
  store i32 %call14, i32* %ret, align 4, !dbg !7631
  call void @console_unlock() #13, !dbg !7632
  br label %sw.epilog, !dbg !7633

sw.bb15:                                          ; preds = %if.end7
  %call16 = call i32 @vt_get_shift_state() #13, !dbg !7634
  %conv17 = trunc i32 %call16 to i8, !dbg !7634
  store i8 %conv17, i8* %data, align 1, !dbg !7635
  call void @might_fault() #13, !dbg !7636
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !7638, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !7641, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.declare(metadata i8* %__val_pu, metadata !7642, metadata !DIExpression()), !dbg !7640
  %27 = load i8*, i8** %p, align 8, !dbg !7640
  store i8* %27, i8** %__ptr_pu, align 8, !dbg !7640
  %28 = load i8, i8* %data, align 1, !dbg !7640
  store i8 %28, i8* %__val_pu, align 1, !dbg !7640
  %29 = call i64 @llvm.read_register.i64(metadata !4821), !dbg !7640
  %30 = load i8*, i8** %__ptr_pu, align 8, !dbg !7640
  %31 = load i8, i8* %__val_pu, align 1, !dbg !7640
  %32 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %30, i8 %31, i64 1, i64 %29) #5, !dbg !7640, !srcloc !7643
  %asmresult19 = extractvalue { i8*, i64 } %32, 0, !dbg !7640
  %asmresult20 = extractvalue { i8*, i64 } %32, 1, !dbg !7640
  %33 = ptrtoint i8* %asmresult19 to i64, !dbg !7640
  %34 = trunc i64 %33 to i32, !dbg !7640
  store i32 %34, i32* %__ret_pu, align 4, !dbg !7640
  call void @llvm.write_register.i64(metadata !4821, i64 %asmresult20), !dbg !7640
  %35 = load i32, i32* %__ret_pu, align 4, !dbg !7640
  %conv22 = sext i32 %35 to i64, !dbg !7640
  store i64 %conv22, i64* %tmp21, align 8, !dbg !7640
  %36 = load i64, i64* %tmp21, align 8, !dbg !7640
  store i64 %36, i64* %tmp18, align 8, !dbg !7636
  %37 = load i64, i64* %tmp18, align 8, !dbg !7636
  %conv23 = trunc i64 %37 to i32, !dbg !7644
  store i32 %conv23, i32* %ret, align 4, !dbg !7645
  br label %sw.epilog, !dbg !7646

sw.bb24:                                          ; preds = %if.end7
  call void @console_lock() #13, !dbg !7647
  %call25 = call i32 @mouse_reporting() #13, !dbg !7648
  %conv26 = trunc i32 %call25 to i8, !dbg !7648
  store i8 %conv26, i8* %data, align 1, !dbg !7649
  call void @console_unlock() #13, !dbg !7650
  call void @might_fault() #13, !dbg !7651
  call void @llvm.dbg.declare(metadata i32* %__ret_pu28, metadata !7653, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu29, metadata !7656, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.declare(metadata i8* %__val_pu30, metadata !7657, metadata !DIExpression()), !dbg !7655
  %38 = load i8*, i8** %p, align 8, !dbg !7655
  store i8* %38, i8** %__ptr_pu29, align 8, !dbg !7655
  %39 = load i8, i8* %data, align 1, !dbg !7655
  store i8 %39, i8* %__val_pu30, align 1, !dbg !7655
  %40 = call i64 @llvm.read_register.i64(metadata !4821), !dbg !7655
  %41 = load i8*, i8** %__ptr_pu29, align 8, !dbg !7655
  %42 = load i8, i8* %__val_pu30, align 1, !dbg !7655
  %43 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %41, i8 %42, i64 1, i64 %40) #5, !dbg !7655, !srcloc !7658
  %asmresult31 = extractvalue { i8*, i64 } %43, 0, !dbg !7655
  %asmresult32 = extractvalue { i8*, i64 } %43, 1, !dbg !7655
  %44 = ptrtoint i8* %asmresult31 to i64, !dbg !7655
  %45 = trunc i64 %44 to i32, !dbg !7655
  store i32 %45, i32* %__ret_pu28, align 4, !dbg !7655
  call void @llvm.write_register.i64(metadata !4821, i64 %asmresult32), !dbg !7655
  %46 = load i32, i32* %__ret_pu28, align 4, !dbg !7655
  %conv34 = sext i32 %46 to i64, !dbg !7655
  store i64 %conv34, i64* %tmp33, align 8, !dbg !7655
  %47 = load i64, i64* %tmp33, align 8, !dbg !7655
  store i64 %47, i64* %tmp27, align 8, !dbg !7651
  %48 = load i64, i64* %tmp27, align 8, !dbg !7651
  %conv35 = trunc i64 %48 to i32, !dbg !7659
  store i32 %conv35, i32* %ret, align 4, !dbg !7660
  br label %sw.epilog, !dbg !7661

sw.bb36:                                          ; preds = %if.end7
  call void @console_lock() #13, !dbg !7662
  %49 = load i8*, i8** %p, align 8, !dbg !7663
  %call37 = call i32 @set_vesa_blanking(i8* %49) #13, !dbg !7664
  store i32 %call37, i32* %ret, align 4, !dbg !7665
  call void @console_unlock() #13, !dbg !7666
  br label %sw.epilog, !dbg !7667

sw.bb38:                                          ; preds = %if.end7
  %call39 = call i32 @vt_kmsg_redirect(i32 -1) #13, !dbg !7668
  %conv40 = trunc i32 %call39 to i8, !dbg !7668
  store i8 %conv40, i8* %data, align 1, !dbg !7669
  call void @might_fault() #13, !dbg !7670
  call void @llvm.dbg.declare(metadata i32* %__ret_pu42, metadata !7672, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu43, metadata !7675, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.declare(metadata i8* %__val_pu44, metadata !7676, metadata !DIExpression()), !dbg !7674
  %50 = load i8*, i8** %p, align 8, !dbg !7674
  store i8* %50, i8** %__ptr_pu43, align 8, !dbg !7674
  %51 = load i8, i8* %data, align 1, !dbg !7674
  store i8 %51, i8* %__val_pu44, align 1, !dbg !7674
  %52 = call i64 @llvm.read_register.i64(metadata !4821), !dbg !7674
  %53 = load i8*, i8** %__ptr_pu43, align 8, !dbg !7674
  %54 = load i8, i8* %__val_pu44, align 1, !dbg !7674
  %55 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %53, i8 %54, i64 1, i64 %52) #5, !dbg !7674, !srcloc !7677
  %asmresult45 = extractvalue { i8*, i64 } %55, 0, !dbg !7674
  %asmresult46 = extractvalue { i8*, i64 } %55, 1, !dbg !7674
  %56 = ptrtoint i8* %asmresult45 to i64, !dbg !7674
  %57 = trunc i64 %56 to i32, !dbg !7674
  store i32 %57, i32* %__ret_pu42, align 4, !dbg !7674
  call void @llvm.write_register.i64(metadata !4821, i64 %asmresult46), !dbg !7674
  %58 = load i32, i32* %__ret_pu42, align 4, !dbg !7674
  %conv48 = sext i32 %58 to i64, !dbg !7674
  store i64 %conv48, i64* %tmp47, align 8, !dbg !7674
  %59 = load i64, i64* %tmp47, align 8, !dbg !7674
  store i64 %59, i64* %tmp41, align 8, !dbg !7670
  %60 = load i64, i64* %tmp41, align 8, !dbg !7670
  %conv49 = trunc i64 %60 to i32, !dbg !7678
  store i32 %conv49, i32* %ret, align 4, !dbg !7679
  br label %sw.epilog, !dbg !7680

sw.bb50:                                          ; preds = %if.end7
  %call51 = call zeroext i1 @capable(i32 21) #13, !dbg !7681
  br i1 %call51, label %if.else, label %if.then52, !dbg !7683

if.then52:                                        ; preds = %sw.bb50
  store i32 -1, i32* %ret, align 4, !dbg !7684
  br label %if.end68, !dbg !7686

if.else:                                          ; preds = %sw.bb50
  call void @might_fault() #13, !dbg !7687
  call void @llvm.dbg.declare(metadata i32* %__ret_gu54, metadata !7691, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.declare(metadata i8* %__val_gu55, metadata !7694, metadata !DIExpression()), !dbg !7693
  %61 = call i64 @llvm.read_register.i64(metadata !4821), !dbg !7693
  %62 = load i8*, i8** %p, align 8, !dbg !7693
  %add.ptr56 = getelementptr i8, i8* %62, i64 1, !dbg !7693
  %63 = call { i8*, i8, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr56, i64 1, i64 %61) #5, !dbg !7693, !srcloc !7695
  %asmresult57 = extractvalue { i8*, i8, i64 } %63, 0, !dbg !7693
  %asmresult58 = extractvalue { i8*, i8, i64 } %63, 1, !dbg !7693
  %asmresult59 = extractvalue { i8*, i8, i64 } %63, 2, !dbg !7693
  %64 = ptrtoint i8* %asmresult57 to i64, !dbg !7693
  %65 = trunc i64 %64 to i32, !dbg !7693
  store i32 %65, i32* %__ret_gu54, align 4, !dbg !7693
  store i8 %asmresult58, i8* %__val_gu55, align 1, !dbg !7693
  call void @llvm.write_register.i64(metadata !4821, i64 %asmresult59), !dbg !7693
  %66 = load i8, i8* %__val_gu55, align 1, !dbg !7693
  store i8 %66, i8* %data, align 1, !dbg !7693
  %67 = load i32, i32* %__ret_gu54, align 4, !dbg !7693
  %conv61 = sext i32 %67 to i64, !dbg !7693
  store i64 %conv61, i64* %tmp60, align 8, !dbg !7693
  %68 = load i64, i64* %tmp60, align 8, !dbg !7693
  store i64 %68, i64* %tmp53, align 8, !dbg !7687
  %69 = load i64, i64* %tmp53, align 8, !dbg !7687
  %tobool62 = icmp ne i64 %69, 0, !dbg !7696
  br i1 %tobool62, label %if.then63, label %if.else64, !dbg !7697

if.then63:                                        ; preds = %if.else
  store i32 -14, i32* %ret, align 4, !dbg !7698
  br label %if.end67, !dbg !7699

if.else64:                                        ; preds = %if.else
  %70 = load i8, i8* %data, align 1, !dbg !7700
  %conv65 = sext i8 %70 to i32, !dbg !7700
  %call66 = call i32 @vt_kmsg_redirect(i32 %conv65) #13, !dbg !7701
  br label %if.end67

if.end67:                                         ; preds = %if.else64, %if.then63
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then52
  br label %sw.epilog, !dbg !7702

sw.bb69:                                          ; preds = %if.end7
  %71 = load i32, i32* @fg_console, align 4, !dbg !7703
  store i32 %71, i32* %ret, align 4, !dbg !7704
  br label %sw.epilog, !dbg !7705

sw.bb70:                                          ; preds = %if.end7
  call void @might_fault() #13, !dbg !7706
  call void @llvm.dbg.declare(metadata i32* %__ret_gu72, metadata !7709, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.declare(metadata i32* %__val_gu73, metadata !7712, metadata !DIExpression()), !dbg !7711
  %72 = call i64 @llvm.read_register.i64(metadata !4821), !dbg !7711
  %73 = load i8*, i8** %p, align 8, !dbg !7711
  %add.ptr74 = getelementptr i8, i8* %73, i64 4, !dbg !7711
  %74 = bitcast i8* %add.ptr74 to i32*, !dbg !7711
  %75 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %74, i64 4, i64 %72) #5, !dbg !7711, !srcloc !7713
  %asmresult75 = extractvalue { i32*, i32, i64 } %75, 0, !dbg !7711
  %asmresult76 = extractvalue { i32*, i32, i64 } %75, 1, !dbg !7711
  %asmresult77 = extractvalue { i32*, i32, i64 } %75, 2, !dbg !7711
  %76 = ptrtoint i32* %asmresult75 to i64, !dbg !7711
  %77 = trunc i64 %76 to i32, !dbg !7711
  store i32 %77, i32* %__ret_gu72, align 4, !dbg !7711
  store i32 %asmresult76, i32* %__val_gu73, align 4, !dbg !7711
  call void @llvm.write_register.i64(metadata !4821, i64 %asmresult77), !dbg !7711
  %78 = load i32, i32* %__val_gu73, align 4, !dbg !7711
  store i32 %78, i32* %lines, align 4, !dbg !7711
  %79 = load i32, i32* %__ret_gu72, align 4, !dbg !7711
  %conv79 = sext i32 %79 to i64, !dbg !7711
  store i64 %conv79, i64* %tmp78, align 8, !dbg !7711
  %80 = load i64, i64* %tmp78, align 8, !dbg !7711
  store i64 %80, i64* %tmp71, align 8, !dbg !7706
  %81 = load i64, i64* %tmp71, align 8, !dbg !7706
  %tobool80 = icmp ne i64 %81, 0, !dbg !7714
  br i1 %tobool80, label %if.then81, label %if.else82, !dbg !7715

if.then81:                                        ; preds = %sw.bb70
  store i32 -14, i32* %ret, align 4, !dbg !7716
  br label %if.end83, !dbg !7718

if.else82:                                        ; preds = %sw.bb70
  call void @console_lock() #13, !dbg !7719
  %82 = load i32, i32* @fg_console, align 4, !dbg !7721
  %idxprom = sext i32 %82 to i64, !dbg !7722
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !7722
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !7723
  %83 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !7723
  %84 = load i32, i32* %lines, align 4, !dbg !7724
  call void @scrollfront(%struct.vc_data* %83, i32 %84) #13, !dbg !7725
  call void @console_unlock() #13, !dbg !7726
  store i32 0, i32* %ret, align 4, !dbg !7727
  br label %if.end83

if.end83:                                         ; preds = %if.else82, %if.then81
  br label %sw.epilog, !dbg !7728

sw.bb84:                                          ; preds = %if.end7
  call void @console_lock() #13, !dbg !7729
  store i32 1, i32* @ignore_poke, align 4, !dbg !7730
  call void @do_blank_screen(i32 0) #13, !dbg !7731
  call void @console_unlock() #13, !dbg !7732
  br label %sw.epilog, !dbg !7733

sw.bb85:                                          ; preds = %if.end7
  %85 = load i32, i32* @console_blanked, align 4, !dbg !7734
  store i32 %85, i32* %ret, align 4, !dbg !7735
  br label %sw.epilog, !dbg !7736

sw.default:                                       ; preds = %if.end7
  store i32 -22, i32* %ret, align 4, !dbg !7737
  br label %sw.epilog, !dbg !7738

sw.epilog:                                        ; preds = %sw.default, %sw.bb85, %sw.bb84, %if.end83, %sw.bb69, %if.end68, %sw.bb38, %sw.bb36, %sw.bb24, %sw.bb15, %sw.bb13, %sw.bb12, %sw.bb10, %sw.bb
  %86 = load i32, i32* %ret, align 4, !dbg !7739
  store i32 %86, i32* %retval, align 4, !dbg !7740
  br label %return, !dbg !7740

return:                                           ; preds = %sw.epilog, %if.then6, %if.then
  %87 = load i32, i32* %retval, align 4, !dbg !7741
  ret i32 %87, !dbg !7741
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #0 !dbg !7742 {
entry:
  ret void, !dbg !7744
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #4

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #5

; Function Attrs: noredzone
declare dso_local i32 @set_selection_user(%struct.tiocl_selection*, %struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local i32 @paste_selection(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local void @console_lock() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @unblank_screen() #0 !dbg !7745 {
entry:
  call void @do_unblank_screen(i32 0) #13, !dbg !7746
  ret void, !dbg !7747
}

; Function Attrs: noredzone
declare dso_local void @console_unlock() #2

; Function Attrs: noredzone
declare dso_local i32 @sel_loadlut(i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @vt_get_shift_state() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_vesa_blanking(i8* %p) #0 !dbg !7748 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %mode = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i8, align 1
  %tmp3 = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7751, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7753, metadata !DIExpression()), !dbg !7754
  call void @might_fault() #13, !dbg !7755
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !7758, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.declare(metadata i8* %__val_gu, metadata !7761, metadata !DIExpression()), !dbg !7760
  %0 = call i64 @llvm.read_register.i64(metadata !4821), !dbg !7760
  %1 = load i8*, i8** %p.addr, align 8, !dbg !7760
  %add.ptr = getelementptr i8, i8* %1, i64 1, !dbg !7760
  %2 = call { i8*, i8, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr, i64 1, i64 %0) #5, !dbg !7760, !srcloc !7762
  %asmresult = extractvalue { i8*, i8, i64 } %2, 0, !dbg !7760
  %asmresult1 = extractvalue { i8*, i8, i64 } %2, 1, !dbg !7760
  %asmresult2 = extractvalue { i8*, i8, i64 } %2, 2, !dbg !7760
  %3 = ptrtoint i8* %asmresult to i64, !dbg !7760
  %4 = trunc i64 %3 to i32, !dbg !7760
  store i32 %4, i32* %__ret_gu, align 4, !dbg !7760
  store i8 %asmresult1, i8* %__val_gu, align 1, !dbg !7760
  call void @llvm.write_register.i64(metadata !4821, i64 %asmresult2), !dbg !7760
  %5 = load i8, i8* %__val_gu, align 1, !dbg !7760
  %conv = sext i8 %5 to i32, !dbg !7760
  store i32 %conv, i32* %mode, align 4, !dbg !7760
  %6 = load i32, i32* %__ret_gu, align 4, !dbg !7760
  %conv4 = sext i32 %6 to i64, !dbg !7760
  store i64 %conv4, i64* %tmp3, align 8, !dbg !7760
  %7 = load i64, i64* %tmp3, align 8, !dbg !7760
  store i64 %7, i64* %tmp, align 8, !dbg !7755
  %8 = load i64, i64* %tmp, align 8, !dbg !7755
  %tobool = icmp ne i64 %8, 0, !dbg !7763
  br i1 %tobool, label %if.then, label %if.end, !dbg !7764

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !7765
  br label %return, !dbg !7765

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %mode, align 4, !dbg !7766
  %cmp = icmp ult i32 %9, 4, !dbg !7767
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7768

cond.true:                                        ; preds = %if.end
  %10 = load i32, i32* %mode, align 4, !dbg !7769
  br label %cond.end, !dbg !7768

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !7768

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ 0, %cond.false ], !dbg !7768
  store i32 %cond, i32* @vesa_blank_mode, align 4, !dbg !7770
  store i32 0, i32* %retval, align 4, !dbg !7771
  br label %return, !dbg !7771

return:                                           ; preds = %cond.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !7772
  ret i32 %11, !dbg !7772
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @do_blank_screen(i32 %entering_gfx) #0 !dbg !7773 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !7774
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !7778
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !7780
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !7781
  %entering_gfx.addr = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %entering_gfx, i32* %entering_gfx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %entering_gfx.addr, metadata !7782, metadata !DIExpression()), !dbg !7783
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !7784, metadata !DIExpression()), !dbg !7785
  %0 = load i32, i32* @fg_console, align 4, !dbg !7786
  %idxprom = sext i32 %0 to i64, !dbg !7787
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !7787
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !7788
  %1 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !7788
  store %struct.vc_data* %1, %struct.vc_data** %vc, align 8, !dbg !7785
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7789, metadata !DIExpression()), !dbg !7790
  br label %do.body, !dbg !7791

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7792

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7794

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !7792

do.end2:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7796, metadata !DIExpression()), !dbg !7797
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7798
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !7798
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7799
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7800
  %conv.i.i = trunc i64 %5 to i32, !dbg !7800
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %4, i32 %conv.i.i) #14, !dbg !7801
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7802
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7802
  call void @kcsan_check_access(i8* %6, i64 %7, i32 4) #14, !dbg !7802
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7803
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7804
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %9, i32 0, i32 0, !dbg !7804
  %10 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7804
  %tobool = icmp ne i32 %10, 0, !dbg !7797
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !7797

land.lhs.true:                                    ; preds = %do.end2
  %call3 = call i32 @is_console_locked() #13, !dbg !7797
  %tobool4 = icmp ne i32 %call3, 0, !dbg !7797
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !7797

land.rhs:                                         ; preds = %land.lhs.true
  %11 = load i32, i32* @oops_in_progress, align 4, !dbg !7797
  %tobool5 = icmp ne i32 %11, 0, !dbg !7797
  %lnot = xor i1 %tobool5, true, !dbg !7797
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %do.end2
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %do.end2 ], [ %lnot, %land.rhs ], !dbg !7805
  %lnot6 = xor i1 %12, true, !dbg !7797
  %lnot7 = xor i1 %lnot6, true, !dbg !7797
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !7797
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7797
  %13 = load i32, i32* %__ret_warn_on, align 4, !dbg !7806
  %tobool8 = icmp ne i32 %13, 0, !dbg !7806
  %lnot9 = xor i1 %tobool8, true, !dbg !7806
  %lnot11 = xor i1 %lnot9, true, !dbg !7806
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !7806
  %conv = sext i32 %lnot.ext12 to i64, !dbg !7806
  %tobool13 = icmp ne i64 %conv, 0, !dbg !7806
  br i1 %tobool13, label %if.then, label %if.end, !dbg !7797

if.then:                                          ; preds = %land.end
  br label %do.body14, !dbg !7806

do.body14:                                        ; preds = %if.then
  br label %do.body15, !dbg !7808

do.body15:                                        ; preds = %do.body14
  br label %do.end16, !dbg !7810

do.end16:                                         ; preds = %do.body15
  br label %do.body17, !dbg !7808

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 4320, i32 2305, i64 12) #5, !dbg !7812, !srcloc !7814
  br label %do.end18, !dbg !7812

do.end18:                                         ; preds = %do.body17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 288) #5, !dbg !7815, !srcloc !7817
  br label %do.body19, !dbg !7808

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !7818

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !7808

do.end21:                                         ; preds = %do.end20
  br label %if.end, !dbg !7808

if.end:                                           ; preds = %do.end21, %land.end
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !7797
  %tobool22 = icmp ne i32 %14, 0, !dbg !7797
  %lnot23 = xor i1 %tobool22, true, !dbg !7797
  %lnot25 = xor i1 %lnot23, true, !dbg !7797
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !7797
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !7797
  store i64 %conv27, i64* %tmp, align 8, !dbg !7806
  %15 = load i64, i64* %tmp, align 8, !dbg !7797
  %16 = load i32, i32* @console_blanked, align 4, !dbg !7820
  %tobool28 = icmp ne i32 %16, 0, !dbg !7820
  br i1 %tobool28, label %if.then29, label %if.end34, !dbg !7822

if.then29:                                        ; preds = %if.end
  %17 = load i32, i32* @blank_state, align 4, !dbg !7823
  %cmp = icmp eq i32 %17, 2, !dbg !7826
  br i1 %cmp, label %if.then31, label %if.end33, !dbg !7827

if.then31:                                        ; preds = %if.then29
  store i32 0, i32* @blank_state, align 4, !dbg !7828
  %18 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7830
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 13, !dbg !7831
  %19 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !7831
  %con_blank = getelementptr inbounds %struct.consw, %struct.consw* %19, i32 0, i32 10, !dbg !7832
  %20 = load i32 (%struct.vc_data*, i32, i32)*, i32 (%struct.vc_data*, i32, i32)** %con_blank, align 8, !dbg !7832
  %21 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7833
  %22 = load i32, i32* @vesa_blank_mode, align 4, !dbg !7834
  %add = add i32 %22, 1, !dbg !7835
  %call32 = call i32 %20(%struct.vc_data* %21, i32 %add, i32 0) #13, !dbg !7830
  br label %if.end33, !dbg !7836

if.end33:                                         ; preds = %if.then31, %if.then29
  br label %return, !dbg !7837

if.end34:                                         ; preds = %if.end
  %23 = load i32, i32* %entering_gfx.addr, align 4, !dbg !7838
  %tobool35 = icmp ne i32 %23, 0, !dbg !7838
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !7840

if.then36:                                        ; preds = %if.end34
  %24 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7841
  call void @hide_cursor(%struct.vc_data* %24) #13, !dbg !7843
  %25 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7844
  call void @save_screen(%struct.vc_data* %25) #13, !dbg !7845
  %26 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7846
  %vc_sw37 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 13, !dbg !7847
  %27 = load %struct.consw*, %struct.consw** %vc_sw37, align 8, !dbg !7847
  %con_blank38 = getelementptr inbounds %struct.consw, %struct.consw* %27, i32 0, i32 10, !dbg !7848
  %28 = load i32 (%struct.vc_data*, i32, i32)*, i32 (%struct.vc_data*, i32, i32)** %con_blank38, align 8, !dbg !7848
  %29 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7849
  %call39 = call i32 %28(%struct.vc_data* %29, i32 -1, i32 1) #13, !dbg !7846
  %30 = load i32, i32* @fg_console, align 4, !dbg !7850
  %add40 = add i32 %30, 1, !dbg !7851
  store i32 %add40, i32* @console_blanked, align 4, !dbg !7852
  store i32 0, i32* @blank_state, align 4, !dbg !7853
  %31 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7854
  call void @set_origin(%struct.vc_data* %31) #13, !dbg !7855
  br label %return, !dbg !7856

if.end41:                                         ; preds = %if.end34
  store i32 0, i32* @blank_state, align 4, !dbg !7857
  %32 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7858
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 16, !dbg !7860
  %33 = load i8, i8* %vc_mode, align 4, !dbg !7860
  %conv42 = zext i8 %33 to i32, !dbg !7858
  %cmp43 = icmp ne i32 %conv42, 0, !dbg !7861
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !7862

if.then45:                                        ; preds = %if.end41
  %34 = load i32, i32* @fg_console, align 4, !dbg !7863
  %add46 = add i32 %34, 1, !dbg !7865
  store i32 %add46, i32* @console_blanked, align 4, !dbg !7866
  br label %return, !dbg !7867

if.end47:                                         ; preds = %if.end41
  %35 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7868
  call void @hide_cursor(%struct.vc_data* %35) #13, !dbg !7869
  %call48 = call i32 @del_timer(%struct.timer_list* @console_timer) #13, !dbg !7870
  store i32 0, i32* @blank_timer_expired, align 4, !dbg !7871
  %36 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7872
  call void @save_screen(%struct.vc_data* %36) #13, !dbg !7873
  %37 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7874
  %vc_sw49 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 13, !dbg !7875
  %38 = load %struct.consw*, %struct.consw** %vc_sw49, align 8, !dbg !7875
  %con_blank50 = getelementptr inbounds %struct.consw, %struct.consw* %38, i32 0, i32 10, !dbg !7876
  %39 = load i32 (%struct.vc_data*, i32, i32)*, i32 (%struct.vc_data*, i32, i32)** %con_blank50, align 8, !dbg !7876
  %40 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7877
  %41 = load i32, i32* @vesa_off_interval, align 4, !dbg !7878
  %tobool51 = icmp ne i32 %41, 0, !dbg !7878
  br i1 %tobool51, label %cond.true, label %cond.false, !dbg !7878

cond.true:                                        ; preds = %if.end47
  br label %cond.end, !dbg !7878

cond.false:                                       ; preds = %if.end47
  %42 = load i32, i32* @vesa_blank_mode, align 4, !dbg !7879
  %add52 = add i32 %42, 1, !dbg !7880
  br label %cond.end, !dbg !7878

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %add52, %cond.false ], !dbg !7878
  %call53 = call i32 %39(%struct.vc_data* %40, i32 %cond, i32 0) #13, !dbg !7874
  store i32 %call53, i32* %i, align 4, !dbg !7881
  %43 = load i32, i32* @fg_console, align 4, !dbg !7882
  %add54 = add i32 %43, 1, !dbg !7883
  store i32 %add54, i32* @console_blanked, align 4, !dbg !7884
  %44 = load i32, i32* %i, align 4, !dbg !7885
  %tobool55 = icmp ne i32 %44, 0, !dbg !7885
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !7887

if.then56:                                        ; preds = %cond.end
  %45 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7888
  call void @set_origin(%struct.vc_data* %45) #13, !dbg !7889
  br label %if.end57, !dbg !7889

if.end57:                                         ; preds = %if.then56, %cond.end
  %46 = load i32 (i32)*, i32 (i32)** @console_blank_hook, align 8, !dbg !7890
  %tobool58 = icmp ne i32 (i32)* %46, null, !dbg !7890
  br i1 %tobool58, label %land.lhs.true59, label %if.end63, !dbg !7892

land.lhs.true59:                                  ; preds = %if.end57
  %47 = load i32 (i32)*, i32 (i32)** @console_blank_hook, align 8, !dbg !7893
  %call60 = call i32 %47(i32 1) #13, !dbg !7893
  %tobool61 = icmp ne i32 %call60, 0, !dbg !7893
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !7894

if.then62:                                        ; preds = %land.lhs.true59
  br label %return, !dbg !7895

if.end63:                                         ; preds = %land.lhs.true59, %if.end57
  %48 = load i32, i32* @vesa_off_interval, align 4, !dbg !7896
  %tobool64 = icmp ne i32 %48, 0, !dbg !7896
  br i1 %tobool64, label %land.lhs.true65, label %if.end71, !dbg !7898

land.lhs.true65:                                  ; preds = %if.end63
  %49 = load i32, i32* @vesa_blank_mode, align 4, !dbg !7899
  %tobool66 = icmp ne i32 %49, 0, !dbg !7899
  br i1 %tobool66, label %if.then67, label %if.end71, !dbg !7900

if.then67:                                        ; preds = %land.lhs.true65
  store i32 2, i32* @blank_state, align 4, !dbg !7901
  %50 = load volatile i64, i64* @jiffies, align 8, !dbg !7903
  %51 = load i32, i32* @vesa_off_interval, align 4, !dbg !7904
  %conv68 = sext i32 %51 to i64, !dbg !7904
  %add69 = add i64 %50, %conv68, !dbg !7905
  %call70 = call i32 @mod_timer(%struct.timer_list* @console_timer, i64 %add69) #13, !dbg !7906
  br label %if.end71, !dbg !7907

if.end71:                                         ; preds = %if.then67, %land.lhs.true65, %if.end63
  %52 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7908
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %52, i32 0, i32 3, !dbg !7909
  %53 = load i16, i16* %vc_num, align 8, !dbg !7909
  %conv72 = zext i16 %53 to i32, !dbg !7908
  %54 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !7910
  %vc_num73 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %54, i32 0, i32 3, !dbg !7911
  %55 = load i16, i16* %vc_num73, align 8, !dbg !7911
  %conv74 = zext i16 %55 to i32, !dbg !7910
  call void @vt_event_post(i32 2, i32 %conv72, i32 %conv74) #13, !dbg !7912
  br label %return, !dbg !7913

return:                                           ; preds = %if.end71, %if.then62, %if.then45, %if.then36, %if.end33
  ret void, !dbg !7913
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @con_init() #6 section ".init.text" !dbg !7914 {
entry:
  %retval = alloca i32, align 4
  %display_desc = alloca i8*, align 8
  %vc = alloca %struct.vc_data*, align 8
  %currcons = alloca i32, align 4
  %i = alloca i32, align 4
  %con_driver = alloca %struct.con_driver*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  call void @llvm.dbg.declare(metadata i8** %display_desc, metadata !7915, metadata !DIExpression()), !dbg !7916
  store i8* null, i8** %display_desc, align 8, !dbg !7916
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !7917, metadata !DIExpression()), !dbg !7918
  call void @llvm.dbg.declare(metadata i32* %currcons, metadata !7919, metadata !DIExpression()), !dbg !7920
  store i32 0, i32* %currcons, align 4, !dbg !7920
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7921, metadata !DIExpression()), !dbg !7922
  call void @console_lock() #13, !dbg !7923
  %0 = load %struct.consw*, %struct.consw** @conswitchp, align 8, !dbg !7924
  %tobool = icmp ne %struct.consw* %0, null, !dbg !7924
  br i1 %tobool, label %if.end, label %if.then, !dbg !7926

if.then:                                          ; preds = %entry
  store %struct.consw* @dummy_con, %struct.consw** @conswitchp, align 8, !dbg !7927
  br label %if.end, !dbg !7928

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.consw*, %struct.consw** @conswitchp, align 8, !dbg !7929
  %con_startup = getelementptr inbounds %struct.consw, %struct.consw* %1, i32 0, i32 1, !dbg !7930
  %2 = load i8* ()*, i8* ()** %con_startup, align 8, !dbg !7930
  %call = call i8* %2() #13, !dbg !7929
  store i8* %call, i8** %display_desc, align 8, !dbg !7931
  %3 = load i8*, i8** %display_desc, align 8, !dbg !7932
  %tobool1 = icmp ne i8* %3, null, !dbg !7932
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !7934

if.then2:                                         ; preds = %if.end
  store i32 0, i32* @fg_console, align 4, !dbg !7935
  call void @console_unlock() #13, !dbg !7937
  store i32 0, i32* %retval, align 4, !dbg !7938
  br label %return, !dbg !7938

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !7939
  br label %for.cond, !dbg !7941

for.cond:                                         ; preds = %for.inc, %if.end3
  %4 = load i32, i32* %i, align 4, !dbg !7942
  %cmp = icmp ult i32 %4, 16, !dbg !7944
  br i1 %cmp, label %for.body, label %for.end, !dbg !7945

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con_driver, metadata !7946, metadata !DIExpression()), !dbg !7949
  %5 = load i32, i32* %i, align 4, !dbg !7950
  %idxprom = zext i32 %5 to i64, !dbg !7951
  %arrayidx = getelementptr [16 x %struct.con_driver], [16 x %struct.con_driver]* @registered_con_driver, i64 0, i64 %idxprom, !dbg !7951
  store %struct.con_driver* %arrayidx, %struct.con_driver** %con_driver, align 8, !dbg !7949
  %6 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !7952
  %con = getelementptr inbounds %struct.con_driver, %struct.con_driver* %6, i32 0, i32 0, !dbg !7954
  %7 = load %struct.consw*, %struct.consw** %con, align 8, !dbg !7954
  %cmp4 = icmp eq %struct.consw* %7, null, !dbg !7955
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !7956

if.then5:                                         ; preds = %for.body
  %8 = load %struct.consw*, %struct.consw** @conswitchp, align 8, !dbg !7957
  %9 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !7959
  %con6 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %9, i32 0, i32 0, !dbg !7960
  store %struct.consw* %8, %struct.consw** %con6, align 8, !dbg !7961
  %10 = load i8*, i8** %display_desc, align 8, !dbg !7962
  %11 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !7963
  %desc = getelementptr inbounds %struct.con_driver, %struct.con_driver* %11, i32 0, i32 1, !dbg !7964
  store i8* %10, i8** %desc, align 8, !dbg !7965
  %12 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !7966
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %12, i32 0, i32 6, !dbg !7967
  store i32 2, i32* %flag, align 4, !dbg !7968
  %13 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !7969
  %first = getelementptr inbounds %struct.con_driver, %struct.con_driver* %13, i32 0, i32 4, !dbg !7970
  store i32 0, i32* %first, align 4, !dbg !7971
  %14 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !7972
  %last = getelementptr inbounds %struct.con_driver, %struct.con_driver* %14, i32 0, i32 5, !dbg !7973
  store i32 62, i32* %last, align 8, !dbg !7974
  br label %for.end, !dbg !7975

if.end7:                                          ; preds = %for.body
  br label %for.inc, !dbg !7976

for.inc:                                          ; preds = %if.end7
  %15 = load i32, i32* %i, align 4, !dbg !7977
  %inc = add i32 %15, 1, !dbg !7977
  store i32 %inc, i32* %i, align 4, !dbg !7977
  br label %for.cond, !dbg !7978, !llvm.loop !7979

for.end:                                          ; preds = %if.then5, %for.cond
  store i32 0, i32* %i, align 4, !dbg !7981
  br label %for.cond8, !dbg !7983

for.cond8:                                        ; preds = %for.inc13, %for.end
  %16 = load i32, i32* %i, align 4, !dbg !7984
  %cmp9 = icmp ult i32 %16, 63, !dbg !7986
  br i1 %cmp9, label %for.body10, label %for.end15, !dbg !7987

for.body10:                                       ; preds = %for.cond8
  %17 = load %struct.consw*, %struct.consw** @conswitchp, align 8, !dbg !7988
  %18 = load i32, i32* %i, align 4, !dbg !7989
  %idxprom11 = zext i32 %18 to i64, !dbg !7990
  %arrayidx12 = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom11, !dbg !7990
  store %struct.consw* %17, %struct.consw** %arrayidx12, align 8, !dbg !7991
  br label %for.inc13, !dbg !7990

for.inc13:                                        ; preds = %for.body10
  %19 = load i32, i32* %i, align 4, !dbg !7992
  %inc14 = add i32 %19, 1, !dbg !7992
  store i32 %inc14, i32* %i, align 4, !dbg !7992
  br label %for.cond8, !dbg !7993, !llvm.loop !7994

for.end15:                                        ; preds = %for.cond8
  %20 = load i32, i32* @blankinterval, align 4, !dbg !7996
  %tobool16 = icmp ne i32 %20, 0, !dbg !7996
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !7998

if.then17:                                        ; preds = %for.end15
  store i32 1, i32* @blank_state, align 4, !dbg !7999
  %21 = load volatile i64, i64* @jiffies, align 8, !dbg !8001
  %22 = load i32, i32* @blankinterval, align 4, !dbg !8002
  %mul = mul i32 %22, 250, !dbg !8003
  %conv = sext i32 %mul to i64, !dbg !8004
  %add = add i64 %21, %conv, !dbg !8005
  %call18 = call i32 @mod_timer(%struct.timer_list* @console_timer, i64 %add) #13, !dbg !8006
  br label %if.end19, !dbg !8007

if.end19:                                         ; preds = %if.then17, %for.end15
  store i32 0, i32* %currcons, align 4, !dbg !8008
  br label %for.cond20, !dbg !8010

for.cond20:                                       ; preds = %for.inc43, %if.end19
  %23 = load i32, i32* %currcons, align 4, !dbg !8011
  %cmp21 = icmp ult i32 %23, 1, !dbg !8013
  br i1 %cmp21, label %for.body23, label %for.end45, !dbg !8014

for.body23:                                       ; preds = %for.cond20
  %call24 = call i8* @kzalloc(i64 744, i32 2048) #13, !dbg !8015
  %24 = bitcast i8* %call24 to %struct.vc_data*, !dbg !8015
  store %struct.vc_data* %24, %struct.vc_data** %vc, align 8, !dbg !8017
  %25 = load i32, i32* %currcons, align 4, !dbg !8018
  %idxprom25 = zext i32 %25 to i64, !dbg !8019
  %arrayidx26 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom25, !dbg !8019
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx26, i32 0, i32 0, !dbg !8020
  store %struct.vc_data* %24, %struct.vc_data** %d, align 8, !dbg !8021
  br label %do.body, !dbg !8022

do.body:                                          ; preds = %for.body23
  %26 = load i32, i32* %currcons, align 4, !dbg !8023
  %idxprom27 = zext i32 %26 to i64, !dbg !8023
  %arrayidx28 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom27, !dbg !8023
  %SAK_work = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx28, i32 0, i32 1, !dbg !8023
  call void @__init_work(%struct.work_struct* %SAK_work, i32 0) #13, !dbg !8023
  %27 = load i32, i32* %currcons, align 4, !dbg !8023
  %idxprom29 = zext i32 %27 to i64, !dbg !8023
  %arrayidx30 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom29, !dbg !8023
  %SAK_work31 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx30, i32 0, i32 1, !dbg !8023
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %SAK_work31, i32 0, i32 0, !dbg !8023
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !8023
  store i64 68719476704, i64* %counter, align 8, !dbg !8023
  %28 = bitcast %struct.atomic64_t* %data to i8*, !dbg !8023
  %29 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !8023
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 8, i1 false), !dbg !8023
  %30 = load i32, i32* %currcons, align 4, !dbg !8023
  %idxprom32 = zext i32 %30 to i64, !dbg !8023
  %arrayidx33 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom32, !dbg !8023
  %SAK_work34 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx33, i32 0, i32 1, !dbg !8023
  %entry35 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %SAK_work34, i32 0, i32 1, !dbg !8023
  call void @INIT_LIST_HEAD(%struct.list_head* %entry35) #13, !dbg !8023
  %31 = load i32, i32* %currcons, align 4, !dbg !8023
  %idxprom36 = zext i32 %31 to i64, !dbg !8023
  %arrayidx37 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom36, !dbg !8023
  %SAK_work38 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx37, i32 0, i32 1, !dbg !8023
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %SAK_work38, i32 0, i32 2, !dbg !8023
  store void (%struct.work_struct*)* @vc_SAK, void (%struct.work_struct*)** %func, align 8, !dbg !8023
  br label %do.end, !dbg !8023

do.end:                                           ; preds = %do.body
  %32 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8025
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 0, !dbg !8026
  call void @tty_port_init(%struct.tty_port* %port) #13, !dbg !8027
  %33 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8028
  %34 = load i32, i32* %currcons, align 4, !dbg !8029
  call void @visual_init(%struct.vc_data* %33, i32 %34, i32 1) #13, !dbg !8030
  %35 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8031
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 15, !dbg !8032
  %36 = load i32, i32* %vc_screenbuf_size, align 8, !dbg !8032
  %conv39 = zext i32 %36 to i64, !dbg !8031
  %call40 = call i8* @kzalloc(i64 %conv39, i32 2048) #13, !dbg !8033
  %37 = bitcast i8* %call40 to i16*, !dbg !8033
  %38 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8034
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %38, i32 0, i32 14, !dbg !8035
  store i16* %37, i16** %vc_screenbuf, align 8, !dbg !8036
  %39 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8037
  %40 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8038
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %40, i32 0, i32 5, !dbg !8039
  %41 = load i32, i32* %vc_rows, align 8, !dbg !8039
  %42 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8040
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 4, !dbg !8041
  %43 = load i32, i32* %vc_cols, align 4, !dbg !8041
  %44 = load i32, i32* %currcons, align 4, !dbg !8042
  %tobool41 = icmp ne i32 %44, 0, !dbg !8042
  br i1 %tobool41, label %lor.end, label %lor.rhs, !dbg !8043

lor.rhs:                                          ; preds = %do.end
  %45 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8044
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %45, i32 0, i32 13, !dbg !8045
  %46 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !8045
  %con_save_screen = getelementptr inbounds %struct.consw, %struct.consw* %46, i32 0, i32 19, !dbg !8046
  %47 = load void (%struct.vc_data*)*, void (%struct.vc_data*)** %con_save_screen, align 8, !dbg !8046
  %tobool42 = icmp ne void (%struct.vc_data*)* %47, null, !dbg !8047
  %lnot = xor i1 %tobool42, true, !dbg !8047
  br label %lor.end, !dbg !8043

lor.end:                                          ; preds = %lor.rhs, %do.end
  %48 = phi i1 [ true, %do.end ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %48 to i32, !dbg !8043
  call void @vc_init(%struct.vc_data* %39, i32 %41, i32 %43, i32 %lor.ext) #13, !dbg !8048
  br label %for.inc43, !dbg !8049

for.inc43:                                        ; preds = %lor.end
  %49 = load i32, i32* %currcons, align 4, !dbg !8050
  %inc44 = add i32 %49, 1, !dbg !8050
  store i32 %inc44, i32* %currcons, align 4, !dbg !8050
  br label %for.cond20, !dbg !8051, !llvm.loop !8052

for.end45:                                        ; preds = %for.cond20
  store i32 0, i32* @fg_console, align 4, !dbg !8054
  store i32 0, i32* %currcons, align 4, !dbg !8055
  %50 = load i32, i32* %currcons, align 4, !dbg !8056
  %idxprom46 = zext i32 %50 to i64, !dbg !8057
  %arrayidx47 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom46, !dbg !8057
  %d48 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx47, i32 0, i32 0, !dbg !8058
  %51 = load %struct.vc_data*, %struct.vc_data** %d48, align 8, !dbg !8058
  store %struct.vc_data* %51, %struct.vc_data** %vc, align 8, !dbg !8059
  store %struct.vc_data* %51, %struct.vc_data** @master_display_fg, align 8, !dbg !8060
  %52 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8061
  call void @set_origin(%struct.vc_data* %52) #13, !dbg !8062
  %53 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8063
  call void @save_screen(%struct.vc_data* %53) #13, !dbg !8064
  %54 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8065
  %55 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8066
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %55, i32 0, i32 1, !dbg !8067
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !8068
  %56 = load i32, i32* %x, align 8, !dbg !8068
  %57 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8069
  %state49 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %57, i32 0, i32 1, !dbg !8070
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state49, i32 0, i32 1, !dbg !8071
  %58 = load i32, i32* %y, align 4, !dbg !8071
  call void @gotoxy(%struct.vc_data* %54, i32 %56, i32 %58) #13, !dbg !8072
  %59 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8073
  call void @csi_J(%struct.vc_data* %59, i32 0) #13, !dbg !8074
  %60 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8075
  call void @redraw_screen(%struct.vc_data* %60, i32 0) #13, !dbg !8075
  %61 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8076
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %61, i32 0, i32 36, !dbg !8076
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !8076
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !8076
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8076
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8076
  %tobool50 = icmp ne i32 %bf.cast, 0, !dbg !8076
  %62 = zext i1 %tobool50 to i64, !dbg !8076
  %cond = select i1 %tobool50, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), !dbg !8076
  %63 = load i8*, i8** %display_desc, align 8, !dbg !8076
  %64 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8076
  %vc_cols51 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %64, i32 0, i32 4, !dbg !8076
  %65 = load i32, i32* %vc_cols51, align 4, !dbg !8076
  %66 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8076
  %vc_rows52 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %66, i32 0, i32 5, !dbg !8076
  %67 = load i32, i32* %vc_rows52, align 8, !dbg !8076
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i8* %cond, i8* %63, i32 %65, i32 %67) #17, !dbg !8076
  store i32 1, i32* @printable, align 4, !dbg !8077
  call void @console_unlock() #13, !dbg !8078
  call void @register_console(%struct.console* @vt_console_driver) #13, !dbg !8079
  store i32 0, i32* %retval, align 4, !dbg !8080
  br label %return, !dbg !8080

return:                                           ; preds = %for.end45, %if.then2
  %68 = load i32, i32* %retval, align 4, !dbg !8081
  ret i32 %68, !dbg !8081
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vty_init(%struct.file_operations* %console_fops) #6 section ".init.text" !dbg !8082 {
entry:
  %console_fops.addr = alloca %struct.file_operations*, align 8
  store %struct.file_operations* %console_fops, %struct.file_operations** %console_fops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file_operations** %console_fops.addr, metadata !8085, metadata !DIExpression()), !dbg !8086
  %0 = load %struct.file_operations*, %struct.file_operations** %console_fops.addr, align 8, !dbg !8087
  call void @cdev_init(%struct.cdev* @vc0_cdev, %struct.file_operations* %0) #13, !dbg !8088
  %call = call i32 @cdev_add(%struct.cdev* @vc0_cdev, i32 4194304, i32 1) #13, !dbg !8089
  %tobool = icmp ne i32 %call, 0, !dbg !8089
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8091

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32 @register_chrdev_region(i32 4194304, i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !8092
  %cmp = icmp slt i32 %call1, 0, !dbg !8093
  br i1 %cmp, label %if.then, label %if.end, !dbg !8094

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0)) #18, !dbg !8095
  unreachable, !dbg !8095

if.end:                                           ; preds = %lor.lhs.false
  %1 = load %struct.class*, %struct.class** @tty_class, align 8, !dbg !8096
  %call2 = call %struct.device* (%struct.class*, %struct.device*, i32, i8*, %struct.attribute_group**, i8*, ...) @device_create_with_groups(%struct.class* %1, %struct.device* null, i32 4194304, i8* null, %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @vt_dev_groups, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !8097
  store %struct.device* %call2, %struct.device** @tty0dev, align 8, !dbg !8098
  %2 = load %struct.device*, %struct.device** @tty0dev, align 8, !dbg !8099
  %3 = bitcast %struct.device* %2 to i8*, !dbg !8099
  %call3 = call zeroext i1 @IS_ERR(i8* %3) #13, !dbg !8101
  br i1 %call3, label %if.then4, label %if.end5, !dbg !8102

if.then4:                                         ; preds = %if.end
  store %struct.device* null, %struct.device** @tty0dev, align 8, !dbg !8103
  br label %if.end5, !dbg !8104

if.end5:                                          ; preds = %if.then4, %if.end
  %call6 = call i32 @vcs_init() #13, !dbg !8105
  %call7 = call %struct.tty_driver* @alloc_tty_driver(i32 63) #13, !dbg !8106
  store %struct.tty_driver* %call7, %struct.tty_driver** @console_driver, align 8, !dbg !8107
  %4 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8108
  %tobool8 = icmp ne %struct.tty_driver* %4, null, !dbg !8108
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !8110

if.then9:                                         ; preds = %if.end5
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0)) #18, !dbg !8111
  unreachable, !dbg !8111

if.end10:                                         ; preds = %if.end5
  %5 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8112
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %5, i32 0, i32 5, !dbg !8113
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8** %name, align 8, !dbg !8114
  %6 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8115
  %name_base = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %6, i32 0, i32 6, !dbg !8116
  store i32 1, i32* %name_base, align 8, !dbg !8117
  %7 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8118
  %major = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %7, i32 0, i32 7, !dbg !8119
  store i32 4, i32* %major, align 4, !dbg !8120
  %8 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8121
  %minor_start = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %8, i32 0, i32 8, !dbg !8122
  store i32 1, i32* %minor_start, align 8, !dbg !8123
  %9 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8124
  %type = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %9, i32 0, i32 10, !dbg !8125
  store i16 2, i16* %type, align 8, !dbg !8126
  %10 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8127
  %init_termios = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %10, i32 0, i32 12, !dbg !8128
  %11 = bitcast %struct.ktermios* %init_termios to i8*, !dbg !8129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 bitcast (%struct.ktermios* @tty_std_termios to i8*), i64 44, i1 false), !dbg !8129
  %12 = load i32, i32* @default_utf8, align 4, !dbg !8130
  %tobool11 = icmp ne i32 %12, 0, !dbg !8130
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !8132

if.then12:                                        ; preds = %if.end10
  %13 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8133
  %init_termios13 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %13, i32 0, i32 12, !dbg !8134
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios13, i32 0, i32 0, !dbg !8135
  %14 = load i32, i32* %c_iflag, align 4, !dbg !8136
  %or = or i32 %14, 16384, !dbg !8136
  store i32 %or, i32* %c_iflag, align 4, !dbg !8136
  br label %if.end14, !dbg !8133

if.end14:                                         ; preds = %if.then12, %if.end10
  %15 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8137
  %flags = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %15, i32 0, i32 13, !dbg !8138
  store i64 6, i64* %flags, align 8, !dbg !8139
  %16 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8140
  call void @tty_set_operations(%struct.tty_driver* %16, %struct.tty_operations* @con_ops) #13, !dbg !8141
  %17 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !8142
  %call15 = call i32 @tty_register_driver(%struct.tty_driver* %17) #13, !dbg !8144
  %tobool16 = icmp ne i32 %call15, 0, !dbg !8144
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !8145

if.then17:                                        ; preds = %if.end14
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0)) #18, !dbg !8146
  unreachable, !dbg !8146

if.end18:                                         ; preds = %if.end14
  %call19 = call i32 @kbd_init() #13, !dbg !8147
  call void @console_map_init() #13, !dbg !8148
  ret i32 0, !dbg !8149
}

; Function Attrs: noredzone
declare dso_local void @cdev_init(%struct.cdev*, %struct.file_operations*) #2

; Function Attrs: noredzone
declare dso_local i32 @cdev_add(%struct.cdev*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @register_chrdev_region(i32, i32, i8*) #2

; Function Attrs: cold noredzone noreturn
declare dso_local void @panic(i8*, ...) #7

; Function Attrs: noredzone
declare dso_local %struct.device* @device_create_with_groups(%struct.class*, %struct.device*, i32, i8*, %struct.attribute_group**, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !8150 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !8156
  %1 = ptrtoint i8* %0 to i64, !dbg !8156
  %2 = inttoptr i64 %1 to i8*, !dbg !8156
  %3 = ptrtoint i8* %2 to i64, !dbg !8156
  %cmp = icmp uge i64 %3, -4095, !dbg !8156
  %lnot = xor i1 %cmp, true, !dbg !8156
  %lnot1 = xor i1 %lnot, true, !dbg !8156
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8156
  %conv = sext i32 %lnot.ext to i64, !dbg !8156
  %tobool = icmp ne i64 %conv, 0, !dbg !8156
  ret i1 %tobool, !dbg !8157
}

; Function Attrs: noredzone
declare dso_local i32 @vcs_init() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tty_driver* @alloc_tty_driver(i32 %lines) #0 !dbg !8158 {
entry:
  %retval = alloca %struct.tty_driver*, align 8
  %lines.addr = alloca i32, align 4
  %ret = alloca %struct.tty_driver*, align 8
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !8161, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %ret, metadata !8163, metadata !DIExpression()), !dbg !8164
  %0 = load i32, i32* %lines.addr, align 4, !dbg !8165
  %call = call %struct.tty_driver* @__tty_alloc_driver(i32 %0, %struct.module* null, i64 0) #13, !dbg !8165
  store %struct.tty_driver* %call, %struct.tty_driver** %ret, align 8, !dbg !8164
  %1 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !8166
  %2 = bitcast %struct.tty_driver* %1 to i8*, !dbg !8166
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #13, !dbg !8168
  br i1 %call1, label %if.then, label %if.end, !dbg !8169

if.then:                                          ; preds = %entry
  store %struct.tty_driver* null, %struct.tty_driver** %retval, align 8, !dbg !8170
  br label %return, !dbg !8170

if.end:                                           ; preds = %entry
  %3 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !8171
  store %struct.tty_driver* %3, %struct.tty_driver** %retval, align 8, !dbg !8172
  br label %return, !dbg !8172

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.tty_driver*, %struct.tty_driver** %retval, align 8, !dbg !8173
  ret %struct.tty_driver* %4, !dbg !8173
}

; Function Attrs: noredzone
declare dso_local void @tty_set_operations(%struct.tty_driver*, %struct.tty_operations*) #2

; Function Attrs: noredzone
declare dso_local i32 @tty_register_driver(%struct.tty_driver*) #2

; Function Attrs: noredzone
declare dso_local i32 @kbd_init() #2

; Function Attrs: noredzone
declare dso_local void @console_map_init() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @do_unbind_con_driver(%struct.consw* %csw, i32 %first, i32 %last, i32 %deflt) #0 !dbg !8174 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !8177
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !8181
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !8183
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !8184
  %retval = alloca i32, align 4
  %csw.addr = alloca %struct.consw*, align 8
  %first.addr = alloca i32, align 4
  %last.addr = alloca i32, align 4
  %deflt.addr = alloca i32, align 4
  %owner = alloca %struct.module*, align 8
  %defcsw = alloca %struct.consw*, align 8
  %con_driver = alloca %struct.con_driver*, align 8
  %con_back = alloca %struct.con_driver*, align 8
  %i = alloca i32, align 4
  %retval2 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x278 = alloca i32, align 4
  %__UNIQUE_ID___y279 = alloca i32, align 4
  %tmp65 = alloca i32, align 4
  %__UNIQUE_ID___x280 = alloca i32, align 4
  %__UNIQUE_ID___y281 = alloca i32, align 4
  %tmp69 = alloca i32, align 4
  %defconsw = alloca %struct.consw*, align 8
  store %struct.consw* %csw, %struct.consw** %csw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.consw** %csw.addr, metadata !8185, metadata !DIExpression()), !dbg !8186
  store i32 %first, i32* %first.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first.addr, metadata !8187, metadata !DIExpression()), !dbg !8188
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !8189, metadata !DIExpression()), !dbg !8190
  store i32 %deflt, i32* %deflt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %deflt.addr, metadata !8191, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.declare(metadata %struct.module** %owner, metadata !8193, metadata !DIExpression()), !dbg !8194
  %0 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8195
  %owner1 = getelementptr inbounds %struct.consw, %struct.consw* %0, i32 0, i32 0, !dbg !8196
  %1 = load %struct.module*, %struct.module** %owner1, align 8, !dbg !8196
  store %struct.module* %1, %struct.module** %owner, align 8, !dbg !8194
  call void @llvm.dbg.declare(metadata %struct.consw** %defcsw, metadata !8197, metadata !DIExpression()), !dbg !8198
  store %struct.consw* null, %struct.consw** %defcsw, align 8, !dbg !8198
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con_driver, metadata !8199, metadata !DIExpression()), !dbg !8200
  store %struct.con_driver* null, %struct.con_driver** %con_driver, align 8, !dbg !8200
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con_back, metadata !8201, metadata !DIExpression()), !dbg !8202
  store %struct.con_driver* null, %struct.con_driver** %con_back, align 8, !dbg !8202
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8203, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !8205, metadata !DIExpression()), !dbg !8206
  store i32 -19, i32* %retval2, align 4, !dbg !8206
  %2 = load %struct.module*, %struct.module** %owner, align 8, !dbg !8207
  %call = call zeroext i1 @try_module_get(%struct.module* %2) #13, !dbg !8209
  br i1 %call, label %if.end, label %if.then, !dbg !8210

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !8211
  br label %return, !dbg !8211

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8212, metadata !DIExpression()), !dbg !8213
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %3 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8214
  %4 = bitcast %struct.atomic_t* %3 to i8*, !dbg !8214
  store i8* %4, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8215
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !8216
  %conv.i.i = trunc i64 %6 to i32, !dbg !8216
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %5, i32 %conv.i.i) #14, !dbg !8217
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8218
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8218
  call void @kcsan_check_access(i8* %7, i64 %8, i32 4) #14, !dbg !8218
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8219
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8220
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %10, i32 0, i32 0, !dbg !8220
  %11 = load volatile i32, i32* %counter.i.i, align 4, !dbg !8220
  %tobool = icmp ne i32 %11, 0, !dbg !8213
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !8213

land.lhs.true:                                    ; preds = %if.end
  %call4 = call i32 @is_console_locked() #13, !dbg !8213
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8213
  br i1 %tobool5, label %land.end, label %land.rhs, !dbg !8213

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load i32, i32* @oops_in_progress, align 4, !dbg !8213
  %tobool6 = icmp ne i32 %12, 0, !dbg !8213
  %lnot = xor i1 %tobool6, true, !dbg !8213
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.end
  %13 = phi i1 [ false, %land.lhs.true ], [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !8221
  %lnot7 = xor i1 %13, true, !dbg !8213
  %lnot8 = xor i1 %lnot7, true, !dbg !8213
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !8213
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8213
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !8222
  %tobool9 = icmp ne i32 %14, 0, !dbg !8222
  %lnot10 = xor i1 %tobool9, true, !dbg !8222
  %lnot12 = xor i1 %lnot10, true, !dbg !8222
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !8222
  %conv = sext i32 %lnot.ext13 to i64, !dbg !8222
  %tobool14 = icmp ne i64 %conv, 0, !dbg !8222
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !8213

if.then15:                                        ; preds = %land.end
  br label %do.body, !dbg !8222

do.body:                                          ; preds = %if.then15
  br label %do.body16, !dbg !8224

do.body16:                                        ; preds = %do.body
  br label %do.end, !dbg !8226

do.end:                                           ; preds = %do.body16
  br label %do.body17, !dbg !8224

do.body17:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 3711, i32 2305, i64 12) #5, !dbg !8228, !srcloc !8230
  br label %do.end18, !dbg !8228

do.end18:                                         ; preds = %do.body17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 277) #5, !dbg !8231, !srcloc !8233
  br label %do.body19, !dbg !8224

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !8234

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !8224

do.end21:                                         ; preds = %do.end20
  br label %if.end22, !dbg !8224

if.end22:                                         ; preds = %do.end21, %land.end
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !8213
  %tobool23 = icmp ne i32 %15, 0, !dbg !8213
  %lnot24 = xor i1 %tobool23, true, !dbg !8213
  %lnot26 = xor i1 %lnot24, true, !dbg !8213
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !8213
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !8213
  store i64 %conv28, i64* %tmp, align 8, !dbg !8222
  %16 = load i64, i64* %tmp, align 8, !dbg !8213
  store i32 0, i32* %i, align 4, !dbg !8236
  br label %for.cond, !dbg !8238

for.cond:                                         ; preds = %for.inc, %if.end22
  %17 = load i32, i32* %i, align 4, !dbg !8239
  %cmp = icmp slt i32 %17, 16, !dbg !8241
  br i1 %cmp, label %for.body, label %for.end, !dbg !8242

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !8243
  %idxprom = sext i32 %18 to i64, !dbg !8245
  %arrayidx = getelementptr [16 x %struct.con_driver], [16 x %struct.con_driver]* @registered_con_driver, i64 0, i64 %idxprom, !dbg !8245
  store %struct.con_driver* %arrayidx, %struct.con_driver** %con_driver, align 8, !dbg !8246
  %19 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8247
  %con = getelementptr inbounds %struct.con_driver, %struct.con_driver* %19, i32 0, i32 0, !dbg !8249
  %20 = load %struct.consw*, %struct.consw** %con, align 8, !dbg !8249
  %21 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8250
  %cmp30 = icmp eq %struct.consw* %20, %21, !dbg !8251
  br i1 %cmp30, label %land.lhs.true32, label %if.end35, !dbg !8252

land.lhs.true32:                                  ; preds = %for.body
  %22 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8253
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %22, i32 0, i32 6, !dbg !8254
  %23 = load i32, i32* %flag, align 4, !dbg !8254
  %and = and i32 %23, 1, !dbg !8255
  %tobool33 = icmp ne i32 %and, 0, !dbg !8255
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !8256

if.then34:                                        ; preds = %land.lhs.true32
  store i32 0, i32* %retval2, align 4, !dbg !8257
  br label %for.end, !dbg !8259

if.end35:                                         ; preds = %land.lhs.true32, %for.body
  br label %for.inc, !dbg !8260

for.inc:                                          ; preds = %if.end35
  %24 = load i32, i32* %i, align 4, !dbg !8261
  %inc = add i32 %24, 1, !dbg !8261
  store i32 %inc, i32* %i, align 4, !dbg !8261
  br label %for.cond, !dbg !8262, !llvm.loop !8263

for.end:                                          ; preds = %if.then34, %for.cond
  %25 = load i32, i32* %retval2, align 4, !dbg !8265
  %tobool36 = icmp ne i32 %25, 0, !dbg !8265
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !8267

if.then37:                                        ; preds = %for.end
  br label %err, !dbg !8268

if.end38:                                         ; preds = %for.end
  store i32 -19, i32* %retval2, align 4, !dbg !8269
  store i32 0, i32* %i, align 4, !dbg !8270
  br label %for.cond39, !dbg !8272

for.cond39:                                       ; preds = %for.inc54, %if.end38
  %26 = load i32, i32* %i, align 4, !dbg !8273
  %cmp40 = icmp slt i32 %26, 16, !dbg !8275
  br i1 %cmp40, label %for.body42, label %for.end56, !dbg !8276

for.body42:                                       ; preds = %for.cond39
  %27 = load i32, i32* %i, align 4, !dbg !8277
  %idxprom43 = sext i32 %27 to i64, !dbg !8279
  %arrayidx44 = getelementptr [16 x %struct.con_driver], [16 x %struct.con_driver]* @registered_con_driver, i64 0, i64 %idxprom43, !dbg !8279
  store %struct.con_driver* %arrayidx44, %struct.con_driver** %con_back, align 8, !dbg !8280
  %28 = load %struct.con_driver*, %struct.con_driver** %con_back, align 8, !dbg !8281
  %con45 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %28, i32 0, i32 0, !dbg !8283
  %29 = load %struct.consw*, %struct.consw** %con45, align 8, !dbg !8283
  %tobool46 = icmp ne %struct.consw* %29, null, !dbg !8281
  br i1 %tobool46, label %land.lhs.true47, label %if.end53, !dbg !8284

land.lhs.true47:                                  ; preds = %for.body42
  %30 = load %struct.con_driver*, %struct.con_driver** %con_back, align 8, !dbg !8285
  %con48 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %30, i32 0, i32 0, !dbg !8286
  %31 = load %struct.consw*, %struct.consw** %con48, align 8, !dbg !8286
  %32 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8287
  %cmp49 = icmp ne %struct.consw* %31, %32, !dbg !8288
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !8289

if.then51:                                        ; preds = %land.lhs.true47
  %33 = load %struct.con_driver*, %struct.con_driver** %con_back, align 8, !dbg !8290
  %con52 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %33, i32 0, i32 0, !dbg !8292
  %34 = load %struct.consw*, %struct.consw** %con52, align 8, !dbg !8292
  store %struct.consw* %34, %struct.consw** %defcsw, align 8, !dbg !8293
  store i32 0, i32* %retval2, align 4, !dbg !8294
  br label %for.end56, !dbg !8295

if.end53:                                         ; preds = %land.lhs.true47, %for.body42
  br label %for.inc54, !dbg !8296

for.inc54:                                        ; preds = %if.end53
  %35 = load i32, i32* %i, align 4, !dbg !8297
  %inc55 = add i32 %35, 1, !dbg !8297
  store i32 %inc55, i32* %i, align 4, !dbg !8297
  br label %for.cond39, !dbg !8298, !llvm.loop !8299

for.end56:                                        ; preds = %if.then51, %for.cond39
  %36 = load i32, i32* %retval2, align 4, !dbg !8301
  %tobool57 = icmp ne i32 %36, 0, !dbg !8301
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !8303

if.then58:                                        ; preds = %for.end56
  br label %err, !dbg !8304

if.end59:                                         ; preds = %for.end56
  %37 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8305
  %call60 = call i32 @con_is_bound(%struct.consw* %37) #13, !dbg !8307
  %tobool61 = icmp ne i32 %call60, 0, !dbg !8307
  br i1 %tobool61, label %if.end63, label %if.then62, !dbg !8308

if.then62:                                        ; preds = %if.end59
  br label %err, !dbg !8309

if.end63:                                         ; preds = %if.end59
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x278, metadata !8310, metadata !DIExpression()), !dbg !8312
  %38 = load i32, i32* %first.addr, align 4, !dbg !8312
  store i32 %38, i32* %__UNIQUE_ID___x278, align 4, !dbg !8312
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y279, metadata !8313, metadata !DIExpression()), !dbg !8312
  %39 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8312
  %first64 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %39, i32 0, i32 4, !dbg !8312
  %40 = load i32, i32* %first64, align 4, !dbg !8312
  store i32 %40, i32* %__UNIQUE_ID___y279, align 4, !dbg !8312
  %41 = load i32, i32* %__UNIQUE_ID___x278, align 4, !dbg !8312
  %42 = load i32, i32* %__UNIQUE_ID___y279, align 4, !dbg !8312
  %cmp66 = icmp sgt i32 %41, %42, !dbg !8312
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !8312

cond.true:                                        ; preds = %if.end63
  %43 = load i32, i32* %__UNIQUE_ID___x278, align 4, !dbg !8312
  br label %cond.end, !dbg !8312

cond.false:                                       ; preds = %if.end63
  %44 = load i32, i32* %__UNIQUE_ID___y279, align 4, !dbg !8312
  br label %cond.end, !dbg !8312

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %43, %cond.true ], [ %44, %cond.false ], !dbg !8312
  store i32 %cond, i32* %tmp65, align 4, !dbg !8312
  %45 = load i32, i32* %tmp65, align 4, !dbg !8312
  store i32 %45, i32* %first.addr, align 4, !dbg !8314
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x280, metadata !8315, metadata !DIExpression()), !dbg !8317
  %46 = load i32, i32* %last.addr, align 4, !dbg !8317
  store i32 %46, i32* %__UNIQUE_ID___x280, align 4, !dbg !8317
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y281, metadata !8318, metadata !DIExpression()), !dbg !8317
  %47 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8317
  %last68 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %47, i32 0, i32 5, !dbg !8317
  %48 = load i32, i32* %last68, align 8, !dbg !8317
  store i32 %48, i32* %__UNIQUE_ID___y281, align 4, !dbg !8317
  %49 = load i32, i32* %__UNIQUE_ID___x280, align 4, !dbg !8317
  %50 = load i32, i32* %__UNIQUE_ID___y281, align 4, !dbg !8317
  %cmp70 = icmp slt i32 %49, %50, !dbg !8317
  br i1 %cmp70, label %cond.true72, label %cond.false73, !dbg !8317

cond.true72:                                      ; preds = %cond.end
  %51 = load i32, i32* %__UNIQUE_ID___x280, align 4, !dbg !8317
  br label %cond.end74, !dbg !8317

cond.false73:                                     ; preds = %cond.end
  %52 = load i32, i32* %__UNIQUE_ID___y281, align 4, !dbg !8317
  br label %cond.end74, !dbg !8317

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %51, %cond.true72 ], [ %52, %cond.false73 ], !dbg !8317
  store i32 %cond75, i32* %tmp69, align 4, !dbg !8317
  %53 = load i32, i32* %tmp69, align 4, !dbg !8317
  store i32 %53, i32* %last.addr, align 4, !dbg !8319
  %54 = load i32, i32* %first.addr, align 4, !dbg !8320
  store i32 %54, i32* %i, align 4, !dbg !8322
  br label %for.cond76, !dbg !8323

for.cond76:                                       ; preds = %for.inc89, %cond.end74
  %55 = load i32, i32* %i, align 4, !dbg !8324
  %56 = load i32, i32* %last.addr, align 4, !dbg !8326
  %cmp77 = icmp sle i32 %55, %56, !dbg !8327
  br i1 %cmp77, label %for.body79, label %for.end91, !dbg !8328

for.body79:                                       ; preds = %for.cond76
  %57 = load i32, i32* %i, align 4, !dbg !8329
  %idxprom80 = sext i32 %57 to i64, !dbg !8332
  %arrayidx81 = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom80, !dbg !8332
  %58 = load %struct.consw*, %struct.consw** %arrayidx81, align 8, !dbg !8332
  %59 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8333
  %cmp82 = icmp eq %struct.consw* %58, %59, !dbg !8334
  br i1 %cmp82, label %if.then84, label %if.end88, !dbg !8335

if.then84:                                        ; preds = %for.body79
  %60 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8336
  %owner85 = getelementptr inbounds %struct.consw, %struct.consw* %60, i32 0, i32 0, !dbg !8338
  %61 = load %struct.module*, %struct.module** %owner85, align 8, !dbg !8338
  call void @module_put(%struct.module* %61) #13, !dbg !8339
  %62 = load i32, i32* %i, align 4, !dbg !8340
  %idxprom86 = sext i32 %62 to i64, !dbg !8341
  %arrayidx87 = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom86, !dbg !8341
  store %struct.consw* null, %struct.consw** %arrayidx87, align 8, !dbg !8342
  br label %if.end88, !dbg !8343

if.end88:                                         ; preds = %if.then84, %for.body79
  br label %for.inc89, !dbg !8344

for.inc89:                                        ; preds = %if.end88
  %63 = load i32, i32* %i, align 4, !dbg !8345
  %inc90 = add i32 %63, 1, !dbg !8345
  store i32 %inc90, i32* %i, align 4, !dbg !8345
  br label %for.cond76, !dbg !8346, !llvm.loop !8347

for.end91:                                        ; preds = %for.cond76
  %64 = load %struct.consw*, %struct.consw** %defcsw, align 8, !dbg !8349
  %call92 = call i32 @con_is_bound(%struct.consw* %64) #13, !dbg !8351
  %tobool93 = icmp ne i32 %call92, 0, !dbg !8351
  br i1 %tobool93, label %if.end97, label %if.then94, !dbg !8352

if.then94:                                        ; preds = %for.end91
  call void @llvm.dbg.declare(metadata %struct.consw** %defconsw, metadata !8353, metadata !DIExpression()), !dbg !8355
  %65 = load %struct.consw*, %struct.consw** @conswitchp, align 8, !dbg !8356
  store %struct.consw* %65, %struct.consw** %defconsw, align 8, !dbg !8355
  %66 = load %struct.consw*, %struct.consw** %defcsw, align 8, !dbg !8357
  %con_startup = getelementptr inbounds %struct.consw, %struct.consw* %66, i32 0, i32 1, !dbg !8358
  %67 = load i8* ()*, i8* ()** %con_startup, align 8, !dbg !8358
  %call95 = call i8* %67() #13, !dbg !8357
  %68 = load %struct.con_driver*, %struct.con_driver** %con_back, align 8, !dbg !8359
  %flag96 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %68, i32 0, i32 6, !dbg !8360
  %69 = load i32, i32* %flag96, align 4, !dbg !8361
  %or = or i32 %69, 2, !dbg !8361
  store i32 %or, i32* %flag96, align 4, !dbg !8361
  %70 = load %struct.consw*, %struct.consw** %defconsw, align 8, !dbg !8362
  store %struct.consw* %70, %struct.consw** @conswitchp, align 8, !dbg !8363
  br label %if.end97, !dbg !8364

if.end97:                                         ; preds = %if.then94, %for.end91
  %71 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8365
  %call98 = call i32 @con_is_bound(%struct.consw* %71) #13, !dbg !8367
  %tobool99 = icmp ne i32 %call98, 0, !dbg !8367
  br i1 %tobool99, label %if.end103, label %if.then100, !dbg !8368

if.then100:                                       ; preds = %if.end97
  %72 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8369
  %flag101 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %72, i32 0, i32 6, !dbg !8370
  %73 = load i32, i32* %flag101, align 4, !dbg !8371
  %and102 = and i32 %73, -3, !dbg !8371
  store i32 %and102, i32* %flag101, align 4, !dbg !8371
  br label %if.end103, !dbg !8369

if.end103:                                        ; preds = %if.then100, %if.end97
  %74 = load %struct.consw*, %struct.consw** %defcsw, align 8, !dbg !8372
  %75 = load i32, i32* %first.addr, align 4, !dbg !8373
  %76 = load i32, i32* %last.addr, align 4, !dbg !8374
  %77 = load i32, i32* %deflt.addr, align 4, !dbg !8375
  %call104 = call i32 @do_bind_con_driver(%struct.consw* %74, i32 %75, i32 %76, i32 %77) #13, !dbg !8376
  br label %err, !dbg !8376

err:                                              ; preds = %if.end103, %if.then62, %if.then58, %if.then37
  call void @llvm.dbg.label(metadata !8377), !dbg !8378
  %78 = load %struct.module*, %struct.module** %owner, align 8, !dbg !8379
  call void @module_put(%struct.module* %78) #13, !dbg !8380
  %79 = load i32, i32* %retval2, align 4, !dbg !8381
  store i32 %79, i32* %retval, align 4, !dbg !8382
  br label %return, !dbg !8382

return:                                           ; preds = %err, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !8383
  ret i32 %80, !dbg !8383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #0 !dbg !8384 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !8388, metadata !DIExpression()), !dbg !8389
  ret i1 true, !dbg !8390
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @con_is_bound(%struct.consw* %csw) #0 !dbg !8391 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !8394
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !8398
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !8400
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !8401
  %csw.addr = alloca %struct.consw*, align 8
  %i = alloca i32, align 4
  %bound = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.consw* %csw, %struct.consw** %csw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.consw** %csw.addr, metadata !8402, metadata !DIExpression()), !dbg !8403
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8404, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.declare(metadata i32* %bound, metadata !8406, metadata !DIExpression()), !dbg !8407
  store i32 0, i32* %bound, align 4, !dbg !8407
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8408, metadata !DIExpression()), !dbg !8409
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8410
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !8410
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8411
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !8412
  %conv.i.i = trunc i64 %3 to i32, !dbg !8412
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !8413
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8414
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !8414
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !8414
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8415
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8416
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !8416
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !8416
  %tobool = icmp ne i32 %8, 0, !dbg !8409
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !8409

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !8409
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8409
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !8409

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !8409
  %tobool3 = icmp ne i32 %9, 0, !dbg !8409
  %lnot = xor i1 %tobool3, true, !dbg !8409
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !8417
  %lnot4 = xor i1 %10, true, !dbg !8409
  %lnot5 = xor i1 %lnot4, true, !dbg !8409
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !8409
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8409
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !8418
  %tobool6 = icmp ne i32 %11, 0, !dbg !8418
  %lnot7 = xor i1 %tobool6, true, !dbg !8418
  %lnot9 = xor i1 %lnot7, true, !dbg !8418
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !8418
  %conv = sext i32 %lnot.ext10 to i64, !dbg !8418
  %tobool11 = icmp ne i64 %conv, 0, !dbg !8418
  br i1 %tobool11, label %if.then, label %if.end, !dbg !8409

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !8418

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !8420

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !8422

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !8420

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 3959, i32 2305, i64 12) #5, !dbg !8424, !srcloc !8426
  br label %do.end14, !dbg !8424

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 282) #5, !dbg !8427, !srcloc !8429
  br label %do.body15, !dbg !8420

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !8430

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !8420

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !8420

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !8409
  %tobool18 = icmp ne i32 %12, 0, !dbg !8409
  %lnot19 = xor i1 %tobool18, true, !dbg !8409
  %lnot21 = xor i1 %lnot19, true, !dbg !8409
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !8409
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !8409
  store i64 %conv23, i64* %tmp, align 8, !dbg !8418
  %13 = load i64, i64* %tmp, align 8, !dbg !8409
  store i32 0, i32* %i, align 4, !dbg !8432
  br label %for.cond, !dbg !8434

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !8435
  %cmp = icmp slt i32 %14, 63, !dbg !8437
  br i1 %cmp, label %for.body, label %for.end, !dbg !8438

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !8439
  %idxprom = sext i32 %15 to i64, !dbg !8442
  %arrayidx = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom, !dbg !8442
  %16 = load %struct.consw*, %struct.consw** %arrayidx, align 8, !dbg !8442
  %17 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8443
  %cmp25 = icmp eq %struct.consw* %16, %17, !dbg !8444
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !8445

if.then27:                                        ; preds = %for.body
  store i32 1, i32* %bound, align 4, !dbg !8446
  br label %for.end, !dbg !8448

if.end28:                                         ; preds = %for.body
  br label %for.inc, !dbg !8449

for.inc:                                          ; preds = %if.end28
  %18 = load i32, i32* %i, align 4, !dbg !8450
  %inc = add i32 %18, 1, !dbg !8450
  store i32 %inc, i32* %i, align 4, !dbg !8450
  br label %for.cond, !dbg !8451, !llvm.loop !8452

for.end:                                          ; preds = %if.then27, %for.cond
  %19 = load i32, i32* %bound, align 4, !dbg !8454
  ret i32 %19, !dbg !8455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #0 !dbg !8456 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !8459, metadata !DIExpression()), !dbg !8460
  ret void, !dbg !8461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_bind_con_driver(%struct.consw* %csw, i32 %first, i32 %last, i32 %deflt) #0 !dbg !8462 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !8463
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !8467
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !8469
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !8470
  %retval = alloca i32, align 4
  %csw.addr = alloca %struct.consw*, align 8
  %first.addr = alloca i32, align 4
  %last.addr = alloca i32, align 4
  %deflt.addr = alloca i32, align 4
  %owner = alloca %struct.module*, align 8
  %desc = alloca i8*, align 8
  %con_driver = alloca %struct.con_driver*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %retval2 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x273 = alloca i32, align 4
  %__UNIQUE_ID___y274 = alloca i32, align 4
  %tmp51 = alloca i32, align 4
  %__UNIQUE_ID___x275 = alloca i32, align 4
  %__UNIQUE_ID___y276 = alloca i32, align 4
  %tmp55 = alloca i32, align 4
  %old_was_color = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  %vc107 = alloca %struct.vc_data*, align 8
  store %struct.consw* %csw, %struct.consw** %csw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.consw** %csw.addr, metadata !8471, metadata !DIExpression()), !dbg !8472
  store i32 %first, i32* %first.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first.addr, metadata !8473, metadata !DIExpression()), !dbg !8474
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !8475, metadata !DIExpression()), !dbg !8476
  store i32 %deflt, i32* %deflt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %deflt.addr, metadata !8477, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.declare(metadata %struct.module** %owner, metadata !8479, metadata !DIExpression()), !dbg !8480
  %0 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8481
  %owner1 = getelementptr inbounds %struct.consw, %struct.consw* %0, i32 0, i32 0, !dbg !8482
  %1 = load %struct.module*, %struct.module** %owner1, align 8, !dbg !8482
  store %struct.module* %1, %struct.module** %owner, align 8, !dbg !8480
  call void @llvm.dbg.declare(metadata i8** %desc, metadata !8483, metadata !DIExpression()), !dbg !8484
  store i8* null, i8** %desc, align 8, !dbg !8484
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con_driver, metadata !8485, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8489, metadata !DIExpression()), !dbg !8490
  store i32 -1, i32* %j, align 4, !dbg !8490
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8491, metadata !DIExpression()), !dbg !8492
  store i32 -1, i32* %k, align 4, !dbg !8492
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !8493, metadata !DIExpression()), !dbg !8494
  store i32 -19, i32* %retval2, align 4, !dbg !8494
  %2 = load %struct.module*, %struct.module** %owner, align 8, !dbg !8495
  %call = call zeroext i1 @try_module_get(%struct.module* %2) #13, !dbg !8497
  br i1 %call, label %if.end, label %if.then, !dbg !8498

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !8499
  br label %return, !dbg !8499

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8500, metadata !DIExpression()), !dbg !8501
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %3 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8502
  %4 = bitcast %struct.atomic_t* %3 to i8*, !dbg !8502
  store i8* %4, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8503
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !8504
  %conv.i.i = trunc i64 %6 to i32, !dbg !8504
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %5, i32 %conv.i.i) #14, !dbg !8505
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8506
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8506
  call void @kcsan_check_access(i8* %7, i64 %8, i32 4) #14, !dbg !8506
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8507
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8508
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %10, i32 0, i32 0, !dbg !8508
  %11 = load volatile i32, i32* %counter.i.i, align 4, !dbg !8508
  %tobool = icmp ne i32 %11, 0, !dbg !8501
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !8501

land.lhs.true:                                    ; preds = %if.end
  %call4 = call i32 @is_console_locked() #13, !dbg !8501
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8501
  br i1 %tobool5, label %land.end, label %land.rhs, !dbg !8501

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load i32, i32* @oops_in_progress, align 4, !dbg !8501
  %tobool6 = icmp ne i32 %12, 0, !dbg !8501
  %lnot = xor i1 %tobool6, true, !dbg !8501
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.end
  %13 = phi i1 [ false, %land.lhs.true ], [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !8509
  %lnot7 = xor i1 %13, true, !dbg !8501
  %lnot8 = xor i1 %lnot7, true, !dbg !8501
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !8501
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8501
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !8510
  %tobool9 = icmp ne i32 %14, 0, !dbg !8510
  %lnot10 = xor i1 %tobool9, true, !dbg !8510
  %lnot12 = xor i1 %lnot10, true, !dbg !8510
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !8510
  %conv = sext i32 %lnot.ext13 to i64, !dbg !8510
  %tobool14 = icmp ne i64 %conv, 0, !dbg !8510
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !8501

if.then15:                                        ; preds = %land.end
  br label %do.body, !dbg !8510

do.body:                                          ; preds = %if.then15
  br label %do.body16, !dbg !8512

do.body16:                                        ; preds = %do.body
  br label %do.end, !dbg !8514

do.end:                                           ; preds = %do.body16
  br label %do.body17, !dbg !8512

do.body17:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 3609, i32 2305, i64 12) #5, !dbg !8516, !srcloc !8518
  br label %do.end18, !dbg !8516

do.end18:                                         ; preds = %do.body17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 272) #5, !dbg !8519, !srcloc !8521
  br label %do.body19, !dbg !8512

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !8522

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !8512

do.end21:                                         ; preds = %do.end20
  br label %if.end22, !dbg !8512

if.end22:                                         ; preds = %do.end21, %land.end
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !8501
  %tobool23 = icmp ne i32 %15, 0, !dbg !8501
  %lnot24 = xor i1 %tobool23, true, !dbg !8501
  %lnot26 = xor i1 %lnot24, true, !dbg !8501
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !8501
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !8501
  store i64 %conv28, i64* %tmp, align 8, !dbg !8510
  %16 = load i64, i64* %tmp, align 8, !dbg !8501
  store i32 0, i32* %i, align 4, !dbg !8524
  br label %for.cond, !dbg !8526

for.cond:                                         ; preds = %for.inc, %if.end22
  %17 = load i32, i32* %i, align 4, !dbg !8527
  %cmp = icmp slt i32 %17, 16, !dbg !8529
  br i1 %cmp, label %for.body, label %for.end, !dbg !8530

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !8531
  %idxprom = sext i32 %18 to i64, !dbg !8533
  %arrayidx = getelementptr [16 x %struct.con_driver], [16 x %struct.con_driver]* @registered_con_driver, i64 0, i64 %idxprom, !dbg !8533
  store %struct.con_driver* %arrayidx, %struct.con_driver** %con_driver, align 8, !dbg !8534
  %19 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8535
  %con = getelementptr inbounds %struct.con_driver, %struct.con_driver* %19, i32 0, i32 0, !dbg !8537
  %20 = load %struct.consw*, %struct.consw** %con, align 8, !dbg !8537
  %21 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8538
  %cmp30 = icmp eq %struct.consw* %20, %21, !dbg !8539
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !8540

if.then32:                                        ; preds = %for.body
  %22 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8541
  %desc33 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %22, i32 0, i32 1, !dbg !8543
  %23 = load i8*, i8** %desc33, align 8, !dbg !8543
  store i8* %23, i8** %desc, align 8, !dbg !8544
  store i32 0, i32* %retval2, align 4, !dbg !8545
  br label %for.end, !dbg !8546

if.end34:                                         ; preds = %for.body
  br label %for.inc, !dbg !8547

for.inc:                                          ; preds = %if.end34
  %24 = load i32, i32* %i, align 4, !dbg !8548
  %inc = add i32 %24, 1, !dbg !8548
  store i32 %inc, i32* %i, align 4, !dbg !8548
  br label %for.cond, !dbg !8549, !llvm.loop !8550

for.end:                                          ; preds = %if.then32, %for.cond
  %25 = load i32, i32* %retval2, align 4, !dbg !8552
  %tobool35 = icmp ne i32 %25, 0, !dbg !8552
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !8554

if.then36:                                        ; preds = %for.end
  br label %err, !dbg !8555

if.end37:                                         ; preds = %for.end
  %26 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8556
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %26, i32 0, i32 6, !dbg !8558
  %27 = load i32, i32* %flag, align 4, !dbg !8558
  %and = and i32 %27, 2, !dbg !8559
  %tobool38 = icmp ne i32 %and, 0, !dbg !8559
  br i1 %tobool38, label %if.end42, label %if.then39, !dbg !8560

if.then39:                                        ; preds = %if.end37
  %28 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8561
  %con_startup = getelementptr inbounds %struct.consw, %struct.consw* %28, i32 0, i32 1, !dbg !8563
  %29 = load i8* ()*, i8* ()** %con_startup, align 8, !dbg !8563
  %call40 = call i8* %29() #13, !dbg !8561
  %30 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8564
  %flag41 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %30, i32 0, i32 6, !dbg !8565
  %31 = load i32, i32* %flag41, align 4, !dbg !8566
  %or = or i32 %31, 2, !dbg !8566
  store i32 %or, i32* %flag41, align 4, !dbg !8566
  br label %if.end42, !dbg !8567

if.end42:                                         ; preds = %if.then39, %if.end37
  %32 = load i32, i32* %deflt.addr, align 4, !dbg !8568
  %tobool43 = icmp ne i32 %32, 0, !dbg !8568
  br i1 %tobool43, label %if.then44, label %if.end49, !dbg !8570

if.then44:                                        ; preds = %if.end42
  %33 = load %struct.consw*, %struct.consw** @conswitchp, align 8, !dbg !8571
  %tobool45 = icmp ne %struct.consw* %33, null, !dbg !8571
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !8574

if.then46:                                        ; preds = %if.then44
  %34 = load %struct.consw*, %struct.consw** @conswitchp, align 8, !dbg !8575
  %owner47 = getelementptr inbounds %struct.consw, %struct.consw* %34, i32 0, i32 0, !dbg !8576
  %35 = load %struct.module*, %struct.module** %owner47, align 8, !dbg !8576
  call void @module_put(%struct.module* %35) #13, !dbg !8577
  br label %if.end48, !dbg !8577

if.end48:                                         ; preds = %if.then46, %if.then44
  %36 = load %struct.module*, %struct.module** %owner, align 8, !dbg !8578
  call void @__module_get(%struct.module* %36) #13, !dbg !8579
  %37 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8580
  store %struct.consw* %37, %struct.consw** @conswitchp, align 8, !dbg !8581
  br label %if.end49, !dbg !8582

if.end49:                                         ; preds = %if.end48, %if.end42
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x273, metadata !8583, metadata !DIExpression()), !dbg !8585
  %38 = load i32, i32* %first.addr, align 4, !dbg !8585
  store i32 %38, i32* %__UNIQUE_ID___x273, align 4, !dbg !8585
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y274, metadata !8586, metadata !DIExpression()), !dbg !8585
  %39 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8585
  %first50 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %39, i32 0, i32 4, !dbg !8585
  %40 = load i32, i32* %first50, align 4, !dbg !8585
  store i32 %40, i32* %__UNIQUE_ID___y274, align 4, !dbg !8585
  %41 = load i32, i32* %__UNIQUE_ID___x273, align 4, !dbg !8585
  %42 = load i32, i32* %__UNIQUE_ID___y274, align 4, !dbg !8585
  %cmp52 = icmp sgt i32 %41, %42, !dbg !8585
  br i1 %cmp52, label %cond.true, label %cond.false, !dbg !8585

cond.true:                                        ; preds = %if.end49
  %43 = load i32, i32* %__UNIQUE_ID___x273, align 4, !dbg !8585
  br label %cond.end, !dbg !8585

cond.false:                                       ; preds = %if.end49
  %44 = load i32, i32* %__UNIQUE_ID___y274, align 4, !dbg !8585
  br label %cond.end, !dbg !8585

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %43, %cond.true ], [ %44, %cond.false ], !dbg !8585
  store i32 %cond, i32* %tmp51, align 4, !dbg !8585
  %45 = load i32, i32* %tmp51, align 4, !dbg !8585
  store i32 %45, i32* %first.addr, align 4, !dbg !8587
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x275, metadata !8588, metadata !DIExpression()), !dbg !8590
  %46 = load i32, i32* %last.addr, align 4, !dbg !8590
  store i32 %46, i32* %__UNIQUE_ID___x275, align 4, !dbg !8590
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y276, metadata !8591, metadata !DIExpression()), !dbg !8590
  %47 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8590
  %last54 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %47, i32 0, i32 5, !dbg !8590
  %48 = load i32, i32* %last54, align 8, !dbg !8590
  store i32 %48, i32* %__UNIQUE_ID___y276, align 4, !dbg !8590
  %49 = load i32, i32* %__UNIQUE_ID___x275, align 4, !dbg !8590
  %50 = load i32, i32* %__UNIQUE_ID___y276, align 4, !dbg !8590
  %cmp56 = icmp slt i32 %49, %50, !dbg !8590
  br i1 %cmp56, label %cond.true58, label %cond.false59, !dbg !8590

cond.true58:                                      ; preds = %cond.end
  %51 = load i32, i32* %__UNIQUE_ID___x275, align 4, !dbg !8590
  br label %cond.end60, !dbg !8590

cond.false59:                                     ; preds = %cond.end
  %52 = load i32, i32* %__UNIQUE_ID___y276, align 4, !dbg !8590
  br label %cond.end60, !dbg !8590

cond.end60:                                       ; preds = %cond.false59, %cond.true58
  %cond61 = phi i32 [ %51, %cond.true58 ], [ %52, %cond.false59 ], !dbg !8590
  store i32 %cond61, i32* %tmp55, align 4, !dbg !8590
  %53 = load i32, i32* %tmp55, align 4, !dbg !8590
  store i32 %53, i32* %last.addr, align 4, !dbg !8592
  %54 = load i32, i32* %first.addr, align 4, !dbg !8593
  store i32 %54, i32* %i, align 4, !dbg !8595
  br label %for.cond62, !dbg !8596

for.cond62:                                       ; preds = %for.inc95, %cond.end60
  %55 = load i32, i32* %i, align 4, !dbg !8597
  %56 = load i32, i32* %last.addr, align 4, !dbg !8599
  %cmp63 = icmp sle i32 %55, %56, !dbg !8600
  br i1 %cmp63, label %for.body65, label %for.end97, !dbg !8601

for.body65:                                       ; preds = %for.cond62
  call void @llvm.dbg.declare(metadata i32* %old_was_color, metadata !8602, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !8605, metadata !DIExpression()), !dbg !8606
  %57 = load i32, i32* %i, align 4, !dbg !8607
  %idxprom66 = sext i32 %57 to i64, !dbg !8608
  %arrayidx67 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom66, !dbg !8608
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx67, i32 0, i32 0, !dbg !8609
  %58 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !8609
  store %struct.vc_data* %58, %struct.vc_data** %vc, align 8, !dbg !8606
  %59 = load i32, i32* %i, align 4, !dbg !8610
  %idxprom68 = sext i32 %59 to i64, !dbg !8612
  %arrayidx69 = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom68, !dbg !8612
  %60 = load %struct.consw*, %struct.consw** %arrayidx69, align 8, !dbg !8612
  %tobool70 = icmp ne %struct.consw* %60, null, !dbg !8612
  br i1 %tobool70, label %if.then71, label %if.end75, !dbg !8613

if.then71:                                        ; preds = %for.body65
  %61 = load i32, i32* %i, align 4, !dbg !8614
  %idxprom72 = sext i32 %61 to i64, !dbg !8615
  %arrayidx73 = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom72, !dbg !8615
  %62 = load %struct.consw*, %struct.consw** %arrayidx73, align 8, !dbg !8615
  %owner74 = getelementptr inbounds %struct.consw, %struct.consw* %62, i32 0, i32 0, !dbg !8616
  %63 = load %struct.module*, %struct.module** %owner74, align 8, !dbg !8616
  call void @module_put(%struct.module* %63) #13, !dbg !8617
  br label %if.end75, !dbg !8617

if.end75:                                         ; preds = %if.then71, %for.body65
  %64 = load %struct.module*, %struct.module** %owner, align 8, !dbg !8618
  call void @__module_get(%struct.module* %64) #13, !dbg !8619
  %65 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8620
  %66 = load i32, i32* %i, align 4, !dbg !8621
  %idxprom76 = sext i32 %66 to i64, !dbg !8622
  %arrayidx77 = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom76, !dbg !8622
  store %struct.consw* %65, %struct.consw** %arrayidx77, align 8, !dbg !8623
  %67 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8624
  %tobool78 = icmp ne %struct.vc_data* %67, null, !dbg !8624
  br i1 %tobool78, label %lor.lhs.false, label %if.then80, !dbg !8626

lor.lhs.false:                                    ; preds = %if.end75
  %68 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8627
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %68, i32 0, i32 13, !dbg !8628
  %69 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !8628
  %tobool79 = icmp ne %struct.consw* %69, null, !dbg !8627
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !8629

if.then80:                                        ; preds = %lor.lhs.false, %if.end75
  br label %for.inc95, !dbg !8630

if.end81:                                         ; preds = %lor.lhs.false
  %70 = load i32, i32* %i, align 4, !dbg !8631
  store i32 %70, i32* %j, align 4, !dbg !8632
  %71 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8633
  %call82 = call zeroext i1 @con_is_visible(%struct.vc_data* %71) #13, !dbg !8635
  br i1 %call82, label %if.then83, label %if.end84, !dbg !8636

if.then83:                                        ; preds = %if.end81
  %72 = load i32, i32* %i, align 4, !dbg !8637
  store i32 %72, i32* %k, align 4, !dbg !8639
  %73 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8640
  call void @save_screen(%struct.vc_data* %73) #13, !dbg !8641
  br label %if.end84, !dbg !8642

if.end84:                                         ; preds = %if.then83, %if.end81
  %74 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8643
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %74, i32 0, i32 36, !dbg !8644
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !8644
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !8644
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8644
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8644
  store i32 %bf.cast, i32* %old_was_color, align 4, !dbg !8645
  %75 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8646
  %vc_sw85 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %75, i32 0, i32 13, !dbg !8647
  %76 = load %struct.consw*, %struct.consw** %vc_sw85, align 8, !dbg !8647
  %con_deinit = getelementptr inbounds %struct.consw, %struct.consw* %76, i32 0, i32 3, !dbg !8648
  %77 = load void (%struct.vc_data*)*, void (%struct.vc_data*)** %con_deinit, align 8, !dbg !8648
  %78 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8649
  call void %77(%struct.vc_data* %78) #13, !dbg !8646
  %79 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8650
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %79, i32 0, i32 14, !dbg !8651
  %80 = load i16*, i16** %vc_screenbuf, align 8, !dbg !8651
  %81 = ptrtoint i16* %80 to i64, !dbg !8652
  %82 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8653
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %82, i32 0, i32 8, !dbg !8654
  store i64 %81, i64* %vc_origin, align 8, !dbg !8655
  %83 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8656
  %84 = load i32, i32* %i, align 4, !dbg !8657
  call void @visual_init(%struct.vc_data* %83, i32 %84, i32 0) #13, !dbg !8658
  %85 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8659
  call void @set_origin(%struct.vc_data* %85) #13, !dbg !8660
  %86 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8661
  call void @update_attr(%struct.vc_data* %86) #13, !dbg !8662
  %87 = load i32, i32* %old_was_color, align 4, !dbg !8663
  %88 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8665
  %vc_can_do_color86 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %88, i32 0, i32 36, !dbg !8666
  %bf.load87 = load i16, i16* %vc_can_do_color86, align 8, !dbg !8666
  %bf.lshr88 = lshr i16 %bf.load87, 11, !dbg !8666
  %bf.clear89 = and i16 %bf.lshr88, 1, !dbg !8666
  %bf.cast90 = zext i16 %bf.clear89 to i32, !dbg !8666
  %cmp91 = icmp ne i32 %87, %bf.cast90, !dbg !8667
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !8668

if.then93:                                        ; preds = %if.end84
  %89 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8669
  call void @clear_buffer_attributes(%struct.vc_data* %89) #13, !dbg !8670
  br label %if.end94, !dbg !8670

if.end94:                                         ; preds = %if.then93, %if.end84
  br label %for.inc95, !dbg !8671

for.inc95:                                        ; preds = %if.end94, %if.then80
  %90 = load i32, i32* %i, align 4, !dbg !8672
  %inc96 = add i32 %90, 1, !dbg !8672
  store i32 %inc96, i32* %i, align 4, !dbg !8672
  br label %for.cond62, !dbg !8673, !llvm.loop !8674

for.end97:                                        ; preds = %for.cond62
  %call98 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0)) #17, !dbg !8676
  %91 = load i32, i32* %deflt.addr, align 4, !dbg !8677
  %tobool99 = icmp ne i32 %91, 0, !dbg !8677
  br i1 %tobool99, label %if.end103, label %if.then100, !dbg !8679

if.then100:                                       ; preds = %for.end97
  %92 = load i32, i32* %first.addr, align 4, !dbg !8680
  %add = add i32 %92, 1, !dbg !8680
  %93 = load i32, i32* %last.addr, align 4, !dbg !8680
  %add101 = add i32 %93, 1, !dbg !8680
  %call102 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i32 %add, i32 %add101) #17, !dbg !8680
  br label %if.end103, !dbg !8680

if.end103:                                        ; preds = %if.then100, %for.end97
  %94 = load i32, i32* %j, align 4, !dbg !8681
  %cmp104 = icmp sge i32 %94, 0, !dbg !8683
  br i1 %cmp104, label %if.then106, label %if.else, !dbg !8684

if.then106:                                       ; preds = %if.end103
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc107, metadata !8685, metadata !DIExpression()), !dbg !8687
  %95 = load i32, i32* %j, align 4, !dbg !8688
  %idxprom108 = sext i32 %95 to i64, !dbg !8689
  %arrayidx109 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom108, !dbg !8689
  %d110 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx109, i32 0, i32 0, !dbg !8690
  %96 = load %struct.vc_data*, %struct.vc_data** %d110, align 8, !dbg !8690
  store %struct.vc_data* %96, %struct.vc_data** %vc107, align 8, !dbg !8687
  %97 = load %struct.vc_data*, %struct.vc_data** %vc107, align 8, !dbg !8691
  %vc_can_do_color111 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %97, i32 0, i32 36, !dbg !8691
  %bf.load112 = load i16, i16* %vc_can_do_color111, align 8, !dbg !8691
  %bf.lshr113 = lshr i16 %bf.load112, 11, !dbg !8691
  %bf.clear114 = and i16 %bf.lshr113, 1, !dbg !8691
  %bf.cast115 = zext i16 %bf.clear114 to i32, !dbg !8691
  %tobool116 = icmp ne i32 %bf.cast115, 0, !dbg !8691
  %98 = zext i1 %tobool116 to i64, !dbg !8691
  %cond117 = select i1 %tobool116, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), !dbg !8691
  %99 = load i8*, i8** %desc, align 8, !dbg !8691
  %100 = load %struct.vc_data*, %struct.vc_data** %vc107, align 8, !dbg !8691
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %100, i32 0, i32 4, !dbg !8691
  %101 = load i32, i32* %vc_cols, align 4, !dbg !8691
  %102 = load %struct.vc_data*, %struct.vc_data** %vc107, align 8, !dbg !8691
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %102, i32 0, i32 5, !dbg !8691
  %103 = load i32, i32* %vc_rows, align 8, !dbg !8691
  %call118 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8* %cond117, i8* %99, i32 %101, i32 %103) #17, !dbg !8691
  %104 = load i32, i32* %k, align 4, !dbg !8692
  %cmp119 = icmp sge i32 %104, 0, !dbg !8694
  br i1 %cmp119, label %if.then121, label %if.end125, !dbg !8695

if.then121:                                       ; preds = %if.then106
  %105 = load i32, i32* %k, align 4, !dbg !8696
  %idxprom122 = sext i32 %105 to i64, !dbg !8698
  %arrayidx123 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom122, !dbg !8698
  %d124 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx123, i32 0, i32 0, !dbg !8699
  %106 = load %struct.vc_data*, %struct.vc_data** %d124, align 8, !dbg !8699
  store %struct.vc_data* %106, %struct.vc_data** %vc107, align 8, !dbg !8700
  %107 = load %struct.vc_data*, %struct.vc_data** %vc107, align 8, !dbg !8701
  call void @redraw_screen(%struct.vc_data* %107, i32 0) #13, !dbg !8701
  br label %if.end125, !dbg !8702

if.end125:                                        ; preds = %if.then121, %if.then106
  br label %if.end127, !dbg !8703

if.else:                                          ; preds = %if.end103
  %108 = load i8*, i8** %desc, align 8, !dbg !8704
  %call126 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0), i8* %108) #17, !dbg !8704
  br label %if.end127

if.end127:                                        ; preds = %if.else, %if.end125
  store i32 0, i32* %retval2, align 4, !dbg !8706
  br label %err, !dbg !8707

err:                                              ; preds = %if.end127, %if.then36
  call void @llvm.dbg.label(metadata !8708), !dbg !8709
  %109 = load %struct.module*, %struct.module** %owner, align 8, !dbg !8710
  call void @module_put(%struct.module* %109) #13, !dbg !8711
  %110 = load i32, i32* %retval2, align 4, !dbg !8712
  store i32 %110, i32* %retval, align 4, !dbg !8713
  br label %return, !dbg !8713

return:                                           ; preds = %err, %if.then
  %111 = load i32, i32* %retval, align 4, !dbg !8714
  ret i32 %111, !dbg !8714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @con_debug_enter(%struct.vc_data* %vc) #0 !dbg !8715 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %ret = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !8716, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8718, metadata !DIExpression()), !dbg !8719
  store i32 0, i32* %ret, align 4, !dbg !8719
  %0 = load i32, i32* @fg_console, align 4, !dbg !8720
  store i32 %0, i32* @saved_fg_console, align 4, !dbg !8721
  %1 = load i32, i32* @last_console, align 4, !dbg !8722
  store i32 %1, i32* @saved_last_console, align 4, !dbg !8723
  %2 = load i32, i32* @want_console, align 4, !dbg !8724
  store i32 %2, i32* @saved_want_console, align 4, !dbg !8725
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8726
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 16, !dbg !8727
  %4 = load i8, i8* %vc_mode, align 4, !dbg !8727
  %conv = zext i8 %4 to i32, !dbg !8726
  store i32 %conv, i32* @saved_vc_mode, align 4, !dbg !8728
  %5 = load i32, i32* @console_blanked, align 4, !dbg !8729
  store i32 %5, i32* @saved_console_blanked, align 4, !dbg !8730
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8731
  %vc_mode1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 16, !dbg !8732
  store i8 0, i8* %vc_mode1, align 4, !dbg !8733
  store i32 0, i32* @console_blanked, align 4, !dbg !8734
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8735
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 13, !dbg !8737
  %8 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !8737
  %con_debug_enter = getelementptr inbounds %struct.consw, %struct.consw* %8, i32 0, i32 25, !dbg !8738
  %con_debug_enter2 = bitcast {}** %con_debug_enter to i32 (%struct.vc_data*)**, !dbg !8738
  %9 = load i32 (%struct.vc_data*)*, i32 (%struct.vc_data*)** %con_debug_enter2, align 8, !dbg !8738
  %tobool = icmp ne i32 (%struct.vc_data*)* %9, null, !dbg !8735
  br i1 %tobool, label %if.then, label %if.end, !dbg !8739

if.then:                                          ; preds = %entry
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8740
  %vc_sw3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 13, !dbg !8741
  %11 = load %struct.consw*, %struct.consw** %vc_sw3, align 8, !dbg !8741
  %con_debug_enter4 = getelementptr inbounds %struct.consw, %struct.consw* %11, i32 0, i32 25, !dbg !8742
  %con_debug_enter5 = bitcast {}** %con_debug_enter4 to i32 (%struct.vc_data*)**, !dbg !8742
  %12 = load i32 (%struct.vc_data*)*, i32 (%struct.vc_data*)** %con_debug_enter5, align 8, !dbg !8742
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !8743
  %call = call i32 %12(%struct.vc_data* %13) #13, !dbg !8740
  store i32 %call, i32* %ret, align 4, !dbg !8744
  br label %if.end, !dbg !8745

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32, i32* %ret, align 4, !dbg !8746
  ret i32 %14, !dbg !8747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @con_debug_leave() #0 !dbg !8748 {
entry:
  %vc = alloca %struct.vc_data*, align 8
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !8749, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8751, metadata !DIExpression()), !dbg !8752
  store i32 0, i32* %ret, align 4, !dbg !8752
  %0 = load i32, i32* @saved_fg_console, align 4, !dbg !8753
  store i32 %0, i32* @fg_console, align 4, !dbg !8754
  %1 = load i32, i32* @saved_last_console, align 4, !dbg !8755
  store i32 %1, i32* @last_console, align 4, !dbg !8756
  %2 = load i32, i32* @saved_want_console, align 4, !dbg !8757
  store i32 %2, i32* @want_console, align 4, !dbg !8758
  %3 = load i32, i32* @saved_console_blanked, align 4, !dbg !8759
  store i32 %3, i32* @console_blanked, align 4, !dbg !8760
  %4 = load i32, i32* @saved_vc_mode, align 4, !dbg !8761
  %conv = trunc i32 %4 to i8, !dbg !8761
  %5 = load i32, i32* @fg_console, align 4, !dbg !8762
  %idxprom = sext i32 %5 to i64, !dbg !8763
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !8763
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !8764
  %6 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !8764
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 16, !dbg !8765
  store i8 %conv, i8* %vc_mode, align 4, !dbg !8766
  %7 = load i32, i32* @fg_console, align 4, !dbg !8767
  %idxprom1 = sext i32 %7 to i64, !dbg !8768
  %arrayidx2 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom1, !dbg !8768
  %d3 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx2, i32 0, i32 0, !dbg !8769
  %8 = load %struct.vc_data*, %struct.vc_data** %d3, align 8, !dbg !8769
  store %struct.vc_data* %8, %struct.vc_data** %vc, align 8, !dbg !8770
  %9 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8771
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 13, !dbg !8773
  %10 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !8773
  %con_debug_leave = getelementptr inbounds %struct.consw, %struct.consw* %10, i32 0, i32 26, !dbg !8774
  %con_debug_leave4 = bitcast {}** %con_debug_leave to i32 (%struct.vc_data*)**, !dbg !8774
  %11 = load i32 (%struct.vc_data*)*, i32 (%struct.vc_data*)** %con_debug_leave4, align 8, !dbg !8774
  %tobool = icmp ne i32 (%struct.vc_data*)* %11, null, !dbg !8771
  br i1 %tobool, label %if.then, label %if.end, !dbg !8775

if.then:                                          ; preds = %entry
  %12 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8776
  %vc_sw5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 13, !dbg !8777
  %13 = load %struct.consw*, %struct.consw** %vc_sw5, align 8, !dbg !8777
  %con_debug_leave6 = getelementptr inbounds %struct.consw, %struct.consw* %13, i32 0, i32 26, !dbg !8778
  %con_debug_leave7 = bitcast {}** %con_debug_leave6 to i32 (%struct.vc_data*)**, !dbg !8778
  %14 = load i32 (%struct.vc_data*)*, i32 (%struct.vc_data*)** %con_debug_leave7, align 8, !dbg !8778
  %15 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !8779
  %call = call i32 %14(%struct.vc_data* %15) #13, !dbg !8776
  store i32 %call, i32* %ret, align 4, !dbg !8780
  br label %if.end, !dbg !8781

if.end:                                           ; preds = %if.then, %entry
  %16 = load i32, i32* %ret, align 4, !dbg !8782
  ret i32 %16, !dbg !8783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @do_unregister_con_driver(%struct.consw* %csw) #0 !dbg !8784 {
entry:
  %retval = alloca i32, align 4
  %csw.addr = alloca %struct.consw*, align 8
  %i = alloca i32, align 4
  %con_driver = alloca %struct.con_driver*, align 8
  store %struct.consw* %csw, %struct.consw** %csw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.consw** %csw.addr, metadata !8785, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8787, metadata !DIExpression()), !dbg !8788
  %0 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8789
  %call = call i32 @con_is_bound(%struct.consw* %0) #13, !dbg !8791
  %tobool = icmp ne i32 %call, 0, !dbg !8791
  br i1 %tobool, label %if.then, label %if.end, !dbg !8792

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !8793
  br label %return, !dbg !8793

if.end:                                           ; preds = %entry
  %1 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8794
  %2 = load %struct.consw*, %struct.consw** @conswitchp, align 8, !dbg !8796
  %cmp = icmp eq %struct.consw* %1, %2, !dbg !8797
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !8798

if.then1:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8799
  br label %return, !dbg !8799

if.end2:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8800
  br label %for.cond, !dbg !8802

for.cond:                                         ; preds = %for.inc, %if.end2
  %3 = load i32, i32* %i, align 4, !dbg !8803
  %cmp3 = icmp slt i32 %3, 16, !dbg !8805
  br i1 %cmp3, label %for.body, label %for.end, !dbg !8806

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con_driver, metadata !8807, metadata !DIExpression()), !dbg !8809
  %4 = load i32, i32* %i, align 4, !dbg !8810
  %idxprom = sext i32 %4 to i64, !dbg !8811
  %arrayidx = getelementptr [16 x %struct.con_driver], [16 x %struct.con_driver]* @registered_con_driver, i64 0, i64 %idxprom, !dbg !8811
  store %struct.con_driver* %arrayidx, %struct.con_driver** %con_driver, align 8, !dbg !8809
  %5 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8812
  %con = getelementptr inbounds %struct.con_driver, %struct.con_driver* %5, i32 0, i32 0, !dbg !8814
  %6 = load %struct.consw*, %struct.consw** %con, align 8, !dbg !8814
  %7 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8815
  %cmp4 = icmp eq %struct.consw* %6, %7, !dbg !8816
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !8817

if.then5:                                         ; preds = %for.body
  %8 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8818
  %con6 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %8, i32 0, i32 0, !dbg !8820
  store %struct.consw* null, %struct.consw** %con6, align 8, !dbg !8821
  %9 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8822
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %9, i32 0, i32 6, !dbg !8823
  store i32 8, i32* %flag, align 4, !dbg !8824
  %call7 = call zeroext i1 @schedule_work(%struct.work_struct* @con_driver_unregister_work) #13, !dbg !8825
  store i32 0, i32* %retval, align 4, !dbg !8826
  br label %return, !dbg !8826

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !8827

for.inc:                                          ; preds = %if.end8
  %10 = load i32, i32* %i, align 4, !dbg !8828
  %inc = add i32 %10, 1, !dbg !8828
  store i32 %inc, i32* %i, align 4, !dbg !8828
  br label %for.cond, !dbg !8829, !llvm.loop !8830

for.end:                                          ; preds = %for.cond
  store i32 -19, i32* %retval, align 4, !dbg !8832
  br label %return, !dbg !8832

return:                                           ; preds = %for.end, %if.then5, %if.then1, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8833
  ret i32 %11, !dbg !8833
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @do_take_over_console(%struct.consw* %csw, i32 %first, i32 %last, i32 %deflt) #0 !dbg !8834 {
entry:
  %csw.addr = alloca %struct.consw*, align 8
  %first.addr = alloca i32, align 4
  %last.addr = alloca i32, align 4
  %deflt.addr = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.consw* %csw, %struct.consw** %csw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.consw** %csw.addr, metadata !8835, metadata !DIExpression()), !dbg !8836
  store i32 %first, i32* %first.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first.addr, metadata !8837, metadata !DIExpression()), !dbg !8838
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !8839, metadata !DIExpression()), !dbg !8840
  store i32 %deflt, i32* %deflt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %deflt.addr, metadata !8841, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8843, metadata !DIExpression()), !dbg !8844
  %0 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8845
  %1 = load i32, i32* %first.addr, align 4, !dbg !8846
  %2 = load i32, i32* %last.addr, align 4, !dbg !8847
  %call = call i32 @do_register_con_driver(%struct.consw* %0, i32 %1, i32 %2) #13, !dbg !8848
  store i32 %call, i32* %err, align 4, !dbg !8849
  %3 = load i32, i32* %err, align 4, !dbg !8850
  %cmp = icmp eq i32 %3, -16, !dbg !8852
  br i1 %cmp, label %if.then, label %if.end, !dbg !8853

if.then:                                          ; preds = %entry
  store i32 0, i32* %err, align 4, !dbg !8854
  br label %if.end, !dbg !8855

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %err, align 4, !dbg !8856
  %tobool = icmp ne i32 %4, 0, !dbg !8856
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !8858

if.then1:                                         ; preds = %if.end
  %5 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8859
  %6 = load i32, i32* %first.addr, align 4, !dbg !8860
  %7 = load i32, i32* %last.addr, align 4, !dbg !8861
  %8 = load i32, i32* %deflt.addr, align 4, !dbg !8862
  %call2 = call i32 @do_bind_con_driver(%struct.consw* %5, i32 %6, i32 %7, i32 %8) #13, !dbg !8863
  br label %if.end3, !dbg !8863

if.end3:                                          ; preds = %if.then1, %if.end
  %9 = load i32, i32* %err, align 4, !dbg !8864
  ret i32 %9, !dbg !8865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_register_con_driver(%struct.consw* %csw, i32 %first, i32 %last) #0 !dbg !8866 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !8869
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !8873
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !8875
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !8876
  %retval = alloca i32, align 4
  %csw.addr = alloca %struct.consw*, align 8
  %first.addr = alloca i32, align 4
  %last.addr = alloca i32, align 4
  %owner = alloca %struct.module*, align 8
  %con_driver = alloca %struct.con_driver*, align 8
  %desc = alloca i8*, align 8
  %i = alloca i32, align 4
  %retval2 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.consw* %csw, %struct.consw** %csw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.consw** %csw.addr, metadata !8877, metadata !DIExpression()), !dbg !8878
  store i32 %first, i32* %first.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first.addr, metadata !8879, metadata !DIExpression()), !dbg !8880
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !8881, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.declare(metadata %struct.module** %owner, metadata !8883, metadata !DIExpression()), !dbg !8884
  %0 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8885
  %owner1 = getelementptr inbounds %struct.consw, %struct.consw* %0, i32 0, i32 0, !dbg !8886
  %1 = load %struct.module*, %struct.module** %owner1, align 8, !dbg !8886
  store %struct.module* %1, %struct.module** %owner, align 8, !dbg !8884
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con_driver, metadata !8887, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.declare(metadata i8** %desc, metadata !8889, metadata !DIExpression()), !dbg !8890
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8891, metadata !DIExpression()), !dbg !8892
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !8893, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8895, metadata !DIExpression()), !dbg !8896
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8897
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !8897
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8898
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !8899
  %conv.i.i = trunc i64 %5 to i32, !dbg !8899
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %4, i32 %conv.i.i) #14, !dbg !8900
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8901
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8901
  call void @kcsan_check_access(i8* %6, i64 %7, i32 4) #14, !dbg !8901
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8902
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8903
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %9, i32 0, i32 0, !dbg !8903
  %10 = load volatile i32, i32* %counter.i.i, align 4, !dbg !8903
  %tobool = icmp ne i32 %10, 0, !dbg !8896
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !8896

land.lhs.true:                                    ; preds = %entry
  %call3 = call i32 @is_console_locked() #13, !dbg !8896
  %tobool4 = icmp ne i32 %call3, 0, !dbg !8896
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !8896

land.rhs:                                         ; preds = %land.lhs.true
  %11 = load i32, i32* @oops_in_progress, align 4, !dbg !8896
  %tobool5 = icmp ne i32 %11, 0, !dbg !8896
  %lnot = xor i1 %tobool5, true, !dbg !8896
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !8904
  %lnot6 = xor i1 %12, true, !dbg !8896
  %lnot7 = xor i1 %lnot6, true, !dbg !8896
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !8896
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8896
  %13 = load i32, i32* %__ret_warn_on, align 4, !dbg !8905
  %tobool8 = icmp ne i32 %13, 0, !dbg !8905
  %lnot9 = xor i1 %tobool8, true, !dbg !8905
  %lnot11 = xor i1 %lnot9, true, !dbg !8905
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !8905
  %conv = sext i32 %lnot.ext12 to i64, !dbg !8905
  %tobool13 = icmp ne i64 %conv, 0, !dbg !8905
  br i1 %tobool13, label %if.then, label %if.end, !dbg !8896

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !8905

do.body:                                          ; preds = %if.then
  br label %do.body14, !dbg !8907

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !8909

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !8907

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 4079, i32 2305, i64 12) #5, !dbg !8911, !srcloc !8913
  br label %do.end16, !dbg !8911

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 284) #5, !dbg !8914, !srcloc !8916
  br label %do.body17, !dbg !8907

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !8917

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !8907

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !8907

if.end:                                           ; preds = %do.end19, %land.end
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !8896
  %tobool20 = icmp ne i32 %14, 0, !dbg !8896
  %lnot21 = xor i1 %tobool20, true, !dbg !8896
  %lnot23 = xor i1 %lnot21, true, !dbg !8896
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !8896
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !8896
  store i64 %conv25, i64* %tmp, align 8, !dbg !8905
  %15 = load i64, i64* %tmp, align 8, !dbg !8896
  %16 = load %struct.module*, %struct.module** %owner, align 8, !dbg !8919
  %call26 = call zeroext i1 @try_module_get(%struct.module* %16) #13, !dbg !8921
  br i1 %call26, label %if.end28, label %if.then27, !dbg !8922

if.then27:                                        ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !8923
  br label %return, !dbg !8923

if.end28:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8924
  br label %for.cond, !dbg !8926

for.cond:                                         ; preds = %for.inc, %if.end28
  %17 = load i32, i32* %i, align 4, !dbg !8927
  %cmp = icmp slt i32 %17, 16, !dbg !8929
  br i1 %cmp, label %for.body, label %for.end, !dbg !8930

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !dbg !8931
  %idxprom = sext i32 %18 to i64, !dbg !8933
  %arrayidx = getelementptr [16 x %struct.con_driver], [16 x %struct.con_driver]* @registered_con_driver, i64 0, i64 %idxprom, !dbg !8933
  store %struct.con_driver* %arrayidx, %struct.con_driver** %con_driver, align 8, !dbg !8934
  %19 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8935
  %con = getelementptr inbounds %struct.con_driver, %struct.con_driver* %19, i32 0, i32 0, !dbg !8937
  %20 = load %struct.consw*, %struct.consw** %con, align 8, !dbg !8937
  %21 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8938
  %cmp30 = icmp eq %struct.consw* %20, %21, !dbg !8939
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8940

if.then32:                                        ; preds = %for.body
  store i32 -16, i32* %retval2, align 4, !dbg !8941
  br label %err, !dbg !8943

if.end33:                                         ; preds = %for.body
  br label %for.inc, !dbg !8944

for.inc:                                          ; preds = %if.end33
  %22 = load i32, i32* %i, align 4, !dbg !8945
  %inc = add i32 %22, 1, !dbg !8945
  store i32 %inc, i32* %i, align 4, !dbg !8945
  br label %for.cond, !dbg !8946, !llvm.loop !8947

for.end:                                          ; preds = %for.cond
  %23 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8949
  %con_startup = getelementptr inbounds %struct.consw, %struct.consw* %23, i32 0, i32 1, !dbg !8950
  %24 = load i8* ()*, i8* ()** %con_startup, align 8, !dbg !8950
  %call34 = call i8* %24() #13, !dbg !8949
  store i8* %call34, i8** %desc, align 8, !dbg !8951
  %25 = load i8*, i8** %desc, align 8, !dbg !8952
  %tobool35 = icmp ne i8* %25, null, !dbg !8952
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !8954

if.then36:                                        ; preds = %for.end
  store i32 -19, i32* %retval2, align 4, !dbg !8955
  br label %err, !dbg !8957

if.end37:                                         ; preds = %for.end
  store i32 -22, i32* %retval2, align 4, !dbg !8958
  store i32 0, i32* %i, align 4, !dbg !8959
  br label %for.cond38, !dbg !8961

for.cond38:                                       ; preds = %for.inc56, %if.end37
  %26 = load i32, i32* %i, align 4, !dbg !8962
  %cmp39 = icmp slt i32 %26, 16, !dbg !8964
  br i1 %cmp39, label %for.body41, label %for.end58, !dbg !8965

for.body41:                                       ; preds = %for.cond38
  %27 = load i32, i32* %i, align 4, !dbg !8966
  %idxprom42 = sext i32 %27 to i64, !dbg !8968
  %arrayidx43 = getelementptr [16 x %struct.con_driver], [16 x %struct.con_driver]* @registered_con_driver, i64 0, i64 %idxprom42, !dbg !8968
  store %struct.con_driver* %arrayidx43, %struct.con_driver** %con_driver, align 8, !dbg !8969
  %28 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8970
  %con44 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %28, i32 0, i32 0, !dbg !8972
  %29 = load %struct.consw*, %struct.consw** %con44, align 8, !dbg !8972
  %cmp45 = icmp eq %struct.consw* %29, null, !dbg !8973
  br i1 %cmp45, label %land.lhs.true47, label %if.end55, !dbg !8974

land.lhs.true47:                                  ; preds = %for.body41
  %30 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8975
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %30, i32 0, i32 6, !dbg !8976
  %31 = load i32, i32* %flag, align 4, !dbg !8976
  %and = and i32 %31, 8, !dbg !8977
  %tobool48 = icmp ne i32 %and, 0, !dbg !8977
  br i1 %tobool48, label %if.end55, label %if.then49, !dbg !8978

if.then49:                                        ; preds = %land.lhs.true47
  %32 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !8979
  %33 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8981
  %con50 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %33, i32 0, i32 0, !dbg !8982
  store %struct.consw* %32, %struct.consw** %con50, align 8, !dbg !8983
  %34 = load i8*, i8** %desc, align 8, !dbg !8984
  %35 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8985
  %desc51 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %35, i32 0, i32 1, !dbg !8986
  store i8* %34, i8** %desc51, align 8, !dbg !8987
  %36 = load i32, i32* %i, align 4, !dbg !8988
  %37 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8989
  %node = getelementptr inbounds %struct.con_driver, %struct.con_driver* %37, i32 0, i32 3, !dbg !8990
  store i32 %36, i32* %node, align 8, !dbg !8991
  %38 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8992
  %flag52 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %38, i32 0, i32 6, !dbg !8993
  store i32 3, i32* %flag52, align 4, !dbg !8994
  %39 = load i32, i32* %first.addr, align 4, !dbg !8995
  %40 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !8996
  %first53 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %40, i32 0, i32 4, !dbg !8997
  store i32 %39, i32* %first53, align 4, !dbg !8998
  %41 = load i32, i32* %last.addr, align 4, !dbg !8999
  %42 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !9000
  %last54 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %42, i32 0, i32 5, !dbg !9001
  store i32 %41, i32* %last54, align 8, !dbg !9002
  store i32 0, i32* %retval2, align 4, !dbg !9003
  br label %for.end58, !dbg !9004

if.end55:                                         ; preds = %land.lhs.true47, %for.body41
  br label %for.inc56, !dbg !9005

for.inc56:                                        ; preds = %if.end55
  %43 = load i32, i32* %i, align 4, !dbg !9006
  %inc57 = add i32 %43, 1, !dbg !9006
  store i32 %inc57, i32* %i, align 4, !dbg !9006
  br label %for.cond38, !dbg !9007, !llvm.loop !9008

for.end58:                                        ; preds = %if.then49, %for.cond38
  %44 = load i32, i32* %retval2, align 4, !dbg !9010
  %tobool59 = icmp ne i32 %44, 0, !dbg !9010
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !9012

if.then60:                                        ; preds = %for.end58
  br label %err, !dbg !9013

if.end61:                                         ; preds = %for.end58
  %45 = load %struct.class*, %struct.class** @vtconsole_class, align 8, !dbg !9014
  %46 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !9015
  %node62 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %46, i32 0, i32 3, !dbg !9015
  %47 = load i32, i32* %node62, align 8, !dbg !9015
  %or = or i32 0, %47, !dbg !9015
  %48 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !9016
  %49 = bitcast %struct.con_driver* %48 to i8*, !dbg !9016
  %50 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !9017
  %node63 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %50, i32 0, i32 3, !dbg !9018
  %51 = load i32, i32* %node63, align 8, !dbg !9018
  %call64 = call %struct.device* (%struct.class*, %struct.device*, i32, i8*, %struct.attribute_group**, i8*, ...) @device_create_with_groups(%struct.class* %45, %struct.device* null, i32 %or, i8* %49, %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @con_dev_groups, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i32 %51) #13, !dbg !9019
  %52 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !9020
  %dev = getelementptr inbounds %struct.con_driver, %struct.con_driver* %52, i32 0, i32 2, !dbg !9021
  store %struct.device* %call64, %struct.device** %dev, align 8, !dbg !9022
  %53 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !9023
  %dev65 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %53, i32 0, i32 2, !dbg !9025
  %54 = load %struct.device*, %struct.device** %dev65, align 8, !dbg !9025
  %55 = bitcast %struct.device* %54 to i8*, !dbg !9023
  %call66 = call zeroext i1 @IS_ERR(i8* %55) #13, !dbg !9026
  br i1 %call66, label %if.then67, label %if.else, !dbg !9027

if.then67:                                        ; preds = %if.end61
  %56 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !9028
  %desc68 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %56, i32 0, i32 1, !dbg !9028
  %57 = load i8*, i8** %desc68, align 8, !dbg !9028
  %58 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !9028
  %dev69 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %58, i32 0, i32 2, !dbg !9028
  %59 = load %struct.device*, %struct.device** %dev69, align 8, !dbg !9028
  %60 = bitcast %struct.device* %59 to i8*, !dbg !9028
  %call70 = call i64 @PTR_ERR(i8* %60) #13, !dbg !9028
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.24, i64 0, i64 0), i8* %57, i64 %call70) #17, !dbg !9028
  %61 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !9030
  %dev72 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %61, i32 0, i32 2, !dbg !9031
  store %struct.device* null, %struct.device** %dev72, align 8, !dbg !9032
  br label %if.end74, !dbg !9033

if.else:                                          ; preds = %if.end61
  %62 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !9034
  %call73 = call i32 @vtconsole_init_device(%struct.con_driver* %62) #13, !dbg !9036
  br label %if.end74

if.end74:                                         ; preds = %if.else, %if.then67
  br label %err, !dbg !9037

err:                                              ; preds = %if.end74, %if.then60, %if.then36, %if.then32
  call void @llvm.dbg.label(metadata !9038), !dbg !9039
  %63 = load %struct.module*, %struct.module** %owner, align 8, !dbg !9040
  call void @module_put(%struct.module* %63) #13, !dbg !9041
  %64 = load i32, i32* %retval2, align 4, !dbg !9042
  store i32 %64, i32* %retval, align 4, !dbg !9043
  br label %return, !dbg !9043

return:                                           ; preds = %err, %if.then27
  %65 = load i32, i32* %retval, align 4, !dbg !9044
  ret i32 %65, !dbg !9044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @give_up_console(%struct.consw* %csw) #0 !dbg !9045 {
entry:
  %csw.addr = alloca %struct.consw*, align 8
  store %struct.consw* %csw, %struct.consw** %csw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.consw** %csw.addr, metadata !9048, metadata !DIExpression()), !dbg !9049
  call void @console_lock() #13, !dbg !9050
  %0 = load %struct.consw*, %struct.consw** %csw.addr, align 8, !dbg !9051
  %call = call i32 @do_unregister_con_driver(%struct.consw* %0) #13, !dbg !9052
  call void @console_unlock() #13, !dbg !9053
  ret void, !dbg !9054
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @vtconsole_class_init() #6 section ".init.text" !dbg !4814 {
entry:
  %i = alloca i32, align 4
  %tmp = alloca %struct.class*, align 8
  %con = alloca %struct.con_driver*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9055, metadata !DIExpression()), !dbg !9056
  %call = call %struct.class* @__class_create(%struct.module* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), %struct.lock_class_key* @vtconsole_class_init.__key) #13, !dbg !9057
  store %struct.class* %call, %struct.class** %tmp, align 8, !dbg !9057
  %0 = load %struct.class*, %struct.class** %tmp, align 8, !dbg !9057
  store %struct.class* %0, %struct.class** @vtconsole_class, align 8, !dbg !9059
  %1 = load %struct.class*, %struct.class** @vtconsole_class, align 8, !dbg !9060
  %2 = bitcast %struct.class* %1 to i8*, !dbg !9060
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #13, !dbg !9062
  br i1 %call1, label %if.then, label %if.end, !dbg !9063

if.then:                                          ; preds = %entry
  %3 = load %struct.class*, %struct.class** @vtconsole_class, align 8, !dbg !9064
  %4 = bitcast %struct.class* %3 to i8*, !dbg !9064
  %call2 = call i64 @PTR_ERR(i8* %4) #13, !dbg !9064
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.32, i64 0, i64 0), i64 %call2) #17, !dbg !9064
  store %struct.class* null, %struct.class** @vtconsole_class, align 8, !dbg !9066
  br label %if.end, !dbg !9067

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !9068
  br label %for.cond, !dbg !9070

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !9071
  %cmp = icmp slt i32 %5, 16, !dbg !9073
  br i1 %cmp, label %for.body, label %for.end, !dbg !9074

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con, metadata !9075, metadata !DIExpression()), !dbg !9077
  %6 = load i32, i32* %i, align 4, !dbg !9078
  %idxprom = sext i32 %6 to i64, !dbg !9079
  %arrayidx = getelementptr [16 x %struct.con_driver], [16 x %struct.con_driver]* @registered_con_driver, i64 0, i64 %idxprom, !dbg !9079
  store %struct.con_driver* %arrayidx, %struct.con_driver** %con, align 8, !dbg !9077
  %7 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9080
  %con4 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %7, i32 0, i32 0, !dbg !9082
  %8 = load %struct.consw*, %struct.consw** %con4, align 8, !dbg !9082
  %tobool = icmp ne %struct.consw* %8, null, !dbg !9080
  br i1 %tobool, label %land.lhs.true, label %if.end19, !dbg !9083

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9084
  %dev = getelementptr inbounds %struct.con_driver, %struct.con_driver* %9, i32 0, i32 2, !dbg !9085
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9085
  %tobool5 = icmp ne %struct.device* %10, null, !dbg !9084
  br i1 %tobool5, label %if.end19, label %if.then6, !dbg !9086

if.then6:                                         ; preds = %land.lhs.true
  %11 = load %struct.class*, %struct.class** @vtconsole_class, align 8, !dbg !9087
  %12 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9089
  %node = getelementptr inbounds %struct.con_driver, %struct.con_driver* %12, i32 0, i32 3, !dbg !9089
  %13 = load i32, i32* %node, align 8, !dbg !9089
  %or = or i32 0, %13, !dbg !9089
  %14 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9090
  %15 = bitcast %struct.con_driver* %14 to i8*, !dbg !9090
  %16 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9091
  %node7 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %16, i32 0, i32 3, !dbg !9092
  %17 = load i32, i32* %node7, align 8, !dbg !9092
  %call8 = call %struct.device* (%struct.class*, %struct.device*, i32, i8*, %struct.attribute_group**, i8*, ...) @device_create_with_groups(%struct.class* %11, %struct.device* null, i32 %or, i8* %15, %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @con_dev_groups, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i32 %17) #13, !dbg !9093
  %18 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9094
  %dev9 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %18, i32 0, i32 2, !dbg !9095
  store %struct.device* %call8, %struct.device** %dev9, align 8, !dbg !9096
  %19 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9097
  %dev10 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %19, i32 0, i32 2, !dbg !9099
  %20 = load %struct.device*, %struct.device** %dev10, align 8, !dbg !9099
  %21 = bitcast %struct.device* %20 to i8*, !dbg !9097
  %call11 = call zeroext i1 @IS_ERR(i8* %21) #13, !dbg !9100
  br i1 %call11, label %if.then12, label %if.else, !dbg !9101

if.then12:                                        ; preds = %if.then6
  %22 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9102
  %desc = getelementptr inbounds %struct.con_driver, %struct.con_driver* %22, i32 0, i32 1, !dbg !9102
  %23 = load i8*, i8** %desc, align 8, !dbg !9102
  %24 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9102
  %dev13 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %24, i32 0, i32 2, !dbg !9102
  %25 = load %struct.device*, %struct.device** %dev13, align 8, !dbg !9102
  %26 = bitcast %struct.device* %25 to i8*, !dbg !9102
  %call14 = call i64 @PTR_ERR(i8* %26) #13, !dbg !9102
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.24, i64 0, i64 0), i8* %23, i64 %call14) #17, !dbg !9102
  %27 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9104
  %dev16 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %27, i32 0, i32 2, !dbg !9105
  store %struct.device* null, %struct.device** %dev16, align 8, !dbg !9106
  br label %if.end18, !dbg !9107

if.else:                                          ; preds = %if.then6
  %28 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !9108
  %call17 = call i32 @vtconsole_init_device(%struct.con_driver* %28) #13, !dbg !9110
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then12
  br label %if.end19, !dbg !9111

if.end19:                                         ; preds = %if.end18, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9112

for.inc:                                          ; preds = %if.end19
  %29 = load i32, i32* %i, align 4, !dbg !9113
  %inc = add i32 %29, 1, !dbg !9113
  store i32 %inc, i32* %i, align 4, !dbg !9113
  br label %for.cond, !dbg !9114, !llvm.loop !9115

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !9117
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: noredzone
declare dso_local void @vt_event_post(i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @do_unblank_screen(i32 %leaving_gfx) #0 !dbg !9118 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !9119
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !9123
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !9125
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !9126
  %leaving_gfx.addr = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %leaving_gfx, i32* %leaving_gfx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %leaving_gfx.addr, metadata !9127, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !9129, metadata !DIExpression()), !dbg !9130
  %0 = load i32, i32* @oops_in_progress, align 4, !dbg !9131
  %tobool = icmp ne i32 %0, 0, !dbg !9131
  br i1 %tobool, label %if.end, label %if.then, !dbg !9133

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9134

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !9135

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !9137

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !9135

do.end2:                                          ; preds = %do.end
  br label %if.end, !dbg !9135

if.end:                                           ; preds = %do.end2, %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9139, metadata !DIExpression()), !dbg !9140
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9141
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !9141
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9142
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !9143
  %conv.i.i = trunc i64 %4 to i32, !dbg !9143
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #14, !dbg !9144
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9145
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !9145
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !9145
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9146
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9147
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !9147
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !9147
  %tobool3 = icmp ne i32 %9, 0, !dbg !9140
  br i1 %tobool3, label %land.end, label %land.lhs.true, !dbg !9140

land.lhs.true:                                    ; preds = %if.end
  %call4 = call i32 @is_console_locked() #13, !dbg !9140
  %tobool5 = icmp ne i32 %call4, 0, !dbg !9140
  br i1 %tobool5, label %land.end, label %land.rhs, !dbg !9140

land.rhs:                                         ; preds = %land.lhs.true
  %10 = load i32, i32* @oops_in_progress, align 4, !dbg !9140
  %tobool6 = icmp ne i32 %10, 0, !dbg !9140
  %lnot = xor i1 %tobool6, true, !dbg !9140
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.end
  %11 = phi i1 [ false, %land.lhs.true ], [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !9148
  %lnot7 = xor i1 %11, true, !dbg !9140
  %lnot8 = xor i1 %lnot7, true, !dbg !9140
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !9140
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9140
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !9149
  %tobool9 = icmp ne i32 %12, 0, !dbg !9149
  %lnot10 = xor i1 %tobool9, true, !dbg !9149
  %lnot12 = xor i1 %lnot10, true, !dbg !9149
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !9149
  %conv = sext i32 %lnot.ext13 to i64, !dbg !9149
  %tobool14 = icmp ne i64 %conv, 0, !dbg !9149
  br i1 %tobool14, label %if.then15, label %if.end24, !dbg !9140

if.then15:                                        ; preds = %land.end
  br label %do.body16, !dbg !9149

do.body16:                                        ; preds = %if.then15
  br label %do.body17, !dbg !9151

do.body17:                                        ; preds = %do.body16
  br label %do.end18, !dbg !9153

do.end18:                                         ; preds = %do.body17
  br label %do.body19, !dbg !9151

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 4385, i32 2305, i64 12) #5, !dbg !9155, !srcloc !9157
  br label %do.end20, !dbg !9155

do.end20:                                         ; preds = %do.body19
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 289) #5, !dbg !9158, !srcloc !9160
  br label %do.body21, !dbg !9151

do.body21:                                        ; preds = %do.end20
  br label %do.end22, !dbg !9161

do.end22:                                         ; preds = %do.body21
  br label %do.end23, !dbg !9151

do.end23:                                         ; preds = %do.end22
  br label %if.end24, !dbg !9151

if.end24:                                         ; preds = %do.end23, %land.end
  %13 = load i32, i32* %__ret_warn_on, align 4, !dbg !9140
  %tobool25 = icmp ne i32 %13, 0, !dbg !9140
  %lnot26 = xor i1 %tobool25, true, !dbg !9140
  %lnot28 = xor i1 %lnot26, true, !dbg !9140
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !9140
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !9140
  store i64 %conv30, i64* %tmp, align 8, !dbg !9149
  %14 = load i64, i64* %tmp, align 8, !dbg !9140
  store i32 0, i32* @ignore_poke, align 4, !dbg !9163
  %15 = load i32, i32* @console_blanked, align 4, !dbg !9164
  %tobool31 = icmp ne i32 %15, 0, !dbg !9164
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !9166

if.then32:                                        ; preds = %if.end24
  br label %return, !dbg !9167

if.end33:                                         ; preds = %if.end24
  %16 = load i32, i32* @fg_console, align 4, !dbg !9168
  %call34 = call i32 @vc_cons_allocated(i32 %16) #13, !dbg !9170
  %tobool35 = icmp ne i32 %call34, 0, !dbg !9170
  br i1 %tobool35, label %if.end38, label %if.then36, !dbg !9171

if.then36:                                        ; preds = %if.end33
  %17 = load i32, i32* @fg_console, align 4, !dbg !9172
  %add = add i32 %17, 1, !dbg !9172
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0), i32 %add) #17, !dbg !9172
  br label %return, !dbg !9174

if.end38:                                         ; preds = %if.end33
  %18 = load i32, i32* @fg_console, align 4, !dbg !9175
  %idxprom = sext i32 %18 to i64, !dbg !9176
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !9176
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !9177
  %19 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !9177
  store %struct.vc_data* %19, %struct.vc_data** %vc, align 8, !dbg !9178
  %20 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9179
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 16, !dbg !9181
  %21 = load i8, i8* %vc_mode, align 4, !dbg !9181
  %conv39 = zext i8 %21 to i32, !dbg !9179
  %cmp = icmp ne i32 %conv39, 0, !dbg !9182
  br i1 %cmp, label %if.then41, label %if.end42, !dbg !9183

if.then41:                                        ; preds = %if.end38
  br label %return, !dbg !9184

if.end42:                                         ; preds = %if.end38
  %22 = load i32, i32* @blankinterval, align 4, !dbg !9185
  %tobool43 = icmp ne i32 %22, 0, !dbg !9185
  br i1 %tobool43, label %if.then44, label %if.end48, !dbg !9187

if.then44:                                        ; preds = %if.end42
  %23 = load volatile i64, i64* @jiffies, align 8, !dbg !9188
  %24 = load i32, i32* @blankinterval, align 4, !dbg !9190
  %mul = mul i32 %24, 250, !dbg !9191
  %conv45 = sext i32 %mul to i64, !dbg !9192
  %add46 = add i64 %23, %conv45, !dbg !9193
  %call47 = call i32 @mod_timer(%struct.timer_list* @console_timer, i64 %add46) #13, !dbg !9194
  store i32 1, i32* @blank_state, align 4, !dbg !9195
  br label %if.end48, !dbg !9196

if.end48:                                         ; preds = %if.then44, %if.end42
  store i32 0, i32* @console_blanked, align 4, !dbg !9197
  %25 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9198
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 13, !dbg !9200
  %26 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !9200
  %con_blank = getelementptr inbounds %struct.consw, %struct.consw* %26, i32 0, i32 10, !dbg !9201
  %27 = load i32 (%struct.vc_data*, i32, i32)*, i32 (%struct.vc_data*, i32, i32)** %con_blank, align 8, !dbg !9201
  %28 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9202
  %29 = load i32, i32* %leaving_gfx.addr, align 4, !dbg !9203
  %call49 = call i32 %27(%struct.vc_data* %28, i32 0, i32 %29) #13, !dbg !9198
  %tobool50 = icmp ne i32 %call49, 0, !dbg !9198
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !9204

if.then51:                                        ; preds = %if.end48
  %30 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9205
  call void @redraw_screen(%struct.vc_data* %30, i32 0) #13, !dbg !9205
  br label %if.end52, !dbg !9205

if.end52:                                         ; preds = %if.then51, %if.end48
  %31 = load i32 (i32)*, i32 (i32)** @console_blank_hook, align 8, !dbg !9206
  %tobool53 = icmp ne i32 (i32)* %31, null, !dbg !9206
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !9208

if.then54:                                        ; preds = %if.end52
  %32 = load i32 (i32)*, i32 (i32)** @console_blank_hook, align 8, !dbg !9209
  %call55 = call i32 %32(i32 0) #13, !dbg !9209
  br label %if.end56, !dbg !9209

if.end56:                                         ; preds = %if.then54, %if.end52
  %33 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9210
  call void @set_palette(%struct.vc_data* %33) #13, !dbg !9211
  %34 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9212
  call void @set_cursor(%struct.vc_data* %34) #13, !dbg !9213
  %35 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9214
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 3, !dbg !9215
  %36 = load i16, i16* %vc_num, align 8, !dbg !9215
  %conv57 = zext i16 %36 to i32, !dbg !9214
  %37 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9216
  %vc_num58 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 3, !dbg !9217
  %38 = load i16, i16* %vc_num58, align 8, !dbg !9217
  %conv59 = zext i16 %38 to i32, !dbg !9216
  call void @vt_event_post(i32 4, i32 %conv57, i32 %conv59) #13, !dbg !9218
  br label %return, !dbg !9219

return:                                           ; preds = %if.end56, %if.then41, %if.then36, %if.then32
  ret void, !dbg !9219
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @poke_blanked_console() #0 !dbg !9220 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !9221
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !9225
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !9227
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !9228
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9229, metadata !DIExpression()), !dbg !9230
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9231
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !9231
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9232
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !9233
  %conv.i.i = trunc i64 %3 to i32, !dbg !9233
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !9234
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9235
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !9235
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !9235
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9236
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9237
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !9237
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !9237
  %tobool = icmp ne i32 %8, 0, !dbg !9230
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !9230

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !9230
  %tobool2 = icmp ne i32 %call1, 0, !dbg !9230
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !9230

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !9230
  %tobool3 = icmp ne i32 %9, 0, !dbg !9230
  %lnot = xor i1 %tobool3, true, !dbg !9230
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !9238
  %lnot4 = xor i1 %10, true, !dbg !9230
  %lnot5 = xor i1 %lnot4, true, !dbg !9230
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !9230
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9230
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !9239
  %tobool6 = icmp ne i32 %11, 0, !dbg !9239
  %lnot7 = xor i1 %tobool6, true, !dbg !9239
  %lnot9 = xor i1 %lnot7, true, !dbg !9239
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !9239
  %conv = sext i32 %lnot.ext10 to i64, !dbg !9239
  %tobool11 = icmp ne i64 %conv, 0, !dbg !9239
  br i1 %tobool11, label %if.then, label %if.end, !dbg !9230

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !9239

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !9241

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !9243

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !9241

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 4441, i32 2305, i64 12) #5, !dbg !9245, !srcloc !9247
  br label %do.end14, !dbg !9245

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 290) #5, !dbg !9248, !srcloc !9250
  br label %do.body15, !dbg !9241

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !9251

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !9241

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !9241

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !9230
  %tobool18 = icmp ne i32 %12, 0, !dbg !9230
  %lnot19 = xor i1 %tobool18, true, !dbg !9230
  %lnot21 = xor i1 %lnot19, true, !dbg !9230
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !9230
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !9230
  store i64 %conv23, i64* %tmp, align 8, !dbg !9239
  %13 = load i64, i64* %tmp, align 8, !dbg !9230
  br label %do.body24, !dbg !9253

do.body24:                                        ; preds = %if.end
  br label %do.body25, !dbg !9254

do.body25:                                        ; preds = %do.body24
  br label %do.end26, !dbg !9256

do.end26:                                         ; preds = %do.body25
  br label %do.end27, !dbg !9254

do.end27:                                         ; preds = %do.end26
  %call28 = call i32 @del_timer(%struct.timer_list* @console_timer) #13, !dbg !9258
  store i32 0, i32* @blank_timer_expired, align 4, !dbg !9259
  %14 = load i32, i32* @ignore_poke, align 4, !dbg !9260
  %tobool29 = icmp ne i32 %14, 0, !dbg !9260
  br i1 %tobool29, label %if.then37, label %lor.lhs.false, !dbg !9262

lor.lhs.false:                                    ; preds = %do.end27
  %15 = load i32, i32* @fg_console, align 4, !dbg !9263
  %idxprom = sext i32 %15 to i64, !dbg !9264
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !9264
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !9265
  %16 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !9265
  %tobool30 = icmp ne %struct.vc_data* %16, null, !dbg !9264
  br i1 %tobool30, label %lor.lhs.false31, label %if.then37, !dbg !9266

lor.lhs.false31:                                  ; preds = %lor.lhs.false
  %17 = load i32, i32* @fg_console, align 4, !dbg !9267
  %idxprom32 = sext i32 %17 to i64, !dbg !9268
  %arrayidx33 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom32, !dbg !9268
  %d34 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx33, i32 0, i32 0, !dbg !9269
  %18 = load %struct.vc_data*, %struct.vc_data** %d34, align 8, !dbg !9269
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 16, !dbg !9270
  %19 = load i8, i8* %vc_mode, align 4, !dbg !9270
  %conv35 = zext i8 %19 to i32, !dbg !9268
  %cmp = icmp eq i32 %conv35, 1, !dbg !9271
  br i1 %cmp, label %if.then37, label %if.end38, !dbg !9272

if.then37:                                        ; preds = %lor.lhs.false31, %lor.lhs.false, %do.end27
  br label %if.end46, !dbg !9273

if.end38:                                         ; preds = %lor.lhs.false31
  %20 = load i32, i32* @console_blanked, align 4, !dbg !9274
  %tobool39 = icmp ne i32 %20, 0, !dbg !9274
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !9276

if.then40:                                        ; preds = %if.end38
  call void @unblank_screen() #13, !dbg !9277
  br label %if.end46, !dbg !9277

if.else:                                          ; preds = %if.end38
  %21 = load i32, i32* @blankinterval, align 4, !dbg !9278
  %tobool41 = icmp ne i32 %21, 0, !dbg !9278
  br i1 %tobool41, label %if.then42, label %if.end45, !dbg !9280

if.then42:                                        ; preds = %if.else
  %22 = load volatile i64, i64* @jiffies, align 8, !dbg !9281
  %23 = load i32, i32* @blankinterval, align 4, !dbg !9283
  %mul = mul i32 %23, 250, !dbg !9284
  %conv43 = sext i32 %mul to i64, !dbg !9285
  %add = add i64 %22, %conv43, !dbg !9286
  %call44 = call i32 @mod_timer(%struct.timer_list* @console_timer, i64 %add) #13, !dbg !9287
  store i32 1, i32* @blank_state, align 4, !dbg !9288
  br label %if.end45, !dbg !9289

if.end45:                                         ; preds = %if.then42, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.then37, %if.end45, %if.then40
  ret void, !dbg !9290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @con_set_cmap(i8* %arg) #0 !dbg !9291 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !9294, metadata !DIExpression()), !dbg !9299
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !9308, metadata !DIExpression()), !dbg !9309
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !9310, metadata !DIExpression()), !dbg !9311
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !9312, metadata !DIExpression()), !dbg !9313
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !9314, metadata !DIExpression()), !dbg !9317
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !9318, metadata !DIExpression()), !dbg !9319
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !9320, metadata !DIExpression()), !dbg !9321
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !9322, metadata !DIExpression()), !dbg !9323
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %colormap = alloca [48 x i8], align 16
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9324, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9326, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9328, metadata !DIExpression()), !dbg !9329
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9330, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.declare(metadata [48 x i8]* %colormap, metadata !9332, metadata !DIExpression()), !dbg !9333
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %colormap, i64 0, i64 0, !dbg !9334
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9335
  store i8* %arraydecay, i8** %to.addr.i, align 8
  store i8* %0, i8** %from.addr.i, align 8
  store i64 48, i64* %n.addr.i, align 8
  %1 = load i8*, i8** %to.addr.i, align 8, !dbg !9336
  %2 = load i64, i64* %n.addr.i, align 8, !dbg !9336
  store i8* %1, i8** %addr.addr.i.i, align 8
  store i64 %2, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9313
  %3 = load i32, i32* %sz.i.i, align 4, !dbg !9337
  %cmp.i.i = icmp sge i32 %3, 0, !dbg !9337
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9337

land.rhs.i.i:                                     ; preds = %entry
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !9337
  %conv.i.i = sext i32 %4 to i64, !dbg !9337
  %5 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9337
  %cmp1.i.i = icmp ult i64 %conv.i.i, %5, !dbg !9337
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9339
  %lnot.i.i = xor i1 %6, true, !dbg !9337
  %lnot.ext.i.i = zext i1 %6 to i32, !dbg !9337
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9337
  br i1 %6, label %if.then.i.i, label %if.end10.i.i, !dbg !9340

if.then.i.i:                                      ; preds = %land.end.i.i
  %7 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9341
  %8 = call i1 @llvm.is.constant.i64(i64 %7) #5, !dbg !9344
  br i1 %8, label %if.else.i.i, label %if.then5.i.i, !dbg !9345

if.then5.i.i:                                     ; preds = %if.then.i.i
  %9 = load i32, i32* %sz.i.i, align 4, !dbg !9346
  %10 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9347
  call void @copy_overflow(i32 %9, i64 %10) #14, !dbg !9348
  br label %if.end9.i.i, !dbg !9348

if.else.i.i:                                      ; preds = %if.then.i.i
  %11 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9349
  %tobool6.i.i = trunc i8 %11 to i1, !dbg !9349
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9351

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !9352
  br label %if.end.i.i, !dbg !9352

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !9353
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9354
  br label %check_copy_size.exit.i, !dbg !9354

if.end10.i.i:                                     ; preds = %land.end.i.i
  %12 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9317
  %cmp11.i.i = icmp ugt i64 %12, 2147483647, !dbg !9317
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9317
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9317
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9317
  %13 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9355
  %tobool17.i.i = icmp ne i32 %13, 0, !dbg !9355
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9355
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9355
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9355
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9317

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !9357, !srcloc !9360
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !9361, !srcloc !9363
  br label %if.end31.i.i, !dbg !9364

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9317
  %tobool32.i.i = icmp ne i32 %14, 0, !dbg !9317
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9317
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9317
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9317
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9355
  %15 = load i64, i64* %tmp.i.i, align 8, !dbg !9317
  %tobool38.i.i = icmp ne i64 %15, 0, !dbg !9365
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9366

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9367
  br label %check_copy_size.exit.i, !dbg !9367

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %16 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9368
  %17 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9369
  %18 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9370
  %tobool41.i.i = trunc i8 %18 to i1, !dbg !9370
  call void @check_object_size(i8* %16, i64 %17, i1 zeroext %tobool41.i.i) #14, !dbg !9371
  store i1 true, i1* %retval.i.i, align 1, !dbg !9372
  br label %check_copy_size.exit.i, !dbg !9372

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %19 = load i1, i1* %retval.i.i, align 1, !dbg !9373
  %lnot.i = xor i1 %19, true, !dbg !9336
  %lnot.ext.i = zext i1 %19 to i32, !dbg !9336
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9336
  br i1 %19, label %if.then.i, label %copy_from_user.exit, !dbg !9374

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %20 = load i8*, i8** %to.addr.i, align 8, !dbg !9375
  %21 = load i8*, i8** %from.addr.i, align 8, !dbg !9376
  %22 = load i64, i64* %n.addr.i, align 8, !dbg !9377
  %call2.i = call i64 @_copy_from_user(i8* %20, i8* %21, i64 %22) #14, !dbg !9378
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9379
  br label %copy_from_user.exit, !dbg !9380

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !9381
  %tobool = icmp ne i64 %23, 0, !dbg !9382
  br i1 %tobool, label %if.then, label %if.end, !dbg !9383

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !9384
  br label %return, !dbg !9384

if.end:                                           ; preds = %copy_from_user.exit
  call void @console_lock() #13, !dbg !9385
  store i32 0, i32* %k, align 4, !dbg !9386
  store i32 0, i32* %i, align 4, !dbg !9388
  br label %for.cond, !dbg !9389

for.cond:                                         ; preds = %for.inc, %if.end
  %24 = load i32, i32* %i, align 4, !dbg !9390
  %cmp = icmp slt i32 %24, 16, !dbg !9392
  br i1 %cmp, label %for.body, label %for.end, !dbg !9393

for.body:                                         ; preds = %for.cond
  %25 = load i32, i32* %k, align 4, !dbg !9394
  %inc = add i32 %25, 1, !dbg !9394
  store i32 %inc, i32* %k, align 4, !dbg !9394
  %idxprom = sext i32 %25 to i64, !dbg !9396
  %arrayidx = getelementptr [48 x i8], [48 x i8]* %colormap, i64 0, i64 %idxprom, !dbg !9396
  %26 = load i8, i8* %arrayidx, align 1, !dbg !9396
  %27 = load i32, i32* %i, align 4, !dbg !9397
  %idxprom1 = sext i32 %27 to i64, !dbg !9398
  %arrayidx2 = getelementptr [16 x i8], [16 x i8]* @default_red, i64 0, i64 %idxprom1, !dbg !9398
  store i8 %26, i8* %arrayidx2, align 1, !dbg !9399
  %28 = load i32, i32* %k, align 4, !dbg !9400
  %inc3 = add i32 %28, 1, !dbg !9400
  store i32 %inc3, i32* %k, align 4, !dbg !9400
  %idxprom4 = sext i32 %28 to i64, !dbg !9401
  %arrayidx5 = getelementptr [48 x i8], [48 x i8]* %colormap, i64 0, i64 %idxprom4, !dbg !9401
  %29 = load i8, i8* %arrayidx5, align 1, !dbg !9401
  %30 = load i32, i32* %i, align 4, !dbg !9402
  %idxprom6 = sext i32 %30 to i64, !dbg !9403
  %arrayidx7 = getelementptr [16 x i8], [16 x i8]* @default_grn, i64 0, i64 %idxprom6, !dbg !9403
  store i8 %29, i8* %arrayidx7, align 1, !dbg !9404
  %31 = load i32, i32* %k, align 4, !dbg !9405
  %inc8 = add i32 %31, 1, !dbg !9405
  store i32 %inc8, i32* %k, align 4, !dbg !9405
  %idxprom9 = sext i32 %31 to i64, !dbg !9406
  %arrayidx10 = getelementptr [48 x i8], [48 x i8]* %colormap, i64 0, i64 %idxprom9, !dbg !9406
  %32 = load i8, i8* %arrayidx10, align 1, !dbg !9406
  %33 = load i32, i32* %i, align 4, !dbg !9407
  %idxprom11 = sext i32 %33 to i64, !dbg !9408
  %arrayidx12 = getelementptr [16 x i8], [16 x i8]* @default_blu, i64 0, i64 %idxprom11, !dbg !9408
  store i8 %32, i8* %arrayidx12, align 1, !dbg !9409
  br label %for.inc, !dbg !9410

for.inc:                                          ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !dbg !9411
  %inc13 = add i32 %34, 1, !dbg !9411
  store i32 %inc13, i32* %i, align 4, !dbg !9411
  br label %for.cond, !dbg !9412, !llvm.loop !9413

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9415
  br label %for.cond14, !dbg !9417

for.cond14:                                       ; preds = %for.inc55, %for.end
  %35 = load i32, i32* %i, align 4, !dbg !9418
  %cmp15 = icmp slt i32 %35, 63, !dbg !9420
  br i1 %cmp15, label %for.body16, label %for.end57, !dbg !9421

for.body16:                                       ; preds = %for.cond14
  %36 = load i32, i32* %i, align 4, !dbg !9422
  %call17 = call i32 @vc_cons_allocated(i32 %36) #13, !dbg !9425
  %tobool18 = icmp ne i32 %call17, 0, !dbg !9425
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !9426

if.then19:                                        ; preds = %for.body16
  br label %for.inc55, !dbg !9427

if.end20:                                         ; preds = %for.body16
  store i32 0, i32* %k, align 4, !dbg !9428
  store i32 0, i32* %j, align 4, !dbg !9430
  br label %for.cond21, !dbg !9431

for.cond21:                                       ; preds = %for.inc49, %if.end20
  %37 = load i32, i32* %j, align 4, !dbg !9432
  %cmp22 = icmp slt i32 %37, 16, !dbg !9434
  br i1 %cmp22, label %for.body23, label %for.end51, !dbg !9435

for.body23:                                       ; preds = %for.cond21
  %38 = load i32, i32* %j, align 4, !dbg !9436
  %idxprom24 = sext i32 %38 to i64, !dbg !9438
  %arrayidx25 = getelementptr [16 x i8], [16 x i8]* @default_red, i64 0, i64 %idxprom24, !dbg !9438
  %39 = load i8, i8* %arrayidx25, align 1, !dbg !9438
  %40 = load i32, i32* %i, align 4, !dbg !9439
  %idxprom26 = sext i32 %40 to i64, !dbg !9440
  %arrayidx27 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom26, !dbg !9440
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx27, i32 0, i32 0, !dbg !9441
  %41 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !9441
  %vc_palette = getelementptr inbounds %struct.vc_data, %struct.vc_data* %41, i32 0, i32 40, !dbg !9442
  %42 = load i32, i32* %k, align 4, !dbg !9443
  %inc28 = add i32 %42, 1, !dbg !9443
  store i32 %inc28, i32* %k, align 4, !dbg !9443
  %idxprom29 = sext i32 %42 to i64, !dbg !9440
  %arrayidx30 = getelementptr [48 x i8], [48 x i8]* %vc_palette, i64 0, i64 %idxprom29, !dbg !9440
  store i8 %39, i8* %arrayidx30, align 1, !dbg !9444
  %43 = load i32, i32* %j, align 4, !dbg !9445
  %idxprom31 = sext i32 %43 to i64, !dbg !9446
  %arrayidx32 = getelementptr [16 x i8], [16 x i8]* @default_grn, i64 0, i64 %idxprom31, !dbg !9446
  %44 = load i8, i8* %arrayidx32, align 1, !dbg !9446
  %45 = load i32, i32* %i, align 4, !dbg !9447
  %idxprom33 = sext i32 %45 to i64, !dbg !9448
  %arrayidx34 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom33, !dbg !9448
  %d35 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx34, i32 0, i32 0, !dbg !9449
  %46 = load %struct.vc_data*, %struct.vc_data** %d35, align 8, !dbg !9449
  %vc_palette36 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %46, i32 0, i32 40, !dbg !9450
  %47 = load i32, i32* %k, align 4, !dbg !9451
  %inc37 = add i32 %47, 1, !dbg !9451
  store i32 %inc37, i32* %k, align 4, !dbg !9451
  %idxprom38 = sext i32 %47 to i64, !dbg !9448
  %arrayidx39 = getelementptr [48 x i8], [48 x i8]* %vc_palette36, i64 0, i64 %idxprom38, !dbg !9448
  store i8 %44, i8* %arrayidx39, align 1, !dbg !9452
  %48 = load i32, i32* %j, align 4, !dbg !9453
  %idxprom40 = sext i32 %48 to i64, !dbg !9454
  %arrayidx41 = getelementptr [16 x i8], [16 x i8]* @default_blu, i64 0, i64 %idxprom40, !dbg !9454
  %49 = load i8, i8* %arrayidx41, align 1, !dbg !9454
  %50 = load i32, i32* %i, align 4, !dbg !9455
  %idxprom42 = sext i32 %50 to i64, !dbg !9456
  %arrayidx43 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom42, !dbg !9456
  %d44 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx43, i32 0, i32 0, !dbg !9457
  %51 = load %struct.vc_data*, %struct.vc_data** %d44, align 8, !dbg !9457
  %vc_palette45 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %51, i32 0, i32 40, !dbg !9458
  %52 = load i32, i32* %k, align 4, !dbg !9459
  %inc46 = add i32 %52, 1, !dbg !9459
  store i32 %inc46, i32* %k, align 4, !dbg !9459
  %idxprom47 = sext i32 %52 to i64, !dbg !9456
  %arrayidx48 = getelementptr [48 x i8], [48 x i8]* %vc_palette45, i64 0, i64 %idxprom47, !dbg !9456
  store i8 %49, i8* %arrayidx48, align 1, !dbg !9460
  br label %for.inc49, !dbg !9461

for.inc49:                                        ; preds = %for.body23
  %53 = load i32, i32* %j, align 4, !dbg !9462
  %inc50 = add i32 %53, 1, !dbg !9462
  store i32 %inc50, i32* %j, align 4, !dbg !9462
  br label %for.cond21, !dbg !9463, !llvm.loop !9464

for.end51:                                        ; preds = %for.cond21
  %54 = load i32, i32* %i, align 4, !dbg !9466
  %idxprom52 = sext i32 %54 to i64, !dbg !9467
  %arrayidx53 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom52, !dbg !9467
  %d54 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx53, i32 0, i32 0, !dbg !9468
  %55 = load %struct.vc_data*, %struct.vc_data** %d54, align 8, !dbg !9468
  call void @set_palette(%struct.vc_data* %55) #13, !dbg !9469
  br label %for.inc55, !dbg !9470

for.inc55:                                        ; preds = %for.end51, %if.then19
  %56 = load i32, i32* %i, align 4, !dbg !9471
  %inc56 = add i32 %56, 1, !dbg !9471
  store i32 %inc56, i32* %i, align 4, !dbg !9471
  br label %for.cond14, !dbg !9472, !llvm.loop !9473

for.end57:                                        ; preds = %for.cond14
  call void @console_unlock() #13, !dbg !9475
  store i32 0, i32* %retval, align 4, !dbg !9476
  br label %return, !dbg !9476

return:                                           ; preds = %for.end57, %if.then
  %57 = load i32, i32* %retval, align 4, !dbg !9477
  ret i32 %57, !dbg !9477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @con_get_cmap(i8* %arg) #0 !dbg !9478 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !9294, metadata !DIExpression()), !dbg !9479
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !9308, metadata !DIExpression()), !dbg !9485
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !9310, metadata !DIExpression()), !dbg !9486
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !9312, metadata !DIExpression()), !dbg !9487
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !9314, metadata !DIExpression()), !dbg !9488
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !9489, metadata !DIExpression()), !dbg !9490
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !9491, metadata !DIExpression()), !dbg !9492
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !9493, metadata !DIExpression()), !dbg !9494
  %retval = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %colormap = alloca [48 x i8], align 16
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9495, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9497, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9499, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.declare(metadata [48 x i8]* %colormap, metadata !9501, metadata !DIExpression()), !dbg !9502
  call void @console_lock() #13, !dbg !9503
  store i32 0, i32* %k, align 4, !dbg !9504
  store i32 0, i32* %i, align 4, !dbg !9506
  br label %for.cond, !dbg !9507

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9508
  %cmp = icmp slt i32 %0, 16, !dbg !9510
  br i1 %cmp, label %for.body, label %for.end, !dbg !9511

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !9512
  %idxprom = sext i32 %1 to i64, !dbg !9514
  %arrayidx = getelementptr [16 x i8], [16 x i8]* @default_red, i64 0, i64 %idxprom, !dbg !9514
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9514
  %3 = load i32, i32* %k, align 4, !dbg !9515
  %inc = add i32 %3, 1, !dbg !9515
  store i32 %inc, i32* %k, align 4, !dbg !9515
  %idxprom1 = sext i32 %3 to i64, !dbg !9516
  %arrayidx2 = getelementptr [48 x i8], [48 x i8]* %colormap, i64 0, i64 %idxprom1, !dbg !9516
  store i8 %2, i8* %arrayidx2, align 1, !dbg !9517
  %4 = load i32, i32* %i, align 4, !dbg !9518
  %idxprom3 = sext i32 %4 to i64, !dbg !9519
  %arrayidx4 = getelementptr [16 x i8], [16 x i8]* @default_grn, i64 0, i64 %idxprom3, !dbg !9519
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !9519
  %6 = load i32, i32* %k, align 4, !dbg !9520
  %inc5 = add i32 %6, 1, !dbg !9520
  store i32 %inc5, i32* %k, align 4, !dbg !9520
  %idxprom6 = sext i32 %6 to i64, !dbg !9521
  %arrayidx7 = getelementptr [48 x i8], [48 x i8]* %colormap, i64 0, i64 %idxprom6, !dbg !9521
  store i8 %5, i8* %arrayidx7, align 1, !dbg !9522
  %7 = load i32, i32* %i, align 4, !dbg !9523
  %idxprom8 = sext i32 %7 to i64, !dbg !9524
  %arrayidx9 = getelementptr [16 x i8], [16 x i8]* @default_blu, i64 0, i64 %idxprom8, !dbg !9524
  %8 = load i8, i8* %arrayidx9, align 1, !dbg !9524
  %9 = load i32, i32* %k, align 4, !dbg !9525
  %inc10 = add i32 %9, 1, !dbg !9525
  store i32 %inc10, i32* %k, align 4, !dbg !9525
  %idxprom11 = sext i32 %9 to i64, !dbg !9526
  %arrayidx12 = getelementptr [48 x i8], [48 x i8]* %colormap, i64 0, i64 %idxprom11, !dbg !9526
  store i8 %8, i8* %arrayidx12, align 1, !dbg !9527
  br label %for.inc, !dbg !9528

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !9529
  %inc13 = add i32 %10, 1, !dbg !9529
  store i32 %inc13, i32* %i, align 4, !dbg !9529
  br label %for.cond, !dbg !9530, !llvm.loop !9531

for.end:                                          ; preds = %for.cond
  call void @console_unlock() #13, !dbg !9533
  %11 = load i8*, i8** %arg.addr, align 8, !dbg !9534
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %colormap, i64 0, i64 0, !dbg !9535
  store i8* %11, i8** %to.addr.i, align 8
  store i8* %arraydecay, i8** %from.addr.i, align 8
  store i64 48, i64* %n.addr.i, align 8
  %12 = load i8*, i8** %from.addr.i, align 8, !dbg !9536
  %13 = load i64, i64* %n.addr.i, align 8, !dbg !9536
  store i8* %12, i8** %addr.addr.i.i, align 8
  store i64 %13, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9487
  %14 = load i32, i32* %sz.i.i, align 4, !dbg !9537
  %cmp.i.i = icmp sge i32 %14, 0, !dbg !9537
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9537

land.rhs.i.i:                                     ; preds = %for.end
  %15 = load i32, i32* %sz.i.i, align 4, !dbg !9537
  %conv.i.i = sext i32 %15 to i64, !dbg !9537
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9537
  %cmp1.i.i = icmp ult i64 %conv.i.i, %16, !dbg !9537
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %for.end
  %17 = phi i1 [ false, %for.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9538
  %lnot.i.i = xor i1 %17, true, !dbg !9537
  %lnot.ext.i.i = zext i1 %17 to i32, !dbg !9537
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9537
  br i1 %17, label %if.then.i.i, label %if.end10.i.i, !dbg !9539

if.then.i.i:                                      ; preds = %land.end.i.i
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9540
  %19 = call i1 @llvm.is.constant.i64(i64 %18) #5, !dbg !9541
  br i1 %19, label %if.else.i.i, label %if.then5.i.i, !dbg !9542

if.then5.i.i:                                     ; preds = %if.then.i.i
  %20 = load i32, i32* %sz.i.i, align 4, !dbg !9543
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9544
  call void @copy_overflow(i32 %20, i64 %21) #14, !dbg !9545
  br label %if.end9.i.i, !dbg !9545

if.else.i.i:                                      ; preds = %if.then.i.i
  %22 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9546
  %tobool6.i.i = trunc i8 %22 to i1, !dbg !9546
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9547

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !9548
  br label %if.end.i.i, !dbg !9548

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !9549
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9550
  br label %check_copy_size.exit.i, !dbg !9550

if.end10.i.i:                                     ; preds = %land.end.i.i
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9488
  %cmp11.i.i = icmp ugt i64 %23, 2147483647, !dbg !9488
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9488
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9488
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9488
  %24 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9551
  %tobool17.i.i = icmp ne i32 %24, 0, !dbg !9551
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9551
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9551
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9551
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9488

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !9552, !srcloc !9360
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !9553, !srcloc !9363
  br label %if.end31.i.i, !dbg !9554

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %25 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9488
  %tobool32.i.i = icmp ne i32 %25, 0, !dbg !9488
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9488
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9488
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9488
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9551
  %26 = load i64, i64* %tmp.i.i, align 8, !dbg !9488
  %tobool38.i.i = icmp ne i64 %26, 0, !dbg !9555
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9556

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9557
  br label %check_copy_size.exit.i, !dbg !9557

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %27 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9558
  %28 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9559
  %29 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9560
  %tobool41.i.i = trunc i8 %29 to i1, !dbg !9560
  call void @check_object_size(i8* %27, i64 %28, i1 zeroext %tobool41.i.i) #14, !dbg !9561
  store i1 true, i1* %retval.i.i, align 1, !dbg !9562
  br label %check_copy_size.exit.i, !dbg !9562

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %30 = load i1, i1* %retval.i.i, align 1, !dbg !9563
  %lnot.i = xor i1 %30, true, !dbg !9536
  %lnot.ext.i = zext i1 %30 to i32, !dbg !9536
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9536
  br i1 %30, label %if.then.i, label %copy_to_user.exit, !dbg !9564

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %31 = load i8*, i8** %to.addr.i, align 8, !dbg !9565
  %32 = load i8*, i8** %from.addr.i, align 8, !dbg !9566
  %33 = load i64, i64* %n.addr.i, align 8, !dbg !9567
  %call2.i = call i64 @_copy_to_user(i8* %31, i8* %32, i64 %33) #14, !dbg !9568
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9569
  br label %copy_to_user.exit, !dbg !9570

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %34 = load i64, i64* %n.addr.i, align 8, !dbg !9571
  %tobool = icmp ne i64 %34, 0, !dbg !9572
  br i1 %tobool, label %if.then, label %if.end, !dbg !9573

if.then:                                          ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !9574
  br label %return, !dbg !9574

if.end:                                           ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !9575
  br label %return, !dbg !9575

return:                                           ; preds = %if.end, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !9576
  ret i32 %35, !dbg !9576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @reset_palette(%struct.vc_data* %vc) #0 !dbg !9577 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9578, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9580, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.declare(metadata i32* %k, metadata !9582, metadata !DIExpression()), !dbg !9583
  store i32 0, i32* %k, align 4, !dbg !9584
  store i32 0, i32* %j, align 4, !dbg !9586
  br label %for.cond, !dbg !9587

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %j, align 4, !dbg !9588
  %cmp = icmp slt i32 %0, 16, !dbg !9590
  br i1 %cmp, label %for.body, label %for.end, !dbg !9591

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %j, align 4, !dbg !9592
  %idxprom = sext i32 %1 to i64, !dbg !9594
  %arrayidx = getelementptr [16 x i8], [16 x i8]* @default_red, i64 0, i64 %idxprom, !dbg !9594
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9594
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9595
  %vc_palette = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 40, !dbg !9596
  %4 = load i32, i32* %k, align 4, !dbg !9597
  %inc = add i32 %4, 1, !dbg !9597
  store i32 %inc, i32* %k, align 4, !dbg !9597
  %idxprom1 = sext i32 %4 to i64, !dbg !9595
  %arrayidx2 = getelementptr [48 x i8], [48 x i8]* %vc_palette, i64 0, i64 %idxprom1, !dbg !9595
  store i8 %2, i8* %arrayidx2, align 1, !dbg !9598
  %5 = load i32, i32* %j, align 4, !dbg !9599
  %idxprom3 = sext i32 %5 to i64, !dbg !9600
  %arrayidx4 = getelementptr [16 x i8], [16 x i8]* @default_grn, i64 0, i64 %idxprom3, !dbg !9600
  %6 = load i8, i8* %arrayidx4, align 1, !dbg !9600
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9601
  %vc_palette5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 40, !dbg !9602
  %8 = load i32, i32* %k, align 4, !dbg !9603
  %inc6 = add i32 %8, 1, !dbg !9603
  store i32 %inc6, i32* %k, align 4, !dbg !9603
  %idxprom7 = sext i32 %8 to i64, !dbg !9601
  %arrayidx8 = getelementptr [48 x i8], [48 x i8]* %vc_palette5, i64 0, i64 %idxprom7, !dbg !9601
  store i8 %6, i8* %arrayidx8, align 1, !dbg !9604
  %9 = load i32, i32* %j, align 4, !dbg !9605
  %idxprom9 = sext i32 %9 to i64, !dbg !9606
  %arrayidx10 = getelementptr [16 x i8], [16 x i8]* @default_blu, i64 0, i64 %idxprom9, !dbg !9606
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !9606
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9607
  %vc_palette11 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 40, !dbg !9608
  %12 = load i32, i32* %k, align 4, !dbg !9609
  %inc12 = add i32 %12, 1, !dbg !9609
  store i32 %inc12, i32* %k, align 4, !dbg !9609
  %idxprom13 = sext i32 %12 to i64, !dbg !9607
  %arrayidx14 = getelementptr [48 x i8], [48 x i8]* %vc_palette11, i64 0, i64 %idxprom13, !dbg !9607
  store i8 %10, i8* %arrayidx14, align 1, !dbg !9610
  br label %for.inc, !dbg !9611

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %j, align 4, !dbg !9612
  %inc15 = add i32 %13, 1, !dbg !9612
  store i32 %inc15, i32* %j, align 4, !dbg !9612
  br label %for.cond, !dbg !9613, !llvm.loop !9614

for.end:                                          ; preds = %for.cond
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9616
  call void @set_palette(%struct.vc_data* %14) #13, !dbg !9617
  ret void, !dbg !9618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @con_font_op(%struct.vc_data* %vc, %struct.console_font_op* %op) #0 !dbg !9619 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %op.addr = alloca %struct.console_font_op*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9631, metadata !DIExpression()), !dbg !9632
  store %struct.console_font_op* %op, %struct.console_font_op** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.console_font_op** %op.addr, metadata !9633, metadata !DIExpression()), !dbg !9634
  %0 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9635
  %op1 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %0, i32 0, i32 0, !dbg !9636
  %1 = load i32, i32* %op1, align 8, !dbg !9636
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
    i32 3, label %sw.bb6
  ], !dbg !9637

sw.bb:                                            ; preds = %entry
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9638
  %3 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9640
  %call = call i32 @con_font_set(%struct.vc_data* %2, %struct.console_font_op* %3) #13, !dbg !9641
  store i32 %call, i32* %retval, align 4, !dbg !9642
  br label %return, !dbg !9642

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9643
  %5 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9644
  %call3 = call i32 @con_font_get(%struct.vc_data* %4, %struct.console_font_op* %5) #13, !dbg !9645
  store i32 %call3, i32* %retval, align 4, !dbg !9646
  br label %return, !dbg !9646

sw.bb4:                                           ; preds = %entry
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9647
  %7 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9648
  %call5 = call i32 @con_font_default(%struct.vc_data* %6, %struct.console_font_op* %7) #13, !dbg !9649
  store i32 %call5, i32* %retval, align 4, !dbg !9650
  br label %return, !dbg !9650

sw.bb6:                                           ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9651
  br label %return, !dbg !9651

sw.epilog:                                        ; preds = %entry
  store i32 -38, i32* %retval, align 4, !dbg !9652
  br label %return, !dbg !9652

return:                                           ; preds = %sw.epilog, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb
  %8 = load i32, i32* %retval, align 4, !dbg !9653
  ret i32 %8, !dbg !9653
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con_font_set(%struct.vc_data* %vc, %struct.console_font_op* %op) #0 !dbg !9654 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %op.addr = alloca %struct.console_font_op*, align 8
  %font = alloca %struct.console_font, align 8
  %rc = alloca i32, align 4
  %size = alloca i32, align 4
  %h = alloca i32, align 4
  %i = alloca i32, align 4
  %charmap = alloca i8*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9655, metadata !DIExpression()), !dbg !9656
  store %struct.console_font_op* %op, %struct.console_font_op** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.console_font_op** %op.addr, metadata !9657, metadata !DIExpression()), !dbg !9658
  call void @llvm.dbg.declare(metadata %struct.console_font* %font, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9661, metadata !DIExpression()), !dbg !9662
  store i32 -22, i32* %rc, align 4, !dbg !9662
  call void @llvm.dbg.declare(metadata i32* %size, metadata !9663, metadata !DIExpression()), !dbg !9664
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9665
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 16, !dbg !9667
  %1 = load i8, i8* %vc_mode, align 4, !dbg !9667
  %conv = zext i8 %1 to i32, !dbg !9665
  %cmp = icmp ne i32 %conv, 0, !dbg !9668
  br i1 %cmp, label %if.then, label %if.end, !dbg !9669

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9670
  br label %return, !dbg !9670

if.end:                                           ; preds = %entry
  %2 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9671
  %data = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %2, i32 0, i32 5, !dbg !9673
  %3 = load i8*, i8** %data, align 8, !dbg !9673
  %tobool = icmp ne i8* %3, null, !dbg !9671
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !9674

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9675
  br label %return, !dbg !9675

if.end3:                                          ; preds = %if.end
  %4 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9676
  %charcount = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %4, i32 0, i32 4, !dbg !9678
  %5 = load i32, i32* %charcount, align 8, !dbg !9678
  %cmp4 = icmp ugt i32 %5, 512, !dbg !9679
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !9680

if.then6:                                         ; preds = %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !9681
  br label %return, !dbg !9681

if.end7:                                          ; preds = %if.end3
  %6 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9682
  %width = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %6, i32 0, i32 2, !dbg !9684
  %7 = load i32, i32* %width, align 8, !dbg !9684
  %cmp8 = icmp ule i32 %7, 0, !dbg !9685
  br i1 %cmp8, label %if.then16, label %lor.lhs.false, !dbg !9686

lor.lhs.false:                                    ; preds = %if.end7
  %8 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9687
  %width10 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %8, i32 0, i32 2, !dbg !9688
  %9 = load i32, i32* %width10, align 8, !dbg !9688
  %cmp11 = icmp ugt i32 %9, 32, !dbg !9689
  br i1 %cmp11, label %if.then16, label %lor.lhs.false13, !dbg !9690

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %10 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9691
  %height = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %10, i32 0, i32 3, !dbg !9692
  %11 = load i32, i32* %height, align 4, !dbg !9692
  %cmp14 = icmp ugt i32 %11, 32, !dbg !9693
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !9694

if.then16:                                        ; preds = %lor.lhs.false13, %lor.lhs.false, %if.end7
  store i32 -22, i32* %retval, align 4, !dbg !9695
  br label %return, !dbg !9695

if.end17:                                         ; preds = %lor.lhs.false13
  %12 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9696
  %width18 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %12, i32 0, i32 2, !dbg !9697
  %13 = load i32, i32* %width18, align 8, !dbg !9697
  %add = add i32 %13, 7, !dbg !9698
  %div = udiv i32 %add, 8, !dbg !9699
  %mul = mul i32 %div, 32, !dbg !9700
  %14 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9701
  %charcount19 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %14, i32 0, i32 4, !dbg !9702
  %15 = load i32, i32* %charcount19, align 8, !dbg !9702
  %mul20 = mul i32 %mul, %15, !dbg !9703
  store i32 %mul20, i32* %size, align 4, !dbg !9704
  %16 = load i32, i32* %size, align 4, !dbg !9705
  %cmp21 = icmp sgt i32 %16, 65536, !dbg !9707
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !9708

if.then23:                                        ; preds = %if.end17
  store i32 -28, i32* %retval, align 4, !dbg !9709
  br label %return, !dbg !9709

if.end24:                                         ; preds = %if.end17
  %17 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9710
  %data25 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %17, i32 0, i32 5, !dbg !9711
  %18 = load i8*, i8** %data25, align 8, !dbg !9711
  %19 = load i32, i32* %size, align 4, !dbg !9712
  %conv26 = sext i32 %19 to i64, !dbg !9712
  %call = call i8* @memdup_user(i8* %18, i64 %conv26) #13, !dbg !9713
  %data27 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !9714
  store i8* %call, i8** %data27, align 8, !dbg !9715
  %data28 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !9716
  %20 = load i8*, i8** %data28, align 8, !dbg !9716
  %call29 = call zeroext i1 @IS_ERR(i8* %20) #13, !dbg !9718
  br i1 %call29, label %if.then30, label %if.end34, !dbg !9719

if.then30:                                        ; preds = %if.end24
  %data31 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !9720
  %21 = load i8*, i8** %data31, align 8, !dbg !9720
  %call32 = call i64 @PTR_ERR(i8* %21) #13, !dbg !9721
  %conv33 = trunc i64 %call32 to i32, !dbg !9721
  store i32 %conv33, i32* %retval, align 4, !dbg !9722
  br label %return, !dbg !9722

if.end34:                                         ; preds = %if.end24
  %22 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9723
  %height35 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %22, i32 0, i32 3, !dbg !9725
  %23 = load i32, i32* %height35, align 4, !dbg !9725
  %tobool36 = icmp ne i32 %23, 0, !dbg !9723
  br i1 %tobool36, label %if.end59, label %if.then37, !dbg !9726

if.then37:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i32* %h, metadata !9727, metadata !DIExpression()), !dbg !9729
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9730, metadata !DIExpression()), !dbg !9731
  call void @llvm.dbg.declare(metadata i8** %charmap, metadata !9732, metadata !DIExpression()), !dbg !9734
  %data38 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !9735
  %24 = load i8*, i8** %data38, align 8, !dbg !9735
  store i8* %24, i8** %charmap, align 8, !dbg !9734
  %25 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9736
  %flags = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %25, i32 0, i32 1, !dbg !9738
  %26 = load i32, i32* %flags, align 4, !dbg !9738
  %and = and i32 %26, -2147483648, !dbg !9739
  %tobool39 = icmp ne i32 %and, 0, !dbg !9739
  br i1 %tobool39, label %if.end42, label %if.then40, !dbg !9740

if.then40:                                        ; preds = %if.then37
  %data41 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !9741
  %27 = load i8*, i8** %data41, align 8, !dbg !9741
  call void @kfree(i8* %27) #13, !dbg !9743
  store i32 -22, i32* %retval, align 4, !dbg !9744
  br label %return, !dbg !9744

if.end42:                                         ; preds = %if.then37
  store i32 32, i32* %h, align 4, !dbg !9745
  br label %for.cond, !dbg !9747

for.cond:                                         ; preds = %for.inc55, %if.end42
  %28 = load i32, i32* %h, align 4, !dbg !9748
  %cmp43 = icmp sgt i32 %28, 0, !dbg !9750
  br i1 %cmp43, label %for.body, label %for.end56, !dbg !9751

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9752
  br label %for.cond45, !dbg !9754

for.cond45:                                       ; preds = %for.inc, %for.body
  %29 = load i32, i32* %i, align 4, !dbg !9755
  %30 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9757
  %charcount46 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %30, i32 0, i32 4, !dbg !9758
  %31 = load i32, i32* %charcount46, align 8, !dbg !9758
  %cmp47 = icmp ult i32 %29, %31, !dbg !9759
  br i1 %cmp47, label %for.body49, label %for.end, !dbg !9760

for.body49:                                       ; preds = %for.cond45
  %32 = load i8*, i8** %charmap, align 8, !dbg !9761
  %33 = load i32, i32* %i, align 4, !dbg !9763
  %mul50 = mul i32 32, %33, !dbg !9764
  %34 = load i32, i32* %h, align 4, !dbg !9765
  %add51 = add i32 %mul50, %34, !dbg !9766
  %sub = sub i32 %add51, 1, !dbg !9767
  %idxprom = sext i32 %sub to i64, !dbg !9761
  %arrayidx = getelementptr i8, i8* %32, i64 %idxprom, !dbg !9761
  %35 = load i8, i8* %arrayidx, align 1, !dbg !9761
  %tobool52 = icmp ne i8 %35, 0, !dbg !9761
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !9768

if.then53:                                        ; preds = %for.body49
  br label %nonzero, !dbg !9769

if.end54:                                         ; preds = %for.body49
  br label %for.inc, !dbg !9770

for.inc:                                          ; preds = %if.end54
  %36 = load i32, i32* %i, align 4, !dbg !9771
  %inc = add i32 %36, 1, !dbg !9771
  store i32 %inc, i32* %i, align 4, !dbg !9771
  br label %for.cond45, !dbg !9772, !llvm.loop !9773

for.end:                                          ; preds = %for.cond45
  br label %for.inc55, !dbg !9774

for.inc55:                                        ; preds = %for.end
  %37 = load i32, i32* %h, align 4, !dbg !9775
  %dec = add i32 %37, -1, !dbg !9775
  store i32 %dec, i32* %h, align 4, !dbg !9775
  br label %for.cond, !dbg !9776, !llvm.loop !9777

for.end56:                                        ; preds = %for.cond
  %data57 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !9779
  %38 = load i8*, i8** %data57, align 8, !dbg !9779
  call void @kfree(i8* %38) #13, !dbg !9780
  store i32 -22, i32* %retval, align 4, !dbg !9781
  br label %return, !dbg !9781

nonzero:                                          ; preds = %if.then53
  call void @llvm.dbg.label(metadata !9782), !dbg !9783
  %39 = load i32, i32* %h, align 4, !dbg !9784
  %40 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9785
  %height58 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %40, i32 0, i32 3, !dbg !9786
  store i32 %39, i32* %height58, align 4, !dbg !9787
  br label %if.end59, !dbg !9788

if.end59:                                         ; preds = %nonzero, %if.end34
  %41 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9789
  %charcount60 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %41, i32 0, i32 4, !dbg !9790
  %42 = load i32, i32* %charcount60, align 8, !dbg !9790
  %charcount61 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 2, !dbg !9791
  store i32 %42, i32* %charcount61, align 8, !dbg !9792
  %43 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9793
  %width62 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %43, i32 0, i32 2, !dbg !9794
  %44 = load i32, i32* %width62, align 8, !dbg !9794
  %width63 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 0, !dbg !9795
  store i32 %44, i32* %width63, align 8, !dbg !9796
  %45 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9797
  %height64 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %45, i32 0, i32 3, !dbg !9798
  %46 = load i32, i32* %height64, align 4, !dbg !9798
  %height65 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 1, !dbg !9799
  store i32 %46, i32* %height65, align 4, !dbg !9800
  call void @console_lock() #13, !dbg !9801
  %47 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9802
  %vc_mode66 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %47, i32 0, i32 16, !dbg !9804
  %48 = load i8, i8* %vc_mode66, align 4, !dbg !9804
  %conv67 = zext i8 %48 to i32, !dbg !9802
  %cmp68 = icmp ne i32 %conv67, 0, !dbg !9805
  br i1 %cmp68, label %if.then70, label %if.else, !dbg !9806

if.then70:                                        ; preds = %if.end59
  store i32 -22, i32* %rc, align 4, !dbg !9807
  br label %if.end79, !dbg !9808

if.else:                                          ; preds = %if.end59
  %49 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9809
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %49, i32 0, i32 13, !dbg !9811
  %50 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !9811
  %con_font_set = getelementptr inbounds %struct.consw, %struct.consw* %50, i32 0, i32 11, !dbg !9812
  %51 = load i32 (%struct.vc_data*, %struct.console_font*, i32)*, i32 (%struct.vc_data*, %struct.console_font*, i32)** %con_font_set, align 8, !dbg !9812
  %tobool71 = icmp ne i32 (%struct.vc_data*, %struct.console_font*, i32)* %51, null, !dbg !9809
  br i1 %tobool71, label %if.then72, label %if.else77, !dbg !9813

if.then72:                                        ; preds = %if.else
  %52 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9814
  %vc_sw73 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %52, i32 0, i32 13, !dbg !9815
  %53 = load %struct.consw*, %struct.consw** %vc_sw73, align 8, !dbg !9815
  %con_font_set74 = getelementptr inbounds %struct.consw, %struct.consw* %53, i32 0, i32 11, !dbg !9816
  %54 = load i32 (%struct.vc_data*, %struct.console_font*, i32)*, i32 (%struct.vc_data*, %struct.console_font*, i32)** %con_font_set74, align 8, !dbg !9816
  %55 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9817
  %56 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9818
  %flags75 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %56, i32 0, i32 1, !dbg !9819
  %57 = load i32, i32* %flags75, align 4, !dbg !9819
  %call76 = call i32 %54(%struct.vc_data* %55, %struct.console_font* %font, i32 %57) #13, !dbg !9814
  store i32 %call76, i32* %rc, align 4, !dbg !9820
  br label %if.end78, !dbg !9821

if.else77:                                        ; preds = %if.else
  store i32 -38, i32* %rc, align 4, !dbg !9822
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then72
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then70
  call void @console_unlock() #13, !dbg !9823
  %data80 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !9824
  %58 = load i8*, i8** %data80, align 8, !dbg !9824
  call void @kfree(i8* %58) #13, !dbg !9825
  %59 = load i32, i32* %rc, align 4, !dbg !9826
  store i32 %59, i32* %retval, align 4, !dbg !9827
  br label %return, !dbg !9827

return:                                           ; preds = %if.end79, %for.end56, %if.then40, %if.then30, %if.then23, %if.then16, %if.then6, %if.then2, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !9828
  ret i32 %60, !dbg !9828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con_font_get(%struct.vc_data* %vc, %struct.console_font_op* %op) #0 !dbg !9829 {
entry:
  %retval.i.i82 = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !9294, metadata !DIExpression()), !dbg !9830
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !9308, metadata !DIExpression()), !dbg !9834
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !9310, metadata !DIExpression()), !dbg !9835
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !9312, metadata !DIExpression()), !dbg !9836
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !9314, metadata !DIExpression()), !dbg !9837
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !9489, metadata !DIExpression()), !dbg !9838
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !9491, metadata !DIExpression()), !dbg !9839
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !9493, metadata !DIExpression()), !dbg !9840
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6409, metadata !DIExpression()), !dbg !9841
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6419, metadata !DIExpression()), !dbg !9846
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6421, metadata !DIExpression()), !dbg !9847
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6423, metadata !DIExpression()), !dbg !9848
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6425, metadata !DIExpression()), !dbg !9849
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6431, metadata !DIExpression()), !dbg !9851
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6437, metadata !DIExpression()), !dbg !9853
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6446, metadata !DIExpression()), !dbg !9856
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6448, metadata !DIExpression()), !dbg !9857
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6450, metadata !DIExpression()), !dbg !9858
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6452, metadata !DIExpression()), !dbg !9859
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6454, metadata !DIExpression()), !dbg !9860
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6456, metadata !DIExpression()), !dbg !9861
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6458, metadata !DIExpression()), !dbg !9862
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6460, metadata !DIExpression()), !dbg !9863
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %op.addr = alloca %struct.console_font_op*, align 8
  %font = alloca %struct.console_font, align 8
  %rc = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9864, metadata !DIExpression()), !dbg !9865
  store %struct.console_font_op* %op, %struct.console_font_op** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.console_font_op** %op.addr, metadata !9866, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.declare(metadata %struct.console_font* %font, metadata !9868, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9870, metadata !DIExpression()), !dbg !9871
  store i32 -22, i32* %rc, align 4, !dbg !9871
  call void @llvm.dbg.declare(metadata i32* %c, metadata !9872, metadata !DIExpression()), !dbg !9873
  %0 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !9874
  %data = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %0, i32 0, i32 5, !dbg !9875
  %1 = load i8*, i8** %data, align 8, !dbg !9875
  %tobool = icmp ne i8* %1, null, !dbg !9874
  br i1 %tobool, label %if.then, label %if.else, !dbg !9876

if.then:                                          ; preds = %entry
  store i64 65536, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !9877
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #5, !dbg !9878
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !9879

if.then.i:                                        ; preds = %if.then
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9880
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !9881
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9882

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9883
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !9884
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9885
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !9886
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9860
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !9887
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9888
  %10 = load i32, i32* %order.i.i, align 4, !dbg !9889
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9890
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9891
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9892
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !9893
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9893
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9893
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9893
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !9893
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9894
  br label %kmalloc.exit, !dbg !9894

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !9895
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9896
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !9896
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9897

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9898
  br label %kmalloc_index.exit.i, !dbg !9898

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9899
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !9900
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9901

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9902
  br label %kmalloc_index.exit.i, !dbg !9902

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9903
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !9904
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9905

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9906
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !9907
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9908

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9909
  br label %kmalloc_index.exit.i, !dbg !9909

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9910
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !9911
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9912

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9913
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !9914
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9915

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9916
  br label %kmalloc_index.exit.i, !dbg !9916

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9917
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !9918
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9919

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9920
  br label %kmalloc_index.exit.i, !dbg !9920

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9921
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !9922
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9923

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9924
  br label %kmalloc_index.exit.i, !dbg !9924

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9925
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !9926
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9927

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9928
  br label %kmalloc_index.exit.i, !dbg !9928

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9929
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !9930
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9931

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9932
  br label %kmalloc_index.exit.i, !dbg !9932

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9933
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !9934
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9935

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9936
  br label %kmalloc_index.exit.i, !dbg !9936

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9937
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !9938
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9939

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9940
  br label %kmalloc_index.exit.i, !dbg !9940

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9941
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !9942
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9943

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9944
  br label %kmalloc_index.exit.i, !dbg !9944

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9945
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !9946
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9947

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9948
  br label %kmalloc_index.exit.i, !dbg !9948

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9949
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !9950
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9951

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9952
  br label %kmalloc_index.exit.i, !dbg !9952

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9953
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !9954
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9955

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9956
  br label %kmalloc_index.exit.i, !dbg !9956

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9957
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !9958
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9959

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9960
  br label %kmalloc_index.exit.i, !dbg !9960

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9961
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !9962
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9963

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9964
  br label %kmalloc_index.exit.i, !dbg !9964

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9965
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !9966
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9967

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9968
  br label %kmalloc_index.exit.i, !dbg !9968

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9969
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !9970
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9971

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9972
  br label %kmalloc_index.exit.i, !dbg !9972

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9973
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !9974
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9975

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9976
  br label %kmalloc_index.exit.i, !dbg !9976

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9977
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !9978
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9979

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9980
  br label %kmalloc_index.exit.i, !dbg !9980

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9981
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !9982
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9983

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9984
  br label %kmalloc_index.exit.i, !dbg !9984

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9985
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !9986
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9987

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9988
  br label %kmalloc_index.exit.i, !dbg !9988

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9989
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !9990
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9991

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9992
  br label %kmalloc_index.exit.i, !dbg !9992

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9993
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !9994
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9995

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9996
  br label %kmalloc_index.exit.i, !dbg !9996

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9997
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !9998
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9999

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10000
  br label %kmalloc_index.exit.i, !dbg !10000

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10001
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !10002
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10003

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10004
  br label %kmalloc_index.exit.i, !dbg !10004

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10005
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !10006
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10007

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10008
  br label %kmalloc_index.exit.i, !dbg !10008

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10009
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !10010
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10011

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10012
  br label %kmalloc_index.exit.i, !dbg !10012

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !10013, !srcloc !6636
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 204) #5, !dbg !10014, !srcloc !6640
  unreachable, !dbg !10015

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !10016
  store i32 %45, i32* %index.i, align 4, !dbg !10017
  %46 = load i32, i32* %index.i, align 4, !dbg !10018
  %tobool.i = icmp ne i32 %46, 0, !dbg !10018
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10019

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10020
  br label %kmalloc.exit, !dbg !10020

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !10021
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10022
  %and.i.i = and i32 %48, 17, !dbg !10022
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10022
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10022
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10022
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10022
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10023

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10024
  br label %kmalloc_type.exit.i, !dbg !10024

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10025
  %and2.i.i = and i32 %49, 1, !dbg !10026
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10025
  %50 = zext i1 %tobool3.i.i to i64, !dbg !10025
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10025
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10027
  br label %kmalloc_type.exit.i, !dbg !10027

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !10028
  %idxprom.i = zext i32 %51 to i64, !dbg !10029
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10029
  %52 = load i32, i32* %index.i, align 4, !dbg !10030
  %idxprom6.i = zext i32 %52 to i64, !dbg !10029
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10029
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10029
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !10031
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !10032
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10033
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10034
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !10035
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10035
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10035
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10035
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !10035
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9848
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10036
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !10037
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10038
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10039
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !10040
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10041
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !10042
  store i8* %62, i8** %retval.i, align 8, !dbg !10043
  br label %kmalloc.exit, !dbg !10043

if.end9.i:                                        ; preds = %if.then
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !10044
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !10045
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !10046
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10046
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10046
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10046
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !10046
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10047
  br label %kmalloc.exit, !dbg !10047

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !10048
  %data1 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !10049
  store i8* %65, i8** %data1, align 8, !dbg !10050
  %data2 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !10051
  %66 = load i8*, i8** %data2, align 8, !dbg !10051
  %tobool3 = icmp ne i8* %66, null, !dbg !10053
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !10054

if.then4:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !10055
  br label %return, !dbg !10055

if.end:                                           ; preds = %kmalloc.exit
  br label %if.end6, !dbg !10056

if.else:                                          ; preds = %entry
  %data5 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !10057
  store i8* null, i8** %data5, align 8, !dbg !10058
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  call void @console_lock() #13, !dbg !10059
  %67 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10060
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %67, i32 0, i32 16, !dbg !10062
  %68 = load i8, i8* %vc_mode, align 4, !dbg !10062
  %conv = zext i8 %68 to i32, !dbg !10060
  %cmp = icmp ne i32 %conv, 0, !dbg !10063
  br i1 %cmp, label %if.then8, label %if.else9, !dbg !10064

if.then8:                                         ; preds = %if.end6
  store i32 -22, i32* %rc, align 4, !dbg !10065
  br label %if.end17, !dbg !10066

if.else9:                                         ; preds = %if.end6
  %69 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10067
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %69, i32 0, i32 13, !dbg !10069
  %70 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !10069
  %con_font_get = getelementptr inbounds %struct.consw, %struct.consw* %70, i32 0, i32 12, !dbg !10070
  %71 = load i32 (%struct.vc_data*, %struct.console_font*)*, i32 (%struct.vc_data*, %struct.console_font*)** %con_font_get, align 8, !dbg !10070
  %tobool10 = icmp ne i32 (%struct.vc_data*, %struct.console_font*)* %71, null, !dbg !10067
  br i1 %tobool10, label %if.then11, label %if.else15, !dbg !10071

if.then11:                                        ; preds = %if.else9
  %72 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10072
  %vc_sw12 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %72, i32 0, i32 13, !dbg !10073
  %73 = load %struct.consw*, %struct.consw** %vc_sw12, align 8, !dbg !10073
  %con_font_get13 = getelementptr inbounds %struct.consw, %struct.consw* %73, i32 0, i32 12, !dbg !10074
  %74 = load i32 (%struct.vc_data*, %struct.console_font*)*, i32 (%struct.vc_data*, %struct.console_font*)** %con_font_get13, align 8, !dbg !10074
  %75 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10075
  %call14 = call i32 %74(%struct.vc_data* %75, %struct.console_font* %font) #13, !dbg !10072
  store i32 %call14, i32* %rc, align 4, !dbg !10076
  br label %if.end16, !dbg !10077

if.else15:                                        ; preds = %if.else9
  store i32 -38, i32* %rc, align 4, !dbg !10078
  br label %if.end16

if.end16:                                         ; preds = %if.else15, %if.then11
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then8
  call void @console_unlock() #13, !dbg !10079
  %76 = load i32, i32* %rc, align 4, !dbg !10080
  %tobool18 = icmp ne i32 %76, 0, !dbg !10080
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !10082

if.then19:                                        ; preds = %if.end17
  br label %out, !dbg !10083

if.end20:                                         ; preds = %if.end17
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 0, !dbg !10084
  %77 = load i32, i32* %width, align 8, !dbg !10084
  %add = add i32 %77, 7, !dbg !10085
  %div = udiv i32 %add, 8, !dbg !10086
  %mul = mul i32 %div, 32, !dbg !10087
  %charcount = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 2, !dbg !10088
  %78 = load i32, i32* %charcount, align 8, !dbg !10088
  %mul21 = mul i32 %mul, %78, !dbg !10089
  store i32 %mul21, i32* %c, align 4, !dbg !10090
  %79 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10091
  %data22 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %79, i32 0, i32 5, !dbg !10093
  %80 = load i8*, i8** %data22, align 8, !dbg !10093
  %tobool23 = icmp ne i8* %80, null, !dbg !10091
  br i1 %tobool23, label %land.lhs.true, label %if.end29, !dbg !10094

land.lhs.true:                                    ; preds = %if.end20
  %charcount24 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 2, !dbg !10095
  %81 = load i32, i32* %charcount24, align 8, !dbg !10095
  %82 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10096
  %charcount25 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %82, i32 0, i32 4, !dbg !10097
  %83 = load i32, i32* %charcount25, align 8, !dbg !10097
  %cmp26 = icmp ugt i32 %81, %83, !dbg !10098
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !10099

if.then28:                                        ; preds = %land.lhs.true
  store i32 -28, i32* %rc, align 4, !dbg !10100
  br label %if.end29, !dbg !10101

if.end29:                                         ; preds = %if.then28, %land.lhs.true, %if.end20
  %84 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10102
  %flags = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %84, i32 0, i32 1, !dbg !10104
  %85 = load i32, i32* %flags, align 4, !dbg !10104
  %and = and i32 %85, -2147483648, !dbg !10105
  %tobool30 = icmp ne i32 %and, 0, !dbg !10105
  br i1 %tobool30, label %if.else41, label %if.then31, !dbg !10106

if.then31:                                        ; preds = %if.end29
  %width32 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 0, !dbg !10107
  %86 = load i32, i32* %width32, align 8, !dbg !10107
  %87 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10110
  %width33 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %87, i32 0, i32 2, !dbg !10111
  %88 = load i32, i32* %width33, align 8, !dbg !10111
  %cmp34 = icmp ugt i32 %86, %88, !dbg !10112
  br i1 %cmp34, label %if.then39, label %lor.lhs.false, !dbg !10113

lor.lhs.false:                                    ; preds = %if.then31
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 1, !dbg !10114
  %89 = load i32, i32* %height, align 4, !dbg !10114
  %90 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10115
  %height36 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %90, i32 0, i32 3, !dbg !10116
  %91 = load i32, i32* %height36, align 4, !dbg !10116
  %cmp37 = icmp ugt i32 %89, %91, !dbg !10117
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !10118

if.then39:                                        ; preds = %lor.lhs.false, %if.then31
  store i32 -28, i32* %rc, align 4, !dbg !10119
  br label %if.end40, !dbg !10120

if.end40:                                         ; preds = %if.then39, %lor.lhs.false
  br label %if.end61, !dbg !10121

if.else41:                                        ; preds = %if.end29
  %width42 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 0, !dbg !10122
  %92 = load i32, i32* %width42, align 8, !dbg !10122
  %cmp43 = icmp ne i32 %92, 8, !dbg !10125
  br i1 %cmp43, label %if.then45, label %if.else46, !dbg !10126

if.then45:                                        ; preds = %if.else41
  store i32 -5, i32* %rc, align 4, !dbg !10127
  br label %if.end60, !dbg !10128

if.else46:                                        ; preds = %if.else41
  %93 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10129
  %height47 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %93, i32 0, i32 3, !dbg !10131
  %94 = load i32, i32* %height47, align 4, !dbg !10131
  %tobool48 = icmp ne i32 %94, 0, !dbg !10129
  br i1 %tobool48, label %land.lhs.true49, label %lor.lhs.false54, !dbg !10132

land.lhs.true49:                                  ; preds = %if.else46
  %height50 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 1, !dbg !10133
  %95 = load i32, i32* %height50, align 4, !dbg !10133
  %96 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10134
  %height51 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %96, i32 0, i32 3, !dbg !10135
  %97 = load i32, i32* %height51, align 4, !dbg !10135
  %cmp52 = icmp ugt i32 %95, %97, !dbg !10136
  br i1 %cmp52, label %if.then58, label %lor.lhs.false54, !dbg !10137

lor.lhs.false54:                                  ; preds = %land.lhs.true49, %if.else46
  %height55 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 1, !dbg !10138
  %98 = load i32, i32* %height55, align 4, !dbg !10138
  %cmp56 = icmp ugt i32 %98, 32, !dbg !10139
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !10140

if.then58:                                        ; preds = %lor.lhs.false54, %land.lhs.true49
  store i32 -28, i32* %rc, align 4, !dbg !10141
  br label %if.end59, !dbg !10142

if.end59:                                         ; preds = %if.then58, %lor.lhs.false54
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then45
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.end40
  %99 = load i32, i32* %rc, align 4, !dbg !10143
  %tobool62 = icmp ne i32 %99, 0, !dbg !10143
  br i1 %tobool62, label %if.then63, label %if.end64, !dbg !10145

if.then63:                                        ; preds = %if.end61
  br label %out, !dbg !10146

if.end64:                                         ; preds = %if.end61
  %height65 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 1, !dbg !10147
  %100 = load i32, i32* %height65, align 4, !dbg !10147
  %101 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10148
  %height66 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %101, i32 0, i32 3, !dbg !10149
  store i32 %100, i32* %height66, align 4, !dbg !10150
  %width67 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 0, !dbg !10151
  %102 = load i32, i32* %width67, align 8, !dbg !10151
  %103 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10152
  %width68 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %103, i32 0, i32 2, !dbg !10153
  store i32 %102, i32* %width68, align 8, !dbg !10154
  %charcount69 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 2, !dbg !10155
  %104 = load i32, i32* %charcount69, align 8, !dbg !10155
  %105 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10156
  %charcount70 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %105, i32 0, i32 4, !dbg !10157
  store i32 %104, i32* %charcount70, align 8, !dbg !10158
  %106 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10159
  %data71 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %106, i32 0, i32 5, !dbg !10160
  %107 = load i8*, i8** %data71, align 8, !dbg !10160
  %tobool72 = icmp ne i8* %107, null, !dbg !10159
  br i1 %tobool72, label %land.lhs.true73, label %if.end80, !dbg !10161

land.lhs.true73:                                  ; preds = %if.end64
  %108 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10162
  %data74 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %108, i32 0, i32 5, !dbg !10163
  %109 = load i8*, i8** %data74, align 8, !dbg !10163
  %data75 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !10164
  %110 = load i8*, i8** %data75, align 8, !dbg !10164
  %111 = load i32, i32* %c, align 4, !dbg !10165
  %conv76 = sext i32 %111 to i64, !dbg !10165
  store i8* %109, i8** %to.addr.i, align 8
  store i8* %110, i8** %from.addr.i, align 8
  store i64 %conv76, i64* %n.addr.i, align 8
  %112 = load i8*, i8** %from.addr.i, align 8, !dbg !10166
  %113 = load i64, i64* %n.addr.i, align 8, !dbg !10166
  store i8* %112, i8** %addr.addr.i.i, align 8
  store i64 %113, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9836
  %114 = load i32, i32* %sz.i.i, align 4, !dbg !10167
  %cmp.i.i83 = icmp sge i32 %114, 0, !dbg !10167
  br i1 %cmp.i.i83, label %land.rhs.i.i, label %land.end.i.i, !dbg !10167

land.rhs.i.i:                                     ; preds = %land.lhs.true73
  %115 = load i32, i32* %sz.i.i, align 4, !dbg !10167
  %conv.i.i84 = sext i32 %115 to i64, !dbg !10167
  %116 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10167
  %cmp1.i.i = icmp ult i64 %conv.i.i84, %116, !dbg !10167
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %land.lhs.true73
  %117 = phi i1 [ false, %land.lhs.true73 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10168
  %lnot.i.i85 = xor i1 %117, true, !dbg !10167
  %lnot.ext.i.i86 = zext i1 %117 to i32, !dbg !10167
  %conv4.i.i = sext i32 %lnot.ext.i.i86 to i64, !dbg !10167
  br i1 %117, label %if.then.i.i87, label %if.end10.i.i, !dbg !10169

if.then.i.i87:                                    ; preds = %land.end.i.i
  %118 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10170
  %119 = call i1 @llvm.is.constant.i64(i64 %118) #5, !dbg !10171
  br i1 %119, label %if.else.i.i, label %if.then5.i.i88, !dbg !10172

if.then5.i.i88:                                   ; preds = %if.then.i.i87
  %120 = load i32, i32* %sz.i.i, align 4, !dbg !10173
  %121 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10174
  call void @copy_overflow(i32 %120, i64 %121) #14, !dbg !10175
  br label %if.end9.i.i, !dbg !10175

if.else.i.i:                                      ; preds = %if.then.i.i87
  %122 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10176
  %tobool6.i.i = trunc i8 %122 to i1, !dbg !10176
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10177

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !10178
  br label %if.end.i.i89, !dbg !10178

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !10179
  br label %if.end.i.i89

if.end.i.i89:                                     ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i89, %if.then5.i.i88
  store i1 false, i1* %retval.i.i82, align 1, !dbg !10180
  br label %check_copy_size.exit.i, !dbg !10180

if.end10.i.i:                                     ; preds = %land.end.i.i
  %123 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9837
  %cmp11.i.i = icmp ugt i64 %123, 2147483647, !dbg !9837
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9837
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9837
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9837
  %124 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10181
  %tobool17.i.i = icmp ne i32 %124, 0, !dbg !10181
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10181
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10181
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10181
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9837

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !10182, !srcloc !9360
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !10183, !srcloc !9363
  br label %if.end31.i.i, !dbg !10184

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %125 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9837
  %tobool32.i.i = icmp ne i32 %125, 0, !dbg !9837
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9837
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9837
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9837
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10181
  %126 = load i64, i64* %tmp.i.i, align 8, !dbg !9837
  %tobool38.i.i = icmp ne i64 %126, 0, !dbg !10185
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10186

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i82, align 1, !dbg !10187
  br label %check_copy_size.exit.i, !dbg !10187

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %127 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10188
  %128 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10189
  %129 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10190
  %tobool41.i.i = trunc i8 %129 to i1, !dbg !10190
  call void @check_object_size(i8* %127, i64 %128, i1 zeroext %tobool41.i.i) #14, !dbg !10191
  store i1 true, i1* %retval.i.i82, align 1, !dbg !10192
  br label %check_copy_size.exit.i, !dbg !10192

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %130 = load i1, i1* %retval.i.i82, align 1, !dbg !10193
  %lnot.i = xor i1 %130, true, !dbg !10166
  %lnot.ext.i = zext i1 %130 to i32, !dbg !10166
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10166
  br i1 %130, label %if.then.i90, label %copy_to_user.exit, !dbg !10194

if.then.i90:                                      ; preds = %check_copy_size.exit.i
  %131 = load i8*, i8** %to.addr.i, align 8, !dbg !10195
  %132 = load i8*, i8** %from.addr.i, align 8, !dbg !10196
  %133 = load i64, i64* %n.addr.i, align 8, !dbg !10197
  %call2.i = call i64 @_copy_to_user(i8* %131, i8* %132, i64 %133) #14, !dbg !10198
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10199
  br label %copy_to_user.exit, !dbg !10200

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i90
  %134 = load i64, i64* %n.addr.i, align 8, !dbg !10201
  %tobool78 = icmp ne i64 %134, 0, !dbg !10202
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !10203

if.then79:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %rc, align 4, !dbg !10204
  br label %if.end80, !dbg !10205

if.end80:                                         ; preds = %if.then79, %copy_to_user.exit, %if.end64
  br label %out, !dbg !10206

out:                                              ; preds = %if.end80, %if.then63, %if.then19
  call void @llvm.dbg.label(metadata !10207), !dbg !10208
  %data81 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !10209
  %135 = load i8*, i8** %data81, align 8, !dbg !10209
  call void @kfree(i8* %135) #13, !dbg !10210
  %136 = load i32, i32* %rc, align 4, !dbg !10211
  store i32 %136, i32* %retval, align 4, !dbg !10212
  br label %return, !dbg !10212

return:                                           ; preds = %out, %if.then4
  %137 = load i32, i32* %retval, align 4, !dbg !10213
  ret i32 %137, !dbg !10213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con_font_default(%struct.vc_data* %vc, %struct.console_font_op* %op) #0 !dbg !10214 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %op.addr = alloca %struct.console_font_op*, align 8
  %font = alloca %struct.console_font, align 8
  %name = alloca [32 x i8], align 16
  %s = alloca i8*, align 8
  %rc = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10215, metadata !DIExpression()), !dbg !10216
  store %struct.console_font_op* %op, %struct.console_font_op** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.console_font_op** %op.addr, metadata !10217, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.declare(metadata %struct.console_font* %font, metadata !10219, metadata !DIExpression()), !dbg !10220
  %width = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 0, !dbg !10221
  %0 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10222
  %width1 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %0, i32 0, i32 2, !dbg !10223
  %1 = load i32, i32* %width1, align 8, !dbg !10223
  store i32 %1, i32* %width, align 8, !dbg !10221
  %height = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 1, !dbg !10221
  %2 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10224
  %height2 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %2, i32 0, i32 3, !dbg !10225
  %3 = load i32, i32* %height2, align 4, !dbg !10225
  store i32 %3, i32* %height, align 4, !dbg !10221
  %charcount = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 2, !dbg !10221
  store i32 0, i32* %charcount, align 8, !dbg !10221
  %data = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 3, !dbg !10221
  store i8* null, i8** %data, align 8, !dbg !10221
  call void @llvm.dbg.declare(metadata [32 x i8]* %name, metadata !10226, metadata !DIExpression()), !dbg !10227
  call void @llvm.dbg.declare(metadata i8** %s, metadata !10228, metadata !DIExpression()), !dbg !10229
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !10230
  store i8* %arraydecay, i8** %s, align 8, !dbg !10229
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10231, metadata !DIExpression()), !dbg !10232
  %4 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10233
  %data3 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %4, i32 0, i32 5, !dbg !10235
  %5 = load i8*, i8** %data3, align 8, !dbg !10235
  %tobool = icmp ne i8* %5, null, !dbg !10233
  br i1 %tobool, label %if.else, label %if.then, !dbg !10236

if.then:                                          ; preds = %entry
  store i8* null, i8** %s, align 8, !dbg !10237
  br label %if.end8, !dbg !10238

if.else:                                          ; preds = %entry
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !10239
  %6 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10241
  %data5 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %6, i32 0, i32 5, !dbg !10242
  %7 = load i8*, i8** %data5, align 8, !dbg !10242
  %call = call i64 @strncpy_from_user(i8* %arraydecay4, i8* %7, i64 31) #13, !dbg !10243
  %cmp = icmp slt i64 %call, 0, !dbg !10244
  br i1 %cmp, label %if.then6, label %if.else7, !dbg !10245

if.then6:                                         ; preds = %if.else
  store i32 -14, i32* %retval, align 4, !dbg !10246
  br label %return, !dbg !10246

if.else7:                                         ; preds = %if.else
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %name, i64 0, i64 31, !dbg !10247
  store i8 0, i8* %arrayidx, align 1, !dbg !10248
  br label %if.end

if.end:                                           ; preds = %if.else7
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  call void @console_lock() #13, !dbg !10249
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10250
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 16, !dbg !10252
  %9 = load i8, i8* %vc_mode, align 4, !dbg !10252
  %conv = zext i8 %9 to i32, !dbg !10250
  %cmp9 = icmp ne i32 %conv, 0, !dbg !10253
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10254

if.then11:                                        ; preds = %if.end8
  call void @console_unlock() #13, !dbg !10255
  store i32 -22, i32* %retval, align 4, !dbg !10257
  br label %return, !dbg !10257

if.end12:                                         ; preds = %if.end8
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10258
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 13, !dbg !10260
  %11 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !10260
  %con_font_default = getelementptr inbounds %struct.consw, %struct.consw* %11, i32 0, i32 13, !dbg !10261
  %12 = load i32 (%struct.vc_data*, %struct.console_font*, i8*)*, i32 (%struct.vc_data*, %struct.console_font*, i8*)** %con_font_default, align 8, !dbg !10261
  %tobool13 = icmp ne i32 (%struct.vc_data*, %struct.console_font*, i8*)* %12, null, !dbg !10258
  br i1 %tobool13, label %if.then14, label %if.else18, !dbg !10262

if.then14:                                        ; preds = %if.end12
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10263
  %vc_sw15 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 13, !dbg !10264
  %14 = load %struct.consw*, %struct.consw** %vc_sw15, align 8, !dbg !10264
  %con_font_default16 = getelementptr inbounds %struct.consw, %struct.consw* %14, i32 0, i32 13, !dbg !10265
  %15 = load i32 (%struct.vc_data*, %struct.console_font*, i8*)*, i32 (%struct.vc_data*, %struct.console_font*, i8*)** %con_font_default16, align 8, !dbg !10265
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10266
  %17 = load i8*, i8** %s, align 8, !dbg !10267
  %call17 = call i32 %15(%struct.vc_data* %16, %struct.console_font* %font, i8* %17) #13, !dbg !10263
  store i32 %call17, i32* %rc, align 4, !dbg !10268
  br label %if.end19, !dbg !10269

if.else18:                                        ; preds = %if.end12
  store i32 -38, i32* %rc, align 4, !dbg !10270
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then14
  call void @console_unlock() #13, !dbg !10271
  %18 = load i32, i32* %rc, align 4, !dbg !10272
  %tobool20 = icmp ne i32 %18, 0, !dbg !10272
  br i1 %tobool20, label %if.end26, label %if.then21, !dbg !10274

if.then21:                                        ; preds = %if.end19
  %width22 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 0, !dbg !10275
  %19 = load i32, i32* %width22, align 8, !dbg !10275
  %20 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10277
  %width23 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %20, i32 0, i32 2, !dbg !10278
  store i32 %19, i32* %width23, align 8, !dbg !10279
  %height24 = getelementptr inbounds %struct.console_font, %struct.console_font* %font, i32 0, i32 1, !dbg !10280
  %21 = load i32, i32* %height24, align 4, !dbg !10280
  %22 = load %struct.console_font_op*, %struct.console_font_op** %op.addr, align 8, !dbg !10281
  %height25 = getelementptr inbounds %struct.console_font_op, %struct.console_font_op* %22, i32 0, i32 3, !dbg !10282
  store i32 %21, i32* %height25, align 4, !dbg !10283
  br label %if.end26, !dbg !10284

if.end26:                                         ; preds = %if.then21, %if.end19
  %23 = load i32, i32* %rc, align 4, !dbg !10285
  store i32 %23, i32* %retval, align 4, !dbg !10286
  br label %return, !dbg !10286

return:                                           ; preds = %if.end26, %if.then11, %if.then6
  %24 = load i32, i32* %retval, align 4, !dbg !10287
  ret i32 %24, !dbg !10287
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i16 @screen_glyph(%struct.vc_data* %vc, i32 %offset) #0 !dbg !10288 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %offset.addr = alloca i32, align 4
  %w = alloca i16, align 2
  %c = alloca i16, align 2
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10291, metadata !DIExpression()), !dbg !10292
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10293, metadata !DIExpression()), !dbg !10294
  call void @llvm.dbg.declare(metadata i16* %w, metadata !10295, metadata !DIExpression()), !dbg !10296
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10297
  %1 = load i32, i32* %offset.addr, align 4, !dbg !10297
  %call = call i16* @screenpos(%struct.vc_data* %0, i32 %1, i1 zeroext true) #13, !dbg !10297
  %2 = load i16, i16* %call, align 2, !dbg !10297
  store i16 %2, i16* %w, align 2, !dbg !10296
  call void @llvm.dbg.declare(metadata i16* %c, metadata !10298, metadata !DIExpression()), !dbg !10299
  %3 = load i16, i16* %w, align 2, !dbg !10300
  %conv = zext i16 %3 to i32, !dbg !10300
  %and = and i32 %conv, 255, !dbg !10301
  %conv1 = trunc i32 %and to i16, !dbg !10300
  store i16 %conv1, i16* %c, align 2, !dbg !10299
  %4 = load i16, i16* %w, align 2, !dbg !10302
  %conv2 = zext i16 %4 to i32, !dbg !10302
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10304
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 26, !dbg !10305
  %6 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !10305
  %conv3 = zext i16 %6 to i32, !dbg !10304
  %and4 = and i32 %conv2, %conv3, !dbg !10306
  %tobool = icmp ne i32 %and4, 0, !dbg !10306
  br i1 %tobool, label %if.then, label %if.end, !dbg !10307

if.then:                                          ; preds = %entry
  %7 = load i16, i16* %c, align 2, !dbg !10308
  %conv5 = zext i16 %7 to i32, !dbg !10308
  %or = or i32 %conv5, 256, !dbg !10308
  %conv6 = trunc i32 %or to i16, !dbg !10308
  store i16 %conv6, i16* %c, align 2, !dbg !10308
  br label %if.end, !dbg !10309

if.end:                                           ; preds = %if.then, %entry
  %8 = load i16, i16* %c, align 2, !dbg !10310
  ret i16 %8, !dbg !10311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @screen_glyph_unicode(%struct.vc_data* %vc, i32 %n) #0 !dbg !10312 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %n.addr = alloca i32, align 4
  %uniscr = alloca %struct.uni_screen*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10315, metadata !DIExpression()), !dbg !10316
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !10317, metadata !DIExpression()), !dbg !10318
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !10319, metadata !DIExpression()), !dbg !10320
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10321
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 49, !dbg !10321
  %1 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !10321
  store %struct.uni_screen* %1, %struct.uni_screen** %uniscr, align 8, !dbg !10320
  %2 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !10322
  %tobool = icmp ne %struct.uni_screen* %2, null, !dbg !10322
  br i1 %tobool, label %if.then, label %if.end, !dbg !10324

if.then:                                          ; preds = %entry
  %3 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !10325
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %3, i32 0, i32 0, !dbg !10326
  %4 = load i32, i32* %n.addr, align 4, !dbg !10327
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10328
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 4, !dbg !10329
  %6 = load i32, i32* %vc_cols, align 4, !dbg !10329
  %div = udiv i32 %4, %6, !dbg !10330
  %idxprom = zext i32 %div to i64, !dbg !10325
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines, i64 0, i64 %idxprom, !dbg !10325
  %7 = load i32*, i32** %arrayidx, align 8, !dbg !10325
  %8 = load i32, i32* %n.addr, align 4, !dbg !10331
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10332
  %vc_cols1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 4, !dbg !10333
  %10 = load i32, i32* %vc_cols1, align 4, !dbg !10333
  %rem = urem i32 %8, %10, !dbg !10334
  %idxprom2 = zext i32 %rem to i64, !dbg !10325
  %arrayidx3 = getelementptr i32, i32* %7, i64 %idxprom2, !dbg !10325
  %11 = load i32, i32* %arrayidx3, align 4, !dbg !10325
  store i32 %11, i32* %retval, align 4, !dbg !10335
  br label %return, !dbg !10335

if.end:                                           ; preds = %entry
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10336
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10337
  %14 = load i32, i32* %n.addr, align 4, !dbg !10338
  %mul = mul i32 %14, 2, !dbg !10339
  %call = call zeroext i16 @screen_glyph(%struct.vc_data* %13, i32 %mul) #13, !dbg !10340
  %conv = zext i16 %call to i32, !dbg !10340
  %call4 = call zeroext i16 @inverse_translate(%struct.vc_data* %12, i32 %conv, i32 1) #13, !dbg !10341
  %conv5 = zext i16 %call4 to i32, !dbg !10341
  store i32 %conv5, i32* %retval, align 4, !dbg !10342
  br label %return, !dbg !10342

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !10343
  ret i32 %15, !dbg !10343
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i16* @screen_pos(%struct.vc_data* %vc, i32 %w_offset, i1 zeroext %viewed) #0 !dbg !10344 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %w_offset.addr = alloca i32, align 4
  %viewed.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10345, metadata !DIExpression()), !dbg !10346
  store i32 %w_offset, i32* %w_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w_offset.addr, metadata !10347, metadata !DIExpression()), !dbg !10348
  %frombool = zext i1 %viewed to i8
  store i8 %frombool, i8* %viewed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %viewed.addr, metadata !10349, metadata !DIExpression()), !dbg !10350
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10351
  %1 = load i32, i32* %w_offset.addr, align 4, !dbg !10352
  %mul = mul i32 2, %1, !dbg !10353
  %2 = load i8, i8* %viewed.addr, align 1, !dbg !10354
  %tobool = trunc i8 %2 to i1, !dbg !10354
  %call = call i16* @screenpos(%struct.vc_data* %0, i32 %mul, i1 zeroext %tobool) #13, !dbg !10355
  ret i16* %call, !dbg !10356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @getconsxy(%struct.vc_data* %vc, i8* dereferenceable(2) %xy) #0 !dbg !10357 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %xy.addr = alloca i8*, align 8
  %__UNIQUE_ID___x292 = alloca i32, align 4
  %__UNIQUE_ID___y293 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x294 = alloca i32, align 4
  %__UNIQUE_ID___y295 = alloca i32, align 4
  %tmp2 = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10360, metadata !DIExpression()), !dbg !10361
  store i8* %xy, i8** %xy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %xy.addr, metadata !10362, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x292, metadata !10364, metadata !DIExpression()), !dbg !10366
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10366
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 1, !dbg !10366
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !10366
  %1 = load i32, i32* %x, align 8, !dbg !10366
  store i32 %1, i32* %__UNIQUE_ID___x292, align 4, !dbg !10366
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y293, metadata !10367, metadata !DIExpression()), !dbg !10366
  store i32 255, i32* %__UNIQUE_ID___y293, align 4, !dbg !10366
  %2 = load i32, i32* %__UNIQUE_ID___x292, align 4, !dbg !10366
  %3 = load i32, i32* %__UNIQUE_ID___y293, align 4, !dbg !10366
  %cmp = icmp ult i32 %2, %3, !dbg !10366
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10366

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x292, align 4, !dbg !10366
  br label %cond.end, !dbg !10366

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y293, align 4, !dbg !10366
  br label %cond.end, !dbg !10366

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !10366
  store i32 %cond, i32* %tmp, align 4, !dbg !10366
  %6 = load i32, i32* %tmp, align 4, !dbg !10366
  %conv = trunc i32 %6 to i8, !dbg !10368
  %7 = load i8*, i8** %xy.addr, align 8, !dbg !10369
  %arrayidx = getelementptr i8, i8* %7, i64 0, !dbg !10369
  store i8 %conv, i8* %arrayidx, align 1, !dbg !10370
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x294, metadata !10371, metadata !DIExpression()), !dbg !10373
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10373
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 1, !dbg !10373
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 1, !dbg !10373
  %9 = load i32, i32* %y, align 4, !dbg !10373
  store i32 %9, i32* %__UNIQUE_ID___x294, align 4, !dbg !10373
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y295, metadata !10374, metadata !DIExpression()), !dbg !10373
  store i32 255, i32* %__UNIQUE_ID___y295, align 4, !dbg !10373
  %10 = load i32, i32* %__UNIQUE_ID___x294, align 4, !dbg !10373
  %11 = load i32, i32* %__UNIQUE_ID___y295, align 4, !dbg !10373
  %cmp3 = icmp ult i32 %10, %11, !dbg !10373
  br i1 %cmp3, label %cond.true5, label %cond.false6, !dbg !10373

cond.true5:                                       ; preds = %cond.end
  %12 = load i32, i32* %__UNIQUE_ID___x294, align 4, !dbg !10373
  br label %cond.end7, !dbg !10373

cond.false6:                                      ; preds = %cond.end
  %13 = load i32, i32* %__UNIQUE_ID___y295, align 4, !dbg !10373
  br label %cond.end7, !dbg !10373

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ %12, %cond.true5 ], [ %13, %cond.false6 ], !dbg !10373
  store i32 %cond8, i32* %tmp2, align 4, !dbg !10373
  %14 = load i32, i32* %tmp2, align 4, !dbg !10373
  %conv9 = trunc i32 %14 to i8, !dbg !10375
  %15 = load i8*, i8** %xy.addr, align 8, !dbg !10376
  %arrayidx10 = getelementptr i8, i8* %15, i64 1, !dbg !10376
  store i8 %conv9, i8* %arrayidx10, align 1, !dbg !10377
  ret void, !dbg !10378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @putconsxy(%struct.vc_data* %vc, i8* dereferenceable(2) %xy) #0 !dbg !10379 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %xy.addr = alloca i8*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10383, metadata !DIExpression()), !dbg !10384
  store i8* %xy, i8** %xy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %xy.addr, metadata !10385, metadata !DIExpression()), !dbg !10386
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10387
  call void @hide_cursor(%struct.vc_data* %0) #13, !dbg !10388
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10389
  %2 = load i8*, i8** %xy.addr, align 8, !dbg !10390
  %arrayidx = getelementptr i8, i8* %2, i64 0, !dbg !10390
  %3 = load i8, i8* %arrayidx, align 1, !dbg !10390
  %conv = zext i8 %3 to i32, !dbg !10390
  %4 = load i8*, i8** %xy.addr, align 8, !dbg !10391
  %arrayidx1 = getelementptr i8, i8* %4, i64 1, !dbg !10391
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !10391
  %conv2 = zext i8 %5 to i32, !dbg !10391
  call void @gotoxy(%struct.vc_data* %1, i32 %conv, i32 %conv2) #13, !dbg !10392
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10393
  call void @set_cursor(%struct.vc_data* %6) #13, !dbg !10394
  ret void, !dbg !10395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gotoxy(%struct.vc_data* %vc, i32 %new_x, i32 %new_y) #0 !dbg !10396 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %new_x.addr = alloca i32, align 4
  %new_y.addr = alloca i32, align 4
  %min_y = alloca i32, align 4
  %max_y = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10397, metadata !DIExpression()), !dbg !10398
  store i32 %new_x, i32* %new_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_x.addr, metadata !10399, metadata !DIExpression()), !dbg !10400
  store i32 %new_y, i32* %new_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_y.addr, metadata !10401, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.declare(metadata i32* %min_y, metadata !10403, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.declare(metadata i32* %max_y, metadata !10405, metadata !DIExpression()), !dbg !10406
  %0 = load i32, i32* %new_x.addr, align 4, !dbg !10407
  %cmp = icmp slt i32 %0, 0, !dbg !10409
  br i1 %cmp, label %if.then, label %if.else, !dbg !10410

if.then:                                          ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10411
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 1, !dbg !10412
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !10413
  store i32 0, i32* %x, align 8, !dbg !10414
  br label %if.end9, !dbg !10411

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %new_x.addr, align 4, !dbg !10415
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10418
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 4, !dbg !10419
  %4 = load i32, i32* %vc_cols, align 4, !dbg !10419
  %cmp1 = icmp uge i32 %2, %4, !dbg !10420
  br i1 %cmp1, label %if.then2, label %if.else6, !dbg !10421

if.then2:                                         ; preds = %if.else
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10422
  %vc_cols3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 4, !dbg !10423
  %6 = load i32, i32* %vc_cols3, align 4, !dbg !10423
  %sub = sub i32 %6, 1, !dbg !10424
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10425
  %state4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !10426
  %x5 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state4, i32 0, i32 0, !dbg !10427
  store i32 %sub, i32* %x5, align 8, !dbg !10428
  br label %if.end, !dbg !10425

if.else6:                                         ; preds = %if.else
  %8 = load i32, i32* %new_x.addr, align 4, !dbg !10429
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10430
  %state7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 1, !dbg !10431
  %x8 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state7, i32 0, i32 0, !dbg !10432
  store i32 %8, i32* %x8, align 8, !dbg !10433
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then2
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10434
  %vc_decom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 36, !dbg !10436
  %bf.load = load i16, i16* %vc_decom, align 8, !dbg !10436
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !10436
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10436
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10436
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10434
  br i1 %tobool, label %if.then10, label %if.else11, !dbg !10437

if.then10:                                        ; preds = %if.end9
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10438
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 11, !dbg !10440
  %12 = load i32, i32* %vc_top, align 8, !dbg !10440
  store i32 %12, i32* %min_y, align 4, !dbg !10441
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10442
  %vc_bottom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 12, !dbg !10443
  %14 = load i32, i32* %vc_bottom, align 4, !dbg !10443
  store i32 %14, i32* %max_y, align 4, !dbg !10444
  br label %if.end12, !dbg !10445

if.else11:                                        ; preds = %if.end9
  store i32 0, i32* %min_y, align 4, !dbg !10446
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10448
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 5, !dbg !10449
  %16 = load i32, i32* %vc_rows, align 8, !dbg !10449
  store i32 %16, i32* %max_y, align 4, !dbg !10450
  br label %if.end12

if.end12:                                         ; preds = %if.else11, %if.then10
  %17 = load i32, i32* %new_y.addr, align 4, !dbg !10451
  %18 = load i32, i32* %min_y, align 4, !dbg !10453
  %cmp13 = icmp slt i32 %17, %18, !dbg !10454
  br i1 %cmp13, label %if.then14, label %if.else16, !dbg !10455

if.then14:                                        ; preds = %if.end12
  %19 = load i32, i32* %min_y, align 4, !dbg !10456
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10457
  %state15 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 1, !dbg !10458
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state15, i32 0, i32 1, !dbg !10459
  store i32 %19, i32* %y, align 4, !dbg !10460
  br label %if.end26, !dbg !10457

if.else16:                                        ; preds = %if.end12
  %21 = load i32, i32* %new_y.addr, align 4, !dbg !10461
  %22 = load i32, i32* %max_y, align 4, !dbg !10463
  %cmp17 = icmp sge i32 %21, %22, !dbg !10464
  br i1 %cmp17, label %if.then18, label %if.else22, !dbg !10465

if.then18:                                        ; preds = %if.else16
  %23 = load i32, i32* %max_y, align 4, !dbg !10466
  %sub19 = sub i32 %23, 1, !dbg !10467
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10468
  %state20 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %24, i32 0, i32 1, !dbg !10469
  %y21 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state20, i32 0, i32 1, !dbg !10470
  store i32 %sub19, i32* %y21, align 4, !dbg !10471
  br label %if.end25, !dbg !10468

if.else22:                                        ; preds = %if.else16
  %25 = load i32, i32* %new_y.addr, align 4, !dbg !10472
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10473
  %state23 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 1, !dbg !10474
  %y24 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state23, i32 0, i32 1, !dbg !10475
  store i32 %25, i32* %y24, align 4, !dbg !10476
  br label %if.end25

if.end25:                                         ; preds = %if.else22, %if.then18
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then14
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10477
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 8, !dbg !10478
  %28 = load i64, i64* %vc_origin, align 8, !dbg !10478
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10479
  %state27 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 1, !dbg !10480
  %y28 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state27, i32 0, i32 1, !dbg !10481
  %30 = load i32, i32* %y28, align 4, !dbg !10481
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10482
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %31, i32 0, i32 6, !dbg !10483
  %32 = load i32, i32* %vc_size_row, align 4, !dbg !10483
  %mul = mul i32 %30, %32, !dbg !10484
  %conv = zext i32 %mul to i64, !dbg !10479
  %add = add i64 %28, %conv, !dbg !10485
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10486
  %state29 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %33, i32 0, i32 1, !dbg !10487
  %x30 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state29, i32 0, i32 0, !dbg !10488
  %34 = load i32, i32* %x30, align 8, !dbg !10488
  %shl = shl i32 %34, 1, !dbg !10489
  %conv31 = zext i32 %shl to i64, !dbg !10490
  %add32 = add i64 %add, %conv31, !dbg !10491
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10492
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 25, !dbg !10493
  store i64 %add32, i64* %vc_pos, align 8, !dbg !10494
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10495
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 36, !dbg !10496
  %bf.load33 = load i16, i16* %vc_need_wrap, align 8, !dbg !10497
  %bf.clear34 = and i16 %bf.load33, -1025, !dbg !10497
  store i16 %bf.clear34, i16* %vc_need_wrap, align 8, !dbg !10497
  ret void, !dbg !10498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i16 @vcs_scr_readw(%struct.vc_data* %vc, i16* %org) #0 !dbg !10499 {
entry:
  %retval = alloca i16, align 2
  %vc.addr = alloca %struct.vc_data*, align 8
  %org.addr = alloca i16*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10503, metadata !DIExpression()), !dbg !10504
  store i16* %org, i16** %org.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %org.addr, metadata !10505, metadata !DIExpression()), !dbg !10506
  %0 = load i16*, i16** %org.addr, align 8, !dbg !10507
  %1 = ptrtoint i16* %0 to i64, !dbg !10509
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10510
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 25, !dbg !10511
  %3 = load i64, i64* %vc_pos, align 8, !dbg !10511
  %cmp = icmp eq i64 %1, %3, !dbg !10512
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10513

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* @softcursor_original, align 4, !dbg !10514
  %cmp1 = icmp ne i32 %4, -1, !dbg !10515
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10516

if.then:                                          ; preds = %land.lhs.true
  %5 = load i32, i32* @softcursor_original, align 4, !dbg !10517
  %conv = trunc i32 %5 to i16, !dbg !10517
  store i16 %conv, i16* %retval, align 2, !dbg !10518
  br label %return, !dbg !10518

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load i16*, i16** %org.addr, align 8, !dbg !10519
  %7 = load i16, i16* %6, align 2, !dbg !10519
  store i16 %7, i16* %retval, align 2, !dbg !10520
  br label %return, !dbg !10520

return:                                           ; preds = %if.end, %if.then
  %8 = load i16, i16* %retval, align 2, !dbg !10521
  ret i16 %8, !dbg !10521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vcs_scr_writew(%struct.vc_data* %vc, i16 zeroext %val, i16* %org) #0 !dbg !10522 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %val.addr = alloca i16, align 2
  %org.addr = alloca i16*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10525, metadata !DIExpression()), !dbg !10526
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !10527, metadata !DIExpression()), !dbg !10528
  store i16* %org, i16** %org.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %org.addr, metadata !10529, metadata !DIExpression()), !dbg !10530
  %0 = load i16, i16* %val.addr, align 2, !dbg !10531
  %1 = load i16*, i16** %org.addr, align 8, !dbg !10531
  store i16 %0, i16* %1, align 2, !dbg !10531
  %2 = load i16*, i16** %org.addr, align 8, !dbg !10532
  %3 = ptrtoint i16* %2 to i64, !dbg !10534
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10535
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 25, !dbg !10536
  %5 = load i64, i64* %vc_pos, align 8, !dbg !10536
  %cmp = icmp eq i64 %3, %5, !dbg !10537
  br i1 %cmp, label %if.then, label %if.end, !dbg !10538

if.then:                                          ; preds = %entry
  store i32 -1, i32* @softcursor_original, align 4, !dbg !10539
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10541
  call void @add_softcursor(%struct.vc_data* %6) #13, !dbg !10542
  br label %if.end, !dbg !10543

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @add_softcursor(%struct.vc_data* %vc) #0 !dbg !10545 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %i = alloca i32, align 4
  %type = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10546, metadata !DIExpression()), !dbg !10547
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10548, metadata !DIExpression()), !dbg !10549
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10550
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 25, !dbg !10550
  %1 = load i64, i64* %vc_pos, align 8, !dbg !10550
  %2 = inttoptr i64 %1 to i16*, !dbg !10550
  %3 = load i16, i16* %2, align 2, !dbg !10550
  %conv = zext i16 %3 to i32, !dbg !10550
  store i32 %conv, i32* %i, align 4, !dbg !10549
  call void @llvm.dbg.declare(metadata i32* %type, metadata !10551, metadata !DIExpression()), !dbg !10552
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10553
  %vc_cursor_type = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 22, !dbg !10554
  %5 = load i32, i32* %vc_cursor_type, align 4, !dbg !10554
  store i32 %5, i32* %type, align 4, !dbg !10552
  %6 = load i32, i32* %type, align 4, !dbg !10555
  %and = and i32 %6, 16, !dbg !10557
  %tobool = icmp ne i32 %and, 0, !dbg !10557
  br i1 %tobool, label %if.end, label %if.then, !dbg !10558

if.then:                                          ; preds = %entry
  br label %if.end30, !dbg !10559

if.end:                                           ; preds = %entry
  %7 = load i32, i32* @softcursor_original, align 4, !dbg !10560
  %cmp = icmp ne i32 %7, -1, !dbg !10562
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10563

if.then2:                                         ; preds = %if.end
  br label %if.end30, !dbg !10564

if.end3:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !10565
  store i32 %8, i32* @softcursor_original, align 4, !dbg !10566
  %9 = load i32, i32* %type, align 4, !dbg !10567
  %and4 = and i32 %9, 16711680, !dbg !10567
  %shr = lshr i32 %and4, 8, !dbg !10567
  %10 = load i32, i32* %i, align 4, !dbg !10568
  %or = or i32 %10, %shr, !dbg !10568
  store i32 %or, i32* %i, align 4, !dbg !10568
  %11 = load i32, i32* %type, align 4, !dbg !10569
  %and5 = and i32 %11, 65280, !dbg !10569
  %12 = load i32, i32* %i, align 4, !dbg !10570
  %xor = xor i32 %12, %and5, !dbg !10570
  store i32 %xor, i32* %i, align 4, !dbg !10570
  %13 = load i32, i32* %type, align 4, !dbg !10571
  %and6 = and i32 %13, 32, !dbg !10573
  %tobool7 = icmp ne i32 %and6, 0, !dbg !10573
  br i1 %tobool7, label %land.lhs.true, label %if.end14, !dbg !10574

land.lhs.true:                                    ; preds = %if.end3
  %14 = load i32, i32* @softcursor_original, align 4, !dbg !10575
  %and8 = and i32 %14, 28672, !dbg !10576
  %15 = load i32, i32* %i, align 4, !dbg !10577
  %and9 = and i32 %15, 28672, !dbg !10578
  %cmp10 = icmp eq i32 %and8, %and9, !dbg !10579
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !10580

if.then12:                                        ; preds = %land.lhs.true
  %16 = load i32, i32* %i, align 4, !dbg !10581
  %xor13 = xor i32 %16, 28672, !dbg !10581
  store i32 %xor13, i32* %i, align 4, !dbg !10581
  br label %if.end14, !dbg !10582

if.end14:                                         ; preds = %if.then12, %land.lhs.true, %if.end3
  %17 = load i32, i32* %type, align 4, !dbg !10583
  %and15 = and i32 %17, 64, !dbg !10585
  %tobool16 = icmp ne i32 %and15, 0, !dbg !10585
  br i1 %tobool16, label %land.lhs.true17, label %if.end25, !dbg !10586

land.lhs.true17:                                  ; preds = %if.end14
  %18 = load i32, i32* %i, align 4, !dbg !10587
  %and18 = and i32 %18, 1792, !dbg !10588
  %19 = load i32, i32* %i, align 4, !dbg !10589
  %and19 = and i32 %19, 28672, !dbg !10590
  %shr20 = ashr i32 %and19, 4, !dbg !10591
  %cmp21 = icmp eq i32 %and18, %shr20, !dbg !10592
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !10593

if.then23:                                        ; preds = %land.lhs.true17
  %20 = load i32, i32* %i, align 4, !dbg !10594
  %xor24 = xor i32 %20, 1792, !dbg !10594
  store i32 %xor24, i32* %i, align 4, !dbg !10594
  br label %if.end25, !dbg !10595

if.end25:                                         ; preds = %if.then23, %land.lhs.true17, %if.end14
  %21 = load i32, i32* %i, align 4, !dbg !10596
  %conv26 = trunc i32 %21 to i16, !dbg !10596
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10596
  %vc_pos27 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 25, !dbg !10596
  %23 = load i64, i64* %vc_pos27, align 8, !dbg !10596
  %24 = inttoptr i64 %23 to i16*, !dbg !10596
  store i16 %conv26, i16* %24, align 2, !dbg !10596
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10597
  %call = call zeroext i1 @con_should_update(%struct.vc_data* %25) #13, !dbg !10599
  br i1 %call, label %if.then28, label %if.end30, !dbg !10600

if.then28:                                        ; preds = %if.end25
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10601
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 13, !dbg !10602
  %27 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !10602
  %con_putc = getelementptr inbounds %struct.consw, %struct.consw* %27, i32 0, i32 5, !dbg !10603
  %28 = load void (%struct.vc_data*, i32, i32, i32)*, void (%struct.vc_data*, i32, i32, i32)** %con_putc, align 8, !dbg !10603
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10604
  %30 = load i32, i32* %i, align 4, !dbg !10605
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10606
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %31, i32 0, i32 1, !dbg !10607
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !10608
  %32 = load i32, i32* %y, align 4, !dbg !10608
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10609
  %state29 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %33, i32 0, i32 1, !dbg !10610
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state29, i32 0, i32 0, !dbg !10611
  %34 = load i32, i32* %x, align 8, !dbg !10611
  call void %28(%struct.vc_data* %29, i32 %30, i32 %32, i32 %34) #13, !dbg !10601
  br label %if.end30, !dbg !10601

if.end30:                                         ; preds = %if.then, %if.then2, %if.then28, %if.end25
  ret void, !dbg !10612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vcs_scr_updated(%struct.vc_data* %vc) #0 !dbg !10613 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10614, metadata !DIExpression()), !dbg !10615
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10616
  call void @notify_update(%struct.vc_data* %0) #13, !dbg !10617
  ret void, !dbg !10618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vc_scrolldelta_helper(%struct.vc_data* %c, i32 %lines, i32 %rolled_over, i8* %base, i32 %size) #0 !dbg !10619 {
entry:
  %c.addr = alloca %struct.vc_data*, align 8
  %lines.addr = alloca i32, align 4
  %rolled_over.addr = alloca i32, align 4
  %base.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %ubase = alloca i64, align 8
  %scr_end = alloca i64, align 8
  %vorigin = alloca i64, align 8
  %origin = alloca i64, align 8
  %margin = alloca i32, align 4
  %from = alloca i32, align 4
  %wrap = alloca i32, align 4
  %from_off = alloca i32, align 4
  %avail = alloca i32, align 4
  store %struct.vc_data* %c, %struct.vc_data** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %c.addr, metadata !10622, metadata !DIExpression()), !dbg !10623
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !10624, metadata !DIExpression()), !dbg !10625
  store i32 %rolled_over, i32* %rolled_over.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rolled_over.addr, metadata !10626, metadata !DIExpression()), !dbg !10627
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10628, metadata !DIExpression()), !dbg !10629
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10630, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.declare(metadata i64* %ubase, metadata !10632, metadata !DIExpression()), !dbg !10633
  %0 = load i8*, i8** %base.addr, align 8, !dbg !10634
  %1 = ptrtoint i8* %0 to i64, !dbg !10635
  store i64 %1, i64* %ubase, align 8, !dbg !10633
  call void @llvm.dbg.declare(metadata i64* %scr_end, metadata !10636, metadata !DIExpression()), !dbg !10639
  %2 = load %struct.vc_data*, %struct.vc_data** %c.addr, align 8, !dbg !10640
  %vc_scr_end = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 9, !dbg !10641
  %3 = load i64, i64* %vc_scr_end, align 8, !dbg !10641
  %4 = inttoptr i64 %3 to i8*, !dbg !10642
  %5 = load i8*, i8** %base.addr, align 8, !dbg !10643
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !10644
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !10644
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10644
  store i64 %sub.ptr.sub, i64* %scr_end, align 8, !dbg !10639
  call void @llvm.dbg.declare(metadata i64* %vorigin, metadata !10645, metadata !DIExpression()), !dbg !10646
  %6 = load %struct.vc_data*, %struct.vc_data** %c.addr, align 8, !dbg !10647
  %vc_visible_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 10, !dbg !10648
  %7 = load i64, i64* %vc_visible_origin, align 8, !dbg !10648
  %8 = inttoptr i64 %7 to i8*, !dbg !10649
  %9 = load i8*, i8** %base.addr, align 8, !dbg !10650
  %sub.ptr.lhs.cast1 = ptrtoint i8* %8 to i64, !dbg !10651
  %sub.ptr.rhs.cast2 = ptrtoint i8* %9 to i64, !dbg !10651
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !10651
  store i64 %sub.ptr.sub3, i64* %vorigin, align 8, !dbg !10646
  call void @llvm.dbg.declare(metadata i64* %origin, metadata !10652, metadata !DIExpression()), !dbg !10653
  %10 = load %struct.vc_data*, %struct.vc_data** %c.addr, align 8, !dbg !10654
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 8, !dbg !10655
  %11 = load i64, i64* %vc_origin, align 8, !dbg !10655
  %12 = inttoptr i64 %11 to i8*, !dbg !10656
  %13 = load i8*, i8** %base.addr, align 8, !dbg !10657
  %sub.ptr.lhs.cast4 = ptrtoint i8* %12 to i64, !dbg !10658
  %sub.ptr.rhs.cast5 = ptrtoint i8* %13 to i64, !dbg !10658
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5, !dbg !10658
  store i64 %sub.ptr.sub6, i64* %origin, align 8, !dbg !10653
  call void @llvm.dbg.declare(metadata i32* %margin, metadata !10659, metadata !DIExpression()), !dbg !10660
  %14 = load %struct.vc_data*, %struct.vc_data** %c.addr, align 8, !dbg !10661
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 6, !dbg !10662
  %15 = load i32, i32* %vc_size_row, align 4, !dbg !10662
  %mul = mul i32 %15, 4, !dbg !10663
  store i32 %mul, i32* %margin, align 4, !dbg !10660
  call void @llvm.dbg.declare(metadata i32* %from, metadata !10664, metadata !DIExpression()), !dbg !10665
  call void @llvm.dbg.declare(metadata i32* %wrap, metadata !10666, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.declare(metadata i32* %from_off, metadata !10668, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.declare(metadata i32* %avail, metadata !10670, metadata !DIExpression()), !dbg !10671
  %16 = load i32, i32* %lines.addr, align 4, !dbg !10672
  %tobool = icmp ne i32 %16, 0, !dbg !10672
  br i1 %tobool, label %if.end, label %if.then, !dbg !10674

if.then:                                          ; preds = %entry
  %17 = load %struct.vc_data*, %struct.vc_data** %c.addr, align 8, !dbg !10675
  %vc_origin7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 8, !dbg !10677
  %18 = load i64, i64* %vc_origin7, align 8, !dbg !10677
  %19 = load %struct.vc_data*, %struct.vc_data** %c.addr, align 8, !dbg !10678
  %vc_visible_origin8 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 10, !dbg !10679
  store i64 %18, i64* %vc_visible_origin8, align 8, !dbg !10680
  br label %return, !dbg !10681

if.end:                                           ; preds = %entry
  %20 = load i32, i32* %rolled_over.addr, align 4, !dbg !10682
  %conv = zext i32 %20 to i64, !dbg !10682
  %21 = load i64, i64* %scr_end, align 8, !dbg !10684
  %22 = load i32, i32* %margin, align 4, !dbg !10685
  %conv9 = sext i32 %22 to i64, !dbg !10685
  %add = add i64 %21, %conv9, !dbg !10686
  %cmp = icmp sgt i64 %conv, %add, !dbg !10687
  br i1 %cmp, label %if.then11, label %if.else, !dbg !10688

if.then11:                                        ; preds = %if.end
  %23 = load i64, i64* %scr_end, align 8, !dbg !10689
  %conv12 = trunc i64 %23 to i32, !dbg !10689
  store i32 %conv12, i32* %from, align 4, !dbg !10691
  %24 = load i32, i32* %rolled_over.addr, align 4, !dbg !10692
  %25 = load %struct.vc_data*, %struct.vc_data** %c.addr, align 8, !dbg !10693
  %vc_size_row13 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 6, !dbg !10694
  %26 = load i32, i32* %vc_size_row13, align 4, !dbg !10694
  %add14 = add i32 %24, %26, !dbg !10695
  store i32 %add14, i32* %wrap, align 4, !dbg !10696
  br label %if.end15, !dbg !10697

if.else:                                          ; preds = %if.end
  store i32 0, i32* %from, align 4, !dbg !10698
  %27 = load i32, i32* %size.addr, align 4, !dbg !10700
  store i32 %27, i32* %wrap, align 4, !dbg !10701
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  %28 = load i64, i64* %vorigin, align 8, !dbg !10702
  %29 = load i32, i32* %from, align 4, !dbg !10703
  %conv16 = sext i32 %29 to i64, !dbg !10703
  %sub = sub i64 %28, %conv16, !dbg !10704
  %30 = load i32, i32* %wrap, align 4, !dbg !10705
  %conv17 = sext i32 %30 to i64, !dbg !10705
  %add18 = add i64 %sub, %conv17, !dbg !10706
  %31 = load i32, i32* %wrap, align 4, !dbg !10707
  %conv19 = sext i32 %31 to i64, !dbg !10707
  %rem = srem i64 %add18, %conv19, !dbg !10708
  %32 = load i32, i32* %lines.addr, align 4, !dbg !10709
  %33 = load %struct.vc_data*, %struct.vc_data** %c.addr, align 8, !dbg !10710
  %vc_size_row20 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %33, i32 0, i32 6, !dbg !10711
  %34 = load i32, i32* %vc_size_row20, align 4, !dbg !10711
  %mul21 = mul i32 %32, %34, !dbg !10712
  %conv22 = zext i32 %mul21 to i64, !dbg !10709
  %add23 = add i64 %rem, %conv22, !dbg !10713
  %conv24 = trunc i64 %add23 to i32, !dbg !10714
  store i32 %conv24, i32* %from_off, align 4, !dbg !10715
  %35 = load i64, i64* %origin, align 8, !dbg !10716
  %36 = load i32, i32* %from, align 4, !dbg !10717
  %conv25 = sext i32 %36 to i64, !dbg !10717
  %sub26 = sub i64 %35, %conv25, !dbg !10718
  %37 = load i32, i32* %wrap, align 4, !dbg !10719
  %conv27 = sext i32 %37 to i64, !dbg !10719
  %add28 = add i64 %sub26, %conv27, !dbg !10720
  %38 = load i32, i32* %wrap, align 4, !dbg !10721
  %conv29 = sext i32 %38 to i64, !dbg !10721
  %rem30 = srem i64 %add28, %conv29, !dbg !10722
  %conv31 = trunc i64 %rem30 to i32, !dbg !10723
  store i32 %conv31, i32* %avail, align 4, !dbg !10724
  %39 = load i32, i32* %avail, align 4, !dbg !10725
  %40 = load i32, i32* %margin, align 4, !dbg !10727
  %mul32 = mul i32 2, %40, !dbg !10728
  %cmp33 = icmp slt i32 %39, %mul32, !dbg !10729
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !10730

if.then35:                                        ; preds = %if.end15
  store i32 0, i32* %margin, align 4, !dbg !10731
  br label %if.end36, !dbg !10732

if.end36:                                         ; preds = %if.then35, %if.end15
  %41 = load i32, i32* %from_off, align 4, !dbg !10733
  %42 = load i32, i32* %margin, align 4, !dbg !10735
  %cmp37 = icmp slt i32 %41, %42, !dbg !10736
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !10737

if.then39:                                        ; preds = %if.end36
  store i32 0, i32* %from_off, align 4, !dbg !10738
  br label %if.end40, !dbg !10739

if.end40:                                         ; preds = %if.then39, %if.end36
  %43 = load i32, i32* %from_off, align 4, !dbg !10740
  %44 = load i32, i32* %avail, align 4, !dbg !10742
  %45 = load i32, i32* %margin, align 4, !dbg !10743
  %sub41 = sub i32 %44, %45, !dbg !10744
  %cmp42 = icmp sgt i32 %43, %sub41, !dbg !10745
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !10746

if.then44:                                        ; preds = %if.end40
  %46 = load i32, i32* %avail, align 4, !dbg !10747
  store i32 %46, i32* %from_off, align 4, !dbg !10748
  br label %if.end45, !dbg !10749

if.end45:                                         ; preds = %if.then44, %if.end40
  %47 = load i64, i64* %ubase, align 8, !dbg !10750
  %48 = load i32, i32* %from, align 4, !dbg !10751
  %49 = load i32, i32* %from_off, align 4, !dbg !10752
  %add46 = add i32 %48, %49, !dbg !10753
  %50 = load i32, i32* %wrap, align 4, !dbg !10754
  %rem47 = srem i32 %add46, %50, !dbg !10755
  %conv48 = sext i32 %rem47 to i64, !dbg !10756
  %add49 = add i64 %47, %conv48, !dbg !10757
  %51 = load %struct.vc_data*, %struct.vc_data** %c.addr, align 8, !dbg !10758
  %vc_visible_origin50 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %51, i32 0, i32 10, !dbg !10759
  store i64 %add49, i64* %vc_visible_origin50, align 8, !dbg !10760
  br label %return, !dbg !10761

return:                                           ; preds = %if.end45, %if.then
  ret void, !dbg !10761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !10762 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !10765, metadata !DIExpression()), !dbg !10766
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !10767, metadata !DIExpression()), !dbg !10768
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !10769
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !10770
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #13, !dbg !10771
  ret i1 %call, !dbg !10772
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @console_callback(%struct.work_struct* %ignored) #0 !dbg !10773 {
entry:
  %ignored.addr = alloca %struct.work_struct*, align 8
  %vc = alloca %struct.vc_data*, align 8
  store %struct.work_struct* %ignored, %struct.work_struct** %ignored.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %ignored.addr, metadata !10774, metadata !DIExpression()), !dbg !10775
  call void @console_lock() #13, !dbg !10776
  %0 = load i32, i32* @want_console, align 4, !dbg !10777
  %cmp = icmp sge i32 %0, 0, !dbg !10779
  br i1 %cmp, label %if.then, label %if.end6, !dbg !10780

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @want_console, align 4, !dbg !10781
  %2 = load i32, i32* @fg_console, align 4, !dbg !10784
  %cmp1 = icmp ne i32 %1, %2, !dbg !10785
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !10786

land.lhs.true:                                    ; preds = %if.then
  %3 = load i32, i32* @want_console, align 4, !dbg !10787
  %call = call i32 @vc_cons_allocated(i32 %3) #13, !dbg !10788
  %tobool = icmp ne i32 %call, 0, !dbg !10788
  br i1 %tobool, label %if.then2, label %if.end, !dbg !10789

if.then2:                                         ; preds = %land.lhs.true
  %4 = load i32, i32* @fg_console, align 4, !dbg !10790
  %idxprom = sext i32 %4 to i64, !dbg !10792
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !10792
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !10793
  %5 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !10793
  call void @hide_cursor(%struct.vc_data* %5) #13, !dbg !10794
  %6 = load i32, i32* @want_console, align 4, !dbg !10795
  %idxprom3 = sext i32 %6 to i64, !dbg !10796
  %arrayidx4 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom3, !dbg !10796
  %d5 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx4, i32 0, i32 0, !dbg !10797
  %7 = load %struct.vc_data*, %struct.vc_data** %d5, align 8, !dbg !10797
  call void @change_console(%struct.vc_data* %7) #13, !dbg !10798
  br label %if.end, !dbg !10799

if.end:                                           ; preds = %if.then2, %land.lhs.true, %if.then
  store i32 -1, i32* @want_console, align 4, !dbg !10800
  br label %if.end6, !dbg !10801

if.end6:                                          ; preds = %if.end, %entry
  %8 = load i32, i32* @do_poke_blanked_console, align 4, !dbg !10802
  %tobool7 = icmp ne i32 %8, 0, !dbg !10802
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !10804

if.then8:                                         ; preds = %if.end6
  store i32 0, i32* @do_poke_blanked_console, align 4, !dbg !10805
  call void @poke_blanked_console() #13, !dbg !10807
  br label %if.end9, !dbg !10808

if.end9:                                          ; preds = %if.then8, %if.end6
  %9 = load i32, i32* @scrollback_delta, align 4, !dbg !10809
  %tobool10 = icmp ne i32 %9, 0, !dbg !10809
  br i1 %tobool10, label %if.then11, label %if.end23, !dbg !10811

if.then11:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !10812, metadata !DIExpression()), !dbg !10814
  %10 = load i32, i32* @fg_console, align 4, !dbg !10815
  %idxprom12 = sext i32 %10 to i64, !dbg !10816
  %arrayidx13 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom12, !dbg !10816
  %d14 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx13, i32 0, i32 0, !dbg !10817
  %11 = load %struct.vc_data*, %struct.vc_data** %d14, align 8, !dbg !10817
  store %struct.vc_data* %11, %struct.vc_data** %vc, align 8, !dbg !10814
  call void @clear_selection() #13, !dbg !10818
  %12 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !10819
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 16, !dbg !10821
  %13 = load i8, i8* %vc_mode, align 4, !dbg !10821
  %conv = zext i8 %13 to i32, !dbg !10819
  %cmp15 = icmp eq i32 %conv, 0, !dbg !10822
  br i1 %cmp15, label %land.lhs.true17, label %if.end22, !dbg !10823

land.lhs.true17:                                  ; preds = %if.then11
  %14 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !10824
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 13, !dbg !10825
  %15 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !10825
  %con_scrolldelta = getelementptr inbounds %struct.consw, %struct.consw* %15, i32 0, i32 17, !dbg !10826
  %16 = load void (%struct.vc_data*, i32)*, void (%struct.vc_data*, i32)** %con_scrolldelta, align 8, !dbg !10826
  %tobool18 = icmp ne void (%struct.vc_data*, i32)* %16, null, !dbg !10824
  br i1 %tobool18, label %if.then19, label %if.end22, !dbg !10827

if.then19:                                        ; preds = %land.lhs.true17
  %17 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !10828
  %vc_sw20 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 13, !dbg !10829
  %18 = load %struct.consw*, %struct.consw** %vc_sw20, align 8, !dbg !10829
  %con_scrolldelta21 = getelementptr inbounds %struct.consw, %struct.consw* %18, i32 0, i32 17, !dbg !10830
  %19 = load void (%struct.vc_data*, i32)*, void (%struct.vc_data*, i32)** %con_scrolldelta21, align 8, !dbg !10830
  %20 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !10831
  %21 = load i32, i32* @scrollback_delta, align 4, !dbg !10832
  call void %19(%struct.vc_data* %20, i32 %21) #13, !dbg !10828
  br label %if.end22, !dbg !10828

if.end22:                                         ; preds = %if.then19, %land.lhs.true17, %if.then11
  store i32 0, i32* @scrollback_delta, align 4, !dbg !10833
  br label %if.end23, !dbg !10834

if.end23:                                         ; preds = %if.end22, %if.end9
  %22 = load i32, i32* @blank_timer_expired, align 4, !dbg !10835
  %tobool24 = icmp ne i32 %22, 0, !dbg !10835
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !10837

if.then25:                                        ; preds = %if.end23
  call void @do_blank_screen(i32 0) #13, !dbg !10838
  store i32 0, i32* @blank_timer_expired, align 4, !dbg !10840
  br label %if.end26, !dbg !10841

if.end26:                                         ; preds = %if.then25, %if.end23
  %23 = load i32, i32* @fg_console, align 4, !dbg !10842
  %idxprom27 = sext i32 %23 to i64, !dbg !10843
  %arrayidx28 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom27, !dbg !10843
  %d29 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx28, i32 0, i32 0, !dbg !10844
  %24 = load %struct.vc_data*, %struct.vc_data** %d29, align 8, !dbg !10844
  call void @notify_update(%struct.vc_data* %24) #13, !dbg !10845
  call void @console_unlock() #13, !dbg !10846
  ret void, !dbg !10847
}

; Function Attrs: noredzone
declare dso_local void @change_console(%struct.vc_data*) #2

; Function Attrs: noredzone
declare dso_local void @clear_selection() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !10848 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10852, metadata !DIExpression()), !dbg !10853
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10854, metadata !DIExpression()), !dbg !10855
  ret i1 true, !dbg !10856
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !10857 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10861, metadata !DIExpression()), !dbg !10862
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10863, metadata !DIExpression()), !dbg !10864
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10865, metadata !DIExpression()), !dbg !10866
  ret void, !dbg !10867
}

; Function Attrs: noredzone
declare dso_local i8* @vmalloc(i64) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @vc_is_sel(%struct.vc_data*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hide_softcursor(%struct.vc_data* %vc) #0 !dbg !10868 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10869, metadata !DIExpression()), !dbg !10870
  %0 = load i32, i32* @softcursor_original, align 4, !dbg !10871
  %cmp = icmp ne i32 %0, -1, !dbg !10873
  br i1 %cmp, label %if.then, label %if.end3, !dbg !10874

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @softcursor_original, align 4, !dbg !10875
  %conv = trunc i32 %1 to i16, !dbg !10875
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10875
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 25, !dbg !10875
  %3 = load i64, i64* %vc_pos, align 8, !dbg !10875
  %4 = inttoptr i64 %3 to i16*, !dbg !10875
  store i16 %conv, i16* %4, align 2, !dbg !10875
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10877
  %call = call zeroext i1 @con_should_update(%struct.vc_data* %5) #13, !dbg !10879
  br i1 %call, label %if.then1, label %if.end, !dbg !10880

if.then1:                                         ; preds = %if.then
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10881
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 13, !dbg !10882
  %7 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !10882
  %con_putc = getelementptr inbounds %struct.consw, %struct.consw* %7, i32 0, i32 5, !dbg !10883
  %8 = load void (%struct.vc_data*, i32, i32, i32)*, void (%struct.vc_data*, i32, i32, i32)** %con_putc, align 8, !dbg !10883
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10884
  %10 = load i32, i32* @softcursor_original, align 4, !dbg !10885
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10886
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 1, !dbg !10887
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !10888
  %12 = load i32, i32* %y, align 4, !dbg !10888
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10889
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 1, !dbg !10890
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 0, !dbg !10891
  %14 = load i32, i32* %x, align 8, !dbg !10891
  call void %8(%struct.vc_data* %9, i32 %10, i32 %12, i32 %14) #13, !dbg !10881
  br label %if.end, !dbg !10881

if.end:                                           ; preds = %if.then1, %if.then
  store i32 -1, i32* @softcursor_original, align 4, !dbg !10892
  br label %if.end3, !dbg !10893

if.end3:                                          ; preds = %if.end, %entry
  ret void, !dbg !10894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @con_is_fg(%struct.vc_data* %vc) #0 !dbg !10895 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10896, metadata !DIExpression()), !dbg !10897
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10898
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 3, !dbg !10899
  %1 = load i16, i16* %vc_num, align 8, !dbg !10899
  %conv = zext i16 %1 to i32, !dbg !10898
  %2 = load i32, i32* @fg_console, align 4, !dbg !10900
  %cmp = icmp eq i32 %conv, %2, !dbg !10901
  ret i1 %cmp, !dbg !10902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @build_attr(%struct.vc_data* %vc, i8 zeroext %_color, i32 %_intensity, i1 zeroext %_blink, i1 zeroext %_underline, i1 zeroext %_reverse, i1 zeroext %_italic) #0 !dbg !10903 {
entry:
  %retval = alloca i8, align 1
  %vc.addr = alloca %struct.vc_data*, align 8
  %_color.addr = alloca i8, align 1
  %_intensity.addr = alloca i32, align 4
  %_blink.addr = alloca i8, align 1
  %_underline.addr = alloca i8, align 1
  %_reverse.addr = alloca i8, align 1
  %_italic.addr = alloca i8, align 1
  %a = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10904, metadata !DIExpression()), !dbg !10905
  store i8 %_color, i8* %_color.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %_color.addr, metadata !10906, metadata !DIExpression()), !dbg !10907
  store i32 %_intensity, i32* %_intensity.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %_intensity.addr, metadata !10908, metadata !DIExpression()), !dbg !10909
  %frombool = zext i1 %_blink to i8
  store i8 %frombool, i8* %_blink.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %_blink.addr, metadata !10910, metadata !DIExpression()), !dbg !10911
  %frombool1 = zext i1 %_underline to i8
  store i8 %frombool1, i8* %_underline.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %_underline.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  %frombool2 = zext i1 %_reverse to i8
  store i8 %frombool2, i8* %_reverse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %_reverse.addr, metadata !10914, metadata !DIExpression()), !dbg !10915
  %frombool3 = zext i1 %_italic to i8
  store i8 %frombool3, i8* %_italic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %_italic.addr, metadata !10916, metadata !DIExpression()), !dbg !10917
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10918
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 13, !dbg !10920
  %1 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !10920
  %con_build_attr = getelementptr inbounds %struct.consw, %struct.consw* %1, i32 0, i32 20, !dbg !10921
  %2 = load i8 (%struct.vc_data*, i8, i32, i1, i1, i1, i1)*, i8 (%struct.vc_data*, i8, i32, i1, i1, i1, i1)** %con_build_attr, align 8, !dbg !10921
  %tobool = icmp ne i8 (%struct.vc_data*, i8, i32, i1, i1, i1, i1)* %2, null, !dbg !10918
  br i1 %tobool, label %if.then, label %if.end, !dbg !10922

if.then:                                          ; preds = %entry
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10923
  %vc_sw4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 13, !dbg !10924
  %4 = load %struct.consw*, %struct.consw** %vc_sw4, align 8, !dbg !10924
  %con_build_attr5 = getelementptr inbounds %struct.consw, %struct.consw* %4, i32 0, i32 20, !dbg !10925
  %5 = load i8 (%struct.vc_data*, i8, i32, i1, i1, i1, i1)*, i8 (%struct.vc_data*, i8, i32, i1, i1, i1, i1)** %con_build_attr5, align 8, !dbg !10925
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10926
  %7 = load i8, i8* %_color.addr, align 1, !dbg !10927
  %8 = load i32, i32* %_intensity.addr, align 4, !dbg !10928
  %9 = load i8, i8* %_blink.addr, align 1, !dbg !10929
  %tobool6 = trunc i8 %9 to i1, !dbg !10929
  %10 = load i8, i8* %_underline.addr, align 1, !dbg !10930
  %tobool7 = trunc i8 %10 to i1, !dbg !10930
  %11 = load i8, i8* %_reverse.addr, align 1, !dbg !10931
  %tobool8 = trunc i8 %11 to i1, !dbg !10931
  %12 = load i8, i8* %_italic.addr, align 1, !dbg !10932
  %tobool9 = trunc i8 %12 to i1, !dbg !10932
  %call = call zeroext i8 %5(%struct.vc_data* %6, i8 zeroext %7, i32 %8, i1 zeroext %tobool6, i1 zeroext %tobool7, i1 zeroext %tobool8, i1 zeroext %tobool9) #13, !dbg !10923
  store i8 %call, i8* %retval, align 1, !dbg !10933
  br label %return, !dbg !10933

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %a, metadata !10934, metadata !DIExpression()), !dbg !10936
  %13 = load i8, i8* %_color.addr, align 1, !dbg !10937
  store i8 %13, i8* %a, align 1, !dbg !10936
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10938
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 36, !dbg !10940
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !10940
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !10940
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10940
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10940
  %tobool10 = icmp ne i32 %bf.cast, 0, !dbg !10938
  br i1 %tobool10, label %if.end26, label %if.then11, !dbg !10941

if.then11:                                        ; preds = %if.end
  %15 = load i32, i32* %_intensity.addr, align 4, !dbg !10942
  %16 = load i8, i8* %_italic.addr, align 1, !dbg !10943
  %tobool12 = trunc i8 %16 to i1, !dbg !10943
  %conv = zext i1 %tobool12 to i32, !dbg !10943
  %shl = shl i32 %conv, 1, !dbg !10944
  %or = or i32 %15, %shl, !dbg !10945
  %17 = load i8, i8* %_underline.addr, align 1, !dbg !10946
  %tobool13 = trunc i8 %17 to i1, !dbg !10946
  %conv14 = zext i1 %tobool13 to i32, !dbg !10946
  %shl15 = shl i32 %conv14, 2, !dbg !10947
  %or16 = or i32 %or, %shl15, !dbg !10948
  %18 = load i8, i8* %_reverse.addr, align 1, !dbg !10949
  %tobool17 = trunc i8 %18 to i1, !dbg !10949
  %conv18 = zext i1 %tobool17 to i32, !dbg !10949
  %shl19 = shl i32 %conv18, 3, !dbg !10950
  %or20 = or i32 %or16, %shl19, !dbg !10951
  %19 = load i8, i8* %_blink.addr, align 1, !dbg !10952
  %tobool21 = trunc i8 %19 to i1, !dbg !10952
  %conv22 = zext i1 %tobool21 to i32, !dbg !10952
  %shl23 = shl i32 %conv22, 7, !dbg !10953
  %or24 = or i32 %or20, %shl23, !dbg !10954
  %conv25 = trunc i32 %or24 to i8, !dbg !10942
  store i8 %conv25, i8* %retval, align 1, !dbg !10955
  br label %return, !dbg !10955

if.end26:                                         ; preds = %if.end
  %20 = load i8, i8* %_italic.addr, align 1, !dbg !10956
  %tobool27 = trunc i8 %20 to i1, !dbg !10956
  br i1 %tobool27, label %if.then28, label %if.else, !dbg !10958

if.then28:                                        ; preds = %if.end26
  %21 = load i8, i8* %a, align 1, !dbg !10959
  %conv29 = zext i8 %21 to i32, !dbg !10959
  %and = and i32 %conv29, 240, !dbg !10960
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10961
  %vc_itcolor = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 20, !dbg !10962
  %23 = load i8, i8* %vc_itcolor, align 8, !dbg !10962
  %conv30 = zext i8 %23 to i32, !dbg !10961
  %or31 = or i32 %and, %conv30, !dbg !10963
  %conv32 = trunc i32 %or31 to i8, !dbg !10964
  store i8 %conv32, i8* %a, align 1, !dbg !10965
  br label %if.end50, !dbg !10966

if.else:                                          ; preds = %if.end26
  %24 = load i8, i8* %_underline.addr, align 1, !dbg !10967
  %tobool33 = trunc i8 %24 to i1, !dbg !10967
  br i1 %tobool33, label %if.then34, label %if.else40, !dbg !10969

if.then34:                                        ; preds = %if.else
  %25 = load i8, i8* %a, align 1, !dbg !10970
  %conv35 = zext i8 %25 to i32, !dbg !10970
  %and36 = and i32 %conv35, 240, !dbg !10971
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10972
  %vc_ulcolor = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 19, !dbg !10973
  %27 = load i8, i8* %vc_ulcolor, align 1, !dbg !10973
  %conv37 = zext i8 %27 to i32, !dbg !10972
  %or38 = or i32 %and36, %conv37, !dbg !10974
  %conv39 = trunc i32 %or38 to i8, !dbg !10975
  store i8 %conv39, i8* %a, align 1, !dbg !10976
  br label %if.end49, !dbg !10977

if.else40:                                        ; preds = %if.else
  %28 = load i32, i32* %_intensity.addr, align 4, !dbg !10978
  %cmp = icmp eq i32 %28, 0, !dbg !10980
  br i1 %cmp, label %if.then42, label %if.end48, !dbg !10981

if.then42:                                        ; preds = %if.else40
  %29 = load i8, i8* %a, align 1, !dbg !10982
  %conv43 = zext i8 %29 to i32, !dbg !10982
  %and44 = and i32 %conv43, 240, !dbg !10983
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10984
  %vc_halfcolor = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 21, !dbg !10985
  %31 = load i8, i8* %vc_halfcolor, align 1, !dbg !10985
  %conv45 = zext i8 %31 to i32, !dbg !10984
  %or46 = or i32 %and44, %conv45, !dbg !10986
  %conv47 = trunc i32 %or46 to i8, !dbg !10987
  store i8 %conv47, i8* %a, align 1, !dbg !10988
  br label %if.end48, !dbg !10989

if.end48:                                         ; preds = %if.then42, %if.else40
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then34
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then28
  %32 = load i8, i8* %_reverse.addr, align 1, !dbg !10990
  %tobool51 = trunc i8 %32 to i1, !dbg !10990
  br i1 %tobool51, label %if.then52, label %if.end62, !dbg !10992

if.then52:                                        ; preds = %if.end50
  %33 = load i8, i8* %a, align 1, !dbg !10993
  %conv53 = zext i8 %33 to i32, !dbg !10993
  %and54 = and i32 %conv53, 136, !dbg !10994
  %34 = load i8, i8* %a, align 1, !dbg !10995
  %conv55 = zext i8 %34 to i32, !dbg !10995
  %shr = ashr i32 %conv55, 4, !dbg !10996
  %35 = load i8, i8* %a, align 1, !dbg !10997
  %conv56 = zext i8 %35 to i32, !dbg !10997
  %shl57 = shl i32 %conv56, 4, !dbg !10998
  %or58 = or i32 %shr, %shl57, !dbg !10999
  %and59 = and i32 %or58, 119, !dbg !11000
  %or60 = or i32 %and54, %and59, !dbg !11001
  %conv61 = trunc i32 %or60 to i8, !dbg !11002
  store i8 %conv61, i8* %a, align 1, !dbg !11003
  br label %if.end62, !dbg !11004

if.end62:                                         ; preds = %if.then52, %if.end50
  %36 = load i8, i8* %_blink.addr, align 1, !dbg !11005
  %tobool63 = trunc i8 %36 to i1, !dbg !11005
  br i1 %tobool63, label %if.then64, label %if.end67, !dbg !11007

if.then64:                                        ; preds = %if.end62
  %37 = load i8, i8* %a, align 1, !dbg !11008
  %conv65 = zext i8 %37 to i32, !dbg !11008
  %xor = xor i32 %conv65, 128, !dbg !11008
  %conv66 = trunc i32 %xor to i8, !dbg !11008
  store i8 %conv66, i8* %a, align 1, !dbg !11008
  br label %if.end67, !dbg !11009

if.end67:                                         ; preds = %if.then64, %if.end62
  %38 = load i32, i32* %_intensity.addr, align 4, !dbg !11010
  %cmp68 = icmp eq i32 %38, 2, !dbg !11012
  br i1 %cmp68, label %if.then70, label %if.end74, !dbg !11013

if.then70:                                        ; preds = %if.end67
  %39 = load i8, i8* %a, align 1, !dbg !11014
  %conv71 = zext i8 %39 to i32, !dbg !11014
  %xor72 = xor i32 %conv71, 8, !dbg !11014
  %conv73 = trunc i32 %xor72 to i8, !dbg !11014
  store i8 %conv73, i8* %a, align 1, !dbg !11014
  br label %if.end74, !dbg !11015

if.end74:                                         ; preds = %if.then70, %if.end67
  %40 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11016
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %40, i32 0, i32 26, !dbg !11018
  %41 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !11018
  %conv75 = zext i16 %41 to i32, !dbg !11016
  %cmp76 = icmp eq i32 %conv75, 256, !dbg !11019
  br i1 %cmp76, label %if.then78, label %if.end82, !dbg !11020

if.then78:                                        ; preds = %if.end74
  %42 = load i8, i8* %a, align 1, !dbg !11021
  %conv79 = zext i8 %42 to i32, !dbg !11021
  %shl80 = shl i32 %conv79, 1, !dbg !11021
  %conv81 = trunc i32 %shl80 to i8, !dbg !11021
  store i8 %conv81, i8* %a, align 1, !dbg !11021
  br label %if.end82, !dbg !11022

if.end82:                                         ; preds = %if.then78, %if.end74
  %43 = load i8, i8* %a, align 1, !dbg !11023
  store i8 %43, i8* %retval, align 1, !dbg !11024
  br label %return, !dbg !11024

return:                                           ; preds = %if.end82, %if.then11, %if.then
  %44 = load i8, i8* %retval, align 1, !dbg !11025
  ret i8 %44, !dbg !11025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #0 !dbg !11026 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !11046, metadata !DIExpression()), !dbg !11047
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !11048
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !11050
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #13, !dbg !11051
  br i1 %call, label %if.end, label %if.then, !dbg !11052

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !11053
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #13, !dbg !11054
  br label %if.end, !dbg !11054

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !11056 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11062, metadata !DIExpression()), !dbg !11065
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11067, metadata !DIExpression()), !dbg !11068
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !11069, metadata !DIExpression()), !dbg !11071
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11072, metadata !DIExpression()), !dbg !11074
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11076, metadata !DIExpression()), !dbg !11077
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11078, metadata !DIExpression()), !dbg !11079
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11080, metadata !DIExpression()), !dbg !11081
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11082
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11083
  %div = sdiv i64 %1, 64, !dbg !11083
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11084
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11082
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11085
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11086
  %conv.i = trunc i64 %4 to i32, !dbg !11086
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !11087
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11088
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11088
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !11088
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11089
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11090
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !11071
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !11071
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #5, !dbg !11071, !srcloc !11091
  store i8 %11, i8* %c.i, align 1, !dbg !11071
  %12 = load i8, i8* %c.i, align 1, !dbg !11071
  %tobool.i = trunc i8 %12 to i1, !dbg !11071
  %frombool.i = zext i1 %tobool.i to i8, !dbg !11071
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !11071
  %13 = load i8, i8* %tmp.i, align 1, !dbg !11071
  %tobool1.i = trunc i8 %13 to i1, !dbg !11071
  ret i1 %tobool1.i, !dbg !11092
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !11093 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11094, metadata !DIExpression()), !dbg !11095
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11096, metadata !DIExpression()), !dbg !11097
  ret i1 true, !dbg !11098
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #9

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #10

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #11 !dbg !11099 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11103, metadata !DIExpression()), !dbg !11107
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11109, metadata !DIExpression()), !dbg !11110
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11111, metadata !DIExpression()), !dbg !11112
  %0 = load i64, i64* %size.addr, align 8, !dbg !11113
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11115
  br i1 %1, label %if.then, label %if.end447, !dbg !11116

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11117
  %tobool = icmp ne i64 %2, 0, !dbg !11117
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11120

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11121
  br label %return, !dbg !11121

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11122
  %cmp = icmp ult i64 %3, 4096, !dbg !11124
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11125

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11126
  br label %return, !dbg !11126

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub = sub i64 %4, 1, !dbg !11127
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11127
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11127

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub4 = sub i64 %6, 1, !dbg !11127
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11127
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11127

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub6 = sub i64 %8, 1, !dbg !11127
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11127
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11127

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11127

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub9 = sub i64 %9, 1, !dbg !11127
  %and = and i64 %sub9, -9223372036854775808, !dbg !11127
  %tobool10 = icmp ne i64 %and, 0, !dbg !11127
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11127

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11127

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub13 = sub i64 %10, 1, !dbg !11127
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11127
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11127
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11127

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11127

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub18 = sub i64 %11, 1, !dbg !11127
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11127
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11127
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11127

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11127

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub23 = sub i64 %12, 1, !dbg !11127
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11127
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11127
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11127

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11127

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub28 = sub i64 %13, 1, !dbg !11127
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11127
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11127
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11127

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11127

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub33 = sub i64 %14, 1, !dbg !11127
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11127
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11127
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11127

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11127

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub38 = sub i64 %15, 1, !dbg !11127
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11127
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11127
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11127

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11127

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub43 = sub i64 %16, 1, !dbg !11127
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11127
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11127
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11127

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11127

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub48 = sub i64 %17, 1, !dbg !11127
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11127
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11127
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11127

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11127

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub53 = sub i64 %18, 1, !dbg !11127
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11127
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11127
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11127

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11127

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub58 = sub i64 %19, 1, !dbg !11127
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11127
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11127
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11127

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11127

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub63 = sub i64 %20, 1, !dbg !11127
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11127
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11127
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11127

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11127

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub68 = sub i64 %21, 1, !dbg !11127
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11127
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11127
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11127

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11127

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub73 = sub i64 %22, 1, !dbg !11127
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11127
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11127
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11127

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11127

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub78 = sub i64 %23, 1, !dbg !11127
  %and79 = and i64 %sub78, 562949953421312, !dbg !11127
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11127
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11127

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11127

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub83 = sub i64 %24, 1, !dbg !11127
  %and84 = and i64 %sub83, 281474976710656, !dbg !11127
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11127
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11127

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11127

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub88 = sub i64 %25, 1, !dbg !11127
  %and89 = and i64 %sub88, 140737488355328, !dbg !11127
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11127
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11127

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11127

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub93 = sub i64 %26, 1, !dbg !11127
  %and94 = and i64 %sub93, 70368744177664, !dbg !11127
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11127
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11127

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11127

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub98 = sub i64 %27, 1, !dbg !11127
  %and99 = and i64 %sub98, 35184372088832, !dbg !11127
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11127
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11127

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11127

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub103 = sub i64 %28, 1, !dbg !11127
  %and104 = and i64 %sub103, 17592186044416, !dbg !11127
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11127
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11127

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11127

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub108 = sub i64 %29, 1, !dbg !11127
  %and109 = and i64 %sub108, 8796093022208, !dbg !11127
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11127
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11127

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11127

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub113 = sub i64 %30, 1, !dbg !11127
  %and114 = and i64 %sub113, 4398046511104, !dbg !11127
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11127
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11127

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11127

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub118 = sub i64 %31, 1, !dbg !11127
  %and119 = and i64 %sub118, 2199023255552, !dbg !11127
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11127
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11127

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11127

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub123 = sub i64 %32, 1, !dbg !11127
  %and124 = and i64 %sub123, 1099511627776, !dbg !11127
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11127
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11127

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11127

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub128 = sub i64 %33, 1, !dbg !11127
  %and129 = and i64 %sub128, 549755813888, !dbg !11127
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11127
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11127

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11127

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub133 = sub i64 %34, 1, !dbg !11127
  %and134 = and i64 %sub133, 274877906944, !dbg !11127
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11127
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11127

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11127

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub138 = sub i64 %35, 1, !dbg !11127
  %and139 = and i64 %sub138, 137438953472, !dbg !11127
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11127
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11127

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11127

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub143 = sub i64 %36, 1, !dbg !11127
  %and144 = and i64 %sub143, 68719476736, !dbg !11127
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11127
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11127

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11127

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub148 = sub i64 %37, 1, !dbg !11127
  %and149 = and i64 %sub148, 34359738368, !dbg !11127
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11127
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11127

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11127

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub153 = sub i64 %38, 1, !dbg !11127
  %and154 = and i64 %sub153, 17179869184, !dbg !11127
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11127
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11127

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11127

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub158 = sub i64 %39, 1, !dbg !11127
  %and159 = and i64 %sub158, 8589934592, !dbg !11127
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11127
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11127

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11127

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub163 = sub i64 %40, 1, !dbg !11127
  %and164 = and i64 %sub163, 4294967296, !dbg !11127
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11127
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11127

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11127

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub168 = sub i64 %41, 1, !dbg !11127
  %and169 = and i64 %sub168, 2147483648, !dbg !11127
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11127
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11127

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11127

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub173 = sub i64 %42, 1, !dbg !11127
  %and174 = and i64 %sub173, 1073741824, !dbg !11127
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11127
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11127

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11127

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub178 = sub i64 %43, 1, !dbg !11127
  %and179 = and i64 %sub178, 536870912, !dbg !11127
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11127
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11127

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11127

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub183 = sub i64 %44, 1, !dbg !11127
  %and184 = and i64 %sub183, 268435456, !dbg !11127
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11127
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11127

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11127

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub188 = sub i64 %45, 1, !dbg !11127
  %and189 = and i64 %sub188, 134217728, !dbg !11127
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11127
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11127

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11127

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub193 = sub i64 %46, 1, !dbg !11127
  %and194 = and i64 %sub193, 67108864, !dbg !11127
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11127
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11127

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11127

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub198 = sub i64 %47, 1, !dbg !11127
  %and199 = and i64 %sub198, 33554432, !dbg !11127
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11127
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11127

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11127

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub203 = sub i64 %48, 1, !dbg !11127
  %and204 = and i64 %sub203, 16777216, !dbg !11127
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11127
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11127

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11127

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub208 = sub i64 %49, 1, !dbg !11127
  %and209 = and i64 %sub208, 8388608, !dbg !11127
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11127
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11127

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11127

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub213 = sub i64 %50, 1, !dbg !11127
  %and214 = and i64 %sub213, 4194304, !dbg !11127
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11127
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11127

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11127

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub218 = sub i64 %51, 1, !dbg !11127
  %and219 = and i64 %sub218, 2097152, !dbg !11127
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11127
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11127

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11127

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub223 = sub i64 %52, 1, !dbg !11127
  %and224 = and i64 %sub223, 1048576, !dbg !11127
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11127
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11127

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11127

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub228 = sub i64 %53, 1, !dbg !11127
  %and229 = and i64 %sub228, 524288, !dbg !11127
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11127
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11127

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11127

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub233 = sub i64 %54, 1, !dbg !11127
  %and234 = and i64 %sub233, 262144, !dbg !11127
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11127
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11127

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11127

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub238 = sub i64 %55, 1, !dbg !11127
  %and239 = and i64 %sub238, 131072, !dbg !11127
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11127
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11127

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11127

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub243 = sub i64 %56, 1, !dbg !11127
  %and244 = and i64 %sub243, 65536, !dbg !11127
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11127
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11127

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11127

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub248 = sub i64 %57, 1, !dbg !11127
  %and249 = and i64 %sub248, 32768, !dbg !11127
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11127
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11127

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11127

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub253 = sub i64 %58, 1, !dbg !11127
  %and254 = and i64 %sub253, 16384, !dbg !11127
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11127
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11127

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11127

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub258 = sub i64 %59, 1, !dbg !11127
  %and259 = and i64 %sub258, 8192, !dbg !11127
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11127
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11127

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11127

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub263 = sub i64 %60, 1, !dbg !11127
  %and264 = and i64 %sub263, 4096, !dbg !11127
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11127
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11127

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11127

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub268 = sub i64 %61, 1, !dbg !11127
  %and269 = and i64 %sub268, 2048, !dbg !11127
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11127
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11127

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11127

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub273 = sub i64 %62, 1, !dbg !11127
  %and274 = and i64 %sub273, 1024, !dbg !11127
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11127
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11127

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11127

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub278 = sub i64 %63, 1, !dbg !11127
  %and279 = and i64 %sub278, 512, !dbg !11127
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11127
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11127

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11127

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub283 = sub i64 %64, 1, !dbg !11127
  %and284 = and i64 %sub283, 256, !dbg !11127
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11127
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11127

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11127

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub288 = sub i64 %65, 1, !dbg !11127
  %and289 = and i64 %sub288, 128, !dbg !11127
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11127
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11127

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11127

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub293 = sub i64 %66, 1, !dbg !11127
  %and294 = and i64 %sub293, 64, !dbg !11127
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11127
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11127

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11127

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub298 = sub i64 %67, 1, !dbg !11127
  %and299 = and i64 %sub298, 32, !dbg !11127
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11127
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11127

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11127

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub303 = sub i64 %68, 1, !dbg !11127
  %and304 = and i64 %sub303, 16, !dbg !11127
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11127
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11127

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11127

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub308 = sub i64 %69, 1, !dbg !11127
  %and309 = and i64 %sub308, 8, !dbg !11127
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11127
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11127

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11127

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub313 = sub i64 %70, 1, !dbg !11127
  %and314 = and i64 %sub313, 4, !dbg !11127
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11127
  %71 = zext i1 %tobool315 to i64, !dbg !11127
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11127
  br label %cond.end, !dbg !11127

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11127
  br label %cond.end317, !dbg !11127

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11127
  br label %cond.end319, !dbg !11127

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11127
  br label %cond.end321, !dbg !11127

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11127
  br label %cond.end323, !dbg !11127

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11127
  br label %cond.end325, !dbg !11127

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11127
  br label %cond.end327, !dbg !11127

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11127
  br label %cond.end329, !dbg !11127

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11127
  br label %cond.end331, !dbg !11127

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11127
  br label %cond.end333, !dbg !11127

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11127
  br label %cond.end335, !dbg !11127

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11127
  br label %cond.end337, !dbg !11127

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11127
  br label %cond.end339, !dbg !11127

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11127
  br label %cond.end341, !dbg !11127

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11127
  br label %cond.end343, !dbg !11127

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11127
  br label %cond.end345, !dbg !11127

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11127
  br label %cond.end347, !dbg !11127

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11127
  br label %cond.end349, !dbg !11127

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11127
  br label %cond.end351, !dbg !11127

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11127
  br label %cond.end353, !dbg !11127

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11127
  br label %cond.end355, !dbg !11127

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11127
  br label %cond.end357, !dbg !11127

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11127
  br label %cond.end359, !dbg !11127

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11127
  br label %cond.end361, !dbg !11127

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11127
  br label %cond.end363, !dbg !11127

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11127
  br label %cond.end365, !dbg !11127

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11127
  br label %cond.end367, !dbg !11127

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11127
  br label %cond.end369, !dbg !11127

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11127
  br label %cond.end371, !dbg !11127

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11127
  br label %cond.end373, !dbg !11127

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11127
  br label %cond.end375, !dbg !11127

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11127
  br label %cond.end377, !dbg !11127

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11127
  br label %cond.end379, !dbg !11127

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11127
  br label %cond.end381, !dbg !11127

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11127
  br label %cond.end383, !dbg !11127

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11127
  br label %cond.end385, !dbg !11127

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11127
  br label %cond.end387, !dbg !11127

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11127
  br label %cond.end389, !dbg !11127

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11127
  br label %cond.end391, !dbg !11127

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11127
  br label %cond.end393, !dbg !11127

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11127
  br label %cond.end395, !dbg !11127

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11127
  br label %cond.end397, !dbg !11127

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11127
  br label %cond.end399, !dbg !11127

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11127
  br label %cond.end401, !dbg !11127

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11127
  br label %cond.end403, !dbg !11127

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11127
  br label %cond.end405, !dbg !11127

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11127
  br label %cond.end407, !dbg !11127

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11127
  br label %cond.end409, !dbg !11127

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11127
  br label %cond.end411, !dbg !11127

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11127
  br label %cond.end413, !dbg !11127

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11127
  br label %cond.end415, !dbg !11127

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11127
  br label %cond.end417, !dbg !11127

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11127
  br label %cond.end419, !dbg !11127

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11127
  br label %cond.end421, !dbg !11127

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11127
  br label %cond.end423, !dbg !11127

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11127
  br label %cond.end425, !dbg !11127

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11127
  br label %cond.end427, !dbg !11127

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11127
  br label %cond.end429, !dbg !11127

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11127
  br label %cond.end431, !dbg !11127

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11127
  br label %cond.end433, !dbg !11127

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11127
  br label %cond.end435, !dbg !11127

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11127
  br label %cond.end437, !dbg !11127

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11127
  br label %cond.end440, !dbg !11127

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11127

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11127
  br label %cond.end444, !dbg !11127

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11127
  %sub443 = sub i64 %72, 1, !dbg !11127
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !11127
  br label %cond.end444, !dbg !11127

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11127
  %sub446 = sub i32 %cond445, 12, !dbg !11128
  %add = add i32 %sub446, 1, !dbg !11129
  store i32 %add, i32* %retval, align 4, !dbg !11130
  br label %return, !dbg !11130

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11131
  %dec = add i64 %73, -1, !dbg !11131
  store i64 %dec, i64* %size.addr, align 8, !dbg !11131
  %74 = load i64, i64* %size.addr, align 8, !dbg !11132
  %shr = lshr i64 %74, 12, !dbg !11132
  store i64 %shr, i64* %size.addr, align 8, !dbg !11132
  %75 = load i64, i64* %size.addr, align 8, !dbg !11133
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11110
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11134
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11135
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #4, !dbg !11134, !srcloc !11136
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11134
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11137
  %add.i = add i32 %79, 1, !dbg !11138
  store i32 %add.i, i32* %retval, align 4, !dbg !11139
  br label %return, !dbg !11139

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11140
  ret i32 %80, !dbg !11140
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #11 !dbg !11141 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11103, metadata !DIExpression()), !dbg !11145
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11109, metadata !DIExpression()), !dbg !11147
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11148, metadata !DIExpression()), !dbg !11149
  %0 = load i64, i64* %n.addr, align 8, !dbg !11150
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11147
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11151
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11152
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #4, !dbg !11151, !srcloc !11136
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11151
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11153
  %add.i = add i32 %4, 1, !dbg !11154
  %sub = sub i32 %add.i, 1, !dbg !11155
  ret i32 %sub, !dbg !11156
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !11157 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11161, metadata !DIExpression()), !dbg !11162
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11163, metadata !DIExpression()), !dbg !11164
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11165, metadata !DIExpression()), !dbg !11166
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11167, metadata !DIExpression()), !dbg !11168
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11169
  ret i8* %0, !dbg !11170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_port_destruct(%struct.tty_port* %port) #0 !dbg !11171 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %vc = alloca %struct.vc_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.vc_data*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !11172, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !11174, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11176, metadata !DIExpression()), !dbg !11178
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11178
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !11178
  store i8* %1, i8** %__mptr, align 8, !dbg !11178
  br label %do.body, !dbg !11178

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11179

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11178
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !11178
  %3 = bitcast i8* %add.ptr to %struct.vc_data*, !dbg !11178
  store %struct.vc_data* %3, %struct.vc_data** %tmp, align 8, !dbg !11179
  %4 = load %struct.vc_data*, %struct.vc_data** %tmp, align 8, !dbg !11178
  store %struct.vc_data* %4, %struct.vc_data** %vc, align 8, !dbg !11175
  %5 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11181
  %6 = bitcast %struct.vc_data* %5 to i8*, !dbg !11181
  call void @kfree(i8* %6) #13, !dbg !11182
  ret void, !dbg !11183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__module_get(%struct.module* %module) #0 !dbg !11184 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !11185, metadata !DIExpression()), !dbg !11186
  ret void, !dbg !11187
}

; Function Attrs: noredzone
declare dso_local void @con_free_unimap(%struct.vc_data*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @resize_screen(%struct.vc_data* %vc, i32 %width, i32 %height, i32 %user) #0 !dbg !11188 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %user.addr = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11191, metadata !DIExpression()), !dbg !11192
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !11193, metadata !DIExpression()), !dbg !11194
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !11195, metadata !DIExpression()), !dbg !11196
  store i32 %user, i32* %user.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %user.addr, metadata !11197, metadata !DIExpression()), !dbg !11198
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11199, metadata !DIExpression()), !dbg !11200
  store i32 0, i32* %err, align 4, !dbg !11200
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11201
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 16, !dbg !11203
  %1 = load i8, i8* %vc_mode, align 4, !dbg !11203
  %conv = zext i8 %1 to i32, !dbg !11201
  %cmp = icmp ne i32 %conv, 1, !dbg !11204
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11205

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11206
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 13, !dbg !11207
  %3 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !11207
  %con_resize = getelementptr inbounds %struct.consw, %struct.consw* %3, i32 0, i32 15, !dbg !11208
  %4 = load i32 (%struct.vc_data*, i32, i32, i32)*, i32 (%struct.vc_data*, i32, i32, i32)** %con_resize, align 8, !dbg !11208
  %tobool = icmp ne i32 (%struct.vc_data*, i32, i32, i32)* %4, null, !dbg !11206
  br i1 %tobool, label %if.then, label %if.end, !dbg !11209

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11210
  %vc_sw2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 13, !dbg !11211
  %6 = load %struct.consw*, %struct.consw** %vc_sw2, align 8, !dbg !11211
  %con_resize3 = getelementptr inbounds %struct.consw, %struct.consw* %6, i32 0, i32 15, !dbg !11212
  %7 = load i32 (%struct.vc_data*, i32, i32, i32)*, i32 (%struct.vc_data*, i32, i32, i32)** %con_resize3, align 8, !dbg !11212
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11213
  %9 = load i32, i32* %width.addr, align 4, !dbg !11214
  %10 = load i32, i32* %height.addr, align 4, !dbg !11215
  %11 = load i32, i32* %user.addr, align 4, !dbg !11216
  %call = call i32 %7(%struct.vc_data* %8, i32 %9, i32 %10, i32 %11) #13, !dbg !11210
  store i32 %call, i32* %err, align 4, !dbg !11217
  br label %if.end, !dbg !11218

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %12 = load i32, i32* %err, align 4, !dbg !11219
  ret i32 %12, !dbg !11220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_uniscr_free(%struct.uni_screen* %uniscr) #0 !dbg !11221 {
entry:
  %uniscr.addr = alloca %struct.uni_screen*, align 8
  store %struct.uni_screen* %uniscr, %struct.uni_screen** %uniscr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr.addr, metadata !11224, metadata !DIExpression()), !dbg !11225
  %0 = load %struct.uni_screen*, %struct.uni_screen** %uniscr.addr, align 8, !dbg !11226
  %1 = bitcast %struct.uni_screen* %0 to i8*, !dbg !11226
  call void @vfree(i8* %1) #13, !dbg !11227
  ret void, !dbg !11228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_uniscr_copy_area(%struct.uni_screen* %dst, i32 %dst_cols, i32 %dst_rows, %struct.uni_screen* %src, i32 %src_cols, i32 %src_top_row, i32 %src_bot_row) #0 !dbg !11229 {
entry:
  %dst.addr = alloca %struct.uni_screen*, align 8
  %dst_cols.addr = alloca i32, align 4
  %dst_rows.addr = alloca i32, align 4
  %src.addr = alloca %struct.uni_screen*, align 8
  %src_cols.addr = alloca i32, align 4
  %src_top_row.addr = alloca i32, align 4
  %src_bot_row.addr = alloca i32, align 4
  %dst_row = alloca i32, align 4
  %src_line = alloca i32*, align 8
  %dst_line = alloca i32*, align 8
  %dst_line14 = alloca i32*, align 8
  store %struct.uni_screen* %dst, %struct.uni_screen** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %dst.addr, metadata !11232, metadata !DIExpression()), !dbg !11233
  store i32 %dst_cols, i32* %dst_cols.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_cols.addr, metadata !11234, metadata !DIExpression()), !dbg !11235
  store i32 %dst_rows, i32* %dst_rows.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_rows.addr, metadata !11236, metadata !DIExpression()), !dbg !11237
  store %struct.uni_screen* %src, %struct.uni_screen** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %src.addr, metadata !11238, metadata !DIExpression()), !dbg !11239
  store i32 %src_cols, i32* %src_cols.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_cols.addr, metadata !11240, metadata !DIExpression()), !dbg !11241
  store i32 %src_top_row, i32* %src_top_row.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_top_row.addr, metadata !11242, metadata !DIExpression()), !dbg !11243
  store i32 %src_bot_row, i32* %src_bot_row.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_bot_row.addr, metadata !11244, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.declare(metadata i32* %dst_row, metadata !11246, metadata !DIExpression()), !dbg !11247
  store i32 0, i32* %dst_row, align 4, !dbg !11247
  %0 = load %struct.uni_screen*, %struct.uni_screen** %dst.addr, align 8, !dbg !11248
  %tobool = icmp ne %struct.uni_screen* %0, null, !dbg !11248
  br i1 %tobool, label %if.end, label %if.then, !dbg !11250

if.then:                                          ; preds = %entry
  br label %while.end21, !dbg !11251

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !11252

while.cond:                                       ; preds = %if.end8, %if.end
  %1 = load i32, i32* %src_top_row.addr, align 4, !dbg !11253
  %2 = load i32, i32* %src_bot_row.addr, align 4, !dbg !11254
  %cmp = icmp ult i32 %1, %2, !dbg !11255
  br i1 %cmp, label %while.body, label %while.end, !dbg !11252

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32** %src_line, metadata !11256, metadata !DIExpression()), !dbg !11258
  %3 = load %struct.uni_screen*, %struct.uni_screen** %src.addr, align 8, !dbg !11259
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %3, i32 0, i32 0, !dbg !11260
  %4 = load i32, i32* %src_top_row.addr, align 4, !dbg !11261
  %idxprom = zext i32 %4 to i64, !dbg !11259
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines, i64 0, i64 %idxprom, !dbg !11259
  %5 = load i32*, i32** %arrayidx, align 8, !dbg !11259
  store i32* %5, i32** %src_line, align 8, !dbg !11258
  call void @llvm.dbg.declare(metadata i32** %dst_line, metadata !11262, metadata !DIExpression()), !dbg !11263
  %6 = load %struct.uni_screen*, %struct.uni_screen** %dst.addr, align 8, !dbg !11264
  %lines1 = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %6, i32 0, i32 0, !dbg !11265
  %7 = load i32, i32* %dst_row, align 4, !dbg !11266
  %idxprom2 = zext i32 %7 to i64, !dbg !11264
  %arrayidx3 = getelementptr [0 x i32*], [0 x i32*]* %lines1, i64 0, i64 %idxprom2, !dbg !11264
  %8 = load i32*, i32** %arrayidx3, align 8, !dbg !11264
  store i32* %8, i32** %dst_line, align 8, !dbg !11263
  %9 = load i32*, i32** %dst_line, align 8, !dbg !11267
  %10 = bitcast i32* %9 to i8*, !dbg !11268
  %11 = load i32*, i32** %src_line, align 8, !dbg !11269
  %12 = bitcast i32* %11 to i8*, !dbg !11268
  %13 = load i32, i32* %src_cols.addr, align 4, !dbg !11270
  %conv = zext i32 %13 to i64, !dbg !11270
  %mul = mul i64 %conv, 4, !dbg !11271
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %12, i64 %mul, i1 false), !dbg !11268
  %14 = load i32, i32* %dst_cols.addr, align 4, !dbg !11272
  %15 = load i32, i32* %src_cols.addr, align 4, !dbg !11274
  %sub = sub i32 %14, %15, !dbg !11275
  %tobool4 = icmp ne i32 %sub, 0, !dbg !11275
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !11276

if.then5:                                         ; preds = %while.body
  %16 = load i32*, i32** %dst_line, align 8, !dbg !11277
  %17 = load i32, i32* %src_cols.addr, align 4, !dbg !11278
  %idx.ext = zext i32 %17 to i64, !dbg !11279
  %add.ptr = getelementptr i32, i32* %16, i64 %idx.ext, !dbg !11279
  %18 = load i32, i32* %dst_cols.addr, align 4, !dbg !11280
  %19 = load i32, i32* %src_cols.addr, align 4, !dbg !11281
  %sub6 = sub i32 %18, %19, !dbg !11282
  %conv7 = zext i32 %sub6 to i64, !dbg !11280
  %call = call i8* @memset32(i32* %add.ptr, i32 32, i64 %conv7) #13, !dbg !11283
  br label %if.end8, !dbg !11283

if.end8:                                          ; preds = %if.then5, %while.body
  %20 = load i32, i32* %src_top_row.addr, align 4, !dbg !11284
  %inc = add i32 %20, 1, !dbg !11284
  store i32 %inc, i32* %src_top_row.addr, align 4, !dbg !11284
  %21 = load i32, i32* %dst_row, align 4, !dbg !11285
  %inc9 = add i32 %21, 1, !dbg !11285
  store i32 %inc9, i32* %dst_row, align 4, !dbg !11285
  br label %while.cond, !dbg !11252, !llvm.loop !11286

while.end:                                        ; preds = %while.cond
  br label %while.cond10, !dbg !11288

while.cond10:                                     ; preds = %while.body13, %while.end
  %22 = load i32, i32* %dst_row, align 4, !dbg !11289
  %23 = load i32, i32* %dst_rows.addr, align 4, !dbg !11290
  %cmp11 = icmp ult i32 %22, %23, !dbg !11291
  br i1 %cmp11, label %while.body13, label %while.end21, !dbg !11288

while.body13:                                     ; preds = %while.cond10
  call void @llvm.dbg.declare(metadata i32** %dst_line14, metadata !11292, metadata !DIExpression()), !dbg !11294
  %24 = load %struct.uni_screen*, %struct.uni_screen** %dst.addr, align 8, !dbg !11295
  %lines15 = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %24, i32 0, i32 0, !dbg !11296
  %25 = load i32, i32* %dst_row, align 4, !dbg !11297
  %idxprom16 = zext i32 %25 to i64, !dbg !11295
  %arrayidx17 = getelementptr [0 x i32*], [0 x i32*]* %lines15, i64 0, i64 %idxprom16, !dbg !11295
  %26 = load i32*, i32** %arrayidx17, align 8, !dbg !11295
  store i32* %26, i32** %dst_line14, align 8, !dbg !11294
  %27 = load i32*, i32** %dst_line14, align 8, !dbg !11298
  %28 = load i32, i32* %dst_cols.addr, align 4, !dbg !11299
  %conv18 = zext i32 %28 to i64, !dbg !11299
  %call19 = call i8* @memset32(i32* %27, i32 32, i64 %conv18) #13, !dbg !11300
  %29 = load i32, i32* %dst_row, align 4, !dbg !11301
  %inc20 = add i32 %29, 1, !dbg !11301
  store i32 %inc20, i32* %dst_row, align 4, !dbg !11301
  br label %while.cond10, !dbg !11288, !llvm.loop !11302

while.end21:                                      ; preds = %if.then, %while.cond10
  ret void, !dbg !11304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scr_memcpyw(i16* %d, i16* %s, i32 %count) #0 !dbg !11305 {
entry:
  %d.addr = alloca i16*, align 8
  %s.addr = alloca i16*, align 8
  %count.addr = alloca i32, align 4
  store i16* %d, i16** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %d.addr, metadata !11309, metadata !DIExpression()), !dbg !11310
  store i16* %s, i16** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s.addr, metadata !11311, metadata !DIExpression()), !dbg !11312
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !11313, metadata !DIExpression()), !dbg !11314
  %0 = load i16*, i16** %d.addr, align 8, !dbg !11315
  %1 = bitcast i16* %0 to i8*, !dbg !11316
  %2 = load i16*, i16** %s.addr, align 8, !dbg !11317
  %3 = bitcast i16* %2 to i8*, !dbg !11316
  %4 = load i32, i32* %count.addr, align 4, !dbg !11318
  %conv = zext i32 %4 to i64, !dbg !11318
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1, i8* align 2 %3, i64 %conv, i1 false), !dbg !11316
  ret void, !dbg !11319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scr_memsetw(i16* %s, i16 zeroext %c, i32 %count) #0 !dbg !11320 {
entry:
  %s.addr = alloca i16*, align 8
  %c.addr = alloca i16, align 2
  %count.addr = alloca i32, align 4
  store i16* %s, i16** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s.addr, metadata !11323, metadata !DIExpression()), !dbg !11324
  store i16 %c, i16* %c.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %c.addr, metadata !11325, metadata !DIExpression()), !dbg !11326
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !11327, metadata !DIExpression()), !dbg !11328
  %0 = load i16*, i16** %s.addr, align 8, !dbg !11329
  %1 = load i16, i16* %c.addr, align 2, !dbg !11330
  %2 = load i32, i32* %count.addr, align 4, !dbg !11331
  %div = udiv i32 %2, 2, !dbg !11332
  %conv = zext i32 %div to i64, !dbg !11331
  %call = call i8* @memset16(i16* %0, i16 zeroext %1, i64 %conv) #13, !dbg !11333
  ret void, !dbg !11334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @save_cur(%struct.vc_data* %vc) #0 !dbg !11335 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11336, metadata !DIExpression()), !dbg !11337
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11338
  %saved_state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 2, !dbg !11339
  %1 = bitcast %struct.vc_state* %saved_state to i8*, !dbg !11340
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11341
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 1, !dbg !11342
  %3 = bitcast %struct.vc_state* %state to i8*, !dbg !11340
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 8 %3, i64 20, i1 false), !dbg !11340
  ret void, !dbg !11343
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local i32 @tty_do_resize(%struct.tty_struct*, %struct.winsize*) #2

; Function Attrs: noredzone
declare dso_local void @vfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @memset32(i32* %s, i32 %v, i64 %n) #0 !dbg !11344 {
entry:
  %s.addr = alloca i32*, align 8
  %v.addr = alloca i32, align 4
  %n.addr = alloca i64, align 8
  %d0 = alloca i64, align 8
  %d1 = alloca i64, align 8
  store i32* %s, i32** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %s.addr, metadata !11348, metadata !DIExpression()), !dbg !11349
  store i32 %v, i32* %v.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v.addr, metadata !11350, metadata !DIExpression()), !dbg !11351
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11352, metadata !DIExpression()), !dbg !11353
  call void @llvm.dbg.declare(metadata i64* %d0, metadata !11354, metadata !DIExpression()), !dbg !11355
  call void @llvm.dbg.declare(metadata i64* %d1, metadata !11356, metadata !DIExpression()), !dbg !11357
  %0 = load i32, i32* %v.addr, align 4, !dbg !11358
  %1 = load i32*, i32** %s.addr, align 8, !dbg !11359
  %2 = load i64, i64* %n.addr, align 8, !dbg !11360
  %3 = call { i64, i64 } asm sideeffect "rep\0A\09stosl", "=&{cx},=&{di},{ax},1,0,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %1, i64 %2) #5, !dbg !11361, !srcloc !11362
  %asmresult = extractvalue { i64, i64 } %3, 0, !dbg !11361
  %asmresult1 = extractvalue { i64, i64 } %3, 1, !dbg !11361
  store i64 %asmresult, i64* %d0, align 8, !dbg !11361
  store i64 %asmresult1, i64* %d1, align 8, !dbg !11361
  %4 = load i32*, i32** %s.addr, align 8, !dbg !11363
  %5 = bitcast i32* %4 to i8*, !dbg !11363
  ret i8* %5, !dbg !11364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @memset16(i16* %s, i16 zeroext %v, i64 %n) #0 !dbg !11365 {
entry:
  %s.addr = alloca i16*, align 8
  %v.addr = alloca i16, align 2
  %n.addr = alloca i64, align 8
  %d0 = alloca i64, align 8
  %d1 = alloca i64, align 8
  store i16* %s, i16** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s.addr, metadata !11370, metadata !DIExpression()), !dbg !11371
  store i16 %v, i16* %v.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %v.addr, metadata !11372, metadata !DIExpression()), !dbg !11373
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11374, metadata !DIExpression()), !dbg !11375
  call void @llvm.dbg.declare(metadata i64* %d0, metadata !11376, metadata !DIExpression()), !dbg !11377
  call void @llvm.dbg.declare(metadata i64* %d1, metadata !11378, metadata !DIExpression()), !dbg !11379
  %0 = load i16, i16* %v.addr, align 2, !dbg !11380
  %1 = load i16*, i16** %s.addr, align 8, !dbg !11381
  %2 = load i64, i64* %n.addr, align 8, !dbg !11382
  %3 = call { i64, i64 } asm sideeffect "rep\0A\09stosw", "=&{cx},=&{di},{ax},1,0,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %1, i64 %2) #5, !dbg !11383, !srcloc !11384
  %asmresult = extractvalue { i64, i64 } %3, 0, !dbg !11383
  %asmresult1 = extractvalue { i64, i64 } %3, 1, !dbg !11383
  store i64 %asmresult, i64* %d0, align 8, !dbg !11383
  store i64 %asmresult1, i64* %d1, align 8, !dbg !11383
  %4 = load i16*, i16** %s.addr, align 8, !dbg !11385
  %5 = bitcast i16* %4 to i8*, !dbg !11385
  ret i8* %5, !dbg !11386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_insert_flip_string(%struct.tty_port* %port, i8* %chars, i64 %size) #0 !dbg !11387 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %chars.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !11391, metadata !DIExpression()), !dbg !11392
  store i8* %chars, i8** %chars.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %chars.addr, metadata !11393, metadata !DIExpression()), !dbg !11394
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11395, metadata !DIExpression()), !dbg !11396
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11397
  %1 = load i8*, i8** %chars.addr, align 8, !dbg !11398
  %2 = load i64, i64* %size.addr, align 8, !dbg !11399
  %call = call i32 @tty_insert_flip_string_fixed_flag(%struct.tty_port* %0, i8* %1, i8 signext 0, i64 %2) #13, !dbg !11400
  ret i32 %call, !dbg !11401
}

; Function Attrs: noredzone
declare dso_local void @tty_schedule_flip(%struct.tty_port*) #2

; Function Attrs: noredzone
declare dso_local i32 @tty_insert_flip_string_fixed_flag(%struct.tty_port*, i8*, i8 signext, i64) #2

; Function Attrs: noredzone
declare dso_local void @reset_vc(%struct.vc_data*) #2

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reset_terminal(%struct.vc_data* %vc, i32 %do_clear) #0 !dbg !11402 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %do_clear.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11403, metadata !DIExpression()), !dbg !11404
  store i32 %do_clear, i32* %do_clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %do_clear.addr, metadata !11405, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11407, metadata !DIExpression()), !dbg !11408
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11409
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 11, !dbg !11410
  store i32 0, i32* %vc_top, align 8, !dbg !11411
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11412
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 5, !dbg !11413
  %2 = load i32, i32* %vc_rows, align 8, !dbg !11413
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11414
  %vc_bottom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 12, !dbg !11415
  store i32 %2, i32* %vc_bottom, align 4, !dbg !11416
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11417
  %vc_state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 29, !dbg !11418
  store i32 0, i32* %vc_state, align 4, !dbg !11419
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11420
  %vc_priv = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 36, !dbg !11421
  %bf.load = load i16, i16* %vc_priv, align 8, !dbg !11422
  %bf.clear = and i16 %bf.load, -897, !dbg !11422
  store i16 %bf.clear, i16* %vc_priv, align 8, !dbg !11422
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11423
  %call = call i16* @set_translate(i32 0, %struct.vc_data* %6) #13, !dbg !11424
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11425
  %vc_translate = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 41, !dbg !11426
  store i16* %call, i16** %vc_translate, align 8, !dbg !11427
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11428
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 1, !dbg !11429
  %Gx_charset = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 3, !dbg !11430
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %Gx_charset, i64 0, i64 0, !dbg !11428
  store i8 0, i8* %arrayidx, align 1, !dbg !11431
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11432
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 1, !dbg !11433
  %Gx_charset2 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 3, !dbg !11434
  %arrayidx3 = getelementptr [2 x i8], [2 x i8]* %Gx_charset2, i64 0, i64 1, !dbg !11432
  store i8 1, i8* %arrayidx3, align 1, !dbg !11435
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11436
  %state4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 1, !dbg !11437
  %charset = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state4, i32 0, i32 4, !dbg !11438
  %bf.load5 = load i8, i8* %charset, align 1, !dbg !11439
  %bf.clear6 = and i8 %bf.load5, -2, !dbg !11439
  store i8 %bf.clear6, i8* %charset, align 1, !dbg !11439
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11440
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 36, !dbg !11441
  %bf.load7 = load i16, i16* %vc_need_wrap, align 8, !dbg !11442
  %bf.clear8 = and i16 %bf.load7, -1025, !dbg !11442
  store i16 %bf.clear8, i16* %vc_need_wrap, align 8, !dbg !11442
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11443
  %vc_report_mouse = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 36, !dbg !11444
  %bf.load9 = load i16, i16* %vc_report_mouse, align 8, !dbg !11445
  %bf.clear10 = and i16 %bf.load9, -12289, !dbg !11445
  store i16 %bf.clear10, i16* %vc_report_mouse, align 8, !dbg !11445
  %13 = load i32, i32* @default_utf8, align 4, !dbg !11446
  %conv = trunc i32 %13 to i8, !dbg !11446
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11447
  %vc_utf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 36, !dbg !11448
  %15 = zext i8 %conv to i16, !dbg !11449
  %bf.load11 = load i16, i16* %vc_utf, align 8, !dbg !11449
  %bf.value = and i16 %15, 1, !dbg !11449
  %bf.shl = shl i16 %bf.value, 14, !dbg !11449
  %bf.clear12 = and i16 %bf.load11, -16385, !dbg !11449
  %bf.set = or i16 %bf.clear12, %bf.shl, !dbg !11449
  store i16 %bf.set, i16* %vc_utf, align 8, !dbg !11449
  %bf.result.cast = trunc i16 %bf.value to i8, !dbg !11449
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11450
  %vc_utf_count = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 37, !dbg !11451
  store i8 0, i8* %vc_utf_count, align 2, !dbg !11452
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11453
  %vc_disp_ctrl = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 36, !dbg !11454
  %bf.load13 = load i16, i16* %vc_disp_ctrl, align 8, !dbg !11455
  %bf.clear14 = and i16 %bf.load13, -2, !dbg !11455
  store i16 %bf.clear14, i16* %vc_disp_ctrl, align 8, !dbg !11455
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11456
  %vc_toggle_meta = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 36, !dbg !11457
  %bf.load15 = load i16, i16* %vc_toggle_meta, align 8, !dbg !11458
  %bf.clear16 = and i16 %bf.load15, -3, !dbg !11458
  store i16 %bf.clear16, i16* %vc_toggle_meta, align 8, !dbg !11458
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11459
  %vc_decscnm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 36, !dbg !11460
  %bf.load17 = load i16, i16* %vc_decscnm, align 8, !dbg !11461
  %bf.clear18 = and i16 %bf.load17, -5, !dbg !11461
  store i16 %bf.clear18, i16* %vc_decscnm, align 8, !dbg !11461
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11462
  %vc_decom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 36, !dbg !11463
  %bf.load19 = load i16, i16* %vc_decom, align 8, !dbg !11464
  %bf.clear20 = and i16 %bf.load19, -9, !dbg !11464
  store i16 %bf.clear20, i16* %vc_decom, align 8, !dbg !11464
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11465
  %vc_decawm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 36, !dbg !11466
  %bf.load21 = load i16, i16* %vc_decawm, align 8, !dbg !11467
  %bf.clear22 = and i16 %bf.load21, -17, !dbg !11467
  %bf.set23 = or i16 %bf.clear22, 16, !dbg !11467
  store i16 %bf.set23, i16* %vc_decawm, align 8, !dbg !11467
  %22 = load i32, i32* @global_cursor_default, align 4, !dbg !11468
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11469
  %vc_deccm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 36, !dbg !11470
  %24 = trunc i32 %22 to i16, !dbg !11471
  %bf.load24 = load i16, i16* %vc_deccm, align 8, !dbg !11471
  %bf.value25 = and i16 %24, 1, !dbg !11471
  %bf.shl26 = shl i16 %bf.value25, 5, !dbg !11471
  %bf.clear27 = and i16 %bf.load24, -33, !dbg !11471
  %bf.set28 = or i16 %bf.clear27, %bf.shl26, !dbg !11471
  store i16 %bf.set28, i16* %vc_deccm, align 8, !dbg !11471
  %bf.result.cast29 = zext i16 %bf.value25 to i32, !dbg !11471
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11472
  %vc_decim = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 36, !dbg !11473
  %bf.load30 = load i16, i16* %vc_decim, align 8, !dbg !11474
  %bf.clear31 = and i16 %bf.load30, -65, !dbg !11474
  store i16 %bf.clear31, i16* %vc_decim, align 8, !dbg !11474
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11475
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 3, !dbg !11476
  %27 = load i16, i16* %vc_num, align 8, !dbg !11476
  %conv32 = zext i16 %27 to i32, !dbg !11475
  call void @vt_reset_keyboard(i32 %conv32) #13, !dbg !11477
  %28 = load i32, i32* @cur_default, align 4, !dbg !11478
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11479
  %vc_cursor_type = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 22, !dbg !11480
  store i32 %28, i32* %vc_cursor_type, align 4, !dbg !11481
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11482
  %vc_s_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 24, !dbg !11483
  %31 = load i16, i16* %vc_s_complement_mask, align 2, !dbg !11483
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11484
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 23, !dbg !11485
  store i16 %31, i16* %vc_complement_mask, align 8, !dbg !11486
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11487
  call void @default_attr(%struct.vc_data* %33) #13, !dbg !11488
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11489
  call void @update_attr(%struct.vc_data* %34) #13, !dbg !11490
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11491
  %vc_tab_stop = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 39, !dbg !11492
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %vc_tab_stop, i64 0, i64 0, !dbg !11491
  call void @bitmap_zero(i64* %arraydecay, i32 256) #13, !dbg !11493
  store i32 0, i32* %i, align 4, !dbg !11494
  br label %for.cond, !dbg !11496

for.cond:                                         ; preds = %for.inc, %entry
  %36 = load i32, i32* %i, align 4, !dbg !11497
  %cmp = icmp ult i32 %36, 256, !dbg !11499
  br i1 %cmp, label %for.body, label %for.end, !dbg !11500

for.body:                                         ; preds = %for.cond
  %37 = load i32, i32* %i, align 4, !dbg !11501
  %conv34 = zext i32 %37 to i64, !dbg !11501
  %38 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11502
  %vc_tab_stop35 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %38, i32 0, i32 39, !dbg !11503
  %arraydecay36 = getelementptr inbounds [4 x i64], [4 x i64]* %vc_tab_stop35, i64 0, i64 0, !dbg !11502
  call void @set_bit(i64 %conv34, i64* %arraydecay36) #13, !dbg !11504
  br label %for.inc, !dbg !11504

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !11505
  %add = add i32 %39, 8, !dbg !11505
  store i32 %add, i32* %i, align 4, !dbg !11505
  br label %for.cond, !dbg !11506, !llvm.loop !11507

for.end:                                          ; preds = %for.cond
  %40 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11509
  %vc_bell_pitch = getelementptr inbounds %struct.vc_data, %struct.vc_data* %40, i32 0, i32 43, !dbg !11510
  store i32 750, i32* %vc_bell_pitch, align 4, !dbg !11511
  %41 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11512
  %vc_bell_duration = getelementptr inbounds %struct.vc_data, %struct.vc_data* %41, i32 0, i32 44, !dbg !11513
  store i32 31, i32* %vc_bell_duration, align 8, !dbg !11514
  %42 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11515
  %vc_cur_blink_ms = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 45, !dbg !11516
  store i16 200, i16* %vc_cur_blink_ms, align 4, !dbg !11517
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11518
  call void @gotoxy(%struct.vc_data* %43, i32 0, i32 0) #13, !dbg !11519
  %44 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11520
  call void @save_cur(%struct.vc_data* %44) #13, !dbg !11521
  %45 = load i32, i32* %do_clear.addr, align 4, !dbg !11522
  %tobool = icmp ne i32 %45, 0, !dbg !11522
  br i1 %tobool, label %if.then, label %if.end, !dbg !11524

if.then:                                          ; preds = %for.end
  %46 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11525
  call void @csi_J(%struct.vc_data* %46, i32 2) #13, !dbg !11526
  br label %if.end, !dbg !11526

if.end:                                           ; preds = %if.then, %for.end
  ret void, !dbg !11527
}

; Function Attrs: noredzone
declare dso_local i16* @set_translate(i32, %struct.vc_data*) #2

; Function Attrs: noredzone
declare dso_local void @vt_reset_keyboard(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @default_attr(%struct.vc_data* %vc) #0 !dbg !11528 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11529, metadata !DIExpression()), !dbg !11530
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11531
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 1, !dbg !11532
  %intensity = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 5, !dbg !11533
  store i32 1, i32* %intensity, align 4, !dbg !11534
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11535
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 1, !dbg !11536
  %italic = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 6, !dbg !11537
  store i8 0, i8* %italic, align 8, !dbg !11538
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11539
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 1, !dbg !11540
  %underline = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 7, !dbg !11541
  store i8 0, i8* %underline, align 1, !dbg !11542
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11543
  %state3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 1, !dbg !11544
  %reverse = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state3, i32 0, i32 9, !dbg !11545
  store i8 0, i8* %reverse, align 1, !dbg !11546
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11547
  %state4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 1, !dbg !11548
  %blink = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state4, i32 0, i32 8, !dbg !11549
  store i8 0, i8* %blink, align 2, !dbg !11550
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11551
  %vc_def_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 18, !dbg !11552
  %6 = load i8, i8* %vc_def_color, align 2, !dbg !11552
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11553
  %state5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !11554
  %color = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state5, i32 0, i32 2, !dbg !11555
  store i8 %6, i8* %color, align 8, !dbg !11556
  ret void, !dbg !11557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #0 !dbg !11558 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !11563, metadata !DIExpression()), !dbg !11564
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !11565, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11567, metadata !DIExpression()), !dbg !11568
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !11569
  %conv = zext i32 %0 to i64, !dbg !11569
  %add = add i64 %conv, 64, !dbg !11569
  %sub = sub i64 %add, 1, !dbg !11569
  %div = udiv i64 %sub, 64, !dbg !11569
  %mul = mul i64 %div, 8, !dbg !11570
  %conv1 = trunc i64 %mul to i32, !dbg !11569
  store i32 %conv1, i32* %len, align 4, !dbg !11568
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !11571
  %2 = bitcast i64* %1 to i8*, !dbg !11572
  %3 = load i32, i32* %len, align 4, !dbg !11573
  %conv2 = zext i32 %3 to i64, !dbg !11573
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !11572
  ret void, !dbg !11574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !11575 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11578, metadata !DIExpression()), !dbg !11580
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11582, metadata !DIExpression()), !dbg !11583
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7528, metadata !DIExpression()), !dbg !11584
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7534, metadata !DIExpression()), !dbg !11586
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11587, metadata !DIExpression()), !dbg !11588
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11589, metadata !DIExpression()), !dbg !11590
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11591
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11592
  %div = sdiv i64 %1, 64, !dbg !11592
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11593
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11591
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11594
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11595
  %conv.i = trunc i64 %4 to i32, !dbg !11595
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !11596
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11597
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11597
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !11597
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11598
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11599
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !11600
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #5, !dbg !11602
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !11603

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !11604
  %12 = bitcast i64* %11 to i8*, !dbg !11604
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11604
  %shr.i = ashr i64 %13, 3, !dbg !11604
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !11604
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !11606
  %and.i = and i64 %14, 7, !dbg !11606
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !11606
  %shl.i = shl i32 1, %sh_prom.i, !dbg !11606
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #5, !dbg !11607, !srcloc !11608
  br label %arch_set_bit.exit, !dbg !11609

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !11610
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !11612
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #5, !dbg !11613, !srcloc !11614
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !11615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @csi_J(%struct.vc_data* %vc, i32 %vpar) #0 !dbg !11616 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %vpar.addr = alloca i32, align 4
  %count = alloca i32, align 4
  %start = alloca i16*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11617, metadata !DIExpression()), !dbg !11618
  store i32 %vpar, i32* %vpar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vpar.addr, metadata !11619, metadata !DIExpression()), !dbg !11620
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11621, metadata !DIExpression()), !dbg !11622
  call void @llvm.dbg.declare(metadata i16** %start, metadata !11623, metadata !DIExpression()), !dbg !11624
  %0 = load i32, i32* %vpar.addr, align 4, !dbg !11625
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
    i32 3, label %sw.bb22
    i32 2, label %sw.bb23
  ], !dbg !11626

sw.bb:                                            ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11627
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11629
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 1, !dbg !11630
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !11631
  %3 = load i32, i32* %x, align 8, !dbg !11631
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11632
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 4, !dbg !11633
  %5 = load i32, i32* %vc_cols, align 4, !dbg !11633
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11634
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 1, !dbg !11635
  %x2 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 0, !dbg !11636
  %7 = load i32, i32* %x2, align 8, !dbg !11636
  %sub = sub i32 %5, %7, !dbg !11637
  call void @vc_uniscr_clear_line(%struct.vc_data* %1, i32 %3, i32 %sub) #13, !dbg !11638
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11639
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11640
  %state3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 1, !dbg !11641
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state3, i32 0, i32 1, !dbg !11642
  %10 = load i32, i32* %y, align 4, !dbg !11642
  %add = add i32 %10, 1, !dbg !11643
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11644
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 5, !dbg !11645
  %12 = load i32, i32* %vc_rows, align 8, !dbg !11645
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11646
  %state4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 1, !dbg !11647
  %y5 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state4, i32 0, i32 1, !dbg !11648
  %14 = load i32, i32* %y5, align 4, !dbg !11648
  %sub6 = sub i32 %12, %14, !dbg !11649
  %sub7 = sub i32 %sub6, 1, !dbg !11650
  call void @vc_uniscr_clear_lines(%struct.vc_data* %8, i32 %add, i32 %sub7) #13, !dbg !11651
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11652
  %vc_scr_end = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 9, !dbg !11653
  %16 = load i64, i64* %vc_scr_end, align 8, !dbg !11653
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11654
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 25, !dbg !11655
  %18 = load i64, i64* %vc_pos, align 8, !dbg !11655
  %sub8 = sub i64 %16, %18, !dbg !11656
  %shr = lshr i64 %sub8, 1, !dbg !11657
  %conv = trunc i64 %shr to i32, !dbg !11658
  store i32 %conv, i32* %count, align 4, !dbg !11659
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11660
  %vc_pos9 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 25, !dbg !11661
  %20 = load i64, i64* %vc_pos9, align 8, !dbg !11661
  %21 = inttoptr i64 %20 to i16*, !dbg !11662
  store i16* %21, i16** %start, align 8, !dbg !11663
  br label %sw.epilog, !dbg !11664

sw.bb10:                                          ; preds = %entry
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11665
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11666
  %state11 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 1, !dbg !11667
  %x12 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state11, i32 0, i32 0, !dbg !11668
  %24 = load i32, i32* %x12, align 8, !dbg !11668
  %add13 = add i32 %24, 1, !dbg !11669
  call void @vc_uniscr_clear_line(%struct.vc_data* %22, i32 0, i32 %add13) #13, !dbg !11670
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11671
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11672
  %state14 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 1, !dbg !11673
  %y15 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state14, i32 0, i32 1, !dbg !11674
  %27 = load i32, i32* %y15, align 4, !dbg !11674
  call void @vc_uniscr_clear_lines(%struct.vc_data* %25, i32 0, i32 %27) #13, !dbg !11675
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11676
  %vc_pos16 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 25, !dbg !11677
  %29 = load i64, i64* %vc_pos16, align 8, !dbg !11677
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11678
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 8, !dbg !11679
  %31 = load i64, i64* %vc_origin, align 8, !dbg !11679
  %sub17 = sub i64 %29, %31, !dbg !11680
  %shr18 = lshr i64 %sub17, 1, !dbg !11681
  %add19 = add i64 %shr18, 1, !dbg !11682
  %conv20 = trunc i64 %add19 to i32, !dbg !11683
  store i32 %conv20, i32* %count, align 4, !dbg !11684
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11685
  %vc_origin21 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 8, !dbg !11686
  %33 = load i64, i64* %vc_origin21, align 8, !dbg !11686
  %34 = inttoptr i64 %33 to i16*, !dbg !11687
  store i16* %34, i16** %start, align 8, !dbg !11688
  br label %sw.epilog, !dbg !11689

sw.bb22:                                          ; preds = %entry
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11690
  call void @flush_scrollback(%struct.vc_data* %35) #13, !dbg !11691
  br label %sw.bb23, !dbg !11691

sw.bb23:                                          ; preds = %entry, %sw.bb22
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11692
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11693
  %vc_rows24 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 5, !dbg !11694
  %38 = load i32, i32* %vc_rows24, align 8, !dbg !11694
  call void @vc_uniscr_clear_lines(%struct.vc_data* %36, i32 0, i32 %38) #13, !dbg !11695
  %39 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11696
  %vc_cols25 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %39, i32 0, i32 4, !dbg !11697
  %40 = load i32, i32* %vc_cols25, align 4, !dbg !11697
  %41 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11698
  %vc_rows26 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %41, i32 0, i32 5, !dbg !11699
  %42 = load i32, i32* %vc_rows26, align 8, !dbg !11699
  %mul = mul i32 %40, %42, !dbg !11700
  store i32 %mul, i32* %count, align 4, !dbg !11701
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11702
  %vc_origin27 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %43, i32 0, i32 8, !dbg !11703
  %44 = load i64, i64* %vc_origin27, align 8, !dbg !11703
  %45 = inttoptr i64 %44 to i16*, !dbg !11704
  store i16* %45, i16** %start, align 8, !dbg !11705
  br label %sw.epilog, !dbg !11706

sw.default:                                       ; preds = %entry
  br label %return, !dbg !11707

sw.epilog:                                        ; preds = %sw.bb23, %sw.bb10, %sw.bb
  %46 = load i16*, i16** %start, align 8, !dbg !11708
  %47 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11709
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %47, i32 0, i32 28, !dbg !11710
  %48 = load i16, i16* %vc_video_erase_char, align 8, !dbg !11710
  %49 = load i32, i32* %count, align 4, !dbg !11711
  %mul28 = mul i32 2, %49, !dbg !11712
  call void @scr_memsetw(i16* %46, i16 zeroext %48, i32 %mul28) #13, !dbg !11713
  %50 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11714
  %call = call zeroext i1 @con_should_update(%struct.vc_data* %50) #13, !dbg !11716
  br i1 %call, label %if.then, label %if.end, !dbg !11717

if.then:                                          ; preds = %sw.epilog
  %51 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11718
  %52 = load i16*, i16** %start, align 8, !dbg !11719
  %53 = ptrtoint i16* %52 to i64, !dbg !11720
  %54 = load i32, i32* %count, align 4, !dbg !11721
  call void @do_update_region(%struct.vc_data* %51, i64 %53, i32 %54) #13, !dbg !11722
  br label %if.end, !dbg !11722

if.end:                                           ; preds = %if.then, %sw.epilog
  %55 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11723
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %55, i32 0, i32 36, !dbg !11724
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !11725
  %bf.clear = and i16 %bf.load, -1025, !dbg !11725
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !11725
  br label %return, !dbg !11726

return:                                           ; preds = %if.end, %sw.default
  ret void, !dbg !11726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_uniscr_clear_line(%struct.vc_data* %vc, i32 %x, i32 %nr) #0 !dbg !11727 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %x.addr = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %uniscr = alloca %struct.uni_screen*, align 8
  %ln = alloca i32*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11730, metadata !DIExpression()), !dbg !11731
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11732, metadata !DIExpression()), !dbg !11733
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !11734, metadata !DIExpression()), !dbg !11735
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !11736, metadata !DIExpression()), !dbg !11737
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11738
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 49, !dbg !11738
  %1 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !11738
  store %struct.uni_screen* %1, %struct.uni_screen** %uniscr, align 8, !dbg !11737
  %2 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !11739
  %tobool = icmp ne %struct.uni_screen* %2, null, !dbg !11739
  br i1 %tobool, label %if.then, label %if.end, !dbg !11741

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %ln, metadata !11742, metadata !DIExpression()), !dbg !11744
  %3 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !11745
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %3, i32 0, i32 0, !dbg !11746
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11747
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 1, !dbg !11748
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !11749
  %5 = load i32, i32* %y, align 4, !dbg !11749
  %idxprom = zext i32 %5 to i64, !dbg !11745
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines, i64 0, i64 %idxprom, !dbg !11745
  %6 = load i32*, i32** %arrayidx, align 8, !dbg !11745
  store i32* %6, i32** %ln, align 8, !dbg !11744
  %7 = load i32*, i32** %ln, align 8, !dbg !11750
  %8 = load i32, i32* %x.addr, align 4, !dbg !11751
  %idxprom1 = zext i32 %8 to i64, !dbg !11750
  %arrayidx2 = getelementptr i32, i32* %7, i64 %idxprom1, !dbg !11750
  %9 = load i32, i32* %nr.addr, align 4, !dbg !11752
  %conv = zext i32 %9 to i64, !dbg !11752
  %call = call i8* @memset32(i32* %arrayidx2, i32 32, i64 %conv) #13, !dbg !11753
  br label %if.end, !dbg !11754

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_uniscr_clear_lines(%struct.vc_data* %vc, i32 %y, i32 %nr) #0 !dbg !11756 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %y.addr = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %uniscr = alloca %struct.uni_screen*, align 8
  %cols = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11757, metadata !DIExpression()), !dbg !11758
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !11759, metadata !DIExpression()), !dbg !11760
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !11761, metadata !DIExpression()), !dbg !11762
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !11763, metadata !DIExpression()), !dbg !11764
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11765
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 49, !dbg !11765
  %1 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !11765
  store %struct.uni_screen* %1, %struct.uni_screen** %uniscr, align 8, !dbg !11764
  %2 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !11766
  %tobool = icmp ne %struct.uni_screen* %2, null, !dbg !11766
  br i1 %tobool, label %if.then, label %if.end, !dbg !11768

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !11769, metadata !DIExpression()), !dbg !11771
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11772
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 4, !dbg !11773
  %4 = load i32, i32* %vc_cols, align 4, !dbg !11773
  store i32 %4, i32* %cols, align 4, !dbg !11771
  br label %while.cond, !dbg !11774

while.cond:                                       ; preds = %while.body, %if.then
  %5 = load i32, i32* %nr.addr, align 4, !dbg !11775
  %dec = add i32 %5, -1, !dbg !11775
  store i32 %dec, i32* %nr.addr, align 4, !dbg !11775
  %tobool1 = icmp ne i32 %5, 0, !dbg !11774
  br i1 %tobool1, label %while.body, label %while.end, !dbg !11774

while.body:                                       ; preds = %while.cond
  %6 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !11776
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %6, i32 0, i32 0, !dbg !11777
  %7 = load i32, i32* %y.addr, align 4, !dbg !11778
  %inc = add i32 %7, 1, !dbg !11778
  store i32 %inc, i32* %y.addr, align 4, !dbg !11778
  %idxprom = zext i32 %7 to i64, !dbg !11776
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines, i64 0, i64 %idxprom, !dbg !11776
  %8 = load i32*, i32** %arrayidx, align 8, !dbg !11776
  %9 = load i32, i32* %cols, align 4, !dbg !11779
  %conv = zext i32 %9 to i64, !dbg !11779
  %call = call i8* @memset32(i32* %8, i32 32, i64 %conv) #13, !dbg !11780
  br label %while.cond, !dbg !11774, !llvm.loop !11781

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11783

if.end:                                           ; preds = %while.end, %entry
  ret void, !dbg !11784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @flush_scrollback(%struct.vc_data* %vc) #0 !dbg !11785 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !11786
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !11790
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !11792
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !11793
  %vc.addr = alloca %struct.vc_data*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !11794, metadata !DIExpression()), !dbg !11795
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11796, metadata !DIExpression()), !dbg !11797
  store %struct.atomic_t* @ignore_console_lock_warning, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11798
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !11798
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11799
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !11800
  %conv.i.i = trunc i64 %3 to i32, !dbg !11800
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #14, !dbg !11801
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11802
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !11802
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #14, !dbg !11802
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11803
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11804
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !11804
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !11804
  %tobool = icmp ne i32 %8, 0, !dbg !11797
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !11797

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32 @is_console_locked() #13, !dbg !11797
  %tobool2 = icmp ne i32 %call1, 0, !dbg !11797
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !11797

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* @oops_in_progress, align 4, !dbg !11797
  %tobool3 = icmp ne i32 %9, 0, !dbg !11797
  %lnot = xor i1 %tobool3, true, !dbg !11797
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !11805
  %lnot4 = xor i1 %10, true, !dbg !11797
  %lnot5 = xor i1 %lnot4, true, !dbg !11797
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !11797
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11797
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !11806
  %tobool6 = icmp ne i32 %11, 0, !dbg !11806
  %lnot7 = xor i1 %tobool6, true, !dbg !11806
  %lnot9 = xor i1 %lnot7, true, !dbg !11806
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !11806
  %conv = sext i32 %lnot.ext10 to i64, !dbg !11806
  %tobool11 = icmp ne i64 %conv, 0, !dbg !11806
  br i1 %tobool11, label %if.then, label %if.end, !dbg !11797

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !11806

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !11808

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !11810

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !11808

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 949, i32 2305, i64 12) #5, !dbg !11812, !srcloc !11814
  br label %do.end14, !dbg !11812

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 240) #5, !dbg !11815, !srcloc !11817
  br label %do.body15, !dbg !11808

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !11818

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !11808

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !11808

if.end:                                           ; preds = %do.end17, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !11797
  %tobool18 = icmp ne i32 %12, 0, !dbg !11797
  %lnot19 = xor i1 %tobool18, true, !dbg !11797
  %lnot21 = xor i1 %lnot19, true, !dbg !11797
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !11797
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !11797
  store i64 %conv23, i64* %tmp, align 8, !dbg !11806
  %13 = load i64, i64* %tmp, align 8, !dbg !11797
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11820
  call void @set_origin(%struct.vc_data* %14) #13, !dbg !11821
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11822
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 13, !dbg !11824
  %16 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !11824
  %con_flush_scrollback = getelementptr inbounds %struct.consw, %struct.consw* %16, i32 0, i32 24, !dbg !11825
  %17 = load void (%struct.vc_data*)*, void (%struct.vc_data*)** %con_flush_scrollback, align 8, !dbg !11825
  %tobool24 = icmp ne void (%struct.vc_data*)* %17, null, !dbg !11822
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !11826

if.then25:                                        ; preds = %if.end
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11827
  %vc_sw26 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 13, !dbg !11829
  %19 = load %struct.consw*, %struct.consw** %vc_sw26, align 8, !dbg !11829
  %con_flush_scrollback27 = getelementptr inbounds %struct.consw, %struct.consw* %19, i32 0, i32 24, !dbg !11830
  %20 = load void (%struct.vc_data*)*, void (%struct.vc_data*)** %con_flush_scrollback27, align 8, !dbg !11830
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11831
  call void %20(%struct.vc_data* %21) #13, !dbg !11827
  br label %if.end34, !dbg !11832

if.else:                                          ; preds = %if.end
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11833
  %call28 = call zeroext i1 @con_is_visible(%struct.vc_data* %22) #13, !dbg !11835
  br i1 %call28, label %if.then29, label %if.end33, !dbg !11836

if.then29:                                        ; preds = %if.else
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11837
  call void @hide_cursor(%struct.vc_data* %23) #13, !dbg !11839
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11840
  %vc_sw30 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %24, i32 0, i32 13, !dbg !11841
  %25 = load %struct.consw*, %struct.consw** %vc_sw30, align 8, !dbg !11841
  %con_switch = getelementptr inbounds %struct.consw, %struct.consw* %25, i32 0, i32 9, !dbg !11842
  %con_switch31 = bitcast {}** %con_switch to i32 (%struct.vc_data*)**, !dbg !11842
  %26 = load i32 (%struct.vc_data*)*, i32 (%struct.vc_data*)** %con_switch31, align 8, !dbg !11842
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11843
  %call32 = call i32 %26(%struct.vc_data* %27) #13, !dbg !11840
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !11844
  call void @set_cursor(%struct.vc_data* %28) #13, !dbg !11845
  br label %if.end33, !dbg !11846

if.end33:                                         ; preds = %if.then29, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then25
  ret void, !dbg !11847
}

; Function Attrs: noredzone
declare dso_local void @register_console(%struct.console*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vt_console_print(%struct.console* %co, i8* %b, i32 %count) #0 !dbg !4740 {
entry:
  %lock.addr.i111 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i111, metadata !11848, metadata !DIExpression()), !dbg !11853
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11855, metadata !DIExpression()), !dbg !11859
  %tmp.i = alloca i32, align 4
  %co.addr = alloca %struct.console*, align 8
  %b.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  %c = alloca i8, align 1
  %start = alloca i16*, align 8
  %start_x = alloca i16, align 2
  %cnt = alloca i16, align 2
  %kmsg_console = alloca i32, align 4
  store %struct.console* %co, %struct.console** %co.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.console** %co.addr, metadata !11862, metadata !DIExpression()), !dbg !11863
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !11864, metadata !DIExpression()), !dbg !11865
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !11866, metadata !DIExpression()), !dbg !11867
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !11868, metadata !DIExpression()), !dbg !11869
  %0 = load i32, i32* @fg_console, align 4, !dbg !11870
  %idxprom = sext i32 %0 to i64, !dbg !11871
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !11871
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !11872
  %1 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !11872
  store %struct.vc_data* %1, %struct.vc_data** %vc, align 8, !dbg !11869
  call void @llvm.dbg.declare(metadata i8* %c, metadata !11873, metadata !DIExpression()), !dbg !11874
  call void @llvm.dbg.declare(metadata i16** %start, metadata !11875, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.declare(metadata i16* %start_x, metadata !11879, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.declare(metadata i16* %cnt, metadata !11881, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.declare(metadata i32* %kmsg_console, metadata !11883, metadata !DIExpression()), !dbg !11884
  %2 = load i32, i32* @printable, align 4, !dbg !11885
  %tobool = icmp ne i32 %2, 0, !dbg !11885
  br i1 %tobool, label %if.end, label %if.then, !dbg !11887

if.then:                                          ; preds = %entry
  br label %return, !dbg !11888

if.end:                                           ; preds = %entry
  store %struct.spinlock* @vt_console_print.printing_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !11889, !srcloc !11892
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11893
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !11893
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !11893
  store i32 1, i32* %tmp.i, align 4, !dbg !11889
  %5 = load i32, i32* %tmp.i, align 4, !dbg !11895
  %tobool1 = icmp ne i32 %5, 0, !dbg !11896
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !11897

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !11898

if.end3:                                          ; preds = %if.end
  %call4 = call i32 @vt_kmsg_redirect(i32 -1) #13, !dbg !11899
  store i32 %call4, i32* %kmsg_console, align 4, !dbg !11900
  %6 = load i32, i32* %kmsg_console, align 4, !dbg !11901
  %tobool5 = icmp ne i32 %6, 0, !dbg !11901
  br i1 %tobool5, label %land.lhs.true, label %if.end13, !dbg !11903

land.lhs.true:                                    ; preds = %if.end3
  %7 = load i32, i32* %kmsg_console, align 4, !dbg !11904
  %sub = sub i32 %7, 1, !dbg !11905
  %call6 = call i32 @vc_cons_allocated(i32 %sub) #13, !dbg !11906
  %tobool7 = icmp ne i32 %call6, 0, !dbg !11906
  br i1 %tobool7, label %if.then8, label %if.end13, !dbg !11907

if.then8:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %kmsg_console, align 4, !dbg !11908
  %sub9 = sub i32 %8, 1, !dbg !11909
  %idxprom10 = sext i32 %sub9 to i64, !dbg !11910
  %arrayidx11 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom10, !dbg !11910
  %d12 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx11, i32 0, i32 0, !dbg !11911
  %9 = load %struct.vc_data*, %struct.vc_data** %d12, align 8, !dbg !11911
  store %struct.vc_data* %9, %struct.vc_data** %vc, align 8, !dbg !11912
  br label %if.end13, !dbg !11913

if.end13:                                         ; preds = %if.then8, %land.lhs.true, %if.end3
  %10 = load i32, i32* @fg_console, align 4, !dbg !11914
  %call14 = call i32 @vc_cons_allocated(i32 %10) #13, !dbg !11916
  %tobool15 = icmp ne i32 %call14, 0, !dbg !11916
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11917

if.then16:                                        ; preds = %if.end13
  br label %quit, !dbg !11918

if.end17:                                         ; preds = %if.end13
  %11 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11920
  %vc_mode = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 16, !dbg !11922
  %12 = load i8, i8* %vc_mode, align 4, !dbg !11922
  %conv = zext i8 %12 to i32, !dbg !11920
  %cmp = icmp ne i32 %conv, 0, !dbg !11923
  br i1 %cmp, label %if.then19, label %if.end20, !dbg !11924

if.then19:                                        ; preds = %if.end17
  br label %quit, !dbg !11925

if.end20:                                         ; preds = %if.end17
  %13 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11926
  %call21 = call zeroext i1 @con_is_fg(%struct.vc_data* %13) #13, !dbg !11928
  br i1 %call21, label %if.then22, label %if.end23, !dbg !11929

if.then22:                                        ; preds = %if.end20
  %14 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11930
  call void @hide_cursor(%struct.vc_data* %14) #13, !dbg !11931
  br label %if.end23, !dbg !11931

if.end23:                                         ; preds = %if.then22, %if.end20
  %15 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11932
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 25, !dbg !11933
  %16 = load i64, i64* %vc_pos, align 8, !dbg !11933
  %17 = inttoptr i64 %16 to i16*, !dbg !11934
  store i16* %17, i16** %start, align 8, !dbg !11935
  %18 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11936
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 1, !dbg !11937
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !11938
  %19 = load i32, i32* %x, align 8, !dbg !11938
  %conv24 = trunc i32 %19 to i16, !dbg !11936
  store i16 %conv24, i16* %start_x, align 2, !dbg !11939
  store i16 0, i16* %cnt, align 2, !dbg !11940
  br label %while.cond, !dbg !11941

while.cond:                                       ; preds = %if.end97, %if.then74, %if.then52, %if.end23
  %20 = load i32, i32* %count.addr, align 4, !dbg !11942
  %dec = add i32 %20, -1, !dbg !11942
  store i32 %dec, i32* %count.addr, align 4, !dbg !11942
  %tobool25 = icmp ne i32 %20, 0, !dbg !11941
  br i1 %tobool25, label %while.body, label %while.end, !dbg !11941

while.body:                                       ; preds = %while.cond
  %21 = load i8*, i8** %b.addr, align 8, !dbg !11943
  %incdec.ptr = getelementptr i8, i8* %21, i32 1, !dbg !11943
  store i8* %incdec.ptr, i8** %b.addr, align 8, !dbg !11943
  %22 = load i8, i8* %21, align 1, !dbg !11945
  store i8 %22, i8* %c, align 1, !dbg !11946
  %23 = load i8, i8* %c, align 1, !dbg !11947
  %conv26 = zext i8 %23 to i32, !dbg !11947
  %cmp27 = icmp eq i32 %conv26, 10, !dbg !11949
  br i1 %cmp27, label %if.then38, label %lor.lhs.false, !dbg !11950

lor.lhs.false:                                    ; preds = %while.body
  %24 = load i8, i8* %c, align 1, !dbg !11951
  %conv29 = zext i8 %24 to i32, !dbg !11951
  %cmp30 = icmp eq i32 %conv29, 13, !dbg !11952
  br i1 %cmp30, label %if.then38, label %lor.lhs.false32, !dbg !11953

lor.lhs.false32:                                  ; preds = %lor.lhs.false
  %25 = load i8, i8* %c, align 1, !dbg !11954
  %conv33 = zext i8 %25 to i32, !dbg !11954
  %cmp34 = icmp eq i32 %conv33, 8, !dbg !11955
  br i1 %cmp34, label %if.then38, label %lor.lhs.false36, !dbg !11956

lor.lhs.false36:                                  ; preds = %lor.lhs.false32
  %26 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11957
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 36, !dbg !11958
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !11958
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !11958
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11958
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11958
  %tobool37 = icmp ne i32 %bf.cast, 0, !dbg !11957
  br i1 %tobool37, label %if.then38, label %if.end76, !dbg !11959

if.then38:                                        ; preds = %lor.lhs.false36, %lor.lhs.false32, %lor.lhs.false, %while.body
  %27 = load i16, i16* %cnt, align 2, !dbg !11960
  %conv39 = zext i16 %27 to i32, !dbg !11960
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !11960
  br i1 %tobool40, label %land.lhs.true41, label %if.end48, !dbg !11963

land.lhs.true41:                                  ; preds = %if.then38
  %28 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11964
  %call42 = call zeroext i1 @con_is_visible(%struct.vc_data* %28) #13, !dbg !11965
  br i1 %call42, label %if.then44, label %if.end48, !dbg !11966

if.then44:                                        ; preds = %land.lhs.true41
  %29 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11967
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 13, !dbg !11968
  %30 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !11968
  %con_putcs = getelementptr inbounds %struct.consw, %struct.consw* %30, i32 0, i32 6, !dbg !11969
  %31 = load void (%struct.vc_data*, i16*, i32, i32, i32)*, void (%struct.vc_data*, i16*, i32, i32, i32)** %con_putcs, align 8, !dbg !11969
  %32 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11970
  %33 = load i16*, i16** %start, align 8, !dbg !11971
  %34 = load i16, i16* %cnt, align 2, !dbg !11972
  %conv45 = zext i16 %34 to i32, !dbg !11972
  %35 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11973
  %state46 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 1, !dbg !11974
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state46, i32 0, i32 1, !dbg !11975
  %36 = load i32, i32* %y, align 4, !dbg !11975
  %37 = load i16, i16* %start_x, align 2, !dbg !11976
  %conv47 = zext i16 %37 to i32, !dbg !11976
  call void %31(%struct.vc_data* %32, i16* %33, i32 %conv45, i32 %36, i32 %conv47) #13, !dbg !11967
  br label %if.end48, !dbg !11967

if.end48:                                         ; preds = %if.then44, %land.lhs.true41, %if.then38
  store i16 0, i16* %cnt, align 2, !dbg !11977
  %38 = load i8, i8* %c, align 1, !dbg !11978
  %conv49 = zext i8 %38 to i32, !dbg !11978
  %cmp50 = icmp eq i32 %conv49, 8, !dbg !11980
  br i1 %cmp50, label %if.then52, label %if.end57, !dbg !11981

if.then52:                                        ; preds = %if.end48
  %39 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11982
  call void @bs(%struct.vc_data* %39) #13, !dbg !11984
  %40 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11985
  %vc_pos53 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %40, i32 0, i32 25, !dbg !11986
  %41 = load i64, i64* %vc_pos53, align 8, !dbg !11986
  %42 = inttoptr i64 %41 to i16*, !dbg !11987
  store i16* %42, i16** %start, align 8, !dbg !11988
  %43 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !11989
  %state54 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %43, i32 0, i32 1, !dbg !11990
  %x55 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state54, i32 0, i32 0, !dbg !11991
  %44 = load i32, i32* %x55, align 8, !dbg !11991
  %conv56 = trunc i32 %44 to i16, !dbg !11989
  store i16 %conv56, i16* %start_x, align 2, !dbg !11992
  br label %while.cond, !dbg !11993, !llvm.loop !11994

if.end57:                                         ; preds = %if.end48
  %45 = load i8, i8* %c, align 1, !dbg !11996
  %conv58 = zext i8 %45 to i32, !dbg !11996
  %cmp59 = icmp ne i32 %conv58, 13, !dbg !11998
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !11999

if.then61:                                        ; preds = %if.end57
  %46 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12000
  call void @lf(%struct.vc_data* %46) #13, !dbg !12001
  br label %if.end62, !dbg !12001

if.end62:                                         ; preds = %if.then61, %if.end57
  %47 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12002
  call void @cr(%struct.vc_data* %47) #13, !dbg !12003
  %48 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12004
  %vc_pos63 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %48, i32 0, i32 25, !dbg !12005
  %49 = load i64, i64* %vc_pos63, align 8, !dbg !12005
  %50 = inttoptr i64 %49 to i16*, !dbg !12006
  store i16* %50, i16** %start, align 8, !dbg !12007
  %51 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12008
  %state64 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %51, i32 0, i32 1, !dbg !12009
  %x65 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state64, i32 0, i32 0, !dbg !12010
  %52 = load i32, i32* %x65, align 8, !dbg !12010
  %conv66 = trunc i32 %52 to i16, !dbg !12008
  store i16 %conv66, i16* %start_x, align 2, !dbg !12011
  %53 = load i8, i8* %c, align 1, !dbg !12012
  %conv67 = zext i8 %53 to i32, !dbg !12012
  %cmp68 = icmp eq i32 %conv67, 10, !dbg !12014
  br i1 %cmp68, label %if.then74, label %lor.lhs.false70, !dbg !12015

lor.lhs.false70:                                  ; preds = %if.end62
  %54 = load i8, i8* %c, align 1, !dbg !12016
  %conv71 = zext i8 %54 to i32, !dbg !12016
  %cmp72 = icmp eq i32 %conv71, 13, !dbg !12017
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !12018

if.then74:                                        ; preds = %lor.lhs.false70, %if.end62
  br label %while.cond, !dbg !12019, !llvm.loop !11994

if.end75:                                         ; preds = %lor.lhs.false70
  br label %if.end76, !dbg !12020

if.end76:                                         ; preds = %if.end75, %lor.lhs.false36
  %55 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12021
  %56 = load i8, i8* %c, align 1, !dbg !12022
  %conv77 = zext i8 %56 to i32, !dbg !12022
  call void @vc_uniscr_putc(%struct.vc_data* %55, i32 %conv77) #13, !dbg !12023
  %57 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12024
  %vc_attr = getelementptr inbounds %struct.vc_data, %struct.vc_data* %57, i32 0, i32 17, !dbg !12024
  %58 = load i8, i8* %vc_attr, align 1, !dbg !12024
  %conv78 = zext i8 %58 to i32, !dbg !12024
  %shl = shl i32 %conv78, 8, !dbg !12024
  %59 = load i8, i8* %c, align 1, !dbg !12024
  %conv79 = zext i8 %59 to i32, !dbg !12024
  %add = add i32 %shl, %conv79, !dbg !12024
  %conv80 = trunc i32 %add to i16, !dbg !12024
  %60 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12024
  %vc_pos81 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %60, i32 0, i32 25, !dbg !12024
  %61 = load i64, i64* %vc_pos81, align 8, !dbg !12024
  %62 = inttoptr i64 %61 to i16*, !dbg !12024
  store i16 %conv80, i16* %62, align 2, !dbg !12024
  %63 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12025
  %64 = load i8, i8* %c, align 1, !dbg !12026
  %conv82 = zext i8 %64 to i32, !dbg !12026
  call void @notify_write(%struct.vc_data* %63, i32 %conv82) #13, !dbg !12027
  %65 = load i16, i16* %cnt, align 2, !dbg !12028
  %inc = add i16 %65, 1, !dbg !12028
  store i16 %inc, i16* %cnt, align 2, !dbg !12028
  %66 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12029
  %state83 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %66, i32 0, i32 1, !dbg !12031
  %x84 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state83, i32 0, i32 0, !dbg !12032
  %67 = load i32, i32* %x84, align 8, !dbg !12032
  %68 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12033
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %68, i32 0, i32 4, !dbg !12034
  %69 = load i32, i32* %vc_cols, align 4, !dbg !12034
  %sub85 = sub i32 %69, 1, !dbg !12035
  %cmp86 = icmp eq i32 %67, %sub85, !dbg !12036
  br i1 %cmp86, label %if.then88, label %if.else, !dbg !12037

if.then88:                                        ; preds = %if.end76
  %70 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12038
  %vc_need_wrap89 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %70, i32 0, i32 36, !dbg !12040
  %bf.load90 = load i16, i16* %vc_need_wrap89, align 8, !dbg !12041
  %bf.clear91 = and i16 %bf.load90, -1025, !dbg !12041
  %bf.set = or i16 %bf.clear91, 1024, !dbg !12041
  store i16 %bf.set, i16* %vc_need_wrap89, align 8, !dbg !12041
  br label %if.end97, !dbg !12042

if.else:                                          ; preds = %if.end76
  %71 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12043
  %vc_pos92 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %71, i32 0, i32 25, !dbg !12045
  %72 = load i64, i64* %vc_pos92, align 8, !dbg !12046
  %add93 = add i64 %72, 2, !dbg !12046
  store i64 %add93, i64* %vc_pos92, align 8, !dbg !12046
  %73 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12047
  %state94 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %73, i32 0, i32 1, !dbg !12048
  %x95 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state94, i32 0, i32 0, !dbg !12049
  %74 = load i32, i32* %x95, align 8, !dbg !12050
  %inc96 = add i32 %74, 1, !dbg !12050
  store i32 %inc96, i32* %x95, align 8, !dbg !12050
  br label %if.end97

if.end97:                                         ; preds = %if.else, %if.then88
  br label %while.cond, !dbg !11941, !llvm.loop !11994

while.end:                                        ; preds = %while.cond
  %75 = load i16, i16* %cnt, align 2, !dbg !12051
  %conv98 = zext i16 %75 to i32, !dbg !12051
  %tobool99 = icmp ne i32 %conv98, 0, !dbg !12051
  br i1 %tobool99, label %land.lhs.true100, label %if.end110, !dbg !12053

land.lhs.true100:                                 ; preds = %while.end
  %76 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12054
  %call101 = call zeroext i1 @con_is_visible(%struct.vc_data* %76) #13, !dbg !12055
  br i1 %call101, label %if.then103, label %if.end110, !dbg !12056

if.then103:                                       ; preds = %land.lhs.true100
  %77 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12057
  %vc_sw104 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %77, i32 0, i32 13, !dbg !12058
  %78 = load %struct.consw*, %struct.consw** %vc_sw104, align 8, !dbg !12058
  %con_putcs105 = getelementptr inbounds %struct.consw, %struct.consw* %78, i32 0, i32 6, !dbg !12059
  %79 = load void (%struct.vc_data*, i16*, i32, i32, i32)*, void (%struct.vc_data*, i16*, i32, i32, i32)** %con_putcs105, align 8, !dbg !12059
  %80 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12060
  %81 = load i16*, i16** %start, align 8, !dbg !12061
  %82 = load i16, i16* %cnt, align 2, !dbg !12062
  %conv106 = zext i16 %82 to i32, !dbg !12062
  %83 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12063
  %state107 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %83, i32 0, i32 1, !dbg !12064
  %y108 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state107, i32 0, i32 1, !dbg !12065
  %84 = load i32, i32* %y108, align 4, !dbg !12065
  %85 = load i16, i16* %start_x, align 2, !dbg !12066
  %conv109 = zext i16 %85 to i32, !dbg !12066
  call void %79(%struct.vc_data* %80, i16* %81, i32 %conv106, i32 %84, i32 %conv109) #13, !dbg !12057
  br label %if.end110, !dbg !12057

if.end110:                                        ; preds = %if.then103, %land.lhs.true100, %while.end
  %86 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12067
  call void @set_cursor(%struct.vc_data* %86) #13, !dbg !12068
  %87 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12069
  call void @notify_update(%struct.vc_data* %87) #13, !dbg !12070
  br label %quit, !dbg !12070

quit:                                             ; preds = %if.end110, %if.then19, %if.then16
  call void @llvm.dbg.label(metadata !12071), !dbg !12072
  store %struct.spinlock* @vt_console_print.printing_lock, %struct.spinlock** %lock.addr.i111, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !12073, !srcloc !12075
  %88 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i111, align 8, !dbg !12076
  %89 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %88, i32 0, i32 0, !dbg !12076
  %rlock.i112 = bitcast %union.anon.0* %89 to %struct.raw_spinlock*, !dbg !12076
  br label %return, !dbg !12078

return:                                           ; preds = %quit, %if.then2, %if.then
  ret void, !dbg !12078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tty_driver* @vt_console_device(%struct.console* %c, i32* %index) #0 !dbg !12079 {
entry:
  %c.addr = alloca %struct.console*, align 8
  %index.addr = alloca i32*, align 8
  store %struct.console* %c, %struct.console** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.console** %c.addr, metadata !12080, metadata !DIExpression()), !dbg !12081
  store i32* %index, i32** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index.addr, metadata !12082, metadata !DIExpression()), !dbg !12083
  %0 = load %struct.console*, %struct.console** %c.addr, align 8, !dbg !12084
  %index1 = getelementptr inbounds %struct.console, %struct.console* %0, i32 0, i32 9, !dbg !12085
  %1 = load i16, i16* %index1, align 2, !dbg !12085
  %conv = sext i16 %1 to i32, !dbg !12084
  %tobool = icmp ne i32 %conv, 0, !dbg !12084
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12084

cond.true:                                        ; preds = %entry
  %2 = load %struct.console*, %struct.console** %c.addr, align 8, !dbg !12086
  %index2 = getelementptr inbounds %struct.console, %struct.console* %2, i32 0, i32 9, !dbg !12087
  %3 = load i16, i16* %index2, align 2, !dbg !12087
  %conv3 = sext i16 %3 to i32, !dbg !12086
  %sub = sub i32 %conv3, 1, !dbg !12088
  br label %cond.end, !dbg !12084

cond.false:                                       ; preds = %entry
  %4 = load i32, i32* @fg_console, align 4, !dbg !12089
  br label %cond.end, !dbg !12084

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %4, %cond.false ], !dbg !12084
  %5 = load i32*, i32** %index.addr, align 8, !dbg !12090
  store i32 %cond, i32* %5, align 4, !dbg !12091
  %6 = load %struct.tty_driver*, %struct.tty_driver** @console_driver, align 8, !dbg !12092
  ret %struct.tty_driver* %6, !dbg !12093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bs(%struct.vc_data* %vc) #0 !dbg !12094 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12095, metadata !DIExpression()), !dbg !12096
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12097
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 1, !dbg !12099
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !12100
  %1 = load i32, i32* %x, align 8, !dbg !12100
  %tobool = icmp ne i32 %1, 0, !dbg !12097
  br i1 %tobool, label %if.then, label %if.end, !dbg !12101

if.then:                                          ; preds = %entry
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12102
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 25, !dbg !12104
  %3 = load i64, i64* %vc_pos, align 8, !dbg !12105
  %sub = sub i64 %3, 2, !dbg !12105
  store i64 %sub, i64* %vc_pos, align 8, !dbg !12105
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12106
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 1, !dbg !12107
  %x2 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 0, !dbg !12108
  %5 = load i32, i32* %x2, align 8, !dbg !12109
  %dec = add i32 %5, -1, !dbg !12109
  store i32 %dec, i32* %x2, align 8, !dbg !12109
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12110
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 36, !dbg !12111
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !12112
  %bf.clear = and i16 %bf.load, -1025, !dbg !12112
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !12112
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12113
  call void @notify_write(%struct.vc_data* %7, i32 8) #13, !dbg !12114
  br label %if.end, !dbg !12115

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @lf(%struct.vc_data* %vc) #0 !dbg !12117 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12118, metadata !DIExpression()), !dbg !12119
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12120
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 1, !dbg !12122
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !12123
  %1 = load i32, i32* %y, align 4, !dbg !12123
  %add = add i32 %1, 1, !dbg !12124
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12125
  %vc_bottom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 12, !dbg !12126
  %3 = load i32, i32* %vc_bottom, align 4, !dbg !12126
  %cmp = icmp eq i32 %add, %3, !dbg !12127
  br i1 %cmp, label %if.then, label %if.else, !dbg !12128

if.then:                                          ; preds = %entry
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12129
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12130
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 11, !dbg !12131
  %6 = load i32, i32* %vc_top, align 8, !dbg !12131
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12132
  %vc_bottom1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 12, !dbg !12133
  %8 = load i32, i32* %vc_bottom1, align 4, !dbg !12133
  call void @con_scroll(%struct.vc_data* %4, i32 %6, i32 %8, i32 0, i32 1) #13, !dbg !12134
  br label %if.end9, !dbg !12134

if.else:                                          ; preds = %entry
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12135
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 1, !dbg !12137
  %y3 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 1, !dbg !12138
  %10 = load i32, i32* %y3, align 4, !dbg !12138
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12139
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 5, !dbg !12140
  %12 = load i32, i32* %vc_rows, align 8, !dbg !12140
  %sub = sub i32 %12, 1, !dbg !12141
  %cmp4 = icmp ult i32 %10, %sub, !dbg !12142
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !12143

if.then5:                                         ; preds = %if.else
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12144
  %state6 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 1, !dbg !12146
  %y7 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state6, i32 0, i32 1, !dbg !12147
  %14 = load i32, i32* %y7, align 4, !dbg !12148
  %inc = add i32 %14, 1, !dbg !12148
  store i32 %inc, i32* %y7, align 4, !dbg !12148
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12149
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 6, !dbg !12150
  %16 = load i32, i32* %vc_size_row, align 4, !dbg !12150
  %conv = zext i32 %16 to i64, !dbg !12149
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12151
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 25, !dbg !12152
  %18 = load i64, i64* %vc_pos, align 8, !dbg !12153
  %add8 = add i64 %18, %conv, !dbg !12153
  store i64 %add8, i64* %vc_pos, align 8, !dbg !12153
  br label %if.end, !dbg !12154

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12155
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 36, !dbg !12156
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !12157
  %bf.clear = and i16 %bf.load, -1025, !dbg !12157
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !12157
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12158
  call void @notify_write(%struct.vc_data* %20, i32 10) #13, !dbg !12159
  ret void, !dbg !12160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cr(%struct.vc_data* %vc) #0 !dbg !12161 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12162, metadata !DIExpression()), !dbg !12163
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12164
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 1, !dbg !12165
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !12166
  %1 = load i32, i32* %x, align 8, !dbg !12166
  %shl = shl i32 %1, 1, !dbg !12167
  %conv = zext i32 %shl to i64, !dbg !12164
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12168
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 25, !dbg !12169
  %3 = load i64, i64* %vc_pos, align 8, !dbg !12170
  %sub = sub i64 %3, %conv, !dbg !12170
  store i64 %sub, i64* %vc_pos, align 8, !dbg !12170
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12171
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 1, !dbg !12172
  %x2 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 0, !dbg !12173
  store i32 0, i32* %x2, align 8, !dbg !12174
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12175
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 36, !dbg !12176
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !12177
  %bf.clear = and i16 %bf.load, -1025, !dbg !12177
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !12177
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12178
  call void @notify_write(%struct.vc_data* %6, i32 13) #13, !dbg !12179
  ret void, !dbg !12180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_uniscr_putc(%struct.vc_data* %vc, i32 %uc) #0 !dbg !12181 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %uc.addr = alloca i32, align 4
  %uniscr = alloca %struct.uni_screen*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12184, metadata !DIExpression()), !dbg !12185
  store i32 %uc, i32* %uc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uc.addr, metadata !12186, metadata !DIExpression()), !dbg !12187
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !12188, metadata !DIExpression()), !dbg !12189
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12190
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 49, !dbg !12190
  %1 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !12190
  store %struct.uni_screen* %1, %struct.uni_screen** %uniscr, align 8, !dbg !12189
  %2 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !12191
  %tobool = icmp ne %struct.uni_screen* %2, null, !dbg !12191
  br i1 %tobool, label %if.then, label %if.end, !dbg !12193

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %uc.addr, align 4, !dbg !12194
  %4 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !12195
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %4, i32 0, i32 0, !dbg !12196
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12197
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 1, !dbg !12198
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !12199
  %6 = load i32, i32* %y, align 4, !dbg !12199
  %idxprom = zext i32 %6 to i64, !dbg !12195
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines, i64 0, i64 %idxprom, !dbg !12195
  %7 = load i32*, i32** %arrayidx, align 8, !dbg !12195
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12200
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 1, !dbg !12201
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 0, !dbg !12202
  %9 = load i32, i32* %x, align 8, !dbg !12202
  %idxprom2 = zext i32 %9 to i64, !dbg !12195
  %arrayidx3 = getelementptr i32, i32* %7, i64 %idxprom2, !dbg !12195
  store i32 %3, i32* %arrayidx3, align 4, !dbg !12203
  br label %if.end, !dbg !12195

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @notify_write(%struct.vc_data* %vc, i32 %unicode) #0 !dbg !12205 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %unicode.addr = alloca i32, align 4
  %param = alloca %struct.vt_notifier_param, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12208, metadata !DIExpression()), !dbg !12209
  store i32 %unicode, i32* %unicode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %unicode.addr, metadata !12210, metadata !DIExpression()), !dbg !12211
  call void @llvm.dbg.declare(metadata %struct.vt_notifier_param* %param, metadata !12212, metadata !DIExpression()), !dbg !12213
  %vc1 = getelementptr inbounds %struct.vt_notifier_param, %struct.vt_notifier_param* %param, i32 0, i32 0, !dbg !12214
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12215
  store %struct.vc_data* %0, %struct.vc_data** %vc1, align 8, !dbg !12214
  %c = getelementptr inbounds %struct.vt_notifier_param, %struct.vt_notifier_param* %param, i32 0, i32 1, !dbg !12214
  %1 = load i32, i32* %unicode.addr, align 4, !dbg !12216
  store i32 %1, i32* %c, align 8, !dbg !12214
  %2 = bitcast %struct.vt_notifier_param* %param to i8*, !dbg !12217
  %call = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head* @vt_notifier_list, i64 3, i8* %2) #13, !dbg !12218
  ret void, !dbg !12219
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_scroll(%struct.vc_data* %vc, i32 %t, i32 %b, i32 %dir, i32 %nr) #0 !dbg !12220 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %t.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %clear = alloca i16*, align 8
  %d = alloca i16*, align 8
  %s = alloca i16*, align 8
  %__tmp = alloca i16*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12223, metadata !DIExpression()), !dbg !12224
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !12225, metadata !DIExpression()), !dbg !12226
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !12227, metadata !DIExpression()), !dbg !12228
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !12229, metadata !DIExpression()), !dbg !12230
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !12231, metadata !DIExpression()), !dbg !12232
  call void @llvm.dbg.declare(metadata i16** %clear, metadata !12233, metadata !DIExpression()), !dbg !12234
  call void @llvm.dbg.declare(metadata i16** %d, metadata !12235, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.declare(metadata i16** %s, metadata !12237, metadata !DIExpression()), !dbg !12238
  %0 = load i32, i32* %t.addr, align 4, !dbg !12239
  %1 = load i32, i32* %nr.addr, align 4, !dbg !12241
  %add = add i32 %0, %1, !dbg !12242
  %2 = load i32, i32* %b.addr, align 4, !dbg !12243
  %cmp = icmp uge i32 %add, %2, !dbg !12244
  br i1 %cmp, label %if.then, label %if.end, !dbg !12245

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !12246
  %4 = load i32, i32* %t.addr, align 4, !dbg !12247
  %sub = sub i32 %3, %4, !dbg !12248
  %sub1 = sub i32 %sub, 1, !dbg !12249
  store i32 %sub1, i32* %nr.addr, align 4, !dbg !12250
  br label %if.end, !dbg !12251

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %b.addr, align 4, !dbg !12252
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12254
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 5, !dbg !12255
  %7 = load i32, i32* %vc_rows, align 8, !dbg !12255
  %cmp2 = icmp ugt i32 %5, %7, !dbg !12256
  br i1 %cmp2, label %if.then6, label %lor.lhs.false, !dbg !12257

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %t.addr, align 4, !dbg !12258
  %9 = load i32, i32* %b.addr, align 4, !dbg !12259
  %cmp3 = icmp uge i32 %8, %9, !dbg !12260
  br i1 %cmp3, label %if.then6, label %lor.lhs.false4, !dbg !12261

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %10 = load i32, i32* %nr.addr, align 4, !dbg !12262
  %cmp5 = icmp ult i32 %10, 1, !dbg !12263
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12264

if.then6:                                         ; preds = %lor.lhs.false4, %lor.lhs.false, %if.end
  br label %return, !dbg !12265

if.end7:                                          ; preds = %lor.lhs.false4
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12266
  %12 = load i32, i32* %t.addr, align 4, !dbg !12267
  %13 = load i32, i32* %b.addr, align 4, !dbg !12268
  %14 = load i32, i32* %dir.addr, align 4, !dbg !12269
  %15 = load i32, i32* %nr.addr, align 4, !dbg !12270
  call void @vc_uniscr_scroll(%struct.vc_data* %11, i32 %12, i32 %13, i32 %14, i32 %15) #13, !dbg !12271
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12272
  %call = call zeroext i1 @con_is_visible(%struct.vc_data* %16) #13, !dbg !12274
  br i1 %call, label %land.lhs.true, label %if.end10, !dbg !12275

land.lhs.true:                                    ; preds = %if.end7
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12276
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 13, !dbg !12277
  %18 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !12277
  %con_scroll = getelementptr inbounds %struct.consw, %struct.consw* %18, i32 0, i32 8, !dbg !12278
  %19 = load i1 (%struct.vc_data*, i32, i32, i32, i32)*, i1 (%struct.vc_data*, i32, i32, i32, i32)** %con_scroll, align 8, !dbg !12278
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12279
  %21 = load i32, i32* %t.addr, align 4, !dbg !12280
  %22 = load i32, i32* %b.addr, align 4, !dbg !12281
  %23 = load i32, i32* %dir.addr, align 4, !dbg !12282
  %24 = load i32, i32* %nr.addr, align 4, !dbg !12283
  %call8 = call zeroext i1 %19(%struct.vc_data* %20, i32 %21, i32 %22, i32 %23, i32 %24) #13, !dbg !12276
  br i1 %call8, label %if.then9, label %if.end10, !dbg !12284

if.then9:                                         ; preds = %land.lhs.true
  br label %return, !dbg !12285

if.end10:                                         ; preds = %land.lhs.true, %if.end7
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12286
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 8, !dbg !12287
  %26 = load i64, i64* %vc_origin, align 8, !dbg !12287
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12288
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 6, !dbg !12289
  %28 = load i32, i32* %vc_size_row, align 4, !dbg !12289
  %29 = load i32, i32* %t.addr, align 4, !dbg !12290
  %mul = mul i32 %28, %29, !dbg !12291
  %conv = zext i32 %mul to i64, !dbg !12288
  %add11 = add i64 %26, %conv, !dbg !12292
  %30 = inttoptr i64 %add11 to i16*, !dbg !12293
  store i16* %30, i16** %clear, align 8, !dbg !12294
  store i16* %30, i16** %s, align 8, !dbg !12295
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12296
  %vc_origin12 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %31, i32 0, i32 8, !dbg !12297
  %32 = load i64, i64* %vc_origin12, align 8, !dbg !12297
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12298
  %vc_size_row13 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %33, i32 0, i32 6, !dbg !12299
  %34 = load i32, i32* %vc_size_row13, align 4, !dbg !12299
  %35 = load i32, i32* %t.addr, align 4, !dbg !12300
  %36 = load i32, i32* %nr.addr, align 4, !dbg !12301
  %add14 = add i32 %35, %36, !dbg !12302
  %mul15 = mul i32 %34, %add14, !dbg !12303
  %conv16 = zext i32 %mul15 to i64, !dbg !12298
  %add17 = add i64 %32, %conv16, !dbg !12304
  %37 = inttoptr i64 %add17 to i16*, !dbg !12305
  store i16* %37, i16** %d, align 8, !dbg !12306
  %38 = load i32, i32* %dir.addr, align 4, !dbg !12307
  %cmp18 = icmp eq i32 %38, 0, !dbg !12309
  br i1 %cmp18, label %if.then20, label %if.end24, !dbg !12310

if.then20:                                        ; preds = %if.end10
  %39 = load i16*, i16** %s, align 8, !dbg !12311
  %40 = load i32, i32* %b.addr, align 4, !dbg !12313
  %41 = load i32, i32* %t.addr, align 4, !dbg !12314
  %sub21 = sub i32 %40, %41, !dbg !12315
  %42 = load i32, i32* %nr.addr, align 4, !dbg !12316
  %sub22 = sub i32 %sub21, %42, !dbg !12317
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12318
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %43, i32 0, i32 4, !dbg !12319
  %44 = load i32, i32* %vc_cols, align 4, !dbg !12319
  %mul23 = mul i32 %sub22, %44, !dbg !12320
  %idx.ext = zext i32 %mul23 to i64, !dbg !12321
  %add.ptr = getelementptr i16, i16* %39, i64 %idx.ext, !dbg !12321
  store i16* %add.ptr, i16** %clear, align 8, !dbg !12322
  br label %do.body, !dbg !12323

do.body:                                          ; preds = %if.then20
  call void @llvm.dbg.declare(metadata i16** %__tmp, metadata !12324, metadata !DIExpression()), !dbg !12326
  %45 = load i16*, i16** %s, align 8, !dbg !12326
  store i16* %45, i16** %__tmp, align 8, !dbg !12326
  %46 = load i16*, i16** %d, align 8, !dbg !12326
  store i16* %46, i16** %s, align 8, !dbg !12326
  %47 = load i16*, i16** %__tmp, align 8, !dbg !12326
  store i16* %47, i16** %d, align 8, !dbg !12326
  br label %do.end, !dbg !12326

do.end:                                           ; preds = %do.body
  br label %if.end24, !dbg !12327

if.end24:                                         ; preds = %do.end, %if.end10
  %48 = load i16*, i16** %d, align 8, !dbg !12328
  %49 = load i16*, i16** %s, align 8, !dbg !12329
  %50 = load i32, i32* %b.addr, align 4, !dbg !12330
  %51 = load i32, i32* %t.addr, align 4, !dbg !12331
  %sub25 = sub i32 %50, %51, !dbg !12332
  %52 = load i32, i32* %nr.addr, align 4, !dbg !12333
  %sub26 = sub i32 %sub25, %52, !dbg !12334
  %53 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12335
  %vc_size_row27 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %53, i32 0, i32 6, !dbg !12336
  %54 = load i32, i32* %vc_size_row27, align 4, !dbg !12336
  %mul28 = mul i32 %sub26, %54, !dbg !12337
  call void @scr_memmovew(i16* %48, i16* %49, i32 %mul28) #13, !dbg !12338
  %55 = load i16*, i16** %clear, align 8, !dbg !12339
  %56 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12340
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %56, i32 0, i32 28, !dbg !12341
  %57 = load i16, i16* %vc_video_erase_char, align 8, !dbg !12341
  %58 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12342
  %vc_size_row29 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %58, i32 0, i32 6, !dbg !12343
  %59 = load i32, i32* %vc_size_row29, align 4, !dbg !12343
  %60 = load i32, i32* %nr.addr, align 4, !dbg !12344
  %mul30 = mul i32 %59, %60, !dbg !12345
  call void @scr_memsetw(i16* %55, i16 zeroext %57, i32 %mul30) #13, !dbg !12346
  br label %return, !dbg !12347

return:                                           ; preds = %if.end24, %if.then9, %if.then6
  ret void, !dbg !12347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_uniscr_scroll(%struct.vc_data* %vc, i32 %t, i32 %b, i32 %dir, i32 %nr) #0 !dbg !12348 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %t.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %uniscr = alloca %struct.uni_screen*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %sz = alloca i32, align 4
  %d = alloca i32, align 4
  %clear = alloca i32, align 4
  %tmp = alloca i32*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !12349, metadata !DIExpression()), !dbg !12350
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !12351, metadata !DIExpression()), !dbg !12352
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !12353, metadata !DIExpression()), !dbg !12354
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !12355, metadata !DIExpression()), !dbg !12356
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !12357, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !12359, metadata !DIExpression()), !dbg !12360
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12361
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 49, !dbg !12361
  %1 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !12361
  store %struct.uni_screen* %1, %struct.uni_screen** %uniscr, align 8, !dbg !12360
  %2 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !12362
  %tobool = icmp ne %struct.uni_screen* %2, null, !dbg !12362
  br i1 %tobool, label %if.then, label %if.end30, !dbg !12364

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12365, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12368, metadata !DIExpression()), !dbg !12369
  call void @llvm.dbg.declare(metadata i32* %k, metadata !12370, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.declare(metadata i32* %sz, metadata !12372, metadata !DIExpression()), !dbg !12373
  call void @llvm.dbg.declare(metadata i32* %d, metadata !12374, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.declare(metadata i32* %clear, metadata !12376, metadata !DIExpression()), !dbg !12377
  %3 = load i32, i32* %b.addr, align 4, !dbg !12378
  %4 = load i32, i32* %t.addr, align 4, !dbg !12379
  %sub = sub i32 %3, %4, !dbg !12380
  store i32 %sub, i32* %sz, align 4, !dbg !12381
  %5 = load i32, i32* %b.addr, align 4, !dbg !12382
  %6 = load i32, i32* %nr.addr, align 4, !dbg !12383
  %sub1 = sub i32 %5, %6, !dbg !12384
  store i32 %sub1, i32* %clear, align 4, !dbg !12385
  %7 = load i32, i32* %nr.addr, align 4, !dbg !12386
  store i32 %7, i32* %d, align 4, !dbg !12387
  %8 = load i32, i32* %dir.addr, align 4, !dbg !12388
  %cmp = icmp eq i32 %8, 1, !dbg !12390
  br i1 %cmp, label %if.then2, label %if.end, !dbg !12391

if.then2:                                         ; preds = %if.then
  %9 = load i32, i32* %t.addr, align 4, !dbg !12392
  store i32 %9, i32* %clear, align 4, !dbg !12394
  %10 = load i32, i32* %sz, align 4, !dbg !12395
  %11 = load i32, i32* %nr.addr, align 4, !dbg !12396
  %sub3 = sub i32 %10, %11, !dbg !12397
  store i32 %sub3, i32* %d, align 4, !dbg !12398
  br label %if.end, !dbg !12399

if.end:                                           ; preds = %if.then2, %if.then
  store i32 0, i32* %i, align 4, !dbg !12400
  br label %for.cond, !dbg !12402

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !12403
  %conv = zext i32 %12 to i64, !dbg !12403
  %13 = load i32, i32* %d, align 4, !dbg !12405
  %conv4 = zext i32 %13 to i64, !dbg !12405
  %14 = load i32, i32* %sz, align 4, !dbg !12406
  %conv5 = zext i32 %14 to i64, !dbg !12406
  %call = call i64 @gcd(i64 %conv4, i64 %conv5) #15, !dbg !12407
  %cmp6 = icmp ult i64 %conv, %call, !dbg !12408
  br i1 %cmp6, label %for.body, label %for.end, !dbg !12409

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32** %tmp, metadata !12410, metadata !DIExpression()), !dbg !12412
  %15 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !12413
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %15, i32 0, i32 0, !dbg !12414
  %16 = load i32, i32* %t.addr, align 4, !dbg !12415
  %17 = load i32, i32* %i, align 4, !dbg !12416
  %add = add i32 %16, %17, !dbg !12417
  %idxprom = zext i32 %add to i64, !dbg !12413
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines, i64 0, i64 %idxprom, !dbg !12413
  %18 = load i32*, i32** %arrayidx, align 8, !dbg !12413
  store i32* %18, i32** %tmp, align 8, !dbg !12412
  %19 = load i32, i32* %i, align 4, !dbg !12418
  store i32 %19, i32* %j, align 4, !dbg !12419
  br label %while.body, !dbg !12420

while.body:                                       ; preds = %for.body, %if.end17
  %20 = load i32, i32* %j, align 4, !dbg !12421
  %21 = load i32, i32* %d, align 4, !dbg !12423
  %add8 = add i32 %20, %21, !dbg !12424
  store i32 %add8, i32* %k, align 4, !dbg !12425
  %22 = load i32, i32* %k, align 4, !dbg !12426
  %23 = load i32, i32* %sz, align 4, !dbg !12428
  %cmp9 = icmp uge i32 %22, %23, !dbg !12429
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !12430

if.then11:                                        ; preds = %while.body
  %24 = load i32, i32* %sz, align 4, !dbg !12431
  %25 = load i32, i32* %k, align 4, !dbg !12432
  %sub12 = sub i32 %25, %24, !dbg !12432
  store i32 %sub12, i32* %k, align 4, !dbg !12432
  br label %if.end13, !dbg !12433

if.end13:                                         ; preds = %if.then11, %while.body
  %26 = load i32, i32* %k, align 4, !dbg !12434
  %27 = load i32, i32* %i, align 4, !dbg !12436
  %cmp14 = icmp eq i32 %26, %27, !dbg !12437
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !12438

if.then16:                                        ; preds = %if.end13
  br label %while.end, !dbg !12439

if.end17:                                         ; preds = %if.end13
  %28 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !12440
  %lines18 = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %28, i32 0, i32 0, !dbg !12441
  %29 = load i32, i32* %t.addr, align 4, !dbg !12442
  %30 = load i32, i32* %k, align 4, !dbg !12443
  %add19 = add i32 %29, %30, !dbg !12444
  %idxprom20 = zext i32 %add19 to i64, !dbg !12440
  %arrayidx21 = getelementptr [0 x i32*], [0 x i32*]* %lines18, i64 0, i64 %idxprom20, !dbg !12440
  %31 = load i32*, i32** %arrayidx21, align 8, !dbg !12440
  %32 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !12445
  %lines22 = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %32, i32 0, i32 0, !dbg !12446
  %33 = load i32, i32* %t.addr, align 4, !dbg !12447
  %34 = load i32, i32* %j, align 4, !dbg !12448
  %add23 = add i32 %33, %34, !dbg !12449
  %idxprom24 = zext i32 %add23 to i64, !dbg !12445
  %arrayidx25 = getelementptr [0 x i32*], [0 x i32*]* %lines22, i64 0, i64 %idxprom24, !dbg !12445
  store i32* %31, i32** %arrayidx25, align 8, !dbg !12450
  %35 = load i32, i32* %k, align 4, !dbg !12451
  store i32 %35, i32* %j, align 4, !dbg !12452
  br label %while.body, !dbg !12420, !llvm.loop !12453

while.end:                                        ; preds = %if.then16
  %36 = load i32*, i32** %tmp, align 8, !dbg !12455
  %37 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !12456
  %lines26 = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %37, i32 0, i32 0, !dbg !12457
  %38 = load i32, i32* %t.addr, align 4, !dbg !12458
  %39 = load i32, i32* %j, align 4, !dbg !12459
  %add27 = add i32 %38, %39, !dbg !12460
  %idxprom28 = zext i32 %add27 to i64, !dbg !12456
  %arrayidx29 = getelementptr [0 x i32*], [0 x i32*]* %lines26, i64 0, i64 %idxprom28, !dbg !12456
  store i32* %36, i32** %arrayidx29, align 8, !dbg !12461
  br label %for.inc, !dbg !12462

for.inc:                                          ; preds = %while.end
  %40 = load i32, i32* %i, align 4, !dbg !12463
  %inc = add i32 %40, 1, !dbg !12463
  store i32 %inc, i32* %i, align 4, !dbg !12463
  br label %for.cond, !dbg !12464, !llvm.loop !12465

for.end:                                          ; preds = %for.cond
  %41 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !12467
  %42 = load i32, i32* %clear, align 4, !dbg !12468
  %43 = load i32, i32* %nr.addr, align 4, !dbg !12469
  call void @vc_uniscr_clear_lines(%struct.vc_data* %41, i32 %42, i32 %43) #13, !dbg !12470
  br label %if.end30, !dbg !12471

if.end30:                                         ; preds = %for.end, %entry
  ret void, !dbg !12472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scr_memmovew(i16* %d, i16* %s, i32 %count) #0 !dbg !12473 {
entry:
  %d.addr = alloca i16*, align 8
  %s.addr = alloca i16*, align 8
  %count.addr = alloca i32, align 4
  store i16* %d, i16** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %d.addr, metadata !12474, metadata !DIExpression()), !dbg !12475
  store i16* %s, i16** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %s.addr, metadata !12476, metadata !DIExpression()), !dbg !12477
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !12478, metadata !DIExpression()), !dbg !12479
  %0 = load i16*, i16** %d.addr, align 8, !dbg !12480
  %1 = bitcast i16* %0 to i8*, !dbg !12481
  %2 = load i16*, i16** %s.addr, align 8, !dbg !12482
  %3 = bitcast i16* %2 to i8*, !dbg !12481
  %4 = load i32, i32* %count.addr, align 4, !dbg !12483
  %conv = zext i32 %4 to i64, !dbg !12483
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %1, i8* align 2 %3, i64 %conv, i1 false), !dbg !12481
  ret void, !dbg !12484
}

; Function Attrs: noredzone nounwind readnone
declare dso_local i64 @gcd(i64, i64) #12

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_tty_active(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12485 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12486, metadata !DIExpression()), !dbg !12487
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12488, metadata !DIExpression()), !dbg !12489
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12490, metadata !DIExpression()), !dbg !12491
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !12492
  %1 = load i32, i32* @fg_console, align 4, !dbg !12493
  %add = add i32 %1, 1, !dbg !12494
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i32 %add) #13, !dbg !12495
  %conv = sext i32 %call to i64, !dbg !12495
  ret i64 %conv, !dbg !12496
}

; Function Attrs: noredzone
declare dso_local %struct.tty_driver* @__tty_alloc_driver(i32, %struct.module*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con_install(%struct.tty_driver* %driver, %struct.tty_struct* %tty) #0 !dbg !12497 {
entry:
  %driver.addr = alloca %struct.tty_driver*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %currcons = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_driver* %driver, %struct.tty_driver** %driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %driver.addr, metadata !12498, metadata !DIExpression()), !dbg !12499
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12500, metadata !DIExpression()), !dbg !12501
  call void @llvm.dbg.declare(metadata i32* %currcons, metadata !12502, metadata !DIExpression()), !dbg !12503
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12504
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 5, !dbg !12505
  %1 = load i32, i32* %index, align 8, !dbg !12505
  store i32 %1, i32* %currcons, align 4, !dbg !12503
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !12506, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12508, metadata !DIExpression()), !dbg !12509
  call void @console_lock() #13, !dbg !12510
  %2 = load i32, i32* %currcons, align 4, !dbg !12511
  %call = call i32 @vc_allocate(i32 %2) #13, !dbg !12512
  store i32 %call, i32* %ret, align 4, !dbg !12513
  %3 = load i32, i32* %ret, align 4, !dbg !12514
  %tobool = icmp ne i32 %3, 0, !dbg !12514
  br i1 %tobool, label %if.then, label %if.end, !dbg !12516

if.then:                                          ; preds = %entry
  br label %unlock, !dbg !12517

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %currcons, align 4, !dbg !12518
  %idxprom = zext i32 %4 to i64, !dbg !12519
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !12519
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !12520
  %5 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !12520
  store %struct.vc_data* %5, %struct.vc_data** %vc, align 8, !dbg !12521
  %6 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12522
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 0, !dbg !12524
  %tty1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !12525
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty1, align 8, !dbg !12525
  %tobool2 = icmp ne %struct.tty_struct* %7, null, !dbg !12522
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !12526

if.then3:                                         ; preds = %if.end
  store i32 -512, i32* %ret, align 4, !dbg !12527
  br label %unlock, !dbg !12529

if.end4:                                          ; preds = %if.end
  %8 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12530
  %port5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 0, !dbg !12531
  %9 = load %struct.tty_driver*, %struct.tty_driver** %driver.addr, align 8, !dbg !12532
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12533
  %call6 = call i32 @tty_port_install(%struct.tty_port* %port5, %struct.tty_driver* %9, %struct.tty_struct* %10) #13, !dbg !12534
  store i32 %call6, i32* %ret, align 4, !dbg !12535
  %11 = load i32, i32* %ret, align 4, !dbg !12536
  %tobool7 = icmp ne i32 %11, 0, !dbg !12536
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !12538

if.then8:                                         ; preds = %if.end4
  br label %unlock, !dbg !12539

if.end9:                                          ; preds = %if.end4
  %12 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12540
  %13 = bitcast %struct.vc_data* %12 to i8*, !dbg !12540
  %14 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12541
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %14, i32 0, i32 37, !dbg !12542
  store i8* %13, i8** %driver_data, align 8, !dbg !12543
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12544
  %16 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12545
  %port10 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 0, !dbg !12546
  %tty11 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port10, i32 0, i32 1, !dbg !12547
  store %struct.tty_struct* %15, %struct.tty_struct** %tty11, align 8, !dbg !12548
  %17 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12549
  %port12 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 0, !dbg !12550
  %call13 = call %struct.tty_port* @tty_port_get(%struct.tty_port* %port12) #13, !dbg !12551
  %18 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12552
  %winsize = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %18, i32 0, i32 23, !dbg !12554
  %ws_row = getelementptr inbounds %struct.winsize, %struct.winsize* %winsize, i32 0, i32 0, !dbg !12555
  %19 = load i16, i16* %ws_row, align 4, !dbg !12555
  %tobool14 = icmp ne i16 %19, 0, !dbg !12552
  br i1 %tobool14, label %if.end29, label %land.lhs.true, !dbg !12556

land.lhs.true:                                    ; preds = %if.end9
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12557
  %winsize15 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %20, i32 0, i32 23, !dbg !12558
  %ws_col = getelementptr inbounds %struct.winsize, %struct.winsize* %winsize15, i32 0, i32 1, !dbg !12559
  %21 = load i16, i16* %ws_col, align 2, !dbg !12559
  %tobool16 = icmp ne i16 %21, 0, !dbg !12557
  br i1 %tobool16, label %if.end29, label %if.then17, !dbg !12560

if.then17:                                        ; preds = %land.lhs.true
  %22 = load i32, i32* %currcons, align 4, !dbg !12561
  %idxprom18 = zext i32 %22 to i64, !dbg !12563
  %arrayidx19 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom18, !dbg !12563
  %d20 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx19, i32 0, i32 0, !dbg !12564
  %23 = load %struct.vc_data*, %struct.vc_data** %d20, align 8, !dbg !12564
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 5, !dbg !12565
  %24 = load i32, i32* %vc_rows, align 8, !dbg !12565
  %conv = trunc i32 %24 to i16, !dbg !12563
  %25 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12566
  %winsize21 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %25, i32 0, i32 23, !dbg !12567
  %ws_row22 = getelementptr inbounds %struct.winsize, %struct.winsize* %winsize21, i32 0, i32 0, !dbg !12568
  store i16 %conv, i16* %ws_row22, align 4, !dbg !12569
  %26 = load i32, i32* %currcons, align 4, !dbg !12570
  %idxprom23 = zext i32 %26 to i64, !dbg !12571
  %arrayidx24 = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom23, !dbg !12571
  %d25 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx24, i32 0, i32 0, !dbg !12572
  %27 = load %struct.vc_data*, %struct.vc_data** %d25, align 8, !dbg !12572
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 4, !dbg !12573
  %28 = load i32, i32* %vc_cols, align 4, !dbg !12573
  %conv26 = trunc i32 %28 to i16, !dbg !12571
  %29 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12574
  %winsize27 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %29, i32 0, i32 23, !dbg !12575
  %ws_col28 = getelementptr inbounds %struct.winsize, %struct.winsize* %winsize27, i32 0, i32 1, !dbg !12576
  store i16 %conv26, i16* %ws_col28, align 2, !dbg !12577
  br label %if.end29, !dbg !12578

if.end29:                                         ; preds = %if.then17, %land.lhs.true, %if.end9
  %30 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12579
  %vc_utf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 36, !dbg !12581
  %bf.load = load i16, i16* %vc_utf, align 8, !dbg !12581
  %bf.lshr = lshr i16 %bf.load, 14, !dbg !12581
  %bf.clear = and i16 %bf.lshr, 1, !dbg !12581
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !12581
  %tobool30 = icmp ne i8 %bf.cast, 0, !dbg !12579
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !12582

if.then31:                                        ; preds = %if.end29
  %31 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12583
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %31, i32 0, i32 15, !dbg !12584
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !12585
  %32 = load i32, i32* %c_iflag, align 8, !dbg !12586
  %or = or i32 %32, 16384, !dbg !12586
  store i32 %or, i32* %c_iflag, align 8, !dbg !12586
  br label %if.end34, !dbg !12583

if.else:                                          ; preds = %if.end29
  %33 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12587
  %termios32 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %33, i32 0, i32 15, !dbg !12588
  %c_iflag33 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios32, i32 0, i32 0, !dbg !12589
  %34 = load i32, i32* %c_iflag33, align 8, !dbg !12590
  %and = and i32 %34, -16385, !dbg !12590
  store i32 %and, i32* %c_iflag33, align 8, !dbg !12590
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then31
  br label %unlock, !dbg !12581

unlock:                                           ; preds = %if.end34, %if.then8, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !12591), !dbg !12592
  call void @console_unlock() #13, !dbg !12593
  %35 = load i32, i32* %ret, align 4, !dbg !12594
  ret i32 %35, !dbg !12595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con_open(%struct.tty_struct* %tty, %struct.file* %filp) #0 !dbg !12596 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12597, metadata !DIExpression()), !dbg !12598
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !12599, metadata !DIExpression()), !dbg !12600
  ret i32 0, !dbg !12601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_close(%struct.tty_struct* %tty, %struct.file* %filp) #0 !dbg !12602 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12603, metadata !DIExpression()), !dbg !12604
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !12605, metadata !DIExpression()), !dbg !12606
  ret void, !dbg !12607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_shutdown(%struct.tty_struct* %tty) #0 !dbg !12608 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %vc = alloca %struct.vc_data*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12609, metadata !DIExpression()), !dbg !12610
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !12611, metadata !DIExpression()), !dbg !12612
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12613
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !12614
  %1 = load i8*, i8** %driver_data, align 8, !dbg !12614
  %2 = bitcast i8* %1 to %struct.vc_data*, !dbg !12613
  store %struct.vc_data* %2, %struct.vc_data** %vc, align 8, !dbg !12612
  br label %do.body, !dbg !12615

do.body:                                          ; preds = %entry
  %3 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12616
  %cmp = icmp eq %struct.vc_data* %3, null, !dbg !12616
  %lnot = xor i1 %cmp, true, !dbg !12616
  %lnot1 = xor i1 %lnot, true, !dbg !12616
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12616
  %conv = sext i32 %lnot.ext to i64, !dbg !12616
  %tobool = icmp ne i64 %conv, 0, !dbg !12616
  br i1 %tobool, label %if.then, label %if.end, !dbg !12619

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !12616

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !12620

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !12622

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !12620

do.body4:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 3397, i32 0, i64 12) #5, !dbg !12624, !srcloc !12626
  br label %do.end5, !dbg !12624

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !12620

do.body6:                                         ; preds = %do.end5
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 267) #5, !dbg !12627, !srcloc !12630
  unreachable, !dbg !12631

do.end7:                                          ; No predecessors!
  br label %do.end8, !dbg !12620

do.end8:                                          ; preds = %do.end7
  br label %if.end, !dbg !12620

if.end:                                           ; preds = %do.end8, %do.body
  br label %do.end9, !dbg !12619

do.end9:                                          ; preds = %if.end
  call void @console_lock() #13, !dbg !12632
  %4 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12633
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 0, !dbg !12634
  %tty10 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !12635
  store %struct.tty_struct* null, %struct.tty_struct** %tty10, align 8, !dbg !12636
  call void @console_unlock() #13, !dbg !12637
  ret void, !dbg !12638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_cleanup(%struct.tty_struct* %tty) #0 !dbg !12639 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %vc = alloca %struct.vc_data*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12640, metadata !DIExpression()), !dbg !12641
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !12642, metadata !DIExpression()), !dbg !12643
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12644
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !12645
  %1 = load i8*, i8** %driver_data, align 8, !dbg !12645
  %2 = bitcast i8* %1 to %struct.vc_data*, !dbg !12644
  store %struct.vc_data* %2, %struct.vc_data** %vc, align 8, !dbg !12643
  %3 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12646
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 0, !dbg !12647
  call void @tty_port_put(%struct.tty_port* %port) #13, !dbg !12648
  ret void, !dbg !12649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con_write(%struct.tty_struct* %tty, i8* %buf, i32 %count) #0 !dbg !12650 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12651, metadata !DIExpression()), !dbg !12652
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12653, metadata !DIExpression()), !dbg !12654
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !12655, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !12657, metadata !DIExpression()), !dbg !12658
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12659
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !12660
  %2 = load i32, i32* %count.addr, align 4, !dbg !12661
  %call = call i32 @do_con_write(%struct.tty_struct* %0, i8* %1, i32 %2) #13, !dbg !12662
  store i32 %call, i32* %retval1, align 4, !dbg !12663
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12664
  call void @con_flush_chars(%struct.tty_struct* %3) #13, !dbg !12665
  %4 = load i32, i32* %retval1, align 4, !dbg !12666
  ret i32 %4, !dbg !12667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con_put_char(%struct.tty_struct* %tty, i8 zeroext %ch) #0 !dbg !12668 {
entry:
  %pfo_val__.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pfo_val__.i, metadata !12669, metadata !DIExpression()), !dbg !12673
  %tmp.i = alloca i32, align 4
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch.addr = alloca i8, align 1
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12676, metadata !DIExpression()), !dbg !12677
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !12678, metadata !DIExpression()), !dbg !12679
  %0 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #4, !dbg !12673, !srcloc !12680
  store i32 %0, i32* %pfo_val__.i, align 4, !dbg !12673
  %1 = load i32, i32* %pfo_val__.i, align 4, !dbg !12673
  %conv.i = zext i32 %1 to i64, !dbg !12673
  store i32 %1, i32* %tmp.i, align 4, !dbg !12673
  %2 = load i32, i32* %tmp.i, align 4, !dbg !12673
  %and.i = and i32 %2, 2147483647, !dbg !12681
  %conv = sext i32 %and.i to i64, !dbg !12682
  %and = and i64 %conv, 16776960, !dbg !12682
  %tobool = icmp ne i64 %and, 0, !dbg !12682
  br i1 %tobool, label %if.then, label %if.end, !dbg !12683

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12684
  br label %return, !dbg !12684

if.end:                                           ; preds = %entry
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12685
  %call1 = call i32 @do_con_write(%struct.tty_struct* %3, i8* %ch.addr, i32 1) #13, !dbg !12686
  store i32 %call1, i32* %retval, align 4, !dbg !12687
  br label %return, !dbg !12687

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !12688
  ret i32 %4, !dbg !12688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_flush_chars(%struct.tty_struct* %tty) #0 !dbg !12689 {
entry:
  %pfo_val__.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pfo_val__.i, metadata !12669, metadata !DIExpression()), !dbg !12690
  %tmp.i = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %vc = alloca %struct.vc_data*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12693, metadata !DIExpression()), !dbg !12694
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !12695, metadata !DIExpression()), !dbg !12696
  %0 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #4, !dbg !12690, !srcloc !12680
  store i32 %0, i32* %pfo_val__.i, align 4, !dbg !12690
  %1 = load i32, i32* %pfo_val__.i, align 4, !dbg !12690
  %conv.i = zext i32 %1 to i64, !dbg !12690
  store i32 %1, i32* %tmp.i, align 4, !dbg !12690
  %2 = load i32, i32* %tmp.i, align 4, !dbg !12690
  %and.i = and i32 %2, 2147483647, !dbg !12697
  %conv = sext i32 %and.i to i64, !dbg !12698
  %and = and i64 %conv, 16776960, !dbg !12698
  %tobool = icmp ne i64 %and, 0, !dbg !12698
  br i1 %tobool, label %if.then, label %if.end, !dbg !12699

if.then:                                          ; preds = %entry
  br label %return, !dbg !12700

if.end:                                           ; preds = %entry
  call void @console_lock() #13, !dbg !12701
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12702
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %3, i32 0, i32 37, !dbg !12703
  %4 = load i8*, i8** %driver_data, align 8, !dbg !12703
  %5 = bitcast i8* %4 to %struct.vc_data*, !dbg !12702
  store %struct.vc_data* %5, %struct.vc_data** %vc, align 8, !dbg !12704
  %6 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12705
  %tobool1 = icmp ne %struct.vc_data* %6, null, !dbg !12705
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !12707

if.then2:                                         ; preds = %if.end
  %7 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12708
  call void @set_cursor(%struct.vc_data* %7) #13, !dbg !12709
  br label %if.end3, !dbg !12709

if.end3:                                          ; preds = %if.then2, %if.end
  call void @console_unlock() #13, !dbg !12710
  br label %return, !dbg !12711

return:                                           ; preds = %if.end3, %if.then
  ret void, !dbg !12711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con_write_room(%struct.tty_struct* %tty) #0 !dbg !12712 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12713, metadata !DIExpression()), !dbg !12714
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12715
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 24, !dbg !12717
  %bf.load = load i8, i8* %stopped, align 4, !dbg !12717
  %bf.clear = and i8 %bf.load, 1, !dbg !12717
  %bf.cast = zext i8 %bf.clear to i64, !dbg !12717
  %tobool = icmp ne i64 %bf.cast, 0, !dbg !12715
  br i1 %tobool, label %if.then, label %if.end, !dbg !12718

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12719
  br label %return, !dbg !12719

if.end:                                           ; preds = %entry
  store i32 32768, i32* %retval, align 4, !dbg !12720
  br label %return, !dbg !12720

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !12721
  ret i32 %1, !dbg !12721
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @con_chars_in_buffer(%struct.tty_struct* %tty) #0 !dbg !12722 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12723, metadata !DIExpression()), !dbg !12724
  ret i32 0, !dbg !12725
}

; Function Attrs: noredzone
declare dso_local i32 @vt_ioctl(%struct.tty_struct*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_throttle(%struct.tty_struct* %tty) #0 !dbg !12726 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12727, metadata !DIExpression()), !dbg !12728
  ret void, !dbg !12729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_unthrottle(%struct.tty_struct* %tty) #0 !dbg !12730 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %vc = alloca %struct.vc_data*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12731, metadata !DIExpression()), !dbg !12732
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !12733, metadata !DIExpression()), !dbg !12734
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12735
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !12736
  %1 = load i8*, i8** %driver_data, align 8, !dbg !12736
  %2 = bitcast i8* %1 to %struct.vc_data*, !dbg !12735
  store %struct.vc_data* %2, %struct.vc_data** %vc, align 8, !dbg !12734
  %3 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12737
  %paste_wait = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 35, !dbg !12737
  call void @__wake_up(%struct.wait_queue_head* %paste_wait, i32 1, i32 1, i8* null) #13, !dbg !12737
  ret void, !dbg !12738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_stop(%struct.tty_struct* %tty) #0 !dbg !12739 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %console_num = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12740, metadata !DIExpression()), !dbg !12741
  call void @llvm.dbg.declare(metadata i32* %console_num, metadata !12742, metadata !DIExpression()), !dbg !12743
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12744
  %tobool = icmp ne %struct.tty_struct* %0, null, !dbg !12744
  br i1 %tobool, label %if.end, label %if.then, !dbg !12746

if.then:                                          ; preds = %entry
  br label %return, !dbg !12747

if.end:                                           ; preds = %entry
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12748
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %1, i32 0, i32 5, !dbg !12749
  %2 = load i32, i32* %index, align 8, !dbg !12749
  store i32 %2, i32* %console_num, align 4, !dbg !12750
  %3 = load i32, i32* %console_num, align 4, !dbg !12751
  %call = call i32 @vc_cons_allocated(i32 %3) #13, !dbg !12753
  %tobool1 = icmp ne i32 %call, 0, !dbg !12753
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !12754

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !12755

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %console_num, align 4, !dbg !12756
  call void @vt_kbd_con_stop(i32 %4) #13, !dbg !12757
  br label %return, !dbg !12758

return:                                           ; preds = %if.end3, %if.then2, %if.then
  ret void, !dbg !12758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_start(%struct.tty_struct* %tty) #0 !dbg !12759 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %console_num = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12760, metadata !DIExpression()), !dbg !12761
  call void @llvm.dbg.declare(metadata i32* %console_num, metadata !12762, metadata !DIExpression()), !dbg !12763
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12764
  %tobool = icmp ne %struct.tty_struct* %0, null, !dbg !12764
  br i1 %tobool, label %if.end, label %if.then, !dbg !12766

if.then:                                          ; preds = %entry
  br label %return, !dbg !12767

if.end:                                           ; preds = %entry
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12768
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %1, i32 0, i32 5, !dbg !12769
  %2 = load i32, i32* %index, align 8, !dbg !12769
  store i32 %2, i32* %console_num, align 4, !dbg !12770
  %3 = load i32, i32* %console_num, align 4, !dbg !12771
  %call = call i32 @vc_cons_allocated(i32 %3) #13, !dbg !12773
  %tobool1 = icmp ne i32 %call, 0, !dbg !12773
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !12774

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !12775

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %console_num, align 4, !dbg !12776
  call void @vt_kbd_con_start(i32 %4) #13, !dbg !12777
  br label %return, !dbg !12778

return:                                           ; preds = %if.end3, %if.then2, %if.then
  ret void, !dbg !12778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vt_resize(%struct.tty_struct* %tty, %struct.winsize* %ws) #0 !dbg !12779 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ws.addr = alloca %struct.winsize*, align 8
  %vc = alloca %struct.vc_data*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12780, metadata !DIExpression()), !dbg !12781
  store %struct.winsize* %ws, %struct.winsize** %ws.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.winsize** %ws.addr, metadata !12782, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !12784, metadata !DIExpression()), !dbg !12785
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12786
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !12787
  %1 = load i8*, i8** %driver_data, align 8, !dbg !12787
  %2 = bitcast i8* %1 to %struct.vc_data*, !dbg !12786
  store %struct.vc_data* %2, %struct.vc_data** %vc, align 8, !dbg !12785
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12788, metadata !DIExpression()), !dbg !12789
  call void @console_lock() #13, !dbg !12790
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12791
  %4 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !12792
  %5 = load %struct.winsize*, %struct.winsize** %ws.addr, align 8, !dbg !12793
  %ws_col = getelementptr inbounds %struct.winsize, %struct.winsize* %5, i32 0, i32 1, !dbg !12794
  %6 = load i16, i16* %ws_col, align 2, !dbg !12794
  %conv = zext i16 %6 to i32, !dbg !12793
  %7 = load %struct.winsize*, %struct.winsize** %ws.addr, align 8, !dbg !12795
  %ws_row = getelementptr inbounds %struct.winsize, %struct.winsize* %7, i32 0, i32 0, !dbg !12796
  %8 = load i16, i16* %ws_row, align 2, !dbg !12796
  %conv1 = zext i16 %8 to i32, !dbg !12795
  %call = call i32 @vc_do_resize(%struct.tty_struct* %3, %struct.vc_data* %4, i32 %conv, i32 %conv1) #13, !dbg !12797
  store i32 %call, i32* %ret, align 4, !dbg !12798
  call void @console_unlock() #13, !dbg !12799
  %9 = load i32, i32* %ret, align 4, !dbg !12800
  ret i32 %9, !dbg !12801
}

; Function Attrs: noredzone
declare dso_local i32 @tty_port_install(%struct.tty_port*, %struct.tty_driver*, %struct.tty_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tty_port* @tty_port_get(%struct.tty_port* %port) #0 !dbg !12802 {
entry:
  %retval = alloca %struct.tty_port*, align 8
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !12805, metadata !DIExpression()), !dbg !12806
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12807
  %tobool = icmp ne %struct.tty_port* %0, null, !dbg !12807
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12809

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12810
  %kref = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 19, !dbg !12811
  %call = call i32 @kref_get_unless_zero(%struct.kref* %kref) #13, !dbg !12812
  %tobool1 = icmp ne i32 %call, 0, !dbg !12812
  br i1 %tobool1, label %if.then, label %if.end, !dbg !12813

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12814
  store %struct.tty_port* %2, %struct.tty_port** %retval, align 8, !dbg !12815
  br label %return, !dbg !12815

if.end:                                           ; preds = %land.lhs.true, %entry
  store %struct.tty_port* null, %struct.tty_port** %retval, align 8, !dbg !12816
  br label %return, !dbg !12816

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.tty_port*, %struct.tty_port** %retval, align 8, !dbg !12817
  ret %struct.tty_port* %3, !dbg !12817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_get_unless_zero(%struct.kref* %kref) #0 !dbg !12818 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !12822, metadata !DIExpression()), !dbg !12823
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !12824
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !12825
  %call = call zeroext i1 @refcount_inc_not_zero(%struct.refcount_struct* %refcount) #13, !dbg !12826
  %conv = zext i1 %call to i32, !dbg !12826
  ret i32 %conv, !dbg !12827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_inc_not_zero(%struct.refcount_struct* %r) #0 !dbg !12828 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12832, metadata !DIExpression()), !dbg !12833
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12834
  %call = call zeroext i1 @__refcount_inc_not_zero(%struct.refcount_struct* %0, i32* null) #13, !dbg !12835
  ret i1 %call, !dbg !12836
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_inc_not_zero(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !12837 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12840, metadata !DIExpression()), !dbg !12841
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !12842, metadata !DIExpression()), !dbg !12843
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12844
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !12845
  %call = call zeroext i1 @__refcount_add_not_zero(i32 1, %struct.refcount_struct* %0, i32* %1) #13, !dbg !12846
  ret i1 %call, !dbg !12847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_add_not_zero(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !12848 {
entry:
  %v.addr.i5.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i, metadata !12851, metadata !DIExpression()), !dbg !12856
  %old.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i, metadata !12860, metadata !DIExpression()), !dbg !12861
  %new.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i, metadata !12862, metadata !DIExpression()), !dbg !12863
  %success.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i, metadata !12864, metadata !DIExpression()), !dbg !12866
  %_old.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i, metadata !12867, metadata !DIExpression()), !dbg !12866
  %__old.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i, metadata !12868, metadata !DIExpression()), !dbg !12866
  %__new.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i, metadata !12869, metadata !DIExpression()), !dbg !12866
  %__ptr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i, metadata !12870, metadata !DIExpression()), !dbg !12866
  %tmp.i.i = alloca i64, align 8
  %v.addr.i1.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i1.i, metadata !11072, metadata !DIExpression()), !dbg !12871
  %size.addr.i2.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i2.i, metadata !11076, metadata !DIExpression()), !dbg !12873
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !11072, metadata !DIExpression()), !dbg !12874
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11076, metadata !DIExpression()), !dbg !12876
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !12877, metadata !DIExpression()), !dbg !12878
  %old.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i, metadata !12879, metadata !DIExpression()), !dbg !12880
  %new.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i, metadata !12881, metadata !DIExpression()), !dbg !12882
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !12883, metadata !DIExpression()), !dbg !12884
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12885, metadata !DIExpression()), !dbg !12886
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !12887, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.declare(metadata i32* %old, metadata !12889, metadata !DIExpression()), !dbg !12890
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12891
  %call = call i32 @refcount_read(%struct.refcount_struct* %0) #13, !dbg !12892
  store i32 %call, i32* %old, align 4, !dbg !12890
  br label %do.body, !dbg !12893

do.body:                                          ; preds = %atomic_try_cmpxchg_relaxed.exit, %entry
  %1 = load i32, i32* %old, align 4, !dbg !12894
  %tobool = icmp ne i32 %1, 0, !dbg !12894
  br i1 %tobool, label %if.end, label %if.then, !dbg !12897

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !12898

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !12899

do.cond:                                          ; preds = %if.end
  %2 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12900
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %2, i32 0, i32 0, !dbg !12901
  %3 = load i32, i32* %old, align 4, !dbg !12902
  %4 = load i32, i32* %i.addr, align 4, !dbg !12903
  %add = add i32 %3, %4, !dbg !12904
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32* %old, i32** %old.addr.i, align 8
  store i32 %add, i32* %new.addr.i, align 4
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12905
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !12905
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12906
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !12907
  %conv.i.i = trunc i64 %8 to i32, !dbg !12907
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %7, i32 %conv.i.i) #14, !dbg !12908
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12909
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !12909
  call void @kcsan_check_access(i8* %9, i64 %10, i32 7) #14, !dbg !12909
  %11 = load i32*, i32** %old.addr.i, align 8, !dbg !12910
  %12 = bitcast i32* %11 to i8*, !dbg !12910
  store i8* %12, i8** %v.addr.i1.i, align 8
  store i64 4, i64* %size.addr.i2.i, align 8
  %13 = load i8*, i8** %v.addr.i1.i, align 8, !dbg !12911
  %14 = load i64, i64* %size.addr.i2.i, align 8, !dbg !12912
  %conv.i3.i = trunc i64 %14 to i32, !dbg !12912
  %call.i4.i = call zeroext i1 @kasan_check_write(i8* %13, i32 %conv.i3.i) #14, !dbg !12913
  %15 = load i8*, i8** %v.addr.i1.i, align 8, !dbg !12914
  %16 = load i64, i64* %size.addr.i2.i, align 8, !dbg !12914
  call void @kcsan_check_access(i8* %15, i64 %16, i32 7) #14, !dbg !12914
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12915
  %18 = load i32*, i32** %old.addr.i, align 8, !dbg !12916
  %19 = load i32, i32* %new.addr.i, align 4, !dbg !12917
  store %struct.atomic_t* %17, %struct.atomic_t** %v.addr.i5.i, align 8
  store i32* %18, i32** %old.addr.i.i, align 8
  store i32 %19, i32* %new.addr.i.i, align 4
  %20 = load i32*, i32** %old.addr.i.i, align 8, !dbg !12866
  store i32* %20, i32** %_old.i.i, align 8, !dbg !12866
  %21 = load i32*, i32** %_old.i.i, align 8, !dbg !12866
  %22 = load i32, i32* %21, align 4, !dbg !12866
  store i32 %22, i32* %__old.i.i, align 4, !dbg !12866
  %23 = load i32, i32* %new.addr.i.i, align 4, !dbg !12866
  store i32 %23, i32* %__new.i.i, align 4, !dbg !12866
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i, align 8, !dbg !12866
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %24, i32 0, i32 0, !dbg !12866
  store i32* %counter.i.i, i32** %__ptr.i.i, align 8, !dbg !12866
  %25 = load i32*, i32** %__ptr.i.i, align 8, !dbg !12866
  %26 = load i32, i32* %__old.i.i, align 4, !dbg !12866
  %27 = load i32, i32* %__new.i.i, align 4, !dbg !12866
  %28 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %25, i32 %27, i32* %25, i32 %26) #5, !dbg !12866, !srcloc !12918
  %asmresult.i.i = extractvalue { i8, i32 } %28, 0, !dbg !12866
  %asmresult1.i.i = extractvalue { i8, i32 } %28, 1, !dbg !12866
  store i8 %asmresult.i.i, i8* %success.i.i, align 1, !dbg !12866
  store i32 %asmresult1.i.i, i32* %__old.i.i, align 4, !dbg !12866
  %29 = load i8, i8* %success.i.i, align 1, !dbg !12919
  %tobool.i.i = trunc i8 %29 to i1, !dbg !12919
  %lnot.i.i = xor i1 %tobool.i.i, true, !dbg !12919
  %lnot3.i.i = xor i1 %tobool.i.i, true, !dbg !12919
  %lnot.ext.i.i = zext i1 %lnot3.i.i to i32, !dbg !12919
  %conv.i6.i = sext i32 %lnot.ext.i.i to i64, !dbg !12919
  br i1 %lnot3.i.i, label %if.then.i.i, label %atomic_try_cmpxchg_relaxed.exit, !dbg !12866

if.then.i.i:                                      ; preds = %do.cond
  %30 = load i32, i32* %__old.i.i, align 4, !dbg !12919
  %31 = load i32*, i32** %_old.i.i, align 8, !dbg !12919
  store i32 %30, i32* %31, align 4, !dbg !12919
  br label %atomic_try_cmpxchg_relaxed.exit, !dbg !12919

atomic_try_cmpxchg_relaxed.exit:                  ; preds = %do.cond, %if.then.i.i
  %32 = load i8, i8* %success.i.i, align 1, !dbg !12866
  %tobool5.i.i = trunc i8 %32 to i1, !dbg !12866
  %lnot6.i.i = xor i1 %tobool5.i.i, true, !dbg !12866
  %lnot.ext9.i.i = zext i1 %tobool5.i.i to i32, !dbg !12866
  %conv10.i.i = sext i32 %lnot.ext9.i.i to i64, !dbg !12866
  store i64 %conv10.i.i, i64* %tmp.i.i, align 8, !dbg !12919
  %33 = load i64, i64* %tmp.i.i, align 8, !dbg !12866
  %tobool11.i.i = icmp ne i64 %33, 0, !dbg !12921
  %lnot = xor i1 %tobool11.i.i, true, !dbg !12922
  br i1 %lnot, label %do.body, label %do.end, !dbg !12899, !llvm.loop !12923

do.end:                                           ; preds = %atomic_try_cmpxchg_relaxed.exit, %if.then
  %34 = load i32*, i32** %oldp.addr, align 8, !dbg !12925
  %tobool2 = icmp ne i32* %34, null, !dbg !12925
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !12927

if.then3:                                         ; preds = %do.end
  %35 = load i32, i32* %old, align 4, !dbg !12928
  %36 = load i32*, i32** %oldp.addr, align 8, !dbg !12929
  store i32 %35, i32* %36, align 4, !dbg !12930
  br label %if.end4, !dbg !12931

if.end4:                                          ; preds = %if.then3, %do.end
  %37 = load i32, i32* %old, align 4, !dbg !12932
  %cmp = icmp slt i32 %37, 0, !dbg !12932
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !12932

lor.rhs:                                          ; preds = %if.end4
  %38 = load i32, i32* %old, align 4, !dbg !12932
  %39 = load i32, i32* %i.addr, align 4, !dbg !12932
  %add5 = add i32 %38, %39, !dbg !12932
  %cmp6 = icmp slt i32 %add5, 0, !dbg !12932
  br label %lor.end, !dbg !12932

lor.end:                                          ; preds = %lor.rhs, %if.end4
  %40 = phi i1 [ true, %if.end4 ], [ %cmp6, %lor.rhs ]
  %lnot7 = xor i1 %40, true, !dbg !12932
  %lnot8 = xor i1 %lnot7, true, !dbg !12932
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !12932
  %conv = sext i32 %lnot.ext to i64, !dbg !12932
  %tobool9 = icmp ne i64 %conv, 0, !dbg !12932
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !12934

if.then10:                                        ; preds = %lor.end
  %41 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12935
  call void @refcount_warn_saturate(%struct.refcount_struct* %41, i32 0) #13, !dbg !12936
  br label %if.end11, !dbg !12936

if.end11:                                         ; preds = %if.then10, %lor.end
  %42 = load i32, i32* %old, align 4, !dbg !12937
  %tobool12 = icmp ne i32 %42, 0, !dbg !12937
  ret i1 %tobool12, !dbg !12938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @refcount_read(%struct.refcount_struct* %r) #0 !dbg !12939 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4854, metadata !DIExpression()), !dbg !12944
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4867, metadata !DIExpression()), !dbg !12947
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4877, metadata !DIExpression()), !dbg !12949
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4879, metadata !DIExpression()), !dbg !12950
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12951, metadata !DIExpression()), !dbg !12952
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12953
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !12954
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12955
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !12955
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12956
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !12957
  %conv.i.i = trunc i64 %4 to i32, !dbg !12957
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #14, !dbg !12958
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12959
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !12959
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !12959
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12960
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12961
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !12961
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !12961
  ret i32 %9, !dbg !12962
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_put(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_con_write(%struct.tty_struct* %tty, i8* %buf, i32 %count) #0 !dbg !4767 {
entry:
  %pfo_val__.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pfo_val__.i, metadata !12669, metadata !DIExpression()), !dbg !12963
  %tmp.i = alloca i32, align 4
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %draw = alloca %struct.vc_draw_region, align 8
  %c = alloca i32, align 4
  %tc = alloca i32, align 4
  %n = alloca i32, align 4
  %currcons = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  %param = alloca %struct.vt_notifier_param, align 8
  %rescan = alloca i8, align 1
  %__ret_print_once = alloca i8, align 1
  %tmp = alloca i64, align 8
  %orig = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12966, metadata !DIExpression()), !dbg !12967
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12968, metadata !DIExpression()), !dbg !12969
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !12970, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.declare(metadata %struct.vc_draw_region* %draw, metadata !12972, metadata !DIExpression()), !dbg !12978
  %0 = bitcast %struct.vc_draw_region* %draw to i8*, !dbg !12978
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.vc_draw_region* @__const.do_con_write.draw to i8*), i64 24, i1 false), !dbg !12978
  call void @llvm.dbg.declare(metadata i32* %c, metadata !12979, metadata !DIExpression()), !dbg !12980
  call void @llvm.dbg.declare(metadata i32* %tc, metadata !12981, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.declare(metadata i32* %n, metadata !12983, metadata !DIExpression()), !dbg !12984
  store i32 0, i32* %n, align 4, !dbg !12984
  call void @llvm.dbg.declare(metadata i32* %currcons, metadata !12985, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !12987, metadata !DIExpression()), !dbg !12988
  call void @llvm.dbg.declare(metadata %struct.vt_notifier_param* %param, metadata !12989, metadata !DIExpression()), !dbg !12990
  call void @llvm.dbg.declare(metadata i8* %rescan, metadata !12991, metadata !DIExpression()), !dbg !12992
  %1 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #4, !dbg !12963, !srcloc !12680
  store i32 %1, i32* %pfo_val__.i, align 4, !dbg !12963
  %2 = load i32, i32* %pfo_val__.i, align 4, !dbg !12963
  %conv.i = zext i32 %2 to i64, !dbg !12963
  store i32 %2, i32* %tmp.i, align 4, !dbg !12963
  %3 = load i32, i32* %tmp.i, align 4, !dbg !12963
  %and.i = and i32 %3, 2147483647, !dbg !12993
  %conv = sext i32 %and.i to i64, !dbg !12994
  %and = and i64 %conv, 16776960, !dbg !12994
  %tobool = icmp ne i64 %and, 0, !dbg !12994
  br i1 %tobool, label %if.then, label %if.end, !dbg !12995

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %count.addr, align 4, !dbg !12996
  store i32 %4, i32* %retval, align 4, !dbg !12997
  br label %return, !dbg !12997

if.end:                                           ; preds = %entry
  call void @console_lock() #13, !dbg !12998
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12999
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 37, !dbg !13000
  %6 = load i8*, i8** %driver_data, align 8, !dbg !13000
  %7 = bitcast i8* %6 to %struct.vc_data*, !dbg !12999
  store %struct.vc_data* %7, %struct.vc_data** %vc, align 8, !dbg !13001
  %8 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13002
  %cmp = icmp eq %struct.vc_data* %8, null, !dbg !13004
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !13005

if.then2:                                         ; preds = %if.end
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i64 0, i64 0)) #17, !dbg !13006
  call void @console_unlock() #13, !dbg !13008
  store i32 0, i32* %retval, align 4, !dbg !13009
  br label %return, !dbg !13009

if.end4:                                          ; preds = %if.end
  %9 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13010
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 3, !dbg !13011
  %10 = load i16, i16* %vc_num, align 8, !dbg !13011
  %conv5 = zext i16 %10 to i32, !dbg !13010
  store i32 %conv5, i32* %currcons, align 4, !dbg !13012
  %11 = load i32, i32* %currcons, align 4, !dbg !13013
  %call6 = call i32 @vc_cons_allocated(i32 %11) #13, !dbg !13015
  %tobool7 = icmp ne i32 %call6, 0, !dbg !13015
  br i1 %tobool7, label %if.end18, label %if.then8, !dbg !13016

if.then8:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i8* %__ret_print_once, metadata !13017, metadata !DIExpression()), !dbg !13020
  %12 = load i8, i8* @do_con_write.__print_once, align 1, !dbg !13020
  %tobool9 = trunc i8 %12 to i1, !dbg !13020
  %lnot = xor i1 %tobool9, true, !dbg !13020
  %frombool = zext i1 %lnot to i8, !dbg !13020
  store i8 %frombool, i8* %__ret_print_once, align 1, !dbg !13020
  %13 = load i8, i8* @do_con_write.__print_once, align 1, !dbg !13021
  %tobool10 = trunc i8 %13 to i1, !dbg !13021
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !13020

if.then11:                                        ; preds = %if.then8
  store i8 1, i8* @do_con_write.__print_once, align 1, !dbg !13023
  %14 = load i32, i32* %currcons, align 4, !dbg !13023
  %add = add i32 %14, 1, !dbg !13023
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.17, i64 0, i64 0), i32 %add) #17, !dbg !13023
  br label %if.end13, !dbg !13023

if.end13:                                         ; preds = %if.then11, %if.then8
  %15 = load i8, i8* %__ret_print_once, align 1, !dbg !13020
  %tobool14 = trunc i8 %15 to i1, !dbg !13020
  %lnot15 = xor i1 %tobool14, true, !dbg !13020
  %lnot16 = xor i1 %lnot15, true, !dbg !13020
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !13020
  %conv17 = sext i32 %lnot.ext to i64, !dbg !13020
  store i64 %conv17, i64* %tmp, align 8, !dbg !13021
  %16 = load i64, i64* %tmp, align 8, !dbg !13020
  call void @console_unlock() #13, !dbg !13025
  store i32 0, i32* %retval, align 4, !dbg !13026
  br label %return, !dbg !13026

if.end18:                                         ; preds = %if.end4
  %17 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13027
  %call19 = call zeroext i1 @con_is_fg(%struct.vc_data* %17) #13, !dbg !13029
  br i1 %call19, label %if.then20, label %if.end21, !dbg !13030

if.then20:                                        ; preds = %if.end18
  %18 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13031
  call void @hide_cursor(%struct.vc_data* %18) #13, !dbg !13032
  br label %if.end21, !dbg !13032

if.end21:                                         ; preds = %if.then20, %if.end18
  %19 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13033
  %vc22 = getelementptr inbounds %struct.vt_notifier_param, %struct.vt_notifier_param* %param, i32 0, i32 0, !dbg !13034
  store %struct.vc_data* %19, %struct.vc_data** %vc22, align 8, !dbg !13035
  br label %while.cond, !dbg !13036

while.cond:                                       ; preds = %if.end47, %if.then43, %if.then38, %if.then35, %if.then29, %if.end21
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13037
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %20, i32 0, i32 24, !dbg !13038
  %bf.load = load i8, i8* %stopped, align 4, !dbg !13038
  %bf.clear = and i8 %bf.load, 1, !dbg !13038
  %bf.cast = zext i8 %bf.clear to i64, !dbg !13038
  %tobool23 = icmp ne i64 %bf.cast, 0, !dbg !13037
  br i1 %tobool23, label %land.end, label %land.rhs, !dbg !13039

land.rhs:                                         ; preds = %while.cond
  %21 = load i32, i32* %count.addr, align 4, !dbg !13040
  %tobool24 = icmp ne i32 %21, 0, !dbg !13039
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %22 = phi i1 [ false, %while.cond ], [ %tobool24, %land.rhs ], !dbg !13041
  br i1 %22, label %while.body, label %while.end, !dbg !13036

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !13042, metadata !DIExpression()), !dbg !13044
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !13045
  %24 = load i8, i8* %23, align 1, !dbg !13046
  %conv25 = zext i8 %24 to i32, !dbg !13046
  store i32 %conv25, i32* %orig, align 4, !dbg !13044
  %25 = load i8*, i8** %buf.addr, align 8, !dbg !13047
  %incdec.ptr = getelementptr i8, i8* %25, i32 1, !dbg !13047
  store i8* %incdec.ptr, i8** %buf.addr, align 8, !dbg !13047
  %26 = load i32, i32* %n, align 4, !dbg !13048
  %inc = add i32 %26, 1, !dbg !13048
  store i32 %inc, i32* %n, align 4, !dbg !13048
  %27 = load i32, i32* %count.addr, align 4, !dbg !13049
  %dec = add i32 %27, -1, !dbg !13049
  store i32 %dec, i32* %count.addr, align 4, !dbg !13049
  br label %rescan_last_byte, !dbg !13050

rescan_last_byte:                                 ; preds = %if.then46, %while.body
  call void @llvm.dbg.label(metadata !13051), !dbg !13052
  %28 = load i32, i32* %orig, align 4, !dbg !13053
  store i32 %28, i32* %c, align 4, !dbg !13054
  store i8 0, i8* %rescan, align 1, !dbg !13055
  %29 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13056
  %call26 = call i32 @vc_translate(%struct.vc_data* %29, i32* %c, i8* %rescan) #13, !dbg !13057
  store i32 %call26, i32* %tc, align 4, !dbg !13058
  %30 = load i32, i32* %tc, align 4, !dbg !13059
  %cmp27 = icmp eq i32 %30, -1, !dbg !13061
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !13062

if.then29:                                        ; preds = %rescan_last_byte
  br label %while.cond, !dbg !13063, !llvm.loop !13064

if.end30:                                         ; preds = %rescan_last_byte
  %31 = load i32, i32* %tc, align 4, !dbg !13066
  %c31 = getelementptr inbounds %struct.vt_notifier_param, %struct.vt_notifier_param* %param, i32 0, i32 1, !dbg !13067
  store i32 %31, i32* %c31, align 8, !dbg !13068
  %32 = bitcast %struct.vt_notifier_param* %param to i8*, !dbg !13069
  %call32 = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head* @vt_notifier_list, i64 5, i8* %32) #13, !dbg !13071
  %cmp33 = icmp eq i32 %call32, 32769, !dbg !13072
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !13073

if.then35:                                        ; preds = %if.end30
  br label %while.cond, !dbg !13074, !llvm.loop !13064

if.end36:                                         ; preds = %if.end30
  %33 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13075
  %34 = load i32, i32* %tc, align 4, !dbg !13077
  %35 = load i32, i32* %c, align 4, !dbg !13078
  %call37 = call zeroext i1 @vc_is_control(%struct.vc_data* %33, i32 %34, i32 %35) #13, !dbg !13079
  br i1 %call37, label %if.then38, label %if.end39, !dbg !13080

if.then38:                                        ; preds = %if.end36
  %36 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13081
  call void @con_flush(%struct.vc_data* %36, %struct.vc_draw_region* %draw) #13, !dbg !13083
  %37 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13084
  %38 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13085
  %39 = load i32, i32* %orig, align 4, !dbg !13086
  call void @do_con_trol(%struct.tty_struct* %37, %struct.vc_data* %38, i32 %39) #13, !dbg !13087
  br label %while.cond, !dbg !13088, !llvm.loop !13064

if.end39:                                         ; preds = %if.end36
  %40 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13089
  %41 = load i32, i32* %tc, align 4, !dbg !13091
  %42 = load i32, i32* %c, align 4, !dbg !13092
  %call40 = call i32 @vc_con_write_normal(%struct.vc_data* %40, i32 %41, i32 %42, %struct.vc_draw_region* %draw) #13, !dbg !13093
  %cmp41 = icmp slt i32 %call40, 0, !dbg !13094
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !13095

if.then43:                                        ; preds = %if.end39
  br label %while.cond, !dbg !13096, !llvm.loop !13064

if.end44:                                         ; preds = %if.end39
  %43 = load i8, i8* %rescan, align 1, !dbg !13097
  %tobool45 = trunc i8 %43 to i1, !dbg !13097
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !13099

if.then46:                                        ; preds = %if.end44
  br label %rescan_last_byte, !dbg !13100

if.end47:                                         ; preds = %if.end44
  br label %while.cond, !dbg !13036, !llvm.loop !13064

while.end:                                        ; preds = %land.end
  %44 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13101
  call void @con_flush(%struct.vc_data* %44, %struct.vc_draw_region* %draw) #13, !dbg !13102
  %45 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13103
  call void @vc_uniscr_debug_check(%struct.vc_data* %45) #13, !dbg !13104
  call void @console_conditional_schedule() #13, !dbg !13105
  %46 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !13106
  call void @notify_update(%struct.vc_data* %46) #13, !dbg !13107
  call void @console_unlock() #13, !dbg !13108
  %47 = load i32, i32* %n, align 4, !dbg !13109
  store i32 %47, i32* %retval, align 4, !dbg !13110
  br label %return, !dbg !13110

return:                                           ; preds = %while.end, %if.end13, %if.then2, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !13111
  ret i32 %48, !dbg !13111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vc_translate(%struct.vc_data* %vc, i32* %c, i8* %rescan) #0 !dbg !13112 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %c.addr = alloca i32*, align 8
  %rescan.addr = alloca i8*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13115, metadata !DIExpression()), !dbg !13116
  store i32* %c, i32** %c.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %c.addr, metadata !13117, metadata !DIExpression()), !dbg !13118
  store i8* %rescan, i8** %rescan.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rescan.addr, metadata !13119, metadata !DIExpression()), !dbg !13120
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13121
  %vc_state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 29, !dbg !13123
  %1 = load i32, i32* %vc_state, align 4, !dbg !13123
  %cmp = icmp ne i32 %1, 0, !dbg !13124
  br i1 %cmp, label %if.then, label %if.end, !dbg !13125

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %c.addr, align 8, !dbg !13126
  %3 = load i32, i32* %2, align 4, !dbg !13127
  store i32 %3, i32* %retval, align 4, !dbg !13128
  br label %return, !dbg !13128

if.end:                                           ; preds = %entry
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13129
  %vc_utf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 36, !dbg !13131
  %bf.load = load i16, i16* %vc_utf, align 8, !dbg !13131
  %bf.lshr = lshr i16 %bf.load, 14, !dbg !13131
  %bf.clear = and i16 %bf.lshr, 1, !dbg !13131
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !13131
  %conv = zext i8 %bf.cast to i32, !dbg !13129
  %tobool = icmp ne i32 %conv, 0, !dbg !13129
  br i1 %tobool, label %land.lhs.true, label %if.end6, !dbg !13132

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13133
  %vc_disp_ctrl = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 36, !dbg !13134
  %bf.load1 = load i16, i16* %vc_disp_ctrl, align 8, !dbg !13134
  %bf.clear2 = and i16 %bf.load1, 1, !dbg !13134
  %bf.cast3 = zext i16 %bf.clear2 to i32, !dbg !13134
  %tobool4 = icmp ne i32 %bf.cast3, 0, !dbg !13133
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !13135

if.then5:                                         ; preds = %land.lhs.true
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13136
  %7 = load i32*, i32** %c.addr, align 8, !dbg !13137
  %8 = load i32, i32* %7, align 4, !dbg !13138
  %9 = load i8*, i8** %rescan.addr, align 8, !dbg !13139
  %call = call i32 @vc_translate_unicode(%struct.vc_data* %6, i32 %8, i8* %9) #13, !dbg !13140
  %10 = load i32*, i32** %c.addr, align 8, !dbg !13141
  store i32 %call, i32* %10, align 4, !dbg !13142
  store i32 %call, i32* %retval, align 4, !dbg !13143
  br label %return, !dbg !13143

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13144
  %12 = load i32*, i32** %c.addr, align 8, !dbg !13145
  %13 = load i32, i32* %12, align 4, !dbg !13146
  %call7 = call i32 @vc_translate_ascii(%struct.vc_data* %11, i32 %13) #13, !dbg !13147
  store i32 %call7, i32* %retval, align 4, !dbg !13148
  br label %return, !dbg !13148

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !13149
  ret i32 %14, !dbg !13149
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @vc_is_control(%struct.vc_data* %vc, i32 %tc, i32 %c) #0 !dbg !4777 {
entry:
  %retval = alloca i1, align 1
  %vc.addr = alloca %struct.vc_data*, align 8
  %tc.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13150, metadata !DIExpression()), !dbg !13151
  store i32 %tc, i32* %tc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tc.addr, metadata !13152, metadata !DIExpression()), !dbg !13153
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !13154, metadata !DIExpression()), !dbg !13155
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13156
  %vc_state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 29, !dbg !13158
  %1 = load i32, i32* %vc_state, align 4, !dbg !13158
  %cmp = icmp ne i32 %1, 0, !dbg !13159
  br i1 %cmp, label %if.then, label %if.end, !dbg !13160

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !13161
  br label %return, !dbg !13161

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %tc.addr, align 4, !dbg !13162
  %tobool = icmp ne i32 %2, 0, !dbg !13162
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !13164

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !13165
  br label %return, !dbg !13165

if.end2:                                          ; preds = %if.end
  %3 = load i32, i32* %c.addr, align 4, !dbg !13166
  %cmp3 = icmp slt i32 %3, 32, !dbg !13168
  br i1 %cmp3, label %if.then4, label %if.end16, !dbg !13169

if.then4:                                         ; preds = %if.end2
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13170
  %vc_disp_ctrl = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 36, !dbg !13173
  %bf.load = load i16, i16* %vc_disp_ctrl, align 8, !dbg !13173
  %bf.clear = and i16 %bf.load, 1, !dbg !13173
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13173
  %tobool5 = icmp ne i32 %bf.cast, 0, !dbg !13170
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !13174

if.then6:                                         ; preds = %if.then4
  %5 = load i32, i32* %c.addr, align 4, !dbg !13175
  %sh_prom = zext i32 %5 to i64, !dbg !13175
  %shl = shl i64 1, %sh_prom, !dbg !13175
  %and = and i64 134280449, %shl, !dbg !13176
  %tobool7 = icmp ne i64 %and, 0, !dbg !13177
  store i1 %tobool7, i1* %retval, align 1, !dbg !13178
  br label %return, !dbg !13178

if.else:                                          ; preds = %if.then4
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13179
  %vc_utf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 36, !dbg !13180
  %bf.load8 = load i16, i16* %vc_utf, align 8, !dbg !13180
  %bf.lshr = lshr i16 %bf.load8, 14, !dbg !13180
  %bf.clear9 = and i16 %bf.lshr, 1, !dbg !13180
  %bf.cast10 = trunc i16 %bf.clear9 to i8, !dbg !13180
  %conv = zext i8 %bf.cast10 to i32, !dbg !13179
  %tobool11 = icmp ne i32 %conv, 0, !dbg !13179
  br i1 %tobool11, label %lor.end, label %lor.rhs, !dbg !13181

lor.rhs:                                          ; preds = %if.else
  %7 = load i32, i32* %c.addr, align 4, !dbg !13182
  %sh_prom12 = zext i32 %7 to i64, !dbg !13182
  %shl13 = shl i64 1, %sh_prom12, !dbg !13182
  %and14 = and i64 218169217, %shl13, !dbg !13183
  %tobool15 = icmp ne i64 %and14, 0, !dbg !13181
  br label %lor.end, !dbg !13181

lor.end:                                          ; preds = %lor.rhs, %if.else
  %8 = phi i1 [ true, %if.else ], [ %tobool15, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !13184
  br label %return, !dbg !13184

if.end16:                                         ; preds = %if.end2
  %9 = load i32, i32* %c.addr, align 4, !dbg !13185
  %cmp17 = icmp eq i32 %9, 127, !dbg !13187
  br i1 %cmp17, label %land.lhs.true, label %if.end25, !dbg !13188

land.lhs.true:                                    ; preds = %if.end16
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13189
  %vc_disp_ctrl19 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 36, !dbg !13190
  %bf.load20 = load i16, i16* %vc_disp_ctrl19, align 8, !dbg !13190
  %bf.clear21 = and i16 %bf.load20, 1, !dbg !13190
  %bf.cast22 = zext i16 %bf.clear21 to i32, !dbg !13190
  %tobool23 = icmp ne i32 %bf.cast22, 0, !dbg !13189
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !13191

if.then24:                                        ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !13192
  br label %return, !dbg !13192

if.end25:                                         ; preds = %land.lhs.true, %if.end16
  %11 = load i32, i32* %c.addr, align 4, !dbg !13193
  %cmp26 = icmp eq i32 %11, 155, !dbg !13195
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !13196

if.then28:                                        ; preds = %if.end25
  store i1 true, i1* %retval, align 1, !dbg !13197
  br label %return, !dbg !13197

if.end29:                                         ; preds = %if.end25
  store i1 false, i1* %retval, align 1, !dbg !13198
  br label %return, !dbg !13198

return:                                           ; preds = %if.end29, %if.then28, %if.then24, %lor.end, %if.then6, %if.then1, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !13199
  ret i1 %12, !dbg !13199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_flush(%struct.vc_data* %vc, %struct.vc_draw_region* %draw) #0 !dbg !13200 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %draw.addr = alloca %struct.vc_draw_region*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13204, metadata !DIExpression()), !dbg !13205
  store %struct.vc_draw_region* %draw, %struct.vc_draw_region** %draw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_draw_region** %draw.addr, metadata !13206, metadata !DIExpression()), !dbg !13207
  %0 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !13208
  %x = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %0, i32 0, i32 2, !dbg !13210
  %1 = load i32, i32* %x, align 8, !dbg !13210
  %cmp = icmp slt i32 %1, 0, !dbg !13211
  br i1 %cmp, label %if.then, label %if.end, !dbg !13212

if.then:                                          ; preds = %entry
  br label %return, !dbg !13213

if.end:                                           ; preds = %entry
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13214
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 13, !dbg !13215
  %3 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !13215
  %con_putcs = getelementptr inbounds %struct.consw, %struct.consw* %3, i32 0, i32 6, !dbg !13216
  %4 = load void (%struct.vc_data*, i16*, i32, i32, i32)*, void (%struct.vc_data*, i16*, i32, i32, i32)** %con_putcs, align 8, !dbg !13216
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13217
  %6 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !13218
  %from = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %6, i32 0, i32 0, !dbg !13219
  %7 = load i64, i64* %from, align 8, !dbg !13219
  %8 = inttoptr i64 %7 to i16*, !dbg !13220
  %9 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !13221
  %to = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %9, i32 0, i32 1, !dbg !13222
  %10 = load i64, i64* %to, align 8, !dbg !13222
  %11 = inttoptr i64 %10 to i16*, !dbg !13223
  %12 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !13224
  %from1 = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %12, i32 0, i32 0, !dbg !13225
  %13 = load i64, i64* %from1, align 8, !dbg !13225
  %14 = inttoptr i64 %13 to i16*, !dbg !13226
  %sub.ptr.lhs.cast = ptrtoint i16* %11 to i64, !dbg !13227
  %sub.ptr.rhs.cast = ptrtoint i16* %14 to i64, !dbg !13227
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13227
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !13227
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !13223
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13228
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 1, !dbg !13229
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !13230
  %16 = load i32, i32* %y, align 4, !dbg !13230
  %17 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !13231
  %x2 = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %17, i32 0, i32 2, !dbg !13232
  %18 = load i32, i32* %x2, align 8, !dbg !13232
  call void %4(%struct.vc_data* %5, i16* %8, i32 %conv, i32 %16, i32 %18) #13, !dbg !13214
  %19 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !13233
  %x3 = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %19, i32 0, i32 2, !dbg !13234
  store i32 -1, i32* %x3, align 8, !dbg !13235
  br label %return, !dbg !13236

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_con_trol(%struct.tty_struct* %tty, %struct.vc_data* %vc, i32 %c) #0 !dbg !13237 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %vc.addr = alloca %struct.vc_data*, align 8
  %c.addr = alloca i32, align 4
  %__UNIQUE_ID___x265 = alloca i32, align 4
  %__UNIQUE_ID___y266 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !13240, metadata !DIExpression()), !dbg !13241
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !13242, metadata !DIExpression()), !dbg !13243
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !13244, metadata !DIExpression()), !dbg !13245
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13246
  %vc_state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 29, !dbg !13248
  %1 = load i32, i32* %vc_state, align 4, !dbg !13248
  %cmp = icmp eq i32 %1, 12, !dbg !13249
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !13250

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !13251
  %cmp1 = icmp sge i32 %2, 8, !dbg !13252
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !13253

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %c.addr, align 4, !dbg !13254
  %cmp3 = icmp sle i32 %3, 13, !dbg !13255
  br i1 %cmp3, label %if.then, label %if.end, !dbg !13256

if.then:                                          ; preds = %land.lhs.true2
  br label %sw.epilog713, !dbg !13257

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %4 = load i32, i32* %c.addr, align 4, !dbg !13258
  switch i32 %4, label %sw.epilog [
    i32 0, label %sw.bb
    i32 7, label %sw.bb4
    i32 8, label %sw.bb13
    i32 9, label %sw.bb14
    i32 10, label %sw.bb41
    i32 11, label %sw.bb41
    i32 12, label %sw.bb41
    i32 13, label %sw.bb47
    i32 14, label %sw.bb48
    i32 15, label %sw.bb56
    i32 24, label %sw.bb70
    i32 26, label %sw.bb70
    i32 27, label %sw.bb72
    i32 127, label %sw.bb74
    i32 155, label %sw.bb75
  ], !dbg !13259

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog713, !dbg !13260

sw.bb4:                                           ; preds = %if.end
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13262
  %vc_state5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 29, !dbg !13264
  %6 = load i32, i32* %vc_state5, align 4, !dbg !13264
  %cmp6 = icmp eq i32 %6, 12, !dbg !13265
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !13266

if.then7:                                         ; preds = %sw.bb4
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13267
  %vc_state8 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 29, !dbg !13268
  store i32 0, i32* %vc_state8, align 4, !dbg !13269
  br label %if.end12, !dbg !13267

if.else:                                          ; preds = %sw.bb4
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13270
  %vc_bell_duration = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 44, !dbg !13272
  %9 = load i32, i32* %vc_bell_duration, align 8, !dbg !13272
  %tobool = icmp ne i32 %9, 0, !dbg !13270
  br i1 %tobool, label %if.then9, label %if.end11, !dbg !13273

if.then9:                                         ; preds = %if.else
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13274
  %vc_bell_pitch = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 43, !dbg !13275
  %11 = load i32, i32* %vc_bell_pitch, align 4, !dbg !13275
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13276
  %vc_bell_duration10 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 44, !dbg !13277
  %13 = load i32, i32* %vc_bell_duration10, align 8, !dbg !13277
  call void @kd_mksound(i32 %11, i32 %13) #13, !dbg !13278
  br label %if.end11, !dbg !13278

if.end11:                                         ; preds = %if.then9, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then7
  br label %sw.epilog713, !dbg !13279

sw.bb13:                                          ; preds = %if.end
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13280
  call void @bs(%struct.vc_data* %14) #13, !dbg !13281
  br label %sw.epilog713, !dbg !13282

sw.bb14:                                          ; preds = %if.end
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13283
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 1, !dbg !13284
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !13285
  %16 = load i32, i32* %x, align 8, !dbg !13285
  %shl = shl i32 %16, 1, !dbg !13286
  %conv = zext i32 %shl to i64, !dbg !13287
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13288
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 25, !dbg !13289
  %18 = load i64, i64* %vc_pos, align 8, !dbg !13290
  %sub = sub i64 %18, %conv, !dbg !13290
  store i64 %sub, i64* %vc_pos, align 8, !dbg !13290
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13291
  %vc_tab_stop = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 39, !dbg !13292
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %vc_tab_stop, i64 0, i64 0, !dbg !13291
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x265, metadata !13293, metadata !DIExpression()), !dbg !13295
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13295
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %20, i32 0, i32 4, !dbg !13295
  %21 = load i32, i32* %vc_cols, align 4, !dbg !13295
  %sub15 = sub i32 %21, 1, !dbg !13295
  store i32 %sub15, i32* %__UNIQUE_ID___x265, align 4, !dbg !13295
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y266, metadata !13296, metadata !DIExpression()), !dbg !13295
  store i32 256, i32* %__UNIQUE_ID___y266, align 4, !dbg !13295
  %22 = load i32, i32* %__UNIQUE_ID___x265, align 4, !dbg !13295
  %23 = load i32, i32* %__UNIQUE_ID___y266, align 4, !dbg !13295
  %cmp16 = icmp ult i32 %22, %23, !dbg !13295
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !13295

cond.true:                                        ; preds = %sw.bb14
  %24 = load i32, i32* %__UNIQUE_ID___x265, align 4, !dbg !13295
  br label %cond.end, !dbg !13295

cond.false:                                       ; preds = %sw.bb14
  %25 = load i32, i32* %__UNIQUE_ID___y266, align 4, !dbg !13295
  br label %cond.end, !dbg !13295

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %24, %cond.true ], [ %25, %cond.false ], !dbg !13295
  store i32 %cond, i32* %tmp, align 4, !dbg !13295
  %26 = load i32, i32* %tmp, align 4, !dbg !13295
  %conv18 = zext i32 %26 to i64, !dbg !13297
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13298
  %state19 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 1, !dbg !13299
  %x20 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state19, i32 0, i32 0, !dbg !13300
  %28 = load i32, i32* %x20, align 8, !dbg !13300
  %add = add i32 %28, 1, !dbg !13301
  %conv21 = zext i32 %add to i64, !dbg !13298
  %call = call i64 @find_next_bit(i64* %arraydecay, i64 %conv18, i64 %conv21) #13, !dbg !13302
  %conv22 = trunc i64 %call to i32, !dbg !13302
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13303
  %state23 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 1, !dbg !13304
  %x24 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state23, i32 0, i32 0, !dbg !13305
  store i32 %conv22, i32* %x24, align 8, !dbg !13306
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13307
  %state25 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 1, !dbg !13309
  %x26 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state25, i32 0, i32 0, !dbg !13310
  %31 = load i32, i32* %x26, align 8, !dbg !13310
  %cmp27 = icmp uge i32 %31, 256, !dbg !13311
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !13312

if.then29:                                        ; preds = %cond.end
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13313
  %vc_cols30 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 4, !dbg !13314
  %33 = load i32, i32* %vc_cols30, align 4, !dbg !13314
  %sub31 = sub i32 %33, 1, !dbg !13315
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13316
  %state32 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %34, i32 0, i32 1, !dbg !13317
  %x33 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state32, i32 0, i32 0, !dbg !13318
  store i32 %sub31, i32* %x33, align 8, !dbg !13319
  br label %if.end34, !dbg !13316

if.end34:                                         ; preds = %if.then29, %cond.end
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13320
  %state35 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 1, !dbg !13321
  %x36 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state35, i32 0, i32 0, !dbg !13322
  %36 = load i32, i32* %x36, align 8, !dbg !13322
  %shl37 = shl i32 %36, 1, !dbg !13323
  %conv38 = zext i32 %shl37 to i64, !dbg !13324
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13325
  %vc_pos39 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 25, !dbg !13326
  %38 = load i64, i64* %vc_pos39, align 8, !dbg !13327
  %add40 = add i64 %38, %conv38, !dbg !13327
  store i64 %add40, i64* %vc_pos39, align 8, !dbg !13327
  %39 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13328
  call void @notify_write(%struct.vc_data* %39, i32 9) #13, !dbg !13329
  br label %sw.epilog713, !dbg !13330

sw.bb41:                                          ; preds = %if.end, %if.end, %if.end
  %40 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13331
  call void @lf(%struct.vc_data* %40) #13, !dbg !13332
  %41 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13333
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %41, i32 0, i32 3, !dbg !13333
  %42 = load i16, i16* %vc_num, align 8, !dbg !13333
  %conv42 = zext i16 %42 to i32, !dbg !13333
  %call43 = call i32 @vt_get_kbd_mode_bit(i32 %conv42, i32 3) #13, !dbg !13333
  %tobool44 = icmp ne i32 %call43, 0, !dbg !13333
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !13335

if.then45:                                        ; preds = %sw.bb41
  br label %sw.epilog713, !dbg !13336

if.end46:                                         ; preds = %sw.bb41
  br label %sw.bb47, !dbg !13333

sw.bb47:                                          ; preds = %if.end, %if.end46
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13337
  call void @cr(%struct.vc_data* %43) #13, !dbg !13338
  br label %sw.epilog713, !dbg !13339

sw.bb48:                                          ; preds = %if.end
  %44 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13340
  %state49 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %44, i32 0, i32 1, !dbg !13341
  %charset = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state49, i32 0, i32 4, !dbg !13342
  %bf.load = load i8, i8* %charset, align 1, !dbg !13343
  %bf.clear = and i8 %bf.load, -2, !dbg !13343
  %bf.set = or i8 %bf.clear, 1, !dbg !13343
  store i8 %bf.set, i8* %charset, align 1, !dbg !13343
  %45 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13344
  %state50 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %45, i32 0, i32 1, !dbg !13345
  %Gx_charset = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state50, i32 0, i32 3, !dbg !13346
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %Gx_charset, i64 0, i64 1, !dbg !13344
  %46 = load i8, i8* %arrayidx, align 1, !dbg !13344
  %conv51 = zext i8 %46 to i32, !dbg !13344
  %47 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13347
  %call52 = call i16* @set_translate(i32 %conv51, %struct.vc_data* %47) #13, !dbg !13348
  %48 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13349
  %vc_translate = getelementptr inbounds %struct.vc_data, %struct.vc_data* %48, i32 0, i32 41, !dbg !13350
  store i16* %call52, i16** %vc_translate, align 8, !dbg !13351
  %49 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13352
  %vc_disp_ctrl = getelementptr inbounds %struct.vc_data, %struct.vc_data* %49, i32 0, i32 36, !dbg !13353
  %bf.load53 = load i16, i16* %vc_disp_ctrl, align 8, !dbg !13354
  %bf.clear54 = and i16 %bf.load53, -2, !dbg !13354
  %bf.set55 = or i16 %bf.clear54, 1, !dbg !13354
  store i16 %bf.set55, i16* %vc_disp_ctrl, align 8, !dbg !13354
  br label %sw.epilog713, !dbg !13355

sw.bb56:                                          ; preds = %if.end
  %50 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13356
  %state57 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %50, i32 0, i32 1, !dbg !13357
  %charset58 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state57, i32 0, i32 4, !dbg !13358
  %bf.load59 = load i8, i8* %charset58, align 1, !dbg !13359
  %bf.clear60 = and i8 %bf.load59, -2, !dbg !13359
  store i8 %bf.clear60, i8* %charset58, align 1, !dbg !13359
  %51 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13360
  %state61 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %51, i32 0, i32 1, !dbg !13361
  %Gx_charset62 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state61, i32 0, i32 3, !dbg !13362
  %arrayidx63 = getelementptr [2 x i8], [2 x i8]* %Gx_charset62, i64 0, i64 0, !dbg !13360
  %52 = load i8, i8* %arrayidx63, align 1, !dbg !13360
  %conv64 = zext i8 %52 to i32, !dbg !13360
  %53 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13363
  %call65 = call i16* @set_translate(i32 %conv64, %struct.vc_data* %53) #13, !dbg !13364
  %54 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13365
  %vc_translate66 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %54, i32 0, i32 41, !dbg !13366
  store i16* %call65, i16** %vc_translate66, align 8, !dbg !13367
  %55 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13368
  %vc_disp_ctrl67 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %55, i32 0, i32 36, !dbg !13369
  %bf.load68 = load i16, i16* %vc_disp_ctrl67, align 8, !dbg !13370
  %bf.clear69 = and i16 %bf.load68, -2, !dbg !13370
  store i16 %bf.clear69, i16* %vc_disp_ctrl67, align 8, !dbg !13370
  br label %sw.epilog713, !dbg !13371

sw.bb70:                                          ; preds = %if.end, %if.end
  %56 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13372
  %vc_state71 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %56, i32 0, i32 29, !dbg !13373
  store i32 0, i32* %vc_state71, align 4, !dbg !13374
  br label %sw.epilog713, !dbg !13375

sw.bb72:                                          ; preds = %if.end
  %57 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13376
  %vc_state73 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %57, i32 0, i32 29, !dbg !13377
  store i32 1, i32* %vc_state73, align 4, !dbg !13378
  br label %sw.epilog713, !dbg !13379

sw.bb74:                                          ; preds = %if.end
  %58 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13380
  call void @del(%struct.vc_data* %58) #13, !dbg !13381
  br label %sw.epilog713, !dbg !13382

sw.bb75:                                          ; preds = %if.end
  %59 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13383
  %vc_state76 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %59, i32 0, i32 29, !dbg !13384
  store i32 2, i32* %vc_state76, align 4, !dbg !13385
  br label %sw.epilog713, !dbg !13386

sw.epilog:                                        ; preds = %if.end
  %60 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13387
  %vc_state77 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %60, i32 0, i32 29, !dbg !13388
  %61 = load i32, i32* %vc_state77, align 4, !dbg !13388
  switch i32 %61, label %sw.default [
    i32 1, label %sw.bb78
    i32 10, label %sw.bb118
    i32 11, label %sw.bb148
    i32 2, label %sw.bb232
    i32 3, label %sw.bb277
    i32 9, label %sw.bb668
    i32 8, label %sw.bb677
    i32 4, label %sw.bb688
    i32 5, label %sw.bb690
    i32 6, label %sw.bb707
    i32 7, label %sw.bb709
    i32 12, label %sw.bb711
  ], !dbg !13389

sw.bb78:                                          ; preds = %sw.epilog
  %62 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13390
  %vc_state79 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %62, i32 0, i32 29, !dbg !13392
  store i32 0, i32* %vc_state79, align 4, !dbg !13393
  %63 = load i32, i32* %c.addr, align 4, !dbg !13394
  switch i32 %63, label %sw.epilog117 [
    i32 91, label %sw.bb80
    i32 93, label %sw.bb82
    i32 37, label %sw.bb84
    i32 69, label %sw.bb86
    i32 77, label %sw.bb87
    i32 68, label %sw.bb88
    i32 72, label %sw.bb89
    i32 90, label %sw.bb101
    i32 55, label %sw.bb102
    i32 56, label %sw.bb103
    i32 40, label %sw.bb104
    i32 41, label %sw.bb106
    i32 35, label %sw.bb108
    i32 99, label %sw.bb110
    i32 62, label %sw.bb111
    i32 61, label %sw.bb114
  ], !dbg !13395

sw.bb80:                                          ; preds = %sw.bb78
  %64 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13396
  %vc_state81 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %64, i32 0, i32 29, !dbg !13398
  store i32 2, i32* %vc_state81, align 4, !dbg !13399
  br label %sw.epilog713, !dbg !13400

sw.bb82:                                          ; preds = %sw.bb78
  %65 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13401
  %vc_state83 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %65, i32 0, i32 29, !dbg !13402
  store i32 10, i32* %vc_state83, align 4, !dbg !13403
  br label %sw.epilog713, !dbg !13404

sw.bb84:                                          ; preds = %sw.bb78
  %66 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13405
  %vc_state85 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %66, i32 0, i32 29, !dbg !13406
  store i32 8, i32* %vc_state85, align 4, !dbg !13407
  br label %sw.epilog713, !dbg !13408

sw.bb86:                                          ; preds = %sw.bb78
  %67 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13409
  call void @cr(%struct.vc_data* %67) #13, !dbg !13410
  %68 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13411
  call void @lf(%struct.vc_data* %68) #13, !dbg !13412
  br label %sw.epilog713, !dbg !13413

sw.bb87:                                          ; preds = %sw.bb78
  %69 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13414
  call void @ri(%struct.vc_data* %69) #13, !dbg !13415
  br label %sw.epilog713, !dbg !13416

sw.bb88:                                          ; preds = %sw.bb78
  %70 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13417
  call void @lf(%struct.vc_data* %70) #13, !dbg !13418
  br label %sw.epilog713, !dbg !13419

sw.bb89:                                          ; preds = %sw.bb78
  %71 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13420
  %state90 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %71, i32 0, i32 1, !dbg !13422
  %x91 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state90, i32 0, i32 0, !dbg !13423
  %72 = load i32, i32* %x91, align 8, !dbg !13423
  %cmp92 = icmp ult i32 %72, 256, !dbg !13424
  br i1 %cmp92, label %if.then94, label %if.end100, !dbg !13425

if.then94:                                        ; preds = %sw.bb89
  %73 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13426
  %state95 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %73, i32 0, i32 1, !dbg !13427
  %x96 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state95, i32 0, i32 0, !dbg !13428
  %74 = load i32, i32* %x96, align 8, !dbg !13428
  %conv97 = zext i32 %74 to i64, !dbg !13426
  %75 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13429
  %vc_tab_stop98 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %75, i32 0, i32 39, !dbg !13430
  %arraydecay99 = getelementptr inbounds [4 x i64], [4 x i64]* %vc_tab_stop98, i64 0, i64 0, !dbg !13429
  call void @set_bit(i64 %conv97, i64* %arraydecay99) #13, !dbg !13431
  br label %if.end100, !dbg !13431

if.end100:                                        ; preds = %if.then94, %sw.bb89
  br label %sw.epilog713, !dbg !13432

sw.bb101:                                         ; preds = %sw.bb78
  %76 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13433
  call void @respond_ID(%struct.tty_struct* %76) #13, !dbg !13434
  br label %sw.epilog713, !dbg !13435

sw.bb102:                                         ; preds = %sw.bb78
  %77 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13436
  call void @save_cur(%struct.vc_data* %77) #13, !dbg !13437
  br label %sw.epilog713, !dbg !13438

sw.bb103:                                         ; preds = %sw.bb78
  %78 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13439
  call void @restore_cur(%struct.vc_data* %78) #13, !dbg !13440
  br label %sw.epilog713, !dbg !13441

sw.bb104:                                         ; preds = %sw.bb78
  %79 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13442
  %vc_state105 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %79, i32 0, i32 29, !dbg !13443
  store i32 6, i32* %vc_state105, align 4, !dbg !13444
  br label %sw.epilog713, !dbg !13445

sw.bb106:                                         ; preds = %sw.bb78
  %80 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13446
  %vc_state107 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %80, i32 0, i32 29, !dbg !13447
  store i32 7, i32* %vc_state107, align 4, !dbg !13448
  br label %sw.epilog713, !dbg !13449

sw.bb108:                                         ; preds = %sw.bb78
  %81 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13450
  %vc_state109 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %81, i32 0, i32 29, !dbg !13451
  store i32 5, i32* %vc_state109, align 4, !dbg !13452
  br label %sw.epilog713, !dbg !13453

sw.bb110:                                         ; preds = %sw.bb78
  %82 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13454
  call void @reset_terminal(%struct.vc_data* %82, i32 1) #13, !dbg !13455
  br label %sw.epilog713, !dbg !13456

sw.bb111:                                         ; preds = %sw.bb78
  %83 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13457
  %vc_num112 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %83, i32 0, i32 3, !dbg !13457
  %84 = load i16, i16* %vc_num112, align 8, !dbg !13457
  %conv113 = zext i16 %84 to i32, !dbg !13457
  call void @vt_clr_kbd_mode_bit(i32 %conv113, i32 0) #13, !dbg !13457
  br label %sw.epilog713, !dbg !13458

sw.bb114:                                         ; preds = %sw.bb78
  %85 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13459
  %vc_num115 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %85, i32 0, i32 3, !dbg !13459
  %86 = load i16, i16* %vc_num115, align 8, !dbg !13459
  %conv116 = zext i16 %86 to i32, !dbg !13459
  call void @vt_set_kbd_mode_bit(i32 %conv116, i32 0) #13, !dbg !13459
  br label %sw.epilog713, !dbg !13460

sw.epilog117:                                     ; preds = %sw.bb78
  br label %sw.epilog713, !dbg !13461

sw.bb118:                                         ; preds = %sw.epilog
  %87 = load i32, i32* %c.addr, align 4, !dbg !13462
  %cmp119 = icmp eq i32 %87, 80, !dbg !13464
  br i1 %cmp119, label %if.then121, label %if.else130, !dbg !13465

if.then121:                                       ; preds = %sw.bb118
  %88 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13466
  %vc_npar = getelementptr inbounds %struct.vc_data, %struct.vc_data* %88, i32 0, i32 30, !dbg !13469
  store i32 0, i32* %vc_npar, align 8, !dbg !13470
  br label %for.cond, !dbg !13466

for.cond:                                         ; preds = %for.inc, %if.then121
  %89 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13471
  %vc_npar122 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %89, i32 0, i32 30, !dbg !13473
  %90 = load i32, i32* %vc_npar122, align 8, !dbg !13473
  %cmp123 = icmp ult i32 %90, 16, !dbg !13474
  br i1 %cmp123, label %for.body, label %for.end, !dbg !13475

for.body:                                         ; preds = %for.cond
  %91 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13476
  %vc_par = getelementptr inbounds %struct.vc_data, %struct.vc_data* %91, i32 0, i32 31, !dbg !13477
  %92 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13478
  %vc_npar125 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %92, i32 0, i32 30, !dbg !13479
  %93 = load i32, i32* %vc_npar125, align 8, !dbg !13479
  %idxprom = zext i32 %93 to i64, !dbg !13476
  %arrayidx126 = getelementptr [16 x i32], [16 x i32]* %vc_par, i64 0, i64 %idxprom, !dbg !13476
  store i32 0, i32* %arrayidx126, align 4, !dbg !13480
  br label %for.inc, !dbg !13476

for.inc:                                          ; preds = %for.body
  %94 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13481
  %vc_npar127 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %94, i32 0, i32 30, !dbg !13482
  %95 = load i32, i32* %vc_npar127, align 8, !dbg !13483
  %inc = add i32 %95, 1, !dbg !13483
  store i32 %inc, i32* %vc_npar127, align 8, !dbg !13483
  br label %for.cond, !dbg !13484, !llvm.loop !13485

for.end:                                          ; preds = %for.cond
  %96 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13487
  %vc_npar128 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %96, i32 0, i32 30, !dbg !13488
  store i32 0, i32* %vc_npar128, align 8, !dbg !13489
  %97 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13490
  %vc_state129 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %97, i32 0, i32 29, !dbg !13491
  store i32 11, i32* %vc_state129, align 4, !dbg !13492
  br label %sw.epilog713, !dbg !13493

if.else130:                                       ; preds = %sw.bb118
  %98 = load i32, i32* %c.addr, align 4, !dbg !13494
  %cmp131 = icmp eq i32 %98, 82, !dbg !13496
  br i1 %cmp131, label %if.then133, label %if.else135, !dbg !13497

if.then133:                                       ; preds = %if.else130
  %99 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13498
  call void @reset_palette(%struct.vc_data* %99) #13, !dbg !13500
  %100 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13501
  %vc_state134 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %100, i32 0, i32 29, !dbg !13502
  store i32 0, i32* %vc_state134, align 4, !dbg !13503
  br label %if.end146, !dbg !13504

if.else135:                                       ; preds = %if.else130
  %101 = load i32, i32* %c.addr, align 4, !dbg !13505
  %cmp136 = icmp sge i32 %101, 48, !dbg !13507
  br i1 %cmp136, label %land.lhs.true138, label %if.else143, !dbg !13508

land.lhs.true138:                                 ; preds = %if.else135
  %102 = load i32, i32* %c.addr, align 4, !dbg !13509
  %cmp139 = icmp sle i32 %102, 57, !dbg !13510
  br i1 %cmp139, label %if.then141, label %if.else143, !dbg !13511

if.then141:                                       ; preds = %land.lhs.true138
  %103 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13512
  %vc_state142 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %103, i32 0, i32 29, !dbg !13513
  store i32 12, i32* %vc_state142, align 4, !dbg !13514
  br label %if.end145, !dbg !13512

if.else143:                                       ; preds = %land.lhs.true138, %if.else135
  %104 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13515
  %vc_state144 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %104, i32 0, i32 29, !dbg !13516
  store i32 0, i32* %vc_state144, align 4, !dbg !13517
  br label %if.end145

if.end145:                                        ; preds = %if.else143, %if.then141
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then133
  br label %if.end147

if.end147:                                        ; preds = %if.end146
  br label %sw.epilog713, !dbg !13518

sw.bb148:                                         ; preds = %sw.epilog
  %105 = load i32, i32* %c.addr, align 4, !dbg !13519
  %conv149 = trunc i32 %105 to i8, !dbg !13519
  %conv150 = zext i8 %conv149 to i32, !dbg !13519
  %idxprom151 = sext i32 %conv150 to i64, !dbg !13519
  %arrayidx152 = getelementptr [0 x i8], [0 x i8]* @_ctype, i64 0, i64 %idxprom151, !dbg !13519
  %106 = load i8, i8* %arrayidx152, align 1, !dbg !13519
  %conv153 = zext i8 %106 to i32, !dbg !13519
  %and = and i32 %conv153, 68, !dbg !13519
  %cmp154 = icmp ne i32 %and, 0, !dbg !13519
  br i1 %cmp154, label %if.then156, label %if.else229, !dbg !13521

if.then156:                                       ; preds = %sw.bb148
  %107 = load i32, i32* %c.addr, align 4, !dbg !13522
  %conv157 = trunc i32 %107 to i8, !dbg !13522
  %call158 = call i32 @hex_to_bin(i8 signext %conv157) #13, !dbg !13524
  %108 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13525
  %vc_par159 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %108, i32 0, i32 31, !dbg !13526
  %109 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13527
  %vc_npar160 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %109, i32 0, i32 30, !dbg !13528
  %110 = load i32, i32* %vc_npar160, align 8, !dbg !13529
  %inc161 = add i32 %110, 1, !dbg !13529
  store i32 %inc161, i32* %vc_npar160, align 8, !dbg !13529
  %idxprom162 = zext i32 %110 to i64, !dbg !13525
  %arrayidx163 = getelementptr [16 x i32], [16 x i32]* %vc_par159, i64 0, i64 %idxprom162, !dbg !13525
  store i32 %call158, i32* %arrayidx163, align 4, !dbg !13530
  %111 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13531
  %vc_npar164 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %111, i32 0, i32 30, !dbg !13533
  %112 = load i32, i32* %vc_npar164, align 8, !dbg !13533
  %cmp165 = icmp eq i32 %112, 7, !dbg !13534
  br i1 %cmp165, label %if.then167, label %if.end228, !dbg !13535

if.then167:                                       ; preds = %if.then156
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13536, metadata !DIExpression()), !dbg !13538
  %113 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13539
  %vc_par168 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %113, i32 0, i32 31, !dbg !13540
  %arrayidx169 = getelementptr [16 x i32], [16 x i32]* %vc_par168, i64 0, i64 0, !dbg !13539
  %114 = load i32, i32* %arrayidx169, align 4, !dbg !13539
  %mul = mul i32 %114, 3, !dbg !13541
  store i32 %mul, i32* %i, align 4, !dbg !13538
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13542, metadata !DIExpression()), !dbg !13543
  store i32 1, i32* %j, align 4, !dbg !13543
  %115 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13544
  %vc_par170 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %115, i32 0, i32 31, !dbg !13545
  %116 = load i32, i32* %j, align 4, !dbg !13546
  %inc171 = add i32 %116, 1, !dbg !13546
  store i32 %inc171, i32* %j, align 4, !dbg !13546
  %idxprom172 = sext i32 %116 to i64, !dbg !13544
  %arrayidx173 = getelementptr [16 x i32], [16 x i32]* %vc_par170, i64 0, i64 %idxprom172, !dbg !13544
  %117 = load i32, i32* %arrayidx173, align 4, !dbg !13544
  %mul174 = mul i32 16, %117, !dbg !13547
  %conv175 = trunc i32 %mul174 to i8, !dbg !13548
  %118 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13549
  %vc_palette = getelementptr inbounds %struct.vc_data, %struct.vc_data* %118, i32 0, i32 40, !dbg !13550
  %119 = load i32, i32* %i, align 4, !dbg !13551
  %idxprom176 = sext i32 %119 to i64, !dbg !13549
  %arrayidx177 = getelementptr [48 x i8], [48 x i8]* %vc_palette, i64 0, i64 %idxprom176, !dbg !13549
  store i8 %conv175, i8* %arrayidx177, align 1, !dbg !13552
  %120 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13553
  %vc_par178 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %120, i32 0, i32 31, !dbg !13554
  %121 = load i32, i32* %j, align 4, !dbg !13555
  %inc179 = add i32 %121, 1, !dbg !13555
  store i32 %inc179, i32* %j, align 4, !dbg !13555
  %idxprom180 = sext i32 %121 to i64, !dbg !13553
  %arrayidx181 = getelementptr [16 x i32], [16 x i32]* %vc_par178, i64 0, i64 %idxprom180, !dbg !13553
  %122 = load i32, i32* %arrayidx181, align 4, !dbg !13553
  %123 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13556
  %vc_palette182 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %123, i32 0, i32 40, !dbg !13557
  %124 = load i32, i32* %i, align 4, !dbg !13558
  %inc183 = add i32 %124, 1, !dbg !13558
  store i32 %inc183, i32* %i, align 4, !dbg !13558
  %idxprom184 = sext i32 %124 to i64, !dbg !13556
  %arrayidx185 = getelementptr [48 x i8], [48 x i8]* %vc_palette182, i64 0, i64 %idxprom184, !dbg !13556
  %125 = load i8, i8* %arrayidx185, align 1, !dbg !13559
  %conv186 = zext i8 %125 to i32, !dbg !13559
  %add187 = add i32 %conv186, %122, !dbg !13559
  %conv188 = trunc i32 %add187 to i8, !dbg !13559
  store i8 %conv188, i8* %arrayidx185, align 1, !dbg !13559
  %126 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13560
  %vc_par189 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %126, i32 0, i32 31, !dbg !13561
  %127 = load i32, i32* %j, align 4, !dbg !13562
  %inc190 = add i32 %127, 1, !dbg !13562
  store i32 %inc190, i32* %j, align 4, !dbg !13562
  %idxprom191 = sext i32 %127 to i64, !dbg !13560
  %arrayidx192 = getelementptr [16 x i32], [16 x i32]* %vc_par189, i64 0, i64 %idxprom191, !dbg !13560
  %128 = load i32, i32* %arrayidx192, align 4, !dbg !13560
  %mul193 = mul i32 16, %128, !dbg !13563
  %conv194 = trunc i32 %mul193 to i8, !dbg !13564
  %129 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13565
  %vc_palette195 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %129, i32 0, i32 40, !dbg !13566
  %130 = load i32, i32* %i, align 4, !dbg !13567
  %idxprom196 = sext i32 %130 to i64, !dbg !13565
  %arrayidx197 = getelementptr [48 x i8], [48 x i8]* %vc_palette195, i64 0, i64 %idxprom196, !dbg !13565
  store i8 %conv194, i8* %arrayidx197, align 1, !dbg !13568
  %131 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13569
  %vc_par198 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %131, i32 0, i32 31, !dbg !13570
  %132 = load i32, i32* %j, align 4, !dbg !13571
  %inc199 = add i32 %132, 1, !dbg !13571
  store i32 %inc199, i32* %j, align 4, !dbg !13571
  %idxprom200 = sext i32 %132 to i64, !dbg !13569
  %arrayidx201 = getelementptr [16 x i32], [16 x i32]* %vc_par198, i64 0, i64 %idxprom200, !dbg !13569
  %133 = load i32, i32* %arrayidx201, align 4, !dbg !13569
  %134 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13572
  %vc_palette202 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %134, i32 0, i32 40, !dbg !13573
  %135 = load i32, i32* %i, align 4, !dbg !13574
  %inc203 = add i32 %135, 1, !dbg !13574
  store i32 %inc203, i32* %i, align 4, !dbg !13574
  %idxprom204 = sext i32 %135 to i64, !dbg !13572
  %arrayidx205 = getelementptr [48 x i8], [48 x i8]* %vc_palette202, i64 0, i64 %idxprom204, !dbg !13572
  %136 = load i8, i8* %arrayidx205, align 1, !dbg !13575
  %conv206 = zext i8 %136 to i32, !dbg !13575
  %add207 = add i32 %conv206, %133, !dbg !13575
  %conv208 = trunc i32 %add207 to i8, !dbg !13575
  store i8 %conv208, i8* %arrayidx205, align 1, !dbg !13575
  %137 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13576
  %vc_par209 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %137, i32 0, i32 31, !dbg !13577
  %138 = load i32, i32* %j, align 4, !dbg !13578
  %inc210 = add i32 %138, 1, !dbg !13578
  store i32 %inc210, i32* %j, align 4, !dbg !13578
  %idxprom211 = sext i32 %138 to i64, !dbg !13576
  %arrayidx212 = getelementptr [16 x i32], [16 x i32]* %vc_par209, i64 0, i64 %idxprom211, !dbg !13576
  %139 = load i32, i32* %arrayidx212, align 4, !dbg !13576
  %mul213 = mul i32 16, %139, !dbg !13579
  %conv214 = trunc i32 %mul213 to i8, !dbg !13580
  %140 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13581
  %vc_palette215 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %140, i32 0, i32 40, !dbg !13582
  %141 = load i32, i32* %i, align 4, !dbg !13583
  %idxprom216 = sext i32 %141 to i64, !dbg !13581
  %arrayidx217 = getelementptr [48 x i8], [48 x i8]* %vc_palette215, i64 0, i64 %idxprom216, !dbg !13581
  store i8 %conv214, i8* %arrayidx217, align 1, !dbg !13584
  %142 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13585
  %vc_par218 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %142, i32 0, i32 31, !dbg !13586
  %143 = load i32, i32* %j, align 4, !dbg !13587
  %idxprom219 = sext i32 %143 to i64, !dbg !13585
  %arrayidx220 = getelementptr [16 x i32], [16 x i32]* %vc_par218, i64 0, i64 %idxprom219, !dbg !13585
  %144 = load i32, i32* %arrayidx220, align 4, !dbg !13585
  %145 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13588
  %vc_palette221 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %145, i32 0, i32 40, !dbg !13589
  %146 = load i32, i32* %i, align 4, !dbg !13590
  %idxprom222 = sext i32 %146 to i64, !dbg !13588
  %arrayidx223 = getelementptr [48 x i8], [48 x i8]* %vc_palette221, i64 0, i64 %idxprom222, !dbg !13588
  %147 = load i8, i8* %arrayidx223, align 1, !dbg !13591
  %conv224 = zext i8 %147 to i32, !dbg !13591
  %add225 = add i32 %conv224, %144, !dbg !13591
  %conv226 = trunc i32 %add225 to i8, !dbg !13591
  store i8 %conv226, i8* %arrayidx223, align 1, !dbg !13591
  %148 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13592
  call void @set_palette(%struct.vc_data* %148) #13, !dbg !13593
  %149 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13594
  %vc_state227 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %149, i32 0, i32 29, !dbg !13595
  store i32 0, i32* %vc_state227, align 4, !dbg !13596
  br label %if.end228, !dbg !13597

if.end228:                                        ; preds = %if.then167, %if.then156
  br label %if.end231, !dbg !13598

if.else229:                                       ; preds = %sw.bb148
  %150 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13599
  %vc_state230 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %150, i32 0, i32 29, !dbg !13600
  store i32 0, i32* %vc_state230, align 4, !dbg !13601
  br label %if.end231

if.end231:                                        ; preds = %if.else229, %if.end228
  br label %sw.epilog713, !dbg !13602

sw.bb232:                                         ; preds = %sw.epilog
  %151 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13603
  %vc_npar233 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %151, i32 0, i32 30, !dbg !13605
  store i32 0, i32* %vc_npar233, align 8, !dbg !13606
  br label %for.cond234, !dbg !13603

for.cond234:                                      ; preds = %for.inc243, %sw.bb232
  %152 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13607
  %vc_npar235 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %152, i32 0, i32 30, !dbg !13609
  %153 = load i32, i32* %vc_npar235, align 8, !dbg !13609
  %cmp236 = icmp ult i32 %153, 16, !dbg !13610
  br i1 %cmp236, label %for.body238, label %for.end246, !dbg !13611

for.body238:                                      ; preds = %for.cond234
  %154 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13612
  %vc_par239 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %154, i32 0, i32 31, !dbg !13613
  %155 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13614
  %vc_npar240 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %155, i32 0, i32 30, !dbg !13615
  %156 = load i32, i32* %vc_npar240, align 8, !dbg !13615
  %idxprom241 = zext i32 %156 to i64, !dbg !13612
  %arrayidx242 = getelementptr [16 x i32], [16 x i32]* %vc_par239, i64 0, i64 %idxprom241, !dbg !13612
  store i32 0, i32* %arrayidx242, align 4, !dbg !13616
  br label %for.inc243, !dbg !13612

for.inc243:                                       ; preds = %for.body238
  %157 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13617
  %vc_npar244 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %157, i32 0, i32 30, !dbg !13618
  %158 = load i32, i32* %vc_npar244, align 8, !dbg !13619
  %inc245 = add i32 %158, 1, !dbg !13619
  store i32 %inc245, i32* %vc_npar244, align 8, !dbg !13619
  br label %for.cond234, !dbg !13620, !llvm.loop !13621

for.end246:                                       ; preds = %for.cond234
  %159 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13623
  %vc_npar247 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %159, i32 0, i32 30, !dbg !13624
  store i32 0, i32* %vc_npar247, align 8, !dbg !13625
  %160 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13626
  %vc_state248 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %160, i32 0, i32 29, !dbg !13627
  store i32 3, i32* %vc_state248, align 4, !dbg !13628
  %161 = load i32, i32* %c.addr, align 4, !dbg !13629
  %cmp249 = icmp eq i32 %161, 91, !dbg !13631
  br i1 %cmp249, label %if.then251, label %if.end253, !dbg !13632

if.then251:                                       ; preds = %for.end246
  %162 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13633
  %vc_state252 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %162, i32 0, i32 29, !dbg !13635
  store i32 4, i32* %vc_state252, align 4, !dbg !13636
  br label %sw.epilog713, !dbg !13637

if.end253:                                        ; preds = %for.end246
  %163 = load i32, i32* %c.addr, align 4, !dbg !13638
  switch i32 %163, label %sw.epilog273 [
    i32 63, label %sw.bb254
    i32 62, label %sw.bb258
    i32 61, label %sw.bb263
    i32 60, label %sw.bb268
  ], !dbg !13639

sw.bb254:                                         ; preds = %if.end253
  %164 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13640
  %vc_priv = getelementptr inbounds %struct.vc_data, %struct.vc_data* %164, i32 0, i32 36, !dbg !13642
  %bf.load255 = load i16, i16* %vc_priv, align 8, !dbg !13643
  %bf.clear256 = and i16 %bf.load255, -897, !dbg !13643
  %bf.set257 = or i16 %bf.clear256, 128, !dbg !13643
  store i16 %bf.set257, i16* %vc_priv, align 8, !dbg !13643
  br label %sw.epilog713, !dbg !13644

sw.bb258:                                         ; preds = %if.end253
  %165 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13645
  %vc_priv259 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %165, i32 0, i32 36, !dbg !13646
  %bf.load260 = load i16, i16* %vc_priv259, align 8, !dbg !13647
  %bf.clear261 = and i16 %bf.load260, -897, !dbg !13647
  %bf.set262 = or i16 %bf.clear261, 384, !dbg !13647
  store i16 %bf.set262, i16* %vc_priv259, align 8, !dbg !13647
  br label %sw.epilog713, !dbg !13648

sw.bb263:                                         ; preds = %if.end253
  %166 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13649
  %vc_priv264 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %166, i32 0, i32 36, !dbg !13650
  %bf.load265 = load i16, i16* %vc_priv264, align 8, !dbg !13651
  %bf.clear266 = and i16 %bf.load265, -897, !dbg !13651
  %bf.set267 = or i16 %bf.clear266, 256, !dbg !13651
  store i16 %bf.set267, i16* %vc_priv264, align 8, !dbg !13651
  br label %sw.epilog713, !dbg !13652

sw.bb268:                                         ; preds = %if.end253
  %167 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13653
  %vc_priv269 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %167, i32 0, i32 36, !dbg !13654
  %bf.load270 = load i16, i16* %vc_priv269, align 8, !dbg !13655
  %bf.clear271 = and i16 %bf.load270, -897, !dbg !13655
  %bf.set272 = or i16 %bf.clear271, 512, !dbg !13655
  store i16 %bf.set272, i16* %vc_priv269, align 8, !dbg !13655
  br label %sw.epilog713, !dbg !13656

sw.epilog273:                                     ; preds = %if.end253
  %168 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13657
  %vc_priv274 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %168, i32 0, i32 36, !dbg !13658
  %bf.load275 = load i16, i16* %vc_priv274, align 8, !dbg !13659
  %bf.clear276 = and i16 %bf.load275, -897, !dbg !13659
  store i16 %bf.clear276, i16* %vc_priv274, align 8, !dbg !13659
  br label %sw.bb277, !dbg !13657

sw.bb277:                                         ; preds = %sw.epilog, %sw.epilog273
  %169 = load i32, i32* %c.addr, align 4, !dbg !13660
  %cmp278 = icmp eq i32 %169, 59, !dbg !13662
  br i1 %cmp278, label %land.lhs.true280, label %if.else287, !dbg !13663

land.lhs.true280:                                 ; preds = %sw.bb277
  %170 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13664
  %vc_npar281 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %170, i32 0, i32 30, !dbg !13665
  %171 = load i32, i32* %vc_npar281, align 8, !dbg !13665
  %cmp282 = icmp ult i32 %171, 15, !dbg !13666
  br i1 %cmp282, label %if.then284, label %if.else287, !dbg !13667

if.then284:                                       ; preds = %land.lhs.true280
  %172 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13668
  %vc_npar285 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %172, i32 0, i32 30, !dbg !13670
  %173 = load i32, i32* %vc_npar285, align 8, !dbg !13671
  %inc286 = add i32 %173, 1, !dbg !13671
  store i32 %inc286, i32* %vc_npar285, align 8, !dbg !13671
  br label %sw.epilog713, !dbg !13672

if.else287:                                       ; preds = %land.lhs.true280, %sw.bb277
  %174 = load i32, i32* %c.addr, align 4, !dbg !13673
  %cmp288 = icmp sge i32 %174, 48, !dbg !13675
  br i1 %cmp288, label %land.lhs.true290, label %if.end305, !dbg !13676

land.lhs.true290:                                 ; preds = %if.else287
  %175 = load i32, i32* %c.addr, align 4, !dbg !13677
  %cmp291 = icmp sle i32 %175, 57, !dbg !13678
  br i1 %cmp291, label %if.then293, label %if.end305, !dbg !13679

if.then293:                                       ; preds = %land.lhs.true290
  %176 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13680
  %vc_par294 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %176, i32 0, i32 31, !dbg !13682
  %177 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13683
  %vc_npar295 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %177, i32 0, i32 30, !dbg !13684
  %178 = load i32, i32* %vc_npar295, align 8, !dbg !13684
  %idxprom296 = zext i32 %178 to i64, !dbg !13680
  %arrayidx297 = getelementptr [16 x i32], [16 x i32]* %vc_par294, i64 0, i64 %idxprom296, !dbg !13680
  %179 = load i32, i32* %arrayidx297, align 4, !dbg !13685
  %mul298 = mul i32 %179, 10, !dbg !13685
  store i32 %mul298, i32* %arrayidx297, align 4, !dbg !13685
  %180 = load i32, i32* %c.addr, align 4, !dbg !13686
  %sub299 = sub i32 %180, 48, !dbg !13687
  %181 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13688
  %vc_par300 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %181, i32 0, i32 31, !dbg !13689
  %182 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13690
  %vc_npar301 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %182, i32 0, i32 30, !dbg !13691
  %183 = load i32, i32* %vc_npar301, align 8, !dbg !13691
  %idxprom302 = zext i32 %183 to i64, !dbg !13688
  %arrayidx303 = getelementptr [16 x i32], [16 x i32]* %vc_par300, i64 0, i64 %idxprom302, !dbg !13688
  %184 = load i32, i32* %arrayidx303, align 4, !dbg !13692
  %add304 = add i32 %184, %sub299, !dbg !13692
  store i32 %add304, i32* %arrayidx303, align 4, !dbg !13692
  br label %sw.epilog713, !dbg !13693

if.end305:                                        ; preds = %land.lhs.true290, %if.else287
  br label %if.end306

if.end306:                                        ; preds = %if.end305
  %185 = load i32, i32* %c.addr, align 4, !dbg !13694
  %cmp307 = icmp sge i32 %185, 32, !dbg !13696
  br i1 %cmp307, label %land.lhs.true309, label %if.end314, !dbg !13697

land.lhs.true309:                                 ; preds = %if.end306
  %186 = load i32, i32* %c.addr, align 4, !dbg !13698
  %cmp310 = icmp sle i32 %186, 63, !dbg !13699
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !13700

if.then312:                                       ; preds = %land.lhs.true309
  %187 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13701
  %vc_state313 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %187, i32 0, i32 29, !dbg !13703
  store i32 9, i32* %vc_state313, align 4, !dbg !13704
  br label %sw.epilog713, !dbg !13705

if.end314:                                        ; preds = %land.lhs.true309, %if.end306
  %188 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13706
  %vc_state315 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %188, i32 0, i32 29, !dbg !13707
  store i32 0, i32* %vc_state315, align 4, !dbg !13708
  %189 = load i32, i32* %c.addr, align 4, !dbg !13709
  switch i32 %189, label %sw.epilog407 [
    i32 104, label %sw.bb316
    i32 108, label %sw.bb324
    i32 99, label %sw.bb334
    i32 109, label %sw.bb360
    i32 110, label %sw.bb384
  ], !dbg !13710

sw.bb316:                                         ; preds = %if.end314
  %190 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13711
  %vc_priv317 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %190, i32 0, i32 36, !dbg !13714
  %bf.load318 = load i16, i16* %vc_priv317, align 8, !dbg !13714
  %bf.lshr = lshr i16 %bf.load318, 7, !dbg !13714
  %bf.clear319 = and i16 %bf.lshr, 7, !dbg !13714
  %bf.cast = zext i16 %bf.clear319 to i32, !dbg !13714
  %cmp320 = icmp sle i32 %bf.cast, 1, !dbg !13715
  br i1 %cmp320, label %if.then322, label %if.end323, !dbg !13716

if.then322:                                       ; preds = %sw.bb316
  %191 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13717
  call void @set_mode(%struct.vc_data* %191, i32 1) #13, !dbg !13718
  br label %if.end323, !dbg !13718

if.end323:                                        ; preds = %if.then322, %sw.bb316
  br label %sw.epilog713, !dbg !13719

sw.bb324:                                         ; preds = %if.end314
  %192 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13720
  %vc_priv325 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %192, i32 0, i32 36, !dbg !13722
  %bf.load326 = load i16, i16* %vc_priv325, align 8, !dbg !13722
  %bf.lshr327 = lshr i16 %bf.load326, 7, !dbg !13722
  %bf.clear328 = and i16 %bf.lshr327, 7, !dbg !13722
  %bf.cast329 = zext i16 %bf.clear328 to i32, !dbg !13722
  %cmp330 = icmp sle i32 %bf.cast329, 1, !dbg !13723
  br i1 %cmp330, label %if.then332, label %if.end333, !dbg !13724

if.then332:                                       ; preds = %sw.bb324
  %193 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13725
  call void @set_mode(%struct.vc_data* %193, i32 0) #13, !dbg !13726
  br label %if.end333, !dbg !13726

if.end333:                                        ; preds = %if.then332, %sw.bb324
  br label %sw.epilog713, !dbg !13727

sw.bb334:                                         ; preds = %if.end314
  %194 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13728
  %vc_priv335 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %194, i32 0, i32 36, !dbg !13730
  %bf.load336 = load i16, i16* %vc_priv335, align 8, !dbg !13730
  %bf.lshr337 = lshr i16 %bf.load336, 7, !dbg !13730
  %bf.clear338 = and i16 %bf.lshr337, 7, !dbg !13730
  %bf.cast339 = zext i16 %bf.clear338 to i32, !dbg !13730
  %cmp340 = icmp eq i32 %bf.cast339, 1, !dbg !13731
  br i1 %cmp340, label %if.then342, label %if.end359, !dbg !13732

if.then342:                                       ; preds = %sw.bb334
  %195 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13733
  %vc_par343 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %195, i32 0, i32 31, !dbg !13736
  %arrayidx344 = getelementptr [16 x i32], [16 x i32]* %vc_par343, i64 0, i64 0, !dbg !13733
  %196 = load i32, i32* %arrayidx344, align 4, !dbg !13733
  %tobool345 = icmp ne i32 %196, 0, !dbg !13733
  br i1 %tobool345, label %if.then346, label %if.else356, !dbg !13737

if.then346:                                       ; preds = %if.then342
  %197 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13738
  %vc_par347 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %197, i32 0, i32 31, !dbg !13738
  %arrayidx348 = getelementptr [16 x i32], [16 x i32]* %vc_par347, i64 0, i64 0, !dbg !13738
  %198 = load i32, i32* %arrayidx348, align 4, !dbg !13738
  %199 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13738
  %vc_par349 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %199, i32 0, i32 31, !dbg !13738
  %arrayidx350 = getelementptr [16 x i32], [16 x i32]* %vc_par349, i64 0, i64 1, !dbg !13738
  %200 = load i32, i32* %arrayidx350, align 4, !dbg !13738
  %shl351 = shl i32 %200, 8, !dbg !13738
  %or = or i32 %198, %shl351, !dbg !13738
  %201 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13738
  %vc_par352 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %201, i32 0, i32 31, !dbg !13738
  %arrayidx353 = getelementptr [16 x i32], [16 x i32]* %vc_par352, i64 0, i64 2, !dbg !13738
  %202 = load i32, i32* %arrayidx353, align 4, !dbg !13738
  %shl354 = shl i32 %202, 16, !dbg !13738
  %or355 = or i32 %or, %shl354, !dbg !13738
  %203 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13739
  %vc_cursor_type = getelementptr inbounds %struct.vc_data, %struct.vc_data* %203, i32 0, i32 22, !dbg !13740
  store i32 %or355, i32* %vc_cursor_type, align 4, !dbg !13741
  br label %if.end358, !dbg !13739

if.else356:                                       ; preds = %if.then342
  %204 = load i32, i32* @cur_default, align 4, !dbg !13742
  %205 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13743
  %vc_cursor_type357 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %205, i32 0, i32 22, !dbg !13744
  store i32 %204, i32* %vc_cursor_type357, align 4, !dbg !13745
  br label %if.end358

if.end358:                                        ; preds = %if.else356, %if.then346
  br label %sw.epilog713, !dbg !13746

if.end359:                                        ; preds = %sw.bb334
  br label %sw.epilog407, !dbg !13747

sw.bb360:                                         ; preds = %if.end314
  %206 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13748
  %vc_priv361 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %206, i32 0, i32 36, !dbg !13750
  %bf.load362 = load i16, i16* %vc_priv361, align 8, !dbg !13750
  %bf.lshr363 = lshr i16 %bf.load362, 7, !dbg !13750
  %bf.clear364 = and i16 %bf.lshr363, 7, !dbg !13750
  %bf.cast365 = zext i16 %bf.clear364 to i32, !dbg !13750
  %cmp366 = icmp eq i32 %bf.cast365, 1, !dbg !13751
  br i1 %cmp366, label %if.then368, label %if.end383, !dbg !13752

if.then368:                                       ; preds = %sw.bb360
  call void @clear_selection() #13, !dbg !13753
  %207 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13755
  %vc_par369 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %207, i32 0, i32 31, !dbg !13757
  %arrayidx370 = getelementptr [16 x i32], [16 x i32]* %vc_par369, i64 0, i64 0, !dbg !13755
  %208 = load i32, i32* %arrayidx370, align 4, !dbg !13755
  %tobool371 = icmp ne i32 %208, 0, !dbg !13755
  br i1 %tobool371, label %if.then372, label %if.else380, !dbg !13758

if.then372:                                       ; preds = %if.then368
  %209 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13759
  %vc_par373 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %209, i32 0, i32 31, !dbg !13760
  %arrayidx374 = getelementptr [16 x i32], [16 x i32]* %vc_par373, i64 0, i64 0, !dbg !13759
  %210 = load i32, i32* %arrayidx374, align 4, !dbg !13759
  %shl375 = shl i32 %210, 8, !dbg !13761
  %211 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13762
  %vc_par376 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %211, i32 0, i32 31, !dbg !13763
  %arrayidx377 = getelementptr [16 x i32], [16 x i32]* %vc_par376, i64 0, i64 1, !dbg !13762
  %212 = load i32, i32* %arrayidx377, align 4, !dbg !13762
  %or378 = or i32 %shl375, %212, !dbg !13764
  %conv379 = trunc i32 %or378 to i16, !dbg !13759
  %213 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13765
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %213, i32 0, i32 23, !dbg !13766
  store i16 %conv379, i16* %vc_complement_mask, align 8, !dbg !13767
  br label %if.end382, !dbg !13765

if.else380:                                       ; preds = %if.then368
  %214 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13768
  %vc_s_complement_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %214, i32 0, i32 24, !dbg !13769
  %215 = load i16, i16* %vc_s_complement_mask, align 2, !dbg !13769
  %216 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13770
  %vc_complement_mask381 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %216, i32 0, i32 23, !dbg !13771
  store i16 %215, i16* %vc_complement_mask381, align 8, !dbg !13772
  br label %if.end382

if.end382:                                        ; preds = %if.else380, %if.then372
  br label %sw.epilog713, !dbg !13773

if.end383:                                        ; preds = %sw.bb360
  br label %sw.epilog407, !dbg !13774

sw.bb384:                                         ; preds = %if.end314
  %217 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13775
  %vc_priv385 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %217, i32 0, i32 36, !dbg !13777
  %bf.load386 = load i16, i16* %vc_priv385, align 8, !dbg !13777
  %bf.lshr387 = lshr i16 %bf.load386, 7, !dbg !13777
  %bf.clear388 = and i16 %bf.lshr387, 7, !dbg !13777
  %bf.cast389 = zext i16 %bf.clear388 to i32, !dbg !13777
  %cmp390 = icmp eq i32 %bf.cast389, 0, !dbg !13778
  br i1 %cmp390, label %if.then392, label %if.end406, !dbg !13779

if.then392:                                       ; preds = %sw.bb384
  %218 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13780
  %vc_par393 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %218, i32 0, i32 31, !dbg !13783
  %arrayidx394 = getelementptr [16 x i32], [16 x i32]* %vc_par393, i64 0, i64 0, !dbg !13780
  %219 = load i32, i32* %arrayidx394, align 4, !dbg !13780
  %cmp395 = icmp eq i32 %219, 5, !dbg !13784
  br i1 %cmp395, label %if.then397, label %if.else398, !dbg !13785

if.then397:                                       ; preds = %if.then392
  %220 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13786
  call void @status_report(%struct.tty_struct* %220) #13, !dbg !13787
  br label %if.end405, !dbg !13787

if.else398:                                       ; preds = %if.then392
  %221 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13788
  %vc_par399 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %221, i32 0, i32 31, !dbg !13790
  %arrayidx400 = getelementptr [16 x i32], [16 x i32]* %vc_par399, i64 0, i64 0, !dbg !13788
  %222 = load i32, i32* %arrayidx400, align 4, !dbg !13788
  %cmp401 = icmp eq i32 %222, 6, !dbg !13791
  br i1 %cmp401, label %if.then403, label %if.end404, !dbg !13792

if.then403:                                       ; preds = %if.else398
  %223 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13793
  %224 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13794
  call void @cursor_report(%struct.vc_data* %223, %struct.tty_struct* %224) #13, !dbg !13795
  br label %if.end404, !dbg !13795

if.end404:                                        ; preds = %if.then403, %if.else398
  br label %if.end405

if.end405:                                        ; preds = %if.end404, %if.then397
  br label %if.end406, !dbg !13796

if.end406:                                        ; preds = %if.end405, %sw.bb384
  br label %sw.epilog713, !dbg !13797

sw.epilog407:                                     ; preds = %if.end314, %if.end383, %if.end359
  %225 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13798
  %vc_priv408 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %225, i32 0, i32 36, !dbg !13800
  %bf.load409 = load i16, i16* %vc_priv408, align 8, !dbg !13800
  %bf.lshr410 = lshr i16 %bf.load409, 7, !dbg !13800
  %bf.clear411 = and i16 %bf.lshr410, 7, !dbg !13800
  %bf.cast412 = zext i16 %bf.clear411 to i32, !dbg !13800
  %cmp413 = icmp ne i32 %bf.cast412, 0, !dbg !13801
  br i1 %cmp413, label %if.then415, label %if.end419, !dbg !13802

if.then415:                                       ; preds = %sw.epilog407
  %226 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13803
  %vc_priv416 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %226, i32 0, i32 36, !dbg !13805
  %bf.load417 = load i16, i16* %vc_priv416, align 8, !dbg !13806
  %bf.clear418 = and i16 %bf.load417, -897, !dbg !13806
  store i16 %bf.clear418, i16* %vc_priv416, align 8, !dbg !13806
  br label %sw.epilog713, !dbg !13807

if.end419:                                        ; preds = %sw.epilog407
  %227 = load i32, i32* %c.addr, align 4, !dbg !13808
  switch i32 %227, label %sw.epilog667 [
    i32 71, label %sw.bb420
    i32 96, label %sw.bb420
    i32 65, label %sw.bb431
    i32 66, label %sw.bb447
    i32 101, label %sw.bb447
    i32 67, label %sw.bb463
    i32 97, label %sw.bb463
    i32 68, label %sw.bb479
    i32 69, label %sw.bb495
    i32 70, label %sw.bb509
    i32 100, label %sw.bb523
    i32 72, label %sw.bb536
    i32 102, label %sw.bb536
    i32 74, label %sw.bb557
    i32 75, label %sw.bb560
    i32 76, label %sw.bb563
    i32 77, label %sw.bb566
    i32 80, label %sw.bb569
    i32 99, label %sw.bb572
    i32 103, label %sw.bb578
    i32 109, label %sw.bb603
    i32 113, label %sw.bb604
    i32 114, label %sw.bb623
    i32 115, label %sw.bb658
    i32 117, label %sw.bb659
    i32 88, label %sw.bb660
    i32 64, label %sw.bb663
    i32 93, label %sw.bb666
  ], !dbg !13809

sw.bb420:                                         ; preds = %if.end419, %if.end419
  %228 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13810
  %vc_par421 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %228, i32 0, i32 31, !dbg !13813
  %arrayidx422 = getelementptr [16 x i32], [16 x i32]* %vc_par421, i64 0, i64 0, !dbg !13810
  %229 = load i32, i32* %arrayidx422, align 4, !dbg !13810
  %tobool423 = icmp ne i32 %229, 0, !dbg !13810
  br i1 %tobool423, label %if.then424, label %if.end427, !dbg !13814

if.then424:                                       ; preds = %sw.bb420
  %230 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13815
  %vc_par425 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %230, i32 0, i32 31, !dbg !13816
  %arrayidx426 = getelementptr [16 x i32], [16 x i32]* %vc_par425, i64 0, i64 0, !dbg !13815
  %231 = load i32, i32* %arrayidx426, align 4, !dbg !13817
  %dec = add i32 %231, -1, !dbg !13817
  store i32 %dec, i32* %arrayidx426, align 4, !dbg !13817
  br label %if.end427, !dbg !13815

if.end427:                                        ; preds = %if.then424, %sw.bb420
  %232 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13818
  %233 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13819
  %vc_par428 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %233, i32 0, i32 31, !dbg !13820
  %arrayidx429 = getelementptr [16 x i32], [16 x i32]* %vc_par428, i64 0, i64 0, !dbg !13819
  %234 = load i32, i32* %arrayidx429, align 4, !dbg !13819
  %235 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13821
  %state430 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %235, i32 0, i32 1, !dbg !13822
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state430, i32 0, i32 1, !dbg !13823
  %236 = load i32, i32* %y, align 4, !dbg !13823
  call void @gotoxy(%struct.vc_data* %232, i32 %234, i32 %236) #13, !dbg !13824
  br label %sw.epilog713, !dbg !13825

sw.bb431:                                         ; preds = %if.end419
  %237 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13826
  %vc_par432 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %237, i32 0, i32 31, !dbg !13828
  %arrayidx433 = getelementptr [16 x i32], [16 x i32]* %vc_par432, i64 0, i64 0, !dbg !13826
  %238 = load i32, i32* %arrayidx433, align 4, !dbg !13826
  %tobool434 = icmp ne i32 %238, 0, !dbg !13826
  br i1 %tobool434, label %if.end439, label %if.then435, !dbg !13829

if.then435:                                       ; preds = %sw.bb431
  %239 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13830
  %vc_par436 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %239, i32 0, i32 31, !dbg !13831
  %arrayidx437 = getelementptr [16 x i32], [16 x i32]* %vc_par436, i64 0, i64 0, !dbg !13830
  %240 = load i32, i32* %arrayidx437, align 4, !dbg !13832
  %inc438 = add i32 %240, 1, !dbg !13832
  store i32 %inc438, i32* %arrayidx437, align 4, !dbg !13832
  br label %if.end439, !dbg !13830

if.end439:                                        ; preds = %if.then435, %sw.bb431
  %241 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13833
  %242 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13834
  %state440 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %242, i32 0, i32 1, !dbg !13835
  %x441 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state440, i32 0, i32 0, !dbg !13836
  %243 = load i32, i32* %x441, align 8, !dbg !13836
  %244 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13837
  %state442 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %244, i32 0, i32 1, !dbg !13838
  %y443 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state442, i32 0, i32 1, !dbg !13839
  %245 = load i32, i32* %y443, align 4, !dbg !13839
  %246 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13840
  %vc_par444 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %246, i32 0, i32 31, !dbg !13841
  %arrayidx445 = getelementptr [16 x i32], [16 x i32]* %vc_par444, i64 0, i64 0, !dbg !13840
  %247 = load i32, i32* %arrayidx445, align 4, !dbg !13840
  %sub446 = sub i32 %245, %247, !dbg !13842
  call void @gotoxy(%struct.vc_data* %241, i32 %243, i32 %sub446) #13, !dbg !13843
  br label %sw.epilog713, !dbg !13844

sw.bb447:                                         ; preds = %if.end419, %if.end419
  %248 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13845
  %vc_par448 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %248, i32 0, i32 31, !dbg !13847
  %arrayidx449 = getelementptr [16 x i32], [16 x i32]* %vc_par448, i64 0, i64 0, !dbg !13845
  %249 = load i32, i32* %arrayidx449, align 4, !dbg !13845
  %tobool450 = icmp ne i32 %249, 0, !dbg !13845
  br i1 %tobool450, label %if.end455, label %if.then451, !dbg !13848

if.then451:                                       ; preds = %sw.bb447
  %250 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13849
  %vc_par452 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %250, i32 0, i32 31, !dbg !13850
  %arrayidx453 = getelementptr [16 x i32], [16 x i32]* %vc_par452, i64 0, i64 0, !dbg !13849
  %251 = load i32, i32* %arrayidx453, align 4, !dbg !13851
  %inc454 = add i32 %251, 1, !dbg !13851
  store i32 %inc454, i32* %arrayidx453, align 4, !dbg !13851
  br label %if.end455, !dbg !13849

if.end455:                                        ; preds = %if.then451, %sw.bb447
  %252 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13852
  %253 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13853
  %state456 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %253, i32 0, i32 1, !dbg !13854
  %x457 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state456, i32 0, i32 0, !dbg !13855
  %254 = load i32, i32* %x457, align 8, !dbg !13855
  %255 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13856
  %state458 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %255, i32 0, i32 1, !dbg !13857
  %y459 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state458, i32 0, i32 1, !dbg !13858
  %256 = load i32, i32* %y459, align 4, !dbg !13858
  %257 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13859
  %vc_par460 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %257, i32 0, i32 31, !dbg !13860
  %arrayidx461 = getelementptr [16 x i32], [16 x i32]* %vc_par460, i64 0, i64 0, !dbg !13859
  %258 = load i32, i32* %arrayidx461, align 4, !dbg !13859
  %add462 = add i32 %256, %258, !dbg !13861
  call void @gotoxy(%struct.vc_data* %252, i32 %254, i32 %add462) #13, !dbg !13862
  br label %sw.epilog713, !dbg !13863

sw.bb463:                                         ; preds = %if.end419, %if.end419
  %259 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13864
  %vc_par464 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %259, i32 0, i32 31, !dbg !13866
  %arrayidx465 = getelementptr [16 x i32], [16 x i32]* %vc_par464, i64 0, i64 0, !dbg !13864
  %260 = load i32, i32* %arrayidx465, align 4, !dbg !13864
  %tobool466 = icmp ne i32 %260, 0, !dbg !13864
  br i1 %tobool466, label %if.end471, label %if.then467, !dbg !13867

if.then467:                                       ; preds = %sw.bb463
  %261 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13868
  %vc_par468 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %261, i32 0, i32 31, !dbg !13869
  %arrayidx469 = getelementptr [16 x i32], [16 x i32]* %vc_par468, i64 0, i64 0, !dbg !13868
  %262 = load i32, i32* %arrayidx469, align 4, !dbg !13870
  %inc470 = add i32 %262, 1, !dbg !13870
  store i32 %inc470, i32* %arrayidx469, align 4, !dbg !13870
  br label %if.end471, !dbg !13868

if.end471:                                        ; preds = %if.then467, %sw.bb463
  %263 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13871
  %264 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13872
  %state472 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %264, i32 0, i32 1, !dbg !13873
  %x473 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state472, i32 0, i32 0, !dbg !13874
  %265 = load i32, i32* %x473, align 8, !dbg !13874
  %266 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13875
  %vc_par474 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %266, i32 0, i32 31, !dbg !13876
  %arrayidx475 = getelementptr [16 x i32], [16 x i32]* %vc_par474, i64 0, i64 0, !dbg !13875
  %267 = load i32, i32* %arrayidx475, align 4, !dbg !13875
  %add476 = add i32 %265, %267, !dbg !13877
  %268 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13878
  %state477 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %268, i32 0, i32 1, !dbg !13879
  %y478 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state477, i32 0, i32 1, !dbg !13880
  %269 = load i32, i32* %y478, align 4, !dbg !13880
  call void @gotoxy(%struct.vc_data* %263, i32 %add476, i32 %269) #13, !dbg !13881
  br label %sw.epilog713, !dbg !13882

sw.bb479:                                         ; preds = %if.end419
  %270 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13883
  %vc_par480 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %270, i32 0, i32 31, !dbg !13885
  %arrayidx481 = getelementptr [16 x i32], [16 x i32]* %vc_par480, i64 0, i64 0, !dbg !13883
  %271 = load i32, i32* %arrayidx481, align 4, !dbg !13883
  %tobool482 = icmp ne i32 %271, 0, !dbg !13883
  br i1 %tobool482, label %if.end487, label %if.then483, !dbg !13886

if.then483:                                       ; preds = %sw.bb479
  %272 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13887
  %vc_par484 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %272, i32 0, i32 31, !dbg !13888
  %arrayidx485 = getelementptr [16 x i32], [16 x i32]* %vc_par484, i64 0, i64 0, !dbg !13887
  %273 = load i32, i32* %arrayidx485, align 4, !dbg !13889
  %inc486 = add i32 %273, 1, !dbg !13889
  store i32 %inc486, i32* %arrayidx485, align 4, !dbg !13889
  br label %if.end487, !dbg !13887

if.end487:                                        ; preds = %if.then483, %sw.bb479
  %274 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13890
  %275 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13891
  %state488 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %275, i32 0, i32 1, !dbg !13892
  %x489 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state488, i32 0, i32 0, !dbg !13893
  %276 = load i32, i32* %x489, align 8, !dbg !13893
  %277 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13894
  %vc_par490 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %277, i32 0, i32 31, !dbg !13895
  %arrayidx491 = getelementptr [16 x i32], [16 x i32]* %vc_par490, i64 0, i64 0, !dbg !13894
  %278 = load i32, i32* %arrayidx491, align 4, !dbg !13894
  %sub492 = sub i32 %276, %278, !dbg !13896
  %279 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13897
  %state493 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %279, i32 0, i32 1, !dbg !13898
  %y494 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state493, i32 0, i32 1, !dbg !13899
  %280 = load i32, i32* %y494, align 4, !dbg !13899
  call void @gotoxy(%struct.vc_data* %274, i32 %sub492, i32 %280) #13, !dbg !13900
  br label %sw.epilog713, !dbg !13901

sw.bb495:                                         ; preds = %if.end419
  %281 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13902
  %vc_par496 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %281, i32 0, i32 31, !dbg !13904
  %arrayidx497 = getelementptr [16 x i32], [16 x i32]* %vc_par496, i64 0, i64 0, !dbg !13902
  %282 = load i32, i32* %arrayidx497, align 4, !dbg !13902
  %tobool498 = icmp ne i32 %282, 0, !dbg !13902
  br i1 %tobool498, label %if.end503, label %if.then499, !dbg !13905

if.then499:                                       ; preds = %sw.bb495
  %283 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13906
  %vc_par500 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %283, i32 0, i32 31, !dbg !13907
  %arrayidx501 = getelementptr [16 x i32], [16 x i32]* %vc_par500, i64 0, i64 0, !dbg !13906
  %284 = load i32, i32* %arrayidx501, align 4, !dbg !13908
  %inc502 = add i32 %284, 1, !dbg !13908
  store i32 %inc502, i32* %arrayidx501, align 4, !dbg !13908
  br label %if.end503, !dbg !13906

if.end503:                                        ; preds = %if.then499, %sw.bb495
  %285 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13909
  %286 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13910
  %state504 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %286, i32 0, i32 1, !dbg !13911
  %y505 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state504, i32 0, i32 1, !dbg !13912
  %287 = load i32, i32* %y505, align 4, !dbg !13912
  %288 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13913
  %vc_par506 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %288, i32 0, i32 31, !dbg !13914
  %arrayidx507 = getelementptr [16 x i32], [16 x i32]* %vc_par506, i64 0, i64 0, !dbg !13913
  %289 = load i32, i32* %arrayidx507, align 4, !dbg !13913
  %add508 = add i32 %287, %289, !dbg !13915
  call void @gotoxy(%struct.vc_data* %285, i32 0, i32 %add508) #13, !dbg !13916
  br label %sw.epilog713, !dbg !13917

sw.bb509:                                         ; preds = %if.end419
  %290 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13918
  %vc_par510 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %290, i32 0, i32 31, !dbg !13920
  %arrayidx511 = getelementptr [16 x i32], [16 x i32]* %vc_par510, i64 0, i64 0, !dbg !13918
  %291 = load i32, i32* %arrayidx511, align 4, !dbg !13918
  %tobool512 = icmp ne i32 %291, 0, !dbg !13918
  br i1 %tobool512, label %if.end517, label %if.then513, !dbg !13921

if.then513:                                       ; preds = %sw.bb509
  %292 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13922
  %vc_par514 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %292, i32 0, i32 31, !dbg !13923
  %arrayidx515 = getelementptr [16 x i32], [16 x i32]* %vc_par514, i64 0, i64 0, !dbg !13922
  %293 = load i32, i32* %arrayidx515, align 4, !dbg !13924
  %inc516 = add i32 %293, 1, !dbg !13924
  store i32 %inc516, i32* %arrayidx515, align 4, !dbg !13924
  br label %if.end517, !dbg !13922

if.end517:                                        ; preds = %if.then513, %sw.bb509
  %294 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13925
  %295 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13926
  %state518 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %295, i32 0, i32 1, !dbg !13927
  %y519 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state518, i32 0, i32 1, !dbg !13928
  %296 = load i32, i32* %y519, align 4, !dbg !13928
  %297 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13929
  %vc_par520 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %297, i32 0, i32 31, !dbg !13930
  %arrayidx521 = getelementptr [16 x i32], [16 x i32]* %vc_par520, i64 0, i64 0, !dbg !13929
  %298 = load i32, i32* %arrayidx521, align 4, !dbg !13929
  %sub522 = sub i32 %296, %298, !dbg !13931
  call void @gotoxy(%struct.vc_data* %294, i32 0, i32 %sub522) #13, !dbg !13932
  br label %sw.epilog713, !dbg !13933

sw.bb523:                                         ; preds = %if.end419
  %299 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13934
  %vc_par524 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %299, i32 0, i32 31, !dbg !13936
  %arrayidx525 = getelementptr [16 x i32], [16 x i32]* %vc_par524, i64 0, i64 0, !dbg !13934
  %300 = load i32, i32* %arrayidx525, align 4, !dbg !13934
  %tobool526 = icmp ne i32 %300, 0, !dbg !13934
  br i1 %tobool526, label %if.then527, label %if.end531, !dbg !13937

if.then527:                                       ; preds = %sw.bb523
  %301 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13938
  %vc_par528 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %301, i32 0, i32 31, !dbg !13939
  %arrayidx529 = getelementptr [16 x i32], [16 x i32]* %vc_par528, i64 0, i64 0, !dbg !13938
  %302 = load i32, i32* %arrayidx529, align 4, !dbg !13940
  %dec530 = add i32 %302, -1, !dbg !13940
  store i32 %dec530, i32* %arrayidx529, align 4, !dbg !13940
  br label %if.end531, !dbg !13938

if.end531:                                        ; preds = %if.then527, %sw.bb523
  %303 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13941
  %304 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13942
  %state532 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %304, i32 0, i32 1, !dbg !13943
  %x533 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state532, i32 0, i32 0, !dbg !13944
  %305 = load i32, i32* %x533, align 8, !dbg !13944
  %306 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13945
  %vc_par534 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %306, i32 0, i32 31, !dbg !13946
  %arrayidx535 = getelementptr [16 x i32], [16 x i32]* %vc_par534, i64 0, i64 0, !dbg !13945
  %307 = load i32, i32* %arrayidx535, align 4, !dbg !13945
  call void @gotoxay(%struct.vc_data* %303, i32 %305, i32 %307) #13, !dbg !13947
  br label %sw.epilog713, !dbg !13948

sw.bb536:                                         ; preds = %if.end419, %if.end419
  %308 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13949
  %vc_par537 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %308, i32 0, i32 31, !dbg !13951
  %arrayidx538 = getelementptr [16 x i32], [16 x i32]* %vc_par537, i64 0, i64 0, !dbg !13949
  %309 = load i32, i32* %arrayidx538, align 4, !dbg !13949
  %tobool539 = icmp ne i32 %309, 0, !dbg !13949
  br i1 %tobool539, label %if.then540, label %if.end544, !dbg !13952

if.then540:                                       ; preds = %sw.bb536
  %310 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13953
  %vc_par541 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %310, i32 0, i32 31, !dbg !13954
  %arrayidx542 = getelementptr [16 x i32], [16 x i32]* %vc_par541, i64 0, i64 0, !dbg !13953
  %311 = load i32, i32* %arrayidx542, align 4, !dbg !13955
  %dec543 = add i32 %311, -1, !dbg !13955
  store i32 %dec543, i32* %arrayidx542, align 4, !dbg !13955
  br label %if.end544, !dbg !13953

if.end544:                                        ; preds = %if.then540, %sw.bb536
  %312 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13956
  %vc_par545 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %312, i32 0, i32 31, !dbg !13958
  %arrayidx546 = getelementptr [16 x i32], [16 x i32]* %vc_par545, i64 0, i64 1, !dbg !13956
  %313 = load i32, i32* %arrayidx546, align 4, !dbg !13956
  %tobool547 = icmp ne i32 %313, 0, !dbg !13956
  br i1 %tobool547, label %if.then548, label %if.end552, !dbg !13959

if.then548:                                       ; preds = %if.end544
  %314 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13960
  %vc_par549 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %314, i32 0, i32 31, !dbg !13961
  %arrayidx550 = getelementptr [16 x i32], [16 x i32]* %vc_par549, i64 0, i64 1, !dbg !13960
  %315 = load i32, i32* %arrayidx550, align 4, !dbg !13962
  %dec551 = add i32 %315, -1, !dbg !13962
  store i32 %dec551, i32* %arrayidx550, align 4, !dbg !13962
  br label %if.end552, !dbg !13960

if.end552:                                        ; preds = %if.then548, %if.end544
  %316 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13963
  %317 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13964
  %vc_par553 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %317, i32 0, i32 31, !dbg !13965
  %arrayidx554 = getelementptr [16 x i32], [16 x i32]* %vc_par553, i64 0, i64 1, !dbg !13964
  %318 = load i32, i32* %arrayidx554, align 4, !dbg !13964
  %319 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13966
  %vc_par555 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %319, i32 0, i32 31, !dbg !13967
  %arrayidx556 = getelementptr [16 x i32], [16 x i32]* %vc_par555, i64 0, i64 0, !dbg !13966
  %320 = load i32, i32* %arrayidx556, align 4, !dbg !13966
  call void @gotoxay(%struct.vc_data* %316, i32 %318, i32 %320) #13, !dbg !13968
  br label %sw.epilog713, !dbg !13969

sw.bb557:                                         ; preds = %if.end419
  %321 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13970
  %322 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13971
  %vc_par558 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %322, i32 0, i32 31, !dbg !13972
  %arrayidx559 = getelementptr [16 x i32], [16 x i32]* %vc_par558, i64 0, i64 0, !dbg !13971
  %323 = load i32, i32* %arrayidx559, align 4, !dbg !13971
  call void @csi_J(%struct.vc_data* %321, i32 %323) #13, !dbg !13973
  br label %sw.epilog713, !dbg !13974

sw.bb560:                                         ; preds = %if.end419
  %324 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13975
  %325 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13976
  %vc_par561 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %325, i32 0, i32 31, !dbg !13977
  %arrayidx562 = getelementptr [16 x i32], [16 x i32]* %vc_par561, i64 0, i64 0, !dbg !13976
  %326 = load i32, i32* %arrayidx562, align 4, !dbg !13976
  call void @csi_K(%struct.vc_data* %324, i32 %326) #13, !dbg !13978
  br label %sw.epilog713, !dbg !13979

sw.bb563:                                         ; preds = %if.end419
  %327 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13980
  %328 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13981
  %vc_par564 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %328, i32 0, i32 31, !dbg !13982
  %arrayidx565 = getelementptr [16 x i32], [16 x i32]* %vc_par564, i64 0, i64 0, !dbg !13981
  %329 = load i32, i32* %arrayidx565, align 4, !dbg !13981
  call void @csi_L(%struct.vc_data* %327, i32 %329) #13, !dbg !13983
  br label %sw.epilog713, !dbg !13984

sw.bb566:                                         ; preds = %if.end419
  %330 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13985
  %331 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13986
  %vc_par567 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %331, i32 0, i32 31, !dbg !13987
  %arrayidx568 = getelementptr [16 x i32], [16 x i32]* %vc_par567, i64 0, i64 0, !dbg !13986
  %332 = load i32, i32* %arrayidx568, align 4, !dbg !13986
  call void @csi_M(%struct.vc_data* %330, i32 %332) #13, !dbg !13988
  br label %sw.epilog713, !dbg !13989

sw.bb569:                                         ; preds = %if.end419
  %333 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13990
  %334 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13991
  %vc_par570 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %334, i32 0, i32 31, !dbg !13992
  %arrayidx571 = getelementptr [16 x i32], [16 x i32]* %vc_par570, i64 0, i64 0, !dbg !13991
  %335 = load i32, i32* %arrayidx571, align 4, !dbg !13991
  call void @csi_P(%struct.vc_data* %333, i32 %335) #13, !dbg !13993
  br label %sw.epilog713, !dbg !13994

sw.bb572:                                         ; preds = %if.end419
  %336 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !13995
  %vc_par573 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %336, i32 0, i32 31, !dbg !13997
  %arrayidx574 = getelementptr [16 x i32], [16 x i32]* %vc_par573, i64 0, i64 0, !dbg !13995
  %337 = load i32, i32* %arrayidx574, align 4, !dbg !13995
  %tobool575 = icmp ne i32 %337, 0, !dbg !13995
  br i1 %tobool575, label %if.end577, label %if.then576, !dbg !13998

if.then576:                                       ; preds = %sw.bb572
  %338 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13999
  call void @respond_ID(%struct.tty_struct* %338) #13, !dbg !14000
  br label %if.end577, !dbg !14000

if.end577:                                        ; preds = %if.then576, %sw.bb572
  br label %sw.epilog713, !dbg !14001

sw.bb578:                                         ; preds = %if.end419
  %339 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14002
  %vc_par579 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %339, i32 0, i32 31, !dbg !14004
  %arrayidx580 = getelementptr [16 x i32], [16 x i32]* %vc_par579, i64 0, i64 0, !dbg !14002
  %340 = load i32, i32* %arrayidx580, align 4, !dbg !14002
  %tobool581 = icmp ne i32 %340, 0, !dbg !14002
  br i1 %tobool581, label %if.else593, label %land.lhs.true582, !dbg !14005

land.lhs.true582:                                 ; preds = %sw.bb578
  %341 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14006
  %state583 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %341, i32 0, i32 1, !dbg !14007
  %x584 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state583, i32 0, i32 0, !dbg !14008
  %342 = load i32, i32* %x584, align 8, !dbg !14008
  %cmp585 = icmp ult i32 %342, 256, !dbg !14009
  br i1 %cmp585, label %if.then587, label %if.else593, !dbg !14010

if.then587:                                       ; preds = %land.lhs.true582
  %343 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14011
  %state588 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %343, i32 0, i32 1, !dbg !14012
  %x589 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state588, i32 0, i32 0, !dbg !14013
  %344 = load i32, i32* %x589, align 8, !dbg !14013
  %conv590 = zext i32 %344 to i64, !dbg !14011
  %345 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14014
  %vc_tab_stop591 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %345, i32 0, i32 39, !dbg !14015
  %arraydecay592 = getelementptr inbounds [4 x i64], [4 x i64]* %vc_tab_stop591, i64 0, i64 0, !dbg !14014
  call void @set_bit(i64 %conv590, i64* %arraydecay592) #13, !dbg !14016
  br label %if.end602, !dbg !14016

if.else593:                                       ; preds = %land.lhs.true582, %sw.bb578
  %346 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14017
  %vc_par594 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %346, i32 0, i32 31, !dbg !14019
  %arrayidx595 = getelementptr [16 x i32], [16 x i32]* %vc_par594, i64 0, i64 0, !dbg !14017
  %347 = load i32, i32* %arrayidx595, align 4, !dbg !14017
  %cmp596 = icmp eq i32 %347, 3, !dbg !14020
  br i1 %cmp596, label %if.then598, label %if.end601, !dbg !14021

if.then598:                                       ; preds = %if.else593
  %348 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14022
  %vc_tab_stop599 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %348, i32 0, i32 39, !dbg !14023
  %arraydecay600 = getelementptr inbounds [4 x i64], [4 x i64]* %vc_tab_stop599, i64 0, i64 0, !dbg !14022
  call void @bitmap_zero(i64* %arraydecay600, i32 256) #13, !dbg !14024
  br label %if.end601, !dbg !14024

if.end601:                                        ; preds = %if.then598, %if.else593
  br label %if.end602

if.end602:                                        ; preds = %if.end601, %if.then587
  br label %sw.epilog713, !dbg !14025

sw.bb603:                                         ; preds = %if.end419
  %349 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14026
  call void @csi_m(%struct.vc_data* %349) #13, !dbg !14027
  br label %sw.epilog713, !dbg !14028

sw.bb604:                                         ; preds = %if.end419
  %350 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14029
  %vc_par605 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %350, i32 0, i32 31, !dbg !14031
  %arrayidx606 = getelementptr [16 x i32], [16 x i32]* %vc_par605, i64 0, i64 0, !dbg !14029
  %351 = load i32, i32* %arrayidx606, align 4, !dbg !14029
  %cmp607 = icmp ult i32 %351, 4, !dbg !14032
  br i1 %cmp607, label %if.then609, label %if.end622, !dbg !14033

if.then609:                                       ; preds = %sw.bb604
  %352 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14034
  %vc_num610 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %352, i32 0, i32 3, !dbg !14035
  %353 = load i16, i16* %vc_num610, align 8, !dbg !14035
  %conv611 = zext i16 %353 to i32, !dbg !14034
  %354 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14036
  %vc_par612 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %354, i32 0, i32 31, !dbg !14037
  %arrayidx613 = getelementptr [16 x i32], [16 x i32]* %vc_par612, i64 0, i64 0, !dbg !14036
  %355 = load i32, i32* %arrayidx613, align 4, !dbg !14036
  %cmp614 = icmp ult i32 %355, 3, !dbg !14038
  br i1 %cmp614, label %cond.true616, label %cond.false619, !dbg !14039

cond.true616:                                     ; preds = %if.then609
  %356 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14040
  %vc_par617 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %356, i32 0, i32 31, !dbg !14041
  %arrayidx618 = getelementptr [16 x i32], [16 x i32]* %vc_par617, i64 0, i64 0, !dbg !14040
  %357 = load i32, i32* %arrayidx618, align 4, !dbg !14040
  br label %cond.end620, !dbg !14039

cond.false619:                                    ; preds = %if.then609
  br label %cond.end620, !dbg !14039

cond.end620:                                      ; preds = %cond.false619, %cond.true616
  %cond621 = phi i32 [ %357, %cond.true616 ], [ 4, %cond.false619 ], !dbg !14039
  call void @vt_set_led_state(i32 %conv611, i32 %cond621) #13, !dbg !14042
  br label %if.end622, !dbg !14042

if.end622:                                        ; preds = %cond.end620, %sw.bb604
  br label %sw.epilog713, !dbg !14043

sw.bb623:                                         ; preds = %if.end419
  %358 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14044
  %vc_par624 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %358, i32 0, i32 31, !dbg !14046
  %arrayidx625 = getelementptr [16 x i32], [16 x i32]* %vc_par624, i64 0, i64 0, !dbg !14044
  %359 = load i32, i32* %arrayidx625, align 4, !dbg !14044
  %tobool626 = icmp ne i32 %359, 0, !dbg !14044
  br i1 %tobool626, label %if.end631, label %if.then627, !dbg !14047

if.then627:                                       ; preds = %sw.bb623
  %360 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14048
  %vc_par628 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %360, i32 0, i32 31, !dbg !14049
  %arrayidx629 = getelementptr [16 x i32], [16 x i32]* %vc_par628, i64 0, i64 0, !dbg !14048
  %361 = load i32, i32* %arrayidx629, align 4, !dbg !14050
  %inc630 = add i32 %361, 1, !dbg !14050
  store i32 %inc630, i32* %arrayidx629, align 4, !dbg !14050
  br label %if.end631, !dbg !14048

if.end631:                                        ; preds = %if.then627, %sw.bb623
  %362 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14051
  %vc_par632 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %362, i32 0, i32 31, !dbg !14053
  %arrayidx633 = getelementptr [16 x i32], [16 x i32]* %vc_par632, i64 0, i64 1, !dbg !14051
  %363 = load i32, i32* %arrayidx633, align 4, !dbg !14051
  %tobool634 = icmp ne i32 %363, 0, !dbg !14051
  br i1 %tobool634, label %if.end638, label %if.then635, !dbg !14054

if.then635:                                       ; preds = %if.end631
  %364 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14055
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %364, i32 0, i32 5, !dbg !14056
  %365 = load i32, i32* %vc_rows, align 8, !dbg !14056
  %366 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14057
  %vc_par636 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %366, i32 0, i32 31, !dbg !14058
  %arrayidx637 = getelementptr [16 x i32], [16 x i32]* %vc_par636, i64 0, i64 1, !dbg !14057
  store i32 %365, i32* %arrayidx637, align 4, !dbg !14059
  br label %if.end638, !dbg !14057

if.end638:                                        ; preds = %if.then635, %if.end631
  %367 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14060
  %vc_par639 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %367, i32 0, i32 31, !dbg !14062
  %arrayidx640 = getelementptr [16 x i32], [16 x i32]* %vc_par639, i64 0, i64 0, !dbg !14060
  %368 = load i32, i32* %arrayidx640, align 4, !dbg !14060
  %369 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14063
  %vc_par641 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %369, i32 0, i32 31, !dbg !14064
  %arrayidx642 = getelementptr [16 x i32], [16 x i32]* %vc_par641, i64 0, i64 1, !dbg !14063
  %370 = load i32, i32* %arrayidx642, align 4, !dbg !14063
  %cmp643 = icmp ult i32 %368, %370, !dbg !14065
  br i1 %cmp643, label %land.lhs.true645, label %if.end657, !dbg !14066

land.lhs.true645:                                 ; preds = %if.end638
  %371 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14067
  %vc_par646 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %371, i32 0, i32 31, !dbg !14068
  %arrayidx647 = getelementptr [16 x i32], [16 x i32]* %vc_par646, i64 0, i64 1, !dbg !14067
  %372 = load i32, i32* %arrayidx647, align 4, !dbg !14067
  %373 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14069
  %vc_rows648 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %373, i32 0, i32 5, !dbg !14070
  %374 = load i32, i32* %vc_rows648, align 8, !dbg !14070
  %cmp649 = icmp ule i32 %372, %374, !dbg !14071
  br i1 %cmp649, label %if.then651, label %if.end657, !dbg !14072

if.then651:                                       ; preds = %land.lhs.true645
  %375 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14073
  %vc_par652 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %375, i32 0, i32 31, !dbg !14075
  %arrayidx653 = getelementptr [16 x i32], [16 x i32]* %vc_par652, i64 0, i64 0, !dbg !14073
  %376 = load i32, i32* %arrayidx653, align 4, !dbg !14073
  %sub654 = sub i32 %376, 1, !dbg !14076
  %377 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14077
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %377, i32 0, i32 11, !dbg !14078
  store i32 %sub654, i32* %vc_top, align 8, !dbg !14079
  %378 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14080
  %vc_par655 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %378, i32 0, i32 31, !dbg !14081
  %arrayidx656 = getelementptr [16 x i32], [16 x i32]* %vc_par655, i64 0, i64 1, !dbg !14080
  %379 = load i32, i32* %arrayidx656, align 4, !dbg !14080
  %380 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14082
  %vc_bottom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %380, i32 0, i32 12, !dbg !14083
  store i32 %379, i32* %vc_bottom, align 4, !dbg !14084
  %381 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14085
  call void @gotoxay(%struct.vc_data* %381, i32 0, i32 0) #13, !dbg !14086
  br label %if.end657, !dbg !14087

if.end657:                                        ; preds = %if.then651, %land.lhs.true645, %if.end638
  br label %sw.epilog713, !dbg !14088

sw.bb658:                                         ; preds = %if.end419
  %382 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14089
  call void @save_cur(%struct.vc_data* %382) #13, !dbg !14090
  br label %sw.epilog713, !dbg !14091

sw.bb659:                                         ; preds = %if.end419
  %383 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14092
  call void @restore_cur(%struct.vc_data* %383) #13, !dbg !14093
  br label %sw.epilog713, !dbg !14094

sw.bb660:                                         ; preds = %if.end419
  %384 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14095
  %385 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14096
  %vc_par661 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %385, i32 0, i32 31, !dbg !14097
  %arrayidx662 = getelementptr [16 x i32], [16 x i32]* %vc_par661, i64 0, i64 0, !dbg !14096
  %386 = load i32, i32* %arrayidx662, align 4, !dbg !14096
  call void @csi_X(%struct.vc_data* %384, i32 %386) #13, !dbg !14098
  br label %sw.epilog713, !dbg !14099

sw.bb663:                                         ; preds = %if.end419
  %387 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14100
  %388 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14101
  %vc_par664 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %388, i32 0, i32 31, !dbg !14102
  %arrayidx665 = getelementptr [16 x i32], [16 x i32]* %vc_par664, i64 0, i64 0, !dbg !14101
  %389 = load i32, i32* %arrayidx665, align 4, !dbg !14101
  call void @csi_at(%struct.vc_data* %387, i32 %389) #13, !dbg !14103
  br label %sw.epilog713, !dbg !14104

sw.bb666:                                         ; preds = %if.end419
  %390 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14105
  call void @setterm_command(%struct.vc_data* %390) #13, !dbg !14106
  br label %sw.epilog713, !dbg !14107

sw.epilog667:                                     ; preds = %if.end419
  br label %sw.epilog713, !dbg !14108

sw.bb668:                                         ; preds = %sw.epilog
  %391 = load i32, i32* %c.addr, align 4, !dbg !14109
  %cmp669 = icmp sge i32 %391, 20, !dbg !14111
  br i1 %cmp669, label %land.lhs.true671, label %if.end675, !dbg !14112

land.lhs.true671:                                 ; preds = %sw.bb668
  %392 = load i32, i32* %c.addr, align 4, !dbg !14113
  %cmp672 = icmp sle i32 %392, 63, !dbg !14114
  br i1 %cmp672, label %if.then674, label %if.end675, !dbg !14115

if.then674:                                       ; preds = %land.lhs.true671
  br label %sw.epilog713, !dbg !14116

if.end675:                                        ; preds = %land.lhs.true671, %sw.bb668
  %393 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14117
  %vc_state676 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %393, i32 0, i32 29, !dbg !14118
  store i32 0, i32* %vc_state676, align 4, !dbg !14119
  br label %sw.epilog713, !dbg !14120

sw.bb677:                                         ; preds = %sw.epilog
  %394 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14121
  %vc_state678 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %394, i32 0, i32 29, !dbg !14122
  store i32 0, i32* %vc_state678, align 4, !dbg !14123
  %395 = load i32, i32* %c.addr, align 4, !dbg !14124
  switch i32 %395, label %sw.epilog687 [
    i32 64, label %sw.bb679
    i32 71, label %sw.bb682
    i32 56, label %sw.bb682
  ], !dbg !14125

sw.bb679:                                         ; preds = %sw.bb677
  %396 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14126
  %vc_utf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %396, i32 0, i32 36, !dbg !14128
  %bf.load680 = load i16, i16* %vc_utf, align 8, !dbg !14129
  %bf.clear681 = and i16 %bf.load680, -16385, !dbg !14129
  store i16 %bf.clear681, i16* %vc_utf, align 8, !dbg !14129
  br label %sw.epilog713, !dbg !14130

sw.bb682:                                         ; preds = %sw.bb677, %sw.bb677
  %397 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14131
  %vc_utf683 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %397, i32 0, i32 36, !dbg !14132
  %bf.load684 = load i16, i16* %vc_utf683, align 8, !dbg !14133
  %bf.clear685 = and i16 %bf.load684, -16385, !dbg !14133
  %bf.set686 = or i16 %bf.clear685, 16384, !dbg !14133
  store i16 %bf.set686, i16* %vc_utf683, align 8, !dbg !14133
  br label %sw.epilog713, !dbg !14134

sw.epilog687:                                     ; preds = %sw.bb677
  br label %sw.epilog713, !dbg !14135

sw.bb688:                                         ; preds = %sw.epilog
  %398 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14136
  %vc_state689 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %398, i32 0, i32 29, !dbg !14137
  store i32 0, i32* %vc_state689, align 4, !dbg !14138
  br label %sw.epilog713, !dbg !14139

sw.bb690:                                         ; preds = %sw.epilog
  %399 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14140
  %vc_state691 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %399, i32 0, i32 29, !dbg !14141
  store i32 0, i32* %vc_state691, align 4, !dbg !14142
  %400 = load i32, i32* %c.addr, align 4, !dbg !14143
  %cmp692 = icmp eq i32 %400, 56, !dbg !14145
  br i1 %cmp692, label %if.then694, label %if.end706, !dbg !14146

if.then694:                                       ; preds = %sw.bb690
  %401 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14147
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %401, i32 0, i32 28, !dbg !14149
  %402 = load i16, i16* %vc_video_erase_char, align 8, !dbg !14149
  %conv695 = zext i16 %402 to i32, !dbg !14147
  %and696 = and i32 %conv695, 65280, !dbg !14150
  %or697 = or i32 %and696, 69, !dbg !14151
  %conv698 = trunc i32 %or697 to i16, !dbg !14152
  %403 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14153
  %vc_video_erase_char699 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %403, i32 0, i32 28, !dbg !14154
  store i16 %conv698, i16* %vc_video_erase_char699, align 8, !dbg !14155
  %404 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14156
  call void @csi_J(%struct.vc_data* %404, i32 2) #13, !dbg !14157
  %405 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14158
  %vc_video_erase_char700 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %405, i32 0, i32 28, !dbg !14159
  %406 = load i16, i16* %vc_video_erase_char700, align 8, !dbg !14159
  %conv701 = zext i16 %406 to i32, !dbg !14158
  %and702 = and i32 %conv701, 65280, !dbg !14160
  %or703 = or i32 %and702, 32, !dbg !14161
  %conv704 = trunc i32 %or703 to i16, !dbg !14162
  %407 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14163
  %vc_video_erase_char705 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %407, i32 0, i32 28, !dbg !14164
  store i16 %conv704, i16* %vc_video_erase_char705, align 8, !dbg !14165
  %408 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14166
  %409 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14167
  %vc_origin = getelementptr inbounds %struct.vc_data, %struct.vc_data* %409, i32 0, i32 8, !dbg !14168
  %410 = load i64, i64* %vc_origin, align 8, !dbg !14168
  %411 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14169
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %411, i32 0, i32 15, !dbg !14170
  %412 = load i32, i32* %vc_screenbuf_size, align 8, !dbg !14170
  %div = udiv i32 %412, 2, !dbg !14171
  call void @do_update_region(%struct.vc_data* %408, i64 %410, i32 %div) #13, !dbg !14172
  br label %if.end706, !dbg !14173

if.end706:                                        ; preds = %if.then694, %sw.bb690
  br label %sw.epilog713, !dbg !14174

sw.bb707:                                         ; preds = %sw.epilog
  %413 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14175
  %414 = load i32, i32* %c.addr, align 4, !dbg !14176
  call void @vc_setGx(%struct.vc_data* %413, i32 0, i32 %414) #13, !dbg !14177
  %415 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14178
  %vc_state708 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %415, i32 0, i32 29, !dbg !14179
  store i32 0, i32* %vc_state708, align 4, !dbg !14180
  br label %sw.epilog713, !dbg !14181

sw.bb709:                                         ; preds = %sw.epilog
  %416 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14182
  %417 = load i32, i32* %c.addr, align 4, !dbg !14183
  call void @vc_setGx(%struct.vc_data* %416, i32 1, i32 %417) #13, !dbg !14184
  %418 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14185
  %vc_state710 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %418, i32 0, i32 29, !dbg !14186
  store i32 0, i32* %vc_state710, align 4, !dbg !14187
  br label %sw.epilog713, !dbg !14188

sw.bb711:                                         ; preds = %sw.epilog
  br label %sw.epilog713, !dbg !14189

sw.default:                                       ; preds = %sw.epilog
  %419 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14190
  %vc_state712 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %419, i32 0, i32 29, !dbg !14191
  store i32 0, i32* %vc_state712, align 4, !dbg !14192
  br label %sw.epilog713, !dbg !14193

sw.epilog713:                                     ; preds = %if.then, %sw.bb, %if.end12, %sw.bb13, %if.end34, %if.then45, %sw.bb47, %sw.bb48, %sw.bb56, %sw.bb70, %sw.bb72, %sw.bb74, %sw.bb75, %sw.bb80, %sw.bb82, %sw.bb84, %sw.bb86, %sw.bb87, %sw.bb88, %if.end100, %sw.bb101, %sw.bb102, %sw.bb103, %sw.bb104, %sw.bb106, %sw.bb108, %sw.bb110, %sw.bb111, %sw.bb114, %sw.epilog117, %for.end, %if.end147, %if.end231, %if.then251, %sw.bb254, %sw.bb258, %sw.bb263, %sw.bb268, %if.then284, %if.then293, %if.then312, %if.end323, %if.end333, %if.end358, %if.end382, %if.end406, %if.then415, %if.end427, %if.end439, %if.end455, %if.end471, %if.end487, %if.end503, %if.end517, %if.end531, %if.end552, %sw.bb557, %sw.bb560, %sw.bb563, %sw.bb566, %sw.bb569, %if.end577, %if.end602, %sw.bb603, %if.end622, %if.end657, %sw.bb658, %sw.bb659, %sw.bb660, %sw.bb663, %sw.bb666, %sw.epilog667, %if.then674, %if.end675, %sw.bb679, %sw.bb682, %sw.epilog687, %sw.bb688, %if.end706, %sw.bb707, %sw.bb709, %sw.bb711, %sw.default
  ret void, !dbg !14194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vc_con_write_normal(%struct.vc_data* %vc, i32 %tc, i32 %c, %struct.vc_draw_region* %draw) #0 !dbg !14195 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %tc.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %draw.addr = alloca %struct.vc_draw_region*, align 8
  %next_c = alloca i32, align 4
  %vc_attr = alloca i8, align 1
  %himask = alloca i16, align 2
  %charmask = alloca i16, align 2
  %width = alloca i8, align 1
  %inverse = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14198, metadata !DIExpression()), !dbg !14199
  store i32 %tc, i32* %tc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tc.addr, metadata !14200, metadata !DIExpression()), !dbg !14201
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !14202, metadata !DIExpression()), !dbg !14203
  store %struct.vc_draw_region* %draw, %struct.vc_draw_region** %draw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_draw_region** %draw.addr, metadata !14204, metadata !DIExpression()), !dbg !14205
  call void @llvm.dbg.declare(metadata i32* %next_c, metadata !14206, metadata !DIExpression()), !dbg !14207
  call void @llvm.dbg.declare(metadata i8* %vc_attr, metadata !14208, metadata !DIExpression()), !dbg !14209
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14210
  %vc_attr1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 17, !dbg !14211
  %1 = load i8, i8* %vc_attr1, align 1, !dbg !14211
  store i8 %1, i8* %vc_attr, align 1, !dbg !14209
  call void @llvm.dbg.declare(metadata i16* %himask, metadata !14212, metadata !DIExpression()), !dbg !14213
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14214
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 26, !dbg !14215
  %3 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !14215
  store i16 %3, i16* %himask, align 2, !dbg !14213
  call void @llvm.dbg.declare(metadata i16* %charmask, metadata !14216, metadata !DIExpression()), !dbg !14217
  %4 = load i16, i16* %himask, align 2, !dbg !14218
  %conv = zext i16 %4 to i32, !dbg !14218
  %tobool = icmp ne i32 %conv, 0, !dbg !14218
  %5 = zext i1 %tobool to i64, !dbg !14218
  %cond = select i1 %tobool, i32 511, i32 255, !dbg !14218
  %conv2 = trunc i32 %cond to i16, !dbg !14218
  store i16 %conv2, i16* %charmask, align 2, !dbg !14217
  call void @llvm.dbg.declare(metadata i8* %width, metadata !14219, metadata !DIExpression()), !dbg !14220
  store i8 1, i8* %width, align 1, !dbg !14220
  call void @llvm.dbg.declare(metadata i8* %inverse, metadata !14221, metadata !DIExpression()), !dbg !14222
  store i8 0, i8* %inverse, align 1, !dbg !14222
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14223
  %vc_utf = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 36, !dbg !14225
  %bf.load = load i16, i16* %vc_utf, align 8, !dbg !14225
  %bf.lshr = lshr i16 %bf.load, 14, !dbg !14225
  %bf.clear = and i16 %bf.lshr, 1, !dbg !14225
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !14225
  %conv3 = zext i8 %bf.cast to i32, !dbg !14223
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !14223
  br i1 %tobool4, label %land.lhs.true, label %if.end11, !dbg !14226

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14227
  %vc_disp_ctrl = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 36, !dbg !14228
  %bf.load5 = load i16, i16* %vc_disp_ctrl, align 8, !dbg !14228
  %bf.clear6 = and i16 %bf.load5, 1, !dbg !14228
  %bf.cast7 = zext i16 %bf.clear6 to i32, !dbg !14228
  %tobool8 = icmp ne i32 %bf.cast7, 0, !dbg !14227
  br i1 %tobool8, label %if.end11, label %if.then, !dbg !14229

if.then:                                          ; preds = %land.lhs.true
  %8 = load i32, i32* %c.addr, align 4, !dbg !14230
  %call = call i32 @is_double_width(i32 %8) #13, !dbg !14233
  %tobool9 = icmp ne i32 %call, 0, !dbg !14233
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !14234

if.then10:                                        ; preds = %if.then
  store i8 2, i8* %width, align 1, !dbg !14235
  br label %if.end, !dbg !14236

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end11, !dbg !14237

if.end11:                                         ; preds = %if.end, %land.lhs.true, %entry
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14238
  %10 = load i32, i32* %tc.addr, align 4, !dbg !14239
  %conv12 = sext i32 %10 to i64, !dbg !14239
  %call13 = call i32 @conv_uni_to_pc(%struct.vc_data* %9, i64 %conv12) #13, !dbg !14240
  store i32 %call13, i32* %tc.addr, align 4, !dbg !14241
  %11 = load i32, i32* %tc.addr, align 4, !dbg !14242
  %12 = load i16, i16* %charmask, align 2, !dbg !14244
  %conv14 = zext i16 %12 to i32, !dbg !14244
  %neg = xor i32 %conv14, -1, !dbg !14245
  %and = and i32 %11, %neg, !dbg !14246
  %tobool15 = icmp ne i32 %and, 0, !dbg !14246
  br i1 %tobool15, label %if.then16, label %if.end55, !dbg !14247

if.then16:                                        ; preds = %if.end11
  %13 = load i32, i32* %tc.addr, align 4, !dbg !14248
  %cmp = icmp eq i32 %13, -1, !dbg !14251
  br i1 %cmp, label %if.then20, label %lor.lhs.false, !dbg !14252

lor.lhs.false:                                    ; preds = %if.then16
  %14 = load i32, i32* %tc.addr, align 4, !dbg !14253
  %cmp18 = icmp eq i32 %14, -2, !dbg !14254
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !14255

if.then20:                                        ; preds = %lor.lhs.false, %if.then16
  store i32 -1, i32* %retval, align 4, !dbg !14256
  br label %return, !dbg !14256

if.end21:                                         ; preds = %lor.lhs.false
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14257
  %vc_utf22 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 36, !dbg !14259
  %bf.load23 = load i16, i16* %vc_utf22, align 8, !dbg !14259
  %bf.lshr24 = lshr i16 %bf.load23, 14, !dbg !14259
  %bf.clear25 = and i16 %bf.lshr24, 1, !dbg !14259
  %bf.cast26 = trunc i16 %bf.clear25 to i8, !dbg !14259
  %tobool27 = icmp ne i8 %bf.cast26, 0, !dbg !14257
  br i1 %tobool27, label %lor.lhs.false28, label %land.lhs.true37, !dbg !14260

lor.lhs.false28:                                  ; preds = %if.end21
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14261
  %vc_disp_ctrl29 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 36, !dbg !14262
  %bf.load30 = load i16, i16* %vc_disp_ctrl29, align 8, !dbg !14262
  %bf.clear31 = and i16 %bf.load30, 1, !dbg !14262
  %bf.cast32 = zext i16 %bf.clear31 to i32, !dbg !14262
  %tobool33 = icmp ne i32 %bf.cast32, 0, !dbg !14261
  br i1 %tobool33, label %land.lhs.true37, label %lor.lhs.false34, !dbg !14263

lor.lhs.false34:                                  ; preds = %lor.lhs.false28
  %17 = load i32, i32* %c.addr, align 4, !dbg !14264
  %cmp35 = icmp slt i32 %17, 128, !dbg !14265
  br i1 %cmp35, label %land.lhs.true37, label %if.else, !dbg !14266

land.lhs.true37:                                  ; preds = %lor.lhs.false34, %lor.lhs.false28, %if.end21
  %18 = load i32, i32* %c.addr, align 4, !dbg !14267
  %19 = load i16, i16* %charmask, align 2, !dbg !14268
  %conv38 = zext i16 %19 to i32, !dbg !14268
  %neg39 = xor i32 %conv38, -1, !dbg !14269
  %and40 = and i32 %18, %neg39, !dbg !14270
  %tobool41 = icmp ne i32 %and40, 0, !dbg !14270
  br i1 %tobool41, label %if.else, label %if.then42, !dbg !14271

if.then42:                                        ; preds = %land.lhs.true37
  %20 = load i32, i32* %c.addr, align 4, !dbg !14272
  store i32 %20, i32* %tc.addr, align 4, !dbg !14274
  br label %if.end54, !dbg !14275

if.else:                                          ; preds = %land.lhs.true37, %lor.lhs.false34
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14276
  %call43 = call i32 @conv_uni_to_pc(%struct.vc_data* %21, i64 65533) #13, !dbg !14278
  store i32 %call43, i32* %tc.addr, align 4, !dbg !14279
  %22 = load i32, i32* %tc.addr, align 4, !dbg !14280
  %cmp44 = icmp slt i32 %22, 0, !dbg !14282
  br i1 %cmp44, label %if.then46, label %if.end53, !dbg !14283

if.then46:                                        ; preds = %if.else
  store i8 1, i8* %inverse, align 1, !dbg !14284
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14286
  %call47 = call i32 @conv_uni_to_pc(%struct.vc_data* %23, i64 63) #13, !dbg !14287
  store i32 %call47, i32* %tc.addr, align 4, !dbg !14288
  %24 = load i32, i32* %tc.addr, align 4, !dbg !14289
  %cmp48 = icmp slt i32 %24, 0, !dbg !14291
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !14292

if.then50:                                        ; preds = %if.then46
  store i32 63, i32* %tc.addr, align 4, !dbg !14293
  br label %if.end51, !dbg !14294

if.end51:                                         ; preds = %if.then50, %if.then46
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14295
  %call52 = call zeroext i8 @vc_invert_attr(%struct.vc_data* %25) #13, !dbg !14296
  store i8 %call52, i8* %vc_attr, align 1, !dbg !14297
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14298
  %27 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !14299
  call void @con_flush(%struct.vc_data* %26, %struct.vc_draw_region* %27) #13, !dbg !14300
  br label %if.end53, !dbg !14301

if.end53:                                         ; preds = %if.end51, %if.else
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then42
  br label %if.end55, !dbg !14302

if.end55:                                         ; preds = %if.end54, %if.end11
  %28 = load i32, i32* %c.addr, align 4, !dbg !14303
  store i32 %28, i32* %next_c, align 4, !dbg !14304
  br label %while.body, !dbg !14305

while.body:                                       ; preds = %if.end55, %if.end136
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14306
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 36, !dbg !14309
  %bf.load56 = load i16, i16* %vc_need_wrap, align 8, !dbg !14309
  %bf.lshr57 = lshr i16 %bf.load56, 10, !dbg !14309
  %bf.clear58 = and i16 %bf.lshr57, 1, !dbg !14309
  %bf.cast59 = zext i16 %bf.clear58 to i32, !dbg !14309
  %tobool60 = icmp ne i32 %bf.cast59, 0, !dbg !14306
  br i1 %tobool60, label %if.then67, label %lor.lhs.false61, !dbg !14310

lor.lhs.false61:                                  ; preds = %while.body
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14311
  %vc_decim = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 36, !dbg !14312
  %bf.load62 = load i16, i16* %vc_decim, align 8, !dbg !14312
  %bf.lshr63 = lshr i16 %bf.load62, 6, !dbg !14312
  %bf.clear64 = and i16 %bf.lshr63, 1, !dbg !14312
  %bf.cast65 = zext i16 %bf.clear64 to i32, !dbg !14312
  %tobool66 = icmp ne i32 %bf.cast65, 0, !dbg !14311
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !14313

if.then67:                                        ; preds = %lor.lhs.false61, %while.body
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14314
  %32 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !14315
  call void @con_flush(%struct.vc_data* %31, %struct.vc_draw_region* %32) #13, !dbg !14316
  br label %if.end68, !dbg !14316

if.end68:                                         ; preds = %if.then67, %lor.lhs.false61
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14317
  %vc_need_wrap69 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %33, i32 0, i32 36, !dbg !14319
  %bf.load70 = load i16, i16* %vc_need_wrap69, align 8, !dbg !14319
  %bf.lshr71 = lshr i16 %bf.load70, 10, !dbg !14319
  %bf.clear72 = and i16 %bf.lshr71, 1, !dbg !14319
  %bf.cast73 = zext i16 %bf.clear72 to i32, !dbg !14319
  %tobool74 = icmp ne i32 %bf.cast73, 0, !dbg !14317
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !14320

if.then75:                                        ; preds = %if.end68
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14321
  call void @cr(%struct.vc_data* %34) #13, !dbg !14323
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14324
  call void @lf(%struct.vc_data* %35) #13, !dbg !14325
  br label %if.end76, !dbg !14326

if.end76:                                         ; preds = %if.then75, %if.end68
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14327
  %vc_decim77 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 36, !dbg !14329
  %bf.load78 = load i16, i16* %vc_decim77, align 8, !dbg !14329
  %bf.lshr79 = lshr i16 %bf.load78, 6, !dbg !14329
  %bf.clear80 = and i16 %bf.lshr79, 1, !dbg !14329
  %bf.cast81 = zext i16 %bf.clear80 to i32, !dbg !14329
  %tobool82 = icmp ne i32 %bf.cast81, 0, !dbg !14327
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !14330

if.then83:                                        ; preds = %if.end76
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14331
  call void @insert_char(%struct.vc_data* %37, i32 1) #13, !dbg !14332
  br label %if.end84, !dbg !14332

if.end84:                                         ; preds = %if.then83, %if.end76
  %38 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14333
  %39 = load i32, i32* %next_c, align 4, !dbg !14334
  call void @vc_uniscr_putc(%struct.vc_data* %38, i32 %39) #13, !dbg !14335
  %40 = load i16, i16* %himask, align 2, !dbg !14336
  %tobool85 = icmp ne i16 %40, 0, !dbg !14336
  br i1 %tobool85, label %if.then86, label %if.end92, !dbg !14338

if.then86:                                        ; preds = %if.end84
  %41 = load i32, i32* %tc.addr, align 4, !dbg !14339
  %and87 = and i32 %41, 256, !dbg !14340
  %tobool88 = icmp ne i32 %and87, 0, !dbg !14340
  br i1 %tobool88, label %cond.true, label %cond.false, !dbg !14341

cond.true:                                        ; preds = %if.then86
  %42 = load i16, i16* %himask, align 2, !dbg !14342
  %conv89 = zext i16 %42 to i32, !dbg !14342
  br label %cond.end, !dbg !14341

cond.false:                                       ; preds = %if.then86
  br label %cond.end, !dbg !14341

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond90 = phi i32 [ %conv89, %cond.true ], [ 0, %cond.false ], !dbg !14341
  %43 = load i32, i32* %tc.addr, align 4, !dbg !14343
  %and91 = and i32 %43, 255, !dbg !14344
  %or = or i32 %cond90, %and91, !dbg !14345
  store i32 %or, i32* %tc.addr, align 4, !dbg !14346
  br label %if.end92, !dbg !14347

if.end92:                                         ; preds = %cond.end, %if.end84
  %44 = load i8, i8* %vc_attr, align 1, !dbg !14348
  %conv93 = zext i8 %44 to i32, !dbg !14348
  %shl = shl i32 %conv93, 8, !dbg !14349
  %45 = load i16, i16* %himask, align 2, !dbg !14350
  %conv94 = zext i16 %45 to i32, !dbg !14350
  %neg95 = xor i32 %conv94, -1, !dbg !14351
  %and96 = and i32 %shl, %neg95, !dbg !14352
  %46 = load i32, i32* %tc.addr, align 4, !dbg !14353
  %or97 = or i32 %46, %and96, !dbg !14353
  store i32 %or97, i32* %tc.addr, align 4, !dbg !14353
  %47 = load i32, i32* %tc.addr, align 4, !dbg !14354
  %conv98 = trunc i32 %47 to i16, !dbg !14354
  %48 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14354
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %48, i32 0, i32 25, !dbg !14354
  %49 = load i64, i64* %vc_pos, align 8, !dbg !14354
  %50 = inttoptr i64 %49 to i16*, !dbg !14354
  store i16 %conv98, i16* %50, align 2, !dbg !14354
  %51 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14355
  %call99 = call zeroext i1 @con_should_update(%struct.vc_data* %51) #13, !dbg !14357
  br i1 %call99, label %land.lhs.true101, label %if.end108, !dbg !14358

land.lhs.true101:                                 ; preds = %if.end92
  %52 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !14359
  %x = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %52, i32 0, i32 2, !dbg !14360
  %53 = load i32, i32* %x, align 8, !dbg !14360
  %cmp102 = icmp slt i32 %53, 0, !dbg !14361
  br i1 %cmp102, label %if.then104, label %if.end108, !dbg !14362

if.then104:                                       ; preds = %land.lhs.true101
  %54 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14363
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %54, i32 0, i32 1, !dbg !14365
  %x105 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !14366
  %55 = load i32, i32* %x105, align 8, !dbg !14366
  %56 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !14367
  %x106 = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %56, i32 0, i32 2, !dbg !14368
  store i32 %55, i32* %x106, align 8, !dbg !14369
  %57 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14370
  %vc_pos107 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %57, i32 0, i32 25, !dbg !14371
  %58 = load i64, i64* %vc_pos107, align 8, !dbg !14371
  %59 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !14372
  %from = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %59, i32 0, i32 0, !dbg !14373
  store i64 %58, i64* %from, align 8, !dbg !14374
  br label %if.end108, !dbg !14375

if.end108:                                        ; preds = %if.then104, %land.lhs.true101, %if.end92
  %60 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14376
  %state109 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %60, i32 0, i32 1, !dbg !14378
  %x110 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state109, i32 0, i32 0, !dbg !14379
  %61 = load i32, i32* %x110, align 8, !dbg !14379
  %62 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14380
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %62, i32 0, i32 4, !dbg !14381
  %63 = load i32, i32* %vc_cols, align 4, !dbg !14381
  %sub = sub i32 %63, 1, !dbg !14382
  %cmp111 = icmp eq i32 %61, %sub, !dbg !14383
  br i1 %cmp111, label %if.then113, label %if.else122, !dbg !14384

if.then113:                                       ; preds = %if.end108
  %64 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14385
  %vc_decawm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %64, i32 0, i32 36, !dbg !14387
  %bf.load114 = load i16, i16* %vc_decawm, align 8, !dbg !14387
  %bf.lshr115 = lshr i16 %bf.load114, 4, !dbg !14387
  %bf.clear116 = and i16 %bf.lshr115, 1, !dbg !14387
  %bf.cast117 = zext i16 %bf.clear116 to i32, !dbg !14387
  %65 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14388
  %vc_need_wrap118 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %65, i32 0, i32 36, !dbg !14389
  %66 = trunc i32 %bf.cast117 to i16, !dbg !14390
  %bf.load119 = load i16, i16* %vc_need_wrap118, align 8, !dbg !14390
  %bf.value = and i16 %66, 1, !dbg !14390
  %bf.shl = shl i16 %bf.value, 10, !dbg !14390
  %bf.clear120 = and i16 %bf.load119, -1025, !dbg !14390
  %bf.set = or i16 %bf.clear120, %bf.shl, !dbg !14390
  store i16 %bf.set, i16* %vc_need_wrap118, align 8, !dbg !14390
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !14390
  %67 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14391
  %vc_pos121 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %67, i32 0, i32 25, !dbg !14392
  %68 = load i64, i64* %vc_pos121, align 8, !dbg !14392
  %add = add i64 %68, 2, !dbg !14393
  %69 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !14394
  %to = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %69, i32 0, i32 1, !dbg !14395
  store i64 %add, i64* %to, align 8, !dbg !14396
  br label %if.end128, !dbg !14397

if.else122:                                       ; preds = %if.end108
  %70 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14398
  %state123 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %70, i32 0, i32 1, !dbg !14400
  %x124 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state123, i32 0, i32 0, !dbg !14401
  %71 = load i32, i32* %x124, align 8, !dbg !14402
  %inc = add i32 %71, 1, !dbg !14402
  store i32 %inc, i32* %x124, align 8, !dbg !14402
  %72 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14403
  %vc_pos125 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %72, i32 0, i32 25, !dbg !14404
  %73 = load i64, i64* %vc_pos125, align 8, !dbg !14405
  %add126 = add i64 %73, 2, !dbg !14405
  store i64 %add126, i64* %vc_pos125, align 8, !dbg !14405
  %74 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !14406
  %to127 = getelementptr inbounds %struct.vc_draw_region, %struct.vc_draw_region* %74, i32 0, i32 1, !dbg !14407
  store i64 %add126, i64* %to127, align 8, !dbg !14408
  br label %if.end128

if.end128:                                        ; preds = %if.else122, %if.then113
  %75 = load i8, i8* %width, align 1, !dbg !14409
  %dec = add i8 %75, -1, !dbg !14409
  store i8 %dec, i8* %width, align 1, !dbg !14409
  %tobool129 = icmp ne i8 %dec, 0, !dbg !14409
  br i1 %tobool129, label %if.end131, label %if.then130, !dbg !14411

if.then130:                                       ; preds = %if.end128
  br label %while.end, !dbg !14412

if.end131:                                        ; preds = %if.end128
  %76 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14413
  %call132 = call i32 @conv_uni_to_pc(%struct.vc_data* %76, i64 32) #13, !dbg !14414
  store i32 %call132, i32* %tc.addr, align 4, !dbg !14415
  %77 = load i32, i32* %tc.addr, align 4, !dbg !14416
  %cmp133 = icmp slt i32 %77, 0, !dbg !14418
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !14419

if.then135:                                       ; preds = %if.end131
  store i32 32, i32* %tc.addr, align 4, !dbg !14420
  br label %if.end136, !dbg !14421

if.end136:                                        ; preds = %if.then135, %if.end131
  store i32 32, i32* %next_c, align 4, !dbg !14422
  br label %while.body, !dbg !14305, !llvm.loop !14423

while.end:                                        ; preds = %if.then130
  %78 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14425
  %79 = load i32, i32* %c.addr, align 4, !dbg !14426
  call void @notify_write(%struct.vc_data* %78, i32 %79) #13, !dbg !14427
  %80 = load i8, i8* %inverse, align 1, !dbg !14428
  %tobool137 = trunc i8 %80 to i1, !dbg !14428
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !14430

if.then138:                                       ; preds = %while.end
  %81 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14431
  %82 = load %struct.vc_draw_region*, %struct.vc_draw_region** %draw.addr, align 8, !dbg !14432
  call void @con_flush(%struct.vc_data* %81, %struct.vc_draw_region* %82) #13, !dbg !14433
  br label %if.end139, !dbg !14433

if.end139:                                        ; preds = %if.then138, %while.end
  store i32 0, i32* %retval, align 4, !dbg !14434
  br label %return, !dbg !14434

return:                                           ; preds = %if.end139, %if.then20
  %83 = load i32, i32* %retval, align 4, !dbg !14435
  ret i32 %83, !dbg !14435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_uniscr_debug_check(%struct.vc_data* %vc) #0 !dbg !14436 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %uniscr = alloca %struct.uni_screen*, align 8
  %p = alloca i16*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %mask = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14437, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !14439, metadata !DIExpression()), !dbg !14440
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14441
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 49, !dbg !14441
  %1 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !14441
  store %struct.uni_screen* %1, %struct.uni_screen** %uniscr, align 8, !dbg !14440
  call void @llvm.dbg.declare(metadata i16** %p, metadata !14442, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.declare(metadata i32* %x, metadata !14444, metadata !DIExpression()), !dbg !14445
  call void @llvm.dbg.declare(metadata i32* %y, metadata !14446, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !14448, metadata !DIExpression()), !dbg !14449
  ret void, !dbg !14450
}

; Function Attrs: noredzone
declare dso_local void @console_conditional_schedule() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vc_translate_unicode(%struct.vc_data* %vc, i32 %c, i8* %rescan) #0 !dbg !4770 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %c.addr = alloca i32, align 4
  %rescan.addr = alloca i8*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14452, metadata !DIExpression()), !dbg !14453
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !14454, metadata !DIExpression()), !dbg !14455
  store i8* %rescan, i8** %rescan.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rescan.addr, metadata !14456, metadata !DIExpression()), !dbg !14457
  %0 = load i32, i32* %c.addr, align 4, !dbg !14458
  %and = and i32 %0, 192, !dbg !14460
  %cmp = icmp eq i32 %and, 128, !dbg !14461
  br i1 %cmp, label %if.then, label %if.end17, !dbg !14462

if.then:                                          ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14463
  %vc_utf_count = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 37, !dbg !14466
  %2 = load i8, i8* %vc_utf_count, align 2, !dbg !14466
  %tobool = icmp ne i8 %2, 0, !dbg !14463
  br i1 %tobool, label %if.end, label %if.then1, !dbg !14467

if.then1:                                         ; preds = %if.then
  store i32 65533, i32* %retval, align 4, !dbg !14468
  br label %return, !dbg !14468

if.end:                                           ; preds = %if.then
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14469
  %vc_utf_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 38, !dbg !14470
  %4 = load i32, i32* %vc_utf_char, align 4, !dbg !14470
  %shl = shl i32 %4, 6, !dbg !14471
  %5 = load i32, i32* %c.addr, align 4, !dbg !14472
  %and2 = and i32 %5, 63, !dbg !14473
  %or = or i32 %shl, %and2, !dbg !14474
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14475
  %vc_utf_char3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 38, !dbg !14476
  store i32 %or, i32* %vc_utf_char3, align 4, !dbg !14477
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14478
  %vc_npar = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 30, !dbg !14479
  %8 = load i32, i32* %vc_npar, align 8, !dbg !14480
  %inc = add i32 %8, 1, !dbg !14480
  store i32 %inc, i32* %vc_npar, align 8, !dbg !14480
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14481
  %vc_utf_count4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 37, !dbg !14483
  %10 = load i8, i8* %vc_utf_count4, align 2, !dbg !14484
  %dec = add i8 %10, -1, !dbg !14484
  store i8 %dec, i8* %vc_utf_count4, align 2, !dbg !14484
  %tobool5 = icmp ne i8 %dec, 0, !dbg !14484
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !14485

if.then6:                                         ; preds = %if.end
  br label %need_more_bytes, !dbg !14486

if.end7:                                          ; preds = %if.end
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14487
  %vc_utf_char8 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 38, !dbg !14488
  %12 = load i32, i32* %vc_utf_char8, align 4, !dbg !14488
  store i32 %12, i32* %c.addr, align 4, !dbg !14489
  %13 = load i32, i32* %c.addr, align 4, !dbg !14490
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14492
  %vc_npar9 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 30, !dbg !14493
  %15 = load i32, i32* %vc_npar9, align 8, !dbg !14493
  %sub = sub i32 %15, 1, !dbg !14494
  %idxprom = zext i32 %sub to i64, !dbg !14495
  %arrayidx = getelementptr [6 x i32], [6 x i32]* @vc_translate_unicode.utf8_length_changes, i64 0, i64 %idxprom, !dbg !14495
  %16 = load i32, i32* %arrayidx, align 4, !dbg !14495
  %cmp10 = icmp ule i32 %13, %16, !dbg !14496
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !14497

lor.lhs.false:                                    ; preds = %if.end7
  %17 = load i32, i32* %c.addr, align 4, !dbg !14498
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14499
  %vc_npar11 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 30, !dbg !14500
  %19 = load i32, i32* %vc_npar11, align 8, !dbg !14500
  %idxprom12 = zext i32 %19 to i64, !dbg !14501
  %arrayidx13 = getelementptr [6 x i32], [6 x i32]* @vc_translate_unicode.utf8_length_changes, i64 0, i64 %idxprom12, !dbg !14501
  %20 = load i32, i32* %arrayidx13, align 4, !dbg !14501
  %cmp14 = icmp ugt i32 %17, %20, !dbg !14502
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !14503

if.then15:                                        ; preds = %lor.lhs.false, %if.end7
  store i32 65533, i32* %retval, align 4, !dbg !14504
  br label %return, !dbg !14504

if.end16:                                         ; preds = %lor.lhs.false
  %21 = load i32, i32* %c.addr, align 4, !dbg !14505
  %call = call i32 @vc_sanitize_unicode(i32 %21) #13, !dbg !14506
  store i32 %call, i32* %retval, align 4, !dbg !14507
  br label %return, !dbg !14507

if.end17:                                         ; preds = %entry
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14508
  %vc_utf_count18 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 37, !dbg !14510
  %23 = load i8, i8* %vc_utf_count18, align 2, !dbg !14510
  %tobool19 = icmp ne i8 %23, 0, !dbg !14508
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !14511

if.then20:                                        ; preds = %if.end17
  %24 = load i8*, i8** %rescan.addr, align 8, !dbg !14512
  store i8 1, i8* %24, align 1, !dbg !14514
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14515
  %vc_utf_count21 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 37, !dbg !14516
  store i8 0, i8* %vc_utf_count21, align 2, !dbg !14517
  store i32 65533, i32* %retval, align 4, !dbg !14518
  br label %return, !dbg !14518

if.end22:                                         ; preds = %if.end17
  %26 = load i32, i32* %c.addr, align 4, !dbg !14519
  %cmp23 = icmp sle i32 %26, 127, !dbg !14521
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !14522

if.then24:                                        ; preds = %if.end22
  %27 = load i32, i32* %c.addr, align 4, !dbg !14523
  store i32 %27, i32* %retval, align 4, !dbg !14524
  br label %return, !dbg !14524

if.end25:                                         ; preds = %if.end22
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14525
  %vc_npar26 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 30, !dbg !14526
  store i32 0, i32* %vc_npar26, align 8, !dbg !14527
  %29 = load i32, i32* %c.addr, align 4, !dbg !14528
  %and27 = and i32 %29, 224, !dbg !14530
  %cmp28 = icmp eq i32 %and27, 192, !dbg !14531
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !14532

if.then29:                                        ; preds = %if.end25
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14533
  %vc_utf_count30 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 37, !dbg !14535
  store i8 1, i8* %vc_utf_count30, align 2, !dbg !14536
  %31 = load i32, i32* %c.addr, align 4, !dbg !14537
  %and31 = and i32 %31, 31, !dbg !14538
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14539
  %vc_utf_char32 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 38, !dbg !14540
  store i32 %and31, i32* %vc_utf_char32, align 4, !dbg !14541
  br label %if.end65, !dbg !14542

if.else:                                          ; preds = %if.end25
  %33 = load i32, i32* %c.addr, align 4, !dbg !14543
  %and33 = and i32 %33, 240, !dbg !14545
  %cmp34 = icmp eq i32 %and33, 224, !dbg !14546
  br i1 %cmp34, label %if.then35, label %if.else39, !dbg !14547

if.then35:                                        ; preds = %if.else
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14548
  %vc_utf_count36 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %34, i32 0, i32 37, !dbg !14550
  store i8 2, i8* %vc_utf_count36, align 2, !dbg !14551
  %35 = load i32, i32* %c.addr, align 4, !dbg !14552
  %and37 = and i32 %35, 15, !dbg !14553
  %36 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14554
  %vc_utf_char38 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %36, i32 0, i32 38, !dbg !14555
  store i32 %and37, i32* %vc_utf_char38, align 4, !dbg !14556
  br label %if.end64, !dbg !14557

if.else39:                                        ; preds = %if.else
  %37 = load i32, i32* %c.addr, align 4, !dbg !14558
  %and40 = and i32 %37, 248, !dbg !14560
  %cmp41 = icmp eq i32 %and40, 240, !dbg !14561
  br i1 %cmp41, label %if.then42, label %if.else46, !dbg !14562

if.then42:                                        ; preds = %if.else39
  %38 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14563
  %vc_utf_count43 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %38, i32 0, i32 37, !dbg !14565
  store i8 3, i8* %vc_utf_count43, align 2, !dbg !14566
  %39 = load i32, i32* %c.addr, align 4, !dbg !14567
  %and44 = and i32 %39, 7, !dbg !14568
  %40 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14569
  %vc_utf_char45 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %40, i32 0, i32 38, !dbg !14570
  store i32 %and44, i32* %vc_utf_char45, align 4, !dbg !14571
  br label %if.end63, !dbg !14572

if.else46:                                        ; preds = %if.else39
  %41 = load i32, i32* %c.addr, align 4, !dbg !14573
  %and47 = and i32 %41, 252, !dbg !14575
  %cmp48 = icmp eq i32 %and47, 248, !dbg !14576
  br i1 %cmp48, label %if.then49, label %if.else53, !dbg !14577

if.then49:                                        ; preds = %if.else46
  %42 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14578
  %vc_utf_count50 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 37, !dbg !14580
  store i8 4, i8* %vc_utf_count50, align 2, !dbg !14581
  %43 = load i32, i32* %c.addr, align 4, !dbg !14582
  %and51 = and i32 %43, 3, !dbg !14583
  %44 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14584
  %vc_utf_char52 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %44, i32 0, i32 38, !dbg !14585
  store i32 %and51, i32* %vc_utf_char52, align 4, !dbg !14586
  br label %if.end62, !dbg !14587

if.else53:                                        ; preds = %if.else46
  %45 = load i32, i32* %c.addr, align 4, !dbg !14588
  %and54 = and i32 %45, 254, !dbg !14590
  %cmp55 = icmp eq i32 %and54, 252, !dbg !14591
  br i1 %cmp55, label %if.then56, label %if.else60, !dbg !14592

if.then56:                                        ; preds = %if.else53
  %46 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14593
  %vc_utf_count57 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %46, i32 0, i32 37, !dbg !14595
  store i8 5, i8* %vc_utf_count57, align 2, !dbg !14596
  %47 = load i32, i32* %c.addr, align 4, !dbg !14597
  %and58 = and i32 %47, 1, !dbg !14598
  %48 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14599
  %vc_utf_char59 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %48, i32 0, i32 38, !dbg !14600
  store i32 %and58, i32* %vc_utf_char59, align 4, !dbg !14601
  br label %if.end61, !dbg !14602

if.else60:                                        ; preds = %if.else53
  store i32 65533, i32* %retval, align 4, !dbg !14603
  br label %return, !dbg !14603

if.end61:                                         ; preds = %if.then56
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then49
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then42
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then35
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then29
  br label %need_more_bytes, !dbg !14605

need_more_bytes:                                  ; preds = %if.end65, %if.then6
  call void @llvm.dbg.label(metadata !14606), !dbg !14607
  store i32 -1, i32* %retval, align 4, !dbg !14608
  br label %return, !dbg !14608

return:                                           ; preds = %need_more_bytes, %if.else60, %if.then24, %if.then20, %if.end16, %if.then15, %if.then1
  %49 = load i32, i32* %retval, align 4, !dbg !14609
  ret i32 %49, !dbg !14609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vc_translate_ascii(%struct.vc_data* %vc, i32 %c) #0 !dbg !14610 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %c.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14613, metadata !DIExpression()), !dbg !14614
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !14615, metadata !DIExpression()), !dbg !14616
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14617
  %vc_toggle_meta = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 36, !dbg !14621
  %bf.load = load i16, i16* %vc_toggle_meta, align 8, !dbg !14621
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !14621
  %bf.clear = and i16 %bf.lshr, 1, !dbg !14621
  %bf.cast = zext i16 %bf.clear to i32, !dbg !14621
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !14617
  br i1 %tobool, label %if.then, label %if.end, !dbg !14622

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !14623
  %or = or i32 %1, 128, !dbg !14623
  store i32 %or, i32* %c.addr, align 4, !dbg !14623
  br label %if.end, !dbg !14624

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14625
  %vc_translate = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 41, !dbg !14626
  %3 = load i16*, i16** %vc_translate, align 8, !dbg !14626
  %4 = load i32, i32* %c.addr, align 4, !dbg !14627
  %idxprom = sext i32 %4 to i64, !dbg !14625
  %arrayidx = getelementptr i16, i16* %3, i64 %idxprom, !dbg !14625
  %5 = load i16, i16* %arrayidx, align 2, !dbg !14625
  %conv = zext i16 %5 to i32, !dbg !14625
  ret i32 %conv, !dbg !14628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vc_sanitize_unicode(i32 %c) #0 !dbg !14629 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !14633, metadata !DIExpression()), !dbg !14634
  %0 = load i32, i32* %c.addr, align 4, !dbg !14635
  %cmp = icmp sge i32 %0, 55296, !dbg !14637
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !14638

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !14639
  %cmp1 = icmp sle i32 %1, 57343, !dbg !14640
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !14641

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !14642
  %cmp2 = icmp eq i32 %2, 65534, !dbg !14643
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !14644

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* %c.addr, align 4, !dbg !14645
  %cmp4 = icmp eq i32 %3, 65535, !dbg !14646
  br i1 %cmp4, label %if.then, label %if.end, !dbg !14647

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  store i32 65533, i32* %retval, align 4, !dbg !14648
  br label %return, !dbg !14648

if.end:                                           ; preds = %lor.lhs.false3
  %4 = load i32, i32* %c.addr, align 4, !dbg !14649
  store i32 %4, i32* %retval, align 4, !dbg !14650
  br label %return, !dbg !14650

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !14651
  ret i32 %5, !dbg !14651
}

; Function Attrs: noredzone
declare dso_local void @kd_mksound(i32, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @vt_get_kbd_mode_bit(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @del(%struct.vc_data* %vc) #0 !dbg !14652 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14653, metadata !DIExpression()), !dbg !14654
  ret void, !dbg !14655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ri(%struct.vc_data* %vc) #0 !dbg !14656 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14657, metadata !DIExpression()), !dbg !14658
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14659
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 1, !dbg !14661
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !14662
  %1 = load i32, i32* %y, align 4, !dbg !14662
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14663
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 11, !dbg !14664
  %3 = load i32, i32* %vc_top, align 8, !dbg !14664
  %cmp = icmp eq i32 %1, %3, !dbg !14665
  br i1 %cmp, label %if.then, label %if.else, !dbg !14666

if.then:                                          ; preds = %entry
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14667
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14668
  %vc_top1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 11, !dbg !14669
  %6 = load i32, i32* %vc_top1, align 8, !dbg !14669
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14670
  %vc_bottom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 12, !dbg !14671
  %8 = load i32, i32* %vc_bottom, align 4, !dbg !14671
  call void @con_scroll(%struct.vc_data* %4, i32 %6, i32 %8, i32 1, i32 1) #13, !dbg !14672
  br label %if.end8, !dbg !14672

if.else:                                          ; preds = %entry
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14673
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 1, !dbg !14675
  %y3 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 1, !dbg !14676
  %10 = load i32, i32* %y3, align 4, !dbg !14676
  %cmp4 = icmp ugt i32 %10, 0, !dbg !14677
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !14678

if.then5:                                         ; preds = %if.else
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14679
  %state6 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 1, !dbg !14681
  %y7 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state6, i32 0, i32 1, !dbg !14682
  %12 = load i32, i32* %y7, align 4, !dbg !14683
  %dec = add i32 %12, -1, !dbg !14683
  store i32 %dec, i32* %y7, align 4, !dbg !14683
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14684
  %vc_size_row = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 6, !dbg !14685
  %14 = load i32, i32* %vc_size_row, align 4, !dbg !14685
  %conv = zext i32 %14 to i64, !dbg !14684
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14686
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 25, !dbg !14687
  %16 = load i64, i64* %vc_pos, align 8, !dbg !14688
  %sub = sub i64 %16, %conv, !dbg !14688
  store i64 %sub, i64* %vc_pos, align 8, !dbg !14688
  br label %if.end, !dbg !14689

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14690
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 36, !dbg !14691
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !14692
  %bf.clear = and i16 %bf.load, -1025, !dbg !14692
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !14692
  ret void, !dbg !14693
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @respond_ID(%struct.tty_struct* %tty) #0 !dbg !4784 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !14694, metadata !DIExpression()), !dbg !14695
  %call = call i64 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @respond_ID.vt102_id, i64 0, i64 0)) #13, !dbg !14696
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !14697
  %port = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 44, !dbg !14698
  %1 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !14698
  call void @respond_string(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @respond_ID.vt102_id, i64 0, i64 0), i64 %call, %struct.tty_port* %1) #13, !dbg !14699
  ret void, !dbg !14700
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @restore_cur(%struct.vc_data* %vc) #0 !dbg !14701 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14702, metadata !DIExpression()), !dbg !14703
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14704
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 1, !dbg !14705
  %1 = bitcast %struct.vc_state* %state to i8*, !dbg !14706
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14707
  %saved_state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 2, !dbg !14708
  %3 = bitcast %struct.vc_state* %saved_state to i8*, !dbg !14706
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 4 %3, i64 20, i1 false), !dbg !14706
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14709
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14710
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 1, !dbg !14711
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 0, !dbg !14712
  %6 = load i32, i32* %x, align 8, !dbg !14712
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14713
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !14714
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 1, !dbg !14715
  %8 = load i32, i32* %y, align 4, !dbg !14715
  call void @gotoxy(%struct.vc_data* %4, i32 %6, i32 %8) #13, !dbg !14716
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14717
  %state3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 1, !dbg !14718
  %Gx_charset = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state3, i32 0, i32 3, !dbg !14719
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14720
  %state4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 1, !dbg !14721
  %charset = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state4, i32 0, i32 4, !dbg !14722
  %bf.load = load i8, i8* %charset, align 1, !dbg !14722
  %bf.clear = and i8 %bf.load, 1, !dbg !14722
  %bf.cast = zext i8 %bf.clear to i32, !dbg !14722
  %idxprom = zext i32 %bf.cast to i64, !dbg !14717
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %Gx_charset, i64 0, i64 %idxprom, !dbg !14717
  %11 = load i8, i8* %arrayidx, align 1, !dbg !14717
  %conv = zext i8 %11 to i32, !dbg !14717
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14723
  %call = call i16* @set_translate(i32 %conv, %struct.vc_data* %12) #13, !dbg !14724
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14725
  %vc_translate = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 41, !dbg !14726
  store i16* %call, i16** %vc_translate, align 8, !dbg !14727
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14728
  call void @update_attr(%struct.vc_data* %14) #13, !dbg !14729
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14730
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 36, !dbg !14731
  %bf.load5 = load i16, i16* %vc_need_wrap, align 8, !dbg !14732
  %bf.clear6 = and i16 %bf.load5, -1025, !dbg !14732
  store i16 %bf.clear6, i16* %vc_need_wrap, align 8, !dbg !14732
  ret void, !dbg !14733
}

; Function Attrs: noredzone
declare dso_local void @vt_clr_kbd_mode_bit(i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @vt_set_kbd_mode_bit(i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @hex_to_bin(i8 signext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_mode(%struct.vc_data* %vc, i32 %on_off) #0 !dbg !14734 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %on_off.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14735, metadata !DIExpression()), !dbg !14736
  store i32 %on_off, i32* %on_off.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %on_off.addr, metadata !14737, metadata !DIExpression()), !dbg !14738
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14739, metadata !DIExpression()), !dbg !14740
  store i32 0, i32* %i, align 4, !dbg !14741
  br label %for.cond, !dbg !14743

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14744
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14746
  %vc_npar = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 30, !dbg !14747
  %2 = load i32, i32* %vc_npar, align 8, !dbg !14747
  %cmp = icmp ule i32 %0, %2, !dbg !14748
  br i1 %cmp, label %for.body, label %for.end, !dbg !14749

for.body:                                         ; preds = %for.cond
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14750
  %vc_priv = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 36, !dbg !14752
  %bf.load = load i16, i16* %vc_priv, align 8, !dbg !14752
  %bf.lshr = lshr i16 %bf.load, 7, !dbg !14752
  %bf.clear = and i16 %bf.lshr, 7, !dbg !14752
  %bf.cast = zext i16 %bf.clear to i32, !dbg !14752
  %cmp1 = icmp eq i32 %bf.cast, 1, !dbg !14753
  br i1 %cmp1, label %if.then, label %if.else66, !dbg !14754

if.then:                                          ; preds = %for.body
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14755
  %vc_par = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 31, !dbg !14757
  %5 = load i32, i32* %i, align 4, !dbg !14758
  %idxprom = sext i32 %5 to i64, !dbg !14755
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %vc_par, i64 0, i64 %idxprom, !dbg !14755
  %6 = load i32, i32* %arrayidx, align 4, !dbg !14755
  switch i32 %6, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb5
    i32 5, label %sw.bb6
    i32 6, label %sw.bb18
    i32 7, label %sw.bb25
    i32 8, label %sw.bb32
    i32 9, label %sw.bb41
    i32 25, label %sw.bb49
    i32 1000, label %sw.bb56
  ], !dbg !14759

sw.bb:                                            ; preds = %if.then
  %7 = load i32, i32* %on_off.addr, align 4, !dbg !14760
  %tobool = icmp ne i32 %7, 0, !dbg !14760
  br i1 %tobool, label %if.then2, label %if.else, !dbg !14763

if.then2:                                         ; preds = %sw.bb
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14764
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 3, !dbg !14764
  %9 = load i16, i16* %vc_num, align 8, !dbg !14764
  %conv = zext i16 %9 to i32, !dbg !14764
  call void @vt_set_kbd_mode_bit(i32 %conv, i32 1) #13, !dbg !14764
  br label %if.end, !dbg !14764

if.else:                                          ; preds = %sw.bb
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14765
  %vc_num3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 3, !dbg !14765
  %11 = load i16, i16* %vc_num3, align 8, !dbg !14765
  %conv4 = zext i16 %11 to i32, !dbg !14765
  call void @vt_clr_kbd_mode_bit(i32 %conv4, i32 1) #13, !dbg !14765
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %sw.epilog, !dbg !14766

sw.bb5:                                           ; preds = %if.then
  br label %sw.epilog, !dbg !14767

sw.bb6:                                           ; preds = %if.then
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14768
  %vc_decscnm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 36, !dbg !14770
  %bf.load7 = load i16, i16* %vc_decscnm, align 8, !dbg !14770
  %bf.lshr8 = lshr i16 %bf.load7, 2, !dbg !14770
  %bf.clear9 = and i16 %bf.lshr8, 1, !dbg !14770
  %bf.cast10 = zext i16 %bf.clear9 to i32, !dbg !14770
  %13 = load i32, i32* %on_off.addr, align 4, !dbg !14771
  %cmp11 = icmp ne i32 %bf.cast10, %13, !dbg !14772
  br i1 %cmp11, label %if.then13, label %if.end17, !dbg !14773

if.then13:                                        ; preds = %sw.bb6
  %14 = load i32, i32* %on_off.addr, align 4, !dbg !14774
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14776
  %vc_decscnm14 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 36, !dbg !14777
  %16 = trunc i32 %14 to i16, !dbg !14778
  %bf.load15 = load i16, i16* %vc_decscnm14, align 8, !dbg !14778
  %bf.value = and i16 %16, 1, !dbg !14778
  %bf.shl = shl i16 %bf.value, 2, !dbg !14778
  %bf.clear16 = and i16 %bf.load15, -5, !dbg !14778
  %bf.set = or i16 %bf.clear16, %bf.shl, !dbg !14778
  store i16 %bf.set, i16* %vc_decscnm14, align 8, !dbg !14778
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !14778
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14779
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14780
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 15, !dbg !14781
  %19 = load i32, i32* %vc_screenbuf_size, align 8, !dbg !14781
  call void @invert_screen(%struct.vc_data* %17, i32 0, i32 %19, i1 zeroext false) #13, !dbg !14782
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14783
  call void @update_attr(%struct.vc_data* %20) #13, !dbg !14784
  br label %if.end17, !dbg !14785

if.end17:                                         ; preds = %if.then13, %sw.bb6
  br label %sw.epilog, !dbg !14786

sw.bb18:                                          ; preds = %if.then
  %21 = load i32, i32* %on_off.addr, align 4, !dbg !14787
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14788
  %vc_decom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 36, !dbg !14789
  %23 = trunc i32 %21 to i16, !dbg !14790
  %bf.load19 = load i16, i16* %vc_decom, align 8, !dbg !14790
  %bf.value20 = and i16 %23, 1, !dbg !14790
  %bf.shl21 = shl i16 %bf.value20, 3, !dbg !14790
  %bf.clear22 = and i16 %bf.load19, -9, !dbg !14790
  %bf.set23 = or i16 %bf.clear22, %bf.shl21, !dbg !14790
  store i16 %bf.set23, i16* %vc_decom, align 8, !dbg !14790
  %bf.result.cast24 = zext i16 %bf.value20 to i32, !dbg !14790
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14791
  call void @gotoxay(%struct.vc_data* %24, i32 0, i32 0) #13, !dbg !14792
  br label %sw.epilog, !dbg !14793

sw.bb25:                                          ; preds = %if.then
  %25 = load i32, i32* %on_off.addr, align 4, !dbg !14794
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14795
  %vc_decawm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 36, !dbg !14796
  %27 = trunc i32 %25 to i16, !dbg !14797
  %bf.load26 = load i16, i16* %vc_decawm, align 8, !dbg !14797
  %bf.value27 = and i16 %27, 1, !dbg !14797
  %bf.shl28 = shl i16 %bf.value27, 4, !dbg !14797
  %bf.clear29 = and i16 %bf.load26, -17, !dbg !14797
  %bf.set30 = or i16 %bf.clear29, %bf.shl28, !dbg !14797
  store i16 %bf.set30, i16* %vc_decawm, align 8, !dbg !14797
  %bf.result.cast31 = zext i16 %bf.value27 to i32, !dbg !14797
  br label %sw.epilog, !dbg !14798

sw.bb32:                                          ; preds = %if.then
  %28 = load i32, i32* %on_off.addr, align 4, !dbg !14799
  %tobool33 = icmp ne i32 %28, 0, !dbg !14799
  br i1 %tobool33, label %if.then34, label %if.else37, !dbg !14801

if.then34:                                        ; preds = %sw.bb32
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14802
  %vc_num35 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 3, !dbg !14802
  %30 = load i16, i16* %vc_num35, align 8, !dbg !14802
  %conv36 = zext i16 %30 to i32, !dbg !14802
  call void @vt_set_kbd_mode_bit(i32 %conv36, i32 2) #13, !dbg !14802
  br label %if.end40, !dbg !14802

if.else37:                                        ; preds = %sw.bb32
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14803
  %vc_num38 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %31, i32 0, i32 3, !dbg !14803
  %32 = load i16, i16* %vc_num38, align 8, !dbg !14803
  %conv39 = zext i16 %32 to i32, !dbg !14803
  call void @vt_clr_kbd_mode_bit(i32 %conv39, i32 2) #13, !dbg !14803
  br label %if.end40

if.end40:                                         ; preds = %if.else37, %if.then34
  br label %sw.epilog, !dbg !14804

sw.bb41:                                          ; preds = %if.then
  %33 = load i32, i32* %on_off.addr, align 4, !dbg !14805
  %tobool42 = icmp ne i32 %33, 0, !dbg !14805
  %34 = zext i1 %tobool42 to i64, !dbg !14805
  %cond = select i1 %tobool42, i32 1, i32 0, !dbg !14805
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14806
  %vc_report_mouse = getelementptr inbounds %struct.vc_data, %struct.vc_data* %35, i32 0, i32 36, !dbg !14807
  %36 = trunc i32 %cond to i16, !dbg !14808
  %bf.load43 = load i16, i16* %vc_report_mouse, align 8, !dbg !14808
  %bf.value44 = and i16 %36, 3, !dbg !14808
  %bf.shl45 = shl i16 %bf.value44, 12, !dbg !14808
  %bf.clear46 = and i16 %bf.load43, -12289, !dbg !14808
  %bf.set47 = or i16 %bf.clear46, %bf.shl45, !dbg !14808
  store i16 %bf.set47, i16* %vc_report_mouse, align 8, !dbg !14808
  %bf.result.cast48 = zext i16 %bf.value44 to i32, !dbg !14808
  br label %sw.epilog, !dbg !14809

sw.bb49:                                          ; preds = %if.then
  %37 = load i32, i32* %on_off.addr, align 4, !dbg !14810
  %38 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14811
  %vc_deccm = getelementptr inbounds %struct.vc_data, %struct.vc_data* %38, i32 0, i32 36, !dbg !14812
  %39 = trunc i32 %37 to i16, !dbg !14813
  %bf.load50 = load i16, i16* %vc_deccm, align 8, !dbg !14813
  %bf.value51 = and i16 %39, 1, !dbg !14813
  %bf.shl52 = shl i16 %bf.value51, 5, !dbg !14813
  %bf.clear53 = and i16 %bf.load50, -33, !dbg !14813
  %bf.set54 = or i16 %bf.clear53, %bf.shl52, !dbg !14813
  store i16 %bf.set54, i16* %vc_deccm, align 8, !dbg !14813
  %bf.result.cast55 = zext i16 %bf.value51 to i32, !dbg !14813
  br label %sw.epilog, !dbg !14814

sw.bb56:                                          ; preds = %if.then
  %40 = load i32, i32* %on_off.addr, align 4, !dbg !14815
  %tobool57 = icmp ne i32 %40, 0, !dbg !14815
  %41 = zext i1 %tobool57 to i64, !dbg !14815
  %cond58 = select i1 %tobool57, i32 2, i32 0, !dbg !14815
  %42 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14816
  %vc_report_mouse59 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 36, !dbg !14817
  %43 = trunc i32 %cond58 to i16, !dbg !14818
  %bf.load60 = load i16, i16* %vc_report_mouse59, align 8, !dbg !14818
  %bf.value61 = and i16 %43, 3, !dbg !14818
  %bf.shl62 = shl i16 %bf.value61, 12, !dbg !14818
  %bf.clear63 = and i16 %bf.load60, -12289, !dbg !14818
  %bf.set64 = or i16 %bf.clear63, %bf.shl62, !dbg !14818
  store i16 %bf.set64, i16* %vc_report_mouse59, align 8, !dbg !14818
  %bf.result.cast65 = zext i16 %bf.value61 to i32, !dbg !14818
  br label %sw.epilog, !dbg !14819

sw.epilog:                                        ; preds = %if.then, %sw.bb56, %sw.bb49, %sw.bb41, %if.end40, %sw.bb25, %sw.bb18, %if.end17, %sw.bb5, %if.end
  br label %if.end93, !dbg !14820

if.else66:                                        ; preds = %for.body
  %44 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14821
  %vc_par67 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %44, i32 0, i32 31, !dbg !14823
  %45 = load i32, i32* %i, align 4, !dbg !14824
  %idxprom68 = sext i32 %45 to i64, !dbg !14821
  %arrayidx69 = getelementptr [16 x i32], [16 x i32]* %vc_par67, i64 0, i64 %idxprom68, !dbg !14821
  %46 = load i32, i32* %arrayidx69, align 4, !dbg !14821
  switch i32 %46, label %sw.epilog92 [
    i32 3, label %sw.bb70
    i32 4, label %sw.bb76
    i32 20, label %sw.bb83
  ], !dbg !14825

sw.bb70:                                          ; preds = %if.else66
  %47 = load i32, i32* %on_off.addr, align 4, !dbg !14826
  %48 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14828
  %vc_disp_ctrl = getelementptr inbounds %struct.vc_data, %struct.vc_data* %48, i32 0, i32 36, !dbg !14829
  %49 = trunc i32 %47 to i16, !dbg !14830
  %bf.load71 = load i16, i16* %vc_disp_ctrl, align 8, !dbg !14830
  %bf.value72 = and i16 %49, 1, !dbg !14830
  %bf.clear73 = and i16 %bf.load71, -2, !dbg !14830
  %bf.set74 = or i16 %bf.clear73, %bf.value72, !dbg !14830
  store i16 %bf.set74, i16* %vc_disp_ctrl, align 8, !dbg !14830
  %bf.result.cast75 = zext i16 %bf.value72 to i32, !dbg !14830
  br label %sw.epilog92, !dbg !14831

sw.bb76:                                          ; preds = %if.else66
  %50 = load i32, i32* %on_off.addr, align 4, !dbg !14832
  %51 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14833
  %vc_decim = getelementptr inbounds %struct.vc_data, %struct.vc_data* %51, i32 0, i32 36, !dbg !14834
  %52 = trunc i32 %50 to i16, !dbg !14835
  %bf.load77 = load i16, i16* %vc_decim, align 8, !dbg !14835
  %bf.value78 = and i16 %52, 1, !dbg !14835
  %bf.shl79 = shl i16 %bf.value78, 6, !dbg !14835
  %bf.clear80 = and i16 %bf.load77, -65, !dbg !14835
  %bf.set81 = or i16 %bf.clear80, %bf.shl79, !dbg !14835
  store i16 %bf.set81, i16* %vc_decim, align 8, !dbg !14835
  %bf.result.cast82 = zext i16 %bf.value78 to i32, !dbg !14835
  br label %sw.epilog92, !dbg !14836

sw.bb83:                                          ; preds = %if.else66
  %53 = load i32, i32* %on_off.addr, align 4, !dbg !14837
  %tobool84 = icmp ne i32 %53, 0, !dbg !14837
  br i1 %tobool84, label %if.then85, label %if.else88, !dbg !14839

if.then85:                                        ; preds = %sw.bb83
  %54 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14840
  %vc_num86 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %54, i32 0, i32 3, !dbg !14840
  %55 = load i16, i16* %vc_num86, align 8, !dbg !14840
  %conv87 = zext i16 %55 to i32, !dbg !14840
  call void @vt_set_kbd_mode_bit(i32 %conv87, i32 3) #13, !dbg !14840
  br label %if.end91, !dbg !14840

if.else88:                                        ; preds = %sw.bb83
  %56 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14841
  %vc_num89 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %56, i32 0, i32 3, !dbg !14841
  %57 = load i16, i16* %vc_num89, align 8, !dbg !14841
  %conv90 = zext i16 %57 to i32, !dbg !14841
  call void @vt_clr_kbd_mode_bit(i32 %conv90, i32 3) #13, !dbg !14841
  br label %if.end91

if.end91:                                         ; preds = %if.else88, %if.then85
  br label %sw.epilog92, !dbg !14842

sw.epilog92:                                      ; preds = %if.else66, %if.end91, %sw.bb76, %sw.bb70
  br label %if.end93

if.end93:                                         ; preds = %sw.epilog92, %sw.epilog
  br label %for.inc, !dbg !14843

for.inc:                                          ; preds = %if.end93
  %58 = load i32, i32* %i, align 4, !dbg !14844
  %inc = add i32 %58, 1, !dbg !14844
  store i32 %inc, i32* %i, align 4, !dbg !14844
  br label %for.cond, !dbg !14845, !llvm.loop !14846

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @status_report(%struct.tty_struct* %tty) #0 !dbg !4788 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !14849, metadata !DIExpression()), !dbg !14850
  %call = call i64 @strlen(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @status_report.teminal_ok, i64 0, i64 0)) #13, !dbg !14851
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !14852
  %port = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 44, !dbg !14853
  %1 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !14853
  call void @respond_string(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @status_report.teminal_ok, i64 0, i64 0), i64 %call, %struct.tty_port* %1) #13, !dbg !14854
  ret void, !dbg !14855
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cursor_report(%struct.vc_data* %vc, %struct.tty_struct* %tty) #0 !dbg !14856 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %buf = alloca [40 x i8], align 16
  %len = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14859, metadata !DIExpression()), !dbg !14860
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !14861, metadata !DIExpression()), !dbg !14862
  call void @llvm.dbg.declare(metadata [40 x i8]* %buf, metadata !14863, metadata !DIExpression()), !dbg !14867
  call void @llvm.dbg.declare(metadata i32* %len, metadata !14868, metadata !DIExpression()), !dbg !14869
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %buf, i64 0, i64 0, !dbg !14870
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14871
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 1, !dbg !14872
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !14873
  %1 = load i32, i32* %y, align 4, !dbg !14873
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14874
  %vc_decom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 36, !dbg !14875
  %bf.load = load i16, i16* %vc_decom, align 8, !dbg !14875
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !14875
  %bf.clear = and i16 %bf.lshr, 1, !dbg !14875
  %bf.cast = zext i16 %bf.clear to i32, !dbg !14875
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !14874
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14874

cond.true:                                        ; preds = %entry
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14876
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 11, !dbg !14877
  %4 = load i32, i32* %vc_top, align 8, !dbg !14877
  %add = add i32 %4, 1, !dbg !14878
  br label %cond.end, !dbg !14874

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14874

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ 1, %cond.false ], !dbg !14874
  %add1 = add i32 %1, %cond, !dbg !14879
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14880
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 1, !dbg !14881
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 0, !dbg !14882
  %6 = load i32, i32* %x, align 8, !dbg !14882
  %add3 = add i32 %6, 1, !dbg !14883
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i32 %add1, i32 %add3) #13, !dbg !14884
  store i32 %call, i32* %len, align 4, !dbg !14885
  %arraydecay4 = getelementptr inbounds [40 x i8], [40 x i8]* %buf, i64 0, i64 0, !dbg !14886
  %7 = load i32, i32* %len, align 4, !dbg !14887
  %conv = sext i32 %7 to i64, !dbg !14887
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !14888
  %port = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %8, i32 0, i32 44, !dbg !14889
  %9 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !14889
  call void @respond_string(i8* %arraydecay4, i64 %conv, %struct.tty_port* %9) #13, !dbg !14890
  ret void, !dbg !14891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gotoxay(%struct.vc_data* %vc, i32 %new_x, i32 %new_y) #0 !dbg !14892 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %new_x.addr = alloca i32, align 4
  %new_y.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14893, metadata !DIExpression()), !dbg !14894
  store i32 %new_x, i32* %new_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_x.addr, metadata !14895, metadata !DIExpression()), !dbg !14896
  store i32 %new_y, i32* %new_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_y.addr, metadata !14897, metadata !DIExpression()), !dbg !14898
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14899
  %1 = load i32, i32* %new_x.addr, align 4, !dbg !14900
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14901
  %vc_decom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 36, !dbg !14902
  %bf.load = load i16, i16* %vc_decom, align 8, !dbg !14902
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !14902
  %bf.clear = and i16 %bf.lshr, 1, !dbg !14902
  %bf.cast = zext i16 %bf.clear to i32, !dbg !14902
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !14901
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14901

cond.true:                                        ; preds = %entry
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14903
  %vc_top = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 11, !dbg !14904
  %4 = load i32, i32* %vc_top, align 8, !dbg !14904
  %5 = load i32, i32* %new_y.addr, align 4, !dbg !14905
  %add = add i32 %4, %5, !dbg !14906
  br label %cond.end, !dbg !14901

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %new_y.addr, align 4, !dbg !14907
  br label %cond.end, !dbg !14901

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %6, %cond.false ], !dbg !14901
  call void @gotoxy(%struct.vc_data* %0, i32 %1, i32 %cond) #13, !dbg !14908
  ret void, !dbg !14909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @csi_K(%struct.vc_data* %vc, i32 %vpar) #0 !dbg !14910 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %vpar.addr = alloca i32, align 4
  %count = alloca i32, align 4
  %start = alloca i16*, align 8
  %offset = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14911, metadata !DIExpression()), !dbg !14912
  store i32 %vpar, i32* %vpar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vpar.addr, metadata !14913, metadata !DIExpression()), !dbg !14914
  call void @llvm.dbg.declare(metadata i32* %count, metadata !14915, metadata !DIExpression()), !dbg !14916
  call void @llvm.dbg.declare(metadata i16** %start, metadata !14917, metadata !DIExpression()), !dbg !14918
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14919
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 25, !dbg !14920
  %1 = load i64, i64* %vc_pos, align 8, !dbg !14920
  %2 = inttoptr i64 %1 to i16*, !dbg !14921
  store i16* %2, i16** %start, align 8, !dbg !14918
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !14922, metadata !DIExpression()), !dbg !14923
  %3 = load i32, i32* %vpar.addr, align 4, !dbg !14924
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb7
  ], !dbg !14925

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %offset, align 4, !dbg !14926
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14928
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 4, !dbg !14929
  %5 = load i32, i32* %vc_cols, align 4, !dbg !14929
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14930
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 1, !dbg !14931
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !14932
  %7 = load i32, i32* %x, align 8, !dbg !14932
  %sub = sub i32 %5, %7, !dbg !14933
  store i32 %sub, i32* %count, align 4, !dbg !14934
  br label %sw.epilog, !dbg !14935

sw.bb1:                                           ; preds = %entry
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14936
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 1, !dbg !14937
  %x3 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 0, !dbg !14938
  %9 = load i32, i32* %x3, align 8, !dbg !14938
  %sub4 = sub i32 0, %9, !dbg !14939
  store i32 %sub4, i32* %offset, align 4, !dbg !14940
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14941
  %state5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 1, !dbg !14942
  %x6 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state5, i32 0, i32 0, !dbg !14943
  %11 = load i32, i32* %x6, align 8, !dbg !14943
  %add = add i32 %11, 1, !dbg !14944
  store i32 %add, i32* %count, align 4, !dbg !14945
  br label %sw.epilog, !dbg !14946

sw.bb7:                                           ; preds = %entry
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14947
  %state8 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 1, !dbg !14948
  %x9 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state8, i32 0, i32 0, !dbg !14949
  %13 = load i32, i32* %x9, align 8, !dbg !14949
  %sub10 = sub i32 0, %13, !dbg !14950
  store i32 %sub10, i32* %offset, align 4, !dbg !14951
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14952
  %vc_cols11 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 4, !dbg !14953
  %15 = load i32, i32* %vc_cols11, align 4, !dbg !14953
  store i32 %15, i32* %count, align 4, !dbg !14954
  br label %sw.epilog, !dbg !14955

sw.default:                                       ; preds = %entry
  br label %if.end, !dbg !14956

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb1, %sw.bb
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14957
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14958
  %state12 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 1, !dbg !14959
  %x13 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state12, i32 0, i32 0, !dbg !14960
  %18 = load i32, i32* %x13, align 8, !dbg !14960
  %19 = load i32, i32* %offset, align 4, !dbg !14961
  %add14 = add i32 %18, %19, !dbg !14962
  %20 = load i32, i32* %count, align 4, !dbg !14963
  call void @vc_uniscr_clear_line(%struct.vc_data* %16, i32 %add14, i32 %20) #13, !dbg !14964
  %21 = load i16*, i16** %start, align 8, !dbg !14965
  %22 = load i32, i32* %offset, align 4, !dbg !14966
  %idx.ext = sext i32 %22 to i64, !dbg !14967
  %add.ptr = getelementptr i16, i16* %21, i64 %idx.ext, !dbg !14967
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14968
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 28, !dbg !14969
  %24 = load i16, i16* %vc_video_erase_char, align 8, !dbg !14969
  %25 = load i32, i32* %count, align 4, !dbg !14970
  %mul = mul i32 2, %25, !dbg !14971
  call void @scr_memsetw(i16* %add.ptr, i16 zeroext %24, i32 %mul) #13, !dbg !14972
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14973
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 36, !dbg !14974
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !14975
  %bf.clear = and i16 %bf.load, -1025, !dbg !14975
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !14975
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14976
  %call = call zeroext i1 @con_should_update(%struct.vc_data* %27) #13, !dbg !14978
  br i1 %call, label %if.then, label %if.end, !dbg !14979

if.then:                                          ; preds = %sw.epilog
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14980
  %29 = load i16*, i16** %start, align 8, !dbg !14981
  %30 = load i32, i32* %offset, align 4, !dbg !14982
  %idx.ext15 = sext i32 %30 to i64, !dbg !14983
  %add.ptr16 = getelementptr i16, i16* %29, i64 %idx.ext15, !dbg !14983
  %31 = ptrtoint i16* %add.ptr16 to i64, !dbg !14984
  %32 = load i32, i32* %count, align 4, !dbg !14985
  call void @do_update_region(%struct.vc_data* %28, i64 %31, i32 %32) #13, !dbg !14986
  br label %if.end, !dbg !14986

if.end:                                           ; preds = %sw.default, %if.then, %sw.epilog
  ret void, !dbg !14987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @csi_L(%struct.vc_data* %vc, i32 %nr) #0 !dbg !14988 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %nr.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !14989, metadata !DIExpression()), !dbg !14990
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !14991, metadata !DIExpression()), !dbg !14992
  %0 = load i32, i32* %nr.addr, align 4, !dbg !14993
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14995
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 5, !dbg !14996
  %2 = load i32, i32* %vc_rows, align 8, !dbg !14996
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !14997
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 1, !dbg !14998
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !14999
  %4 = load i32, i32* %y, align 4, !dbg !14999
  %sub = sub i32 %2, %4, !dbg !15000
  %cmp = icmp ugt i32 %0, %sub, !dbg !15001
  br i1 %cmp, label %if.then, label %if.else, !dbg !15002

if.then:                                          ; preds = %entry
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15003
  %vc_rows1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 5, !dbg !15004
  %6 = load i32, i32* %vc_rows1, align 8, !dbg !15004
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15005
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !15006
  %y3 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 1, !dbg !15007
  %8 = load i32, i32* %y3, align 4, !dbg !15007
  %sub4 = sub i32 %6, %8, !dbg !15008
  store i32 %sub4, i32* %nr.addr, align 4, !dbg !15009
  br label %if.end6, !dbg !15010

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %nr.addr, align 4, !dbg !15011
  %tobool = icmp ne i32 %9, 0, !dbg !15011
  br i1 %tobool, label %if.end, label %if.then5, !dbg !15013

if.then5:                                         ; preds = %if.else
  store i32 1, i32* %nr.addr, align 4, !dbg !15014
  br label %if.end, !dbg !15015

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15016
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15017
  %state7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 1, !dbg !15018
  %y8 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state7, i32 0, i32 1, !dbg !15019
  %12 = load i32, i32* %y8, align 4, !dbg !15019
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15020
  %vc_bottom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 12, !dbg !15021
  %14 = load i32, i32* %vc_bottom, align 4, !dbg !15021
  %15 = load i32, i32* %nr.addr, align 4, !dbg !15022
  call void @con_scroll(%struct.vc_data* %10, i32 %12, i32 %14, i32 1, i32 %15) #13, !dbg !15023
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15024
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 36, !dbg !15025
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !15026
  %bf.clear = and i16 %bf.load, -1025, !dbg !15026
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !15026
  ret void, !dbg !15027
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @csi_M(%struct.vc_data* %vc, i32 %nr) #0 !dbg !15028 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %nr.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15029, metadata !DIExpression()), !dbg !15030
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !15031, metadata !DIExpression()), !dbg !15032
  %0 = load i32, i32* %nr.addr, align 4, !dbg !15033
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15035
  %vc_rows = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 5, !dbg !15036
  %2 = load i32, i32* %vc_rows, align 8, !dbg !15036
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15037
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 1, !dbg !15038
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !15039
  %4 = load i32, i32* %y, align 4, !dbg !15039
  %sub = sub i32 %2, %4, !dbg !15040
  %cmp = icmp ugt i32 %0, %sub, !dbg !15041
  br i1 %cmp, label %if.then, label %if.else, !dbg !15042

if.then:                                          ; preds = %entry
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15043
  %vc_rows1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 5, !dbg !15044
  %6 = load i32, i32* %vc_rows1, align 8, !dbg !15044
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15045
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !15046
  %y3 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 1, !dbg !15047
  %8 = load i32, i32* %y3, align 4, !dbg !15047
  %sub4 = sub i32 %6, %8, !dbg !15048
  store i32 %sub4, i32* %nr.addr, align 4, !dbg !15049
  br label %if.end6, !dbg !15050

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %nr.addr, align 4, !dbg !15051
  %tobool = icmp ne i32 %9, 0, !dbg !15051
  br i1 %tobool, label %if.end, label %if.then5, !dbg !15053

if.then5:                                         ; preds = %if.else
  store i32 1, i32* %nr.addr, align 4, !dbg !15054
  br label %if.end, !dbg !15055

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15056
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15057
  %state7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 1, !dbg !15058
  %y8 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state7, i32 0, i32 1, !dbg !15059
  %12 = load i32, i32* %y8, align 4, !dbg !15059
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15060
  %vc_bottom = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 12, !dbg !15061
  %14 = load i32, i32* %vc_bottom, align 4, !dbg !15061
  %15 = load i32, i32* %nr.addr, align 4, !dbg !15062
  call void @con_scroll(%struct.vc_data* %10, i32 %12, i32 %14, i32 0, i32 %15) #13, !dbg !15063
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15064
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 36, !dbg !15065
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !15066
  %bf.clear = and i16 %bf.load, -1025, !dbg !15066
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !15066
  ret void, !dbg !15067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @csi_P(%struct.vc_data* %vc, i32 %nr) #0 !dbg !15068 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %nr.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15069, metadata !DIExpression()), !dbg !15070
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !15071, metadata !DIExpression()), !dbg !15072
  %0 = load i32, i32* %nr.addr, align 4, !dbg !15073
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15075
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 4, !dbg !15076
  %2 = load i32, i32* %vc_cols, align 4, !dbg !15076
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15077
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 1, !dbg !15078
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !15079
  %4 = load i32, i32* %x, align 8, !dbg !15079
  %sub = sub i32 %2, %4, !dbg !15080
  %cmp = icmp ugt i32 %0, %sub, !dbg !15081
  br i1 %cmp, label %if.then, label %if.else, !dbg !15082

if.then:                                          ; preds = %entry
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15083
  %vc_cols1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 4, !dbg !15084
  %6 = load i32, i32* %vc_cols1, align 4, !dbg !15084
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15085
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !15086
  %x3 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 0, !dbg !15087
  %8 = load i32, i32* %x3, align 8, !dbg !15087
  %sub4 = sub i32 %6, %8, !dbg !15088
  store i32 %sub4, i32* %nr.addr, align 4, !dbg !15089
  br label %if.end6, !dbg !15090

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %nr.addr, align 4, !dbg !15091
  %tobool = icmp ne i32 %9, 0, !dbg !15091
  br i1 %tobool, label %if.end, label %if.then5, !dbg !15093

if.then5:                                         ; preds = %if.else
  store i32 1, i32* %nr.addr, align 4, !dbg !15094
  br label %if.end, !dbg !15095

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15096
  %11 = load i32, i32* %nr.addr, align 4, !dbg !15097
  call void @delete_char(%struct.vc_data* %10, i32 %11) #13, !dbg !15098
  ret void, !dbg !15099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @csi_m(%struct.vc_data* %vc) #0 !dbg !15100 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %i = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15101, metadata !DIExpression()), !dbg !15102
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15103, metadata !DIExpression()), !dbg !15104
  store i32 0, i32* %i, align 4, !dbg !15105
  br label %for.cond, !dbg !15107

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15108
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15110
  %vc_npar = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 30, !dbg !15111
  %2 = load i32, i32* %vc_npar, align 8, !dbg !15111
  %cmp = icmp ule i32 %0, %2, !dbg !15112
  br i1 %cmp, label %for.body, label %for.end, !dbg !15113

for.body:                                         ; preds = %for.cond
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15114
  %vc_par = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 31, !dbg !15115
  %4 = load i32, i32* %i, align 4, !dbg !15116
  %idxprom = sext i32 %4 to i64, !dbg !15114
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %vc_par, i64 0, i64 %idxprom, !dbg !15114
  %5 = load i32, i32* %arrayidx, align 4, !dbg !15114
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb5
    i32 21, label %sw.bb7
    i32 4, label %sw.bb7
    i32 5, label %sw.bb9
    i32 7, label %sw.bb11
    i32 10, label %sw.bb13
    i32 11, label %sw.bb22
    i32 12, label %sw.bb31
    i32 22, label %sw.bb42
    i32 23, label %sw.bb45
    i32 24, label %sw.bb48
    i32 25, label %sw.bb51
    i32 27, label %sw.bb54
    i32 38, label %sw.bb57
    i32 48, label %sw.bb59
    i32 39, label %sw.bb61
    i32 49, label %sw.bb69
  ], !dbg !15117

sw.bb:                                            ; preds = %for.body
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15118
  call void @default_attr(%struct.vc_data* %6) #13, !dbg !15120
  br label %sw.epilog, !dbg !15121

sw.bb1:                                           ; preds = %for.body
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15122
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !15123
  %intensity = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 5, !dbg !15124
  store i32 2, i32* %intensity, align 4, !dbg !15125
  br label %sw.epilog, !dbg !15126

sw.bb2:                                           ; preds = %for.body
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15127
  %state3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 1, !dbg !15128
  %intensity4 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state3, i32 0, i32 5, !dbg !15129
  store i32 0, i32* %intensity4, align 4, !dbg !15130
  br label %sw.epilog, !dbg !15131

sw.bb5:                                           ; preds = %for.body
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15132
  %state6 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 1, !dbg !15133
  %italic = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state6, i32 0, i32 6, !dbg !15134
  store i8 1, i8* %italic, align 8, !dbg !15135
  br label %sw.epilog, !dbg !15136

sw.bb7:                                           ; preds = %for.body, %for.body
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15137
  %state8 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 1, !dbg !15138
  %underline = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state8, i32 0, i32 7, !dbg !15139
  store i8 1, i8* %underline, align 1, !dbg !15140
  br label %sw.epilog, !dbg !15141

sw.bb9:                                           ; preds = %for.body
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15142
  %state10 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 1, !dbg !15143
  %blink = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state10, i32 0, i32 8, !dbg !15144
  store i8 1, i8* %blink, align 2, !dbg !15145
  br label %sw.epilog, !dbg !15146

sw.bb11:                                          ; preds = %for.body
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15147
  %state12 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 1, !dbg !15148
  %reverse = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state12, i32 0, i32 9, !dbg !15149
  store i8 1, i8* %reverse, align 1, !dbg !15150
  br label %sw.epilog, !dbg !15151

sw.bb13:                                          ; preds = %for.body
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15152
  %state14 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 1, !dbg !15153
  %Gx_charset = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state14, i32 0, i32 3, !dbg !15154
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15155
  %state15 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 1, !dbg !15156
  %charset = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state15, i32 0, i32 4, !dbg !15157
  %bf.load = load i8, i8* %charset, align 1, !dbg !15157
  %bf.clear = and i8 %bf.load, 1, !dbg !15157
  %bf.cast = zext i8 %bf.clear to i32, !dbg !15157
  %idxprom16 = zext i32 %bf.cast to i64, !dbg !15152
  %arrayidx17 = getelementptr [2 x i8], [2 x i8]* %Gx_charset, i64 0, i64 %idxprom16, !dbg !15152
  %15 = load i8, i8* %arrayidx17, align 1, !dbg !15152
  %conv = zext i8 %15 to i32, !dbg !15152
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15158
  %call = call i16* @set_translate(i32 %conv, %struct.vc_data* %16) #13, !dbg !15159
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15160
  %vc_translate = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 41, !dbg !15161
  store i16* %call, i16** %vc_translate, align 8, !dbg !15162
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15163
  %vc_disp_ctrl = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 36, !dbg !15164
  %bf.load18 = load i16, i16* %vc_disp_ctrl, align 8, !dbg !15165
  %bf.clear19 = and i16 %bf.load18, -2, !dbg !15165
  store i16 %bf.clear19, i16* %vc_disp_ctrl, align 8, !dbg !15165
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15166
  %vc_toggle_meta = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 36, !dbg !15167
  %bf.load20 = load i16, i16* %vc_toggle_meta, align 8, !dbg !15168
  %bf.clear21 = and i16 %bf.load20, -3, !dbg !15168
  store i16 %bf.clear21, i16* %vc_toggle_meta, align 8, !dbg !15168
  br label %sw.epilog, !dbg !15169

sw.bb22:                                          ; preds = %for.body
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15170
  %call23 = call i16* @set_translate(i32 2, %struct.vc_data* %20) #13, !dbg !15171
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15172
  %vc_translate24 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 41, !dbg !15173
  store i16* %call23, i16** %vc_translate24, align 8, !dbg !15174
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15175
  %vc_disp_ctrl25 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 36, !dbg !15176
  %bf.load26 = load i16, i16* %vc_disp_ctrl25, align 8, !dbg !15177
  %bf.clear27 = and i16 %bf.load26, -2, !dbg !15177
  %bf.set = or i16 %bf.clear27, 1, !dbg !15177
  store i16 %bf.set, i16* %vc_disp_ctrl25, align 8, !dbg !15177
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15178
  %vc_toggle_meta28 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 36, !dbg !15179
  %bf.load29 = load i16, i16* %vc_toggle_meta28, align 8, !dbg !15180
  %bf.clear30 = and i16 %bf.load29, -3, !dbg !15180
  store i16 %bf.clear30, i16* %vc_toggle_meta28, align 8, !dbg !15180
  br label %sw.epilog, !dbg !15181

sw.bb31:                                          ; preds = %for.body
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15182
  %call32 = call i16* @set_translate(i32 2, %struct.vc_data* %24) #13, !dbg !15183
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15184
  %vc_translate33 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 41, !dbg !15185
  store i16* %call32, i16** %vc_translate33, align 8, !dbg !15186
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15187
  %vc_disp_ctrl34 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %26, i32 0, i32 36, !dbg !15188
  %bf.load35 = load i16, i16* %vc_disp_ctrl34, align 8, !dbg !15189
  %bf.clear36 = and i16 %bf.load35, -2, !dbg !15189
  %bf.set37 = or i16 %bf.clear36, 1, !dbg !15189
  store i16 %bf.set37, i16* %vc_disp_ctrl34, align 8, !dbg !15189
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15190
  %vc_toggle_meta38 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 36, !dbg !15191
  %bf.load39 = load i16, i16* %vc_toggle_meta38, align 8, !dbg !15192
  %bf.clear40 = and i16 %bf.load39, -3, !dbg !15192
  %bf.set41 = or i16 %bf.clear40, 2, !dbg !15192
  store i16 %bf.set41, i16* %vc_toggle_meta38, align 8, !dbg !15192
  br label %sw.epilog, !dbg !15193

sw.bb42:                                          ; preds = %for.body
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15194
  %state43 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %28, i32 0, i32 1, !dbg !15195
  %intensity44 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state43, i32 0, i32 5, !dbg !15196
  store i32 1, i32* %intensity44, align 4, !dbg !15197
  br label %sw.epilog, !dbg !15198

sw.bb45:                                          ; preds = %for.body
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15199
  %state46 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 1, !dbg !15200
  %italic47 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state46, i32 0, i32 6, !dbg !15201
  store i8 0, i8* %italic47, align 8, !dbg !15202
  br label %sw.epilog, !dbg !15203

sw.bb48:                                          ; preds = %for.body
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15204
  %state49 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 1, !dbg !15205
  %underline50 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state49, i32 0, i32 7, !dbg !15206
  store i8 0, i8* %underline50, align 1, !dbg !15207
  br label %sw.epilog, !dbg !15208

sw.bb51:                                          ; preds = %for.body
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15209
  %state52 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %31, i32 0, i32 1, !dbg !15210
  %blink53 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state52, i32 0, i32 8, !dbg !15211
  store i8 0, i8* %blink53, align 2, !dbg !15212
  br label %sw.epilog, !dbg !15213

sw.bb54:                                          ; preds = %for.body
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15214
  %state55 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 1, !dbg !15215
  %reverse56 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state55, i32 0, i32 9, !dbg !15216
  store i8 0, i8* %reverse56, align 1, !dbg !15217
  br label %sw.epilog, !dbg !15218

sw.bb57:                                          ; preds = %for.body
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15219
  %34 = load i32, i32* %i, align 4, !dbg !15220
  %call58 = call i32 @vc_t416_color(%struct.vc_data* %33, i32 %34, void (%struct.vc_data*, %struct.rgb*)* @rgb_foreground) #13, !dbg !15221
  store i32 %call58, i32* %i, align 4, !dbg !15222
  br label %sw.epilog, !dbg !15223

sw.bb59:                                          ; preds = %for.body
  %35 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15224
  %36 = load i32, i32* %i, align 4, !dbg !15225
  %call60 = call i32 @vc_t416_color(%struct.vc_data* %35, i32 %36, void (%struct.vc_data*, %struct.rgb*)* @rgb_background) #13, !dbg !15226
  store i32 %call60, i32* %i, align 4, !dbg !15227
  br label %sw.epilog, !dbg !15228

sw.bb61:                                          ; preds = %for.body
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15229
  %vc_def_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 18, !dbg !15230
  %38 = load i8, i8* %vc_def_color, align 2, !dbg !15230
  %conv62 = zext i8 %38 to i32, !dbg !15229
  %and = and i32 %conv62, 15, !dbg !15231
  %39 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15232
  %state63 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %39, i32 0, i32 1, !dbg !15233
  %color = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state63, i32 0, i32 2, !dbg !15234
  %40 = load i8, i8* %color, align 8, !dbg !15234
  %conv64 = zext i8 %40 to i32, !dbg !15232
  %and65 = and i32 %conv64, 240, !dbg !15235
  %or = or i32 %and, %and65, !dbg !15236
  %conv66 = trunc i32 %or to i8, !dbg !15237
  %41 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15238
  %state67 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %41, i32 0, i32 1, !dbg !15239
  %color68 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state67, i32 0, i32 2, !dbg !15240
  store i8 %conv66, i8* %color68, align 8, !dbg !15241
  br label %sw.epilog, !dbg !15242

sw.bb69:                                          ; preds = %for.body
  %42 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15243
  %vc_def_color70 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 18, !dbg !15244
  %43 = load i8, i8* %vc_def_color70, align 2, !dbg !15244
  %conv71 = zext i8 %43 to i32, !dbg !15243
  %and72 = and i32 %conv71, 240, !dbg !15245
  %44 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15246
  %state73 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %44, i32 0, i32 1, !dbg !15247
  %color74 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state73, i32 0, i32 2, !dbg !15248
  %45 = load i8, i8* %color74, align 8, !dbg !15248
  %conv75 = zext i8 %45 to i32, !dbg !15246
  %and76 = and i32 %conv75, 15, !dbg !15249
  %or77 = or i32 %and72, %and76, !dbg !15250
  %conv78 = trunc i32 %or77 to i8, !dbg !15251
  %46 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15252
  %state79 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %46, i32 0, i32 1, !dbg !15253
  %color80 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state79, i32 0, i32 2, !dbg !15254
  store i8 %conv78, i8* %color80, align 8, !dbg !15255
  br label %sw.epilog, !dbg !15256

sw.default:                                       ; preds = %for.body
  %47 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15257
  %vc_par81 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %47, i32 0, i32 31, !dbg !15259
  %48 = load i32, i32* %i, align 4, !dbg !15260
  %idxprom82 = sext i32 %48 to i64, !dbg !15257
  %arrayidx83 = getelementptr [16 x i32], [16 x i32]* %vc_par81, i64 0, i64 %idxprom82, !dbg !15257
  %49 = load i32, i32* %arrayidx83, align 4, !dbg !15257
  %cmp84 = icmp uge i32 %49, 90, !dbg !15261
  br i1 %cmp84, label %land.lhs.true, label %if.end102, !dbg !15262

land.lhs.true:                                    ; preds = %sw.default
  %50 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15263
  %vc_par86 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %50, i32 0, i32 31, !dbg !15264
  %51 = load i32, i32* %i, align 4, !dbg !15265
  %idxprom87 = sext i32 %51 to i64, !dbg !15263
  %arrayidx88 = getelementptr [16 x i32], [16 x i32]* %vc_par86, i64 0, i64 %idxprom87, !dbg !15263
  %52 = load i32, i32* %arrayidx88, align 4, !dbg !15263
  %cmp89 = icmp ule i32 %52, 107, !dbg !15266
  br i1 %cmp89, label %if.then, label %if.end102, !dbg !15267

if.then:                                          ; preds = %land.lhs.true
  %53 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15268
  %vc_par91 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %53, i32 0, i32 31, !dbg !15271
  %54 = load i32, i32* %i, align 4, !dbg !15272
  %idxprom92 = sext i32 %54 to i64, !dbg !15268
  %arrayidx93 = getelementptr [16 x i32], [16 x i32]* %vc_par91, i64 0, i64 %idxprom92, !dbg !15268
  %55 = load i32, i32* %arrayidx93, align 4, !dbg !15268
  %cmp94 = icmp ult i32 %55, 100, !dbg !15273
  br i1 %cmp94, label %if.then96, label %if.end, !dbg !15274

if.then96:                                        ; preds = %if.then
  %56 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15275
  %state97 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %56, i32 0, i32 1, !dbg !15276
  %intensity98 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state97, i32 0, i32 5, !dbg !15277
  store i32 2, i32* %intensity98, align 4, !dbg !15278
  br label %if.end, !dbg !15275

if.end:                                           ; preds = %if.then96, %if.then
  %57 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15279
  %vc_par99 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %57, i32 0, i32 31, !dbg !15280
  %58 = load i32, i32* %i, align 4, !dbg !15281
  %idxprom100 = sext i32 %58 to i64, !dbg !15279
  %arrayidx101 = getelementptr [16 x i32], [16 x i32]* %vc_par99, i64 0, i64 %idxprom100, !dbg !15279
  %59 = load i32, i32* %arrayidx101, align 4, !dbg !15282
  %sub = sub i32 %59, 60, !dbg !15282
  store i32 %sub, i32* %arrayidx101, align 4, !dbg !15282
  br label %if.end102, !dbg !15283

if.end102:                                        ; preds = %if.end, %land.lhs.true, %sw.default
  %60 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15284
  %vc_par103 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %60, i32 0, i32 31, !dbg !15286
  %61 = load i32, i32* %i, align 4, !dbg !15287
  %idxprom104 = sext i32 %61 to i64, !dbg !15284
  %arrayidx105 = getelementptr [16 x i32], [16 x i32]* %vc_par103, i64 0, i64 %idxprom104, !dbg !15284
  %62 = load i32, i32* %arrayidx105, align 4, !dbg !15284
  %cmp106 = icmp uge i32 %62, 30, !dbg !15288
  br i1 %cmp106, label %land.lhs.true108, label %if.else, !dbg !15289

land.lhs.true108:                                 ; preds = %if.end102
  %63 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15290
  %vc_par109 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %63, i32 0, i32 31, !dbg !15291
  %64 = load i32, i32* %i, align 4, !dbg !15292
  %idxprom110 = sext i32 %64 to i64, !dbg !15290
  %arrayidx111 = getelementptr [16 x i32], [16 x i32]* %vc_par109, i64 0, i64 %idxprom110, !dbg !15290
  %65 = load i32, i32* %arrayidx111, align 4, !dbg !15290
  %cmp112 = icmp ule i32 %65, 37, !dbg !15293
  br i1 %cmp112, label %if.then114, label %if.else, !dbg !15294

if.then114:                                       ; preds = %land.lhs.true108
  %66 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15295
  %vc_par115 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %66, i32 0, i32 31, !dbg !15296
  %67 = load i32, i32* %i, align 4, !dbg !15297
  %idxprom116 = sext i32 %67 to i64, !dbg !15295
  %arrayidx117 = getelementptr [16 x i32], [16 x i32]* %vc_par115, i64 0, i64 %idxprom116, !dbg !15295
  %68 = load i32, i32* %arrayidx117, align 4, !dbg !15295
  %sub118 = sub i32 %68, 30, !dbg !15298
  %idxprom119 = zext i32 %sub118 to i64, !dbg !15299
  %arrayidx120 = getelementptr [16 x i8], [16 x i8]* @color_table, i64 0, i64 %idxprom119, !dbg !15299
  %69 = load i8, i8* %arrayidx120, align 1, !dbg !15299
  %conv121 = zext i8 %69 to i32, !dbg !15299
  %70 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15300
  %state122 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %70, i32 0, i32 1, !dbg !15301
  %color123 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state122, i32 0, i32 2, !dbg !15302
  %71 = load i8, i8* %color123, align 8, !dbg !15302
  %conv124 = zext i8 %71 to i32, !dbg !15300
  %and125 = and i32 %conv124, 240, !dbg !15303
  %or126 = or i32 %conv121, %and125, !dbg !15304
  %conv127 = trunc i32 %or126 to i8, !dbg !15299
  %72 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15305
  %state128 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %72, i32 0, i32 1, !dbg !15306
  %color129 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state128, i32 0, i32 2, !dbg !15307
  store i8 %conv127, i8* %color129, align 8, !dbg !15308
  br label %if.end158, !dbg !15305

if.else:                                          ; preds = %land.lhs.true108, %if.end102
  %73 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15309
  %vc_par130 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %73, i32 0, i32 31, !dbg !15311
  %74 = load i32, i32* %i, align 4, !dbg !15312
  %idxprom131 = sext i32 %74 to i64, !dbg !15309
  %arrayidx132 = getelementptr [16 x i32], [16 x i32]* %vc_par130, i64 0, i64 %idxprom131, !dbg !15309
  %75 = load i32, i32* %arrayidx132, align 4, !dbg !15309
  %cmp133 = icmp uge i32 %75, 40, !dbg !15313
  br i1 %cmp133, label %land.lhs.true135, label %if.end157, !dbg !15314

land.lhs.true135:                                 ; preds = %if.else
  %76 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15315
  %vc_par136 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %76, i32 0, i32 31, !dbg !15316
  %77 = load i32, i32* %i, align 4, !dbg !15317
  %idxprom137 = sext i32 %77 to i64, !dbg !15315
  %arrayidx138 = getelementptr [16 x i32], [16 x i32]* %vc_par136, i64 0, i64 %idxprom137, !dbg !15315
  %78 = load i32, i32* %arrayidx138, align 4, !dbg !15315
  %cmp139 = icmp ule i32 %78, 47, !dbg !15318
  br i1 %cmp139, label %if.then141, label %if.end157, !dbg !15319

if.then141:                                       ; preds = %land.lhs.true135
  %79 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15320
  %vc_par142 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %79, i32 0, i32 31, !dbg !15321
  %80 = load i32, i32* %i, align 4, !dbg !15322
  %idxprom143 = sext i32 %80 to i64, !dbg !15320
  %arrayidx144 = getelementptr [16 x i32], [16 x i32]* %vc_par142, i64 0, i64 %idxprom143, !dbg !15320
  %81 = load i32, i32* %arrayidx144, align 4, !dbg !15320
  %sub145 = sub i32 %81, 40, !dbg !15323
  %idxprom146 = zext i32 %sub145 to i64, !dbg !15324
  %arrayidx147 = getelementptr [16 x i8], [16 x i8]* @color_table, i64 0, i64 %idxprom146, !dbg !15324
  %82 = load i8, i8* %arrayidx147, align 1, !dbg !15324
  %conv148 = zext i8 %82 to i32, !dbg !15324
  %shl = shl i32 %conv148, 4, !dbg !15325
  %83 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15326
  %state149 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %83, i32 0, i32 1, !dbg !15327
  %color150 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state149, i32 0, i32 2, !dbg !15328
  %84 = load i8, i8* %color150, align 8, !dbg !15328
  %conv151 = zext i8 %84 to i32, !dbg !15326
  %and152 = and i32 %conv151, 15, !dbg !15329
  %or153 = or i32 %shl, %and152, !dbg !15330
  %conv154 = trunc i32 %or153 to i8, !dbg !15331
  %85 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15332
  %state155 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %85, i32 0, i32 1, !dbg !15333
  %color156 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state155, i32 0, i32 2, !dbg !15334
  store i8 %conv154, i8* %color156, align 8, !dbg !15335
  br label %if.end157, !dbg !15332

if.end157:                                        ; preds = %if.then141, %land.lhs.true135, %if.else
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.then114
  br label %sw.epilog, !dbg !15336

sw.epilog:                                        ; preds = %if.end158, %sw.bb69, %sw.bb61, %sw.bb59, %sw.bb57, %sw.bb54, %sw.bb51, %sw.bb48, %sw.bb45, %sw.bb42, %sw.bb31, %sw.bb22, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb2, %sw.bb1, %sw.bb
  br label %for.inc, !dbg !15337

for.inc:                                          ; preds = %sw.epilog
  %86 = load i32, i32* %i, align 4, !dbg !15338
  %inc = add i32 %86, 1, !dbg !15338
  store i32 %inc, i32* %i, align 4, !dbg !15338
  br label %for.cond, !dbg !15339, !llvm.loop !15340

for.end:                                          ; preds = %for.cond
  %87 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15342
  call void @update_attr(%struct.vc_data* %87) #13, !dbg !15343
  ret void, !dbg !15344
}

; Function Attrs: noredzone
declare dso_local void @vt_set_led_state(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @csi_X(%struct.vc_data* %vc, i32 %vpar) #0 !dbg !15345 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %vpar.addr = alloca i32, align 4
  %count = alloca i32, align 4
  %__UNIQUE_ID___x255 = alloca i32, align 4
  %__UNIQUE_ID___y256 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15346, metadata !DIExpression()), !dbg !15347
  store i32 %vpar, i32* %vpar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vpar.addr, metadata !15348, metadata !DIExpression()), !dbg !15349
  call void @llvm.dbg.declare(metadata i32* %count, metadata !15350, metadata !DIExpression()), !dbg !15351
  %0 = load i32, i32* %vpar.addr, align 4, !dbg !15352
  %tobool = icmp ne i32 %0, 0, !dbg !15352
  br i1 %tobool, label %if.end, label %if.then, !dbg !15354

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %vpar.addr, align 4, !dbg !15355
  %inc = add i32 %1, 1, !dbg !15355
  store i32 %inc, i32* %vpar.addr, align 4, !dbg !15355
  br label %if.end, !dbg !15356

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x255, metadata !15357, metadata !DIExpression()), !dbg !15359
  %2 = load i32, i32* %vpar.addr, align 4, !dbg !15359
  store i32 %2, i32* %__UNIQUE_ID___x255, align 4, !dbg !15359
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y256, metadata !15360, metadata !DIExpression()), !dbg !15359
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15359
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 4, !dbg !15359
  %4 = load i32, i32* %vc_cols, align 4, !dbg !15359
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15359
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 1, !dbg !15359
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !15359
  %6 = load i32, i32* %x, align 8, !dbg !15359
  %sub = sub i32 %4, %6, !dbg !15359
  store i32 %sub, i32* %__UNIQUE_ID___y256, align 4, !dbg !15359
  %7 = load i32, i32* %__UNIQUE_ID___x255, align 4, !dbg !15359
  %8 = load i32, i32* %__UNIQUE_ID___y256, align 4, !dbg !15359
  %cmp = icmp ult i32 %7, %8, !dbg !15359
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15359

cond.true:                                        ; preds = %if.end
  %9 = load i32, i32* %__UNIQUE_ID___x255, align 4, !dbg !15359
  br label %cond.end, !dbg !15359

cond.false:                                       ; preds = %if.end
  %10 = load i32, i32* %__UNIQUE_ID___y256, align 4, !dbg !15359
  br label %cond.end, !dbg !15359

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %10, %cond.false ], !dbg !15359
  store i32 %cond, i32* %tmp, align 4, !dbg !15359
  %11 = load i32, i32* %tmp, align 4, !dbg !15359
  store i32 %11, i32* %count, align 4, !dbg !15361
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15362
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15363
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 1, !dbg !15364
  %x2 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 0, !dbg !15365
  %14 = load i32, i32* %x2, align 8, !dbg !15365
  %15 = load i32, i32* %count, align 4, !dbg !15366
  call void @vc_uniscr_clear_line(%struct.vc_data* %12, i32 %14, i32 %15) #13, !dbg !15367
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15368
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 25, !dbg !15369
  %17 = load i64, i64* %vc_pos, align 8, !dbg !15369
  %18 = inttoptr i64 %17 to i16*, !dbg !15370
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15371
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 28, !dbg !15372
  %20 = load i16, i16* %vc_video_erase_char, align 8, !dbg !15372
  %21 = load i32, i32* %count, align 4, !dbg !15373
  %mul = mul i32 2, %21, !dbg !15374
  call void @scr_memsetw(i16* %18, i16 zeroext %20, i32 %mul) #13, !dbg !15375
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15376
  %call = call zeroext i1 @con_should_update(%struct.vc_data* %22) #13, !dbg !15378
  br i1 %call, label %if.then3, label %if.end7, !dbg !15379

if.then3:                                         ; preds = %cond.end
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15380
  %vc_sw = getelementptr inbounds %struct.vc_data, %struct.vc_data* %23, i32 0, i32 13, !dbg !15381
  %24 = load %struct.consw*, %struct.consw** %vc_sw, align 8, !dbg !15381
  %con_clear = getelementptr inbounds %struct.consw, %struct.consw* %24, i32 0, i32 4, !dbg !15382
  %25 = load void (%struct.vc_data*, i32, i32, i32, i32)*, void (%struct.vc_data*, i32, i32, i32, i32)** %con_clear, align 8, !dbg !15382
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15383
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15384
  %state4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 1, !dbg !15385
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state4, i32 0, i32 1, !dbg !15386
  %28 = load i32, i32* %y, align 4, !dbg !15386
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15387
  %state5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 1, !dbg !15388
  %x6 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state5, i32 0, i32 0, !dbg !15389
  %30 = load i32, i32* %x6, align 8, !dbg !15389
  %31 = load i32, i32* %count, align 4, !dbg !15390
  call void %25(%struct.vc_data* %26, i32 %28, i32 %30, i32 1, i32 %31) #13, !dbg !15380
  br label %if.end7, !dbg !15380

if.end7:                                          ; preds = %if.then3, %cond.end
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15391
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 36, !dbg !15392
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !15393
  %bf.clear = and i16 %bf.load, -1025, !dbg !15393
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !15393
  ret void, !dbg !15394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @csi_at(%struct.vc_data* %vc, i32 %nr) #0 !dbg !15395 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %nr.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15396, metadata !DIExpression()), !dbg !15397
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !15398, metadata !DIExpression()), !dbg !15399
  %0 = load i32, i32* %nr.addr, align 4, !dbg !15400
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15402
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 4, !dbg !15403
  %2 = load i32, i32* %vc_cols, align 4, !dbg !15403
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15404
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 1, !dbg !15405
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !15406
  %4 = load i32, i32* %x, align 8, !dbg !15406
  %sub = sub i32 %2, %4, !dbg !15407
  %cmp = icmp ugt i32 %0, %sub, !dbg !15408
  br i1 %cmp, label %if.then, label %if.else, !dbg !15409

if.then:                                          ; preds = %entry
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15410
  %vc_cols1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 4, !dbg !15411
  %6 = load i32, i32* %vc_cols1, align 4, !dbg !15411
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15412
  %state2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !15413
  %x3 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state2, i32 0, i32 0, !dbg !15414
  %8 = load i32, i32* %x3, align 8, !dbg !15414
  %sub4 = sub i32 %6, %8, !dbg !15415
  store i32 %sub4, i32* %nr.addr, align 4, !dbg !15416
  br label %if.end6, !dbg !15417

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %nr.addr, align 4, !dbg !15418
  %tobool = icmp ne i32 %9, 0, !dbg !15418
  br i1 %tobool, label %if.end, label %if.then5, !dbg !15420

if.then5:                                         ; preds = %if.else
  store i32 1, i32* %nr.addr, align 4, !dbg !15421
  br label %if.end, !dbg !15422

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15423
  %11 = load i32, i32* %nr.addr, align 4, !dbg !15424
  call void @insert_char(%struct.vc_data* %10, i32 %11) #13, !dbg !15425
  ret void, !dbg !15426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @setterm_command(%struct.vc_data* %vc) #0 !dbg !15427 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !15428, metadata !DIExpression()), !dbg !15433
  %vc.addr = alloca %struct.vc_data*, align 8
  %__UNIQUE_ID___x261 = alloca i32, align 4
  %__UNIQUE_ID___y262 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x263 = alloca i32, align 4
  %__UNIQUE_ID___y264 = alloca i32, align 4
  %tmp90 = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15437, metadata !DIExpression()), !dbg !15438
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15439
  %vc_par = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 31, !dbg !15440
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %vc_par, i64 0, i64 0, !dbg !15439
  %1 = load i32, i32* %arrayidx, align 4, !dbg !15439
  switch i32 %1, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb9
    i32 8, label %sw.bb30
    i32 9, label %sw.bb38
    i32 10, label %sw.bb43
    i32 11, label %sw.bb51
    i32 12, label %sw.bb70
    i32 13, label %sw.bb86
    i32 14, label %sw.bb87
    i32 15, label %sw.bb99
    i32 16, label %sw.bb101
  ], !dbg !15441

sw.bb:                                            ; preds = %entry
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15442
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 36, !dbg !15444
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !15444
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !15444
  %bf.clear = and i16 %bf.lshr, 1, !dbg !15444
  %bf.cast = zext i16 %bf.clear to i32, !dbg !15444
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !15442
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !15445

land.lhs.true:                                    ; preds = %sw.bb
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15446
  %vc_par1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 31, !dbg !15447
  %arrayidx2 = getelementptr [16 x i32], [16 x i32]* %vc_par1, i64 0, i64 1, !dbg !15446
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !15446
  %cmp = icmp ult i32 %4, 16, !dbg !15448
  br i1 %cmp, label %if.then, label %if.end8, !dbg !15449

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15450
  %vc_par3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 31, !dbg !15452
  %arrayidx4 = getelementptr [16 x i32], [16 x i32]* %vc_par3, i64 0, i64 1, !dbg !15450
  %6 = load i32, i32* %arrayidx4, align 4, !dbg !15450
  %idxprom = zext i32 %6 to i64, !dbg !15453
  %arrayidx5 = getelementptr [16 x i8], [16 x i8]* @color_table, i64 0, i64 %idxprom, !dbg !15453
  %7 = load i8, i8* %arrayidx5, align 1, !dbg !15453
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15454
  %vc_ulcolor = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 19, !dbg !15455
  store i8 %7, i8* %vc_ulcolor, align 1, !dbg !15456
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15457
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 1, !dbg !15459
  %underline = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 7, !dbg !15460
  %10 = load i8, i8* %underline, align 1, !dbg !15460
  %tobool6 = trunc i8 %10 to i1, !dbg !15460
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !15461

if.then7:                                         ; preds = %if.then
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15462
  call void @update_attr(%struct.vc_data* %11) #13, !dbg !15463
  br label %if.end, !dbg !15463

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end8, !dbg !15464

if.end8:                                          ; preds = %if.end, %land.lhs.true, %sw.bb
  br label %sw.epilog, !dbg !15465

sw.bb9:                                           ; preds = %entry
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15466
  %vc_can_do_color10 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 36, !dbg !15468
  %bf.load11 = load i16, i16* %vc_can_do_color10, align 8, !dbg !15468
  %bf.lshr12 = lshr i16 %bf.load11, 11, !dbg !15468
  %bf.clear13 = and i16 %bf.lshr12, 1, !dbg !15468
  %bf.cast14 = zext i16 %bf.clear13 to i32, !dbg !15468
  %tobool15 = icmp ne i32 %bf.cast14, 0, !dbg !15466
  br i1 %tobool15, label %land.lhs.true16, label %if.end29, !dbg !15469

land.lhs.true16:                                  ; preds = %sw.bb9
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15470
  %vc_par17 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 31, !dbg !15471
  %arrayidx18 = getelementptr [16 x i32], [16 x i32]* %vc_par17, i64 0, i64 1, !dbg !15470
  %14 = load i32, i32* %arrayidx18, align 4, !dbg !15470
  %cmp19 = icmp ult i32 %14, 16, !dbg !15472
  br i1 %cmp19, label %if.then20, label %if.end29, !dbg !15473

if.then20:                                        ; preds = %land.lhs.true16
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15474
  %vc_par21 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 31, !dbg !15476
  %arrayidx22 = getelementptr [16 x i32], [16 x i32]* %vc_par21, i64 0, i64 1, !dbg !15474
  %16 = load i32, i32* %arrayidx22, align 4, !dbg !15474
  %idxprom23 = zext i32 %16 to i64, !dbg !15477
  %arrayidx24 = getelementptr [16 x i8], [16 x i8]* @color_table, i64 0, i64 %idxprom23, !dbg !15477
  %17 = load i8, i8* %arrayidx24, align 1, !dbg !15477
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15478
  %vc_halfcolor = getelementptr inbounds %struct.vc_data, %struct.vc_data* %18, i32 0, i32 21, !dbg !15479
  store i8 %17, i8* %vc_halfcolor, align 1, !dbg !15480
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15481
  %state25 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 1, !dbg !15483
  %intensity = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state25, i32 0, i32 5, !dbg !15484
  %20 = load i32, i32* %intensity, align 4, !dbg !15484
  %cmp26 = icmp eq i32 %20, 0, !dbg !15485
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !15486

if.then27:                                        ; preds = %if.then20
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15487
  call void @update_attr(%struct.vc_data* %21) #13, !dbg !15488
  br label %if.end28, !dbg !15488

if.end28:                                         ; preds = %if.then27, %if.then20
  br label %if.end29, !dbg !15489

if.end29:                                         ; preds = %if.end28, %land.lhs.true16, %sw.bb9
  br label %sw.epilog, !dbg !15490

sw.bb30:                                          ; preds = %entry
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15491
  %vc_attr = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 17, !dbg !15492
  %23 = load i8, i8* %vc_attr, align 1, !dbg !15492
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15493
  %vc_def_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %24, i32 0, i32 18, !dbg !15494
  store i8 %23, i8* %vc_def_color, align 2, !dbg !15495
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15496
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %25, i32 0, i32 26, !dbg !15498
  %26 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !15498
  %conv = zext i16 %26 to i32, !dbg !15496
  %cmp31 = icmp eq i32 %conv, 256, !dbg !15499
  br i1 %cmp31, label %if.then33, label %if.end37, !dbg !15500

if.then33:                                        ; preds = %sw.bb30
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15501
  %vc_def_color34 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 18, !dbg !15502
  %28 = load i8, i8* %vc_def_color34, align 2, !dbg !15503
  %conv35 = zext i8 %28 to i32, !dbg !15503
  %shr = ashr i32 %conv35, 1, !dbg !15503
  %conv36 = trunc i32 %shr to i8, !dbg !15503
  store i8 %conv36, i8* %vc_def_color34, align 2, !dbg !15503
  br label %if.end37, !dbg !15501

if.end37:                                         ; preds = %if.then33, %sw.bb30
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15504
  call void @default_attr(%struct.vc_data* %29) #13, !dbg !15505
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15506
  call void @update_attr(%struct.vc_data* %30) #13, !dbg !15507
  br label %sw.epilog, !dbg !15508

sw.bb38:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x261, metadata !15509, metadata !DIExpression()), !dbg !15511
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15511
  %vc_par39 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %31, i32 0, i32 31, !dbg !15511
  %arrayidx40 = getelementptr [16 x i32], [16 x i32]* %vc_par39, i64 0, i64 1, !dbg !15511
  %32 = load i32, i32* %arrayidx40, align 4, !dbg !15511
  store i32 %32, i32* %__UNIQUE_ID___x261, align 4, !dbg !15511
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y262, metadata !15512, metadata !DIExpression()), !dbg !15511
  store i32 60, i32* %__UNIQUE_ID___y262, align 4, !dbg !15511
  %33 = load i32, i32* %__UNIQUE_ID___x261, align 4, !dbg !15511
  %34 = load i32, i32* %__UNIQUE_ID___y262, align 4, !dbg !15511
  %cmp41 = icmp ult i32 %33, %34, !dbg !15511
  br i1 %cmp41, label %cond.true, label %cond.false, !dbg !15511

cond.true:                                        ; preds = %sw.bb38
  %35 = load i32, i32* %__UNIQUE_ID___x261, align 4, !dbg !15511
  br label %cond.end, !dbg !15511

cond.false:                                       ; preds = %sw.bb38
  %36 = load i32, i32* %__UNIQUE_ID___y262, align 4, !dbg !15511
  br label %cond.end, !dbg !15511

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %35, %cond.true ], [ %36, %cond.false ], !dbg !15511
  store i32 %cond, i32* %tmp, align 4, !dbg !15511
  %37 = load i32, i32* %tmp, align 4, !dbg !15511
  %mul = mul i32 %37, 60, !dbg !15513
  store i32 %mul, i32* @blankinterval, align 4, !dbg !15514
  call void @poke_blanked_console() #13, !dbg !15515
  br label %sw.epilog, !dbg !15516

sw.bb43:                                          ; preds = %entry
  %38 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15517
  %vc_npar = getelementptr inbounds %struct.vc_data, %struct.vc_data* %38, i32 0, i32 30, !dbg !15519
  %39 = load i32, i32* %vc_npar, align 8, !dbg !15519
  %cmp44 = icmp uge i32 %39, 1, !dbg !15520
  br i1 %cmp44, label %if.then46, label %if.else, !dbg !15521

if.then46:                                        ; preds = %sw.bb43
  %40 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15522
  %vc_par47 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %40, i32 0, i32 31, !dbg !15523
  %arrayidx48 = getelementptr [16 x i32], [16 x i32]* %vc_par47, i64 0, i64 1, !dbg !15522
  %41 = load i32, i32* %arrayidx48, align 4, !dbg !15522
  %42 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15524
  %vc_bell_pitch = getelementptr inbounds %struct.vc_data, %struct.vc_data* %42, i32 0, i32 43, !dbg !15525
  store i32 %41, i32* %vc_bell_pitch, align 4, !dbg !15526
  br label %if.end50, !dbg !15524

if.else:                                          ; preds = %sw.bb43
  %43 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15527
  %vc_bell_pitch49 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %43, i32 0, i32 43, !dbg !15528
  store i32 750, i32* %vc_bell_pitch49, align 4, !dbg !15529
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then46
  br label %sw.epilog, !dbg !15530

sw.bb51:                                          ; preds = %entry
  %44 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15531
  %vc_npar52 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %44, i32 0, i32 30, !dbg !15532
  %45 = load i32, i32* %vc_npar52, align 8, !dbg !15532
  %cmp53 = icmp uge i32 %45, 1, !dbg !15533
  br i1 %cmp53, label %if.then55, label %if.else67, !dbg !15534

if.then55:                                        ; preds = %sw.bb51
  %46 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15535
  %vc_par56 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %46, i32 0, i32 31, !dbg !15536
  %arrayidx57 = getelementptr [16 x i32], [16 x i32]* %vc_par56, i64 0, i64 1, !dbg !15535
  %47 = load i32, i32* %arrayidx57, align 4, !dbg !15535
  %cmp58 = icmp ult i32 %47, 2000, !dbg !15537
  br i1 %cmp58, label %cond.true60, label %cond.false63, !dbg !15538

cond.true60:                                      ; preds = %if.then55
  %48 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15539
  %vc_par61 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %48, i32 0, i32 31, !dbg !15540
  %arrayidx62 = getelementptr [16 x i32], [16 x i32]* %vc_par61, i64 0, i64 1, !dbg !15539
  %49 = load i32, i32* %arrayidx62, align 4, !dbg !15539
  store i32 %49, i32* %m.addr.i, align 4
  %50 = load i32, i32* %m.addr.i, align 4, !dbg !15541
  %51 = call i1 @llvm.is.constant.i32(i32 %50) #5, !dbg !15543
  br i1 %51, label %if.then.i, label %if.else.i, !dbg !15544

if.then.i:                                        ; preds = %cond.true60
  %52 = load i32, i32* %m.addr.i, align 4, !dbg !15545
  %cmp.i = icmp slt i32 %52, 0, !dbg !15548
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15549

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !15550
  br label %msecs_to_jiffies.exit, !dbg !15550

if.end.i:                                         ; preds = %if.then.i
  %53 = load i32, i32* %m.addr.i, align 4, !dbg !15551
  %call.i = call i64 @_msecs_to_jiffies(i32 %53) #14, !dbg !15552
  store i64 %call.i, i64* %retval.i, align 8, !dbg !15553
  br label %msecs_to_jiffies.exit, !dbg !15553

if.else.i:                                        ; preds = %cond.true60
  %54 = load i32, i32* %m.addr.i, align 4, !dbg !15554
  %call2.i = call i64 @__msecs_to_jiffies(i32 %54) #14, !dbg !15556
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !15557
  br label %msecs_to_jiffies.exit, !dbg !15557

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %55 = load i64, i64* %retval.i, align 8, !dbg !15558
  br label %cond.end64, !dbg !15538

cond.false63:                                     ; preds = %if.then55
  br label %cond.end64, !dbg !15538

cond.end64:                                       ; preds = %cond.false63, %msecs_to_jiffies.exit
  %cond65 = phi i64 [ %55, %msecs_to_jiffies.exit ], [ 0, %cond.false63 ], !dbg !15538
  %conv66 = trunc i64 %cond65 to i32, !dbg !15538
  %56 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15559
  %vc_bell_duration = getelementptr inbounds %struct.vc_data, %struct.vc_data* %56, i32 0, i32 44, !dbg !15560
  store i32 %conv66, i32* %vc_bell_duration, align 8, !dbg !15561
  br label %if.end69, !dbg !15559

if.else67:                                        ; preds = %sw.bb51
  %57 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15562
  %vc_bell_duration68 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %57, i32 0, i32 44, !dbg !15563
  store i32 31, i32* %vc_bell_duration68, align 8, !dbg !15564
  br label %if.end69

if.end69:                                         ; preds = %if.else67, %cond.end64
  br label %sw.epilog, !dbg !15565

sw.bb70:                                          ; preds = %entry
  %58 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15566
  %vc_par71 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %58, i32 0, i32 31, !dbg !15568
  %arrayidx72 = getelementptr [16 x i32], [16 x i32]* %vc_par71, i64 0, i64 1, !dbg !15566
  %59 = load i32, i32* %arrayidx72, align 4, !dbg !15566
  %cmp73 = icmp uge i32 %59, 1, !dbg !15569
  br i1 %cmp73, label %land.lhs.true75, label %if.end85, !dbg !15570

land.lhs.true75:                                  ; preds = %sw.bb70
  %60 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15571
  %vc_par76 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %60, i32 0, i32 31, !dbg !15572
  %arrayidx77 = getelementptr [16 x i32], [16 x i32]* %vc_par76, i64 0, i64 1, !dbg !15571
  %61 = load i32, i32* %arrayidx77, align 4, !dbg !15571
  %sub = sub i32 %61, 1, !dbg !15573
  %call78 = call i32 @vc_cons_allocated(i32 %sub) #13, !dbg !15574
  %tobool79 = icmp ne i32 %call78, 0, !dbg !15574
  br i1 %tobool79, label %if.then80, label %if.end85, !dbg !15575

if.then80:                                        ; preds = %land.lhs.true75
  %62 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15576
  %vc_par81 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %62, i32 0, i32 31, !dbg !15577
  %arrayidx82 = getelementptr [16 x i32], [16 x i32]* %vc_par81, i64 0, i64 1, !dbg !15576
  %63 = load i32, i32* %arrayidx82, align 4, !dbg !15576
  %sub83 = sub i32 %63, 1, !dbg !15578
  %call84 = call i32 @set_console(i32 %sub83) #13, !dbg !15579
  br label %if.end85, !dbg !15579

if.end85:                                         ; preds = %if.then80, %land.lhs.true75, %sw.bb70
  br label %sw.epilog, !dbg !15580

sw.bb86:                                          ; preds = %entry
  call void @poke_blanked_console() #13, !dbg !15581
  br label %sw.epilog, !dbg !15582

sw.bb87:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x263, metadata !15583, metadata !DIExpression()), !dbg !15585
  %64 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15585
  %vc_par88 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %64, i32 0, i32 31, !dbg !15585
  %arrayidx89 = getelementptr [16 x i32], [16 x i32]* %vc_par88, i64 0, i64 1, !dbg !15585
  %65 = load i32, i32* %arrayidx89, align 4, !dbg !15585
  store i32 %65, i32* %__UNIQUE_ID___x263, align 4, !dbg !15585
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y264, metadata !15586, metadata !DIExpression()), !dbg !15585
  store i32 60, i32* %__UNIQUE_ID___y264, align 4, !dbg !15585
  %66 = load i32, i32* %__UNIQUE_ID___x263, align 4, !dbg !15585
  %67 = load i32, i32* %__UNIQUE_ID___y264, align 4, !dbg !15585
  %cmp91 = icmp ult i32 %66, %67, !dbg !15585
  br i1 %cmp91, label %cond.true93, label %cond.false94, !dbg !15585

cond.true93:                                      ; preds = %sw.bb87
  %68 = load i32, i32* %__UNIQUE_ID___x263, align 4, !dbg !15585
  br label %cond.end95, !dbg !15585

cond.false94:                                     ; preds = %sw.bb87
  %69 = load i32, i32* %__UNIQUE_ID___y264, align 4, !dbg !15585
  br label %cond.end95, !dbg !15585

cond.end95:                                       ; preds = %cond.false94, %cond.true93
  %cond96 = phi i32 [ %68, %cond.true93 ], [ %69, %cond.false94 ], !dbg !15585
  store i32 %cond96, i32* %tmp90, align 4, !dbg !15585
  %70 = load i32, i32* %tmp90, align 4, !dbg !15585
  %mul97 = mul i32 %70, 60, !dbg !15587
  %mul98 = mul i32 %mul97, 250, !dbg !15588
  store i32 %mul98, i32* @vesa_off_interval, align 4, !dbg !15589
  br label %sw.epilog, !dbg !15590

sw.bb99:                                          ; preds = %entry
  %71 = load i32, i32* @last_console, align 4, !dbg !15591
  %call100 = call i32 @set_console(i32 %71) #13, !dbg !15592
  br label %sw.epilog, !dbg !15593

sw.bb101:                                         ; preds = %entry
  %72 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15594
  %vc_npar102 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %72, i32 0, i32 30, !dbg !15596
  %73 = load i32, i32* %vc_npar102, align 8, !dbg !15596
  %cmp103 = icmp uge i32 %73, 1, !dbg !15597
  br i1 %cmp103, label %land.lhs.true105, label %if.else119, !dbg !15598

land.lhs.true105:                                 ; preds = %sw.bb101
  %74 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15599
  %vc_par106 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %74, i32 0, i32 31, !dbg !15600
  %arrayidx107 = getelementptr [16 x i32], [16 x i32]* %vc_par106, i64 0, i64 1, !dbg !15599
  %75 = load i32, i32* %arrayidx107, align 4, !dbg !15599
  %cmp108 = icmp uge i32 %75, 50, !dbg !15601
  br i1 %cmp108, label %land.lhs.true110, label %if.else119, !dbg !15602

land.lhs.true110:                                 ; preds = %land.lhs.true105
  %76 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15603
  %vc_par111 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %76, i32 0, i32 31, !dbg !15604
  %arrayidx112 = getelementptr [16 x i32], [16 x i32]* %vc_par111, i64 0, i64 1, !dbg !15603
  %77 = load i32, i32* %arrayidx112, align 4, !dbg !15603
  %cmp113 = icmp ule i32 %77, 65535, !dbg !15605
  br i1 %cmp113, label %if.then115, label %if.else119, !dbg !15606

if.then115:                                       ; preds = %land.lhs.true110
  %78 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15607
  %vc_par116 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %78, i32 0, i32 31, !dbg !15608
  %arrayidx117 = getelementptr [16 x i32], [16 x i32]* %vc_par116, i64 0, i64 1, !dbg !15607
  %79 = load i32, i32* %arrayidx117, align 4, !dbg !15607
  %conv118 = trunc i32 %79 to i16, !dbg !15607
  %80 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15609
  %vc_cur_blink_ms = getelementptr inbounds %struct.vc_data, %struct.vc_data* %80, i32 0, i32 45, !dbg !15610
  store i16 %conv118, i16* %vc_cur_blink_ms, align 4, !dbg !15611
  br label %if.end121, !dbg !15609

if.else119:                                       ; preds = %land.lhs.true110, %land.lhs.true105, %sw.bb101
  %81 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15612
  %vc_cur_blink_ms120 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %81, i32 0, i32 45, !dbg !15613
  store i16 200, i16* %vc_cur_blink_ms120, align 4, !dbg !15614
  br label %if.end121

if.end121:                                        ; preds = %if.else119, %if.then115
  br label %sw.epilog, !dbg !15615

sw.epilog:                                        ; preds = %entry, %if.end121, %sw.bb99, %cond.end95, %sw.bb86, %if.end85, %if.end69, %if.end50, %cond.end, %if.end37, %if.end29, %if.end8
  ret void, !dbg !15616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_setGx(%struct.vc_data* %vc, i32 %which, i32 %c) #0 !dbg !15617 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %which.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %charset = alloca i8*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15620, metadata !DIExpression()), !dbg !15621
  store i32 %which, i32* %which.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %which.addr, metadata !15622, metadata !DIExpression()), !dbg !15623
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !15624, metadata !DIExpression()), !dbg !15625
  call void @llvm.dbg.declare(metadata i8** %charset, metadata !15626, metadata !DIExpression()), !dbg !15627
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15628
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 1, !dbg !15629
  %Gx_charset = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 3, !dbg !15630
  %1 = load i32, i32* %which.addr, align 4, !dbg !15631
  %idxprom = zext i32 %1 to i64, !dbg !15628
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %Gx_charset, i64 0, i64 %idxprom, !dbg !15628
  store i8* %arrayidx, i8** %charset, align 8, !dbg !15627
  %2 = load i32, i32* %c.addr, align 4, !dbg !15632
  switch i32 %2, label %sw.epilog [
    i32 48, label %sw.bb
    i32 66, label %sw.bb1
    i32 85, label %sw.bb2
    i32 75, label %sw.bb3
  ], !dbg !15633

sw.bb:                                            ; preds = %entry
  %3 = load i8*, i8** %charset, align 8, !dbg !15634
  store i8 1, i8* %3, align 1, !dbg !15636
  br label %sw.epilog, !dbg !15637

sw.bb1:                                           ; preds = %entry
  %4 = load i8*, i8** %charset, align 8, !dbg !15638
  store i8 0, i8* %4, align 1, !dbg !15639
  br label %sw.epilog, !dbg !15640

sw.bb2:                                           ; preds = %entry
  %5 = load i8*, i8** %charset, align 8, !dbg !15641
  store i8 2, i8* %5, align 1, !dbg !15642
  br label %sw.epilog, !dbg !15643

sw.bb3:                                           ; preds = %entry
  %6 = load i8*, i8** %charset, align 8, !dbg !15644
  store i8 3, i8* %6, align 1, !dbg !15645
  br label %sw.epilog, !dbg !15646

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15647
  %state4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !15649
  %charset5 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state4, i32 0, i32 4, !dbg !15650
  %bf.load = load i8, i8* %charset5, align 1, !dbg !15650
  %bf.clear = and i8 %bf.load, 1, !dbg !15650
  %bf.cast = zext i8 %bf.clear to i32, !dbg !15650
  %8 = load i32, i32* %which.addr, align 4, !dbg !15651
  %cmp = icmp eq i32 %bf.cast, %8, !dbg !15652
  br i1 %cmp, label %if.then, label %if.end, !dbg !15653

if.then:                                          ; preds = %sw.epilog
  %9 = load i8*, i8** %charset, align 8, !dbg !15654
  %10 = load i8, i8* %9, align 1, !dbg !15655
  %conv = zext i8 %10 to i32, !dbg !15655
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15656
  %call = call i16* @set_translate(i32 %conv, %struct.vc_data* %11) #13, !dbg !15657
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15658
  %vc_translate = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 41, !dbg !15659
  store i16* %call, i16** %vc_translate, align 8, !dbg !15660
  br label %if.end, !dbg !15658

if.end:                                           ; preds = %if.then, %sw.epilog
  ret void, !dbg !15661
}

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @delete_char(%struct.vc_data* %vc, i32 %nr) #0 !dbg !15662 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %nr.addr = alloca i32, align 4
  %p = alloca i16*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15663, metadata !DIExpression()), !dbg !15664
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !15665, metadata !DIExpression()), !dbg !15666
  call void @llvm.dbg.declare(metadata i16** %p, metadata !15667, metadata !DIExpression()), !dbg !15668
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15669
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 25, !dbg !15670
  %1 = load i64, i64* %vc_pos, align 8, !dbg !15670
  %2 = inttoptr i64 %1 to i16*, !dbg !15671
  store i16* %2, i16** %p, align 8, !dbg !15668
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15672
  %4 = load i32, i32* %nr.addr, align 4, !dbg !15673
  call void @vc_uniscr_delete(%struct.vc_data* %3, i32 %4) #13, !dbg !15674
  %5 = load i16*, i16** %p, align 8, !dbg !15675
  %6 = load i16*, i16** %p, align 8, !dbg !15676
  %7 = load i32, i32* %nr.addr, align 4, !dbg !15677
  %idx.ext = zext i32 %7 to i64, !dbg !15678
  %add.ptr = getelementptr i16, i16* %6, i64 %idx.ext, !dbg !15678
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15679
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 4, !dbg !15680
  %9 = load i32, i32* %vc_cols, align 4, !dbg !15680
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15681
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 1, !dbg !15682
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !15683
  %11 = load i32, i32* %x, align 8, !dbg !15683
  %sub = sub i32 %9, %11, !dbg !15684
  %12 = load i32, i32* %nr.addr, align 4, !dbg !15685
  %sub1 = sub i32 %sub, %12, !dbg !15686
  %mul = mul i32 %sub1, 2, !dbg !15687
  call void @scr_memcpyw(i16* %5, i16* %add.ptr, i32 %mul) #13, !dbg !15688
  %13 = load i16*, i16** %p, align 8, !dbg !15689
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15690
  %vc_cols2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 4, !dbg !15691
  %15 = load i32, i32* %vc_cols2, align 4, !dbg !15691
  %idx.ext3 = zext i32 %15 to i64, !dbg !15692
  %add.ptr4 = getelementptr i16, i16* %13, i64 %idx.ext3, !dbg !15692
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15693
  %state5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %16, i32 0, i32 1, !dbg !15694
  %x6 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state5, i32 0, i32 0, !dbg !15695
  %17 = load i32, i32* %x6, align 8, !dbg !15695
  %idx.ext7 = zext i32 %17 to i64, !dbg !15696
  %idx.neg = sub i64 0, %idx.ext7, !dbg !15696
  %add.ptr8 = getelementptr i16, i16* %add.ptr4, i64 %idx.neg, !dbg !15696
  %18 = load i32, i32* %nr.addr, align 4, !dbg !15697
  %idx.ext9 = zext i32 %18 to i64, !dbg !15698
  %idx.neg10 = sub i64 0, %idx.ext9, !dbg !15698
  %add.ptr11 = getelementptr i16, i16* %add.ptr8, i64 %idx.neg10, !dbg !15698
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15699
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 28, !dbg !15700
  %20 = load i16, i16* %vc_video_erase_char, align 8, !dbg !15700
  %21 = load i32, i32* %nr.addr, align 4, !dbg !15701
  %mul12 = mul i32 %21, 2, !dbg !15702
  call void @scr_memsetw(i16* %add.ptr11, i16 zeroext %20, i32 %mul12) #13, !dbg !15703
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15704
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 36, !dbg !15705
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !15706
  %bf.clear = and i16 %bf.load, -1025, !dbg !15706
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !15706
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15707
  %call = call zeroext i1 @con_should_update(%struct.vc_data* %23) #13, !dbg !15709
  br i1 %call, label %if.then, label %if.end, !dbg !15710

if.then:                                          ; preds = %entry
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15711
  %25 = load i16*, i16** %p, align 8, !dbg !15712
  %26 = ptrtoint i16* %25 to i64, !dbg !15713
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15714
  %vc_cols13 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 4, !dbg !15715
  %28 = load i32, i32* %vc_cols13, align 4, !dbg !15715
  %29 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15716
  %state14 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %29, i32 0, i32 1, !dbg !15717
  %x15 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state14, i32 0, i32 0, !dbg !15718
  %30 = load i32, i32* %x15, align 8, !dbg !15718
  %sub16 = sub i32 %28, %30, !dbg !15719
  call void @do_update_region(%struct.vc_data* %24, i64 %26, i32 %sub16) #13, !dbg !15720
  br label %if.end, !dbg !15720

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !15721
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_uniscr_delete(%struct.vc_data* %vc, i32 %nr) #0 !dbg !15722 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %nr.addr = alloca i32, align 4
  %uniscr = alloca %struct.uni_screen*, align 8
  %ln = alloca i32*, align 8
  %x = alloca i32, align 4
  %cols = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15723, metadata !DIExpression()), !dbg !15724
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !15725, metadata !DIExpression()), !dbg !15726
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !15727, metadata !DIExpression()), !dbg !15728
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15729
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 49, !dbg !15729
  %1 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !15729
  store %struct.uni_screen* %1, %struct.uni_screen** %uniscr, align 8, !dbg !15728
  %2 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !15730
  %tobool = icmp ne %struct.uni_screen* %2, null, !dbg !15730
  br i1 %tobool, label %if.then, label %if.end, !dbg !15732

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %ln, metadata !15733, metadata !DIExpression()), !dbg !15735
  %3 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !15736
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %3, i32 0, i32 0, !dbg !15737
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15738
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 1, !dbg !15739
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !15740
  %5 = load i32, i32* %y, align 4, !dbg !15740
  %idxprom = zext i32 %5 to i64, !dbg !15736
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines, i64 0, i64 %idxprom, !dbg !15736
  %6 = load i32*, i32** %arrayidx, align 8, !dbg !15736
  store i32* %6, i32** %ln, align 8, !dbg !15735
  call void @llvm.dbg.declare(metadata i32* %x, metadata !15741, metadata !DIExpression()), !dbg !15742
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15743
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !15744
  %x2 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 0, !dbg !15745
  %8 = load i32, i32* %x2, align 8, !dbg !15745
  store i32 %8, i32* %x, align 4, !dbg !15742
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !15746, metadata !DIExpression()), !dbg !15747
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15748
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 4, !dbg !15749
  %10 = load i32, i32* %vc_cols, align 4, !dbg !15749
  store i32 %10, i32* %cols, align 4, !dbg !15747
  %11 = load i32*, i32** %ln, align 8, !dbg !15750
  %12 = load i32, i32* %x, align 4, !dbg !15751
  %idxprom3 = zext i32 %12 to i64, !dbg !15750
  %arrayidx4 = getelementptr i32, i32* %11, i64 %idxprom3, !dbg !15750
  %13 = bitcast i32* %arrayidx4 to i8*, !dbg !15752
  %14 = load i32*, i32** %ln, align 8, !dbg !15753
  %15 = load i32, i32* %x, align 4, !dbg !15754
  %16 = load i32, i32* %nr.addr, align 4, !dbg !15755
  %add = add i32 %15, %16, !dbg !15756
  %idxprom5 = zext i32 %add to i64, !dbg !15753
  %arrayidx6 = getelementptr i32, i32* %14, i64 %idxprom5, !dbg !15753
  %17 = bitcast i32* %arrayidx6 to i8*, !dbg !15752
  %18 = load i32, i32* %cols, align 4, !dbg !15757
  %19 = load i32, i32* %x, align 4, !dbg !15758
  %sub = sub i32 %18, %19, !dbg !15759
  %20 = load i32, i32* %nr.addr, align 4, !dbg !15760
  %sub7 = sub i32 %sub, %20, !dbg !15761
  %conv = zext i32 %sub7 to i64, !dbg !15762
  %mul = mul i64 %conv, 4, !dbg !15763
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %17, i64 %mul, i1 false), !dbg !15752
  %21 = load i32*, i32** %ln, align 8, !dbg !15764
  %22 = load i32, i32* %cols, align 4, !dbg !15765
  %23 = load i32, i32* %nr.addr, align 4, !dbg !15766
  %sub8 = sub i32 %22, %23, !dbg !15767
  %idxprom9 = zext i32 %sub8 to i64, !dbg !15764
  %arrayidx10 = getelementptr i32, i32* %21, i64 %idxprom9, !dbg !15764
  %24 = load i32, i32* %nr.addr, align 4, !dbg !15768
  %conv11 = zext i32 %24 to i64, !dbg !15768
  %call = call i8* @memset32(i32* %arrayidx10, i32 32, i64 %conv11) #13, !dbg !15769
  br label %if.end, !dbg !15770

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !15771
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vc_t416_color(%struct.vc_data* %vc, i32 %i, void (%struct.vc_data*, %struct.rgb*)* %set_color) #0 !dbg !15772 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %i.addr = alloca i32, align 4
  %set_color.addr = alloca void (%struct.vc_data*, %struct.rgb*)*, align 8
  %c = alloca %struct.rgb, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15785, metadata !DIExpression()), !dbg !15786
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !15787, metadata !DIExpression()), !dbg !15788
  store void (%struct.vc_data*, %struct.rgb*)* %set_color, void (%struct.vc_data*, %struct.rgb*)** %set_color.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.vc_data*, %struct.rgb*)** %set_color.addr, metadata !15789, metadata !DIExpression()), !dbg !15790
  call void @llvm.dbg.declare(metadata %struct.rgb* %c, metadata !15791, metadata !DIExpression()), !dbg !15792
  %0 = load i32, i32* %i.addr, align 4, !dbg !15793
  %inc = add i32 %0, 1, !dbg !15793
  store i32 %inc, i32* %i.addr, align 4, !dbg !15793
  %1 = load i32, i32* %i.addr, align 4, !dbg !15794
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15796
  %vc_npar = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 30, !dbg !15797
  %3 = load i32, i32* %vc_npar, align 8, !dbg !15797
  %cmp = icmp ugt i32 %1, %3, !dbg !15798
  br i1 %cmp, label %if.then, label %if.end, !dbg !15799

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %i.addr, align 4, !dbg !15800
  store i32 %4, i32* %retval, align 4, !dbg !15801
  br label %return, !dbg !15801

if.end:                                           ; preds = %entry
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15802
  %vc_par = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 31, !dbg !15804
  %6 = load i32, i32* %i.addr, align 4, !dbg !15805
  %idxprom = sext i32 %6 to i64, !dbg !15802
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %vc_par, i64 0, i64 %idxprom, !dbg !15802
  %7 = load i32, i32* %arrayidx, align 4, !dbg !15802
  %cmp1 = icmp eq i32 %7, 5, !dbg !15806
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !15807

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32, i32* %i.addr, align 4, !dbg !15808
  %add = add i32 %8, 1, !dbg !15809
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15810
  %vc_npar2 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 30, !dbg !15811
  %10 = load i32, i32* %vc_npar2, align 8, !dbg !15811
  %cmp3 = icmp ule i32 %add, %10, !dbg !15812
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !15813

if.then4:                                         ; preds = %land.lhs.true
  %11 = load i32, i32* %i.addr, align 4, !dbg !15814
  %inc5 = add i32 %11, 1, !dbg !15814
  store i32 %inc5, i32* %i.addr, align 4, !dbg !15814
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15816
  %vc_par6 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %12, i32 0, i32 31, !dbg !15817
  %13 = load i32, i32* %i.addr, align 4, !dbg !15818
  %idxprom7 = sext i32 %13 to i64, !dbg !15816
  %arrayidx8 = getelementptr [16 x i32], [16 x i32]* %vc_par6, i64 0, i64 %idxprom7, !dbg !15816
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !15816
  call void @rgb_from_256(i32 %14, %struct.rgb* %c) #13, !dbg !15819
  br label %if.end35, !dbg !15820

if.else:                                          ; preds = %land.lhs.true, %if.end
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15821
  %vc_par9 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 31, !dbg !15823
  %16 = load i32, i32* %i.addr, align 4, !dbg !15824
  %idxprom10 = sext i32 %16 to i64, !dbg !15821
  %arrayidx11 = getelementptr [16 x i32], [16 x i32]* %vc_par9, i64 0, i64 %idxprom10, !dbg !15821
  %17 = load i32, i32* %arrayidx11, align 4, !dbg !15821
  %cmp12 = icmp eq i32 %17, 2, !dbg !15825
  br i1 %cmp12, label %land.lhs.true13, label %if.else33, !dbg !15826

land.lhs.true13:                                  ; preds = %if.else
  %18 = load i32, i32* %i.addr, align 4, !dbg !15827
  %add14 = add i32 %18, 3, !dbg !15828
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15829
  %vc_npar15 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %19, i32 0, i32 30, !dbg !15830
  %20 = load i32, i32* %vc_npar15, align 8, !dbg !15830
  %cmp16 = icmp ule i32 %add14, %20, !dbg !15831
  br i1 %cmp16, label %if.then17, label %if.else33, !dbg !15832

if.then17:                                        ; preds = %land.lhs.true13
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15833
  %vc_par18 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %21, i32 0, i32 31, !dbg !15835
  %22 = load i32, i32* %i.addr, align 4, !dbg !15836
  %add19 = add i32 %22, 1, !dbg !15837
  %idxprom20 = sext i32 %add19 to i64, !dbg !15833
  %arrayidx21 = getelementptr [16 x i32], [16 x i32]* %vc_par18, i64 0, i64 %idxprom20, !dbg !15833
  %23 = load i32, i32* %arrayidx21, align 4, !dbg !15833
  %conv = trunc i32 %23 to i8, !dbg !15833
  %r = getelementptr inbounds %struct.rgb, %struct.rgb* %c, i32 0, i32 0, !dbg !15838
  store i8 %conv, i8* %r, align 1, !dbg !15839
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15840
  %vc_par22 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %24, i32 0, i32 31, !dbg !15841
  %25 = load i32, i32* %i.addr, align 4, !dbg !15842
  %add23 = add i32 %25, 2, !dbg !15843
  %idxprom24 = sext i32 %add23 to i64, !dbg !15840
  %arrayidx25 = getelementptr [16 x i32], [16 x i32]* %vc_par22, i64 0, i64 %idxprom24, !dbg !15840
  %26 = load i32, i32* %arrayidx25, align 4, !dbg !15840
  %conv26 = trunc i32 %26 to i8, !dbg !15840
  %g = getelementptr inbounds %struct.rgb, %struct.rgb* %c, i32 0, i32 1, !dbg !15844
  store i8 %conv26, i8* %g, align 1, !dbg !15845
  %27 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15846
  %vc_par27 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %27, i32 0, i32 31, !dbg !15847
  %28 = load i32, i32* %i.addr, align 4, !dbg !15848
  %add28 = add i32 %28, 3, !dbg !15849
  %idxprom29 = sext i32 %add28 to i64, !dbg !15846
  %arrayidx30 = getelementptr [16 x i32], [16 x i32]* %vc_par27, i64 0, i64 %idxprom29, !dbg !15846
  %29 = load i32, i32* %arrayidx30, align 4, !dbg !15846
  %conv31 = trunc i32 %29 to i8, !dbg !15846
  %b = getelementptr inbounds %struct.rgb, %struct.rgb* %c, i32 0, i32 2, !dbg !15850
  store i8 %conv31, i8* %b, align 1, !dbg !15851
  %30 = load i32, i32* %i.addr, align 4, !dbg !15852
  %add32 = add i32 %30, 3, !dbg !15852
  store i32 %add32, i32* %i.addr, align 4, !dbg !15852
  br label %if.end34, !dbg !15853

if.else33:                                        ; preds = %land.lhs.true13, %if.else
  %31 = load i32, i32* %i.addr, align 4, !dbg !15854
  store i32 %31, i32* %retval, align 4, !dbg !15855
  br label %return, !dbg !15855

if.end34:                                         ; preds = %if.then17
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then4
  %32 = load void (%struct.vc_data*, %struct.rgb*)*, void (%struct.vc_data*, %struct.rgb*)** %set_color.addr, align 8, !dbg !15856
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15857
  call void %32(%struct.vc_data* %33, %struct.rgb* %c) #13, !dbg !15856
  %34 = load i32, i32* %i.addr, align 4, !dbg !15858
  store i32 %34, i32* %retval, align 4, !dbg !15859
  br label %return, !dbg !15859

return:                                           ; preds = %if.end35, %if.else33, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !15860
  ret i32 %35, !dbg !15860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rgb_foreground(%struct.vc_data* %vc, %struct.rgb* %c) #0 !dbg !15861 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %c.addr = alloca %struct.rgb*, align 8
  %hue = alloca i8, align 1
  %max = alloca i8, align 1
  %__UNIQUE_ID___x259 = alloca i8, align 1
  %__UNIQUE_ID___x257 = alloca i8, align 1
  %__UNIQUE_ID___y258 = alloca i8, align 1
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___y260 = alloca i8, align 1
  %tmp6 = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15862, metadata !DIExpression()), !dbg !15863
  store %struct.rgb* %c, %struct.rgb** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rgb** %c.addr, metadata !15864, metadata !DIExpression()), !dbg !15865
  call void @llvm.dbg.declare(metadata i8* %hue, metadata !15866, metadata !DIExpression()), !dbg !15867
  store i8 0, i8* %hue, align 1, !dbg !15867
  call void @llvm.dbg.declare(metadata i8* %max, metadata !15868, metadata !DIExpression()), !dbg !15869
  call void @llvm.dbg.declare(metadata i8* %__UNIQUE_ID___x259, metadata !15870, metadata !DIExpression()), !dbg !15872
  call void @llvm.dbg.declare(metadata i8* %__UNIQUE_ID___x257, metadata !15873, metadata !DIExpression()), !dbg !15876
  %0 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15876
  %r = getelementptr inbounds %struct.rgb, %struct.rgb* %0, i32 0, i32 0, !dbg !15876
  %1 = load i8, i8* %r, align 1, !dbg !15876
  store i8 %1, i8* %__UNIQUE_ID___x257, align 1, !dbg !15876
  call void @llvm.dbg.declare(metadata i8* %__UNIQUE_ID___y258, metadata !15877, metadata !DIExpression()), !dbg !15876
  %2 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15876
  %g = getelementptr inbounds %struct.rgb, %struct.rgb* %2, i32 0, i32 1, !dbg !15876
  %3 = load i8, i8* %g, align 1, !dbg !15876
  store i8 %3, i8* %__UNIQUE_ID___y258, align 1, !dbg !15876
  %4 = load i8, i8* %__UNIQUE_ID___x257, align 1, !dbg !15876
  %conv = zext i8 %4 to i32, !dbg !15876
  %5 = load i8, i8* %__UNIQUE_ID___y258, align 1, !dbg !15876
  %conv1 = zext i8 %5 to i32, !dbg !15876
  %cmp = icmp sgt i32 %conv, %conv1, !dbg !15876
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15876

cond.true:                                        ; preds = %entry
  %6 = load i8, i8* %__UNIQUE_ID___x257, align 1, !dbg !15876
  %conv3 = zext i8 %6 to i32, !dbg !15876
  br label %cond.end, !dbg !15876

cond.false:                                       ; preds = %entry
  %7 = load i8, i8* %__UNIQUE_ID___y258, align 1, !dbg !15876
  %conv4 = zext i8 %7 to i32, !dbg !15876
  br label %cond.end, !dbg !15876

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv3, %cond.true ], [ %conv4, %cond.false ], !dbg !15876
  store i32 %cond, i32* %tmp, align 4, !dbg !15876
  %8 = load i32, i32* %tmp, align 4, !dbg !15876
  %conv5 = trunc i32 %8 to i8, !dbg !15872
  store i8 %conv5, i8* %__UNIQUE_ID___x259, align 1, !dbg !15872
  call void @llvm.dbg.declare(metadata i8* %__UNIQUE_ID___y260, metadata !15878, metadata !DIExpression()), !dbg !15872
  %9 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15872
  %b = getelementptr inbounds %struct.rgb, %struct.rgb* %9, i32 0, i32 2, !dbg !15872
  %10 = load i8, i8* %b, align 1, !dbg !15872
  store i8 %10, i8* %__UNIQUE_ID___y260, align 1, !dbg !15872
  %11 = load i8, i8* %__UNIQUE_ID___x259, align 1, !dbg !15872
  %conv7 = zext i8 %11 to i32, !dbg !15872
  %12 = load i8, i8* %__UNIQUE_ID___y260, align 1, !dbg !15872
  %conv8 = zext i8 %12 to i32, !dbg !15872
  %cmp9 = icmp sgt i32 %conv7, %conv8, !dbg !15872
  br i1 %cmp9, label %cond.true11, label %cond.false13, !dbg !15872

cond.true11:                                      ; preds = %cond.end
  %13 = load i8, i8* %__UNIQUE_ID___x259, align 1, !dbg !15872
  %conv12 = zext i8 %13 to i32, !dbg !15872
  br label %cond.end15, !dbg !15872

cond.false13:                                     ; preds = %cond.end
  %14 = load i8, i8* %__UNIQUE_ID___y260, align 1, !dbg !15872
  %conv14 = zext i8 %14 to i32, !dbg !15872
  br label %cond.end15, !dbg !15872

cond.end15:                                       ; preds = %cond.false13, %cond.true11
  %cond16 = phi i32 [ %conv12, %cond.true11 ], [ %conv14, %cond.false13 ], !dbg !15872
  store i32 %cond16, i32* %tmp6, align 4, !dbg !15872
  %15 = load i32, i32* %tmp6, align 4, !dbg !15872
  %conv17 = trunc i32 %15 to i8, !dbg !15879
  store i8 %conv17, i8* %max, align 1, !dbg !15869
  %16 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15880
  %r18 = getelementptr inbounds %struct.rgb, %struct.rgb* %16, i32 0, i32 0, !dbg !15882
  %17 = load i8, i8* %r18, align 1, !dbg !15882
  %conv19 = zext i8 %17 to i32, !dbg !15880
  %18 = load i8, i8* %max, align 1, !dbg !15883
  %conv20 = zext i8 %18 to i32, !dbg !15883
  %div = sdiv i32 %conv20, 2, !dbg !15884
  %cmp21 = icmp sgt i32 %conv19, %div, !dbg !15885
  br i1 %cmp21, label %if.then, label %if.end, !dbg !15886

if.then:                                          ; preds = %cond.end15
  %19 = load i8, i8* %hue, align 1, !dbg !15887
  %conv23 = zext i8 %19 to i32, !dbg !15887
  %or = or i32 %conv23, 4, !dbg !15887
  %conv24 = trunc i32 %or to i8, !dbg !15887
  store i8 %conv24, i8* %hue, align 1, !dbg !15887
  br label %if.end, !dbg !15888

if.end:                                           ; preds = %if.then, %cond.end15
  %20 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15889
  %g25 = getelementptr inbounds %struct.rgb, %struct.rgb* %20, i32 0, i32 1, !dbg !15891
  %21 = load i8, i8* %g25, align 1, !dbg !15891
  %conv26 = zext i8 %21 to i32, !dbg !15889
  %22 = load i8, i8* %max, align 1, !dbg !15892
  %conv27 = zext i8 %22 to i32, !dbg !15892
  %div28 = sdiv i32 %conv27, 2, !dbg !15893
  %cmp29 = icmp sgt i32 %conv26, %div28, !dbg !15894
  br i1 %cmp29, label %if.then31, label %if.end35, !dbg !15895

if.then31:                                        ; preds = %if.end
  %23 = load i8, i8* %hue, align 1, !dbg !15896
  %conv32 = zext i8 %23 to i32, !dbg !15896
  %or33 = or i32 %conv32, 2, !dbg !15896
  %conv34 = trunc i32 %or33 to i8, !dbg !15896
  store i8 %conv34, i8* %hue, align 1, !dbg !15896
  br label %if.end35, !dbg !15897

if.end35:                                         ; preds = %if.then31, %if.end
  %24 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15898
  %b36 = getelementptr inbounds %struct.rgb, %struct.rgb* %24, i32 0, i32 2, !dbg !15900
  %25 = load i8, i8* %b36, align 1, !dbg !15900
  %conv37 = zext i8 %25 to i32, !dbg !15898
  %26 = load i8, i8* %max, align 1, !dbg !15901
  %conv38 = zext i8 %26 to i32, !dbg !15901
  %div39 = sdiv i32 %conv38, 2, !dbg !15902
  %cmp40 = icmp sgt i32 %conv37, %div39, !dbg !15903
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !15904

if.then42:                                        ; preds = %if.end35
  %27 = load i8, i8* %hue, align 1, !dbg !15905
  %conv43 = zext i8 %27 to i32, !dbg !15905
  %or44 = or i32 %conv43, 1, !dbg !15905
  %conv45 = trunc i32 %or44 to i8, !dbg !15905
  store i8 %conv45, i8* %hue, align 1, !dbg !15905
  br label %if.end46, !dbg !15906

if.end46:                                         ; preds = %if.then42, %if.end35
  %28 = load i8, i8* %hue, align 1, !dbg !15907
  %conv47 = zext i8 %28 to i32, !dbg !15907
  %cmp48 = icmp eq i32 %conv47, 7, !dbg !15909
  br i1 %cmp48, label %land.lhs.true, label %if.else, !dbg !15910

land.lhs.true:                                    ; preds = %if.end46
  %29 = load i8, i8* %max, align 1, !dbg !15911
  %conv50 = zext i8 %29 to i32, !dbg !15911
  %cmp51 = icmp sle i32 %conv50, 85, !dbg !15912
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !15913

if.then53:                                        ; preds = %land.lhs.true
  store i8 0, i8* %hue, align 1, !dbg !15914
  %30 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15916
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %30, i32 0, i32 1, !dbg !15917
  %intensity = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 5, !dbg !15918
  store i32 2, i32* %intensity, align 4, !dbg !15919
  br label %if.end64, !dbg !15920

if.else:                                          ; preds = %land.lhs.true, %if.end46
  %31 = load i8, i8* %max, align 1, !dbg !15921
  %conv54 = zext i8 %31 to i32, !dbg !15921
  %cmp55 = icmp sgt i32 %conv54, 170, !dbg !15923
  br i1 %cmp55, label %if.then57, label %if.else60, !dbg !15924

if.then57:                                        ; preds = %if.else
  %32 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15925
  %state58 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %32, i32 0, i32 1, !dbg !15926
  %intensity59 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state58, i32 0, i32 5, !dbg !15927
  store i32 2, i32* %intensity59, align 4, !dbg !15928
  br label %if.end63, !dbg !15925

if.else60:                                        ; preds = %if.else
  %33 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15929
  %state61 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %33, i32 0, i32 1, !dbg !15930
  %intensity62 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state61, i32 0, i32 5, !dbg !15931
  store i32 1, i32* %intensity62, align 4, !dbg !15932
  br label %if.end63

if.end63:                                         ; preds = %if.else60, %if.then57
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then53
  %34 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15933
  %state65 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %34, i32 0, i32 1, !dbg !15934
  %color = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state65, i32 0, i32 2, !dbg !15935
  %35 = load i8, i8* %color, align 8, !dbg !15935
  %conv66 = zext i8 %35 to i32, !dbg !15933
  %and = and i32 %conv66, 240, !dbg !15936
  %36 = load i8, i8* %hue, align 1, !dbg !15937
  %conv67 = zext i8 %36 to i32, !dbg !15937
  %or68 = or i32 %and, %conv67, !dbg !15938
  %conv69 = trunc i32 %or68 to i8, !dbg !15939
  %37 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15940
  %state70 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %37, i32 0, i32 1, !dbg !15941
  %color71 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state70, i32 0, i32 2, !dbg !15942
  store i8 %conv69, i8* %color71, align 8, !dbg !15943
  ret void, !dbg !15944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rgb_background(%struct.vc_data* %vc, %struct.rgb* %c) #0 !dbg !15945 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %c.addr = alloca %struct.rgb*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !15946, metadata !DIExpression()), !dbg !15947
  store %struct.rgb* %c, %struct.rgb** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rgb** %c.addr, metadata !15948, metadata !DIExpression()), !dbg !15949
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15950
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 1, !dbg !15951
  %color = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 2, !dbg !15952
  %1 = load i8, i8* %color, align 8, !dbg !15952
  %conv = zext i8 %1 to i32, !dbg !15950
  %and = and i32 %conv, 15, !dbg !15953
  %2 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15954
  %r = getelementptr inbounds %struct.rgb, %struct.rgb* %2, i32 0, i32 0, !dbg !15955
  %3 = load i8, i8* %r, align 1, !dbg !15955
  %conv1 = zext i8 %3 to i32, !dbg !15954
  %and2 = and i32 %conv1, 128, !dbg !15956
  %shr = ashr i32 %and2, 1, !dbg !15957
  %or = or i32 %and, %shr, !dbg !15958
  %4 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15959
  %g = getelementptr inbounds %struct.rgb, %struct.rgb* %4, i32 0, i32 1, !dbg !15960
  %5 = load i8, i8* %g, align 1, !dbg !15960
  %conv3 = zext i8 %5 to i32, !dbg !15959
  %and4 = and i32 %conv3, 128, !dbg !15961
  %shr5 = ashr i32 %and4, 2, !dbg !15962
  %or6 = or i32 %or, %shr5, !dbg !15963
  %6 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15964
  %b = getelementptr inbounds %struct.rgb, %struct.rgb* %6, i32 0, i32 2, !dbg !15965
  %7 = load i8, i8* %b, align 1, !dbg !15965
  %conv7 = zext i8 %7 to i32, !dbg !15964
  %and8 = and i32 %conv7, 128, !dbg !15966
  %shr9 = ashr i32 %and8, 3, !dbg !15967
  %or10 = or i32 %or6, %shr9, !dbg !15968
  %conv11 = trunc i32 %or10 to i8, !dbg !15969
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !15970
  %state12 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 1, !dbg !15971
  %color13 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state12, i32 0, i32 2, !dbg !15972
  store i8 %conv11, i8* %color13, align 8, !dbg !15973
  ret void, !dbg !15974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rgb_from_256(i32 %i, %struct.rgb* %c) #0 !dbg !15975 {
entry:
  %i.addr = alloca i32, align 4
  %c.addr = alloca %struct.rgb*, align 8
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !15979, metadata !DIExpression()), !dbg !15980
  store %struct.rgb* %c, %struct.rgb** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rgb** %c.addr, metadata !15981, metadata !DIExpression()), !dbg !15982
  %0 = load i32, i32* %i.addr, align 4, !dbg !15983
  %cmp = icmp slt i32 %0, 8, !dbg !15985
  br i1 %cmp, label %if.then, label %if.else, !dbg !15986

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %i.addr, align 4, !dbg !15987
  %and = and i32 %1, 1, !dbg !15989
  %tobool = icmp ne i32 %and, 0, !dbg !15987
  %2 = zext i1 %tobool to i64, !dbg !15987
  %cond = select i1 %tobool, i32 170, i32 0, !dbg !15987
  %conv = trunc i32 %cond to i8, !dbg !15987
  %3 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15990
  %r = getelementptr inbounds %struct.rgb, %struct.rgb* %3, i32 0, i32 0, !dbg !15991
  store i8 %conv, i8* %r, align 1, !dbg !15992
  %4 = load i32, i32* %i.addr, align 4, !dbg !15993
  %and1 = and i32 %4, 2, !dbg !15994
  %tobool2 = icmp ne i32 %and1, 0, !dbg !15993
  %5 = zext i1 %tobool2 to i64, !dbg !15993
  %cond3 = select i1 %tobool2, i32 170, i32 0, !dbg !15993
  %conv4 = trunc i32 %cond3 to i8, !dbg !15993
  %6 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !15995
  %g = getelementptr inbounds %struct.rgb, %struct.rgb* %6, i32 0, i32 1, !dbg !15996
  store i8 %conv4, i8* %g, align 1, !dbg !15997
  %7 = load i32, i32* %i.addr, align 4, !dbg !15998
  %and5 = and i32 %7, 4, !dbg !15999
  %tobool6 = icmp ne i32 %and5, 0, !dbg !15998
  %8 = zext i1 %tobool6 to i64, !dbg !15998
  %cond7 = select i1 %tobool6, i32 170, i32 0, !dbg !15998
  %conv8 = trunc i32 %cond7 to i8, !dbg !15998
  %9 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !16000
  %b = getelementptr inbounds %struct.rgb, %struct.rgb* %9, i32 0, i32 2, !dbg !16001
  store i8 %conv8, i8* %b, align 1, !dbg !16002
  br label %if.end54, !dbg !16003

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %i.addr, align 4, !dbg !16004
  %cmp9 = icmp slt i32 %10, 16, !dbg !16006
  br i1 %cmp9, label %if.then11, label %if.else27, !dbg !16007

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %i.addr, align 4, !dbg !16008
  %and12 = and i32 %11, 1, !dbg !16010
  %tobool13 = icmp ne i32 %and12, 0, !dbg !16008
  %12 = zext i1 %tobool13 to i64, !dbg !16008
  %cond14 = select i1 %tobool13, i32 255, i32 85, !dbg !16008
  %conv15 = trunc i32 %cond14 to i8, !dbg !16008
  %13 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !16011
  %r16 = getelementptr inbounds %struct.rgb, %struct.rgb* %13, i32 0, i32 0, !dbg !16012
  store i8 %conv15, i8* %r16, align 1, !dbg !16013
  %14 = load i32, i32* %i.addr, align 4, !dbg !16014
  %and17 = and i32 %14, 2, !dbg !16015
  %tobool18 = icmp ne i32 %and17, 0, !dbg !16014
  %15 = zext i1 %tobool18 to i64, !dbg !16014
  %cond19 = select i1 %tobool18, i32 255, i32 85, !dbg !16014
  %conv20 = trunc i32 %cond19 to i8, !dbg !16014
  %16 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !16016
  %g21 = getelementptr inbounds %struct.rgb, %struct.rgb* %16, i32 0, i32 1, !dbg !16017
  store i8 %conv20, i8* %g21, align 1, !dbg !16018
  %17 = load i32, i32* %i.addr, align 4, !dbg !16019
  %and22 = and i32 %17, 4, !dbg !16020
  %tobool23 = icmp ne i32 %and22, 0, !dbg !16019
  %18 = zext i1 %tobool23 to i64, !dbg !16019
  %cond24 = select i1 %tobool23, i32 255, i32 85, !dbg !16019
  %conv25 = trunc i32 %cond24 to i8, !dbg !16019
  %19 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !16021
  %b26 = getelementptr inbounds %struct.rgb, %struct.rgb* %19, i32 0, i32 2, !dbg !16022
  store i8 %conv25, i8* %b26, align 1, !dbg !16023
  br label %if.end53, !dbg !16024

if.else27:                                        ; preds = %if.else
  %20 = load i32, i32* %i.addr, align 4, !dbg !16025
  %cmp28 = icmp slt i32 %20, 232, !dbg !16027
  br i1 %cmp28, label %if.then30, label %if.else46, !dbg !16028

if.then30:                                        ; preds = %if.else27
  %21 = load i32, i32* %i.addr, align 4, !dbg !16029
  %sub = sub i32 %21, 16, !dbg !16031
  %div = sdiv i32 %sub, 36, !dbg !16032
  %mul = mul i32 %div, 85, !dbg !16033
  %div31 = sdiv i32 %mul, 2, !dbg !16034
  %conv32 = trunc i32 %div31 to i8, !dbg !16035
  %22 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !16036
  %r33 = getelementptr inbounds %struct.rgb, %struct.rgb* %22, i32 0, i32 0, !dbg !16037
  store i8 %conv32, i8* %r33, align 1, !dbg !16038
  %23 = load i32, i32* %i.addr, align 4, !dbg !16039
  %sub34 = sub i32 %23, 16, !dbg !16040
  %div35 = sdiv i32 %sub34, 6, !dbg !16041
  %rem = srem i32 %div35, 6, !dbg !16042
  %mul36 = mul i32 %rem, 85, !dbg !16043
  %div37 = sdiv i32 %mul36, 2, !dbg !16044
  %conv38 = trunc i32 %div37 to i8, !dbg !16045
  %24 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !16046
  %g39 = getelementptr inbounds %struct.rgb, %struct.rgb* %24, i32 0, i32 1, !dbg !16047
  store i8 %conv38, i8* %g39, align 1, !dbg !16048
  %25 = load i32, i32* %i.addr, align 4, !dbg !16049
  %sub40 = sub i32 %25, 16, !dbg !16050
  %rem41 = srem i32 %sub40, 6, !dbg !16051
  %mul42 = mul i32 %rem41, 85, !dbg !16052
  %div43 = sdiv i32 %mul42, 2, !dbg !16053
  %conv44 = trunc i32 %div43 to i8, !dbg !16054
  %26 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !16055
  %b45 = getelementptr inbounds %struct.rgb, %struct.rgb* %26, i32 0, i32 2, !dbg !16056
  store i8 %conv44, i8* %b45, align 1, !dbg !16057
  br label %if.end, !dbg !16058

if.else46:                                        ; preds = %if.else27
  %27 = load i32, i32* %i.addr, align 4, !dbg !16059
  %mul47 = mul i32 %27, 10, !dbg !16060
  %sub48 = sub i32 %mul47, 2312, !dbg !16061
  %conv49 = trunc i32 %sub48 to i8, !dbg !16059
  %28 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !16062
  %b50 = getelementptr inbounds %struct.rgb, %struct.rgb* %28, i32 0, i32 2, !dbg !16063
  store i8 %conv49, i8* %b50, align 1, !dbg !16064
  %29 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !16065
  %g51 = getelementptr inbounds %struct.rgb, %struct.rgb* %29, i32 0, i32 1, !dbg !16066
  store i8 %conv49, i8* %g51, align 1, !dbg !16067
  %30 = load %struct.rgb*, %struct.rgb** %c.addr, align 8, !dbg !16068
  %r52 = getelementptr inbounds %struct.rgb, %struct.rgb* %30, i32 0, i32 0, !dbg !16069
  store i8 %conv49, i8* %r52, align 1, !dbg !16070
  br label %if.end

if.end:                                           ; preds = %if.else46, %if.then30
  br label %if.end53

if.end53:                                         ; preds = %if.end, %if.then11
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then
  ret void, !dbg !16071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @insert_char(%struct.vc_data* %vc, i32 %nr) #0 !dbg !16072 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %nr.addr = alloca i32, align 4
  %p = alloca i16*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !16073, metadata !DIExpression()), !dbg !16074
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !16075, metadata !DIExpression()), !dbg !16076
  call void @llvm.dbg.declare(metadata i16** %p, metadata !16077, metadata !DIExpression()), !dbg !16078
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16079
  %vc_pos = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 25, !dbg !16080
  %1 = load i64, i64* %vc_pos, align 8, !dbg !16080
  %2 = inttoptr i64 %1 to i16*, !dbg !16081
  store i16* %2, i16** %p, align 8, !dbg !16078
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16082
  %4 = load i32, i32* %nr.addr, align 4, !dbg !16083
  call void @vc_uniscr_insert(%struct.vc_data* %3, i32 %4) #13, !dbg !16084
  %5 = load i16*, i16** %p, align 8, !dbg !16085
  %6 = load i32, i32* %nr.addr, align 4, !dbg !16086
  %idx.ext = zext i32 %6 to i64, !dbg !16087
  %add.ptr = getelementptr i16, i16* %5, i64 %idx.ext, !dbg !16087
  %7 = load i16*, i16** %p, align 8, !dbg !16088
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16089
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %8, i32 0, i32 4, !dbg !16090
  %9 = load i32, i32* %vc_cols, align 4, !dbg !16090
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16091
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %10, i32 0, i32 1, !dbg !16092
  %x = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 0, !dbg !16093
  %11 = load i32, i32* %x, align 8, !dbg !16093
  %sub = sub i32 %9, %11, !dbg !16094
  %12 = load i32, i32* %nr.addr, align 4, !dbg !16095
  %sub1 = sub i32 %sub, %12, !dbg !16096
  %mul = mul i32 %sub1, 2, !dbg !16097
  call void @scr_memmovew(i16* %add.ptr, i16* %7, i32 %mul) #13, !dbg !16098
  %13 = load i16*, i16** %p, align 8, !dbg !16099
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16100
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, %struct.vc_data* %14, i32 0, i32 28, !dbg !16101
  %15 = load i16, i16* %vc_video_erase_char, align 8, !dbg !16101
  %16 = load i32, i32* %nr.addr, align 4, !dbg !16102
  %mul2 = mul i32 %16, 2, !dbg !16103
  call void @scr_memsetw(i16* %13, i16 zeroext %15, i32 %mul2) #13, !dbg !16104
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16105
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, %struct.vc_data* %17, i32 0, i32 36, !dbg !16106
  %bf.load = load i16, i16* %vc_need_wrap, align 8, !dbg !16107
  %bf.clear = and i16 %bf.load, -1025, !dbg !16107
  store i16 %bf.clear, i16* %vc_need_wrap, align 8, !dbg !16107
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16108
  %call = call zeroext i1 @con_should_update(%struct.vc_data* %18) #13, !dbg !16110
  br i1 %call, label %if.then, label %if.end, !dbg !16111

if.then:                                          ; preds = %entry
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16112
  %20 = load i16*, i16** %p, align 8, !dbg !16113
  %21 = ptrtoint i16* %20 to i64, !dbg !16114
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16115
  %vc_cols3 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %22, i32 0, i32 4, !dbg !16116
  %23 = load i32, i32* %vc_cols3, align 4, !dbg !16116
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16117
  %state4 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %24, i32 0, i32 1, !dbg !16118
  %x5 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state4, i32 0, i32 0, !dbg !16119
  %25 = load i32, i32* %x5, align 8, !dbg !16119
  %sub6 = sub i32 %23, %25, !dbg !16120
  call void @do_update_region(%struct.vc_data* %19, i64 %21, i32 %sub6) #13, !dbg !16121
  br label %if.end, !dbg !16121

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !16122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vc_uniscr_insert(%struct.vc_data* %vc, i32 %nr) #0 !dbg !16123 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %nr.addr = alloca i32, align 4
  %uniscr = alloca %struct.uni_screen*, align 8
  %ln = alloca i32*, align 8
  %x = alloca i32, align 4
  %cols = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !16124, metadata !DIExpression()), !dbg !16125
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !16126, metadata !DIExpression()), !dbg !16127
  call void @llvm.dbg.declare(metadata %struct.uni_screen** %uniscr, metadata !16128, metadata !DIExpression()), !dbg !16129
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16130
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 49, !dbg !16130
  %1 = load %struct.uni_screen*, %struct.uni_screen** %vc_uni_screen, align 8, !dbg !16130
  store %struct.uni_screen* %1, %struct.uni_screen** %uniscr, align 8, !dbg !16129
  %2 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !16131
  %tobool = icmp ne %struct.uni_screen* %2, null, !dbg !16131
  br i1 %tobool, label %if.then, label %if.end, !dbg !16133

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %ln, metadata !16134, metadata !DIExpression()), !dbg !16136
  %3 = load %struct.uni_screen*, %struct.uni_screen** %uniscr, align 8, !dbg !16137
  %lines = getelementptr inbounds %struct.uni_screen, %struct.uni_screen* %3, i32 0, i32 0, !dbg !16138
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16139
  %state = getelementptr inbounds %struct.vc_data, %struct.vc_data* %4, i32 0, i32 1, !dbg !16140
  %y = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state, i32 0, i32 1, !dbg !16141
  %5 = load i32, i32* %y, align 4, !dbg !16141
  %idxprom = zext i32 %5 to i64, !dbg !16137
  %arrayidx = getelementptr [0 x i32*], [0 x i32*]* %lines, i64 0, i64 %idxprom, !dbg !16137
  %6 = load i32*, i32** %arrayidx, align 8, !dbg !16137
  store i32* %6, i32** %ln, align 8, !dbg !16136
  call void @llvm.dbg.declare(metadata i32* %x, metadata !16142, metadata !DIExpression()), !dbg !16143
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16144
  %state1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 1, !dbg !16145
  %x2 = getelementptr inbounds %struct.vc_state, %struct.vc_state* %state1, i32 0, i32 0, !dbg !16146
  %8 = load i32, i32* %x2, align 8, !dbg !16146
  store i32 %8, i32* %x, align 4, !dbg !16143
  call void @llvm.dbg.declare(metadata i32* %cols, metadata !16147, metadata !DIExpression()), !dbg !16148
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16149
  %vc_cols = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 4, !dbg !16150
  %10 = load i32, i32* %vc_cols, align 4, !dbg !16150
  store i32 %10, i32* %cols, align 4, !dbg !16148
  %11 = load i32*, i32** %ln, align 8, !dbg !16151
  %12 = load i32, i32* %x, align 4, !dbg !16152
  %13 = load i32, i32* %nr.addr, align 4, !dbg !16153
  %add = add i32 %12, %13, !dbg !16154
  %idxprom3 = zext i32 %add to i64, !dbg !16151
  %arrayidx4 = getelementptr i32, i32* %11, i64 %idxprom3, !dbg !16151
  %14 = bitcast i32* %arrayidx4 to i8*, !dbg !16155
  %15 = load i32*, i32** %ln, align 8, !dbg !16156
  %16 = load i32, i32* %x, align 4, !dbg !16157
  %idxprom5 = zext i32 %16 to i64, !dbg !16156
  %arrayidx6 = getelementptr i32, i32* %15, i64 %idxprom5, !dbg !16156
  %17 = bitcast i32* %arrayidx6 to i8*, !dbg !16155
  %18 = load i32, i32* %cols, align 4, !dbg !16158
  %19 = load i32, i32* %x, align 4, !dbg !16159
  %sub = sub i32 %18, %19, !dbg !16160
  %20 = load i32, i32* %nr.addr, align 4, !dbg !16161
  %sub7 = sub i32 %sub, %20, !dbg !16162
  %conv = zext i32 %sub7 to i64, !dbg !16163
  %mul = mul i64 %conv, 4, !dbg !16164
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %17, i64 %mul, i1 false), !dbg !16155
  %21 = load i32*, i32** %ln, align 8, !dbg !16165
  %22 = load i32, i32* %x, align 4, !dbg !16166
  %idxprom8 = zext i32 %22 to i64, !dbg !16165
  %arrayidx9 = getelementptr i32, i32* %21, i64 %idxprom8, !dbg !16165
  %23 = load i32, i32* %nr.addr, align 4, !dbg !16167
  %conv10 = zext i32 %23 to i64, !dbg !16167
  %call = call i8* @memset32(i32* %arrayidx9, i32 32, i64 %conv10) #13, !dbg !16168
  br label %if.end, !dbg !16169

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !16170
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !16171 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !16172, metadata !DIExpression()), !dbg !16173
  %0 = load i32, i32* %m.addr, align 4, !dbg !16174
  %conv = zext i32 %0 to i64, !dbg !16174
  %add = add i64 %conv, 4, !dbg !16175
  %sub = sub i64 %add, 1, !dbg !16176
  %div = sdiv i64 %sub, 4, !dbg !16177
  ret i64 %div, !dbg !16178
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_double_width(i32 %ucs) #0 !dbg !4792 {
entry:
  %retval = alloca i32, align 4
  %ucs.addr = alloca i32, align 4
  store i32 %ucs, i32* %ucs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ucs.addr, metadata !16179, metadata !DIExpression()), !dbg !16180
  %0 = load i32, i32* %ucs.addr, align 4, !dbg !16181
  %1 = load i32, i32* getelementptr inbounds ([12 x %struct.interval], [12 x %struct.interval]* @is_double_width.double_width, i64 0, i64 0, i32 0), align 16, !dbg !16183
  %cmp = icmp ult i32 %0, %1, !dbg !16184
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16185

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %ucs.addr, align 4, !dbg !16186
  %3 = load i32, i32* getelementptr inbounds ([12 x %struct.interval], [12 x %struct.interval]* @is_double_width.double_width, i64 0, i64 11, i32 1), align 4, !dbg !16187
  %cmp1 = icmp ugt i32 %2, %3, !dbg !16188
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16189

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !16190
  br label %return, !dbg !16190

if.end:                                           ; preds = %lor.lhs.false
  %4 = bitcast i32* %ucs.addr to i8*, !dbg !16191
  %call = call i8* @bsearch(i8* %4, i8* bitcast ([12 x %struct.interval]* @is_double_width.double_width to i8*), i64 12, i64 8, i32 (i8*, i8*)* @ucs_cmp) #13, !dbg !16192
  %cmp2 = icmp ne i8* %call, null, !dbg !16193
  %conv = zext i1 %cmp2 to i32, !dbg !16193
  store i32 %conv, i32* %retval, align 4, !dbg !16194
  br label %return, !dbg !16194

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !16195
  ret i32 %5, !dbg !16195
}

; Function Attrs: noredzone
declare dso_local i32 @conv_uni_to_pc(%struct.vc_data*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @vc_invert_attr(%struct.vc_data* %vc) #0 !dbg !16196 {
entry:
  %retval = alloca i8, align 1
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !16199, metadata !DIExpression()), !dbg !16200
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16201
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 36, !dbg !16203
  %bf.load = load i16, i16* %vc_can_do_color, align 8, !dbg !16203
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !16203
  %bf.clear = and i16 %bf.lshr, 1, !dbg !16203
  %bf.cast = zext i16 %bf.clear to i32, !dbg !16203
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !16201
  br i1 %tobool, label %if.end, label %if.then, !dbg !16204

if.then:                                          ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16205
  %vc_attr = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 17, !dbg !16206
  %2 = load i8, i8* %vc_attr, align 1, !dbg !16206
  %conv = zext i8 %2 to i32, !dbg !16205
  %xor = xor i32 %conv, 8, !dbg !16207
  %conv1 = trunc i32 %xor to i8, !dbg !16205
  store i8 %conv1, i8* %retval, align 1, !dbg !16208
  br label %return, !dbg !16208

if.end:                                           ; preds = %entry
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16209
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, %struct.vc_data* %3, i32 0, i32 26, !dbg !16211
  %4 = load i16, i16* %vc_hi_font_mask, align 8, !dbg !16211
  %conv2 = zext i16 %4 to i32, !dbg !16209
  %cmp = icmp eq i32 %conv2, 256, !dbg !16212
  br i1 %cmp, label %if.then4, label %if.end15, !dbg !16213

if.then4:                                         ; preds = %if.end
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16214
  %vc_attr5 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 17, !dbg !16215
  %6 = load i8, i8* %vc_attr5, align 1, !dbg !16215
  %conv6 = zext i8 %6 to i32, !dbg !16214
  %and = and i32 %conv6, 17, !dbg !16216
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16217
  %vc_attr7 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %7, i32 0, i32 17, !dbg !16218
  %8 = load i8, i8* %vc_attr7, align 1, !dbg !16218
  %conv8 = zext i8 %8 to i32, !dbg !16217
  %and9 = and i32 %conv8, 224, !dbg !16219
  %shr = ashr i32 %and9, 4, !dbg !16220
  %or = or i32 %and, %shr, !dbg !16221
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16222
  %vc_attr10 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %9, i32 0, i32 17, !dbg !16223
  %10 = load i8, i8* %vc_attr10, align 1, !dbg !16223
  %conv11 = zext i8 %10 to i32, !dbg !16222
  %and12 = and i32 %conv11, 14, !dbg !16224
  %shl = shl i32 %and12, 4, !dbg !16225
  %or13 = or i32 %or, %shl, !dbg !16226
  %conv14 = trunc i32 %or13 to i8, !dbg !16227
  store i8 %conv14, i8* %retval, align 1, !dbg !16228
  br label %return, !dbg !16228

if.end15:                                         ; preds = %if.end
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16229
  %vc_attr16 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %11, i32 0, i32 17, !dbg !16230
  %12 = load i8, i8* %vc_attr16, align 1, !dbg !16230
  %conv17 = zext i8 %12 to i32, !dbg !16229
  %and18 = and i32 %conv17, 136, !dbg !16231
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16232
  %vc_attr19 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 17, !dbg !16233
  %14 = load i8, i8* %vc_attr19, align 1, !dbg !16233
  %conv20 = zext i8 %14 to i32, !dbg !16232
  %and21 = and i32 %conv20, 112, !dbg !16234
  %shr22 = ashr i32 %and21, 4, !dbg !16235
  %or23 = or i32 %and18, %shr22, !dbg !16236
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !16237
  %vc_attr24 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %15, i32 0, i32 17, !dbg !16238
  %16 = load i8, i8* %vc_attr24, align 1, !dbg !16238
  %conv25 = zext i8 %16 to i32, !dbg !16237
  %and26 = and i32 %conv25, 7, !dbg !16239
  %shl27 = shl i32 %and26, 4, !dbg !16240
  %or28 = or i32 %or23, %shl27, !dbg !16241
  %conv29 = trunc i32 %or28 to i8, !dbg !16242
  store i8 %conv29, i8* %retval, align 1, !dbg !16243
  br label %return, !dbg !16243

return:                                           ; preds = %if.end15, %if.then4, %if.then
  %17 = load i8, i8* %retval, align 1, !dbg !16244
  ret i8 %17, !dbg !16244
}

; Function Attrs: noredzone
declare dso_local i8* @bsearch(i8*, i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ucs_cmp(i8* %key, i8* %elt) #0 !dbg !16245 {
entry:
  %retval = alloca i32, align 4
  %key.addr = alloca i8*, align 8
  %elt.addr = alloca i8*, align 8
  %ucs = alloca i32, align 4
  %e = alloca %struct.interval, align 4
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !16248, metadata !DIExpression()), !dbg !16249
  store i8* %elt, i8** %elt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %elt.addr, metadata !16250, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.declare(metadata i32* %ucs, metadata !16252, metadata !DIExpression()), !dbg !16253
  %0 = load i8*, i8** %key.addr, align 8, !dbg !16254
  %1 = bitcast i8* %0 to i32*, !dbg !16255
  %2 = load i32, i32* %1, align 4, !dbg !16256
  store i32 %2, i32* %ucs, align 4, !dbg !16253
  call void @llvm.dbg.declare(metadata %struct.interval* %e, metadata !16257, metadata !DIExpression()), !dbg !16258
  %3 = load i8*, i8** %elt.addr, align 8, !dbg !16259
  %4 = bitcast i8* %3 to %struct.interval*, !dbg !16260
  %5 = bitcast %struct.interval* %e to i8*, !dbg !16261
  %6 = bitcast %struct.interval* %4 to i8*, !dbg !16261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 8, i1 false), !dbg !16261
  %7 = load i32, i32* %ucs, align 4, !dbg !16262
  %last = getelementptr inbounds %struct.interval, %struct.interval* %e, i32 0, i32 1, !dbg !16264
  %8 = load i32, i32* %last, align 4, !dbg !16264
  %cmp = icmp ugt i32 %7, %8, !dbg !16265
  br i1 %cmp, label %if.then, label %if.else, !dbg !16266

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !16267
  br label %return, !dbg !16267

if.else:                                          ; preds = %entry
  %9 = load i32, i32* %ucs, align 4, !dbg !16268
  %first = getelementptr inbounds %struct.interval, %struct.interval* %e, i32 0, i32 0, !dbg !16270
  %10 = load i32, i32* %first, align 4, !dbg !16270
  %cmp1 = icmp ult i32 %9, %10, !dbg !16271
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !16272

if.then2:                                         ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !16273
  br label %return, !dbg !16273

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16274
  br label %return, !dbg !16274

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !16275
  ret i32 %11, !dbg !16275
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @vt_kbd_con_stop(i32) #2

; Function Attrs: noredzone
declare dso_local void @vt_kbd_con_start(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @con_driver_unregister_callback(%struct.work_struct* %ignored) #0 !dbg !16276 {
entry:
  %ignored.addr = alloca %struct.work_struct*, align 8
  %i = alloca i32, align 4
  %con_driver = alloca %struct.con_driver*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on28 = alloca i32, align 4
  %tmp53 = alloca i64, align 8
  store %struct.work_struct* %ignored, %struct.work_struct** %ignored.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %ignored.addr, metadata !16277, metadata !DIExpression()), !dbg !16278
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16279, metadata !DIExpression()), !dbg !16280
  call void @console_lock() #13, !dbg !16281
  store i32 0, i32* %i, align 4, !dbg !16282
  br label %for.cond, !dbg !16284

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16285
  %cmp = icmp slt i32 %0, 16, !dbg !16287
  br i1 %cmp, label %for.body, label %for.end, !dbg !16288

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con_driver, metadata !16289, metadata !DIExpression()), !dbg !16291
  %1 = load i32, i32* %i, align 4, !dbg !16292
  %idxprom = sext i32 %1 to i64, !dbg !16293
  %arrayidx = getelementptr [16 x %struct.con_driver], [16 x %struct.con_driver]* @registered_con_driver, i64 0, i64 %idxprom, !dbg !16293
  store %struct.con_driver* %arrayidx, %struct.con_driver** %con_driver, align 8, !dbg !16291
  %2 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16294
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %2, i32 0, i32 6, !dbg !16296
  %3 = load i32, i32* %flag, align 4, !dbg !16296
  %and = and i32 %3, 8, !dbg !16297
  %tobool = icmp ne i32 %and, 0, !dbg !16297
  br i1 %tobool, label %if.end, label %if.then, !dbg !16298

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !16299

if.end:                                           ; preds = %for.body
  call void @console_unlock() #13, !dbg !16300
  %4 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16301
  call void @vtconsole_deinit_device(%struct.con_driver* %4) #13, !dbg !16302
  %5 = load %struct.class*, %struct.class** @vtconsole_class, align 8, !dbg !16303
  %6 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16304
  %node = getelementptr inbounds %struct.con_driver, %struct.con_driver* %6, i32 0, i32 3, !dbg !16304
  %7 = load i32, i32* %node, align 8, !dbg !16304
  %or = or i32 0, %7, !dbg !16304
  call void @device_destroy(%struct.class* %5, i32 %or) #13, !dbg !16305
  call void @console_lock() #13, !dbg !16306
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16307, metadata !DIExpression()), !dbg !16310
  %8 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16310
  %con = getelementptr inbounds %struct.con_driver, %struct.con_driver* %8, i32 0, i32 0, !dbg !16310
  %9 = load %struct.consw*, %struct.consw** %con, align 8, !dbg !16310
  %tobool1 = icmp ne %struct.consw* %9, null, !dbg !16310
  %lnot = xor i1 %tobool1, true, !dbg !16310
  %lnot2 = xor i1 %lnot, true, !dbg !16310
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !16310
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !16310
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !16311
  %tobool3 = icmp ne i32 %10, 0, !dbg !16311
  %lnot4 = xor i1 %tobool3, true, !dbg !16311
  %lnot6 = xor i1 %lnot4, true, !dbg !16311
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !16311
  %conv = sext i32 %lnot.ext7 to i64, !dbg !16311
  %tobool8 = icmp ne i64 %conv, 0, !dbg !16311
  br i1 %tobool8, label %if.then9, label %if.end16, !dbg !16310

if.then9:                                         ; preds = %if.end
  br label %do.body, !dbg !16311

do.body:                                          ; preds = %if.then9
  br label %do.body10, !dbg !16313

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !16315

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !16313

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 4208, i32 2307, i64 12) #5, !dbg !16317, !srcloc !16319
  br label %do.end12, !dbg !16317

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 285) #5, !dbg !16320, !srcloc !16322
  br label %do.body13, !dbg !16313

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !16323

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !16313

do.end15:                                         ; preds = %do.end14
  br label %if.end16, !dbg !16313

if.end16:                                         ; preds = %do.end15, %if.end
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !16310
  %tobool17 = icmp ne i32 %11, 0, !dbg !16310
  %lnot18 = xor i1 %tobool17, true, !dbg !16310
  %lnot20 = xor i1 %lnot18, true, !dbg !16310
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !16310
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !16310
  store i64 %conv22, i64* %tmp, align 8, !dbg !16311
  %12 = load i64, i64* %tmp, align 8, !dbg !16310
  %tobool23 = icmp ne i64 %12, 0, !dbg !16325
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !16326

if.then24:                                        ; preds = %if.end16
  %13 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16327
  %con25 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %13, i32 0, i32 0, !dbg !16328
  store %struct.consw* null, %struct.consw** %con25, align 8, !dbg !16329
  br label %if.end26, !dbg !16327

if.end26:                                         ; preds = %if.then24, %if.end16
  %14 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16330
  %desc = getelementptr inbounds %struct.con_driver, %struct.con_driver* %14, i32 0, i32 1, !dbg !16331
  store i8* null, i8** %desc, align 8, !dbg !16332
  %15 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16333
  %dev = getelementptr inbounds %struct.con_driver, %struct.con_driver* %15, i32 0, i32 2, !dbg !16334
  store %struct.device* null, %struct.device** %dev, align 8, !dbg !16335
  %16 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16336
  %node27 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %16, i32 0, i32 3, !dbg !16337
  store i32 0, i32* %node27, align 8, !dbg !16338
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on28, metadata !16339, metadata !DIExpression()), !dbg !16341
  %17 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16341
  %flag29 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %17, i32 0, i32 6, !dbg !16341
  %18 = load i32, i32* %flag29, align 4, !dbg !16341
  %cmp30 = icmp ne i32 %18, 8, !dbg !16341
  %lnot32 = xor i1 %cmp30, true, !dbg !16341
  %lnot34 = xor i1 %lnot32, true, !dbg !16341
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !16341
  store i32 %lnot.ext35, i32* %__ret_warn_on28, align 4, !dbg !16341
  %19 = load i32, i32* %__ret_warn_on28, align 4, !dbg !16342
  %tobool36 = icmp ne i32 %19, 0, !dbg !16342
  %lnot37 = xor i1 %tobool36, true, !dbg !16342
  %lnot39 = xor i1 %lnot37, true, !dbg !16342
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !16342
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !16342
  %tobool42 = icmp ne i64 %conv41, 0, !dbg !16342
  br i1 %tobool42, label %if.then43, label %if.end52, !dbg !16341

if.then43:                                        ; preds = %if.end26
  br label %do.body44, !dbg !16342

do.body44:                                        ; preds = %if.then43
  br label %do.body45, !dbg !16344

do.body45:                                        ; preds = %do.body44
  br label %do.end46, !dbg !16346

do.end46:                                         ; preds = %do.body45
  br label %do.body47, !dbg !16344

do.body47:                                        ; preds = %do.end46
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 4213, i32 2307, i64 12) #5, !dbg !16348, !srcloc !16350
  br label %do.end48, !dbg !16348

do.end48:                                         ; preds = %do.body47
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 286) #5, !dbg !16351, !srcloc !16353
  br label %do.body49, !dbg !16344

do.body49:                                        ; preds = %do.end48
  br label %do.end50, !dbg !16354

do.end50:                                         ; preds = %do.body49
  br label %do.end51, !dbg !16344

do.end51:                                         ; preds = %do.end50
  br label %if.end52, !dbg !16344

if.end52:                                         ; preds = %do.end51, %if.end26
  %20 = load i32, i32* %__ret_warn_on28, align 4, !dbg !16341
  %tobool54 = icmp ne i32 %20, 0, !dbg !16341
  %lnot55 = xor i1 %tobool54, true, !dbg !16341
  %lnot57 = xor i1 %lnot55, true, !dbg !16341
  %lnot.ext58 = zext i1 %lnot57 to i32, !dbg !16341
  %conv59 = sext i32 %lnot.ext58 to i64, !dbg !16341
  store i64 %conv59, i64* %tmp53, align 8, !dbg !16342
  %21 = load i64, i64* %tmp53, align 8, !dbg !16341
  %22 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16356
  %flag60 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %22, i32 0, i32 6, !dbg !16357
  store i32 0, i32* %flag60, align 4, !dbg !16358
  %23 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16359
  %first = getelementptr inbounds %struct.con_driver, %struct.con_driver* %23, i32 0, i32 4, !dbg !16360
  store i32 0, i32* %first, align 4, !dbg !16361
  %24 = load %struct.con_driver*, %struct.con_driver** %con_driver, align 8, !dbg !16362
  %last = getelementptr inbounds %struct.con_driver, %struct.con_driver* %24, i32 0, i32 5, !dbg !16363
  store i32 0, i32* %last, align 8, !dbg !16364
  br label %for.inc, !dbg !16365

for.inc:                                          ; preds = %if.end52, %if.then
  %25 = load i32, i32* %i, align 4, !dbg !16366
  %inc = add i32 %25, 1, !dbg !16366
  store i32 %inc, i32* %i, align 4, !dbg !16366
  br label %for.cond, !dbg !16367, !llvm.loop !16368

for.end:                                          ; preds = %for.cond
  call void @console_unlock() #13, !dbg !16370
  ret void, !dbg !16371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vtconsole_deinit_device(%struct.con_driver* %con) #0 !dbg !16372 {
entry:
  %con.addr = alloca %struct.con_driver*, align 8
  store %struct.con_driver* %con, %struct.con_driver** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con.addr, metadata !16375, metadata !DIExpression()), !dbg !16376
  %0 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16377
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %0, i32 0, i32 6, !dbg !16378
  %1 = load i32, i32* %flag, align 4, !dbg !16379
  %and = and i32 %1, -5, !dbg !16379
  store i32 %and, i32* %flag, align 4, !dbg !16379
  ret void, !dbg !16380
}

; Function Attrs: noredzone
declare dso_local void @device_destroy(%struct.class*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !16381 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !16384, metadata !DIExpression()), !dbg !16385
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !16386
  %1 = ptrtoint i8* %0 to i64, !dbg !16387
  ret i64 %1, !dbg !16388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vtconsole_init_device(%struct.con_driver* %con) #0 !dbg !16389 {
entry:
  %con.addr = alloca %struct.con_driver*, align 8
  store %struct.con_driver* %con, %struct.con_driver** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con.addr, metadata !16392, metadata !DIExpression()), !dbg !16393
  %0 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16394
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %0, i32 0, i32 6, !dbg !16395
  %1 = load i32, i32* %flag, align 4, !dbg !16396
  %or = or i32 %1, 4, !dbg !16396
  store i32 %or, i32* %flag, align 4, !dbg !16396
  ret i32 0, !dbg !16397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_bind(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !16398 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %con = alloca %struct.con_driver*, align 8
  %bind = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16399, metadata !DIExpression()), !dbg !16400
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16401, metadata !DIExpression()), !dbg !16402
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16403, metadata !DIExpression()), !dbg !16404
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con, metadata !16405, metadata !DIExpression()), !dbg !16406
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16407
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #13, !dbg !16408
  %1 = bitcast i8* %call to %struct.con_driver*, !dbg !16408
  store %struct.con_driver* %1, %struct.con_driver** %con, align 8, !dbg !16406
  call void @llvm.dbg.declare(metadata i32* %bind, metadata !16409, metadata !DIExpression()), !dbg !16410
  call void @console_lock() #13, !dbg !16411
  %2 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !16412
  %con1 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %2, i32 0, i32 0, !dbg !16413
  %3 = load %struct.consw*, %struct.consw** %con1, align 8, !dbg !16413
  %call2 = call i32 @con_is_bound(%struct.consw* %3) #13, !dbg !16414
  store i32 %call2, i32* %bind, align 4, !dbg !16415
  call void @console_unlock() #13, !dbg !16416
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !16417
  %5 = load i32, i32* %bind, align 4, !dbg !16418
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %4, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i32 %5) #13, !dbg !16419
  %conv = sext i32 %call3 to i64, !dbg !16419
  ret i64 %conv, !dbg !16420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_bind(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !16421 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %con = alloca %struct.con_driver*, align 8
  %bind = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16422, metadata !DIExpression()), !dbg !16423
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16424, metadata !DIExpression()), !dbg !16425
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16426, metadata !DIExpression()), !dbg !16427
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !16428, metadata !DIExpression()), !dbg !16429
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con, metadata !16430, metadata !DIExpression()), !dbg !16431
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16432
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #13, !dbg !16433
  %1 = bitcast i8* %call to %struct.con_driver*, !dbg !16433
  store %struct.con_driver* %1, %struct.con_driver** %con, align 8, !dbg !16431
  call void @llvm.dbg.declare(metadata i32* %bind, metadata !16434, metadata !DIExpression()), !dbg !16435
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !16436
  %call1 = call i64 @simple_strtoul(i8* %2, i8** null, i32 0) #13, !dbg !16437
  %conv = trunc i64 %call1 to i32, !dbg !16437
  store i32 %conv, i32* %bind, align 4, !dbg !16435
  call void @console_lock() #13, !dbg !16438
  %3 = load i32, i32* %bind, align 4, !dbg !16439
  %tobool = icmp ne i32 %3, 0, !dbg !16439
  br i1 %tobool, label %if.then, label %if.else, !dbg !16441

if.then:                                          ; preds = %entry
  %4 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !16442
  %call2 = call i32 @vt_bind(%struct.con_driver* %4) #13, !dbg !16443
  br label %if.end, !dbg !16443

if.else:                                          ; preds = %entry
  %5 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !16444
  %call3 = call i32 @vt_unbind(%struct.con_driver* %5) #13, !dbg !16445
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @console_unlock() #13, !dbg !16446
  %6 = load i64, i64* %count.addr, align 8, !dbg !16447
  ret i64 %6, !dbg !16448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !16449 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16452, metadata !DIExpression()), !dbg !16453
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16454
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !16455
  %1 = load i8*, i8** %driver_data, align 8, !dbg !16455
  ret i8* %1, !dbg !16456
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i64 @simple_strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vt_bind(%struct.con_driver* %con) #0 !dbg !16457 {
entry:
  %con.addr = alloca %struct.con_driver*, align 8
  %defcsw = alloca %struct.consw*, align 8
  %csw = alloca %struct.consw*, align 8
  %i = alloca i32, align 4
  %more = alloca i32, align 4
  %first = alloca i32, align 4
  %last = alloca i32, align 4
  %deflt = alloca i32, align 4
  %con4 = alloca %struct.con_driver*, align 8
  store %struct.con_driver* %con, %struct.con_driver** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con.addr, metadata !16458, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.declare(metadata %struct.consw** %defcsw, metadata !16460, metadata !DIExpression()), !dbg !16461
  store %struct.consw* null, %struct.consw** %defcsw, align 8, !dbg !16461
  call void @llvm.dbg.declare(metadata %struct.consw** %csw, metadata !16462, metadata !DIExpression()), !dbg !16463
  store %struct.consw* null, %struct.consw** %csw, align 8, !dbg !16463
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16464, metadata !DIExpression()), !dbg !16465
  call void @llvm.dbg.declare(metadata i32* %more, metadata !16466, metadata !DIExpression()), !dbg !16467
  store i32 1, i32* %more, align 4, !dbg !16467
  call void @llvm.dbg.declare(metadata i32* %first, metadata !16468, metadata !DIExpression()), !dbg !16469
  store i32 -1, i32* %first, align 4, !dbg !16469
  call void @llvm.dbg.declare(metadata i32* %last, metadata !16470, metadata !DIExpression()), !dbg !16471
  store i32 -1, i32* %last, align 4, !dbg !16471
  call void @llvm.dbg.declare(metadata i32* %deflt, metadata !16472, metadata !DIExpression()), !dbg !16473
  store i32 0, i32* %deflt, align 4, !dbg !16473
  %0 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16474
  %con1 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %0, i32 0, i32 0, !dbg !16476
  %1 = load %struct.consw*, %struct.consw** %con1, align 8, !dbg !16476
  %tobool = icmp ne %struct.consw* %1, null, !dbg !16474
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !16477

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16478
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %2, i32 0, i32 6, !dbg !16479
  %3 = load i32, i32* %flag, align 4, !dbg !16479
  %and = and i32 %3, 1, !dbg !16480
  %tobool2 = icmp ne i32 %and, 0, !dbg !16480
  br i1 %tobool2, label %if.end, label %if.then, !dbg !16481

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %err, !dbg !16482

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16483
  %con3 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %4, i32 0, i32 0, !dbg !16484
  %5 = load %struct.consw*, %struct.consw** %con3, align 8, !dbg !16484
  store %struct.consw* %5, %struct.consw** %csw, align 8, !dbg !16485
  store i32 0, i32* %i, align 4, !dbg !16486
  br label %for.cond, !dbg !16488

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !16489
  %cmp = icmp slt i32 %6, 16, !dbg !16491
  br i1 %cmp, label %for.body, label %for.end, !dbg !16492

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con4, metadata !16493, metadata !DIExpression()), !dbg !16495
  %7 = load i32, i32* %i, align 4, !dbg !16496
  %idxprom = sext i32 %7 to i64, !dbg !16497
  %arrayidx = getelementptr [16 x %struct.con_driver], [16 x %struct.con_driver]* @registered_con_driver, i64 0, i64 %idxprom, !dbg !16497
  store %struct.con_driver* %arrayidx, %struct.con_driver** %con4, align 8, !dbg !16495
  %8 = load %struct.con_driver*, %struct.con_driver** %con4, align 8, !dbg !16498
  %con5 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %8, i32 0, i32 0, !dbg !16500
  %9 = load %struct.consw*, %struct.consw** %con5, align 8, !dbg !16500
  %tobool6 = icmp ne %struct.consw* %9, null, !dbg !16498
  br i1 %tobool6, label %land.lhs.true, label %if.end12, !dbg !16501

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.con_driver*, %struct.con_driver** %con4, align 8, !dbg !16502
  %flag7 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %10, i32 0, i32 6, !dbg !16503
  %11 = load i32, i32* %flag7, align 4, !dbg !16503
  %and8 = and i32 %11, 1, !dbg !16504
  %tobool9 = icmp ne i32 %and8, 0, !dbg !16504
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !16505

if.then10:                                        ; preds = %land.lhs.true
  %12 = load %struct.con_driver*, %struct.con_driver** %con4, align 8, !dbg !16506
  %con11 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %12, i32 0, i32 0, !dbg !16508
  %13 = load %struct.consw*, %struct.consw** %con11, align 8, !dbg !16508
  store %struct.consw* %13, %struct.consw** %defcsw, align 8, !dbg !16509
  br label %for.end, !dbg !16510

if.end12:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !16511

for.inc:                                          ; preds = %if.end12
  %14 = load i32, i32* %i, align 4, !dbg !16512
  %inc = add i32 %14, 1, !dbg !16512
  store i32 %inc, i32* %i, align 4, !dbg !16512
  br label %for.cond, !dbg !16513, !llvm.loop !16514

for.end:                                          ; preds = %if.then10, %for.cond
  %15 = load %struct.consw*, %struct.consw** %defcsw, align 8, !dbg !16516
  %tobool13 = icmp ne %struct.consw* %15, null, !dbg !16516
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !16518

if.then14:                                        ; preds = %for.end
  br label %err, !dbg !16519

if.end15:                                         ; preds = %for.end
  br label %while.cond, !dbg !16520

while.cond:                                       ; preds = %if.end43, %if.end15
  %16 = load i32, i32* %more, align 4, !dbg !16521
  %tobool16 = icmp ne i32 %16, 0, !dbg !16520
  br i1 %tobool16, label %while.body, label %while.end, !dbg !16520

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %more, align 4, !dbg !16522
  %17 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16524
  %first17 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %17, i32 0, i32 4, !dbg !16526
  %18 = load i32, i32* %first17, align 4, !dbg !16526
  store i32 %18, i32* %i, align 4, !dbg !16527
  br label %for.cond18, !dbg !16528

for.cond18:                                       ; preds = %for.inc33, %while.body
  %19 = load i32, i32* %i, align 4, !dbg !16529
  %20 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16531
  %last19 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %20, i32 0, i32 5, !dbg !16532
  %21 = load i32, i32* %last19, align 8, !dbg !16532
  %cmp20 = icmp sle i32 %19, %21, !dbg !16533
  br i1 %cmp20, label %for.body21, label %for.end35, !dbg !16534

for.body21:                                       ; preds = %for.cond18
  %22 = load i32, i32* %i, align 4, !dbg !16535
  %idxprom22 = sext i32 %22 to i64, !dbg !16538
  %arrayidx23 = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom22, !dbg !16538
  %23 = load %struct.consw*, %struct.consw** %arrayidx23, align 8, !dbg !16538
  %24 = load %struct.consw*, %struct.consw** %defcsw, align 8, !dbg !16539
  %cmp24 = icmp eq %struct.consw* %23, %24, !dbg !16540
  br i1 %cmp24, label %if.then25, label %if.else, !dbg !16541

if.then25:                                        ; preds = %for.body21
  %25 = load i32, i32* %first, align 4, !dbg !16542
  %cmp26 = icmp eq i32 %25, -1, !dbg !16545
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !16546

if.then27:                                        ; preds = %if.then25
  %26 = load i32, i32* %i, align 4, !dbg !16547
  store i32 %26, i32* %first, align 4, !dbg !16548
  br label %if.end28, !dbg !16549

if.end28:                                         ; preds = %if.then27, %if.then25
  %27 = load i32, i32* %i, align 4, !dbg !16550
  store i32 %27, i32* %last, align 4, !dbg !16551
  store i32 1, i32* %more, align 4, !dbg !16552
  br label %if.end32, !dbg !16553

if.else:                                          ; preds = %for.body21
  %28 = load i32, i32* %first, align 4, !dbg !16554
  %cmp29 = icmp ne i32 %28, -1, !dbg !16556
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !16557

if.then30:                                        ; preds = %if.else
  br label %for.end35, !dbg !16558

if.end31:                                         ; preds = %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end28
  br label %for.inc33, !dbg !16559

for.inc33:                                        ; preds = %if.end32
  %29 = load i32, i32* %i, align 4, !dbg !16560
  %inc34 = add i32 %29, 1, !dbg !16560
  store i32 %inc34, i32* %i, align 4, !dbg !16560
  br label %for.cond18, !dbg !16561, !llvm.loop !16562

for.end35:                                        ; preds = %if.then30, %for.cond18
  %30 = load i32, i32* %first, align 4, !dbg !16564
  %cmp36 = icmp eq i32 %30, 0, !dbg !16566
  br i1 %cmp36, label %land.lhs.true37, label %if.end40, !dbg !16567

land.lhs.true37:                                  ; preds = %for.end35
  %31 = load i32, i32* %last, align 4, !dbg !16568
  %cmp38 = icmp eq i32 %31, 62, !dbg !16569
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !16570

if.then39:                                        ; preds = %land.lhs.true37
  store i32 1, i32* %deflt, align 4, !dbg !16571
  br label %if.end40, !dbg !16572

if.end40:                                         ; preds = %if.then39, %land.lhs.true37, %for.end35
  %32 = load i32, i32* %first, align 4, !dbg !16573
  %cmp41 = icmp ne i32 %32, -1, !dbg !16575
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !16576

if.then42:                                        ; preds = %if.end40
  %33 = load %struct.consw*, %struct.consw** %csw, align 8, !dbg !16577
  %34 = load i32, i32* %first, align 4, !dbg !16578
  %35 = load i32, i32* %last, align 4, !dbg !16579
  %36 = load i32, i32* %deflt, align 4, !dbg !16580
  %call = call i32 @do_bind_con_driver(%struct.consw* %33, i32 %34, i32 %35, i32 %36) #13, !dbg !16581
  br label %if.end43, !dbg !16581

if.end43:                                         ; preds = %if.then42, %if.end40
  store i32 -1, i32* %first, align 4, !dbg !16582
  store i32 -1, i32* %last, align 4, !dbg !16583
  store i32 0, i32* %deflt, align 4, !dbg !16584
  br label %while.cond, !dbg !16520, !llvm.loop !16585

while.end:                                        ; preds = %while.cond
  br label %err, !dbg !16520

err:                                              ; preds = %while.end, %if.then14, %if.then
  call void @llvm.dbg.label(metadata !16587), !dbg !16588
  ret i32 0, !dbg !16589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vt_unbind(%struct.con_driver* %con) #0 !dbg !16590 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.con_driver*, align 8
  %csw = alloca %struct.consw*, align 8
  %i = alloca i32, align 4
  %more = alloca i32, align 4
  %first = alloca i32, align 4
  %last = alloca i32, align 4
  %deflt = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.con_driver* %con, %struct.con_driver** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con.addr, metadata !16591, metadata !DIExpression()), !dbg !16592
  call void @llvm.dbg.declare(metadata %struct.consw** %csw, metadata !16593, metadata !DIExpression()), !dbg !16594
  store %struct.consw* null, %struct.consw** %csw, align 8, !dbg !16594
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16595, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.declare(metadata i32* %more, metadata !16597, metadata !DIExpression()), !dbg !16598
  store i32 1, i32* %more, align 4, !dbg !16598
  call void @llvm.dbg.declare(metadata i32* %first, metadata !16599, metadata !DIExpression()), !dbg !16600
  store i32 -1, i32* %first, align 4, !dbg !16600
  call void @llvm.dbg.declare(metadata i32* %last, metadata !16601, metadata !DIExpression()), !dbg !16602
  store i32 -1, i32* %last, align 4, !dbg !16602
  call void @llvm.dbg.declare(metadata i32* %deflt, metadata !16603, metadata !DIExpression()), !dbg !16604
  store i32 0, i32* %deflt, align 4, !dbg !16604
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16605, metadata !DIExpression()), !dbg !16606
  %0 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16607
  %con1 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %0, i32 0, i32 0, !dbg !16609
  %1 = load %struct.consw*, %struct.consw** %con1, align 8, !dbg !16609
  %tobool = icmp ne %struct.consw* %1, null, !dbg !16607
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !16610

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16611
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %2, i32 0, i32 6, !dbg !16612
  %3 = load i32, i32* %flag, align 4, !dbg !16612
  %and = and i32 %3, 1, !dbg !16613
  %tobool2 = icmp ne i32 %and, 0, !dbg !16613
  br i1 %tobool2, label %if.end, label %if.then, !dbg !16614

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %err, !dbg !16615

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16616
  %con3 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %4, i32 0, i32 0, !dbg !16617
  %5 = load %struct.consw*, %struct.consw** %con3, align 8, !dbg !16617
  store %struct.consw* %5, %struct.consw** %csw, align 8, !dbg !16618
  br label %while.cond, !dbg !16619

while.cond:                                       ; preds = %if.end25, %if.end
  %6 = load i32, i32* %more, align 4, !dbg !16620
  %tobool4 = icmp ne i32 %6, 0, !dbg !16619
  br i1 %tobool4, label %while.body, label %while.end, !dbg !16619

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %more, align 4, !dbg !16621
  %7 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16623
  %first5 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %7, i32 0, i32 4, !dbg !16625
  %8 = load i32, i32* %first5, align 4, !dbg !16625
  store i32 %8, i32* %i, align 4, !dbg !16626
  br label %for.cond, !dbg !16627

for.cond:                                         ; preds = %for.inc, %while.body
  %9 = load i32, i32* %i, align 4, !dbg !16628
  %10 = load %struct.con_driver*, %struct.con_driver** %con.addr, align 8, !dbg !16630
  %last6 = getelementptr inbounds %struct.con_driver, %struct.con_driver* %10, i32 0, i32 5, !dbg !16631
  %11 = load i32, i32* %last6, align 8, !dbg !16631
  %cmp = icmp sle i32 %9, %11, !dbg !16632
  br i1 %cmp, label %for.body, label %for.end, !dbg !16633

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !16634
  %idxprom = sext i32 %12 to i64, !dbg !16637
  %arrayidx = getelementptr [63 x %struct.consw*], [63 x %struct.consw*]* @con_driver_map, i64 0, i64 %idxprom, !dbg !16637
  %13 = load %struct.consw*, %struct.consw** %arrayidx, align 8, !dbg !16637
  %14 = load %struct.consw*, %struct.consw** %csw, align 8, !dbg !16638
  %cmp7 = icmp eq %struct.consw* %13, %14, !dbg !16639
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !16640

if.then8:                                         ; preds = %for.body
  %15 = load i32, i32* %first, align 4, !dbg !16641
  %cmp9 = icmp eq i32 %15, -1, !dbg !16644
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !16645

if.then10:                                        ; preds = %if.then8
  %16 = load i32, i32* %i, align 4, !dbg !16646
  store i32 %16, i32* %first, align 4, !dbg !16647
  br label %if.end11, !dbg !16648

if.end11:                                         ; preds = %if.then10, %if.then8
  %17 = load i32, i32* %i, align 4, !dbg !16649
  store i32 %17, i32* %last, align 4, !dbg !16650
  store i32 1, i32* %more, align 4, !dbg !16651
  br label %if.end15, !dbg !16652

if.else:                                          ; preds = %for.body
  %18 = load i32, i32* %first, align 4, !dbg !16653
  %cmp12 = icmp ne i32 %18, -1, !dbg !16655
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !16656

if.then13:                                        ; preds = %if.else
  br label %for.end, !dbg !16657

if.end14:                                         ; preds = %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end11
  br label %for.inc, !dbg !16658

for.inc:                                          ; preds = %if.end15
  %19 = load i32, i32* %i, align 4, !dbg !16659
  %inc = add i32 %19, 1, !dbg !16659
  store i32 %inc, i32* %i, align 4, !dbg !16659
  br label %for.cond, !dbg !16660, !llvm.loop !16661

for.end:                                          ; preds = %if.then13, %for.cond
  %20 = load i32, i32* %first, align 4, !dbg !16663
  %cmp16 = icmp eq i32 %20, 0, !dbg !16665
  br i1 %cmp16, label %land.lhs.true, label %if.end19, !dbg !16666

land.lhs.true:                                    ; preds = %for.end
  %21 = load i32, i32* %last, align 4, !dbg !16667
  %cmp17 = icmp eq i32 %21, 62, !dbg !16668
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !16669

if.then18:                                        ; preds = %land.lhs.true
  store i32 1, i32* %deflt, align 4, !dbg !16670
  br label %if.end19, !dbg !16671

if.end19:                                         ; preds = %if.then18, %land.lhs.true, %for.end
  %22 = load i32, i32* %first, align 4, !dbg !16672
  %cmp20 = icmp ne i32 %22, -1, !dbg !16674
  br i1 %cmp20, label %if.then21, label %if.end25, !dbg !16675

if.then21:                                        ; preds = %if.end19
  %23 = load %struct.consw*, %struct.consw** %csw, align 8, !dbg !16676
  %24 = load i32, i32* %first, align 4, !dbg !16678
  %25 = load i32, i32* %last, align 4, !dbg !16679
  %26 = load i32, i32* %deflt, align 4, !dbg !16680
  %call = call i32 @do_unbind_con_driver(%struct.consw* %23, i32 %24, i32 %25, i32 %26) #13, !dbg !16681
  store i32 %call, i32* %ret, align 4, !dbg !16682
  %27 = load i32, i32* %ret, align 4, !dbg !16683
  %cmp22 = icmp ne i32 %27, 0, !dbg !16685
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !16686

if.then23:                                        ; preds = %if.then21
  %28 = load i32, i32* %ret, align 4, !dbg !16687
  store i32 %28, i32* %retval, align 4, !dbg !16688
  br label %return, !dbg !16688

if.end24:                                         ; preds = %if.then21
  br label %if.end25, !dbg !16689

if.end25:                                         ; preds = %if.end24, %if.end19
  store i32 -1, i32* %first, align 4, !dbg !16690
  store i32 -1, i32* %last, align 4, !dbg !16691
  store i32 0, i32* %deflt, align 4, !dbg !16692
  br label %while.cond, !dbg !16619, !llvm.loop !16693

while.end:                                        ; preds = %while.cond
  br label %err, !dbg !16619

err:                                              ; preds = %while.end, %if.then
  call void @llvm.dbg.label(metadata !16695), !dbg !16696
  store i32 0, i32* %retval, align 4, !dbg !16697
  br label %return, !dbg !16697

return:                                           ; preds = %err, %if.then23
  %29 = load i32, i32* %retval, align 4, !dbg !16698
  ret i32 %29, !dbg !16698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_name(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !16699 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %con = alloca %struct.con_driver*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16700, metadata !DIExpression()), !dbg !16701
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16702, metadata !DIExpression()), !dbg !16703
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16704, metadata !DIExpression()), !dbg !16705
  call void @llvm.dbg.declare(metadata %struct.con_driver** %con, metadata !16706, metadata !DIExpression()), !dbg !16707
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16708
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #13, !dbg !16709
  %1 = bitcast i8* %call to %struct.con_driver*, !dbg !16709
  store %struct.con_driver* %1, %struct.con_driver** %con, align 8, !dbg !16707
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !16710
  %3 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !16711
  %flag = getelementptr inbounds %struct.con_driver, %struct.con_driver* %3, i32 0, i32 6, !dbg !16712
  %4 = load i32, i32* %flag, align 4, !dbg !16712
  %and = and i32 %4, 1, !dbg !16713
  %tobool = icmp ne i32 %and, 0, !dbg !16714
  %5 = zext i1 %tobool to i64, !dbg !16714
  %cond = select i1 %tobool, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), !dbg !16714
  %6 = load %struct.con_driver*, %struct.con_driver** %con, align 8, !dbg !16715
  %desc = getelementptr inbounds %struct.con_driver, %struct.con_driver* %6, i32 0, i32 1, !dbg !16716
  %7 = load i8*, i8** %desc, align 8, !dbg !16716
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i8* %cond, i8* %7) #13, !dbg !16717
  %conv = sext i32 %call1 to i64, !dbg !16717
  ret i64 %conv, !dbg !16718
}

; Function Attrs: noredzone
declare dso_local %struct.class* @__class_create(%struct.module*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @blank_screen_t(%struct.timer_list* %unused) #0 !dbg !16719 {
entry:
  %unused.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %unused, %struct.timer_list** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %unused.addr, metadata !16720, metadata !DIExpression()), !dbg !16721
  store i32 1, i32* @blank_timer_expired, align 4, !dbg !16722
  %call = call zeroext i1 @schedule_work(%struct.work_struct* @console_work) #13, !dbg !16723
  ret void, !dbg !16724
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !16725 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16728, metadata !DIExpression()), !dbg !16729
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !16730, metadata !DIExpression()), !dbg !16731
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16732, metadata !DIExpression()), !dbg !16734
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !16734
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !16735
  %tobool = icmp ne i32 %0, 0, !dbg !16735
  %lnot = xor i1 %tobool, true, !dbg !16735
  %lnot1 = xor i1 %lnot, true, !dbg !16735
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16735
  %conv = sext i32 %lnot.ext to i64, !dbg !16735
  %tobool2 = icmp ne i64 %conv, 0, !dbg !16735
  br i1 %tobool2, label %if.then, label %if.end, !dbg !16734

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !16735

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !16737

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !16739

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !16737
  %2 = load i64, i64* %count.addr, align 8, !dbg !16737
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34, i64 0, i64 0), i32 %1, i64 %2) #13, !dbg !16737
  br label %do.body4, !dbg !16737

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !16741

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !16743

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !16741

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.33, i64 0, i64 0), i32 134, i32 2313, i64 12) #5, !dbg !16745, !srcloc !16747
  br label %do.end8, !dbg !16745

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #5, !dbg !16748, !srcloc !16750
  br label %do.body9, !dbg !16741

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !16751

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !16741

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !16737

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !16753

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !16737

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !16737

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !16734
  %tobool15 = icmp ne i32 %3, 0, !dbg !16734
  %lnot16 = xor i1 %tobool15, true, !dbg !16734
  %lnot18 = xor i1 %lnot16, true, !dbg !16734
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !16734
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !16734
  store i64 %conv20, i64* %tmp, align 8, !dbg !16735
  %4 = load i64, i64* %tmp, align 8, !dbg !16734
  ret void, !dbg !16755
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !16756 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !16759, metadata !DIExpression()), !dbg !16760
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !16761, metadata !DIExpression()), !dbg !16762
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !16763, metadata !DIExpression()), !dbg !16764
  ret void, !dbg !16765
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i8* @memdup_user(i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @strncpy_from_user(i8*, i8*, i64) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly }
attributes #5 = { nounwind }
attributes #6 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone willreturn }
attributes #10 = { nounwind willreturn }
attributes #11 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noredzone nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { noredzone nounwind readnone }
attributes #16 = { nounwind readnone }
attributes #17 = { cold noredzone }
attributes #18 = { cold noredzone noreturn }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4821}
!llvm.module.flags = !{!4822, !4823, !4824, !4825}
!llvm.ident = !{!4826}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "default_utf8", scope: !2, file: !3, line: 161, type: !215, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !190, globals: !4418, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/tty/vt/vt.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !100, !105, !110, !143, !148, !153, !160, !175, !182}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vc_intensity", file: !94, line: 26, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/console_struct.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99}
!96 = !DIEnumerator(name: "VCI_HALF_BRIGHT", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "VCI_NORMAL", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "VCI_BOLD", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "VCI_MASK", value: 3, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "con_scroll", file: !101, line: 27, baseType: !7, size: 32, elements: !102)
!101 = !DIFile(filename: "./include/linux/console.h", directory: "/home/lizy2001/genbc/linux")
!102 = !{!103, !104}
!103 = !DIEnumerator(name: "SM_UP", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "SM_DOWN", value: 1, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 10, baseType: !7, size: 32, elements: !107)
!106 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!107 = !{!108, !109}
!108 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!109 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !111, line: 30, baseType: !112, size: 64, elements: !113)
!111 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!112 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!113 = !{!114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142}
!114 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!115 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!116 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!117 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!118 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!119 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!120 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!121 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!122 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!123 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!124 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!125 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!126 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!127 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!128 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!129 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!130 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!131 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!132 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!133 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!134 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!135 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!136 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!137 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!138 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!139 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!140 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!141 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!142 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 230, baseType: !7, size: 32, elements: !144)
!144 = !{!145, !146, !147}
!145 = !DIEnumerator(name: "blank_off", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "blank_normal_wait", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "blank_vesa_wait", value: 2, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !149, line: 651, baseType: !7, size: 32, elements: !150)
!149 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!150 = !{!151, !152}
!151 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!152 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !154, line: 305, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!155 = !{!156, !157, !158, !159}
!156 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 2060, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!162 = !DIEnumerator(name: "ESnormal", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "ESesc", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "ESsquare", value: 2, isUnsigned: true)
!165 = !DIEnumerator(name: "ESgetpars", value: 3, isUnsigned: true)
!166 = !DIEnumerator(name: "ESfunckey", value: 4, isUnsigned: true)
!167 = !DIEnumerator(name: "EShash", value: 5, isUnsigned: true)
!168 = !DIEnumerator(name: "ESsetG0", value: 6, isUnsigned: true)
!169 = !DIEnumerator(name: "ESsetG1", value: 7, isUnsigned: true)
!170 = !DIEnumerator(name: "ESpercent", value: 8, isUnsigned: true)
!171 = !DIEnumerator(name: "EScsiignore", value: 9, isUnsigned: true)
!172 = !DIEnumerator(name: "ESnonstd", value: 10, isUnsigned: true)
!173 = !DIEnumerator(name: "ESpalette", value: 11, isUnsigned: true)
!174 = !DIEnumerator(name: "ESosc", value: 12, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 1397, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181}
!177 = !DIEnumerator(name: "EPecma", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "EPdec", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "EPeq", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "EPgt", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "EPlt", value: 4, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !183, line: 119, baseType: !7, size: 32, elements: !184)
!183 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!190 = !{!191, !193, !194, !199, !201, !202, !203, !212, !213, !216, !217, !220, !4402, !112, !4404, !1323, !4405, !4407, !4408, !719, !794, !4410, !215, !515, !1454, !192, !4412, !4413}
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!193 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !196, line: 19, baseType: !197)
!196 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !198, line: 24, baseType: !192)
!198 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !200, line: 148, baseType: !7)
!200 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!201 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tiocl_selection", file: !205, line: 14, size: 80, elements: !206)
!205 = !DIFile(filename: "./include/uapi/linux/tiocl.h", directory: "/home/lizy2001/genbc/linux")
!206 = !{!207, !208, !209, !210, !211}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !204, file: !205, line: 15, baseType: !192, size: 16)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !204, file: !205, line: 16, baseType: !192, size: 16, offset: 16)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "xe", scope: !204, file: !205, line: 17, baseType: !192, size: 16, offset: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "ye", scope: !204, file: !205, line: 18, baseType: !192, size: 16, offset: 48)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "sel_mode", scope: !204, file: !205, line: 19, baseType: !192, size: 16, offset: 64)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !196, line: 20, baseType: !214)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !198, line: 26, baseType: !215)
!215 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !219)
!219 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !215)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vc_data", file: !94, line: 94, size: 5952, elements: !222)
!222 = !{!223, !4205, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4350, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4378, !4382, !4383, !4384, !4385, !4386, !4387, !4389, !4392, !4394}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !221, file: !94, line: 95, baseType: !224, size: 2432)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !225, line: 230, size: 2432, elements: !226)
!225 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!226 = !{!227, !313, !4155, !4156, !4178, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !224, file: !225, line: 231, baseType: !228, size: 1024)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !225, line: 85, size: 1024, elements: !229)
!229 = !{!230, !253, !278, !300, !305, !306, !310, !311, !312}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !228, file: !225, line: 86, baseType: !231, size: 64)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !225, line: 58, size: 256, elements: !233)
!233 = !{!234, !244, !245, !246, !247, !248, !249}
!234 = !DIDerivedType(tag: DW_TAG_member, scope: !232, file: !225, line: 59, baseType: !235, size: 64)
!235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !232, file: !225, line: 59, size: 64, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !235, file: !225, line: 60, baseType: !231, size: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !235, file: !225, line: 61, baseType: !239, size: 64)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !240, line: 58, size: 64, elements: !241)
!240 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!241 = !{!242}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !239, file: !240, line: 59, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !232, file: !225, line: 63, baseType: !215, size: 32, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !232, file: !225, line: 64, baseType: !215, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !232, file: !225, line: 65, baseType: !215, size: 32, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !232, file: !225, line: 66, baseType: !215, size: 32, offset: 160)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !232, file: !225, line: 67, baseType: !215, size: 32, offset: 192)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !232, file: !225, line: 69, baseType: !250, offset: 256)
!250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, elements: !251)
!251 = !{!252}
!252 = !DISubrange(count: -1)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !228, file: !225, line: 87, baseType: !254, size: 256, offset: 64)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !111, line: 102, size: 256, elements: !255)
!255 = !{!256, !266, !272}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !254, file: !111, line: 103, baseType: !257, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !258, line: 13, baseType: !259)
!258 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !200, line: 175, baseType: !260)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !200, line: 173, size: 64, elements: !261)
!261 = !{!262}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !260, file: !200, line: 174, baseType: !263, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !196, line: 22, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !198, line: 30, baseType: !265)
!265 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !254, file: !111, line: 104, baseType: !267, size: 128, offset: 64)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !200, line: 178, size: 128, elements: !268)
!268 = !{!269, !271}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !267, file: !200, line: 179, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !267, file: !200, line: 179, baseType: !270, size: 64, offset: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !254, file: !111, line: 105, baseType: !273, size: 64, offset: 192)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !111, line: 21, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DISubroutineType(types: !276)
!276 = !{null, !277}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !228, file: !225, line: 88, baseType: !279, size: 192, offset: 320)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !280, line: 53, size: 192, elements: !281)
!280 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!281 = !{!282, !283, !299}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !279, file: !280, line: 54, baseType: !257, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !279, file: !280, line: 55, baseType: !284, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !285, line: 83, baseType: !286)
!285 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !285, line: 71, elements: !287)
!287 = !{!288}
!288 = !DIDerivedType(tag: DW_TAG_member, scope: !286, file: !285, line: 72, baseType: !289)
!289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !286, file: !285, line: 72, elements: !290)
!290 = !{!291}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !289, file: !285, line: 73, baseType: !292)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !285, line: 20, elements: !293)
!293 = !{!294}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !292, file: !285, line: 21, baseType: !295)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !296, line: 25, baseType: !297)
!296 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !296, line: 25, elements: !298)
!298 = !{}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !279, file: !280, line: 59, baseType: !267, size: 128, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !228, file: !225, line: 89, baseType: !301, size: 32, offset: 512)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !200, line: 168, baseType: !302)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !200, line: 166, size: 32, elements: !303)
!303 = !{!304}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !302, file: !200, line: 167, baseType: !215, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !228, file: !225, line: 90, baseType: !232, size: 256, offset: 576)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !228, file: !225, line: 91, baseType: !307, size: 64, offset: 832)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !240, line: 54, size: 64, elements: !308)
!308 = !{!309}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !307, file: !240, line: 55, baseType: !243, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !228, file: !225, line: 92, baseType: !301, size: 32, offset: 896)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !228, file: !225, line: 93, baseType: !215, size: 32, offset: 928)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !228, file: !225, line: 94, baseType: !231, size: 64, offset: 960)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !224, file: !225, line: 232, baseType: !314, size: 64, offset: 1024)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !225, line: 285, size: 5056, elements: !316)
!316 = !{!317, !318, !327, !3877, !4053, !4054, !4055, !4064, !4115, !4116, !4117, !4118, !4119, !4120, !4121, !4122, !4123, !4124, !4125, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !315, file: !225, line: 286, baseType: !215, size: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !315, file: !225, line: 287, baseType: !319, size: 32, offset: 32)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !320, line: 19, size: 32, elements: !321)
!320 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!321 = !{!322}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !319, file: !320, line: 20, baseType: !323, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !183, line: 113, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !183, line: 111, size: 32, elements: !325)
!325 = !{!326}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !324, file: !183, line: 112, baseType: !301, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !315, file: !225, line: 288, baseType: !328, size: 64, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !330)
!330 = !{!331, !3449, !3450, !3453, !3454, !3505, !3578, !3579, !3580, !3581, !3582, !3591, !3696, !3709, !3712, !3713, !3717, !3719, !3720, !3721, !3725, !3731, !3732, !3735, !3739, !3829, !3830, !3831, !3832, !3833, !3865, !3866, !3867, !3870, !3873, !3874, !3875, !3876}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !329, file: !73, line: 462, baseType: !332, size: 512)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !333, line: 64, size: 512, elements: !334)
!333 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!334 = !{!335, !338, !339, !341, !385, !3316, !3443, !3444, !3445, !3446, !3447, !3448}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !332, file: !333, line: 65, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !201)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !332, file: !333, line: 66, baseType: !267, size: 128, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !332, file: !333, line: 67, baseType: !340, size: 64, offset: 192)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !332, file: !333, line: 68, baseType: !342, size: 64, offset: 256)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !333, line: 192, size: 704, elements: !344)
!344 = !{!345, !346, !347, !348}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !343, file: !333, line: 193, baseType: !267, size: 128)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !343, file: !333, line: 194, baseType: !284, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !343, file: !333, line: 195, baseType: !332, size: 512, offset: 128)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !343, file: !333, line: 196, baseType: !349, size: 64, offset: 640)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !351)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !333, line: 156, size: 192, elements: !352)
!352 = !{!353, !358, !363}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !351, file: !333, line: 157, baseType: !354, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !355)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DISubroutineType(types: !357)
!357 = !{!215, !342, !340}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !351, file: !333, line: 158, baseType: !359, size: 64, offset: 64)
!359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !360)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DISubroutineType(types: !362)
!362 = !{!336, !342, !340}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !351, file: !333, line: 159, baseType: !364, size: 64, offset: 128)
!364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !365)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = !DISubroutineType(types: !367)
!367 = !{!215, !342, !340, !368}
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !333, line: 148, size: 20736, elements: !370)
!370 = !{!371, !375, !379, !380, !384}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !369, file: !333, line: 149, baseType: !372, size: 192)
!372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 192, elements: !373)
!373 = !{!374}
!374 = !DISubrange(count: 3)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !369, file: !333, line: 150, baseType: !376, size: 4096, offset: 192)
!376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 4096, elements: !377)
!377 = !{!378}
!378 = !DISubrange(count: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !369, file: !333, line: 151, baseType: !215, size: 32, offset: 4288)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !369, file: !333, line: 152, baseType: !381, size: 16384, offset: 4320)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 16384, elements: !382)
!382 = !{!383}
!383 = !DISubrange(count: 2048)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !369, file: !333, line: 153, baseType: !215, size: 32, offset: 20704)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !332, file: !333, line: 69, baseType: !386, size: 64, offset: 320)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !333, line: 138, size: 448, elements: !388)
!388 = !{!389, !393, !420, !422, !3278, !3306, !3310}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !387, file: !333, line: 139, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DISubroutineType(types: !392)
!392 = !{null, !340}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !387, file: !333, line: 140, baseType: !394, size: 64, offset: 64)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !397, line: 230, size: 128, elements: !398)
!397 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!398 = !{!399, !413}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !396, file: !397, line: 231, baseType: !400, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DISubroutineType(types: !402)
!402 = !{!403, !340, !407, !202}
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !200, line: 60, baseType: !404)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !405, line: 73, baseType: !406)
!405 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !405, line: 15, baseType: !112)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !397, line: 30, size: 128, elements: !409)
!409 = !{!410, !411}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !408, file: !397, line: 31, baseType: !336, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !408, file: !397, line: 32, baseType: !412, size: 16, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !200, line: 19, baseType: !192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !396, file: !397, line: 232, baseType: !414, size: 64, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DISubroutineType(types: !416)
!416 = !{!403, !340, !407, !336, !417}
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !200, line: 55, baseType: !418)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !405, line: 72, baseType: !419)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !405, line: 16, baseType: !193)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !387, file: !333, line: 141, baseType: !421, size: 64, offset: 128)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !387, file: !333, line: 142, baseType: !423, size: 64, offset: 192)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !397, line: 84, size: 320, elements: !427)
!427 = !{!428, !429, !433, !3275, !3276}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !426, file: !397, line: 85, baseType: !336, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !426, file: !397, line: 86, baseType: !430, size: 64, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DISubroutineType(types: !432)
!432 = !{!412, !340, !407, !215}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !426, file: !397, line: 88, baseType: !434, size: 64, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DISubroutineType(types: !436)
!436 = !{!412, !340, !437, !215}
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !397, line: 168, size: 448, elements: !439)
!439 = !{!440, !441, !442, !443, !3270, !3271}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !438, file: !397, line: 169, baseType: !408, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !438, file: !397, line: 170, baseType: !417, size: 64, offset: 128)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !438, file: !397, line: 171, baseType: !216, size: 64, offset: 192)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !438, file: !397, line: 172, baseType: !444, size: 64, offset: 256)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DISubroutineType(types: !446)
!446 = !{!403, !447, !340, !437, !202, !619, !417}
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !449)
!449 = !{!450, !463, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3253, !3254, !3263, !3264, !3265, !3266, !3267, !3268, !3269}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !448, file: !44, line: 920, baseType: !451, size: 128)
!451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !448, file: !44, line: 917, size: 128, elements: !452)
!452 = !{!453, !454}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !451, file: !44, line: 918, baseType: !239, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !451, file: !44, line: 919, baseType: !455, size: 128, align: 64)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !200, line: 216, size: 128, align: 64, elements: !456)
!456 = !{!457, !459}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !455, file: !200, line: 217, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !455, file: !200, line: 218, baseType: !460, size: 64, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{null, !458}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !448, file: !44, line: 921, baseType: !464, size: 128, offset: 128)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !465, line: 8, size: 128, elements: !466)
!465 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!466 = !{!467, !471}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !464, file: !465, line: 9, baseType: !468, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !470, line: 18, flags: DIFlagFwdDecl)
!470 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!471 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !464, file: !465, line: 10, baseType: !472, size: 64, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !470, line: 89, size: 1536, elements: !474)
!474 = !{!475, !476, !486, !494, !495, !516, !3203, !3205, !3217, !3218, !3219, !3220, !3221, !3227, !3228, !3229}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !473, file: !470, line: 91, baseType: !7, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !473, file: !470, line: 92, baseType: !477, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !478, line: 277, baseType: !479)
!478 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !478, line: 277, size: 32, elements: !480)
!480 = !{!481}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !479, file: !478, line: 277, baseType: !482, size: 32)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !478, line: 70, baseType: !483)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !478, line: 65, size: 32, elements: !484)
!484 = !{!485}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !483, file: !478, line: 66, baseType: !7, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !473, file: !470, line: 93, baseType: !487, size: 128, offset: 64)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !488, line: 38, size: 128, elements: !489)
!488 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!489 = !{!490, !492}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !487, file: !488, line: 39, baseType: !491, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !487, file: !488, line: 39, baseType: !493, size: 64, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !473, file: !470, line: 94, baseType: !472, size: 64, offset: 192)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !473, file: !470, line: 95, baseType: !496, size: 128, offset: 256)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !470, line: 47, size: 128, elements: !497)
!497 = !{!498, !512}
!498 = !DIDerivedType(tag: DW_TAG_member, scope: !496, file: !470, line: 48, baseType: !499, size: 64)
!499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !496, file: !470, line: 48, size: 64, elements: !500)
!500 = !{!501, !508}
!501 = !DIDerivedType(tag: DW_TAG_member, scope: !499, file: !470, line: 49, baseType: !502, size: 64)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !499, file: !470, line: 49, size: 64, elements: !503)
!503 = !{!504, !507}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !502, file: !470, line: 50, baseType: !505, size: 32)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !196, line: 21, baseType: !506)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !198, line: 27, baseType: !7)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !502, file: !470, line: 50, baseType: !505, size: 32, offset: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !499, file: !470, line: 52, baseType: !509, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !196, line: 23, baseType: !510)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !198, line: 31, baseType: !511)
!511 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !496, file: !470, line: 54, baseType: !513, size: 64, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !515)
!515 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !473, file: !470, line: 96, baseType: !517, size: 64, offset: 384)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !519)
!519 = !{!520, !521, !522, !530, !537, !538, !684, !2907, !2908, !2909, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !3171, !3179, !3180, !3181, !3199, !3200, !3201, !3202}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !518, file: !44, line: 611, baseType: !412, size: 16)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !518, file: !44, line: 612, baseType: !192, size: 16, offset: 16)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !518, file: !44, line: 613, baseType: !523, size: 32, offset: 32)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !524, line: 23, baseType: !525)
!524 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !524, line: 21, size: 32, elements: !526)
!526 = !{!527}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !525, file: !524, line: 22, baseType: !528, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !200, line: 32, baseType: !529)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !405, line: 49, baseType: !7)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !518, file: !44, line: 614, baseType: !531, size: 32, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !524, line: 28, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !524, line: 26, size: 32, elements: !533)
!533 = !{!534}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !532, file: !524, line: 27, baseType: !535, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !200, line: 33, baseType: !536)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !405, line: 50, baseType: !7)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !518, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !518, file: !44, line: 622, baseType: !539, size: 64, offset: 128)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !541)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !542)
!542 = !{!543, !547, !560, !564, !570, !574, !580, !584, !588, !592, !596, !597, !603, !607, !631, !660, !664, !670, !675, !679, !680}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !541, file: !44, line: 1865, baseType: !544, size: 64)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DISubroutineType(types: !546)
!546 = !{!472, !517, !472, !7}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !541, file: !44, line: 1866, baseType: !548, size: 64, offset: 64)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DISubroutineType(types: !550)
!550 = !{!336, !472, !517, !551}
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !553, line: 10, size: 128, elements: !554)
!553 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!554 = !{!555, !559}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !552, file: !553, line: 11, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DISubroutineType(types: !558)
!558 = !{null, !216}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !552, file: !553, line: 12, baseType: !216, size: 64, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !541, file: !44, line: 1867, baseType: !561, size: 64, offset: 128)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DISubroutineType(types: !563)
!563 = !{!215, !517, !215}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !541, file: !44, line: 1868, baseType: !565, size: 64, offset: 192)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DISubroutineType(types: !567)
!567 = !{!568, !517, !215}
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !541, file: !44, line: 1870, baseType: !571, size: 64, offset: 256)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DISubroutineType(types: !573)
!573 = !{!215, !472, !202, !215}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !541, file: !44, line: 1872, baseType: !575, size: 64, offset: 320)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DISubroutineType(types: !577)
!577 = !{!215, !517, !472, !412, !578}
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !200, line: 30, baseType: !579)
!579 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !541, file: !44, line: 1873, baseType: !581, size: 64, offset: 384)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DISubroutineType(types: !583)
!583 = !{!215, !472, !517, !472}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !541, file: !44, line: 1874, baseType: !585, size: 64, offset: 448)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DISubroutineType(types: !587)
!587 = !{!215, !517, !472}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !541, file: !44, line: 1875, baseType: !589, size: 64, offset: 512)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = !DISubroutineType(types: !591)
!591 = !{!215, !517, !472, !336}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !541, file: !44, line: 1876, baseType: !593, size: 64, offset: 576)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DISubroutineType(types: !595)
!595 = !{!215, !517, !472, !412}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !541, file: !44, line: 1877, baseType: !585, size: 64, offset: 640)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !541, file: !44, line: 1878, baseType: !598, size: 64, offset: 704)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{!215, !517, !472, !412, !601}
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !200, line: 16, baseType: !602)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !200, line: 13, baseType: !505)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !541, file: !44, line: 1879, baseType: !604, size: 64, offset: 768)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DISubroutineType(types: !606)
!606 = !{!215, !517, !472, !517, !472, !7}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !541, file: !44, line: 1881, baseType: !608, size: 64, offset: 832)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!215, !472, !611}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !613)
!613 = !{!614, !615, !616, !617, !618, !621, !628, !629, !630}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !612, file: !44, line: 220, baseType: !7, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !612, file: !44, line: 221, baseType: !412, size: 16, offset: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !612, file: !44, line: 222, baseType: !523, size: 32, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !612, file: !44, line: 223, baseType: !531, size: 32, offset: 96)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !612, file: !44, line: 224, baseType: !619, size: 64, offset: 128)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !200, line: 46, baseType: !620)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !405, line: 88, baseType: !265)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !612, file: !44, line: 225, baseType: !622, size: 128, offset: 192)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !623, line: 13, size: 128, elements: !624)
!623 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!624 = !{!625, !627}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !622, file: !623, line: 14, baseType: !626, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !623, line: 8, baseType: !264)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !622, file: !623, line: 15, baseType: !112, size: 64, offset: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !612, file: !44, line: 226, baseType: !622, size: 128, offset: 320)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !612, file: !44, line: 227, baseType: !622, size: 128, offset: 448)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !612, file: !44, line: 234, baseType: !447, size: 64, offset: 576)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !541, file: !44, line: 1882, baseType: !632, size: 64, offset: 896)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DISubroutineType(types: !634)
!634 = !{!215, !635, !637, !505, !7}
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !464)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !639, line: 22, size: 1152, elements: !640)
!639 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!640 = !{!641, !642, !643, !644, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !638, file: !639, line: 23, baseType: !505, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !638, file: !639, line: 24, baseType: !412, size: 16, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !638, file: !639, line: 25, baseType: !7, size: 32, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !638, file: !639, line: 26, baseType: !645, size: 32, offset: 96)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !200, line: 104, baseType: !505)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !638, file: !639, line: 27, baseType: !509, size: 64, offset: 128)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !638, file: !639, line: 28, baseType: !509, size: 64, offset: 192)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !638, file: !639, line: 37, baseType: !509, size: 64, offset: 256)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !638, file: !639, line: 38, baseType: !601, size: 32, offset: 320)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !638, file: !639, line: 39, baseType: !601, size: 32, offset: 352)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !638, file: !639, line: 40, baseType: !523, size: 32, offset: 384)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !638, file: !639, line: 41, baseType: !531, size: 32, offset: 416)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !638, file: !639, line: 42, baseType: !619, size: 64, offset: 448)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !638, file: !639, line: 43, baseType: !622, size: 128, offset: 512)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !638, file: !639, line: 44, baseType: !622, size: 128, offset: 640)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !638, file: !639, line: 45, baseType: !622, size: 128, offset: 768)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !638, file: !639, line: 46, baseType: !622, size: 128, offset: 896)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !638, file: !639, line: 47, baseType: !509, size: 64, offset: 1024)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !638, file: !639, line: 48, baseType: !509, size: 64, offset: 1088)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !541, file: !44, line: 1883, baseType: !661, size: 64, offset: 960)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DISubroutineType(types: !663)
!663 = !{!403, !472, !202, !417}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !541, file: !44, line: 1884, baseType: !665, size: 64, offset: 1024)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{!215, !517, !668, !509, !509}
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !541, file: !44, line: 1886, baseType: !671, size: 64, offset: 1088)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{!215, !517, !674, !215}
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !541, file: !44, line: 1887, baseType: !676, size: 64, offset: 1152)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DISubroutineType(types: !678)
!678 = !{!215, !517, !472, !447, !7, !412}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !541, file: !44, line: 1890, baseType: !593, size: 64, offset: 1216)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !541, file: !44, line: 1891, baseType: !681, size: 64, offset: 1280)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!215, !517, !568, !215}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !518, file: !44, line: 623, baseType: !685, size: 64, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !687)
!687 = !{!688, !689, !690, !691, !692, !693, !743, !2514, !2596, !2679, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2695, !2699, !2700, !2703, !2704, !2707, !2708, !2709, !2750, !2777, !2778, !2779, !2780, !2781, !2782, !2785, !2787, !2794, !2795, !2797, !2798, !2799, !2858, !2859, !2874, !2875, !2876, !2877, !2878, !2881, !2882, !2883, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !686, file: !44, line: 1417, baseType: !267, size: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !686, file: !44, line: 1418, baseType: !601, size: 32, offset: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !686, file: !44, line: 1419, baseType: !515, size: 8, offset: 160)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !686, file: !44, line: 1420, baseType: !193, size: 64, offset: 192)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !686, file: !44, line: 1421, baseType: !619, size: 64, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !686, file: !44, line: 1422, baseType: !694, size: 64, offset: 320)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !696)
!696 = !{!697, !698, !699, !706, !710, !714, !718, !722, !723, !733, !736, !737, !738, !740, !741, !742}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !695, file: !44, line: 2229, baseType: !336, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !695, file: !44, line: 2230, baseType: !215, size: 32, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !695, file: !44, line: 2238, baseType: !700, size: 64, offset: 128)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{!215, !703}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !705, line: 28, flags: DIFlagFwdDecl)
!705 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!706 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !695, file: !44, line: 2239, baseType: !707, size: 64, offset: 192)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !709)
!709 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !695, file: !44, line: 2240, baseType: !711, size: 64, offset: 256)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{!472, !694, !215, !336, !216}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !695, file: !44, line: 2242, baseType: !715, size: 64, offset: 320)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{null, !685}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !695, file: !44, line: 2243, baseType: !719, size: 64, offset: 384)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !721, line: 76, flags: DIFlagFwdDecl)
!721 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!722 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !695, file: !44, line: 2244, baseType: !694, size: 64, offset: 448)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !695, file: !44, line: 2245, baseType: !724, size: 64, offset: 512)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !200, line: 182, size: 64, elements: !725)
!725 = !{!726}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !724, file: !200, line: 183, baseType: !727, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !200, line: 186, size: 128, elements: !729)
!729 = !{!730, !731}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !728, file: !200, line: 187, baseType: !727, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !728, file: !200, line: 187, baseType: !732, size: 64, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !695, file: !44, line: 2247, baseType: !734, offset: 576)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !735, line: 187, elements: !298)
!735 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!736 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !695, file: !44, line: 2248, baseType: !734, offset: 576)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !695, file: !44, line: 2249, baseType: !734, offset: 576)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !695, file: !44, line: 2250, baseType: !739, offset: 576)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !734, elements: !373)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !695, file: !44, line: 2252, baseType: !734, offset: 576)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !695, file: !44, line: 2253, baseType: !734, offset: 576)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !695, file: !44, line: 2254, baseType: !734, offset: 576)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !686, file: !44, line: 1423, baseType: !744, size: 64, offset: 384)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !746)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !747)
!747 = !{!748, !752, !756, !757, !761, !767, !771, !772, !773, !777, !781, !782, !783, !784, !790, !795, !796, !839, !840, !841, !842, !2498, !2513}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !746, file: !44, line: 1936, baseType: !749, size: 64)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DISubroutineType(types: !751)
!751 = !{!517, !685}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !746, file: !44, line: 1937, baseType: !753, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{null, !517}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !746, file: !44, line: 1938, baseType: !753, size: 64, offset: 128)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !746, file: !44, line: 1940, baseType: !758, size: 64, offset: 192)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DISubroutineType(types: !760)
!760 = !{null, !517, !215}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !746, file: !44, line: 1941, baseType: !762, size: 64, offset: 256)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{!215, !517, !765}
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !44, line: 289, flags: DIFlagFwdDecl)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !746, file: !44, line: 1942, baseType: !768, size: 64, offset: 320)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!215, !517}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !746, file: !44, line: 1943, baseType: !753, size: 64, offset: 384)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !746, file: !44, line: 1944, baseType: !715, size: 64, offset: 448)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !746, file: !44, line: 1945, baseType: !774, size: 64, offset: 512)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DISubroutineType(types: !776)
!776 = !{!215, !685, !215}
!777 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !746, file: !44, line: 1946, baseType: !778, size: 64, offset: 576)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = !DISubroutineType(types: !780)
!780 = !{!215, !685}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !746, file: !44, line: 1947, baseType: !778, size: 64, offset: 640)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !746, file: !44, line: 1948, baseType: !778, size: 64, offset: 704)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !746, file: !44, line: 1949, baseType: !778, size: 64, offset: 768)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !746, file: !44, line: 1950, baseType: !785, size: 64, offset: 832)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!215, !472, !788}
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !746, file: !44, line: 1951, baseType: !791, size: 64, offset: 896)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{!215, !685, !794, !202}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !746, file: !44, line: 1952, baseType: !715, size: 64, offset: 960)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !746, file: !44, line: 1954, baseType: !797, size: 64, offset: 1024)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{!215, !800, !472}
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !802, line: 16, size: 896, elements: !803)
!802 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!803 = !{!804, !805, !806, !807, !808, !809, !810, !811, !812, !834, !835, !838}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !801, file: !802, line: 17, baseType: !202, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !801, file: !802, line: 18, baseType: !417, size: 64, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !801, file: !802, line: 19, baseType: !417, size: 64, offset: 128)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !801, file: !802, line: 20, baseType: !417, size: 64, offset: 192)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !801, file: !802, line: 21, baseType: !417, size: 64, offset: 256)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !801, file: !802, line: 22, baseType: !619, size: 64, offset: 320)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !801, file: !802, line: 23, baseType: !619, size: 64, offset: 384)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !801, file: !802, line: 24, baseType: !279, size: 192, offset: 448)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !801, file: !802, line: 25, baseType: !813, size: 64, offset: 640)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !802, line: 31, size: 256, elements: !816)
!816 = !{!817, !822, !826, !830}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !815, file: !802, line: 32, baseType: !818, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{!216, !800, !821}
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !815, file: !802, line: 33, baseType: !823, size: 64, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{null, !800, !216}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !815, file: !802, line: 34, baseType: !827, size: 64, offset: 128)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!216, !800, !216, !821}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !815, file: !802, line: 35, baseType: !831, size: 64, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!215, !800, !216}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !801, file: !802, line: 26, baseType: !215, size: 32, offset: 704)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !801, file: !802, line: 27, baseType: !836, size: 64, offset: 768)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !448)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !801, file: !802, line: 28, baseType: !216, size: 64, offset: 832)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !746, file: !44, line: 1955, baseType: !797, size: 64, offset: 1088)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !746, file: !44, line: 1956, baseType: !797, size: 64, offset: 1152)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !746, file: !44, line: 1957, baseType: !797, size: 64, offset: 1216)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !746, file: !44, line: 1963, baseType: !843, size: 64, offset: 1280)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DISubroutineType(types: !845)
!845 = !{!215, !685, !846, !199}
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !848, line: 68, size: 512, align: 128, elements: !849)
!848 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!849 = !{!850, !851, !2490, !2497}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !847, file: !848, line: 69, baseType: !193, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, scope: !847, file: !848, line: 77, baseType: !852, size: 320, offset: 64)
!852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !847, file: !848, line: 77, size: 320, elements: !853)
!853 = !{!854, !1028, !1033, !1061, !1069, !1075, !2421, !2489}
!854 = !DIDerivedType(tag: DW_TAG_member, scope: !852, file: !848, line: 78, baseType: !855, size: 320)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !852, file: !848, line: 78, size: 320, elements: !856)
!856 = !{!857, !858, !1026, !1027}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !855, file: !848, line: 84, baseType: !267, size: 128)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !855, file: !848, line: 86, baseType: !859, size: 64, offset: 128)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !861)
!861 = !{!862, !863, !870, !871, !872, !887, !896, !897, !898, !899, !1019, !1020, !1023, !1024, !1025}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !860, file: !44, line: 452, baseType: !517, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !860, file: !44, line: 453, baseType: !864, size: 128, offset: 64)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !865, line: 292, size: 128, elements: !866)
!865 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!866 = !{!867, !868, !869}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !864, file: !865, line: 293, baseType: !284)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !864, file: !865, line: 295, baseType: !199, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !864, file: !865, line: 296, baseType: !216, size: 64, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !860, file: !44, line: 454, baseType: !199, size: 32, offset: 192)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !860, file: !44, line: 455, baseType: !301, size: 32, offset: 224)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !860, file: !44, line: 460, baseType: !873, size: 128, offset: 256)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !874, line: 125, size: 128, elements: !875)
!874 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!875 = !{!876, !886}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !873, file: !874, line: 126, baseType: !877, size: 64)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !874, line: 31, size: 64, elements: !878)
!878 = !{!879}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !877, file: !874, line: 32, baseType: !880, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !874, line: 24, size: 192, align: 64, elements: !882)
!882 = !{!883, !884, !885}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !881, file: !874, line: 25, baseType: !193, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !881, file: !874, line: 26, baseType: !880, size: 64, offset: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !881, file: !874, line: 27, baseType: !880, size: 64, offset: 128)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !873, file: !874, line: 127, baseType: !880, size: 64, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !860, file: !44, line: 461, baseType: !888, size: 256, offset: 384)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !889, line: 35, size: 256, elements: !890)
!889 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!890 = !{!891, !892, !893, !895}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !888, file: !889, line: 36, baseType: !257, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !888, file: !889, line: 42, baseType: !257, size: 64, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !888, file: !889, line: 46, baseType: !894, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !285, line: 29, baseType: !292)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !888, file: !889, line: 47, baseType: !267, size: 128, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !860, file: !44, line: 462, baseType: !193, size: 64, offset: 640)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !860, file: !44, line: 463, baseType: !193, size: 64, offset: 704)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !860, file: !44, line: 464, baseType: !193, size: 64, offset: 768)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !860, file: !44, line: 465, baseType: !900, size: 64, offset: 832)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !903)
!903 = !{!904, !908, !912, !916, !920, !924, !930, !936, !940, !945, !949, !953, !957, !983, !987, !993, !994, !995, !999, !1004, !1008, !1015}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !902, file: !44, line: 368, baseType: !905, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DISubroutineType(types: !907)
!907 = !{!215, !846, !765}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !902, file: !44, line: 369, baseType: !909, size: 64, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{!215, !447, !846}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !902, file: !44, line: 372, baseType: !913, size: 64, offset: 128)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!215, !859, !765}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !902, file: !44, line: 375, baseType: !917, size: 64, offset: 192)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!215, !846}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !902, file: !44, line: 381, baseType: !921, size: 64, offset: 256)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!215, !447, !859, !270, !7}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !902, file: !44, line: 383, baseType: !925, size: 64, offset: 320)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DISubroutineType(types: !927)
!927 = !{null, !928}
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !902, file: !44, line: 385, baseType: !931, size: 64, offset: 384)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!215, !447, !859, !619, !7, !7, !934, !935}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !902, file: !44, line: 388, baseType: !937, size: 64, offset: 448)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{!215, !447, !859, !619, !7, !7, !846, !216}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !902, file: !44, line: 393, baseType: !941, size: 64, offset: 512)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!944, !859, !944}
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !200, line: 125, baseType: !509)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !902, file: !44, line: 394, baseType: !946, size: 64, offset: 576)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{null, !846, !7, !7}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !902, file: !44, line: 395, baseType: !950, size: 64, offset: 640)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{!215, !846, !199}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !902, file: !44, line: 396, baseType: !954, size: 64, offset: 704)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DISubroutineType(types: !956)
!956 = !{null, !846}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !902, file: !44, line: 397, baseType: !958, size: 64, offset: 768)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DISubroutineType(types: !960)
!960 = !{!403, !961, !981}
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !963)
!963 = !{!964, !965, !966, !970, !971, !972, !973, !974}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !962, file: !44, line: 321, baseType: !447, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !962, file: !44, line: 326, baseType: !619, size: 64, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !962, file: !44, line: 327, baseType: !967, size: 64, offset: 128)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !961, !112, !112}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !962, file: !44, line: 328, baseType: !216, size: 64, offset: 192)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !962, file: !44, line: 329, baseType: !215, size: 32, offset: 256)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !962, file: !44, line: 330, baseType: !195, size: 16, offset: 288)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !962, file: !44, line: 331, baseType: !195, size: 16, offset: 304)
!974 = !DIDerivedType(tag: DW_TAG_member, scope: !962, file: !44, line: 332, baseType: !975, size: 64, offset: 320)
!975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !962, file: !44, line: 332, size: 64, elements: !976)
!976 = !{!977, !978}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !975, file: !44, line: 333, baseType: !7, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !975, file: !44, line: 334, baseType: !979, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !902, file: !44, line: 402, baseType: !984, size: 64, offset: 832)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!215, !859, !846, !846, !5}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !902, file: !44, line: 404, baseType: !988, size: 64, offset: 896)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DISubroutineType(types: !990)
!990 = !{!578, !846, !991}
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !992, line: 305, baseType: !7)
!992 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!993 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !902, file: !44, line: 405, baseType: !954, size: 64, offset: 960)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !902, file: !44, line: 406, baseType: !917, size: 64, offset: 1024)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !902, file: !44, line: 407, baseType: !996, size: 64, offset: 1088)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{!215, !846, !193, !193}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !902, file: !44, line: 409, baseType: !1000, size: 64, offset: 1152)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{null, !846, !1003, !1003}
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !902, file: !44, line: 410, baseType: !1005, size: 64, offset: 1216)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!215, !859, !846}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !902, file: !44, line: 413, baseType: !1009, size: 64, offset: 1280)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!215, !1012, !447, !1014}
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !902, file: !44, line: 415, baseType: !1016, size: 64, offset: 1344)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{null, !447}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !860, file: !44, line: 466, baseType: !193, size: 64, offset: 896)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !860, file: !44, line: 467, baseType: !1021, size: 32, offset: 960)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1022, line: 8, baseType: !505)
!1022 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !860, file: !44, line: 468, baseType: !284, offset: 992)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !860, file: !44, line: 469, baseType: !267, size: 128, offset: 1024)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !860, file: !44, line: 470, baseType: !216, size: 64, offset: 1152)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !855, file: !848, line: 87, baseType: !193, size: 64, offset: 192)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !855, file: !848, line: 94, baseType: !193, size: 64, offset: 256)
!1028 = !DIDerivedType(tag: DW_TAG_member, scope: !852, file: !848, line: 96, baseType: !1029, size: 64)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !852, file: !848, line: 96, size: 64, elements: !1030)
!1030 = !{!1031}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1029, file: !848, line: 101, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !200, line: 143, baseType: !509)
!1033 = !DIDerivedType(tag: DW_TAG_member, scope: !852, file: !848, line: 103, baseType: !1034, size: 320)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !852, file: !848, line: 103, size: 320, elements: !1035)
!1035 = !{!1036, !1046, !1049, !1050}
!1036 = !DIDerivedType(tag: DW_TAG_member, scope: !1034, file: !848, line: 104, baseType: !1037, size: 128)
!1037 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1034, file: !848, line: 104, size: 128, elements: !1038)
!1038 = !{!1039, !1040}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1037, file: !848, line: 105, baseType: !267, size: 128)
!1040 = !DIDerivedType(tag: DW_TAG_member, scope: !1037, file: !848, line: 106, baseType: !1041, size: 128)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1037, file: !848, line: 106, size: 128, elements: !1042)
!1042 = !{!1043, !1044, !1045}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1041, file: !848, line: 107, baseType: !846, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1041, file: !848, line: 109, baseType: !215, size: 32, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1041, file: !848, line: 110, baseType: !215, size: 32, offset: 96)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1034, file: !848, line: 117, baseType: !1047, size: 64, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !848, line: 117, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1034, file: !848, line: 119, baseType: !216, size: 64, offset: 192)
!1050 = !DIDerivedType(tag: DW_TAG_member, scope: !1034, file: !848, line: 120, baseType: !1051, size: 64, offset: 256)
!1051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1034, file: !848, line: 120, size: 64, elements: !1052)
!1052 = !{!1053, !1054, !1055}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1051, file: !848, line: 121, baseType: !216, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1051, file: !848, line: 122, baseType: !193, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, scope: !1051, file: !848, line: 123, baseType: !1056, size: 32)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1051, file: !848, line: 123, size: 32, elements: !1057)
!1057 = !{!1058, !1059, !1060}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1056, file: !848, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1056, file: !848, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1056, file: !848, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1061 = !DIDerivedType(tag: DW_TAG_member, scope: !852, file: !848, line: 130, baseType: !1062, size: 192)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !852, file: !848, line: 130, size: 192, elements: !1063)
!1063 = !{!1064, !1065, !1066, !1067, !1068}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1062, file: !848, line: 131, baseType: !193, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1062, file: !848, line: 134, baseType: !515, size: 8, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1062, file: !848, line: 135, baseType: !515, size: 8, offset: 72)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1062, file: !848, line: 136, baseType: !301, size: 32, offset: 96)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1062, file: !848, line: 137, baseType: !7, size: 32, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, scope: !852, file: !848, line: 139, baseType: !1070, size: 256)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !852, file: !848, line: 139, size: 256, elements: !1071)
!1071 = !{!1072, !1073, !1074}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1070, file: !848, line: 140, baseType: !193, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1070, file: !848, line: 141, baseType: !301, size: 32, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1070, file: !848, line: 143, baseType: !267, size: 128, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_member, scope: !852, file: !848, line: 145, baseType: !1076, size: 256)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !852, file: !848, line: 145, size: 256, elements: !1077)
!1077 = !{!1078, !1079, !1082, !1083, !2420}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1076, file: !848, line: 146, baseType: !193, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1076, file: !848, line: 147, baseType: !1080, size: 64, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1081, line: 509, baseType: !846)
!1081 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1076, file: !848, line: 148, baseType: !193, size: 64, offset: 128)
!1083 = !DIDerivedType(tag: DW_TAG_member, scope: !1076, file: !848, line: 149, baseType: !1084, size: 64, offset: 192)
!1084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1076, file: !848, line: 149, size: 64, elements: !1085)
!1085 = !{!1086, !2419}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1084, file: !848, line: 150, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !848, line: 388, size: 7296, elements: !1089)
!1089 = !{!1090, !2418}
!1090 = !DIDerivedType(tag: DW_TAG_member, scope: !1088, file: !848, line: 389, baseType: !1091, size: 7296)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1088, file: !848, line: 389, size: 7296, elements: !1092)
!1092 = !{!1093, !1211, !1212, !1213, !1217, !1218, !1219, !1220, !1221, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1262, !1270, !1273, !1313, !1314, !2402, !2403, !2406, !2407, !2408, !2411, !2412, !2413, !2416, !2417}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1091, file: !848, line: 390, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !848, line: 305, size: 1472, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1111, !1112, !1117, !1118, !1121, !1205, !1206, !1207, !1208, !1209}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1095, file: !848, line: 308, baseType: !193, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1095, file: !848, line: 309, baseType: !193, size: 64, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1095, file: !848, line: 313, baseType: !1094, size: 64, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1095, file: !848, line: 313, baseType: !1094, size: 64, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1095, file: !848, line: 315, baseType: !881, size: 192, align: 64, offset: 256)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1095, file: !848, line: 323, baseType: !193, size: 64, offset: 448)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1095, file: !848, line: 327, baseType: !1087, size: 64, offset: 512)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1095, file: !848, line: 333, baseType: !1105, size: 64, offset: 576)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1081, line: 284, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1081, line: 284, size: 64, elements: !1107)
!1107 = !{!1108}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1106, file: !1081, line: 284, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1110, line: 19, baseType: !193)
!1110 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1095, file: !848, line: 334, baseType: !193, size: 64, offset: 640)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1095, file: !848, line: 343, baseType: !1113, size: 256, offset: 704)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1095, file: !848, line: 340, size: 256, elements: !1114)
!1114 = !{!1115, !1116}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1113, file: !848, line: 341, baseType: !881, size: 192, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1113, file: !848, line: 342, baseType: !193, size: 64, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1095, file: !848, line: 351, baseType: !267, size: 128, offset: 960)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1095, file: !848, line: 353, baseType: !1119, size: 64, offset: 1088)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !848, line: 353, flags: DIFlagFwdDecl)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1095, file: !848, line: 356, baseType: !1122, size: 64, offset: 1152)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1125)
!1125 = !{!1126, !1130, !1131, !1135, !1139, !1179, !1183, !1187, !1191, !1192, !1193, !1197, !1201}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1124, file: !14, line: 558, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{null, !1094}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1124, file: !14, line: 559, baseType: !1127, size: 64, offset: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1124, file: !14, line: 560, baseType: !1132, size: 64, offset: 128)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!215, !1094, !193}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1124, file: !14, line: 561, baseType: !1136, size: 64, offset: 192)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!215, !1094}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1124, file: !14, line: 562, baseType: !1140, size: 64, offset: 256)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!1143, !1144}
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !848, line: 682, baseType: !7)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1151, !1152, !1159, !1166, !1172, !1173, !1174, !1176, !1178}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1145, file: !14, line: 509, baseType: !1094, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1145, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1145, file: !14, line: 511, baseType: !199, size: 32, offset: 96)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1145, file: !14, line: 512, baseType: !193, size: 64, offset: 128)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1145, file: !14, line: 513, baseType: !193, size: 64, offset: 192)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1145, file: !14, line: 514, baseType: !1153, size: 64, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1081, line: 385, baseType: !1155)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1081, line: 385, size: 64, elements: !1156)
!1156 = !{!1157}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1155, file: !1081, line: 385, baseType: !1158, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1110, line: 15, baseType: !193)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1145, file: !14, line: 516, baseType: !1160, size: 64, offset: 320)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1081, line: 359, baseType: !1162)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1081, line: 359, size: 64, elements: !1163)
!1163 = !{!1164}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1162, file: !1081, line: 359, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1110, line: 16, baseType: !193)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1145, file: !14, line: 519, baseType: !1167, size: 64, offset: 384)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1110, line: 21, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1110, line: 21, size: 64, elements: !1169)
!1169 = !{!1170}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1168, file: !1110, line: 21, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1110, line: 14, baseType: !193)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1145, file: !14, line: 521, baseType: !846, size: 64, offset: 448)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1145, file: !14, line: 522, baseType: !846, size: 64, offset: 512)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1145, file: !14, line: 528, baseType: !1175, size: 64, offset: 576)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1145, file: !14, line: 532, baseType: !1177, size: 64, offset: 640)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1145, file: !14, line: 536, baseType: !1080, size: 64, offset: 704)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1124, file: !14, line: 563, baseType: !1180, size: 64, offset: 320)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!1143, !1144, !13}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1124, file: !14, line: 565, baseType: !1184, size: 64, offset: 384)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{null, !1144, !193, !193}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1124, file: !14, line: 567, baseType: !1188, size: 64, offset: 448)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!193, !1094}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1124, file: !14, line: 571, baseType: !1140, size: 64, offset: 512)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1124, file: !14, line: 574, baseType: !1140, size: 64, offset: 576)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1124, file: !14, line: 579, baseType: !1194, size: 64, offset: 640)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!215, !1094, !193, !216, !215, !215}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1124, file: !14, line: 585, baseType: !1198, size: 64, offset: 704)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!336, !1094}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1124, file: !14, line: 615, baseType: !1202, size: 64, offset: 768)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!846, !1094, !193}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1095, file: !848, line: 359, baseType: !193, size: 64, offset: 1216)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1095, file: !848, line: 361, baseType: !447, size: 64, offset: 1280)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1095, file: !848, line: 362, baseType: !216, size: 64, offset: 1344)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1095, file: !848, line: 365, baseType: !257, size: 64, offset: 1408)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1095, file: !848, line: 373, baseType: !1210, offset: 1472)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !848, line: 296, elements: !298)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1091, file: !848, line: 391, baseType: !877, size: 64, offset: 64)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1091, file: !848, line: 392, baseType: !509, size: 64, offset: 128)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1091, file: !848, line: 394, baseType: !1214, size: 64, offset: 192)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!193, !447, !193, !193, !193, !193}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1091, file: !848, line: 398, baseType: !193, size: 64, offset: 256)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1091, file: !848, line: 399, baseType: !193, size: 64, offset: 320)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1091, file: !848, line: 405, baseType: !193, size: 64, offset: 384)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1091, file: !848, line: 406, baseType: !193, size: 64, offset: 448)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1091, file: !848, line: 407, baseType: !1222, size: 64, offset: 512)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1081, line: 286, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1081, line: 286, size: 64, elements: !1225)
!1225 = !{!1226}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1224, file: !1081, line: 286, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1110, line: 18, baseType: !193)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1091, file: !848, line: 416, baseType: !301, size: 32, offset: 576)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1091, file: !848, line: 428, baseType: !301, size: 32, offset: 608)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1091, file: !848, line: 437, baseType: !301, size: 32, offset: 640)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1091, file: !848, line: 447, baseType: !301, size: 32, offset: 672)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1091, file: !848, line: 450, baseType: !257, size: 64, offset: 704)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1091, file: !848, line: 452, baseType: !215, size: 32, offset: 768)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1091, file: !848, line: 454, baseType: !284, offset: 800)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1091, file: !848, line: 457, baseType: !888, size: 256, offset: 832)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1091, file: !848, line: 459, baseType: !267, size: 128, offset: 1088)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1091, file: !848, line: 466, baseType: !193, size: 64, offset: 1216)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1091, file: !848, line: 467, baseType: !193, size: 64, offset: 1280)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1091, file: !848, line: 469, baseType: !193, size: 64, offset: 1344)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1091, file: !848, line: 470, baseType: !193, size: 64, offset: 1408)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1091, file: !848, line: 471, baseType: !259, size: 64, offset: 1472)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1091, file: !848, line: 472, baseType: !193, size: 64, offset: 1536)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1091, file: !848, line: 473, baseType: !193, size: 64, offset: 1600)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1091, file: !848, line: 474, baseType: !193, size: 64, offset: 1664)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1091, file: !848, line: 475, baseType: !193, size: 64, offset: 1728)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1091, file: !848, line: 477, baseType: !284, offset: 1792)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1091, file: !848, line: 478, baseType: !193, size: 64, offset: 1792)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1091, file: !848, line: 478, baseType: !193, size: 64, offset: 1856)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1091, file: !848, line: 478, baseType: !193, size: 64, offset: 1920)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1091, file: !848, line: 478, baseType: !193, size: 64, offset: 1984)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1091, file: !848, line: 479, baseType: !193, size: 64, offset: 2048)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1091, file: !848, line: 479, baseType: !193, size: 64, offset: 2112)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1091, file: !848, line: 479, baseType: !193, size: 64, offset: 2176)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1091, file: !848, line: 480, baseType: !193, size: 64, offset: 2240)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1091, file: !848, line: 480, baseType: !193, size: 64, offset: 2304)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1091, file: !848, line: 480, baseType: !193, size: 64, offset: 2368)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1091, file: !848, line: 480, baseType: !193, size: 64, offset: 2432)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1091, file: !848, line: 482, baseType: !1259, size: 2816, offset: 2496)
!1259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 2816, elements: !1260)
!1260 = !{!1261}
!1261 = !DISubrange(count: 44)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1091, file: !848, line: 488, baseType: !1263, size: 256, offset: 5312)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1264, line: 60, size: 256, elements: !1265)
!1264 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1265 = !{!1266}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1263, file: !1264, line: 61, baseType: !1267, size: 256)
!1267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 256, elements: !1268)
!1268 = !{!1269}
!1269 = !DISubrange(count: 4)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1091, file: !848, line: 490, baseType: !1271, size: 64, offset: 5568)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !848, line: 490, flags: DIFlagFwdDecl)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1091, file: !848, line: 493, baseType: !1274, size: 896, offset: 5632)
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1275, line: 53, baseType: !1276)
!1275 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1275, line: 13, size: 896, elements: !1277)
!1277 = !{!1278, !1279, !1280, !1281, !1284, !1285, !1286, !1287, !1307, !1308, !1309}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1276, file: !1275, line: 18, baseType: !509, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1276, file: !1275, line: 28, baseType: !259, size: 64, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1276, file: !1275, line: 31, baseType: !888, size: 256, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1276, file: !1275, line: 32, baseType: !1282, size: 64, offset: 384)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1275, line: 32, flags: DIFlagFwdDecl)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1276, file: !1275, line: 37, baseType: !192, size: 16, offset: 448)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1276, file: !1275, line: 40, baseType: !279, size: 192, offset: 512)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1276, file: !1275, line: 41, baseType: !216, size: 64, offset: 704)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1276, file: !1275, line: 42, baseType: !1288, size: 64, offset: 768)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1290)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1291, line: 13, size: 896, elements: !1292)
!1291 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1292 = !{!1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1290, file: !1291, line: 14, baseType: !216, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1290, file: !1291, line: 15, baseType: !193, size: 64, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1290, file: !1291, line: 17, baseType: !193, size: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1290, file: !1291, line: 17, baseType: !193, size: 64, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1290, file: !1291, line: 19, baseType: !112, size: 64, offset: 256)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1290, file: !1291, line: 21, baseType: !112, size: 64, offset: 320)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1290, file: !1291, line: 22, baseType: !112, size: 64, offset: 384)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1290, file: !1291, line: 23, baseType: !112, size: 64, offset: 448)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1290, file: !1291, line: 24, baseType: !112, size: 64, offset: 512)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1290, file: !1291, line: 25, baseType: !112, size: 64, offset: 576)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1290, file: !1291, line: 26, baseType: !112, size: 64, offset: 640)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1290, file: !1291, line: 27, baseType: !112, size: 64, offset: 704)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1290, file: !1291, line: 28, baseType: !112, size: 64, offset: 768)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1290, file: !1291, line: 29, baseType: !112, size: 64, offset: 832)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1276, file: !1275, line: 44, baseType: !301, size: 32, offset: 832)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1276, file: !1275, line: 50, baseType: !195, size: 16, offset: 864)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1276, file: !1275, line: 51, baseType: !1310, size: 16, offset: 880)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !196, line: 18, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !198, line: 23, baseType: !1312)
!1312 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1091, file: !848, line: 495, baseType: !193, size: 64, offset: 6528)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1091, file: !848, line: 497, baseType: !1315, size: 64, offset: 6592)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !848, line: 381, size: 384, elements: !1317)
!1317 = !{!1318, !1319, !2401}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1316, file: !848, line: 382, baseType: !301, size: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1316, file: !848, line: 383, baseType: !1320, size: 128, offset: 64)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !848, line: 376, size: 128, elements: !1321)
!1321 = !{!1322, !2399}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1320, file: !848, line: 377, baseType: !1323, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1325, line: 640, size: 48640, elements: !1326)
!1325 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1326 = !{!1327, !1333, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1348, !1366, !1377, !1462, !1463, !1464, !1475, !1476, !1478, !1479, !1480, !1481, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1558, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1596, !1598, !1599, !1600, !1612, !1613, !1614, !1615, !1616, !1617, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1641, !1646, !1830, !1831, !1832, !1833, !1837, !1840, !1843, !1846, !1849, !1853, !1952, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1998, !1999, !2000, !2001, !2002, !2007, !2008, !2009, !2012, !2013, !2016, !2019, !2022, !2025, !2057, !2060, !2061, !2140, !2141, !2144, !2145, !2148, !2149, !2150, !2154, !2155, !2156, !2169, !2170, !2171, !2181, !2186, !2189, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1324, file: !1325, line: 646, baseType: !1328, size: 128)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1329, line: 56, size: 128, elements: !1330)
!1329 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1330 = !{!1331, !1332}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1328, file: !1329, line: 57, baseType: !193, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1328, file: !1329, line: 58, baseType: !505, size: 32, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1324, file: !1325, line: 649, baseType: !1334, size: 64, offset: 128)
!1334 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !112)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1324, file: !1325, line: 657, baseType: !216, size: 64, offset: 192)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1324, file: !1325, line: 658, baseType: !323, size: 32, offset: 256)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1324, file: !1325, line: 660, baseType: !7, size: 32, offset: 288)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1324, file: !1325, line: 661, baseType: !7, size: 32, offset: 320)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1324, file: !1325, line: 684, baseType: !215, size: 32, offset: 352)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1324, file: !1325, line: 686, baseType: !215, size: 32, offset: 384)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1324, file: !1325, line: 687, baseType: !215, size: 32, offset: 416)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1324, file: !1325, line: 688, baseType: !215, size: 32, offset: 448)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1324, file: !1325, line: 689, baseType: !7, size: 32, offset: 480)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1324, file: !1325, line: 691, baseType: !1345, size: 64, offset: 512)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1347)
!1347 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1325, line: 691, flags: DIFlagFwdDecl)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1324, file: !1325, line: 692, baseType: !1349, size: 832, offset: 576)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1325, line: 451, size: 832, elements: !1350)
!1350 = !{!1351, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1349, file: !1325, line: 453, baseType: !1352, size: 128)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1325, line: 325, size: 128, elements: !1353)
!1353 = !{!1354, !1355}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1352, file: !1325, line: 326, baseType: !193, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1352, file: !1325, line: 327, baseType: !505, size: 32, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1349, file: !1325, line: 454, baseType: !881, size: 192, align: 64, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1349, file: !1325, line: 455, baseType: !267, size: 128, offset: 320)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1349, file: !1325, line: 456, baseType: !7, size: 32, offset: 448)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1349, file: !1325, line: 458, baseType: !509, size: 64, offset: 512)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1349, file: !1325, line: 459, baseType: !509, size: 64, offset: 576)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1349, file: !1325, line: 460, baseType: !509, size: 64, offset: 640)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1349, file: !1325, line: 461, baseType: !509, size: 64, offset: 704)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1349, file: !1325, line: 463, baseType: !509, size: 64, offset: 768)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1349, file: !1325, line: 465, baseType: !1365, offset: 832)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1325, line: 415, elements: !298)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1324, file: !1325, line: 693, baseType: !1367, size: 384, offset: 1408)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1325, line: 489, size: 384, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372, !1373, !1374, !1375}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1367, file: !1325, line: 490, baseType: !267, size: 128)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1367, file: !1325, line: 491, baseType: !193, size: 64, offset: 128)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1367, file: !1325, line: 492, baseType: !193, size: 64, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1367, file: !1325, line: 493, baseType: !7, size: 32, offset: 256)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1367, file: !1325, line: 494, baseType: !192, size: 16, offset: 288)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1367, file: !1325, line: 495, baseType: !192, size: 16, offset: 304)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1367, file: !1325, line: 497, baseType: !1376, size: 64, offset: 320)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1324, file: !1325, line: 697, baseType: !1378, size: 1792, offset: 1792)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1325, line: 507, size: 1792, elements: !1379)
!1379 = !{!1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1459, !1460}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1378, file: !1325, line: 508, baseType: !881, size: 192, align: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1378, file: !1325, line: 515, baseType: !509, size: 64, offset: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1378, file: !1325, line: 516, baseType: !509, size: 64, offset: 256)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1378, file: !1325, line: 517, baseType: !509, size: 64, offset: 320)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1378, file: !1325, line: 518, baseType: !509, size: 64, offset: 384)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1378, file: !1325, line: 519, baseType: !509, size: 64, offset: 448)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1378, file: !1325, line: 526, baseType: !263, size: 64, offset: 512)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1378, file: !1325, line: 527, baseType: !509, size: 64, offset: 576)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1378, file: !1325, line: 528, baseType: !7, size: 32, offset: 640)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1378, file: !1325, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1378, file: !1325, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1378, file: !1325, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1378, file: !1325, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1378, file: !1325, line: 563, baseType: !1394, size: 512, offset: 704)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1395)
!1395 = !{!1396, !1404, !1405, !1410, !1453, !1456, !1457, !1458}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1394, file: !20, line: 119, baseType: !1397, size: 256)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1398, line: 9, size: 256, elements: !1399)
!1398 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1397, file: !1398, line: 10, baseType: !881, size: 192, align: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1397, file: !1398, line: 11, baseType: !1402, size: 64, offset: 192)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1403, line: 29, baseType: !263)
!1403 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1394, file: !20, line: 120, baseType: !1402, size: 64, offset: 256)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1394, file: !20, line: 121, baseType: !1406, size: 64, offset: 320)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!19, !1409}
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1394, file: !20, line: 122, baseType: !1411, size: 64, offset: 384)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1413)
!1413 = !{!1414, !1434, !1435, !1438, !1443, !1444, !1448, !1452}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1412, file: !20, line: 160, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1416, file: !20, line: 215, baseType: !894)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1416, file: !20, line: 216, baseType: !7, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1416, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1416, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1416, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1416, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1416, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1416, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1416, file: !20, line: 233, baseType: !1402, size: 64, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1416, file: !20, line: 234, baseType: !1409, size: 64, offset: 192)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1416, file: !20, line: 235, baseType: !1402, size: 64, offset: 256)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1416, file: !20, line: 236, baseType: !1409, size: 64, offset: 320)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1416, file: !20, line: 237, baseType: !1431, size: 4096, offset: 512)
!1431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 4096, elements: !1432)
!1432 = !{!1433}
!1433 = !DISubrange(count: 8)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1412, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1412, file: !20, line: 162, baseType: !1436, size: 32, offset: 96)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !200, line: 27, baseType: !1437)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !405, line: 96, baseType: !215)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1412, file: !20, line: 163, baseType: !1439, size: 32, offset: 128)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !478, line: 276, baseType: !1440)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !478, line: 276, size: 32, elements: !1441)
!1441 = !{!1442}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1440, file: !478, line: 276, baseType: !482, size: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1412, file: !20, line: 164, baseType: !1409, size: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1412, file: !20, line: 165, baseType: !1445, size: 128, offset: 256)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1398, line: 14, size: 128, elements: !1446)
!1446 = !{!1447}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1445, file: !1398, line: 15, baseType: !873, size: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1412, file: !20, line: 166, baseType: !1449, size: 64, offset: 384)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!1402}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1412, file: !20, line: 167, baseType: !1402, size: 64, offset: 448)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1394, file: !20, line: 123, baseType: !1454, size: 8, offset: 448)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !196, line: 17, baseType: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !198, line: 21, baseType: !515)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1394, file: !20, line: 124, baseType: !1454, size: 8, offset: 456)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1394, file: !20, line: 125, baseType: !1454, size: 8, offset: 464)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1394, file: !20, line: 126, baseType: !1454, size: 8, offset: 472)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1378, file: !1325, line: 572, baseType: !1394, size: 512, offset: 1216)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1378, file: !1325, line: 580, baseType: !1461, size: 64, offset: 1728)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1324, file: !1325, line: 721, baseType: !7, size: 32, offset: 3584)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1324, file: !1325, line: 722, baseType: !215, size: 32, offset: 3616)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1324, file: !1325, line: 723, baseType: !1465, size: 64, offset: 3648)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1467)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1468, line: 17, baseType: !1469)
!1468 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1468, line: 17, size: 64, elements: !1470)
!1470 = !{!1471}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1469, file: !1468, line: 17, baseType: !1472, size: 64)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 64, elements: !1473)
!1473 = !{!1474}
!1474 = !DISubrange(count: 1)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1324, file: !1325, line: 724, baseType: !1467, size: 64, offset: 3712)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1324, file: !1325, line: 749, baseType: !1477, offset: 3776)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1325, line: 290, elements: !298)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1324, file: !1325, line: 751, baseType: !267, size: 128, offset: 3776)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1324, file: !1325, line: 757, baseType: !1087, size: 64, offset: 3904)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1324, file: !1325, line: 758, baseType: !1087, size: 64, offset: 3968)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1324, file: !1325, line: 761, baseType: !1482, size: 320, offset: 4032)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1264, line: 34, size: 320, elements: !1483)
!1483 = !{!1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1482, file: !1264, line: 35, baseType: !509, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1482, file: !1264, line: 36, baseType: !1486, size: 256, offset: 64)
!1486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1094, size: 256, elements: !1268)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1324, file: !1325, line: 766, baseType: !215, size: 32, offset: 4352)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1324, file: !1325, line: 767, baseType: !215, size: 32, offset: 4384)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1324, file: !1325, line: 768, baseType: !215, size: 32, offset: 4416)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1324, file: !1325, line: 770, baseType: !215, size: 32, offset: 4448)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1324, file: !1325, line: 772, baseType: !193, size: 64, offset: 4480)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1324, file: !1325, line: 775, baseType: !7, size: 32, offset: 4544)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1324, file: !1325, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1324, file: !1325, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1324, file: !1325, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1324, file: !1325, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1324, file: !1325, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1324, file: !1325, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1324, file: !1325, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1324, file: !1325, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1324, file: !1325, line: 831, baseType: !193, size: 64, offset: 4672)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1324, file: !1325, line: 833, baseType: !1503, size: 384, offset: 4736)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1504)
!1504 = !{!1505, !1510}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1503, file: !25, line: 26, baseType: !1506, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!112, !1509}
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, scope: !1503, file: !25, line: 27, baseType: !1511, size: 320, offset: 64)
!1511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1503, file: !25, line: 27, size: 320, elements: !1512)
!1512 = !{!1513, !1523, !1548}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1511, file: !25, line: 36, baseType: !1514, size: 320)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1511, file: !25, line: 29, size: 320, elements: !1515)
!1515 = !{!1516, !1518, !1519, !1520, !1521, !1522}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1514, file: !25, line: 30, baseType: !1517, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1514, file: !25, line: 31, baseType: !505, size: 32, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1514, file: !25, line: 32, baseType: !505, size: 32, offset: 96)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1514, file: !25, line: 33, baseType: !505, size: 32, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1514, file: !25, line: 34, baseType: !509, size: 64, offset: 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1514, file: !25, line: 35, baseType: !1517, size: 64, offset: 256)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1511, file: !25, line: 46, baseType: !1524, size: 192)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1511, file: !25, line: 38, size: 192, elements: !1525)
!1525 = !{!1526, !1527, !1528, !1547}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1524, file: !25, line: 39, baseType: !1436, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1524, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, scope: !1524, file: !25, line: 41, baseType: !1529, size: 64, offset: 64)
!1529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1524, file: !25, line: 41, size: 64, elements: !1530)
!1530 = !{!1531, !1539}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1529, file: !25, line: 42, baseType: !1532, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1534, line: 7, size: 128, elements: !1535)
!1534 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1535 = !{!1536, !1538}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1533, file: !1534, line: 8, baseType: !1537, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !405, line: 93, baseType: !265)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1533, file: !1534, line: 9, baseType: !265, size: 64, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1529, file: !25, line: 43, baseType: !1540, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1542, line: 7, size: 64, elements: !1543)
!1542 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1543 = !{!1544, !1546}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1541, file: !1542, line: 8, baseType: !1545, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1542, line: 5, baseType: !213)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1541, file: !1542, line: 9, baseType: !213, size: 32, offset: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1524, file: !25, line: 45, baseType: !509, size: 64, offset: 128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1511, file: !25, line: 54, baseType: !1549, size: 256)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1511, file: !25, line: 48, size: 256, elements: !1550)
!1550 = !{!1551, !1554, !1555, !1556, !1557}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1549, file: !25, line: 49, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1549, file: !25, line: 50, baseType: !215, size: 32, offset: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1549, file: !25, line: 51, baseType: !215, size: 32, offset: 96)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1549, file: !25, line: 52, baseType: !193, size: 64, offset: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1549, file: !25, line: 53, baseType: !193, size: 64, offset: 192)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1324, file: !1325, line: 835, baseType: !1559, size: 32, offset: 5120)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !200, line: 22, baseType: !1560)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !405, line: 28, baseType: !215)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1324, file: !1325, line: 836, baseType: !1559, size: 32, offset: 5152)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1324, file: !1325, line: 840, baseType: !193, size: 64, offset: 5184)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1324, file: !1325, line: 849, baseType: !1323, size: 64, offset: 5248)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1324, file: !1325, line: 852, baseType: !1323, size: 64, offset: 5312)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1324, file: !1325, line: 857, baseType: !267, size: 128, offset: 5376)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1324, file: !1325, line: 858, baseType: !267, size: 128, offset: 5504)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1324, file: !1325, line: 859, baseType: !1323, size: 64, offset: 5632)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1324, file: !1325, line: 867, baseType: !267, size: 128, offset: 5696)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1324, file: !1325, line: 868, baseType: !267, size: 128, offset: 5824)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1324, file: !1325, line: 871, baseType: !1571, size: 64, offset: 5952)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1579, !1580, !1587, !1588}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1572, file: !53, line: 61, baseType: !323, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1572, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1572, file: !53, line: 63, baseType: !284, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1572, file: !53, line: 65, baseType: !1578, size: 256, offset: 64)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !724, size: 256, elements: !1268)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1572, file: !53, line: 66, baseType: !724, size: 64, offset: 320)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1572, file: !53, line: 68, baseType: !1581, size: 128, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1582, line: 40, baseType: !1583)
!1582 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1582, line: 36, size: 128, elements: !1584)
!1584 = !{!1585, !1586}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1583, file: !1582, line: 37, baseType: !284)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1583, file: !1582, line: 38, baseType: !267, size: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1572, file: !53, line: 69, baseType: !455, size: 128, align: 64, offset: 512)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1572, file: !53, line: 70, baseType: !1589, size: 128, offset: 640)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1590, size: 128, elements: !1473)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1590, file: !53, line: 55, baseType: !215, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1590, file: !53, line: 56, baseType: !1594, size: 64, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1324, file: !1325, line: 872, baseType: !1597, size: 512, offset: 6016)
!1597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !728, size: 512, elements: !1268)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1324, file: !1325, line: 873, baseType: !267, size: 128, offset: 6528)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1324, file: !1325, line: 874, baseType: !267, size: 128, offset: 6656)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1324, file: !1325, line: 876, baseType: !1601, size: 64, offset: 6784)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1603, line: 26, size: 192, elements: !1604)
!1603 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1604 = !{!1605, !1606}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1602, file: !1603, line: 27, baseType: !7, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1602, file: !1603, line: 28, baseType: !1607, size: 128, offset: 64)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1608, line: 43, size: 128, elements: !1609)
!1608 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1609 = !{!1610, !1611}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1607, file: !1608, line: 44, baseType: !894)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1607, file: !1608, line: 45, baseType: !267, size: 128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1324, file: !1325, line: 879, baseType: !794, size: 64, offset: 6848)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1324, file: !1325, line: 882, baseType: !794, size: 64, offset: 6912)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1324, file: !1325, line: 884, baseType: !509, size: 64, offset: 6976)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1324, file: !1325, line: 885, baseType: !509, size: 64, offset: 7040)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1324, file: !1325, line: 890, baseType: !509, size: 64, offset: 7104)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1324, file: !1325, line: 891, baseType: !1618, size: 128, offset: 7168)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1325, line: 242, size: 128, elements: !1619)
!1619 = !{!1620, !1621, !1622}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1618, file: !1325, line: 244, baseType: !509, size: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1618, file: !1325, line: 245, baseType: !509, size: 64, offset: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1618, file: !1325, line: 246, baseType: !894, offset: 128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1324, file: !1325, line: 900, baseType: !193, size: 64, offset: 7296)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1324, file: !1325, line: 901, baseType: !193, size: 64, offset: 7360)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1324, file: !1325, line: 904, baseType: !509, size: 64, offset: 7424)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1324, file: !1325, line: 907, baseType: !509, size: 64, offset: 7488)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1324, file: !1325, line: 910, baseType: !193, size: 64, offset: 7552)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1324, file: !1325, line: 911, baseType: !193, size: 64, offset: 7616)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1324, file: !1325, line: 914, baseType: !1630, size: 640, offset: 7680)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1631, line: 123, size: 640, elements: !1632)
!1631 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1632 = !{!1633, !1639, !1640}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1630, file: !1631, line: 124, baseType: !1634, size: 576)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1635, size: 576, elements: !373)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1631, line: 108, size: 192, elements: !1636)
!1636 = !{!1637, !1638}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1635, file: !1631, line: 109, baseType: !509, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1635, file: !1631, line: 110, baseType: !1445, size: 128, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1630, file: !1631, line: 125, baseType: !7, size: 32, offset: 576)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1630, file: !1631, line: 126, baseType: !7, size: 32, offset: 608)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1324, file: !1325, line: 917, baseType: !1642, size: 192, offset: 8320)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1631, line: 134, size: 192, elements: !1643)
!1643 = !{!1644, !1645}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1642, file: !1631, line: 135, baseType: !455, size: 128, align: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1642, file: !1631, line: 136, baseType: !7, size: 32, offset: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1324, file: !1325, line: 923, baseType: !1647, size: 64, offset: 8512)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1650, line: 111, size: 1280, elements: !1651)
!1650 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1651 = !{!1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1671, !1672, !1673, !1674, !1675, !1676, !1783, !1784, !1785, !1786, !1812, !1815, !1825}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1649, file: !1650, line: 112, baseType: !301, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1649, file: !1650, line: 120, baseType: !523, size: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1649, file: !1650, line: 121, baseType: !531, size: 32, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1649, file: !1650, line: 122, baseType: !523, size: 32, offset: 96)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1649, file: !1650, line: 123, baseType: !531, size: 32, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1649, file: !1650, line: 124, baseType: !523, size: 32, offset: 160)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1649, file: !1650, line: 125, baseType: !531, size: 32, offset: 192)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1649, file: !1650, line: 126, baseType: !523, size: 32, offset: 224)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1649, file: !1650, line: 127, baseType: !531, size: 32, offset: 256)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1649, file: !1650, line: 128, baseType: !7, size: 32, offset: 288)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1649, file: !1650, line: 129, baseType: !1663, size: 64, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1664, line: 26, baseType: !1665)
!1664 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1664, line: 24, size: 64, elements: !1666)
!1666 = !{!1667}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1665, file: !1664, line: 25, baseType: !1668, size: 64)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 64, elements: !1669)
!1669 = !{!1670}
!1670 = !DISubrange(count: 2)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1649, file: !1650, line: 130, baseType: !1663, size: 64, offset: 384)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1649, file: !1650, line: 131, baseType: !1663, size: 64, offset: 448)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1649, file: !1650, line: 132, baseType: !1663, size: 64, offset: 512)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1649, file: !1650, line: 133, baseType: !1663, size: 64, offset: 576)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1649, file: !1650, line: 135, baseType: !515, size: 8, offset: 640)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1649, file: !1650, line: 137, baseType: !1677, size: 64, offset: 704)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1679, line: 189, size: 1664, elements: !1680)
!1679 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1680 = !{!1681, !1682, !1685, !1690, !1691, !1694, !1695, !1700, !1701, !1702, !1703, !1705, !1706, !1707, !1708, !1709, !1747, !1768}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1678, file: !1679, line: 190, baseType: !323, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1678, file: !1679, line: 191, baseType: !1683, size: 32, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1679, line: 28, baseType: !1684)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !200, line: 98, baseType: !213)
!1685 = !DIDerivedType(tag: DW_TAG_member, scope: !1678, file: !1679, line: 192, baseType: !1686, size: 192, offset: 64)
!1686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1678, file: !1679, line: 192, size: 192, elements: !1687)
!1687 = !{!1688, !1689}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1686, file: !1679, line: 193, baseType: !267, size: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1686, file: !1679, line: 194, baseType: !881, size: 192, align: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1678, file: !1679, line: 199, baseType: !888, size: 256, offset: 256)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1678, file: !1679, line: 200, baseType: !1692, size: 64, offset: 512)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1679, line: 200, flags: DIFlagFwdDecl)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1678, file: !1679, line: 201, baseType: !216, size: 64, offset: 576)
!1695 = !DIDerivedType(tag: DW_TAG_member, scope: !1678, file: !1679, line: 202, baseType: !1696, size: 64, offset: 640)
!1696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1678, file: !1679, line: 202, size: 64, elements: !1697)
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1696, file: !1679, line: 203, baseType: !626, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1696, file: !1679, line: 204, baseType: !626, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1678, file: !1679, line: 206, baseType: !626, size: 64, offset: 704)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1678, file: !1679, line: 207, baseType: !523, size: 32, offset: 768)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1678, file: !1679, line: 208, baseType: !531, size: 32, offset: 800)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1678, file: !1679, line: 209, baseType: !1704, size: 32, offset: 832)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1679, line: 31, baseType: !645)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1678, file: !1679, line: 210, baseType: !192, size: 16, offset: 864)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1678, file: !1679, line: 211, baseType: !192, size: 16, offset: 880)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1678, file: !1679, line: 215, baseType: !1312, size: 16, offset: 896)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1678, file: !1679, line: 222, baseType: !193, size: 64, offset: 960)
!1709 = !DIDerivedType(tag: DW_TAG_member, scope: !1678, file: !1679, line: 239, baseType: !1710, size: 320, offset: 1024)
!1710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1678, file: !1679, line: 239, size: 320, elements: !1711)
!1711 = !{!1712, !1739}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1710, file: !1679, line: 240, baseType: !1713, size: 320)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1679, line: 108, size: 320, elements: !1714)
!1714 = !{!1715, !1716, !1728, !1731, !1738}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1713, file: !1679, line: 110, baseType: !193, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, scope: !1713, file: !1679, line: 111, baseType: !1717, size: 64, offset: 64)
!1717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1713, file: !1679, line: 111, size: 64, elements: !1718)
!1718 = !{!1719, !1727}
!1719 = !DIDerivedType(tag: DW_TAG_member, scope: !1717, file: !1679, line: 112, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1717, file: !1679, line: 112, size: 64, elements: !1721)
!1721 = !{!1722, !1723}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1720, file: !1679, line: 114, baseType: !195, size: 16)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1720, file: !1679, line: 115, baseType: !1724, size: 48, offset: 16)
!1724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 48, elements: !1725)
!1725 = !{!1726}
!1726 = !DISubrange(count: 6)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1717, file: !1679, line: 121, baseType: !193, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1713, file: !1679, line: 123, baseType: !1729, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1679, line: 96, flags: DIFlagFwdDecl)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1713, file: !1679, line: 124, baseType: !1732, size: 64, offset: 192)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1679, line: 102, size: 192, elements: !1734)
!1734 = !{!1735, !1736, !1737}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1733, file: !1679, line: 103, baseType: !455, size: 128, align: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1733, file: !1679, line: 104, baseType: !323, size: 32, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1733, file: !1679, line: 105, baseType: !578, size: 8, offset: 160)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1713, file: !1679, line: 125, baseType: !336, size: 64, offset: 256)
!1739 = !DIDerivedType(tag: DW_TAG_member, scope: !1710, file: !1679, line: 241, baseType: !1740, size: 320)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1710, file: !1679, line: 241, size: 320, elements: !1741)
!1741 = !{!1742, !1743, !1744, !1745, !1746}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1740, file: !1679, line: 242, baseType: !193, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1740, file: !1679, line: 243, baseType: !193, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1740, file: !1679, line: 244, baseType: !1729, size: 64, offset: 128)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1740, file: !1679, line: 245, baseType: !1732, size: 64, offset: 192)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1740, file: !1679, line: 246, baseType: !202, size: 64, offset: 256)
!1747 = !DIDerivedType(tag: DW_TAG_member, scope: !1678, file: !1679, line: 254, baseType: !1748, size: 256, offset: 1344)
!1748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1678, file: !1679, line: 254, size: 256, elements: !1749)
!1749 = !{!1750, !1756}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1748, file: !1679, line: 255, baseType: !1751, size: 256)
!1751 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1679, line: 128, size: 256, elements: !1752)
!1752 = !{!1753, !1754}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1751, file: !1679, line: 129, baseType: !216, size: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1751, file: !1679, line: 130, baseType: !1755, size: 256)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !216, size: 256, elements: !1268)
!1756 = !DIDerivedType(tag: DW_TAG_member, scope: !1748, file: !1679, line: 256, baseType: !1757, size: 256)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1748, file: !1679, line: 256, size: 256, elements: !1758)
!1758 = !{!1759, !1760}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1757, file: !1679, line: 258, baseType: !267, size: 128)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1757, file: !1679, line: 259, baseType: !1761, size: 128, offset: 128)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1762, line: 22, size: 128, elements: !1763)
!1762 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1763 = !{!1764, !1767}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1761, file: !1762, line: 23, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1762, line: 23, flags: DIFlagFwdDecl)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1761, file: !1762, line: 24, baseType: !193, size: 64, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1678, file: !1679, line: 274, baseType: !1769, size: 64, offset: 1600)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1679, line: 170, size: 192, elements: !1771)
!1771 = !{!1772, !1781, !1782}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1770, file: !1679, line: 171, baseType: !1773, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1679, line: 165, baseType: !1774)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!215, !1677, !1777, !1779, !1677}
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1730)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1751)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1770, file: !1679, line: 172, baseType: !1677, size: 64, offset: 64)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1770, file: !1679, line: 173, baseType: !1729, size: 64, offset: 128)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1649, file: !1650, line: 138, baseType: !1677, size: 64, offset: 768)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1649, file: !1650, line: 139, baseType: !1677, size: 64, offset: 832)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1649, file: !1650, line: 140, baseType: !1677, size: 64, offset: 896)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1649, file: !1650, line: 145, baseType: !1787, size: 64, offset: 960)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1789, line: 13, size: 896, elements: !1790)
!1789 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1790 = !{!1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1788, file: !1789, line: 14, baseType: !323, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1788, file: !1789, line: 15, baseType: !301, size: 32, offset: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1788, file: !1789, line: 16, baseType: !301, size: 32, offset: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1788, file: !1789, line: 21, baseType: !257, size: 64, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1788, file: !1789, line: 27, baseType: !193, size: 64, offset: 192)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1788, file: !1789, line: 28, baseType: !193, size: 64, offset: 256)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1788, file: !1789, line: 29, baseType: !257, size: 64, offset: 320)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1788, file: !1789, line: 32, baseType: !728, size: 128, offset: 384)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1788, file: !1789, line: 33, baseType: !523, size: 32, offset: 512)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1788, file: !1789, line: 37, baseType: !257, size: 64, offset: 576)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1788, file: !1789, line: 44, baseType: !1802, size: 256, offset: 640)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1803, line: 15, size: 256, elements: !1804)
!1803 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1804 = !{!1805, !1806, !1807, !1808, !1809, !1810, !1811}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1802, file: !1803, line: 16, baseType: !894)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1802, file: !1803, line: 18, baseType: !215, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1802, file: !1803, line: 19, baseType: !215, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1802, file: !1803, line: 20, baseType: !215, size: 32, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1802, file: !1803, line: 21, baseType: !215, size: 32, offset: 96)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1802, file: !1803, line: 22, baseType: !193, size: 64, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1802, file: !1803, line: 23, baseType: !193, size: 64, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1649, file: !1650, line: 146, baseType: !1813, size: 64, offset: 1024)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !524, line: 18, flags: DIFlagFwdDecl)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1649, file: !1650, line: 147, baseType: !1816, size: 64, offset: 1088)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1650, line: 25, size: 64, elements: !1818)
!1818 = !{!1819, !1820, !1821}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1817, file: !1650, line: 26, baseType: !301, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1817, file: !1650, line: 27, baseType: !215, size: 32, offset: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1817, file: !1650, line: 28, baseType: !1822, offset: 64)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, elements: !1823)
!1823 = !{!1824}
!1824 = !DISubrange(count: 0)
!1825 = !DIDerivedType(tag: DW_TAG_member, scope: !1649, file: !1650, line: 149, baseType: !1826, size: 128, offset: 1152)
!1826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1649, file: !1650, line: 149, size: 128, elements: !1827)
!1827 = !{!1828, !1829}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1826, file: !1650, line: 150, baseType: !215, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1826, file: !1650, line: 151, baseType: !455, size: 128, align: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1324, file: !1325, line: 926, baseType: !1647, size: 64, offset: 8576)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1324, file: !1325, line: 929, baseType: !1647, size: 64, offset: 8640)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1324, file: !1325, line: 933, baseType: !1677, size: 64, offset: 8704)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1324, file: !1325, line: 943, baseType: !1834, size: 128, offset: 8768)
!1834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 128, elements: !1835)
!1835 = !{!1836}
!1836 = !DISubrange(count: 16)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1324, file: !1325, line: 945, baseType: !1838, size: 64, offset: 8896)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1325, line: 49, flags: DIFlagFwdDecl)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1324, file: !1325, line: 956, baseType: !1841, size: 64, offset: 8960)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1325, line: 45, flags: DIFlagFwdDecl)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1324, file: !1325, line: 959, baseType: !1844, size: 64, offset: 9024)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1325, line: 959, flags: DIFlagFwdDecl)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1324, file: !1325, line: 962, baseType: !1847, size: 64, offset: 9088)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1325, line: 66, flags: DIFlagFwdDecl)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1324, file: !1325, line: 966, baseType: !1850, size: 64, offset: 9152)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1852, line: 35, flags: DIFlagFwdDecl)
!1852 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1324, file: !1325, line: 969, baseType: !1854, size: 64, offset: 9216)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1856, line: 82, size: 7296, elements: !1857)
!1856 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1857 = !{!1858, !1859, !1860, !1861, !1862, !1863, !1864, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1893, !1902, !1903, !1905, !1906, !1907, !1908, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1938, !1939, !1946, !1947, !1948, !1949, !1950, !1951}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1855, file: !1856, line: 83, baseType: !323, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1855, file: !1856, line: 84, baseType: !301, size: 32, offset: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1855, file: !1856, line: 85, baseType: !215, size: 32, offset: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1855, file: !1856, line: 86, baseType: !267, size: 128, offset: 128)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1855, file: !1856, line: 88, baseType: !1581, size: 128, offset: 256)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1855, file: !1856, line: 91, baseType: !1323, size: 64, offset: 384)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1855, file: !1856, line: 94, baseType: !1865, size: 192, offset: 448)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1866, line: 30, size: 192, elements: !1867)
!1866 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1865, file: !1866, line: 31, baseType: !267, size: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1865, file: !1866, line: 32, baseType: !1870, size: 64, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1871, line: 25, baseType: !1872)
!1871 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1871, line: 23, size: 64, elements: !1873)
!1873 = !{!1874}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1872, file: !1871, line: 24, baseType: !1472, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1855, file: !1856, line: 97, baseType: !724, size: 64, offset: 640)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1855, file: !1856, line: 100, baseType: !215, size: 32, offset: 704)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1855, file: !1856, line: 106, baseType: !215, size: 32, offset: 736)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1855, file: !1856, line: 107, baseType: !1323, size: 64, offset: 768)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1855, file: !1856, line: 110, baseType: !215, size: 32, offset: 832)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1855, file: !1856, line: 111, baseType: !7, size: 32, offset: 864)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1855, file: !1856, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1855, file: !1856, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1855, file: !1856, line: 128, baseType: !215, size: 32, offset: 928)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1855, file: !1856, line: 129, baseType: !267, size: 128, offset: 960)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1855, file: !1856, line: 132, baseType: !1394, size: 512, offset: 1088)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1855, file: !1856, line: 133, baseType: !1402, size: 64, offset: 1600)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1855, file: !1856, line: 140, baseType: !1888, size: 256, offset: 1664)
!1888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1889, size: 256, elements: !1669)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1856, line: 38, size: 128, elements: !1890)
!1890 = !{!1891, !1892}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1889, file: !1856, line: 39, baseType: !509, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1889, file: !1856, line: 40, baseType: !509, size: 64, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1855, file: !1856, line: 146, baseType: !1894, size: 192, offset: 1920)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1856, line: 66, size: 192, elements: !1895)
!1895 = !{!1896}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1894, file: !1856, line: 67, baseType: !1897, size: 192)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1856, line: 47, size: 192, elements: !1898)
!1898 = !{!1899, !1900, !1901}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1897, file: !1856, line: 48, baseType: !259, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1897, file: !1856, line: 49, baseType: !259, size: 64, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1897, file: !1856, line: 50, baseType: !259, size: 64, offset: 128)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1855, file: !1856, line: 150, baseType: !1630, size: 640, offset: 2112)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1855, file: !1856, line: 153, baseType: !1904, size: 256, offset: 2752)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1571, size: 256, elements: !1268)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1855, file: !1856, line: 159, baseType: !1571, size: 64, offset: 3008)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1855, file: !1856, line: 162, baseType: !215, size: 32, offset: 3072)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1855, file: !1856, line: 164, baseType: !314, size: 64, offset: 3136)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1855, file: !1856, line: 175, baseType: !1909, size: 32, offset: 3200)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !478, line: 805, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !478, line: 798, size: 32, elements: !1911)
!1911 = !{!1912, !1913}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1910, file: !478, line: 803, baseType: !477, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1910, file: !478, line: 804, baseType: !284, offset: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1855, file: !1856, line: 176, baseType: !509, size: 64, offset: 3264)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1855, file: !1856, line: 176, baseType: !509, size: 64, offset: 3328)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1855, file: !1856, line: 176, baseType: !509, size: 64, offset: 3392)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1855, file: !1856, line: 176, baseType: !509, size: 64, offset: 3456)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1855, file: !1856, line: 177, baseType: !509, size: 64, offset: 3520)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1855, file: !1856, line: 178, baseType: !509, size: 64, offset: 3584)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1855, file: !1856, line: 179, baseType: !1618, size: 128, offset: 3648)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1855, file: !1856, line: 180, baseType: !193, size: 64, offset: 3776)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1855, file: !1856, line: 180, baseType: !193, size: 64, offset: 3840)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1855, file: !1856, line: 180, baseType: !193, size: 64, offset: 3904)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1855, file: !1856, line: 180, baseType: !193, size: 64, offset: 3968)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1855, file: !1856, line: 181, baseType: !193, size: 64, offset: 4032)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1855, file: !1856, line: 181, baseType: !193, size: 64, offset: 4096)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1855, file: !1856, line: 181, baseType: !193, size: 64, offset: 4160)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1855, file: !1856, line: 181, baseType: !193, size: 64, offset: 4224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1855, file: !1856, line: 182, baseType: !193, size: 64, offset: 4288)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1855, file: !1856, line: 182, baseType: !193, size: 64, offset: 4352)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1855, file: !1856, line: 182, baseType: !193, size: 64, offset: 4416)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1855, file: !1856, line: 182, baseType: !193, size: 64, offset: 4480)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1855, file: !1856, line: 183, baseType: !193, size: 64, offset: 4544)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1855, file: !1856, line: 183, baseType: !193, size: 64, offset: 4608)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1855, file: !1856, line: 184, baseType: !1936, offset: 4672)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1937, line: 12, elements: !298)
!1937 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1855, file: !1856, line: 192, baseType: !511, size: 64, offset: 4672)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1855, file: !1856, line: 203, baseType: !1940, size: 2048, offset: 4736)
!1940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1941, size: 2048, elements: !1835)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1942, line: 43, size: 128, elements: !1943)
!1942 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1943 = !{!1944, !1945}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1941, file: !1942, line: 44, baseType: !419, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1941, file: !1942, line: 45, baseType: !419, size: 64, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1855, file: !1856, line: 220, baseType: !578, size: 8, offset: 6784)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1855, file: !1856, line: 221, baseType: !1312, size: 16, offset: 6800)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1855, file: !1856, line: 222, baseType: !1312, size: 16, offset: 6816)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1855, file: !1856, line: 224, baseType: !1087, size: 64, offset: 6848)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1855, file: !1856, line: 227, baseType: !279, size: 192, offset: 6912)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1855, file: !1856, line: 233, baseType: !279, size: 192, offset: 7104)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1324, file: !1325, line: 970, baseType: !1953, size: 64, offset: 9280)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1856, line: 20, size: 16576, elements: !1955)
!1955 = !{!1956, !1957, !1958, !1959}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1954, file: !1856, line: 21, baseType: !284)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1954, file: !1856, line: 22, baseType: !323, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1954, file: !1856, line: 23, baseType: !1581, size: 128, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1954, file: !1856, line: 24, baseType: !1960, size: 16384, offset: 192)
!1960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1961, size: 16384, elements: !377)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1866, line: 49, size: 256, elements: !1962)
!1962 = !{!1963}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1961, file: !1866, line: 50, baseType: !1964, size: 256)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1866, line: 35, size: 256, elements: !1965)
!1965 = !{!1966, !1973, !1974, !1980}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1964, file: !1866, line: 37, baseType: !1967, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1968, line: 19, baseType: !1969)
!1968 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1968, line: 18, baseType: !1971)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{null, !215}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1964, file: !1866, line: 38, baseType: !193, size: 64, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1964, file: !1866, line: 44, baseType: !1975, size: 64, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1968, line: 22, baseType: !1976)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1968, line: 21, baseType: !1978)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{null}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1964, file: !1866, line: 46, baseType: !1870, size: 64, offset: 192)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1324, file: !1325, line: 971, baseType: !1870, size: 64, offset: 9344)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1324, file: !1325, line: 972, baseType: !1870, size: 64, offset: 9408)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1324, file: !1325, line: 974, baseType: !1870, size: 64, offset: 9472)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1324, file: !1325, line: 975, baseType: !1865, size: 192, offset: 9536)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1324, file: !1325, line: 976, baseType: !193, size: 64, offset: 9728)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1324, file: !1325, line: 977, baseType: !417, size: 64, offset: 9792)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1324, file: !1325, line: 978, baseType: !7, size: 32, offset: 9856)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1324, file: !1325, line: 980, baseType: !458, size: 64, offset: 9920)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1324, file: !1325, line: 989, baseType: !1990, size: 128, offset: 9984)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1991, line: 35, size: 128, elements: !1992)
!1991 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1992 = !{!1993, !1994, !1995}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1990, file: !1991, line: 36, baseType: !215, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1990, file: !1991, line: 37, baseType: !301, size: 32, offset: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1990, file: !1991, line: 38, baseType: !1996, size: 64, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1991, line: 23, flags: DIFlagFwdDecl)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1324, file: !1325, line: 992, baseType: !509, size: 64, offset: 10112)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1324, file: !1325, line: 993, baseType: !509, size: 64, offset: 10176)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1324, file: !1325, line: 996, baseType: !284, offset: 10240)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1324, file: !1325, line: 999, baseType: !894, offset: 10240)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1324, file: !1325, line: 1001, baseType: !2003, size: 64, offset: 10240)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1325, line: 636, size: 64, elements: !2004)
!2004 = !{!2005}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2003, file: !1325, line: 637, baseType: !2006, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1324, file: !1325, line: 1005, baseType: !873, size: 128, offset: 10304)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1324, file: !1325, line: 1007, baseType: !1323, size: 64, offset: 10432)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1324, file: !1325, line: 1009, baseType: !2010, size: 64, offset: 10496)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1325, line: 1009, flags: DIFlagFwdDecl)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1324, file: !1325, line: 1043, baseType: !216, size: 64, offset: 10560)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1324, file: !1325, line: 1046, baseType: !2014, size: 64, offset: 10624)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1325, line: 41, flags: DIFlagFwdDecl)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1324, file: !1325, line: 1050, baseType: !2017, size: 64, offset: 10688)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1325, line: 42, flags: DIFlagFwdDecl)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1324, file: !1325, line: 1054, baseType: !2020, size: 64, offset: 10752)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1325, line: 55, flags: DIFlagFwdDecl)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1324, file: !1325, line: 1056, baseType: !2023, size: 64, offset: 10816)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1325, line: 40, flags: DIFlagFwdDecl)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1324, file: !1325, line: 1058, baseType: !2026, size: 64, offset: 10880)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2028, line: 99, size: 704, elements: !2029)
!2028 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2029 = !{!2030, !2031, !2032, !2033, !2034, !2035, !2036, !2055, !2056}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2027, file: !2028, line: 100, baseType: !257, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2027, file: !2028, line: 101, baseType: !301, size: 32, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2027, file: !2028, line: 102, baseType: !301, size: 32, offset: 96)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2027, file: !2028, line: 105, baseType: !284, offset: 128)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2027, file: !2028, line: 107, baseType: !192, size: 16, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2027, file: !2028, line: 109, baseType: !864, size: 128, offset: 192)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2027, file: !2028, line: 110, baseType: !2037, size: 64, offset: 320)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2028, line: 73, size: 448, elements: !2039)
!2039 = !{!2040, !2043, !2044, !2049, !2054}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2038, file: !2028, line: 74, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2028, line: 74, flags: DIFlagFwdDecl)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2038, file: !2028, line: 75, baseType: !2026, size: 64, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !2028, line: 83, baseType: !2045, size: 128, offset: 128)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !2028, line: 83, size: 128, elements: !2046)
!2046 = !{!2047, !2048}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2045, file: !2028, line: 84, baseType: !267, size: 128)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2045, file: !2028, line: 85, baseType: !1047, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !2028, line: 87, baseType: !2050, size: 128, offset: 256)
!2050 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !2028, line: 87, size: 128, elements: !2051)
!2051 = !{!2052, !2053}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2050, file: !2028, line: 88, baseType: !728, size: 128)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2050, file: !2028, line: 89, baseType: !455, size: 128, align: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2038, file: !2028, line: 92, baseType: !7, size: 32, offset: 384)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2027, file: !2028, line: 111, baseType: !724, size: 64, offset: 384)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2027, file: !2028, line: 113, baseType: !254, size: 256, offset: 448)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1324, file: !1325, line: 1061, baseType: !2058, size: 64, offset: 10944)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1325, line: 43, flags: DIFlagFwdDecl)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1324, file: !1325, line: 1064, baseType: !193, size: 64, offset: 11008)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1324, file: !1325, line: 1065, baseType: !2062, size: 64, offset: 11072)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1866, line: 14, baseType: !2064)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1866, line: 12, size: 384, elements: !2065)
!2065 = !{!2066}
!2066 = !DIDerivedType(tag: DW_TAG_member, scope: !2064, file: !1866, line: 13, baseType: !2067, size: 384)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2064, file: !1866, line: 13, size: 384, elements: !2068)
!2068 = !{!2069, !2070, !2071, !2072}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2067, file: !1866, line: 13, baseType: !215, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2067, file: !1866, line: 13, baseType: !215, size: 32, offset: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2067, file: !1866, line: 13, baseType: !215, size: 32, offset: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2067, file: !1866, line: 13, baseType: !2073, size: 256, offset: 128)
!2073 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2074, line: 32, size: 256, elements: !2075)
!2074 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2075 = !{!2076, !2081, !2094, !2100, !2109, !2129, !2134}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2073, file: !2074, line: 37, baseType: !2077, size: 64)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2073, file: !2074, line: 34, size: 64, elements: !2078)
!2078 = !{!2079, !2080}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2077, file: !2074, line: 35, baseType: !1560, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2077, file: !2074, line: 36, baseType: !529, size: 32, offset: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2073, file: !2074, line: 45, baseType: !2082, size: 192)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2073, file: !2074, line: 40, size: 192, elements: !2083)
!2083 = !{!2084, !2086, !2087, !2093}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2082, file: !2074, line: 41, baseType: !2085, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !405, line: 95, baseType: !215)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2082, file: !2074, line: 42, baseType: !215, size: 32, offset: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2082, file: !2074, line: 43, baseType: !2088, size: 64, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2074, line: 11, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2074, line: 8, size: 64, elements: !2090)
!2090 = !{!2091, !2092}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2089, file: !2074, line: 9, baseType: !215, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2089, file: !2074, line: 10, baseType: !216, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2082, file: !2074, line: 44, baseType: !215, size: 32, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2073, file: !2074, line: 52, baseType: !2095, size: 128)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2073, file: !2074, line: 48, size: 128, elements: !2096)
!2096 = !{!2097, !2098, !2099}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2095, file: !2074, line: 49, baseType: !1560, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2095, file: !2074, line: 50, baseType: !529, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2095, file: !2074, line: 51, baseType: !2088, size: 64, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2073, file: !2074, line: 61, baseType: !2101, size: 256)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2073, file: !2074, line: 55, size: 256, elements: !2102)
!2102 = !{!2103, !2104, !2105, !2106, !2108}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2101, file: !2074, line: 56, baseType: !1560, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2101, file: !2074, line: 57, baseType: !529, size: 32, offset: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2101, file: !2074, line: 58, baseType: !215, size: 32, offset: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2101, file: !2074, line: 59, baseType: !2107, size: 64, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !405, line: 94, baseType: !406)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2101, file: !2074, line: 60, baseType: !2107, size: 64, offset: 192)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2073, file: !2074, line: 95, baseType: !2110, size: 256)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2073, file: !2074, line: 64, size: 256, elements: !2111)
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2110, file: !2074, line: 65, baseType: !216, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, scope: !2110, file: !2074, line: 77, baseType: !2114, size: 192, offset: 64)
!2114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2110, file: !2074, line: 77, size: 192, elements: !2115)
!2115 = !{!2116, !2117, !2124}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2114, file: !2074, line: 82, baseType: !1312, size: 16)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2114, file: !2074, line: 88, baseType: !2118, size: 192)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2114, file: !2074, line: 84, size: 192, elements: !2119)
!2119 = !{!2120, !2122, !2123}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2118, file: !2074, line: 85, baseType: !2121, size: 64)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 64, elements: !1432)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2118, file: !2074, line: 86, baseType: !216, size: 64, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2118, file: !2074, line: 87, baseType: !216, size: 64, offset: 128)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2114, file: !2074, line: 93, baseType: !2125, size: 96)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2114, file: !2074, line: 90, size: 96, elements: !2126)
!2126 = !{!2127, !2128}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2125, file: !2074, line: 91, baseType: !2121, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2125, file: !2074, line: 92, baseType: !506, size: 32, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2073, file: !2074, line: 101, baseType: !2130, size: 128)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2073, file: !2074, line: 98, size: 128, elements: !2131)
!2131 = !{!2132, !2133}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2130, file: !2074, line: 99, baseType: !112, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2130, file: !2074, line: 100, baseType: !215, size: 32, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2073, file: !2074, line: 108, baseType: !2135, size: 128)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2073, file: !2074, line: 104, size: 128, elements: !2136)
!2136 = !{!2137, !2138, !2139}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2135, file: !2074, line: 105, baseType: !216, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2135, file: !2074, line: 106, baseType: !215, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2135, file: !2074, line: 107, baseType: !7, size: 32, offset: 96)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1324, file: !1325, line: 1067, baseType: !1936, offset: 11136)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1324, file: !1325, line: 1099, baseType: !2142, size: 64, offset: 11136)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1325, line: 56, flags: DIFlagFwdDecl)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1324, file: !1325, line: 1103, baseType: !267, size: 128, offset: 11200)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1324, file: !1325, line: 1104, baseType: !2146, size: 64, offset: 11328)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1325, line: 46, flags: DIFlagFwdDecl)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1324, file: !1325, line: 1105, baseType: !279, size: 192, offset: 11392)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1324, file: !1325, line: 1106, baseType: !7, size: 32, offset: 11584)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1324, file: !1325, line: 1109, baseType: !2151, size: 128, offset: 11648)
!2151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2152, size: 128, elements: !1669)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2153 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1325, line: 51, flags: DIFlagFwdDecl)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1324, file: !1325, line: 1110, baseType: !279, size: 192, offset: 11776)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1324, file: !1325, line: 1111, baseType: !267, size: 128, offset: 11968)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1324, file: !1325, line: 1173, baseType: !2157, size: 64, offset: 12096)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2159, line: 62, size: 256, align: 256, elements: !2160)
!2159 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2160 = !{!2161, !2162, !2163, !2168}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2158, file: !2159, line: 75, baseType: !506, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2158, file: !2159, line: 90, baseType: !506, size: 32, offset: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2158, file: !2159, line: 124, baseType: !2164, size: 64, offset: 64)
!2164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2158, file: !2159, line: 109, size: 64, elements: !2165)
!2165 = !{!2166, !2167}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2164, file: !2159, line: 110, baseType: !510, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2164, file: !2159, line: 112, baseType: !510, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2158, file: !2159, line: 144, baseType: !506, size: 32, offset: 128)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1324, file: !1325, line: 1174, baseType: !505, size: 32, offset: 12160)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1324, file: !1325, line: 1179, baseType: !193, size: 64, offset: 12224)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1324, file: !1325, line: 1182, baseType: !2172, size: 128, offset: 12288)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1264, line: 76, size: 128, elements: !2173)
!2173 = !{!2174, !2179, !2180}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2172, file: !1264, line: 85, baseType: !2175, size: 64)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2176, line: 7, size: 64, elements: !2177)
!2176 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2177 = !{!2178}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2175, file: !2176, line: 12, baseType: !1469, size: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2172, file: !1264, line: 88, baseType: !578, size: 8, offset: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2172, file: !1264, line: 95, baseType: !578, size: 8, offset: 72)
!2181 = !DIDerivedType(tag: DW_TAG_member, scope: !1324, file: !1325, line: 1184, baseType: !2182, size: 128, offset: 12416)
!2182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1324, file: !1325, line: 1184, size: 128, elements: !2183)
!2183 = !{!2184, !2185}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2182, file: !1325, line: 1185, baseType: !323, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2182, file: !1325, line: 1186, baseType: !455, size: 128, align: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1324, file: !1325, line: 1190, baseType: !2187, size: 64, offset: 12544)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1325, line: 53, flags: DIFlagFwdDecl)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1324, file: !1325, line: 1192, baseType: !2190, size: 128, offset: 12608)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1264, line: 64, size: 128, elements: !2191)
!2191 = !{!2192, !2193, !2194}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2190, file: !1264, line: 65, baseType: !846, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2190, file: !1264, line: 67, baseType: !506, size: 32, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2190, file: !1264, line: 68, baseType: !506, size: 32, offset: 96)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1324, file: !1325, line: 1206, baseType: !215, size: 32, offset: 12736)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1324, file: !1325, line: 1207, baseType: !215, size: 32, offset: 12768)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1324, file: !1325, line: 1209, baseType: !193, size: 64, offset: 12800)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1324, file: !1325, line: 1219, baseType: !509, size: 64, offset: 12864)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1324, file: !1325, line: 1220, baseType: !509, size: 64, offset: 12928)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1324, file: !1325, line: 1317, baseType: !215, size: 32, offset: 12992)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1324, file: !1325, line: 1319, baseType: !1323, size: 64, offset: 13056)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1324, file: !1325, line: 1322, baseType: !2203, size: 64, offset: 13120)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2205, line: 56, size: 512, elements: !2206)
!2205 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212, !2213, !2215}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2204, file: !2205, line: 57, baseType: !2203, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2204, file: !2205, line: 58, baseType: !216, size: 64, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2204, file: !2205, line: 59, baseType: !193, size: 64, offset: 128)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2204, file: !2205, line: 60, baseType: !193, size: 64, offset: 192)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2204, file: !2205, line: 61, baseType: !934, size: 64, offset: 256)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2204, file: !2205, line: 62, baseType: !7, size: 32, offset: 320)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2204, file: !2205, line: 63, baseType: !2214, size: 64, offset: 384)
!2214 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !200, line: 153, baseType: !509)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2204, file: !2205, line: 64, baseType: !2216, size: 64, offset: 448)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1324, file: !1325, line: 1326, baseType: !323, size: 32, offset: 13184)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1324, file: !1325, line: 1342, baseType: !216, size: 64, offset: 13248)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1324, file: !1325, line: 1343, baseType: !510, size: 64, offset: 13312)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1324, file: !1325, line: 1344, baseType: !509, size: 64, offset: 13376)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1324, file: !1325, line: 1345, baseType: !510, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1324, file: !1325, line: 1346, baseType: !510, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1324, file: !1325, line: 1347, baseType: !510, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1324, file: !1325, line: 1348, baseType: !455, size: 128, align: 64, offset: 13504)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1324, file: !1325, line: 1358, baseType: !2227, size: 34816, offset: 13824)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2228, line: 485, size: 34816, elements: !2229)
!2228 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2229 = !{!2230, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2259, !2260, !2261, !2262, !2263, !2264, !2267, !2268, !2269}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2227, file: !2228, line: 487, baseType: !2231, size: 192)
!2231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2232, size: 192, elements: !373)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2233, line: 16, size: 64, elements: !2234)
!2233 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2234 = !{!2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2232, file: !2233, line: 17, baseType: !195, size: 16)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2232, file: !2233, line: 18, baseType: !195, size: 16, offset: 16)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2232, file: !2233, line: 19, baseType: !195, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2232, file: !2233, line: 19, baseType: !195, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2232, file: !2233, line: 19, baseType: !195, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2232, file: !2233, line: 19, baseType: !195, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2232, file: !2233, line: 19, baseType: !195, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2232, file: !2233, line: 20, baseType: !195, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2232, file: !2233, line: 20, baseType: !195, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2232, file: !2233, line: 20, baseType: !195, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2232, file: !2233, line: 20, baseType: !195, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2232, file: !2233, line: 20, baseType: !195, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2232, file: !2233, line: 20, baseType: !195, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2227, file: !2228, line: 491, baseType: !193, size: 64, offset: 192)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2227, file: !2228, line: 495, baseType: !192, size: 16, offset: 256)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2227, file: !2228, line: 496, baseType: !192, size: 16, offset: 272)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2227, file: !2228, line: 497, baseType: !192, size: 16, offset: 288)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2227, file: !2228, line: 498, baseType: !192, size: 16, offset: 304)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2227, file: !2228, line: 502, baseType: !193, size: 64, offset: 320)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2227, file: !2228, line: 503, baseType: !193, size: 64, offset: 384)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2227, file: !2228, line: 514, baseType: !2256, size: 256, offset: 448)
!2256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2257, size: 256, elements: !1268)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2228, line: 483, flags: DIFlagFwdDecl)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2227, file: !2228, line: 516, baseType: !193, size: 64, offset: 704)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2227, file: !2228, line: 518, baseType: !193, size: 64, offset: 768)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2227, file: !2228, line: 520, baseType: !193, size: 64, offset: 832)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2227, file: !2228, line: 521, baseType: !193, size: 64, offset: 896)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2227, file: !2228, line: 522, baseType: !193, size: 64, offset: 960)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2227, file: !2228, line: 528, baseType: !2265, size: 64, offset: 1024)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2228, line: 10, flags: DIFlagFwdDecl)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2227, file: !2228, line: 535, baseType: !193, size: 64, offset: 1088)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2227, file: !2228, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2227, file: !2228, line: 540, baseType: !2270, size: 33280, offset: 1536)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2271, line: 317, size: 33280, elements: !2272)
!2271 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2272 = !{!2273, !2274, !2275}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2270, file: !2271, line: 330, baseType: !7, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2270, file: !2271, line: 337, baseType: !193, size: 64, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2270, file: !2271, line: 348, baseType: !2276, size: 32768, offset: 512)
!2276 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2271, line: 304, size: 32768, elements: !2277)
!2277 = !{!2278, !2293, !2332, !2382, !2395}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2276, file: !2271, line: 305, baseType: !2279, size: 896)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2271, line: 12, size: 896, elements: !2280)
!2280 = !{!2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2292}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2279, file: !2271, line: 13, baseType: !505, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2279, file: !2271, line: 14, baseType: !505, size: 32, offset: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2279, file: !2271, line: 15, baseType: !505, size: 32, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2279, file: !2271, line: 16, baseType: !505, size: 32, offset: 96)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2279, file: !2271, line: 17, baseType: !505, size: 32, offset: 128)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2279, file: !2271, line: 18, baseType: !505, size: 32, offset: 160)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2279, file: !2271, line: 19, baseType: !505, size: 32, offset: 192)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2279, file: !2271, line: 22, baseType: !2289, size: 640, offset: 224)
!2289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !505, size: 640, elements: !2290)
!2290 = !{!2291}
!2291 = !DISubrange(count: 20)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2279, file: !2271, line: 25, baseType: !505, size: 32, offset: 864)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2276, file: !2271, line: 306, baseType: !2294, size: 4096, align: 128)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2271, line: 34, size: 4096, align: 128, elements: !2295)
!2295 = !{!2296, !2297, !2298, !2299, !2300, !2315, !2316, !2317, !2321, !2323, !2327}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2294, file: !2271, line: 35, baseType: !195, size: 16)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2294, file: !2271, line: 36, baseType: !195, size: 16, offset: 16)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2294, file: !2271, line: 37, baseType: !195, size: 16, offset: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2294, file: !2271, line: 38, baseType: !195, size: 16, offset: 48)
!2300 = !DIDerivedType(tag: DW_TAG_member, scope: !2294, file: !2271, line: 39, baseType: !2301, size: 128, offset: 64)
!2301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2294, file: !2271, line: 39, size: 128, elements: !2302)
!2302 = !{!2303, !2308}
!2303 = !DIDerivedType(tag: DW_TAG_member, scope: !2301, file: !2271, line: 40, baseType: !2304, size: 128)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2301, file: !2271, line: 40, size: 128, elements: !2305)
!2305 = !{!2306, !2307}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2304, file: !2271, line: 41, baseType: !509, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2304, file: !2271, line: 42, baseType: !509, size: 64, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, scope: !2301, file: !2271, line: 44, baseType: !2309, size: 128)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2301, file: !2271, line: 44, size: 128, elements: !2310)
!2310 = !{!2311, !2312, !2313, !2314}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2309, file: !2271, line: 45, baseType: !505, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2309, file: !2271, line: 46, baseType: !505, size: 32, offset: 32)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2309, file: !2271, line: 47, baseType: !505, size: 32, offset: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2309, file: !2271, line: 48, baseType: !505, size: 32, offset: 96)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2294, file: !2271, line: 51, baseType: !505, size: 32, offset: 192)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2294, file: !2271, line: 52, baseType: !505, size: 32, offset: 224)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2294, file: !2271, line: 55, baseType: !2318, size: 1024, offset: 256)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !505, size: 1024, elements: !2319)
!2319 = !{!2320}
!2320 = !DISubrange(count: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2294, file: !2271, line: 58, baseType: !2322, size: 2048, offset: 1280)
!2322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !505, size: 2048, elements: !377)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2294, file: !2271, line: 60, baseType: !2324, size: 384, offset: 3328)
!2324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !505, size: 384, elements: !2325)
!2325 = !{!2326}
!2326 = !DISubrange(count: 12)
!2327 = !DIDerivedType(tag: DW_TAG_member, scope: !2294, file: !2271, line: 62, baseType: !2328, size: 384, offset: 3712)
!2328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2294, file: !2271, line: 62, size: 384, elements: !2329)
!2329 = !{!2330, !2331}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2328, file: !2271, line: 63, baseType: !2324, size: 384)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2328, file: !2271, line: 64, baseType: !2324, size: 384)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2276, file: !2271, line: 307, baseType: !2333, size: 1088)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2271, line: 79, size: 1088, elements: !2334)
!2334 = !{!2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2381}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2333, file: !2271, line: 80, baseType: !505, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2333, file: !2271, line: 81, baseType: !505, size: 32, offset: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2333, file: !2271, line: 82, baseType: !505, size: 32, offset: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2333, file: !2271, line: 83, baseType: !505, size: 32, offset: 96)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2333, file: !2271, line: 84, baseType: !505, size: 32, offset: 128)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2333, file: !2271, line: 85, baseType: !505, size: 32, offset: 160)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2333, file: !2271, line: 86, baseType: !505, size: 32, offset: 192)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2333, file: !2271, line: 88, baseType: !2289, size: 640, offset: 224)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2333, file: !2271, line: 89, baseType: !1454, size: 8, offset: 864)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2333, file: !2271, line: 90, baseType: !1454, size: 8, offset: 872)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2333, file: !2271, line: 91, baseType: !1454, size: 8, offset: 880)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2333, file: !2271, line: 92, baseType: !1454, size: 8, offset: 888)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2333, file: !2271, line: 93, baseType: !1454, size: 8, offset: 896)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2333, file: !2271, line: 94, baseType: !1454, size: 8, offset: 904)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2333, file: !2271, line: 95, baseType: !2350, size: 64, offset: 960)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2352, line: 11, size: 128, elements: !2353)
!2352 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2353 = !{!2354, !2355}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2351, file: !2352, line: 12, baseType: !112, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2351, file: !2352, line: 13, baseType: !2356, size: 64, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2358, line: 56, size: 1344, elements: !2359)
!2358 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2359 = !{!2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2357, file: !2358, line: 61, baseType: !193, size: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2357, file: !2358, line: 62, baseType: !193, size: 64, offset: 64)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2357, file: !2358, line: 63, baseType: !193, size: 64, offset: 128)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2357, file: !2358, line: 64, baseType: !193, size: 64, offset: 192)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2357, file: !2358, line: 65, baseType: !193, size: 64, offset: 256)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2357, file: !2358, line: 66, baseType: !193, size: 64, offset: 320)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2357, file: !2358, line: 68, baseType: !193, size: 64, offset: 384)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2357, file: !2358, line: 69, baseType: !193, size: 64, offset: 448)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2357, file: !2358, line: 70, baseType: !193, size: 64, offset: 512)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2357, file: !2358, line: 71, baseType: !193, size: 64, offset: 576)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2357, file: !2358, line: 72, baseType: !193, size: 64, offset: 640)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2357, file: !2358, line: 73, baseType: !193, size: 64, offset: 704)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2357, file: !2358, line: 74, baseType: !193, size: 64, offset: 768)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2357, file: !2358, line: 75, baseType: !193, size: 64, offset: 832)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2357, file: !2358, line: 76, baseType: !193, size: 64, offset: 896)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2357, file: !2358, line: 81, baseType: !193, size: 64, offset: 960)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2357, file: !2358, line: 83, baseType: !193, size: 64, offset: 1024)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2357, file: !2358, line: 84, baseType: !193, size: 64, offset: 1088)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2357, file: !2358, line: 85, baseType: !193, size: 64, offset: 1152)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2357, file: !2358, line: 86, baseType: !193, size: 64, offset: 1216)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2357, file: !2358, line: 87, baseType: !193, size: 64, offset: 1280)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2333, file: !2271, line: 96, baseType: !505, size: 32, offset: 1024)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2276, file: !2271, line: 308, baseType: !2383, size: 4608, align: 512)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2271, line: 289, size: 4608, align: 512, elements: !2384)
!2384 = !{!2385, !2386, !2393}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2383, file: !2271, line: 290, baseType: !2294, size: 4096, align: 128)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2383, file: !2271, line: 291, baseType: !2387, size: 512, offset: 4096)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2271, line: 268, size: 512, elements: !2388)
!2388 = !{!2389, !2390, !2391}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2387, file: !2271, line: 269, baseType: !509, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2387, file: !2271, line: 270, baseType: !509, size: 64, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2387, file: !2271, line: 271, baseType: !2392, size: 384, offset: 128)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 384, elements: !1725)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2383, file: !2271, line: 292, baseType: !2394, offset: 4608)
!2394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1454, elements: !1823)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2276, file: !2271, line: 309, baseType: !2396, size: 32768)
!2396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1454, size: 32768, elements: !2397)
!2397 = !{!2398}
!2398 = !DISubrange(count: 4096)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1320, file: !848, line: 378, baseType: !2400, size: 64, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1316, file: !848, line: 384, baseType: !1602, size: 192, offset: 192)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1091, file: !848, line: 500, baseType: !284, offset: 6656)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1091, file: !848, line: 501, baseType: !2404, size: 64, offset: 6656)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !848, line: 387, flags: DIFlagFwdDecl)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1091, file: !848, line: 516, baseType: !1813, size: 64, offset: 6720)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1091, file: !848, line: 519, baseType: !447, size: 64, offset: 6784)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1091, file: !848, line: 521, baseType: !2409, size: 64, offset: 6848)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !848, line: 521, flags: DIFlagFwdDecl)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1091, file: !848, line: 545, baseType: !301, size: 32, offset: 6912)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1091, file: !848, line: 548, baseType: !578, size: 8, offset: 6944)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1091, file: !848, line: 550, baseType: !2414, offset: 6952)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2415, line: 142, elements: !298)
!2415 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1091, file: !848, line: 554, baseType: !254, size: 256, offset: 6976)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1091, file: !848, line: 557, baseType: !505, size: 32, offset: 7232)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1088, file: !848, line: 565, baseType: !250, offset: 7296)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1084, file: !848, line: 151, baseType: !301, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1076, file: !848, line: 156, baseType: !284, offset: 256)
!2421 = !DIDerivedType(tag: DW_TAG_member, scope: !852, file: !848, line: 159, baseType: !2422, size: 128)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !852, file: !848, line: 159, size: 128, elements: !2423)
!2423 = !{!2424, !2488}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2422, file: !848, line: 161, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2427)
!2427 = !{!2428, !2438, !2459, !2460, !2461, !2462, !2463, !2475, !2476, !2477}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2426, file: !31, line: 111, baseType: !2429, size: 384)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2430)
!2430 = !{!2431, !2433, !2434, !2435, !2436, !2437}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2429, file: !31, line: 20, baseType: !2432, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !193)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2429, file: !31, line: 21, baseType: !2432, size: 64, offset: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2429, file: !31, line: 22, baseType: !2432, size: 64, offset: 128)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2429, file: !31, line: 23, baseType: !193, size: 64, offset: 192)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2429, file: !31, line: 24, baseType: !193, size: 64, offset: 256)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2429, file: !31, line: 25, baseType: !193, size: 64, offset: 320)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2426, file: !31, line: 112, baseType: !2439, size: 64, offset: 384)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2441, line: 105, size: 128, elements: !2442)
!2441 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2442 = !{!2443, !2444}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2440, file: !2441, line: 110, baseType: !193, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2440, file: !2441, line: 118, baseType: !2445, size: 64, offset: 64)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 64)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2441, line: 95, size: 448, elements: !2447)
!2447 = !{!2448, !2449, !2454, !2455, !2456, !2457, !2458}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2446, file: !2441, line: 96, baseType: !257, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2446, file: !2441, line: 97, baseType: !2450, size: 64, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2441, line: 60, baseType: !2452)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{null, !2439}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2446, file: !2441, line: 98, baseType: !2450, size: 64, offset: 128)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2446, file: !2441, line: 99, baseType: !578, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2446, file: !2441, line: 100, baseType: !578, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2446, file: !2441, line: 101, baseType: !455, size: 128, align: 64, offset: 256)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2446, file: !2441, line: 102, baseType: !2439, size: 64, offset: 384)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2426, file: !31, line: 113, baseType: !2440, size: 128, offset: 448)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2426, file: !31, line: 114, baseType: !1602, size: 192, offset: 576)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2426, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2426, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2426, file: !31, line: 117, baseType: !2464, size: 64, offset: 832)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2467)
!2467 = !{!2468, !2469, !2473, !2474}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2466, file: !31, line: 73, baseType: !954, size: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2466, file: !31, line: 78, baseType: !2470, size: 64, offset: 64)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{null, !2425}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2466, file: !31, line: 83, baseType: !2470, size: 64, offset: 128)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2466, file: !31, line: 89, baseType: !1140, size: 64, offset: 192)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2426, file: !31, line: 118, baseType: !216, size: 64, offset: 896)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2426, file: !31, line: 119, baseType: !215, size: 32, offset: 960)
!2477 = !DIDerivedType(tag: DW_TAG_member, scope: !2426, file: !31, line: 120, baseType: !2478, size: 128, offset: 1024)
!2478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2426, file: !31, line: 120, size: 128, elements: !2479)
!2479 = !{!2480, !2486}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2478, file: !31, line: 121, baseType: !2481, size: 128)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2482, line: 6, size: 128, elements: !2483)
!2482 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2483 = !{!2484, !2485}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2481, file: !2482, line: 7, baseType: !509, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2481, file: !2482, line: 8, baseType: !509, size: 64, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2478, file: !31, line: 122, baseType: !2487)
!2487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2481, elements: !1823)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2422, file: !848, line: 162, baseType: !216, size: 64, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !852, file: !848, line: 176, baseType: !455, size: 128, align: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, scope: !847, file: !848, line: 179, baseType: !2491, size: 32, offset: 384)
!2491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !847, file: !848, line: 179, size: 32, elements: !2492)
!2492 = !{!2493, !2494, !2495, !2496}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2491, file: !848, line: 184, baseType: !301, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2491, file: !848, line: 192, baseType: !7, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2491, file: !848, line: 194, baseType: !7, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2491, file: !848, line: 195, baseType: !215, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !847, file: !848, line: 199, baseType: !301, size: 32, offset: 416)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !746, file: !44, line: 1964, baseType: !2499, size: 64, offset: 1344)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!112, !685, !2502}
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2504, line: 12, size: 256, elements: !2505)
!2504 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2505 = !{!2506, !2507, !2508, !2509, !2510}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2503, file: !2504, line: 13, baseType: !199, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2503, file: !2504, line: 16, baseType: !215, size: 32, offset: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2503, file: !2504, line: 23, baseType: !193, size: 64, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2503, file: !2504, line: 30, baseType: !193, size: 64, offset: 128)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2503, file: !2504, line: 33, baseType: !2511, size: 64, offset: 192)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !848, line: 27, flags: DIFlagFwdDecl)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !746, file: !44, line: 1966, baseType: !2499, size: 64, offset: 1408)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !686, file: !44, line: 1424, baseType: !2515, size: 64, offset: 448)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2517)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2518)
!2518 = !{!2519, !2565, !2569, !2573, !2574, !2575, !2576, !2577, !2582, !2587, !2591}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2517, file: !38, line: 323, baseType: !2520, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!215, !2523}
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2550, !2551, !2552}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2524, file: !38, line: 295, baseType: !728, size: 128)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2524, file: !38, line: 296, baseType: !267, size: 128, offset: 128)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2524, file: !38, line: 297, baseType: !267, size: 128, offset: 256)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2524, file: !38, line: 298, baseType: !267, size: 128, offset: 384)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2524, file: !38, line: 299, baseType: !279, size: 192, offset: 512)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2524, file: !38, line: 300, baseType: !284, offset: 704)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2524, file: !38, line: 301, baseType: !301, size: 32, offset: 704)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2524, file: !38, line: 302, baseType: !685, size: 64, offset: 768)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2524, file: !38, line: 303, baseType: !2535, size: 64, offset: 832)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2536)
!2536 = !{!2537, !2549}
!2537 = !DIDerivedType(tag: DW_TAG_member, scope: !2535, file: !38, line: 69, baseType: !2538, size: 32)
!2538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2535, file: !38, line: 69, size: 32, elements: !2539)
!2539 = !{!2540, !2541, !2542}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2538, file: !38, line: 70, baseType: !523, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2538, file: !38, line: 71, baseType: !531, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2538, file: !38, line: 72, baseType: !2543, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2544, line: 24, baseType: !2545)
!2544 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2544, line: 22, size: 32, elements: !2546)
!2546 = !{!2547}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2545, file: !2544, line: 23, baseType: !2548, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2544, line: 20, baseType: !529)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2535, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2524, file: !38, line: 304, baseType: !619, size: 64, offset: 896)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2524, file: !38, line: 305, baseType: !193, size: 64, offset: 960)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2524, file: !38, line: 306, baseType: !2553, size: 576, offset: 1024)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2554)
!2554 = !{!2555, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2553, file: !38, line: 206, baseType: !2556, size: 64)
!2556 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !265)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2553, file: !38, line: 207, baseType: !2556, size: 64, offset: 64)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2553, file: !38, line: 208, baseType: !2556, size: 64, offset: 128)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2553, file: !38, line: 209, baseType: !2556, size: 64, offset: 192)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2553, file: !38, line: 210, baseType: !2556, size: 64, offset: 256)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2553, file: !38, line: 211, baseType: !2556, size: 64, offset: 320)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2553, file: !38, line: 212, baseType: !2556, size: 64, offset: 384)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2553, file: !38, line: 213, baseType: !626, size: 64, offset: 448)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2553, file: !38, line: 214, baseType: !626, size: 64, offset: 512)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2517, file: !38, line: 324, baseType: !2566, size: 64, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{!2523, !685, !215}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2517, file: !38, line: 325, baseType: !2570, size: 64, offset: 128)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{null, !2523}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2517, file: !38, line: 326, baseType: !2520, size: 64, offset: 192)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2517, file: !38, line: 327, baseType: !2520, size: 64, offset: 256)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2517, file: !38, line: 328, baseType: !2520, size: 64, offset: 320)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2517, file: !38, line: 329, baseType: !774, size: 64, offset: 384)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2517, file: !38, line: 332, baseType: !2578, size: 64, offset: 448)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!2581, !517}
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2517, file: !38, line: 333, baseType: !2583, size: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{!215, !517, !2586}
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2517, file: !38, line: 335, baseType: !2588, size: 64, offset: 576)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = !DISubroutineType(types: !2590)
!2590 = !{!215, !517, !2581}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2517, file: !38, line: 337, baseType: !2592, size: 64, offset: 640)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!215, !685, !2595}
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !686, file: !44, line: 1425, baseType: !2597, size: 64, offset: 512)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2599)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2600)
!2600 = !{!2601, !2605, !2606, !2610, !2611, !2612, !2627, !2650, !2654, !2655, !2678}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2599, file: !38, line: 429, baseType: !2602, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DISubroutineType(types: !2604)
!2604 = !{!215, !685, !215, !215, !635}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2599, file: !38, line: 430, baseType: !774, size: 64, offset: 64)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2599, file: !38, line: 431, baseType: !2607, size: 64, offset: 128)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{!215, !685, !7}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2599, file: !38, line: 432, baseType: !2607, size: 64, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2599, file: !38, line: 433, baseType: !774, size: 64, offset: 256)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2599, file: !38, line: 434, baseType: !2613, size: 64, offset: 320)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{!215, !685, !215, !2616}
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2618)
!2618 = !{!2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2617, file: !38, line: 416, baseType: !215, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2617, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2617, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2617, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2617, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2617, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2617, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2617, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2599, file: !38, line: 435, baseType: !2628, size: 64, offset: 384)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{!215, !685, !2535, !2631}
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 64)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2633)
!2633 = !{!2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2632, file: !38, line: 344, baseType: !215, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2632, file: !38, line: 345, baseType: !509, size: 64, offset: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2632, file: !38, line: 346, baseType: !509, size: 64, offset: 128)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2632, file: !38, line: 347, baseType: !509, size: 64, offset: 192)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2632, file: !38, line: 348, baseType: !509, size: 64, offset: 256)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2632, file: !38, line: 349, baseType: !509, size: 64, offset: 320)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2632, file: !38, line: 350, baseType: !509, size: 64, offset: 384)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2632, file: !38, line: 351, baseType: !263, size: 64, offset: 448)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2632, file: !38, line: 353, baseType: !263, size: 64, offset: 512)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2632, file: !38, line: 354, baseType: !215, size: 32, offset: 576)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2632, file: !38, line: 355, baseType: !215, size: 32, offset: 608)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2632, file: !38, line: 356, baseType: !509, size: 64, offset: 640)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2632, file: !38, line: 357, baseType: !509, size: 64, offset: 704)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2632, file: !38, line: 358, baseType: !509, size: 64, offset: 768)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2632, file: !38, line: 359, baseType: !263, size: 64, offset: 832)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2632, file: !38, line: 360, baseType: !215, size: 32, offset: 896)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2599, file: !38, line: 436, baseType: !2651, size: 64, offset: 448)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!215, !685, !2595, !2631}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2599, file: !38, line: 438, baseType: !2628, size: 64, offset: 512)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2599, file: !38, line: 439, baseType: !2656, size: 64, offset: 576)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{!215, !685, !2659}
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2661)
!2661 = !{!2662, !2663}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2660, file: !38, line: 410, baseType: !7, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2660, file: !38, line: 411, baseType: !2664, size: 1344, offset: 64)
!2664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2665, size: 1344, elements: !373)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2666)
!2666 = !{!2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2677}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2665, file: !38, line: 396, baseType: !7, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2665, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2665, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2665, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2665, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2665, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2665, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2665, file: !38, line: 404, baseType: !511, size: 64, offset: 256)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2665, file: !38, line: 405, baseType: !2676, size: 64, offset: 320)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !200, line: 126, baseType: !509)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2665, file: !38, line: 406, baseType: !2676, size: 64, offset: 384)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2599, file: !38, line: 440, baseType: !2607, size: 64, offset: 640)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !686, file: !44, line: 1426, baseType: !2680, size: 64, offset: 576)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2682)
!2682 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !686, file: !44, line: 1427, baseType: !193, size: 64, offset: 640)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !686, file: !44, line: 1428, baseType: !193, size: 64, offset: 704)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !686, file: !44, line: 1429, baseType: !193, size: 64, offset: 768)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !686, file: !44, line: 1430, baseType: !472, size: 64, offset: 832)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !686, file: !44, line: 1431, baseType: !888, size: 256, offset: 896)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !686, file: !44, line: 1432, baseType: !215, size: 32, offset: 1152)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !686, file: !44, line: 1433, baseType: !301, size: 32, offset: 1184)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !686, file: !44, line: 1437, baseType: !2691, size: 64, offset: 1216)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2694)
!2694 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !686, file: !44, line: 1449, baseType: !2696, size: 64, offset: 1280)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !488, line: 34, size: 64, elements: !2697)
!2697 = !{!2698}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2696, file: !488, line: 35, baseType: !491, size: 64)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !686, file: !44, line: 1450, baseType: !267, size: 128, offset: 1344)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !686, file: !44, line: 1451, baseType: !2701, size: 64, offset: 1472)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64)
!2702 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !686, file: !44, line: 1452, baseType: !2023, size: 64, offset: 1536)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !686, file: !44, line: 1453, baseType: !2705, size: 64, offset: 1600)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !686, file: !44, line: 1454, baseType: !728, size: 128, offset: 1664)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !686, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !686, file: !44, line: 1456, baseType: !2710, size: 2432, offset: 1856)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2711)
!2711 = !{!2712, !2713, !2714, !2716, !2748}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2710, file: !38, line: 519, baseType: !7, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2710, file: !38, line: 520, baseType: !888, size: 256, offset: 64)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2710, file: !38, line: 521, baseType: !2715, size: 192, offset: 320)
!2715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !517, size: 192, elements: !373)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2710, file: !38, line: 522, baseType: !2717, size: 1728, offset: 512)
!2717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2718, size: 1728, elements: !373)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2719)
!2719 = !{!2720, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2718, file: !38, line: 223, baseType: !2721, size: 64)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2723)
!2723 = !{!2724, !2725, !2738, !2739}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2722, file: !38, line: 444, baseType: !215, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2722, file: !38, line: 445, baseType: !2726, size: 64, offset: 64)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2728, file: !38, line: 311, baseType: !774, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2728, file: !38, line: 312, baseType: !774, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2728, file: !38, line: 313, baseType: !774, size: 64, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2728, file: !38, line: 314, baseType: !774, size: 64, offset: 192)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2728, file: !38, line: 315, baseType: !2520, size: 64, offset: 256)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2728, file: !38, line: 316, baseType: !2520, size: 64, offset: 320)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2728, file: !38, line: 317, baseType: !2520, size: 64, offset: 384)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2728, file: !38, line: 318, baseType: !2592, size: 64, offset: 448)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2722, file: !38, line: 446, baseType: !719, size: 64, offset: 128)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2722, file: !38, line: 447, baseType: !2721, size: 64, offset: 192)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2718, file: !38, line: 224, baseType: !215, size: 32, offset: 64)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2718, file: !38, line: 226, baseType: !267, size: 128, offset: 128)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2718, file: !38, line: 227, baseType: !193, size: 64, offset: 256)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2718, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2718, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2718, file: !38, line: 230, baseType: !2556, size: 64, offset: 384)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2718, file: !38, line: 231, baseType: !2556, size: 64, offset: 448)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2718, file: !38, line: 232, baseType: !216, size: 64, offset: 512)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2710, file: !38, line: 523, baseType: !2749, size: 192, offset: 2240)
!2749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2726, size: 192, elements: !373)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !686, file: !44, line: 1458, baseType: !2751, size: 2112, offset: 4288)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2752)
!2752 = !{!2753, !2754, !2755}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2751, file: !44, line: 1411, baseType: !215, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2751, file: !44, line: 1412, baseType: !1581, size: 128, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2751, file: !44, line: 1413, baseType: !2756, size: 1920, offset: 192)
!2756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2757, size: 1920, elements: !373)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2758, line: 12, size: 640, elements: !2759)
!2758 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2759 = !{!2760, !2768, !2770, !2775, !2776}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2757, file: !2758, line: 13, baseType: !2761, size: 320)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2762, line: 17, size: 320, elements: !2763)
!2762 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2763 = !{!2764, !2765, !2766, !2767}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2761, file: !2762, line: 18, baseType: !215, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2761, file: !2762, line: 19, baseType: !215, size: 32, offset: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2761, file: !2762, line: 20, baseType: !1581, size: 128, offset: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2761, file: !2762, line: 22, baseType: !455, size: 128, align: 64, offset: 192)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2757, file: !2758, line: 14, baseType: !2769, size: 64, offset: 320)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2757, file: !2758, line: 15, baseType: !2771, size: 64, offset: 384)
!2771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2772, line: 16, size: 64, elements: !2773)
!2772 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2773 = !{!2774}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2771, file: !2772, line: 17, baseType: !1323, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2757, file: !2758, line: 16, baseType: !1581, size: 128, offset: 448)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2757, file: !2758, line: 17, baseType: !301, size: 32, offset: 576)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !686, file: !44, line: 1465, baseType: !216, size: 64, offset: 6400)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !686, file: !44, line: 1468, baseType: !505, size: 32, offset: 6464)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !686, file: !44, line: 1470, baseType: !626, size: 64, offset: 6528)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !686, file: !44, line: 1471, baseType: !626, size: 64, offset: 6592)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !686, file: !44, line: 1473, baseType: !506, size: 32, offset: 6656)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !686, file: !44, line: 1474, baseType: !2783, size: 64, offset: 6720)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !686, file: !44, line: 1477, baseType: !2786, size: 256, offset: 6784)
!2786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 256, elements: !2319)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !686, file: !44, line: 1478, baseType: !2788, size: 128, offset: 7040)
!2788 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2789, line: 18, baseType: !2790)
!2789 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2789, line: 16, size: 128, elements: !2791)
!2791 = !{!2792}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2790, file: !2789, line: 17, baseType: !2793, size: 128)
!2793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1455, size: 128, elements: !1835)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !686, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !686, file: !44, line: 1481, baseType: !2796, size: 32, offset: 7200)
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !200, line: 150, baseType: !7)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !686, file: !44, line: 1487, baseType: !279, size: 192, offset: 7232)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !686, file: !44, line: 1493, baseType: !336, size: 64, offset: 7424)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !686, file: !44, line: 1495, baseType: !2800, size: 64, offset: 7488)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2802)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !470, line: 135, size: 1024, align: 512, elements: !2803)
!2803 = !{!2804, !2808, !2809, !2816, !2822, !2826, !2830, !2834, !2835, !2839, !2843, !2848, !2852}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2802, file: !470, line: 136, baseType: !2805, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = !DISubroutineType(types: !2807)
!2807 = !{!215, !472, !7}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2802, file: !470, line: 137, baseType: !2805, size: 64, offset: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2802, file: !470, line: 138, baseType: !2810, size: 64, offset: 128)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 64)
!2811 = !DISubroutineType(types: !2812)
!2812 = !{!215, !2813, !2815}
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2802, file: !470, line: 139, baseType: !2817, size: 64, offset: 192)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 64)
!2818 = !DISubroutineType(types: !2819)
!2819 = !{!215, !2813, !7, !336, !2820}
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !496)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2802, file: !470, line: 141, baseType: !2823, size: 64, offset: 256)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!215, !2813}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2802, file: !470, line: 142, baseType: !2827, size: 64, offset: 320)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = !DISubroutineType(types: !2829)
!2829 = !{!215, !472}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2802, file: !470, line: 143, baseType: !2831, size: 64, offset: 384)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{null, !472}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2802, file: !470, line: 144, baseType: !2831, size: 64, offset: 448)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2802, file: !470, line: 145, baseType: !2836, size: 64, offset: 512)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{null, !472, !517}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2802, file: !470, line: 146, baseType: !2840, size: 64, offset: 576)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{!202, !472, !202, !215}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2802, file: !470, line: 147, baseType: !2844, size: 64, offset: 640)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!468, !2847}
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2802, file: !470, line: 148, baseType: !2849, size: 64, offset: 704)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!215, !635, !578}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2802, file: !470, line: 149, baseType: !2853, size: 64, offset: 768)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!472, !472, !2856}
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !518)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !686, file: !44, line: 1500, baseType: !215, size: 32, offset: 7552)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !686, file: !44, line: 1502, baseType: !2860, size: 448, offset: 7616)
!2860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2504, line: 60, size: 448, elements: !2861)
!2861 = !{!2862, !2867, !2868, !2869, !2870, !2871, !2872}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2860, file: !2504, line: 61, baseType: !2863, size: 64)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{!193, !2866, !2502}
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2860, file: !2504, line: 63, baseType: !2863, size: 64, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2860, file: !2504, line: 66, baseType: !112, size: 64, offset: 128)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2860, file: !2504, line: 67, baseType: !215, size: 32, offset: 192)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2860, file: !2504, line: 68, baseType: !7, size: 32, offset: 224)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2860, file: !2504, line: 71, baseType: !267, size: 128, offset: 256)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2860, file: !2504, line: 77, baseType: !2873, size: 64, offset: 384)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !686, file: !44, line: 1505, baseType: !257, size: 64, offset: 8064)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !686, file: !44, line: 1508, baseType: !257, size: 64, offset: 8128)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !686, file: !44, line: 1511, baseType: !215, size: 32, offset: 8192)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !686, file: !44, line: 1514, baseType: !1021, size: 32, offset: 8224)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !686, file: !44, line: 1517, baseType: !2879, size: 64, offset: 8256)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !111, line: 18, flags: DIFlagFwdDecl)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !686, file: !44, line: 1518, baseType: !724, size: 64, offset: 8320)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !686, file: !44, line: 1525, baseType: !1813, size: 64, offset: 8384)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !686, file: !44, line: 1532, baseType: !2884, size: 64, offset: 8448)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2885, line: 52, size: 64, elements: !2886)
!2885 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2886 = !{!2887}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2884, file: !2885, line: 53, baseType: !2888, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2885, line: 40, size: 256, elements: !2890)
!2890 = !{!2891, !2892, !2897}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2889, file: !2885, line: 42, baseType: !284)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2889, file: !2885, line: 44, baseType: !2893, size: 192)
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2885, line: 28, size: 192, elements: !2894)
!2894 = !{!2895, !2896}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2893, file: !2885, line: 29, baseType: !267, size: 128)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2893, file: !2885, line: 31, baseType: !112, size: 64, offset: 128)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2889, file: !2885, line: 49, baseType: !112, size: 64, offset: 192)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !686, file: !44, line: 1533, baseType: !2884, size: 64, offset: 8512)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !686, file: !44, line: 1534, baseType: !455, size: 128, align: 64, offset: 8576)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !686, file: !44, line: 1535, baseType: !254, size: 256, offset: 8704)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !686, file: !44, line: 1537, baseType: !279, size: 192, offset: 8960)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !686, file: !44, line: 1542, baseType: !215, size: 32, offset: 9152)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !686, file: !44, line: 1545, baseType: !284, offset: 9184)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !686, file: !44, line: 1546, baseType: !267, size: 128, offset: 9216)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !686, file: !44, line: 1548, baseType: !284, offset: 9344)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !686, file: !44, line: 1549, baseType: !267, size: 128, offset: 9344)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !518, file: !44, line: 624, baseType: !859, size: 64, offset: 256)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !518, file: !44, line: 631, baseType: !193, size: 64, offset: 320)
!2909 = !DIDerivedType(tag: DW_TAG_member, scope: !518, file: !44, line: 639, baseType: !2910, size: 32, offset: 384)
!2910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !518, file: !44, line: 639, size: 32, elements: !2911)
!2911 = !{!2912, !2914}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2910, file: !44, line: 640, baseType: !2913, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2910, file: !44, line: 641, baseType: !7, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !518, file: !44, line: 643, baseType: !601, size: 32, offset: 416)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !518, file: !44, line: 644, baseType: !619, size: 64, offset: 448)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !518, file: !44, line: 645, baseType: !622, size: 128, offset: 512)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !518, file: !44, line: 646, baseType: !622, size: 128, offset: 640)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !518, file: !44, line: 647, baseType: !622, size: 128, offset: 768)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !518, file: !44, line: 648, baseType: !284, offset: 896)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !518, file: !44, line: 649, baseType: !192, size: 16, offset: 896)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !518, file: !44, line: 650, baseType: !1454, size: 8, offset: 912)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !518, file: !44, line: 651, baseType: !1454, size: 8, offset: 920)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !518, file: !44, line: 652, baseType: !2676, size: 64, offset: 960)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !518, file: !44, line: 659, baseType: !193, size: 64, offset: 1024)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !518, file: !44, line: 660, baseType: !888, size: 256, offset: 1088)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !518, file: !44, line: 662, baseType: !193, size: 64, offset: 1344)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !518, file: !44, line: 663, baseType: !193, size: 64, offset: 1408)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !518, file: !44, line: 665, baseType: !728, size: 128, offset: 1472)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !518, file: !44, line: 666, baseType: !267, size: 128, offset: 1600)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !518, file: !44, line: 675, baseType: !267, size: 128, offset: 1728)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !518, file: !44, line: 676, baseType: !267, size: 128, offset: 1856)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !518, file: !44, line: 677, baseType: !267, size: 128, offset: 1984)
!2934 = !DIDerivedType(tag: DW_TAG_member, scope: !518, file: !44, line: 678, baseType: !2935, size: 128, offset: 2112)
!2935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !518, file: !44, line: 678, size: 128, elements: !2936)
!2936 = !{!2937, !2938}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2935, file: !44, line: 679, baseType: !724, size: 64)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2935, file: !44, line: 680, baseType: !455, size: 128, align: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !518, file: !44, line: 682, baseType: !259, size: 64, offset: 2240)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !518, file: !44, line: 683, baseType: !259, size: 64, offset: 2304)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !518, file: !44, line: 684, baseType: !301, size: 32, offset: 2368)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !518, file: !44, line: 685, baseType: !301, size: 32, offset: 2400)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !518, file: !44, line: 686, baseType: !301, size: 32, offset: 2432)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !518, file: !44, line: 688, baseType: !301, size: 32, offset: 2464)
!2945 = !DIDerivedType(tag: DW_TAG_member, scope: !518, file: !44, line: 690, baseType: !2946, size: 64, offset: 2496)
!2946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !518, file: !44, line: 690, size: 64, elements: !2947)
!2947 = !{!2948, !3170}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2946, file: !44, line: 691, baseType: !2949, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2951)
!2951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2952)
!2952 = !{!2953, !2954, !2958, !2962, !2966, !2967, !2968, !2972, !2985, !2986, !2994, !2998, !2999, !3003, !3004, !3008, !3013, !3014, !3018, !3022, !3130, !3134, !3135, !3139, !3140, !3144, !3148, !3153, !3157, !3161, !3165, !3169}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2951, file: !44, line: 1823, baseType: !719, size: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2951, file: !44, line: 1824, baseType: !2955, size: 64, offset: 64)
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 64)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!619, !447, !619, !215}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2951, file: !44, line: 1825, baseType: !2959, size: 64, offset: 128)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{!403, !447, !202, !417, !821}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2951, file: !44, line: 1826, baseType: !2963, size: 64, offset: 192)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DISubroutineType(types: !2965)
!2965 = !{!403, !447, !336, !417, !821}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2951, file: !44, line: 1827, baseType: !958, size: 64, offset: 256)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2951, file: !44, line: 1828, baseType: !958, size: 64, offset: 320)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2951, file: !44, line: 1829, baseType: !2969, size: 64, offset: 384)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{!215, !961, !578}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2951, file: !44, line: 1830, baseType: !2973, size: 64, offset: 448)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{!215, !447, !2976}
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2978)
!2978 = !{!2979, !2984}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2977, file: !44, line: 1777, baseType: !2980, size: 64)
!2980 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2981)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!215, !2976, !336, !215, !619, !509, !7}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2977, file: !44, line: 1778, baseType: !619, size: 64, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2951, file: !44, line: 1831, baseType: !2973, size: 64, offset: 512)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2951, file: !44, line: 1832, baseType: !2987, size: 64, offset: 576)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{!2990, !447, !2992}
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2991, line: 52, baseType: !7)
!2991 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !705, line: 27, flags: DIFlagFwdDecl)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2951, file: !44, line: 1833, baseType: !2995, size: 64, offset: 640)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!112, !447, !7, !193}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2951, file: !44, line: 1834, baseType: !2995, size: 64, offset: 704)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2951, file: !44, line: 1835, baseType: !3000, size: 64, offset: 768)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!215, !447, !1094}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2951, file: !44, line: 1836, baseType: !193, size: 64, offset: 832)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2951, file: !44, line: 1837, baseType: !3005, size: 64, offset: 896)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!215, !517, !447}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2951, file: !44, line: 1838, baseType: !3009, size: 64, offset: 960)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DISubroutineType(types: !3011)
!3011 = !{!215, !447, !3012}
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !216)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2951, file: !44, line: 1839, baseType: !3005, size: 64, offset: 1024)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2951, file: !44, line: 1840, baseType: !3015, size: 64, offset: 1088)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{!215, !447, !619, !619, !215}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2951, file: !44, line: 1841, baseType: !3019, size: 64, offset: 1152)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{!215, !215, !447, !215}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2951, file: !44, line: 1842, baseType: !3023, size: 64, offset: 1216)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{!215, !447, !215, !3026}
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3028)
!3028 = !{!3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3060, !3061, !3062, !3075, !3106}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3027, file: !44, line: 1063, baseType: !3026, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3027, file: !44, line: 1064, baseType: !267, size: 128, offset: 64)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3027, file: !44, line: 1065, baseType: !728, size: 128, offset: 192)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3027, file: !44, line: 1066, baseType: !267, size: 128, offset: 320)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3027, file: !44, line: 1069, baseType: !267, size: 128, offset: 448)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3027, file: !44, line: 1072, baseType: !3012, size: 64, offset: 576)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3027, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3027, file: !44, line: 1074, baseType: !515, size: 8, offset: 672)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3027, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3027, file: !44, line: 1076, baseType: !215, size: 32, offset: 736)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3027, file: !44, line: 1077, baseType: !1581, size: 128, offset: 768)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3027, file: !44, line: 1078, baseType: !447, size: 64, offset: 896)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3027, file: !44, line: 1079, baseType: !619, size: 64, offset: 960)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3027, file: !44, line: 1080, baseType: !619, size: 64, offset: 1024)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3027, file: !44, line: 1082, baseType: !3044, size: 64, offset: 1088)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3046)
!3046 = !{!3047, !3055, !3056, !3057, !3058, !3059}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3045, file: !44, line: 1315, baseType: !3048)
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3049, line: 20, baseType: !3050)
!3049 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3049, line: 11, elements: !3051)
!3051 = !{!3052}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3050, file: !3049, line: 12, baseType: !3053)
!3053 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !296, line: 33, baseType: !3054)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !296, line: 31, elements: !298)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3045, file: !44, line: 1316, baseType: !215, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3045, file: !44, line: 1317, baseType: !215, size: 32, offset: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3045, file: !44, line: 1318, baseType: !3044, size: 64, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3045, file: !44, line: 1319, baseType: !447, size: 64, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3045, file: !44, line: 1320, baseType: !455, size: 128, align: 64, offset: 192)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3027, file: !44, line: 1084, baseType: !193, size: 64, offset: 1152)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3027, file: !44, line: 1085, baseType: !193, size: 64, offset: 1216)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3027, file: !44, line: 1087, baseType: !3063, size: 64, offset: 1280)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3065)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3066)
!3066 = !{!3067, !3071}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3065, file: !44, line: 1012, baseType: !3068, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{null, !3026, !3026}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3065, file: !44, line: 1013, baseType: !3072, size: 64, offset: 64)
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3073, size: 64)
!3073 = !DISubroutineType(types: !3074)
!3074 = !{null, !3026}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3027, file: !44, line: 1088, baseType: !3076, size: 64, offset: 1344)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3078)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3079)
!3079 = !{!3080, !3084, !3088, !3089, !3093, !3097, !3101, !3105}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3078, file: !44, line: 1017, baseType: !3081, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{!3012, !3012}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3078, file: !44, line: 1018, baseType: !3085, size: 64, offset: 64)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{null, !3012}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3078, file: !44, line: 1019, baseType: !3072, size: 64, offset: 128)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3078, file: !44, line: 1020, baseType: !3090, size: 64, offset: 192)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!215, !3026, !215}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3078, file: !44, line: 1021, baseType: !3094, size: 64, offset: 256)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!578, !3026}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3078, file: !44, line: 1022, baseType: !3098, size: 64, offset: 320)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!215, !3026, !215, !270}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3078, file: !44, line: 1023, baseType: !3102, size: 64, offset: 384)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{null, !3026, !935}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3078, file: !44, line: 1024, baseType: !3094, size: 64, offset: 448)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3027, file: !44, line: 1097, baseType: !3107, size: 256, offset: 1408)
!3107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3027, file: !44, line: 1089, size: 256, elements: !3108)
!3108 = !{!3109, !3118, !3124}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3107, file: !44, line: 1090, baseType: !3110, size: 256)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3111, line: 10, size: 256, elements: !3112)
!3111 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3112 = !{!3113, !3114, !3117}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3110, file: !3111, line: 11, baseType: !505, size: 32)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3110, file: !3111, line: 12, baseType: !3115, size: 64, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3111, line: 5, flags: DIFlagFwdDecl)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3110, file: !3111, line: 13, baseType: !267, size: 128, offset: 128)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3107, file: !44, line: 1091, baseType: !3119, size: 64)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3111, line: 17, size: 64, elements: !3120)
!3120 = !{!3121}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3119, file: !3111, line: 18, baseType: !3122, size: 64)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3111, line: 16, flags: DIFlagFwdDecl)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3107, file: !44, line: 1096, baseType: !3125, size: 192)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3107, file: !44, line: 1092, size: 192, elements: !3126)
!3126 = !{!3127, !3128, !3129}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3125, file: !44, line: 1093, baseType: !267, size: 128)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3125, file: !44, line: 1094, baseType: !215, size: 32, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3125, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2951, file: !44, line: 1843, baseType: !3131, size: 64, offset: 1280)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{!403, !447, !846, !215, !417, !821, !215}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2951, file: !44, line: 1844, baseType: !1214, size: 64, offset: 1344)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2951, file: !44, line: 1845, baseType: !3136, size: 64, offset: 1408)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{!215, !215}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2951, file: !44, line: 1846, baseType: !3023, size: 64, offset: 1472)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2951, file: !44, line: 1847, baseType: !3141, size: 64, offset: 1536)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!403, !2187, !447, !821, !417, !7}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2951, file: !44, line: 1848, baseType: !3145, size: 64, offset: 1600)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{!403, !447, !821, !2187, !417, !7}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2951, file: !44, line: 1849, baseType: !3149, size: 64, offset: 1664)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{!215, !447, !112, !3152, !935}
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2951, file: !44, line: 1850, baseType: !3154, size: 64, offset: 1728)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{!112, !447, !215, !619, !619}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2951, file: !44, line: 1852, baseType: !3158, size: 64, offset: 1792)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DISubroutineType(types: !3160)
!3160 = !{null, !800, !447}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2951, file: !44, line: 1856, baseType: !3162, size: 64, offset: 1856)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!403, !447, !619, !447, !619, !417, !7}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2951, file: !44, line: 1858, baseType: !3166, size: 64, offset: 1920)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!619, !447, !619, !447, !619, !619, !7}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2951, file: !44, line: 1861, baseType: !3015, size: 64, offset: 1984)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2946, file: !44, line: 692, baseType: !753, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !518, file: !44, line: 694, baseType: !3172, size: 64, offset: 2560)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3173, file: !44, line: 1101, baseType: !284)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3173, file: !44, line: 1102, baseType: !267, size: 128)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3173, file: !44, line: 1103, baseType: !267, size: 128, offset: 128)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3173, file: !44, line: 1104, baseType: !267, size: 128, offset: 256)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !518, file: !44, line: 695, baseType: !860, size: 1216, align: 64, offset: 2624)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !518, file: !44, line: 696, baseType: !267, size: 128, offset: 3840)
!3181 = !DIDerivedType(tag: DW_TAG_member, scope: !518, file: !44, line: 697, baseType: !3182, size: 64, offset: 3968)
!3182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !518, file: !44, line: 697, size: 64, elements: !3183)
!3183 = !{!3184, !3185, !3186, !3197, !3198}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3182, file: !44, line: 698, baseType: !2187, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3182, file: !44, line: 699, baseType: !2701, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3182, file: !44, line: 700, baseType: !3187, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3189, line: 14, size: 832, elements: !3190)
!3189 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3190 = !{!3191, !3192, !3193, !3194, !3195, !3196}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3188, file: !3189, line: 15, baseType: !332, size: 512)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3188, file: !3189, line: 16, baseType: !719, size: 64, offset: 512)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3188, file: !3189, line: 17, baseType: !2949, size: 64, offset: 576)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3188, file: !3189, line: 18, baseType: !267, size: 128, offset: 640)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3188, file: !3189, line: 19, baseType: !601, size: 32, offset: 768)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3188, file: !3189, line: 20, baseType: !7, size: 32, offset: 800)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3182, file: !44, line: 701, baseType: !202, size: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3182, file: !44, line: 702, baseType: !7, size: 32)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !518, file: !44, line: 705, baseType: !506, size: 32, offset: 4032)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !518, file: !44, line: 708, baseType: !506, size: 32, offset: 4064)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !518, file: !44, line: 709, baseType: !2783, size: 64, offset: 4096)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !518, file: !44, line: 720, baseType: !216, size: 64, offset: 4160)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !473, file: !470, line: 98, baseType: !3204, size: 256, offset: 448)
!3204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 256, elements: !2319)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !473, file: !470, line: 101, baseType: !3206, size: 32, offset: 704)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3207, line: 25, size: 32, elements: !3208)
!3207 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3208 = !{!3209}
!3209 = !DIDerivedType(tag: DW_TAG_member, scope: !3206, file: !3207, line: 26, baseType: !3210, size: 32)
!3210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3206, file: !3207, line: 26, size: 32, elements: !3211)
!3211 = !{!3212}
!3212 = !DIDerivedType(tag: DW_TAG_member, scope: !3210, file: !3207, line: 30, baseType: !3213, size: 32)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3210, file: !3207, line: 30, size: 32, elements: !3214)
!3214 = !{!3215, !3216}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3213, file: !3207, line: 31, baseType: !284)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3213, file: !3207, line: 32, baseType: !215, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !473, file: !470, line: 102, baseType: !2800, size: 64, offset: 768)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !473, file: !470, line: 103, baseType: !685, size: 64, offset: 832)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !473, file: !470, line: 104, baseType: !193, size: 64, offset: 896)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !473, file: !470, line: 105, baseType: !216, size: 64, offset: 960)
!3221 = !DIDerivedType(tag: DW_TAG_member, scope: !473, file: !470, line: 107, baseType: !3222, size: 128, offset: 1024)
!3222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !473, file: !470, line: 107, size: 128, elements: !3223)
!3223 = !{!3224, !3225}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3222, file: !470, line: 108, baseType: !267, size: 128)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3222, file: !470, line: 109, baseType: !3226, size: 64)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !473, file: !470, line: 111, baseType: !267, size: 128, offset: 1152)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !473, file: !470, line: 112, baseType: !267, size: 128, offset: 1280)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !473, file: !470, line: 120, baseType: !3230, size: 128, offset: 1408)
!3230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !473, file: !470, line: 116, size: 128, elements: !3231)
!3231 = !{!3232, !3233, !3234}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3230, file: !470, line: 117, baseType: !728, size: 128)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3230, file: !470, line: 118, baseType: !487, size: 128)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3230, file: !470, line: 119, baseType: !455, size: 128, align: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !448, file: !44, line: 922, baseType: !517, size: 64, offset: 256)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !448, file: !44, line: 923, baseType: !2949, size: 64, offset: 320)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !448, file: !44, line: 929, baseType: !284, offset: 384)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !448, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !448, file: !44, line: 931, baseType: !257, size: 64, offset: 448)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !448, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !448, file: !44, line: 933, baseType: !2796, size: 32, offset: 544)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !448, file: !44, line: 934, baseType: !279, size: 192, offset: 576)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !448, file: !44, line: 935, baseType: !619, size: 64, offset: 768)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !448, file: !44, line: 936, baseType: !3245, size: 192, offset: 832)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3246)
!3246 = !{!3247, !3248, !3249, !3250, !3251, !3252}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3245, file: !44, line: 886, baseType: !3048)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3245, file: !44, line: 887, baseType: !1571, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3245, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3245, file: !44, line: 889, baseType: !523, size: 32, offset: 96)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3245, file: !44, line: 889, baseType: !523, size: 32, offset: 128)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3245, file: !44, line: 890, baseType: !215, size: 32, offset: 160)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !448, file: !44, line: 937, baseType: !1647, size: 64, offset: 1024)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !448, file: !44, line: 938, baseType: !3255, size: 256, offset: 1088)
!3255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3256)
!3256 = !{!3257, !3258, !3259, !3260, !3261, !3262}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3255, file: !44, line: 897, baseType: !193, size: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3255, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3255, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3255, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3255, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3255, file: !44, line: 904, baseType: !619, size: 64, offset: 192)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !448, file: !44, line: 940, baseType: !509, size: 64, offset: 1344)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !448, file: !44, line: 945, baseType: !216, size: 64, offset: 1408)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !448, file: !44, line: 949, baseType: !267, size: 128, offset: 1472)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !448, file: !44, line: 950, baseType: !267, size: 128, offset: 1600)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !448, file: !44, line: 952, baseType: !859, size: 64, offset: 1728)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !448, file: !44, line: 953, baseType: !1021, size: 32, offset: 1792)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !448, file: !44, line: 954, baseType: !1021, size: 32, offset: 1824)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !438, file: !397, line: 174, baseType: !444, size: 64, offset: 320)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !438, file: !397, line: 176, baseType: !3272, size: 64, offset: 384)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!215, !447, !340, !437, !1094}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !426, file: !397, line: 90, baseType: !421, size: 64, offset: 192)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !426, file: !397, line: 91, baseType: !3277, size: 64, offset: 256)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !387, file: !333, line: 143, baseType: !3279, size: 64, offset: 256)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!3282, !340}
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3284)
!3284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3285)
!3285 = !{!3286, !3287, !3291, !3295, !3301, !3305}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3284, file: !61, line: 40, baseType: !60, size: 32)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3284, file: !61, line: 41, baseType: !3288, size: 64, offset: 64)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DISubroutineType(types: !3290)
!3290 = !{!578}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3284, file: !61, line: 42, baseType: !3292, size: 64, offset: 128)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!216}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3284, file: !61, line: 43, baseType: !3296, size: 64, offset: 192)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = !DISubroutineType(types: !3298)
!3298 = !{!2216, !3299}
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3284, file: !61, line: 44, baseType: !3302, size: 64, offset: 256)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{!2216}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3284, file: !61, line: 45, baseType: !556, size: 64, offset: 320)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !387, file: !333, line: 144, baseType: !3307, size: 64, offset: 320)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{!2216, !340}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !387, file: !333, line: 145, baseType: !3311, size: 64, offset: 384)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{null, !340, !3314, !3315}
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !332, file: !333, line: 70, baseType: !3317, size: 64, offset: 384)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !705, line: 123, size: 1024, elements: !3319)
!3319 = !{!3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3436, !3437, !3438, !3439, !3440}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3318, file: !705, line: 124, baseType: !301, size: 32)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3318, file: !705, line: 125, baseType: !301, size: 32, offset: 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3318, file: !705, line: 135, baseType: !3317, size: 64, offset: 64)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3318, file: !705, line: 136, baseType: !336, size: 64, offset: 128)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3318, file: !705, line: 138, baseType: !881, size: 192, align: 64, offset: 192)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3318, file: !705, line: 140, baseType: !2216, size: 64, offset: 384)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3318, file: !705, line: 141, baseType: !7, size: 32, offset: 448)
!3327 = !DIDerivedType(tag: DW_TAG_member, scope: !3318, file: !705, line: 142, baseType: !3328, size: 256, offset: 512)
!3328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3318, file: !705, line: 142, size: 256, elements: !3329)
!3329 = !{!3330, !3376, !3380}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3328, file: !705, line: 143, baseType: !3331, size: 192)
!3331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !705, line: 91, size: 192, elements: !3332)
!3332 = !{!3333, !3334, !3335}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3331, file: !705, line: 92, baseType: !193, size: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3331, file: !705, line: 94, baseType: !877, size: 64, offset: 64)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3331, file: !705, line: 100, baseType: !3336, size: 64, offset: 128)
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 64)
!3337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !705, line: 180, size: 704, elements: !3338)
!3338 = !{!3339, !3340, !3341, !3348, !3349, !3350, !3374, !3375}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3337, file: !705, line: 182, baseType: !3317, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3337, file: !705, line: 183, baseType: !7, size: 32, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3337, file: !705, line: 186, baseType: !3342, size: 192, offset: 128)
!3342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3343, line: 19, size: 192, elements: !3344)
!3343 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3344 = !{!3345, !3346, !3347}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3342, file: !3343, line: 20, baseType: !864, size: 128)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3342, file: !3343, line: 21, baseType: !7, size: 32, offset: 128)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3342, file: !3343, line: 22, baseType: !7, size: 32, offset: 160)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3337, file: !705, line: 187, baseType: !505, size: 32, offset: 320)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3337, file: !705, line: 188, baseType: !505, size: 32, offset: 352)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3337, file: !705, line: 189, baseType: !3351, size: 64, offset: 384)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !705, line: 168, size: 320, elements: !3353)
!3353 = !{!3354, !3358, !3362, !3366, !3370}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3352, file: !705, line: 169, baseType: !3355, size: 64)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!215, !800, !3336}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3352, file: !705, line: 171, baseType: !3359, size: 64, offset: 64)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 64)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!215, !3317, !336, !412}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3352, file: !705, line: 173, baseType: !3363, size: 64, offset: 128)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!215, !3317}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3352, file: !705, line: 174, baseType: !3367, size: 64, offset: 192)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = !DISubroutineType(types: !3369)
!3369 = !{!215, !3317, !3317, !336}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3352, file: !705, line: 176, baseType: !3371, size: 64, offset: 256)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = !DISubroutineType(types: !3373)
!3373 = !{!215, !800, !3317, !3336}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3337, file: !705, line: 192, baseType: !267, size: 128, offset: 448)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3337, file: !705, line: 194, baseType: !1581, size: 128, offset: 576)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3328, file: !705, line: 144, baseType: !3377, size: 64)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !705, line: 103, size: 64, elements: !3378)
!3378 = !{!3379}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3377, file: !705, line: 104, baseType: !3317, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3328, file: !705, line: 145, baseType: !3381, size: 256)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !705, line: 107, size: 256, elements: !3382)
!3382 = !{!3383, !3431, !3434, !3435}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3381, file: !705, line: 108, baseType: !3384, size: 64)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3386)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !705, line: 217, size: 768, elements: !3387)
!3387 = !{!3388, !3408, !3412, !3413, !3414, !3415, !3416, !3420, !3421, !3422, !3423, !3427}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3386, file: !705, line: 222, baseType: !3389, size: 64)
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{!215, !3392}
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !705, line: 197, size: 1088, elements: !3394)
!3394 = !{!3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3393, file: !705, line: 199, baseType: !3317, size: 64)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3393, file: !705, line: 200, baseType: !447, size: 64, offset: 64)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3393, file: !705, line: 201, baseType: !800, size: 64, offset: 128)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3393, file: !705, line: 202, baseType: !216, size: 64, offset: 192)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3393, file: !705, line: 205, baseType: !279, size: 192, offset: 256)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3393, file: !705, line: 206, baseType: !279, size: 192, offset: 448)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3393, file: !705, line: 207, baseType: !215, size: 32, offset: 640)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3393, file: !705, line: 208, baseType: !267, size: 128, offset: 704)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3393, file: !705, line: 209, baseType: !202, size: 64, offset: 832)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3393, file: !705, line: 211, baseType: !417, size: 64, offset: 896)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3393, file: !705, line: 212, baseType: !578, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3393, file: !705, line: 213, baseType: !578, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3393, file: !705, line: 214, baseType: !1122, size: 64, offset: 1024)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3386, file: !705, line: 223, baseType: !3409, size: 64, offset: 64)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{null, !3392}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3386, file: !705, line: 236, baseType: !831, size: 64, offset: 128)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3386, file: !705, line: 238, baseType: !818, size: 64, offset: 192)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3386, file: !705, line: 239, baseType: !827, size: 64, offset: 256)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3386, file: !705, line: 240, baseType: !823, size: 64, offset: 320)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3386, file: !705, line: 242, baseType: !3417, size: 64, offset: 384)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!403, !3392, !202, !417, !619}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3386, file: !705, line: 252, baseType: !417, size: 64, offset: 448)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3386, file: !705, line: 259, baseType: !578, size: 8, offset: 512)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3386, file: !705, line: 260, baseType: !3417, size: 64, offset: 576)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3386, file: !705, line: 263, baseType: !3424, size: 64, offset: 640)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 64)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{!2990, !3392, !2992}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3386, file: !705, line: 266, baseType: !3428, size: 64, offset: 704)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{!215, !3392, !1094}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3381, file: !705, line: 109, baseType: !3432, size: 64, offset: 64)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !705, line: 31, flags: DIFlagFwdDecl)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3381, file: !705, line: 110, baseType: !619, size: 64, offset: 128)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3381, file: !705, line: 111, baseType: !3317, size: 64, offset: 192)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3318, file: !705, line: 148, baseType: !216, size: 64, offset: 768)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3318, file: !705, line: 154, baseType: !509, size: 64, offset: 832)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3318, file: !705, line: 156, baseType: !192, size: 16, offset: 896)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3318, file: !705, line: 157, baseType: !412, size: 16, offset: 912)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3318, file: !705, line: 158, baseType: !3441, size: 64, offset: 960)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !705, line: 32, flags: DIFlagFwdDecl)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !332, file: !333, line: 71, baseType: !319, size: 32, offset: 448)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !332, file: !333, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !332, file: !333, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !332, file: !333, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !332, file: !333, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !332, file: !333, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !329, file: !73, line: 463, baseType: !328, size: 64, offset: 512)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !329, file: !73, line: 465, baseType: !3451, size: 64, offset: 576)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !329, file: !73, line: 467, baseType: !336, size: 64, offset: 640)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !329, file: !73, line: 468, baseType: !3455, size: 64, offset: 704)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3457)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3458)
!3458 = !{!3459, !3460, !3461, !3465, !3470, !3474}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3457, file: !73, line: 88, baseType: !336, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3457, file: !73, line: 89, baseType: !423, size: 64, offset: 64)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3457, file: !73, line: 90, baseType: !3462, size: 64, offset: 128)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!215, !328, !368}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3457, file: !73, line: 91, baseType: !3466, size: 64, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{!202, !328, !3469, !3314, !3315}
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3457, file: !73, line: 93, baseType: !3471, size: 64, offset: 256)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = !DISubroutineType(types: !3473)
!3473 = !{null, !328}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3457, file: !73, line: 95, baseType: !3475, size: 64, offset: 320)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3477)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3478)
!3478 = !{!3479, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3477, file: !80, line: 279, baseType: !3480, size: 64)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!215, !328}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3477, file: !80, line: 280, baseType: !3471, size: 64, offset: 64)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3477, file: !80, line: 281, baseType: !3480, size: 64, offset: 128)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3477, file: !80, line: 282, baseType: !3480, size: 64, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3477, file: !80, line: 283, baseType: !3480, size: 64, offset: 256)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3477, file: !80, line: 284, baseType: !3480, size: 64, offset: 320)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3477, file: !80, line: 285, baseType: !3480, size: 64, offset: 384)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3477, file: !80, line: 286, baseType: !3480, size: 64, offset: 448)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3477, file: !80, line: 287, baseType: !3480, size: 64, offset: 512)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3477, file: !80, line: 288, baseType: !3480, size: 64, offset: 576)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3477, file: !80, line: 289, baseType: !3480, size: 64, offset: 640)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3477, file: !80, line: 290, baseType: !3480, size: 64, offset: 704)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3477, file: !80, line: 291, baseType: !3480, size: 64, offset: 768)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3477, file: !80, line: 292, baseType: !3480, size: 64, offset: 832)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3477, file: !80, line: 293, baseType: !3480, size: 64, offset: 896)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3477, file: !80, line: 294, baseType: !3480, size: 64, offset: 960)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3477, file: !80, line: 295, baseType: !3480, size: 64, offset: 1024)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3477, file: !80, line: 296, baseType: !3480, size: 64, offset: 1088)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3477, file: !80, line: 297, baseType: !3480, size: 64, offset: 1152)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3477, file: !80, line: 298, baseType: !3480, size: 64, offset: 1216)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3477, file: !80, line: 299, baseType: !3480, size: 64, offset: 1280)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3477, file: !80, line: 300, baseType: !3480, size: 64, offset: 1344)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3477, file: !80, line: 301, baseType: !3480, size: 64, offset: 1408)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !329, file: !73, line: 470, baseType: !3506, size: 64, offset: 768)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3508, line: 82, size: 1408, elements: !3509)
!3508 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3509 = !{!3510, !3511, !3512, !3513, !3514, !3515, !3516, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3573, !3576, !3577}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3507, file: !3508, line: 83, baseType: !336, size: 64)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3507, file: !3508, line: 84, baseType: !336, size: 64, offset: 64)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3507, file: !3508, line: 85, baseType: !328, size: 64, offset: 128)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3507, file: !3508, line: 86, baseType: !423, size: 64, offset: 192)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3507, file: !3508, line: 87, baseType: !423, size: 64, offset: 256)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3507, file: !3508, line: 88, baseType: !423, size: 64, offset: 320)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3507, file: !3508, line: 90, baseType: !3517, size: 64, offset: 384)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!215, !328, !3520}
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3522)
!3522 = !{!3523, !3524, !3525, !3526, !3527, !3528, !3529, !3533, !3537, !3538, !3539, !3540, !3541, !3549, !3550, !3551, !3552, !3553, !3554}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3521, file: !67, line: 96, baseType: !336, size: 64)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3521, file: !67, line: 97, baseType: !3506, size: 64, offset: 64)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3521, file: !67, line: 99, baseType: !719, size: 64, offset: 128)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3521, file: !67, line: 100, baseType: !336, size: 64, offset: 192)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3521, file: !67, line: 102, baseType: !578, size: 8, offset: 256)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3521, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3521, file: !67, line: 105, baseType: !3530, size: 64, offset: 320)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3532)
!3532 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !67, line: 105, flags: DIFlagFwdDecl)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3521, file: !67, line: 106, baseType: !3534, size: 64, offset: 384)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3536)
!3536 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !67, line: 106, flags: DIFlagFwdDecl)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3521, file: !67, line: 108, baseType: !3480, size: 64, offset: 448)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3521, file: !67, line: 109, baseType: !3471, size: 64, offset: 512)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3521, file: !67, line: 110, baseType: !3480, size: 64, offset: 576)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3521, file: !67, line: 111, baseType: !3471, size: 64, offset: 640)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3521, file: !67, line: 112, baseType: !3542, size: 64, offset: 704)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!215, !328, !3545}
!3545 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3546)
!3546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3547)
!3547 = !{!3548}
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3546, file: !80, line: 51, baseType: !215, size: 32)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3521, file: !67, line: 113, baseType: !3480, size: 64, offset: 768)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3521, file: !67, line: 114, baseType: !423, size: 64, offset: 832)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3521, file: !67, line: 115, baseType: !423, size: 64, offset: 896)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3521, file: !67, line: 117, baseType: !3475, size: 64, offset: 960)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3521, file: !67, line: 118, baseType: !3471, size: 64, offset: 1024)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3521, file: !67, line: 120, baseType: !3555, size: 64, offset: 1088)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3507, file: !3508, line: 91, baseType: !3462, size: 64, offset: 448)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3507, file: !3508, line: 92, baseType: !3480, size: 64, offset: 512)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3507, file: !3508, line: 93, baseType: !3471, size: 64, offset: 576)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3507, file: !3508, line: 94, baseType: !3480, size: 64, offset: 640)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3507, file: !3508, line: 95, baseType: !3471, size: 64, offset: 704)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3507, file: !3508, line: 97, baseType: !3480, size: 64, offset: 768)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3507, file: !3508, line: 98, baseType: !3480, size: 64, offset: 832)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3507, file: !3508, line: 100, baseType: !3542, size: 64, offset: 896)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3507, file: !3508, line: 101, baseType: !3480, size: 64, offset: 960)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3507, file: !3508, line: 103, baseType: !3480, size: 64, offset: 1024)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3507, file: !3508, line: 105, baseType: !3480, size: 64, offset: 1088)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3507, file: !3508, line: 107, baseType: !3475, size: 64, offset: 1152)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3507, file: !3508, line: 109, baseType: !3570, size: 64, offset: 1216)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3572)
!3572 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3508, line: 109, flags: DIFlagFwdDecl)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3507, file: !3508, line: 111, baseType: !3574, size: 64, offset: 1280)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3508, line: 111, flags: DIFlagFwdDecl)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3507, file: !3508, line: 112, baseType: !734, offset: 1344)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3507, file: !3508, line: 114, baseType: !578, size: 8, offset: 1344)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !329, file: !73, line: 471, baseType: !3520, size: 64, offset: 832)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !329, file: !73, line: 473, baseType: !216, size: 64, offset: 896)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !329, file: !73, line: 475, baseType: !216, size: 64, offset: 960)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !329, file: !73, line: 480, baseType: !279, size: 192, offset: 1024)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !329, file: !73, line: 484, baseType: !3583, size: 576, offset: 1216)
!3583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3584)
!3584 = !{!3585, !3586, !3587, !3588, !3589, !3590}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3583, file: !73, line: 362, baseType: !267, size: 128)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3583, file: !73, line: 363, baseType: !267, size: 128, offset: 128)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3583, file: !73, line: 364, baseType: !267, size: 128, offset: 256)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3583, file: !73, line: 365, baseType: !267, size: 128, offset: 384)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3583, file: !73, line: 366, baseType: !578, size: 8, offset: 512)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3583, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !329, file: !73, line: 485, baseType: !3592, size: 2304, offset: 1792)
!3592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3593)
!3593 = !{!3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3689, !3693}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3592, file: !80, line: 566, baseType: !3545, size: 32)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3592, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3592, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3592, file: !80, line: 569, baseType: !578, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3592, file: !80, line: 570, baseType: !578, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3592, file: !80, line: 571, baseType: !578, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3592, file: !80, line: 572, baseType: !578, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3592, file: !80, line: 573, baseType: !578, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3592, file: !80, line: 574, baseType: !578, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3592, file: !80, line: 575, baseType: !578, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3592, file: !80, line: 576, baseType: !578, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3592, file: !80, line: 577, baseType: !505, size: 32, offset: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3592, file: !80, line: 578, baseType: !284, offset: 96)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3592, file: !80, line: 580, baseType: !267, size: 128, offset: 128)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3592, file: !80, line: 581, baseType: !1602, size: 192, offset: 256)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3592, file: !80, line: 582, baseType: !3610, size: 64, offset: 448)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3612, line: 43, size: 1472, elements: !3613)
!3612 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3613 = !{!3614, !3615, !3616, !3617, !3618, !3621, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3611, file: !3612, line: 44, baseType: !336, size: 64)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3611, file: !3612, line: 45, baseType: !215, size: 32, offset: 64)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3611, file: !3612, line: 46, baseType: !267, size: 128, offset: 128)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3611, file: !3612, line: 47, baseType: !284, offset: 256)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3611, file: !3612, line: 48, baseType: !3619, size: 64, offset: 256)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!3620 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3611, file: !3612, line: 49, baseType: !3622, size: 320, offset: 320)
!3622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3623, line: 11, size: 320, elements: !3624)
!3623 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3624 = !{!3625, !3626, !3627, !3632}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3622, file: !3623, line: 16, baseType: !728, size: 128)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3622, file: !3623, line: 17, baseType: !193, size: 64, offset: 128)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3622, file: !3623, line: 18, baseType: !3628, size: 64, offset: 192)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DISubroutineType(types: !3630)
!3630 = !{null, !3631}
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3622, size: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3622, file: !3623, line: 19, baseType: !505, size: 32, offset: 256)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3611, file: !3612, line: 50, baseType: !193, size: 64, offset: 640)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3611, file: !3612, line: 51, baseType: !1402, size: 64, offset: 704)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3611, file: !3612, line: 52, baseType: !1402, size: 64, offset: 768)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3611, file: !3612, line: 53, baseType: !1402, size: 64, offset: 832)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3611, file: !3612, line: 54, baseType: !1402, size: 64, offset: 896)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3611, file: !3612, line: 55, baseType: !1402, size: 64, offset: 960)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3611, file: !3612, line: 56, baseType: !193, size: 64, offset: 1024)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3611, file: !3612, line: 57, baseType: !193, size: 64, offset: 1088)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3611, file: !3612, line: 58, baseType: !193, size: 64, offset: 1152)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3611, file: !3612, line: 59, baseType: !193, size: 64, offset: 1216)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3611, file: !3612, line: 60, baseType: !193, size: 64, offset: 1280)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3611, file: !3612, line: 61, baseType: !328, size: 64, offset: 1344)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3611, file: !3612, line: 62, baseType: !578, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3611, file: !3612, line: 63, baseType: !578, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3592, file: !80, line: 583, baseType: !578, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3592, file: !80, line: 584, baseType: !578, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3592, file: !80, line: 585, baseType: !578, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3592, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3592, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3592, file: !80, line: 592, baseType: !1394, size: 512, offset: 576)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3592, file: !80, line: 593, baseType: !509, size: 64, offset: 1088)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3592, file: !80, line: 594, baseType: !254, size: 256, offset: 1152)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3592, file: !80, line: 595, baseType: !1581, size: 128, offset: 1408)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3592, file: !80, line: 596, baseType: !3619, size: 64, offset: 1536)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3592, file: !80, line: 597, baseType: !301, size: 32, offset: 1600)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3592, file: !80, line: 598, baseType: !301, size: 32, offset: 1632)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3592, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3592, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3592, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3592, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3592, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3592, file: !80, line: 604, baseType: !578, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3592, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3592, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3592, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3592, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3592, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3592, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3592, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3592, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3592, file: !80, line: 613, baseType: !215, size: 32, offset: 1792)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3592, file: !80, line: 614, baseType: !215, size: 32, offset: 1824)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3592, file: !80, line: 615, baseType: !509, size: 64, offset: 1856)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3592, file: !80, line: 616, baseType: !509, size: 64, offset: 1920)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3592, file: !80, line: 617, baseType: !509, size: 64, offset: 1984)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3592, file: !80, line: 618, baseType: !509, size: 64, offset: 2048)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3592, file: !80, line: 620, baseType: !3680, size: 64, offset: 2112)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3682)
!3682 = !{!3683, !3684, !3685, !3686}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3681, file: !80, line: 537, baseType: !284)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3681, file: !80, line: 538, baseType: !7, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3681, file: !80, line: 540, baseType: !267, size: 128, offset: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3681, file: !80, line: 543, baseType: !3687, size: 64, offset: 192)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3688 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3592, file: !80, line: 621, baseType: !3690, size: 64, offset: 2176)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{null, !328, !213}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3592, file: !80, line: 622, baseType: !3694, size: 64, offset: 2240)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !329, file: !73, line: 486, baseType: !3697, size: 64, offset: 4096)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 64)
!3698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3699)
!3699 = !{!3700, !3701, !3702, !3706, !3707, !3708}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3698, file: !80, line: 643, baseType: !3477, size: 1472)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3698, file: !80, line: 644, baseType: !3480, size: 64, offset: 1472)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3698, file: !80, line: 645, baseType: !3703, size: 64, offset: 1536)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{null, !328, !578}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3698, file: !80, line: 646, baseType: !3480, size: 64, offset: 1600)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3698, file: !80, line: 647, baseType: !3471, size: 64, offset: 1664)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3698, file: !80, line: 648, baseType: !3471, size: 64, offset: 1728)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !329, file: !73, line: 493, baseType: !3710, size: 64, offset: 4160)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !329, file: !73, line: 499, baseType: !267, size: 128, offset: 4224)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !329, file: !73, line: 502, baseType: !3714, size: 64, offset: 4352)
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3716)
!3716 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !329, file: !73, line: 504, baseType: !3718, size: 64, offset: 4416)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !329, file: !73, line: 505, baseType: !509, size: 64, offset: 4480)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !329, file: !73, line: 510, baseType: !509, size: 64, offset: 4544)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !329, file: !73, line: 511, baseType: !3722, size: 64, offset: 4608)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3724)
!3724 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !329, file: !73, line: 513, baseType: !3726, size: 64, offset: 4672)
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3728)
!3728 = !{!3729, !3730}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3727, file: !73, line: 293, baseType: !7, size: 32)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3727, file: !73, line: 294, baseType: !193, size: 64, offset: 64)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !329, file: !73, line: 515, baseType: !267, size: 128, offset: 4736)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !329, file: !73, line: 526, baseType: !3733, offset: 4864)
!3733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3734, line: 5, elements: !298)
!3734 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !329, file: !73, line: 528, baseType: !3736, size: 64, offset: 4864)
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3738, line: 14, flags: DIFlagFwdDecl)
!3738 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !329, file: !73, line: 529, baseType: !3740, size: 64, offset: 4928)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3742, line: 17, size: 192, elements: !3743)
!3742 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3743 = !{!3744, !3745, !3828}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3741, file: !3742, line: 18, baseType: !3740, size: 64)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3741, file: !3742, line: 19, baseType: !3746, size: 64, offset: 64)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3748)
!3748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3742, line: 110, size: 1152, elements: !3749)
!3749 = !{!3750, !3754, !3758, !3764, !3770, !3774, !3778, !3783, !3787, !3788, !3792, !3796, !3800, !3811, !3812, !3813, !3814, !3824}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3748, file: !3742, line: 111, baseType: !3751, size: 64)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!3740, !3740}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3748, file: !3742, line: 112, baseType: !3755, size: 64, offset: 64)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{null, !3740}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3748, file: !3742, line: 113, baseType: !3759, size: 64, offset: 128)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!578, !3762}
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3741)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3748, file: !3742, line: 114, baseType: !3765, size: 64, offset: 192)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!2216, !3762, !3768}
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!3769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !329)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3748, file: !3742, line: 116, baseType: !3771, size: 64, offset: 256)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{!578, !3762, !336}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3748, file: !3742, line: 118, baseType: !3775, size: 64, offset: 320)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!215, !3762, !336, !7, !216, !417}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3748, file: !3742, line: 123, baseType: !3779, size: 64, offset: 384)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!215, !3762, !336, !3782, !417}
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3748, file: !3742, line: 126, baseType: !3784, size: 64, offset: 448)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!336, !3762}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3748, file: !3742, line: 127, baseType: !3784, size: 64, offset: 512)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3748, file: !3742, line: 128, baseType: !3789, size: 64, offset: 576)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!3740, !3762}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3748, file: !3742, line: 130, baseType: !3793, size: 64, offset: 640)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!3740, !3762, !3740}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3748, file: !3742, line: 133, baseType: !3797, size: 64, offset: 704)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!3740, !3762, !336}
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3748, file: !3742, line: 135, baseType: !3801, size: 64, offset: 768)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 64)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!215, !3762, !336, !336, !7, !7, !3804}
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3742, line: 43, size: 640, elements: !3806)
!3806 = !{!3807, !3808, !3809}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3805, file: !3742, line: 44, baseType: !3740, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3805, file: !3742, line: 45, baseType: !7, size: 32, offset: 64)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3805, file: !3742, line: 46, baseType: !3810, size: 512, offset: 128)
!3810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 512, elements: !1432)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3748, file: !3742, line: 140, baseType: !3793, size: 64, offset: 832)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3748, file: !3742, line: 143, baseType: !3789, size: 64, offset: 896)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3748, file: !3742, line: 145, baseType: !3751, size: 64, offset: 960)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3748, file: !3742, line: 146, baseType: !3815, size: 64, offset: 1024)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = !DISubroutineType(types: !3817)
!3817 = !{!215, !3762, !3818}
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3742, line: 29, size: 128, elements: !3820)
!3820 = !{!3821, !3822, !3823}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3819, file: !3742, line: 30, baseType: !7, size: 32)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3819, file: !3742, line: 31, baseType: !7, size: 32, offset: 32)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3819, file: !3742, line: 32, baseType: !3762, size: 64, offset: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3748, file: !3742, line: 148, baseType: !3825, size: 64, offset: 1088)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{!215, !3762, !328}
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3741, file: !3742, line: 20, baseType: !328, size: 64, offset: 128)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !329, file: !73, line: 534, baseType: !601, size: 32, offset: 4992)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !329, file: !73, line: 535, baseType: !505, size: 32, offset: 5024)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !329, file: !73, line: 537, baseType: !284, offset: 5056)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !329, file: !73, line: 538, baseType: !267, size: 128, offset: 5056)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !329, file: !73, line: 540, baseType: !3834, size: 64, offset: 5184)
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3836, line: 54, size: 960, elements: !3837)
!3836 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3837 = !{!3838, !3839, !3840, !3841, !3842, !3843, !3844, !3848, !3852, !3853, !3854, !3855, !3859, !3863, !3864}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3835, file: !3836, line: 55, baseType: !336, size: 64)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3835, file: !3836, line: 56, baseType: !719, size: 64, offset: 64)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3835, file: !3836, line: 58, baseType: !423, size: 64, offset: 128)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3835, file: !3836, line: 59, baseType: !423, size: 64, offset: 192)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3835, file: !3836, line: 60, baseType: !340, size: 64, offset: 256)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3835, file: !3836, line: 62, baseType: !3462, size: 64, offset: 320)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3835, file: !3836, line: 63, baseType: !3845, size: 64, offset: 384)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!202, !328, !3469}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3835, file: !3836, line: 65, baseType: !3849, size: 64, offset: 448)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{null, !3834}
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3835, file: !3836, line: 66, baseType: !3471, size: 64, offset: 512)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3835, file: !3836, line: 68, baseType: !3480, size: 64, offset: 576)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3835, file: !3836, line: 70, baseType: !3282, size: 64, offset: 640)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3835, file: !3836, line: 71, baseType: !3856, size: 64, offset: 704)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DISubroutineType(types: !3858)
!3858 = !{!2216, !328}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3835, file: !3836, line: 73, baseType: !3860, size: 64, offset: 768)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{null, !328, !3314, !3315}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3835, file: !3836, line: 75, baseType: !3475, size: 64, offset: 832)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3835, file: !3836, line: 77, baseType: !3574, size: 64, offset: 896)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !329, file: !73, line: 541, baseType: !423, size: 64, offset: 5248)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !329, file: !73, line: 543, baseType: !3471, size: 64, offset: 5312)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !329, file: !73, line: 544, baseType: !3868, size: 64, offset: 5376)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !329, file: !73, line: 545, baseType: !3871, size: 64, offset: 5440)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !329, file: !73, line: 547, baseType: !578, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !329, file: !73, line: 548, baseType: !578, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !329, file: !73, line: 549, baseType: !578, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !329, file: !73, line: 550, baseType: !578, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !315, file: !225, line: 289, baseType: !3878, size: 64, offset: 128)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !3880, line: 302, size: 1472, elements: !3881)
!3880 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!3881 = !{!3882, !3883, !3884, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3913, !3914, !3917, !3918, !3920, !3923, !3926, !3927, !4052}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3879, file: !3880, line: 303, baseType: !215, size: 32)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3879, file: !3880, line: 304, baseType: !319, size: 32, offset: 32)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !3879, file: !3880, line: 305, baseType: !3885, size: 64, offset: 64)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3879, file: !3880, line: 306, baseType: !719, size: 64, offset: 128)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !3879, file: !3880, line: 307, baseType: !336, size: 64, offset: 192)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3879, file: !3880, line: 308, baseType: !336, size: 64, offset: 256)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !3879, file: !3880, line: 309, baseType: !215, size: 32, offset: 320)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3879, file: !3880, line: 310, baseType: !215, size: 32, offset: 352)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !3879, file: !3880, line: 311, baseType: !215, size: 32, offset: 384)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3879, file: !3880, line: 312, baseType: !7, size: 32, offset: 416)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3879, file: !3880, line: 313, baseType: !1312, size: 16, offset: 448)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !3879, file: !3880, line: 314, baseType: !1312, size: 16, offset: 464)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !3879, file: !3880, line: 315, baseType: !3896, size: 352, offset: 480)
!3896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !3897, line: 32, size: 352, elements: !3898)
!3897 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!3898 = !{!3899, !3901, !3902, !3903, !3904, !3906, !3910, !3912}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !3896, file: !3897, line: 33, baseType: !3900, size: 32)
!3900 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !3897, line: 9, baseType: !7)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !3896, file: !3897, line: 34, baseType: !3900, size: 32, offset: 32)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !3896, file: !3897, line: 35, baseType: !3900, size: 32, offset: 64)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !3896, file: !3897, line: 36, baseType: !3900, size: 32, offset: 96)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !3896, file: !3897, line: 37, baseType: !3905, size: 8, offset: 128)
!3905 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !3897, line: 7, baseType: !515)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !3896, file: !3897, line: 38, baseType: !3907, size: 152, offset: 136)
!3907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3905, size: 152, elements: !3908)
!3908 = !{!3909}
!3909 = !DISubrange(count: 19)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !3896, file: !3897, line: 39, baseType: !3911, size: 32, offset: 288)
!3911 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !3897, line: 8, baseType: !7)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !3896, file: !3897, line: 40, baseType: !3911, size: 32, offset: 320)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3879, file: !3880, line: 316, baseType: !193, size: 64, offset: 832)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !3879, file: !3880, line: 317, baseType: !3915, size: 64, offset: 896)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3880, line: 317, flags: DIFlagFwdDecl)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !3879, file: !3880, line: 318, baseType: !3878, size: 64, offset: 960)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !3879, file: !3880, line: 323, baseType: !3919, size: 64, offset: 1024)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !3879, file: !3880, line: 324, baseType: !3921, size: 64, offset: 1088)
!3921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3922, size: 64)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !3879, file: !3880, line: 325, baseType: !3924, size: 64, offset: 1152)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !3879, file: !3880, line: 326, baseType: !216, size: 64, offset: 1216)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3879, file: !3880, line: 332, baseType: !3928, size: 64, offset: 1280)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3930)
!3930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !3880, line: 254, size: 2176, elements: !3931)
!3931 = !{!3932, !3936, !3940, !3944, !3948, !3952, !3956, !3957, !3961, !3965, !3966, !3970, !3971, !3975, !3979, !3983, !3984, !3985, !3986, !3987, !3988, !3992, !3993, !3994, !3998, !4002, !4003, !4007, !4019, !4034, !4040, !4046, !4047, !4051}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !3930, file: !3880, line: 255, baseType: !3933, size: 64)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 64)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{!314, !3878, !447, !215}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !3930, file: !3880, line: 257, baseType: !3937, size: 64, offset: 64)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{!215, !3878, !314}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3930, file: !3880, line: 258, baseType: !3941, size: 64, offset: 128)
!3941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{null, !3878, !314}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3930, file: !3880, line: 259, baseType: !3945, size: 64, offset: 192)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DISubroutineType(types: !3947)
!3947 = !{!215, !314, !447}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3930, file: !3880, line: 260, baseType: !3949, size: 64, offset: 256)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{null, !314, !447}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3930, file: !3880, line: 261, baseType: !3953, size: 64, offset: 320)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{null, !314}
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3930, file: !3880, line: 262, baseType: !3953, size: 64, offset: 384)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3930, file: !3880, line: 263, baseType: !3958, size: 64, offset: 448)
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = !DISubroutineType(types: !3960)
!3960 = !{!215, !314, !513, !215}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !3930, file: !3880, line: 265, baseType: !3962, size: 64, offset: 512)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!215, !314, !515}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !3930, file: !3880, line: 266, baseType: !3953, size: 64, offset: 576)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !3930, file: !3880, line: 267, baseType: !3967, size: 64, offset: 640)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!215, !314}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !3930, file: !3880, line: 268, baseType: !3967, size: 64, offset: 704)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3930, file: !3880, line: 269, baseType: !3972, size: 64, offset: 768)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!215, !314, !7, !193}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3930, file: !3880, line: 271, baseType: !3976, size: 64, offset: 832)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!112, !314, !7, !193}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !3930, file: !3880, line: 273, baseType: !3980, size: 64, offset: 896)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{null, !314, !3925}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !3930, file: !3880, line: 274, baseType: !3953, size: 64, offset: 960)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !3930, file: !3880, line: 275, baseType: !3953, size: 64, offset: 1024)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !3930, file: !3880, line: 276, baseType: !3953, size: 64, offset: 1088)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3930, file: !3880, line: 277, baseType: !3953, size: 64, offset: 1152)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !3930, file: !3880, line: 278, baseType: !3953, size: 64, offset: 1216)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !3930, file: !3880, line: 279, baseType: !3989, size: 64, offset: 1280)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!215, !314, !215}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !3930, file: !3880, line: 280, baseType: !3953, size: 64, offset: 1344)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !3930, file: !3880, line: 281, baseType: !3953, size: 64, offset: 1408)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !3930, file: !3880, line: 282, baseType: !3995, size: 64, offset: 1472)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{null, !314, !215}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !3930, file: !3880, line: 283, baseType: !3999, size: 64, offset: 1536)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{null, !314, !201}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !3930, file: !3880, line: 284, baseType: !3967, size: 64, offset: 1600)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !3930, file: !3880, line: 285, baseType: !4004, size: 64, offset: 1664)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!215, !314, !7, !7}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !3930, file: !3880, line: 287, baseType: !4008, size: 64, offset: 1728)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!215, !314, !4011}
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !4013, line: 15, size: 64, elements: !4014)
!4013 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!4014 = !{!4015, !4016, !4017, !4018}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !4012, file: !4013, line: 16, baseType: !192, size: 16)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !4012, file: !4013, line: 17, baseType: !192, size: 16, offset: 16)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !4012, file: !4013, line: 18, baseType: !192, size: 16, offset: 32)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !4012, file: !4013, line: 19, baseType: !192, size: 16, offset: 48)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !3930, file: !3880, line: 288, baseType: !4020, size: 64, offset: 1792)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!215, !314, !4023}
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !4025, line: 10, size: 128, elements: !4026)
!4025 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!4026 = !{!4027, !4028, !4029, !4033}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !4024, file: !4025, line: 12, baseType: !197, size: 16)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !4024, file: !4025, line: 13, baseType: !197, size: 16, offset: 16)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !4024, file: !4025, line: 14, baseType: !4030, size: 80, offset: 32)
!4030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 80, elements: !4031)
!4031 = !{!4032}
!4032 = !DISubrange(count: 5)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !4024, file: !4025, line: 15, baseType: !197, size: 16, offset: 112)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !3930, file: !3880, line: 289, baseType: !4035, size: 64, offset: 1856)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{!215, !314, !4038}
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4039, size: 64)
!4039 = !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !3880, line: 251, flags: DIFlagFwdDecl)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !3930, file: !3880, line: 291, baseType: !4041, size: 64, offset: 1920)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{!215, !314, !4044}
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !3880, line: 252, flags: DIFlagFwdDecl)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !3930, file: !3880, line: 292, baseType: !4041, size: 64, offset: 1984)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3930, file: !3880, line: 293, baseType: !4048, size: 64, offset: 2048)
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{null, !314, !800}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !3930, file: !3880, line: 299, baseType: !831, size: 64, offset: 2112)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !3879, file: !3880, line: 333, baseType: !267, size: 128, offset: 1344)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !315, file: !225, line: 290, baseType: !3928, size: 64, offset: 192)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !315, file: !225, line: 291, baseType: !215, size: 32, offset: 256)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !315, file: !225, line: 294, baseType: !4056, size: 384, offset: 320)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !4057, line: 133, size: 384, elements: !4058)
!4057 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!4058 = !{!4059, !4060, !4061, !4062, !4063}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4056, file: !4057, line: 134, baseType: !257, size: 64)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4056, file: !4057, line: 135, baseType: !894, offset: 64)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !4056, file: !4057, line: 136, baseType: !7, size: 32, offset: 64)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !4056, file: !4057, line: 137, baseType: !267, size: 128, offset: 128)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !4056, file: !4057, line: 138, baseType: !267, size: 128, offset: 256)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !315, file: !225, line: 295, baseType: !4065, size: 64, offset: 704)
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !4057, line: 215, size: 128, elements: !4067)
!4067 = !{!4068, !4114}
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4066, file: !4057, line: 216, baseType: !4069, size: 64)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !4057, line: 175, size: 1216, elements: !4071)
!4071 = !{!4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4084, !4088, !4092, !4093, !4094, !4098, !4099, !4103, !4104, !4108, !4112, !4113}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4070, file: !4057, line: 176, baseType: !215, size: 32)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4070, file: !4057, line: 177, baseType: !202, size: 64, offset: 64)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4070, file: !4057, line: 178, baseType: !215, size: 32, offset: 128)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4070, file: !4057, line: 179, baseType: !215, size: 32, offset: 160)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4070, file: !4057, line: 184, baseType: !3967, size: 64, offset: 192)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4070, file: !4057, line: 185, baseType: !3953, size: 64, offset: 256)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4070, file: !4057, line: 186, baseType: !3953, size: 64, offset: 320)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4070, file: !4057, line: 187, baseType: !4080, size: 64, offset: 384)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!403, !314, !447, !4083, !417}
!4083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4070, file: !4057, line: 189, baseType: !4085, size: 64, offset: 448)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!403, !314, !447, !513, !417}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4070, file: !4057, line: 191, baseType: !4089, size: 64, offset: 512)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!215, !314, !447, !7, !193}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4070, file: !4057, line: 193, baseType: !4089, size: 64, offset: 576)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4070, file: !4057, line: 195, baseType: !3980, size: 64, offset: 640)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4070, file: !4057, line: 196, baseType: !4095, size: 64, offset: 704)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{!2990, !314, !447, !2992}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !4070, file: !4057, line: 198, baseType: !3967, size: 64, offset: 768)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4070, file: !4057, line: 203, baseType: !4100, size: 64, offset: 832)
!4100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 64)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{null, !314, !513, !202, !215}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4070, file: !4057, line: 205, baseType: !3953, size: 64, offset: 896)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !4070, file: !4057, line: 206, baseType: !4105, size: 64, offset: 960)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{null, !314, !7}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !4070, file: !4057, line: 207, baseType: !4109, size: 64, offset: 1024)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!215, !314, !513, !202, !215}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4070, file: !4057, line: 210, baseType: !719, size: 64, offset: 1088)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4070, file: !4057, line: 212, baseType: !215, size: 32, offset: 1152)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4066, file: !4057, line: 217, baseType: !314, size: 64, offset: 64)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !315, file: !225, line: 297, baseType: !279, size: 192, offset: 768)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !315, file: !225, line: 298, baseType: !279, size: 192, offset: 960)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !315, file: !225, line: 299, baseType: !279, size: 192, offset: 1152)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !315, file: !225, line: 300, baseType: !888, size: 256, offset: 1344)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !315, file: !225, line: 301, baseType: !279, size: 192, offset: 1600)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !315, file: !225, line: 302, baseType: !284, offset: 1792)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !315, file: !225, line: 303, baseType: !284, offset: 1792)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !315, file: !225, line: 305, baseType: !3896, size: 352, offset: 1792)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !315, file: !225, line: 305, baseType: !3896, size: 352, offset: 2144)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !315, file: !225, line: 306, baseType: !4023, size: 64, offset: 2496)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !315, file: !225, line: 307, baseType: !4126, size: 512, offset: 2560)
!4126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 512, elements: !377)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !315, file: !225, line: 308, baseType: !1571, size: 64, offset: 3072)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !315, file: !225, line: 313, baseType: !1571, size: 64, offset: 3136)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !315, file: !225, line: 314, baseType: !193, size: 64, offset: 3200)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !315, file: !225, line: 315, baseType: !215, size: 32, offset: 3264)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !315, file: !225, line: 316, baseType: !4012, size: 64, offset: 3296)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !315, file: !225, line: 317, baseType: !193, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !315, file: !225, line: 318, baseType: !193, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !315, file: !225, line: 319, baseType: !193, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !315, file: !225, line: 320, baseType: !215, size: 32, offset: 3456)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !315, file: !225, line: 321, baseType: !193, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !315, file: !225, line: 322, baseType: !193, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !315, file: !225, line: 323, baseType: !193, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !315, file: !225, line: 324, baseType: !7, size: 32, offset: 3584)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !315, file: !225, line: 325, baseType: !215, size: 32, offset: 3616)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !315, file: !225, line: 327, baseType: !314, size: 64, offset: 3648)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !315, file: !225, line: 328, baseType: !3044, size: 64, offset: 3712)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !315, file: !225, line: 329, baseType: !1581, size: 128, offset: 3776)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !315, file: !225, line: 330, baseType: !1581, size: 128, offset: 3904)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !315, file: !225, line: 331, baseType: !254, size: 256, offset: 4032)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !315, file: !225, line: 332, baseType: !216, size: 64, offset: 4288)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !315, file: !225, line: 333, baseType: !216, size: 64, offset: 4352)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !315, file: !225, line: 334, baseType: !284, offset: 4416)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !315, file: !225, line: 335, baseType: !267, size: 128, offset: 4416)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !315, file: !225, line: 339, baseType: !215, size: 32, offset: 4544)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !315, file: !225, line: 340, baseType: !4083, size: 64, offset: 4608)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !315, file: !225, line: 341, baseType: !215, size: 32, offset: 4672)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !315, file: !225, line: 343, baseType: !254, size: 256, offset: 4736)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !315, file: !225, line: 344, baseType: !3922, size: 64, offset: 4992)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !224, file: !225, line: 233, baseType: !314, size: 64, offset: 1088)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !224, file: !225, line: 234, baseType: !4157, size: 64, offset: 1152)
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4159)
!4159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !225, line: 205, size: 320, elements: !4160)
!4160 = !{!4161, !4165, !4169, !4173, !4177}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !4159, file: !225, line: 207, baseType: !4162, size: 64)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!215, !3922}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !4159, file: !225, line: 209, baseType: !4166, size: 64, offset: 64)
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4167, size: 64)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{null, !3922, !215}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4159, file: !225, line: 213, baseType: !4170, size: 64, offset: 128)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4171, size: 64)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{null, !3922}
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4159, file: !225, line: 218, baseType: !4174, size: 64, offset: 192)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!215, !3922, !314}
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !4159, file: !225, line: 220, baseType: !4170, size: 64, offset: 256)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !224, file: !225, line: 235, baseType: !4179, size: 64, offset: 1216)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4181)
!4181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !225, line: 223, size: 128, elements: !4182)
!4182 = !{!4183, !4187}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4181, file: !225, line: 224, baseType: !4184, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4185, size: 64)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!215, !3922, !513, !513, !417}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4181, file: !225, line: 225, baseType: !4170, size: 64, offset: 64)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !224, file: !225, line: 236, baseType: !284, offset: 1280)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !224, file: !225, line: 237, baseType: !215, size: 32, offset: 1280)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !224, file: !225, line: 238, baseType: !215, size: 32, offset: 1312)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !224, file: !225, line: 239, baseType: !1581, size: 128, offset: 1344)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !224, file: !225, line: 240, baseType: !1581, size: 128, offset: 1472)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !224, file: !225, line: 241, baseType: !193, size: 64, offset: 1600)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !224, file: !225, line: 242, baseType: !193, size: 64, offset: 1664)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !224, file: !225, line: 243, baseType: !515, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !224, file: !225, line: 244, baseType: !515, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !224, file: !225, line: 245, baseType: !279, size: 192, offset: 1792)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !224, file: !225, line: 246, baseType: !279, size: 192, offset: 1984)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !224, file: !225, line: 247, baseType: !4083, size: 64, offset: 2176)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !224, file: !225, line: 248, baseType: !7, size: 32, offset: 2240)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !224, file: !225, line: 249, baseType: !7, size: 32, offset: 2272)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !224, file: !225, line: 250, baseType: !215, size: 32, offset: 2304)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !224, file: !225, line: 253, baseType: !319, size: 32, offset: 2336)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !224, file: !225, line: 254, baseType: !216, size: 64, offset: 2368)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !221, file: !94, line: 97, baseType: !4206, size: 160, offset: 2432)
!4206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vc_state", file: !94, line: 46, size: 160, elements: !4207)
!4207 = !{!4208, !4209, !4210, !4211, !4213, !4214, !4215, !4216, !4217, !4218}
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4206, file: !94, line: 47, baseType: !7, size: 32)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4206, file: !94, line: 47, baseType: !7, size: 32, offset: 32)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !4206, file: !94, line: 49, baseType: !515, size: 8, offset: 64)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "Gx_charset", scope: !4206, file: !94, line: 51, baseType: !4212, size: 16, offset: 72)
!4212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 16, elements: !1669)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "charset", scope: !4206, file: !94, line: 52, baseType: !7, size: 1, offset: 88, flags: DIFlagBitField, extraData: i64 88)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !4206, file: !94, line: 55, baseType: !93, size: 32, offset: 96)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "italic", scope: !4206, file: !94, line: 56, baseType: !578, size: 8, offset: 128)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "underline", scope: !4206, file: !94, line: 57, baseType: !578, size: 8, offset: 136)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "blink", scope: !4206, file: !94, line: 58, baseType: !578, size: 8, offset: 144)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !4206, file: !94, line: 59, baseType: !578, size: 8, offset: 152)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "saved_state", scope: !221, file: !94, line: 97, baseType: !4206, size: 160, offset: 2592)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "vc_num", scope: !221, file: !94, line: 99, baseType: !192, size: 16, offset: 2752)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "vc_cols", scope: !221, file: !94, line: 100, baseType: !7, size: 32, offset: 2784)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "vc_rows", scope: !221, file: !94, line: 101, baseType: !7, size: 32, offset: 2816)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "vc_size_row", scope: !221, file: !94, line: 102, baseType: !7, size: 32, offset: 2848)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "vc_scan_lines", scope: !221, file: !94, line: 103, baseType: !7, size: 32, offset: 2880)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "vc_origin", scope: !221, file: !94, line: 104, baseType: !193, size: 64, offset: 2944)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "vc_scr_end", scope: !221, file: !94, line: 105, baseType: !193, size: 64, offset: 3008)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "vc_visible_origin", scope: !221, file: !94, line: 106, baseType: !193, size: 64, offset: 3072)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "vc_top", scope: !221, file: !94, line: 107, baseType: !7, size: 32, offset: 3136)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "vc_bottom", scope: !221, file: !94, line: 107, baseType: !7, size: 32, offset: 3168)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "vc_sw", scope: !221, file: !94, line: 108, baseType: !4231, size: 64, offset: 3200)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!4232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4233)
!4233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "consw", file: !101, line: 44, size: 1728, elements: !4234)
!4234 = !{!4235, !4236, !4240, !4244, !4248, !4252, !4256, !4262, !4263, !4267, !4271, !4275, !4287, !4291, !4295, !4299, !4303, !4307, !4308, !4309, !4310, !4314, !4318, !4324, !4328, !4329, !4330}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4233, file: !101, line: 45, baseType: !719, size: 64)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "con_startup", scope: !4233, file: !101, line: 46, baseType: !4237, size: 64, offset: 64)
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 64)
!4238 = !DISubroutineType(types: !4239)
!4239 = !{!336}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "con_init", scope: !4233, file: !101, line: 47, baseType: !4241, size: 64, offset: 128)
!4241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4242, size: 64)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{null, !220, !215}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "con_deinit", scope: !4233, file: !101, line: 48, baseType: !4245, size: 64, offset: 192)
!4245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4246, size: 64)
!4246 = !DISubroutineType(types: !4247)
!4247 = !{null, !220}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "con_clear", scope: !4233, file: !101, line: 49, baseType: !4249, size: 64, offset: 256)
!4249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4250, size: 64)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{null, !220, !215, !215, !215, !215}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "con_putc", scope: !4233, file: !101, line: 51, baseType: !4253, size: 64, offset: 320)
!4253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 64)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{null, !220, !215, !215, !215}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "con_putcs", scope: !4233, file: !101, line: 52, baseType: !4257, size: 64, offset: 384)
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4258, size: 64)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{null, !220, !4260, !215, !215, !215}
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !192)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "con_cursor", scope: !4233, file: !101, line: 54, baseType: !4241, size: 64, offset: 448)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "con_scroll", scope: !4233, file: !101, line: 55, baseType: !4264, size: 64, offset: 512)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DISubroutineType(types: !4266)
!4266 = !{!578, !220, !7, !7, !100, !7}
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "con_switch", scope: !4233, file: !101, line: 58, baseType: !4268, size: 64, offset: 576)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!215, !220}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "con_blank", scope: !4233, file: !101, line: 59, baseType: !4272, size: 64, offset: 640)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!215, !220, !215, !215}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "con_font_set", scope: !4233, file: !101, line: 60, baseType: !4276, size: 64, offset: 704)
!4276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4277, size: 64)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!215, !220, !4279, !7}
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 64)
!4280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_font", file: !4281, line: 167, size: 192, elements: !4282)
!4281 = !DIFile(filename: "./include/uapi/linux/kd.h", directory: "/home/lizy2001/genbc/linux")
!4282 = !{!4283, !4284, !4285, !4286}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4280, file: !4281, line: 168, baseType: !7, size: 32)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4280, file: !4281, line: 168, baseType: !7, size: 32, offset: 32)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "charcount", scope: !4280, file: !4281, line: 169, baseType: !7, size: 32, offset: 64)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4280, file: !4281, line: 170, baseType: !4083, size: 64, offset: 128)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "con_font_get", scope: !4233, file: !101, line: 62, baseType: !4288, size: 64, offset: 768)
!4288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4289, size: 64)
!4289 = !DISubroutineType(types: !4290)
!4290 = !{!215, !220, !4279}
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "con_font_default", scope: !4233, file: !101, line: 63, baseType: !4292, size: 64, offset: 832)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!215, !220, !4279, !202}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "con_font_copy", scope: !4233, file: !101, line: 65, baseType: !4296, size: 64, offset: 896)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{!215, !220, !215}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "con_resize", scope: !4233, file: !101, line: 66, baseType: !4300, size: 64, offset: 960)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!215, !220, !7, !7, !7}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "con_set_palette", scope: !4233, file: !101, line: 68, baseType: !4304, size: 64, offset: 1024)
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4305, size: 64)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{null, !220, !513}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "con_scrolldelta", scope: !4233, file: !101, line: 70, baseType: !4241, size: 64, offset: 1088)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "con_set_origin", scope: !4233, file: !101, line: 71, baseType: !4268, size: 64, offset: 1152)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "con_save_screen", scope: !4233, file: !101, line: 72, baseType: !4245, size: 64, offset: 1216)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "con_build_attr", scope: !4233, file: !101, line: 73, baseType: !4311, size: 64, offset: 1280)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{!1454, !220, !1454, !93, !578, !578, !578, !578}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "con_invert_region", scope: !4233, file: !101, line: 76, baseType: !4315, size: 64, offset: 1344)
!4315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4316, size: 64)
!4316 = !DISubroutineType(types: !4317)
!4317 = !{null, !220, !194, !215}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "con_screen_pos", scope: !4233, file: !101, line: 77, baseType: !4319, size: 64, offset: 1408)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!194, !4322, !215}
!4322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4323, size: 64)
!4323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "con_getxy", scope: !4233, file: !101, line: 78, baseType: !4325, size: 64, offset: 1472)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!193, !220, !193, !794, !794}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "con_flush_scrollback", scope: !4233, file: !101, line: 83, baseType: !4245, size: 64, offset: 1536)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "con_debug_enter", scope: !4233, file: !101, line: 89, baseType: !4268, size: 64, offset: 1600)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "con_debug_leave", scope: !4233, file: !101, line: 93, baseType: !4268, size: 64, offset: 1664)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "vc_screenbuf", scope: !221, file: !94, line: 109, baseType: !191, size: 64, offset: 3264)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "vc_screenbuf_size", scope: !221, file: !94, line: 110, baseType: !7, size: 32, offset: 3328)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "vc_mode", scope: !221, file: !94, line: 111, baseType: !515, size: 8, offset: 3360)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "vc_attr", scope: !221, file: !94, line: 113, baseType: !515, size: 8, offset: 3368)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "vc_def_color", scope: !221, file: !94, line: 114, baseType: !515, size: 8, offset: 3376)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "vc_ulcolor", scope: !221, file: !94, line: 115, baseType: !515, size: 8, offset: 3384)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "vc_itcolor", scope: !221, file: !94, line: 116, baseType: !515, size: 8, offset: 3392)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "vc_halfcolor", scope: !221, file: !94, line: 117, baseType: !515, size: 8, offset: 3400)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "vc_cursor_type", scope: !221, file: !94, line: 119, baseType: !7, size: 32, offset: 3424)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "vc_complement_mask", scope: !221, file: !94, line: 120, baseType: !192, size: 16, offset: 3456)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "vc_s_complement_mask", scope: !221, file: !94, line: 121, baseType: !192, size: 16, offset: 3472)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "vc_pos", scope: !221, file: !94, line: 122, baseType: !193, size: 64, offset: 3520)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "vc_hi_font_mask", scope: !221, file: !94, line: 124, baseType: !192, size: 16, offset: 3584)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "vc_font", scope: !221, file: !94, line: 125, baseType: !4280, size: 192, offset: 3648)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "vc_video_erase_char", scope: !221, file: !94, line: 126, baseType: !192, size: 16, offset: 3840)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "vc_state", scope: !221, file: !94, line: 128, baseType: !7, size: 32, offset: 3872)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "vc_npar", scope: !221, file: !94, line: 129, baseType: !7, size: 32, offset: 3904)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "vc_par", scope: !221, file: !94, line: 129, baseType: !4349, size: 512, offset: 3936)
!4349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 512, elements: !1835)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "vt_mode", scope: !221, file: !94, line: 131, baseType: !4351, size: 64, offset: 4448)
!4351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vt_mode", file: !4352, line: 19, size: 64, elements: !4353)
!4352 = !DIFile(filename: "./include/uapi/linux/vt.h", directory: "/home/lizy2001/genbc/linux")
!4353 = !{!4354, !4355, !4356, !4357, !4358}
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4351, file: !4352, line: 20, baseType: !201, size: 8)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "waitv", scope: !4351, file: !4352, line: 21, baseType: !201, size: 8, offset: 8)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "relsig", scope: !4351, file: !4352, line: 22, baseType: !1312, size: 16, offset: 16)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "acqsig", scope: !4351, file: !4352, line: 23, baseType: !1312, size: 16, offset: 32)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "frsig", scope: !4351, file: !4352, line: 24, baseType: !1312, size: 16, offset: 48)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "vt_pid", scope: !221, file: !94, line: 132, baseType: !1571, size: 64, offset: 4544)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "vt_newvt", scope: !221, file: !94, line: 133, baseType: !215, size: 32, offset: 4608)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "paste_wait", scope: !221, file: !94, line: 134, baseType: !1581, size: 128, offset: 4672)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "vc_disp_ctrl", scope: !221, file: !94, line: 136, baseType: !7, size: 1, offset: 4800, flags: DIFlagBitField, extraData: i64 4800)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "vc_toggle_meta", scope: !221, file: !94, line: 137, baseType: !7, size: 1, offset: 4801, flags: DIFlagBitField, extraData: i64 4800)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decscnm", scope: !221, file: !94, line: 138, baseType: !7, size: 1, offset: 4802, flags: DIFlagBitField, extraData: i64 4800)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decom", scope: !221, file: !94, line: 139, baseType: !7, size: 1, offset: 4803, flags: DIFlagBitField, extraData: i64 4800)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decawm", scope: !221, file: !94, line: 140, baseType: !7, size: 1, offset: 4804, flags: DIFlagBitField, extraData: i64 4800)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "vc_deccm", scope: !221, file: !94, line: 141, baseType: !7, size: 1, offset: 4805, flags: DIFlagBitField, extraData: i64 4800)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decim", scope: !221, file: !94, line: 142, baseType: !7, size: 1, offset: 4806, flags: DIFlagBitField, extraData: i64 4800)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "vc_priv", scope: !221, file: !94, line: 144, baseType: !7, size: 3, offset: 4807, flags: DIFlagBitField, extraData: i64 4800)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "vc_need_wrap", scope: !221, file: !94, line: 145, baseType: !7, size: 1, offset: 4810, flags: DIFlagBitField, extraData: i64 4800)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "vc_can_do_color", scope: !221, file: !94, line: 146, baseType: !7, size: 1, offset: 4811, flags: DIFlagBitField, extraData: i64 4800)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "vc_report_mouse", scope: !221, file: !94, line: 147, baseType: !7, size: 2, offset: 4812, flags: DIFlagBitField, extraData: i64 4800)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "vc_utf", scope: !221, file: !94, line: 148, baseType: !515, size: 1, offset: 4814, flags: DIFlagBitField, extraData: i64 4800)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "vc_utf_count", scope: !221, file: !94, line: 149, baseType: !515, size: 8, offset: 4816)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "vc_utf_char", scope: !221, file: !94, line: 150, baseType: !215, size: 32, offset: 4832)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "vc_tab_stop", scope: !221, file: !94, line: 151, baseType: !4377, size: 256, offset: 4864)
!4377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 256, elements: !1268)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "vc_palette", scope: !221, file: !94, line: 152, baseType: !4379, size: 384, offset: 5120)
!4379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 384, elements: !4380)
!4380 = !{!4381}
!4381 = !DISubrange(count: 48)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "vc_translate", scope: !221, file: !94, line: 153, baseType: !191, size: 64, offset: 5504)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "vc_resize_user", scope: !221, file: !94, line: 154, baseType: !7, size: 32, offset: 5568)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "vc_bell_pitch", scope: !221, file: !94, line: 155, baseType: !7, size: 32, offset: 5600)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "vc_bell_duration", scope: !221, file: !94, line: 156, baseType: !7, size: 32, offset: 5632)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "vc_cur_blink_ms", scope: !221, file: !94, line: 157, baseType: !192, size: 16, offset: 5664)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "vc_display_fg", scope: !221, file: !94, line: 158, baseType: !4388, size: 64, offset: 5696)
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "vc_uni_pagedir", scope: !221, file: !94, line: 159, baseType: !4390, size: 64, offset: 5760)
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4391, size: 64)
!4391 = !DICompositeType(tag: DW_TAG_structure_type, name: "uni_pagedir", file: !94, line: 20, flags: DIFlagFwdDecl)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "vc_uni_pagedir_loc", scope: !221, file: !94, line: 160, baseType: !4393, size: 64, offset: 5824)
!4393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "vc_uni_screen", scope: !221, file: !94, line: 161, baseType: !4395, size: 64, offset: 5888)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uni_screen", file: !3, line: 334, elements: !4397)
!4397 = !{!4398}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !4396, file: !3, line: 335, baseType: !4399)
!4399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4400, elements: !1823)
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4401, size: 64)
!4401 = !DIDerivedType(tag: DW_TAG_typedef, name: "char32_t", file: !3, line: 328, baseType: !645)
!4402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4403, size: 64)
!4403 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !270)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !201)
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_typedef, name: "ushort", file: !200, line: 86, baseType: !192)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 64)
!4411 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !505)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!4413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4414, size: 64)
!4414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "interval", file: !3, line: 2534, size: 64, elements: !4415)
!4415 = !{!4416, !4417}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4414, file: !3, line: 2535, baseType: !645, size: 32)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4414, file: !3, line: 2536, baseType: !645, size: 32, offset: 32)
!4418 = !{!0, !4419, !4471, !4476, !4478, !4480, !4485, !4487, !4492, !4494, !4496, !4499, !4501, !4503, !4505, !4508, !4511, !4513, !4515, !4517, !4519, !4521, !4523, !4525, !4527, !4530, !4532, !4537, !4539, !4544, !4546, !4551, !4553, !4555, !4567, !4569, !4578, !4581, !4583, !4585, !4587, !4589, !4591, !4593, !4595, !4597, !4599, !4601, !4603, !4605, !4607, !4609, !4611, !4613, !4615, !4617, !4619, !4622, !4627, !4632, !4634, !4639, !4656, !4658, !4660, !4662, !4664, !4666, !4668, !4670, !4672, !4674, !4676, !4681, !4683, !4688, !4690, !4692, !4694, !4699, !4701, !4738, !4741, !4744, !4746, !4749, !4763, !4765, !4768, !4775, !4780, !4782, !4786, !4790, !4797, !4799, !4801, !4803, !4805, !4808, !4810, !4812, !4817, !4819}
!4419 = !DIGlobalVariableExpression(var: !4420, expr: !DIExpression())
!4420 = distinct !DIGlobalVariable(name: "__param_default_utf8", scope: !2, file: !3, line: 162, type: !4421, isLocal: true, isDefinition: true, align: 64)
!4421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4422)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4423, line: 69, size: 320, elements: !4424)
!4423 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4424 = !{!4425, !4426, !4427, !4443, !4445, !4449, !4450}
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4422, file: !4423, line: 70, baseType: !336, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4422, file: !4423, line: 71, baseType: !719, size: 64, offset: 64)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4422, file: !4423, line: 72, baseType: !4428, size: 64, offset: 128)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4430)
!4430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4423, line: 47, size: 256, elements: !4431)
!4431 = !{!4432, !4433, !4438, !4442}
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4430, file: !4423, line: 49, baseType: !7, size: 32)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4430, file: !4423, line: 51, baseType: !4434, size: 64, offset: 64)
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 64)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!215, !336, !4437}
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 64)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4430, file: !4423, line: 53, baseType: !4439, size: 64, offset: 128)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{!215, !202, !4437}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4430, file: !4423, line: 55, baseType: !556, size: 64, offset: 192)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4422, file: !4423, line: 73, baseType: !4444, size: 16, offset: 192)
!4444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4422, file: !4423, line: 74, baseType: !4446, size: 8, offset: 208)
!4446 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !196, line: 16, baseType: !4447)
!4447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !198, line: 20, baseType: !4448)
!4448 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4422, file: !4423, line: 75, baseType: !1454, size: 8, offset: 216)
!4450 = !DIDerivedType(tag: DW_TAG_member, scope: !4422, file: !4423, line: 76, baseType: !4451, size: 64, offset: 256)
!4451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4422, file: !4423, line: 76, size: 64, elements: !4452)
!4452 = !{!4453, !4454, !4461}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4451, file: !4423, line: 77, baseType: !216, size: 64)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4451, file: !4423, line: 78, baseType: !4455, size: 64)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4457)
!4457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4423, line: 86, size: 128, elements: !4458)
!4458 = !{!4459, !4460}
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4457, file: !4423, line: 87, baseType: !7, size: 32)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4457, file: !4423, line: 88, baseType: !202, size: 64, offset: 64)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4451, file: !4423, line: 79, baseType: !4462, size: 64)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4464)
!4464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4423, line: 92, size: 256, elements: !4465)
!4465 = !{!4466, !4467, !4468, !4469, !4470}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4464, file: !4423, line: 94, baseType: !7, size: 32)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4464, file: !4423, line: 95, baseType: !7, size: 32, offset: 32)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4464, file: !4423, line: 96, baseType: !2769, size: 64, offset: 64)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4464, file: !4423, line: 97, baseType: !4428, size: 64, offset: 128)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4464, file: !4423, line: 98, baseType: !216, size: 64, offset: 192)
!4471 = !DIGlobalVariableExpression(var: !4472, expr: !DIExpression())
!4472 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_default_utf8type229", scope: !2, file: !3, line: 162, type: !4473, isLocal: true, isDefinition: true, align: 8)
!4473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 232, elements: !4474)
!4474 = !{!4475}
!4475 = !DISubrange(count: 29)
!4476 = !DIGlobalVariableExpression(var: !4477, expr: !DIExpression())
!4477 = distinct !DIGlobalVariable(name: "global_cursor_default", scope: !2, file: !3, line: 163, type: !215, isLocal: false, isDefinition: true)
!4478 = !DIGlobalVariableExpression(var: !4479, expr: !DIExpression())
!4479 = distinct !DIGlobalVariable(name: "__param_global_cursor_default", scope: !2, file: !3, line: 164, type: !4421, isLocal: true, isDefinition: true, align: 64)
!4480 = !DIGlobalVariableExpression(var: !4481, expr: !DIExpression())
!4481 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_global_cursor_defaulttype230", scope: !2, file: !3, line: 164, type: !4482, isLocal: true, isDefinition: true, align: 8)
!4482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 304, elements: !4483)
!4483 = !{!4484}
!4484 = !DISubrange(count: 38)
!4485 = !DIGlobalVariableExpression(var: !4486, expr: !DIExpression())
!4486 = distinct !DIGlobalVariable(name: "__param_cur_default", scope: !2, file: !3, line: 167, type: !4421, isLocal: true, isDefinition: true, align: 64)
!4487 = !DIGlobalVariableExpression(var: !4488, expr: !DIExpression())
!4488 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_cur_defaulttype231", scope: !2, file: !3, line: 167, type: !4489, isLocal: true, isDefinition: true, align: 8)
!4489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 224, elements: !4490)
!4490 = !{!4491}
!4491 = !DISubrange(count: 28)
!4492 = !DIGlobalVariableExpression(var: !4493, expr: !DIExpression())
!4493 = distinct !DIGlobalVariable(name: "__param_consoleblank", scope: !2, file: !3, line: 181, type: !4421, isLocal: true, isDefinition: true, align: 64)
!4494 = !DIGlobalVariableExpression(var: !4495, expr: !DIExpression())
!4495 = distinct !DIGlobalVariable(name: "want_console", scope: !2, file: !3, line: 194, type: !215, isLocal: false, isDefinition: true)
!4496 = !DIGlobalVariableExpression(var: !4497, expr: !DIExpression())
!4497 = distinct !DIGlobalVariable(name: "old_offset", scope: !4498, file: !3, line: 807, type: !215, isLocal: true, isDefinition: true)
!4498 = distinct !DISubprogram(name: "complement_pos", scope: !3, file: !3, line: 805, type: !4242, scopeLine: 806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4499 = !DIGlobalVariableExpression(var: !4500, expr: !DIExpression())
!4500 = distinct !DIGlobalVariable(name: "old", scope: !4498, file: !3, line: 808, type: !192, isLocal: true, isDefinition: true)
!4501 = !DIGlobalVariableExpression(var: !4502, expr: !DIExpression())
!4502 = distinct !DIGlobalVariable(name: "oldx", scope: !4498, file: !3, line: 809, type: !192, isLocal: true, isDefinition: true)
!4503 = !DIGlobalVariableExpression(var: !4504, expr: !DIExpression())
!4504 = distinct !DIGlobalVariable(name: "oldy", scope: !4498, file: !3, line: 809, type: !192, isLocal: true, isDefinition: true)
!4505 = !DIGlobalVariableExpression(var: !4506, expr: !DIExpression())
!4506 = distinct !DIGlobalVariable(name: "color_table", scope: !2, file: !3, line: 1408, type: !4507, isLocal: false, isDefinition: true)
!4507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 128, elements: !1835)
!4508 = !DIGlobalVariableExpression(var: !4509, expr: !DIExpression())
!4509 = distinct !DIGlobalVariable(name: "default_red", scope: !2, file: !3, line: 1412, type: !4510, isLocal: false, isDefinition: true)
!4510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !515, size: 128, elements: !1835)
!4511 = !DIGlobalVariableExpression(var: !4512, expr: !DIExpression())
!4512 = distinct !DIGlobalVariable(name: "__param_default_red", scope: !2, file: !3, line: 1416, type: !4421, isLocal: true, isDefinition: true, align: 64)
!4513 = !DIGlobalVariableExpression(var: !4514, expr: !DIExpression())
!4514 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_default_redtype252", scope: !2, file: !3, line: 1416, type: !4482, isLocal: true, isDefinition: true, align: 8)
!4515 = !DIGlobalVariableExpression(var: !4516, expr: !DIExpression())
!4516 = distinct !DIGlobalVariable(name: "default_grn", scope: !2, file: !3, line: 1418, type: !4510, isLocal: false, isDefinition: true)
!4517 = !DIGlobalVariableExpression(var: !4518, expr: !DIExpression())
!4518 = distinct !DIGlobalVariable(name: "__param_default_grn", scope: !2, file: !3, line: 1422, type: !4421, isLocal: true, isDefinition: true, align: 64)
!4519 = !DIGlobalVariableExpression(var: !4520, expr: !DIExpression())
!4520 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_default_grntype253", scope: !2, file: !3, line: 1422, type: !4482, isLocal: true, isDefinition: true, align: 8)
!4521 = !DIGlobalVariableExpression(var: !4522, expr: !DIExpression())
!4522 = distinct !DIGlobalVariable(name: "default_blu", scope: !2, file: !3, line: 1424, type: !4510, isLocal: false, isDefinition: true)
!4523 = !DIGlobalVariableExpression(var: !4524, expr: !DIExpression())
!4524 = distinct !DIGlobalVariable(name: "__param_default_blu", scope: !2, file: !3, line: 1428, type: !4421, isLocal: true, isDefinition: true, align: 64)
!4525 = !DIGlobalVariableExpression(var: !4526, expr: !DIExpression())
!4526 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_default_blutype254", scope: !2, file: !3, line: 1428, type: !4482, isLocal: true, isDefinition: true, align: 8)
!4527 = !DIGlobalVariableExpression(var: !4528, expr: !DIExpression())
!4528 = distinct !DIGlobalVariable(name: "kmsg_con", scope: !4529, file: !3, line: 3024, type: !215, isLocal: true, isDefinition: true)
!4529 = distinct !DISubprogram(name: "vt_kmsg_redirect", scope: !3, file: !3, line: 3022, type: !3137, scopeLine: 3023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4530 = !DIGlobalVariableExpression(var: !4531, expr: !DIExpression())
!4531 = distinct !DIGlobalVariable(name: "__param_color", scope: !2, file: !3, line: 3413, type: !4421, isLocal: true, isDefinition: true, align: 64)
!4532 = !DIGlobalVariableExpression(var: !4533, expr: !DIExpression())
!4533 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_colortype268", scope: !2, file: !3, line: 3413, type: !4534, isLocal: true, isDefinition: true, align: 8)
!4534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 176, elements: !4535)
!4535 = !{!4536}
!4536 = !DISubrange(count: 22)
!4537 = !DIGlobalVariableExpression(var: !4538, expr: !DIExpression())
!4538 = distinct !DIGlobalVariable(name: "__param_italic", scope: !2, file: !3, line: 3414, type: !4421, isLocal: true, isDefinition: true, align: 64)
!4539 = !DIGlobalVariableExpression(var: !4540, expr: !DIExpression())
!4540 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_italictype269", scope: !2, file: !3, line: 3414, type: !4541, isLocal: true, isDefinition: true, align: 8)
!4541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 184, elements: !4542)
!4542 = !{!4543}
!4543 = !DISubrange(count: 23)
!4544 = !DIGlobalVariableExpression(var: !4545, expr: !DIExpression())
!4545 = distinct !DIGlobalVariable(name: "__param_underline", scope: !2, file: !3, line: 3415, type: !4421, isLocal: true, isDefinition: true, align: 64)
!4546 = !DIGlobalVariableExpression(var: !4547, expr: !DIExpression())
!4547 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_underlinetype270", scope: !2, file: !3, line: 3415, type: !4548, isLocal: true, isDefinition: true, align: 8)
!4548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 208, elements: !4549)
!4549 = !{!4550}
!4550 = !DISubrange(count: 26)
!4551 = !DIGlobalVariableExpression(var: !4552, expr: !DIExpression())
!4552 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_con_init271", scope: !2, file: !3, line: 3516, type: !216, isLocal: true, isDefinition: true)
!4553 = !DIGlobalVariableExpression(var: !4554, expr: !DIExpression())
!4554 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_vtconsole_class_init287", scope: !2, file: !3, line: 4294, type: !216, isLocal: true, isDefinition: true)
!4555 = !DIGlobalVariableExpression(var: !4556, expr: !DIExpression())
!4556 = distinct !DIGlobalVariable(name: "registered_con_driver", scope: !2, file: !3, line: 127, type: !4557, isLocal: true, isDefinition: true)
!4557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4558, size: 5120, elements: !1835)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "con_driver", file: !3, line: 117, size: 320, elements: !4559)
!4559 = !{!4560, !4561, !4562, !4563, !4564, !4565, !4566}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "con", scope: !4558, file: !3, line: 118, baseType: !4231, size: 64)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4558, file: !3, line: 119, baseType: !336, size: 64, offset: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4558, file: !3, line: 120, baseType: !328, size: 64, offset: 128)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4558, file: !3, line: 121, baseType: !215, size: 32, offset: 192)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4558, file: !3, line: 122, baseType: !215, size: 32, offset: 224)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4558, file: !3, line: 123, baseType: !215, size: 32, offset: 256)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4558, file: !3, line: 124, baseType: !215, size: 32, offset: 288)
!4567 = !DIGlobalVariableExpression(var: !4568, expr: !DIExpression())
!4568 = distinct !DIGlobalVariable(name: "conswitchp", scope: !2, file: !3, line: 128, type: !4231, isLocal: false, isDefinition: true)
!4569 = !DIGlobalVariableExpression(var: !4570, expr: !DIExpression())
!4570 = distinct !DIGlobalVariable(name: "vc_cons", scope: !2, file: !3, line: 137, type: !4571, isLocal: false, isDefinition: true)
!4571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4572, size: 20160, elements: !4576)
!4572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vc", file: !94, line: 165, size: 320, elements: !4573)
!4573 = !{!4574, !4575}
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4572, file: !94, line: 166, baseType: !220, size: 64)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !4572, file: !94, line: 167, baseType: !254, size: 256, offset: 64)
!4576 = !{!4577}
!4577 = !DISubrange(count: 63)
!4578 = !DIGlobalVariableExpression(var: !4579, expr: !DIExpression())
!4579 = distinct !DIGlobalVariable(name: "con_driver_map", scope: !2, file: !3, line: 140, type: !4580, isLocal: true, isDefinition: true)
!4580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4231, size: 4032, elements: !4576)
!4581 = !DIGlobalVariableExpression(var: !4582, expr: !DIExpression())
!4582 = distinct !DIGlobalVariable(name: "ignore_poke", scope: !2, file: !3, line: 173, type: !215, isLocal: true, isDefinition: true)
!4583 = !DIGlobalVariableExpression(var: !4584, expr: !DIExpression())
!4584 = distinct !DIGlobalVariable(name: "do_poke_blanked_console", scope: !2, file: !3, line: 175, type: !215, isLocal: false, isDefinition: true)
!4585 = !DIGlobalVariableExpression(var: !4586, expr: !DIExpression())
!4586 = distinct !DIGlobalVariable(name: "console_blanked", scope: !2, file: !3, line: 176, type: !215, isLocal: false, isDefinition: true)
!4587 = !DIGlobalVariableExpression(var: !4588, expr: !DIExpression())
!4588 = distinct !DIGlobalVariable(name: "vesa_blank_mode", scope: !2, file: !3, line: 178, type: !215, isLocal: true, isDefinition: true)
!4589 = !DIGlobalVariableExpression(var: !4590, expr: !DIExpression())
!4590 = distinct !DIGlobalVariable(name: "vesa_off_interval", scope: !2, file: !3, line: 179, type: !215, isLocal: true, isDefinition: true)
!4591 = !DIGlobalVariableExpression(var: !4592, expr: !DIExpression())
!4592 = distinct !DIGlobalVariable(name: "blankinterval", scope: !2, file: !3, line: 180, type: !215, isLocal: true, isDefinition: true)
!4593 = !DIGlobalVariableExpression(var: !4594, expr: !DIExpression())
!4594 = distinct !DIGlobalVariable(name: "fg_console", scope: !2, file: !3, line: 192, type: !215, isLocal: false, isDefinition: true)
!4595 = !DIGlobalVariableExpression(var: !4596, expr: !DIExpression())
!4596 = distinct !DIGlobalVariable(name: "last_console", scope: !2, file: !3, line: 193, type: !215, isLocal: false, isDefinition: true)
!4597 = !DIGlobalVariableExpression(var: !4598, expr: !DIExpression())
!4598 = distinct !DIGlobalVariable(name: "saved_fg_console", scope: !2, file: !3, line: 195, type: !215, isLocal: true, isDefinition: true)
!4599 = !DIGlobalVariableExpression(var: !4600, expr: !DIExpression())
!4600 = distinct !DIGlobalVariable(name: "saved_last_console", scope: !2, file: !3, line: 196, type: !215, isLocal: true, isDefinition: true)
!4601 = !DIGlobalVariableExpression(var: !4602, expr: !DIExpression())
!4602 = distinct !DIGlobalVariable(name: "saved_want_console", scope: !2, file: !3, line: 197, type: !215, isLocal: true, isDefinition: true)
!4603 = !DIGlobalVariableExpression(var: !4604, expr: !DIExpression())
!4604 = distinct !DIGlobalVariable(name: "saved_vc_mode", scope: !2, file: !3, line: 198, type: !215, isLocal: true, isDefinition: true)
!4605 = !DIGlobalVariableExpression(var: !4606, expr: !DIExpression())
!4606 = distinct !DIGlobalVariable(name: "saved_console_blanked", scope: !2, file: !3, line: 199, type: !215, isLocal: true, isDefinition: true)
!4607 = !DIGlobalVariableExpression(var: !4608, expr: !DIExpression())
!4608 = distinct !DIGlobalVariable(name: "console_blank_hook", scope: !2, file: !3, line: 225, type: !3136, isLocal: false, isDefinition: true)
!4609 = !DIGlobalVariableExpression(var: !4610, expr: !DIExpression())
!4610 = distinct !DIGlobalVariable(name: "blank_state", scope: !2, file: !3, line: 228, type: !215, isLocal: true, isDefinition: true)
!4611 = !DIGlobalVariableExpression(var: !4612, expr: !DIExpression())
!4612 = distinct !DIGlobalVariable(name: "blank_timer_expired", scope: !2, file: !3, line: 229, type: !215, isLocal: true, isDefinition: true)
!4613 = !DIGlobalVariableExpression(var: !4614, expr: !DIExpression())
!4614 = distinct !DIGlobalVariable(name: "tty0dev", scope: !2, file: !3, line: 242, type: !328, isLocal: true, isDefinition: true)
!4615 = !DIGlobalVariableExpression(var: !4616, expr: !DIExpression())
!4616 = distinct !DIGlobalVariable(name: "console_driver", scope: !2, file: !3, line: 2997, type: !3878, isLocal: false, isDefinition: true)
!4617 = !DIGlobalVariableExpression(var: !4618, expr: !DIExpression())
!4618 = distinct !DIGlobalVariable(name: "vc0_cdev", scope: !2, file: !3, line: 3540, type: !3188, isLocal: true, isDefinition: true)
!4619 = !DIGlobalVariableExpression(var: !4620, expr: !DIExpression())
!4620 = distinct !DIGlobalVariable(name: "__param_str_default_utf8", scope: !2, file: !3, line: 162, type: !4621, isLocal: true, isDefinition: true)
!4621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 128, elements: !1835)
!4622 = !DIGlobalVariableExpression(var: !4623, expr: !DIExpression())
!4623 = distinct !DIGlobalVariable(name: "__param_str_global_cursor_default", scope: !2, file: !3, line: 164, type: !4624, isLocal: true, isDefinition: true)
!4624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 200, elements: !4625)
!4625 = !{!4626}
!4626 = !DISubrange(count: 25)
!4627 = !DIGlobalVariableExpression(var: !4628, expr: !DIExpression())
!4628 = distinct !DIGlobalVariable(name: "__param_str_cur_default", scope: !2, file: !3, line: 167, type: !4629, isLocal: true, isDefinition: true)
!4629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 120, elements: !4630)
!4630 = !{!4631}
!4631 = !DISubrange(count: 15)
!4632 = !DIGlobalVariableExpression(var: !4633, expr: !DIExpression())
!4633 = distinct !DIGlobalVariable(name: "cur_default", scope: !2, file: !3, line: 166, type: !215, isLocal: true, isDefinition: true)
!4634 = !DIGlobalVariableExpression(var: !4635, expr: !DIExpression())
!4635 = distinct !DIGlobalVariable(name: "__param_str_consoleblank", scope: !2, file: !3, line: 181, type: !4636, isLocal: true, isDefinition: true)
!4636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 104, elements: !4637)
!4637 = !{!4638}
!4638 = !DISubrange(count: 13)
!4639 = !DIGlobalVariableExpression(var: !4640, expr: !DIExpression())
!4640 = distinct !DIGlobalVariable(name: "vt_notifier_list", scope: !2, file: !3, line: 247, type: !4641, isLocal: true, isDefinition: true)
!4641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "atomic_notifier_head", file: !4642, line: 60, size: 64, elements: !4643)
!4642 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!4643 = !{!4644, !4645}
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4641, file: !4642, line: 61, baseType: !284)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4641, file: !4642, line: 62, baseType: !4646, size: 64)
!4646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4647, size: 64)
!4647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !4642, line: 54, size: 192, elements: !4648)
!4648 = !{!4649, !4654, !4655}
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !4647, file: !4642, line: 55, baseType: !4650, size: 64)
!4650 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !4642, line: 51, baseType: !4651)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{!215, !4646, !193, !216}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4647, file: !4642, line: 56, baseType: !4646, size: 64, offset: 64)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4647, file: !4642, line: 57, baseType: !215, size: 32, offset: 128)
!4656 = !DIGlobalVariableExpression(var: !4657, expr: !DIExpression())
!4657 = distinct !DIGlobalVariable(name: "console_work", scope: !2, file: !3, line: 183, type: !254, isLocal: true, isDefinition: true)
!4658 = !DIGlobalVariableExpression(var: !4659, expr: !DIExpression())
!4659 = distinct !DIGlobalVariable(name: "scrollback_delta", scope: !2, file: !3, line: 219, type: !215, isLocal: true, isDefinition: true)
!4660 = !DIGlobalVariableExpression(var: !4661, expr: !DIExpression())
!4661 = distinct !DIGlobalVariable(name: "vc_port_ops", scope: !2, file: !3, line: 1097, type: !4158, isLocal: true, isDefinition: true)
!4662 = !DIGlobalVariableExpression(var: !4663, expr: !DIExpression())
!4663 = distinct !DIGlobalVariable(name: "master_display_fg", scope: !2, file: !3, line: 207, type: !220, isLocal: true, isDefinition: true)
!4664 = !DIGlobalVariableExpression(var: !4665, expr: !DIExpression())
!4665 = distinct !DIGlobalVariable(name: "__param_str_default_red", scope: !2, file: !3, line: 1416, type: !4629, isLocal: true, isDefinition: true)
!4666 = !DIGlobalVariableExpression(var: !4667, expr: !DIExpression())
!4667 = distinct !DIGlobalVariable(name: "__param_arr_default_red", scope: !2, file: !3, line: 1416, type: !4463, isLocal: true, isDefinition: true)
!4668 = !DIGlobalVariableExpression(var: !4669, expr: !DIExpression())
!4669 = distinct !DIGlobalVariable(name: "__param_str_default_grn", scope: !2, file: !3, line: 1422, type: !4629, isLocal: true, isDefinition: true)
!4670 = !DIGlobalVariableExpression(var: !4671, expr: !DIExpression())
!4671 = distinct !DIGlobalVariable(name: "__param_arr_default_grn", scope: !2, file: !3, line: 1422, type: !4463, isLocal: true, isDefinition: true)
!4672 = !DIGlobalVariableExpression(var: !4673, expr: !DIExpression())
!4673 = distinct !DIGlobalVariable(name: "__param_str_default_blu", scope: !2, file: !3, line: 1428, type: !4629, isLocal: true, isDefinition: true)
!4674 = !DIGlobalVariableExpression(var: !4675, expr: !DIExpression())
!4675 = distinct !DIGlobalVariable(name: "__param_arr_default_blu", scope: !2, file: !3, line: 1428, type: !4463, isLocal: true, isDefinition: true)
!4676 = !DIGlobalVariableExpression(var: !4677, expr: !DIExpression())
!4677 = distinct !DIGlobalVariable(name: "__param_str_color", scope: !2, file: !3, line: 3413, type: !4678, isLocal: true, isDefinition: true)
!4678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 72, elements: !4679)
!4679 = !{!4680}
!4680 = !DISubrange(count: 9)
!4681 = !DIGlobalVariableExpression(var: !4682, expr: !DIExpression())
!4682 = distinct !DIGlobalVariable(name: "default_color", scope: !2, file: !3, line: 3410, type: !215, isLocal: true, isDefinition: true)
!4683 = !DIGlobalVariableExpression(var: !4684, expr: !DIExpression())
!4684 = distinct !DIGlobalVariable(name: "__param_str_italic", scope: !2, file: !3, line: 3414, type: !4685, isLocal: true, isDefinition: true)
!4685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 80, elements: !4686)
!4686 = !{!4687}
!4687 = !DISubrange(count: 10)
!4688 = !DIGlobalVariableExpression(var: !4689, expr: !DIExpression())
!4689 = distinct !DIGlobalVariable(name: "default_italic_color", scope: !2, file: !3, line: 3411, type: !215, isLocal: true, isDefinition: true)
!4690 = !DIGlobalVariableExpression(var: !4691, expr: !DIExpression())
!4691 = distinct !DIGlobalVariable(name: "__param_str_underline", scope: !2, file: !3, line: 3415, type: !4636, isLocal: true, isDefinition: true)
!4692 = !DIGlobalVariableExpression(var: !4693, expr: !DIExpression())
!4693 = distinct !DIGlobalVariable(name: "default_underline_color", scope: !2, file: !3, line: 3412, type: !215, isLocal: true, isDefinition: true)
!4694 = !DIGlobalVariableExpression(var: !4695, expr: !DIExpression())
!4695 = distinct !DIGlobalVariable(name: "__key", scope: !4696, file: !3, line: 3439, type: !734, isLocal: true, isDefinition: true)
!4696 = distinct !DISubprogram(name: "vc_init", scope: !3, file: !3, line: 3417, type: !4697, scopeLine: 3419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{null, !220, !7, !7, !215}
!4699 = !DIGlobalVariableExpression(var: !4700, expr: !DIExpression())
!4700 = distinct !DIGlobalVariable(name: "printable", scope: !2, file: !3, line: 160, type: !215, isLocal: true, isDefinition: true)
!4701 = !DIGlobalVariableExpression(var: !4702, expr: !DIExpression())
!4702 = distinct !DIGlobalVariable(name: "vt_console_driver", scope: !2, file: !3, line: 3119, type: !4703, isLocal: true, isDefinition: true)
!4703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console", file: !101, line: 141, size: 768, elements: !4704)
!4704 = !{!4705, !4706, !4711, !4715, !4719, !4721, !4725, !4729, !4733, !4734, !4735, !4736, !4737}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4703, file: !101, line: 142, baseType: !1834, size: 128)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4703, file: !101, line: 143, baseType: !4707, size: 64, offset: 128)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{null, !4710, !336, !7}
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4703, size: 64)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4703, file: !101, line: 144, baseType: !4712, size: 64, offset: 192)
!4712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4713, size: 64)
!4713 = !DISubroutineType(types: !4714)
!4714 = !{!215, !4710, !202, !7}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4703, file: !101, line: 145, baseType: !4716, size: 64, offset: 256)
!4716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4717, size: 64)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!3878, !4710, !794}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "unblank", scope: !4703, file: !101, line: 146, baseType: !4720, size: 64, offset: 320)
!4720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 64)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !4703, file: !101, line: 147, baseType: !4722, size: 64, offset: 384)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 64)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{!215, !4710, !202}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !4703, file: !101, line: 148, baseType: !4726, size: 64, offset: 448)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{!215, !4710}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4703, file: !101, line: 149, baseType: !4730, size: 64, offset: 512)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!215, !4710, !202, !215, !202}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4703, file: !101, line: 150, baseType: !1312, size: 16, offset: 576)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4703, file: !101, line: 151, baseType: !1312, size: 16, offset: 592)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "cflag", scope: !4703, file: !101, line: 152, baseType: !215, size: 32, offset: 608)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4703, file: !101, line: 153, baseType: !216, size: 64, offset: 640)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4703, file: !101, line: 154, baseType: !4710, size: 64, offset: 704)
!4738 = !DIGlobalVariableExpression(var: !4739, expr: !DIExpression())
!4739 = distinct !DIGlobalVariable(name: "printing_lock", scope: !4740, file: !3, line: 3042, type: !284, isLocal: true, isDefinition: true)
!4740 = distinct !DISubprogram(name: "vt_console_print", scope: !3, file: !3, line: 3038, type: !4708, scopeLine: 3039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4741 = !DIGlobalVariableExpression(var: !4742, expr: !DIExpression())
!4742 = distinct !DIGlobalVariable(name: "vt_dev_groups", scope: !2, file: !3, line: 3554, type: !4743, isLocal: true, isDefinition: true)
!4743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, size: 128, elements: !1669)
!4744 = !DIGlobalVariableExpression(var: !4745, expr: !DIExpression())
!4745 = distinct !DIGlobalVariable(name: "vt_dev_group", scope: !2, file: !3, line: 3554, type: !425, isLocal: true, isDefinition: true)
!4746 = !DIGlobalVariableExpression(var: !4747, expr: !DIExpression())
!4747 = distinct !DIGlobalVariable(name: "vt_dev_attrs", scope: !2, file: !3, line: 3549, type: !4748, isLocal: true, isDefinition: true)
!4748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 128, elements: !1669)
!4749 = !DIGlobalVariableExpression(var: !4750, expr: !DIExpression())
!4750 = distinct !DIGlobalVariable(name: "dev_attr_active", scope: !2, file: !3, line: 3547, type: !4751, isLocal: true, isDefinition: true)
!4751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !73, line: 99, size: 256, elements: !4752)
!4752 = !{!4753, !4754, !4759}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4751, file: !73, line: 100, baseType: !408, size: 128)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4751, file: !73, line: 101, baseType: !4755, size: 64, offset: 128)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4756, size: 64)
!4756 = !DISubroutineType(types: !4757)
!4757 = !{!403, !328, !4758, !202}
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4751, file: !73, line: 103, baseType: !4760, size: 64, offset: 192)
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4761, size: 64)
!4761 = !DISubroutineType(types: !4762)
!4762 = !{!403, !328, !4758, !336, !417}
!4763 = !DIGlobalVariableExpression(var: !4764, expr: !DIExpression())
!4764 = distinct !DIGlobalVariable(name: "con_ops", scope: !2, file: !3, line: 3518, type: !3929, isLocal: true, isDefinition: true)
!4765 = !DIGlobalVariableExpression(var: !4766, expr: !DIExpression())
!4766 = distinct !DIGlobalVariable(name: "__print_once", scope: !4767, file: !3, line: 2879, type: !578, isLocal: true, isDefinition: true)
!4767 = distinct !DISubprogram(name: "do_con_write", scope: !3, file: !3, line: 2854, type: !3959, scopeLine: 2855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4768 = !DIGlobalVariableExpression(var: !4769, expr: !DIExpression())
!4769 = distinct !DIGlobalVariable(name: "utf8_length_changes", scope: !4770, file: !3, line: 2620, type: !4773, isLocal: true, isDefinition: true)
!4770 = distinct !DISubprogram(name: "vc_translate_unicode", scope: !3, file: !3, line: 2618, type: !4771, scopeLine: 2619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!215, !220, !215, !1003}
!4773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4774, size: 192, elements: !1725)
!4774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !505)
!4775 = !DIGlobalVariableExpression(var: !4776, expr: !DIExpression())
!4776 = distinct !DIGlobalVariable(name: "CTRL_ACTION", scope: !4777, file: !3, line: 2720, type: !4774, isLocal: true, isDefinition: true)
!4777 = distinct !DISubprogram(name: "vc_is_control", scope: !3, file: !3, line: 2712, type: !4778, scopeLine: 2713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!578, !220, !215, !215}
!4780 = !DIGlobalVariableExpression(var: !4781, expr: !DIExpression())
!4781 = distinct !DIGlobalVariable(name: "CTRL_ALWAYS", scope: !4777, file: !3, line: 2722, type: !4774, isLocal: true, isDefinition: true)
!4782 = !DIGlobalVariableExpression(var: !4783, expr: !DIExpression())
!4783 = distinct !DIGlobalVariable(name: "vt102_id", scope: !4784, file: !3, line: 1843, type: !4785, isLocal: true, isDefinition: true)
!4784 = distinct !DISubprogram(name: "respond_ID", scope: !3, file: !3, line: 1840, type: !3954, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 48, elements: !1725)
!4786 = !DIGlobalVariableExpression(var: !4787, expr: !DIExpression())
!4787 = distinct !DIGlobalVariable(name: "teminal_ok", scope: !4788, file: !3, line: 1835, type: !4789, isLocal: true, isDefinition: true)
!4788 = distinct !DISubprogram(name: "status_report", scope: !3, file: !3, line: 1833, type: !3954, scopeLine: 1834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 40, elements: !4031)
!4790 = !DIGlobalVariableExpression(var: !4791, expr: !DIExpression())
!4791 = distinct !DIGlobalVariable(name: "double_width", scope: !4792, file: !3, line: 2553, type: !4795, isLocal: true, isDefinition: true)
!4792 = distinct !DISubprogram(name: "is_double_width", scope: !3, file: !3, line: 2551, type: !4793, scopeLine: 2552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!215, !645}
!4795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4796, size: 768, elements: !2325)
!4796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4414)
!4797 = !DIGlobalVariableExpression(var: !4798, expr: !DIExpression())
!4798 = distinct !DIGlobalVariable(name: "con_driver_unregister_work", scope: !2, file: !3, line: 184, type: !254, isLocal: true, isDefinition: true)
!4799 = !DIGlobalVariableExpression(var: !4800, expr: !DIExpression())
!4800 = distinct !DIGlobalVariable(name: "vtconsole_class", scope: !2, file: !3, line: 3596, type: !3834, isLocal: true, isDefinition: true)
!4801 = !DIGlobalVariableExpression(var: !4802, expr: !DIExpression())
!4802 = distinct !DIGlobalVariable(name: "con_dev_groups", scope: !2, file: !3, line: 3933, type: !4743, isLocal: true, isDefinition: true)
!4803 = !DIGlobalVariableExpression(var: !4804, expr: !DIExpression())
!4804 = distinct !DIGlobalVariable(name: "con_dev_group", scope: !2, file: !3, line: 3933, type: !425, isLocal: true, isDefinition: true)
!4805 = !DIGlobalVariableExpression(var: !4806, expr: !DIExpression())
!4806 = distinct !DIGlobalVariable(name: "con_dev_attrs", scope: !2, file: !3, line: 3927, type: !4807, isLocal: true, isDefinition: true)
!4807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 192, elements: !373)
!4808 = !DIGlobalVariableExpression(var: !4809, expr: !DIExpression())
!4809 = distinct !DIGlobalVariable(name: "dev_attr_bind", scope: !2, file: !3, line: 3924, type: !4751, isLocal: true, isDefinition: true)
!4810 = !DIGlobalVariableExpression(var: !4811, expr: !DIExpression())
!4811 = distinct !DIGlobalVariable(name: "dev_attr_name", scope: !2, file: !3, line: 3925, type: !4751, isLocal: true, isDefinition: true)
!4812 = !DIGlobalVariableExpression(var: !4813, expr: !DIExpression())
!4813 = distinct !DIGlobalVariable(name: "__key", scope: !4814, file: !3, line: 4264, type: !734, isLocal: true, isDefinition: true)
!4814 = distinct !DISubprogram(name: "vtconsole_class_init", scope: !3, file: !3, line: 4260, type: !4815, scopeLine: 4261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4815 = !DISubroutineType(types: !4816)
!4816 = !{!215}
!4817 = !DIGlobalVariableExpression(var: !4818, expr: !DIExpression())
!4818 = distinct !DIGlobalVariable(name: "console_timer", scope: !2, file: !3, line: 227, type: !3622, isLocal: true, isDefinition: true)
!4819 = !DIGlobalVariableExpression(var: !4820, expr: !DIExpression())
!4820 = distinct !DIGlobalVariable(name: "softcursor_original", scope: !2, file: !3, line: 867, type: !215, isLocal: true, isDefinition: true)
!4821 = !{!"rsp"}
!4822 = !{i32 7, !"Dwarf Version", i32 4}
!4823 = !{i32 2, !"Debug Info Version", i32 3}
!4824 = !{i32 1, !"wchar_size", i32 2}
!4825 = !{i32 1, !"Code Model", i32 2}
!4826 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4827 = distinct !DISubprogram(name: "register_vt_notifier", scope: !3, file: !3, line: 249, type: !4828, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4828 = !DISubroutineType(types: !4829)
!4829 = !{!215, !4646}
!4830 = !DILocalVariable(name: "nb", arg: 1, scope: !4827, file: !3, line: 249, type: !4646)
!4831 = !DILocation(line: 249, column: 49, scope: !4827)
!4832 = !DILocation(line: 251, column: 59, scope: !4827)
!4833 = !DILocation(line: 251, column: 9, scope: !4827)
!4834 = !DILocation(line: 251, column: 2, scope: !4827)
!4835 = distinct !DISubprogram(name: "unregister_vt_notifier", scope: !3, file: !3, line: 255, type: !4828, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4836 = !DILocalVariable(name: "nb", arg: 1, scope: !4835, file: !3, line: 255, type: !4646)
!4837 = !DILocation(line: 255, column: 51, scope: !4835)
!4838 = !DILocation(line: 257, column: 61, scope: !4835)
!4839 = !DILocation(line: 257, column: 9, scope: !4835)
!4840 = !DILocation(line: 257, column: 2, scope: !4835)
!4841 = distinct !DISubprogram(name: "schedule_console_callback", scope: !3, file: !3, line: 310, type: !1978, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4842 = !DILocation(line: 312, column: 2, scope: !4841)
!4843 = !DILocation(line: 313, column: 1, scope: !4841)
!4844 = distinct !DISubprogram(name: "schedule_work", scope: !111, file: !111, line: 566, type: !4845, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{!578, !277}
!4847 = !DILocalVariable(name: "work", arg: 1, scope: !4844, file: !111, line: 566, type: !277)
!4848 = !DILocation(line: 566, column: 54, scope: !4844)
!4849 = !DILocation(line: 568, column: 20, scope: !4844)
!4850 = !DILocation(line: 568, column: 31, scope: !4844)
!4851 = !DILocation(line: 568, column: 9, scope: !4844)
!4852 = !DILocation(line: 568, column: 2, scope: !4844)
!4853 = distinct !DISubprogram(name: "vc_uniscr_check", scope: !3, file: !3, line: 501, type: !4269, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4854 = !DILocalVariable(name: "v", arg: 1, scope: !4855, file: !4856, line: 23, type: !4859)
!4855 = distinct !DISubprogram(name: "arch_atomic_read", scope: !4856, file: !4856, line: 23, type: !4857, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4856 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!4857 = !DISubroutineType(types: !4858)
!4858 = !{!215, !4859}
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!4861 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !4862)
!4862 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !4865)
!4863 = distinct !DISubprogram(name: "atomic_read", scope: !4864, file: !4864, line: 25, type: !4857, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4864 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4865 = distinct !DILocation(line: 510, column: 2, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 510, column: 2)
!4867 = !DILocalVariable(name: "v", arg: 1, scope: !4868, file: !4869, line: 69, type: !4872)
!4868 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !4869, file: !4869, line: 69, type: !4870, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4869 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4870 = !DISubroutineType(types: !4871)
!4871 = !{null, !4872, !417}
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4874)
!4874 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4875 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !4876)
!4876 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !4865)
!4877 = !DILocalVariable(name: "size", arg: 2, scope: !4868, file: !4869, line: 69, type: !417)
!4878 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !4876)
!4879 = !DILocalVariable(name: "v", arg: 1, scope: !4863, file: !4864, line: 25, type: !4859)
!4880 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !4865)
!4881 = !DILocalVariable(name: "vc", arg: 1, scope: !4853, file: !3, line: 501, type: !220)
!4882 = !DILocation(line: 501, column: 37, scope: !4853)
!4883 = !DILocalVariable(name: "uniscr", scope: !4853, file: !3, line: 503, type: !4395)
!4884 = !DILocation(line: 503, column: 21, scope: !4853)
!4885 = !DILocalVariable(name: "p", scope: !4853, file: !3, line: 504, type: !191)
!4886 = !DILocation(line: 504, column: 18, scope: !4853)
!4887 = !DILocalVariable(name: "x", scope: !4853, file: !3, line: 505, type: !215)
!4888 = !DILocation(line: 505, column: 6, scope: !4853)
!4889 = !DILocalVariable(name: "y", scope: !4853, file: !3, line: 505, type: !215)
!4890 = !DILocation(line: 505, column: 9, scope: !4853)
!4891 = !DILocalVariable(name: "mask", scope: !4853, file: !3, line: 505, type: !215)
!4892 = !DILocation(line: 505, column: 12, scope: !4853)
!4893 = !DILocalVariable(name: "__ret_warn_on", scope: !4866, file: !3, line: 510, type: !215)
!4894 = !DILocation(line: 510, column: 2, scope: !4866)
!4895 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !4865)
!4896 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !4876)
!4897 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !4876)
!4898 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !4876)
!4899 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !4876)
!4900 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !4865)
!4901 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !4862)
!4902 = !DILocation(line: 0, scope: !4866)
!4903 = !DILocation(line: 510, column: 2, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 510, column: 2)
!4905 = !DILocation(line: 510, column: 2, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 510, column: 2)
!4907 = !DILocation(line: 510, column: 2, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 510, column: 2)
!4909 = !DILocation(line: 510, column: 2, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 510, column: 2)
!4911 = !{i32 -2141807625, i32 -2141807596, i32 -2141807550, i32 -2141807492, i32 -2141807438, i32 -2141807384, i32 -2141807329, i32 -2141807298}
!4912 = !DILocation(line: 510, column: 2, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 510, column: 2)
!4914 = !{i32 -2141806897, i32 -2141806890, i32 -2141806838, i32 -2141806807, i32 -2141806777}
!4915 = !DILocation(line: 510, column: 2, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 510, column: 2)
!4917 = !DILocation(line: 512, column: 7, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 512, column: 6)
!4919 = !DILocation(line: 512, column: 11, scope: !4918)
!4920 = !DILocation(line: 512, column: 6, scope: !4853)
!4921 = !DILocation(line: 513, column: 3, scope: !4918)
!4922 = !DILocation(line: 515, column: 6, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 515, column: 6)
!4924 = !DILocation(line: 515, column: 10, scope: !4923)
!4925 = !DILocation(line: 515, column: 6, scope: !4853)
!4926 = !DILocation(line: 516, column: 3, scope: !4923)
!4927 = !DILocation(line: 518, column: 27, scope: !4853)
!4928 = !DILocation(line: 518, column: 31, scope: !4853)
!4929 = !DILocation(line: 518, column: 40, scope: !4853)
!4930 = !DILocation(line: 518, column: 44, scope: !4853)
!4931 = !DILocation(line: 518, column: 11, scope: !4853)
!4932 = !DILocation(line: 518, column: 9, scope: !4853)
!4933 = !DILocation(line: 519, column: 7, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 519, column: 6)
!4935 = !DILocation(line: 519, column: 6, scope: !4853)
!4936 = !DILocation(line: 520, column: 3, scope: !4934)
!4937 = !DILocation(line: 528, column: 24, scope: !4853)
!4938 = !DILocation(line: 528, column: 28, scope: !4853)
!4939 = !DILocation(line: 528, column: 6, scope: !4853)
!4940 = !DILocation(line: 528, column: 4, scope: !4853)
!4941 = !DILocation(line: 529, column: 9, scope: !4853)
!4942 = !DILocation(line: 529, column: 13, scope: !4853)
!4943 = !DILocation(line: 529, column: 29, scope: !4853)
!4944 = !DILocation(line: 529, column: 7, scope: !4853)
!4945 = !DILocation(line: 530, column: 9, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 530, column: 2)
!4947 = !DILocation(line: 530, column: 7, scope: !4946)
!4948 = !DILocation(line: 530, column: 14, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4946, file: !3, line: 530, column: 2)
!4950 = !DILocation(line: 530, column: 18, scope: !4949)
!4951 = !DILocation(line: 530, column: 22, scope: !4949)
!4952 = !DILocation(line: 530, column: 16, scope: !4949)
!4953 = !DILocation(line: 530, column: 2, scope: !4946)
!4954 = !DILocalVariable(name: "line", scope: !4955, file: !3, line: 531, type: !4400)
!4955 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 530, column: 36)
!4956 = !DILocation(line: 531, column: 13, scope: !4955)
!4957 = !DILocation(line: 531, column: 20, scope: !4955)
!4958 = !DILocation(line: 531, column: 28, scope: !4955)
!4959 = !DILocation(line: 531, column: 34, scope: !4955)
!4960 = !DILocation(line: 532, column: 10, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 532, column: 3)
!4962 = !DILocation(line: 532, column: 8, scope: !4961)
!4963 = !DILocation(line: 532, column: 15, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 532, column: 3)
!4965 = !DILocation(line: 532, column: 19, scope: !4964)
!4966 = !DILocation(line: 532, column: 23, scope: !4964)
!4967 = !DILocation(line: 532, column: 17, scope: !4964)
!4968 = !DILocation(line: 532, column: 3, scope: !4961)
!4969 = !DILocalVariable(name: "glyph", scope: !4970, file: !3, line: 533, type: !195)
!4970 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 532, column: 37)
!4971 = !DILocation(line: 533, column: 8, scope: !4970)
!4972 = !DILocation(line: 533, column: 16, scope: !4970)
!4973 = !DILocation(line: 533, column: 33, scope: !4970)
!4974 = !DILocation(line: 533, column: 31, scope: !4970)
!4975 = !DILocation(line: 534, column: 32, scope: !4970)
!4976 = !DILocation(line: 534, column: 36, scope: !4970)
!4977 = !DILocation(line: 534, column: 14, scope: !4970)
!4978 = !DILocation(line: 534, column: 4, scope: !4970)
!4979 = !DILocation(line: 534, column: 9, scope: !4970)
!4980 = !DILocation(line: 534, column: 12, scope: !4970)
!4981 = !DILocation(line: 535, column: 3, scope: !4970)
!4982 = !DILocation(line: 532, column: 33, scope: !4964)
!4983 = !DILocation(line: 532, column: 3, scope: !4964)
!4984 = distinct !{!4984, !4968, !4985}
!4985 = !DILocation(line: 535, column: 3, scope: !4961)
!4986 = !DILocation(line: 536, column: 2, scope: !4955)
!4987 = !DILocation(line: 530, column: 32, scope: !4949)
!4988 = !DILocation(line: 530, column: 2, scope: !4949)
!4989 = distinct !{!4989, !4953, !4990}
!4990 = !DILocation(line: 536, column: 2, scope: !4946)
!4991 = !DILocation(line: 538, column: 22, scope: !4853)
!4992 = !DILocation(line: 538, column: 2, scope: !4853)
!4993 = !DILocation(line: 538, column: 6, scope: !4853)
!4994 = !DILocation(line: 538, column: 20, scope: !4853)
!4995 = !DILocation(line: 539, column: 2, scope: !4853)
!4996 = !DILocation(line: 540, column: 1, scope: !4853)
!4997 = distinct !DISubprogram(name: "vc_uniscr_alloc", scope: !3, file: !3, line: 338, type: !4998, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!4395, !7, !7}
!5000 = !DILocalVariable(name: "cols", arg: 1, scope: !4997, file: !3, line: 338, type: !7)
!5001 = !DILocation(line: 338, column: 56, scope: !4997)
!5002 = !DILocalVariable(name: "rows", arg: 2, scope: !4997, file: !3, line: 338, type: !7)
!5003 = !DILocation(line: 338, column: 75, scope: !4997)
!5004 = !DILocalVariable(name: "uniscr", scope: !4997, file: !3, line: 340, type: !4395)
!5005 = !DILocation(line: 340, column: 21, scope: !4997)
!5006 = !DILocalVariable(name: "p", scope: !4997, file: !3, line: 341, type: !216)
!5007 = !DILocation(line: 341, column: 8, scope: !4997)
!5008 = !DILocalVariable(name: "memsize", scope: !4997, file: !3, line: 342, type: !7)
!5009 = !DILocation(line: 342, column: 15, scope: !4997)
!5010 = !DILocalVariable(name: "i", scope: !4997, file: !3, line: 342, type: !7)
!5011 = !DILocation(line: 342, column: 24, scope: !4997)
!5012 = !DILocation(line: 345, column: 12, scope: !4997)
!5013 = !DILocation(line: 345, column: 19, scope: !4997)
!5014 = !DILocation(line: 345, column: 17, scope: !4997)
!5015 = !DILocation(line: 345, column: 24, scope: !4997)
!5016 = !DILocation(line: 345, column: 10, scope: !4997)
!5017 = !DILocation(line: 346, column: 13, scope: !4997)
!5018 = !DILocation(line: 346, column: 18, scope: !4997)
!5019 = !DILocation(line: 346, column: 10, scope: !4997)
!5020 = !DILocation(line: 347, column: 14, scope: !4997)
!5021 = !DILocation(line: 347, column: 6, scope: !4997)
!5022 = !DILocation(line: 347, column: 4, scope: !4997)
!5023 = !DILocation(line: 348, column: 7, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 348, column: 6)
!5025 = !DILocation(line: 348, column: 6, scope: !4997)
!5026 = !DILocation(line: 349, column: 3, scope: !5024)
!5027 = !DILocation(line: 352, column: 11, scope: !4997)
!5028 = !DILocation(line: 352, column: 9, scope: !4997)
!5029 = !DILocation(line: 353, column: 6, scope: !4997)
!5030 = !DILocation(line: 353, column: 14, scope: !4997)
!5031 = !DILocation(line: 353, column: 22, scope: !4997)
!5032 = !DILocation(line: 353, column: 20, scope: !4997)
!5033 = !DILocation(line: 353, column: 4, scope: !4997)
!5034 = !DILocation(line: 354, column: 9, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 354, column: 2)
!5036 = !DILocation(line: 354, column: 7, scope: !5035)
!5037 = !DILocation(line: 354, column: 14, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 354, column: 2)
!5039 = !DILocation(line: 354, column: 18, scope: !5038)
!5040 = !DILocation(line: 354, column: 16, scope: !5038)
!5041 = !DILocation(line: 354, column: 2, scope: !5035)
!5042 = !DILocation(line: 355, column: 22, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 354, column: 29)
!5044 = !DILocation(line: 355, column: 3, scope: !5043)
!5045 = !DILocation(line: 355, column: 11, scope: !5043)
!5046 = !DILocation(line: 355, column: 17, scope: !5043)
!5047 = !DILocation(line: 355, column: 20, scope: !5043)
!5048 = !DILocation(line: 356, column: 8, scope: !5043)
!5049 = !DILocation(line: 356, column: 13, scope: !5043)
!5050 = !DILocation(line: 356, column: 5, scope: !5043)
!5051 = !DILocation(line: 357, column: 2, scope: !5043)
!5052 = !DILocation(line: 354, column: 25, scope: !5038)
!5053 = !DILocation(line: 354, column: 2, scope: !5038)
!5054 = distinct !{!5054, !5041, !5055}
!5055 = !DILocation(line: 357, column: 2, scope: !5035)
!5056 = !DILocation(line: 358, column: 9, scope: !4997)
!5057 = !DILocation(line: 358, column: 2, scope: !4997)
!5058 = !DILocation(line: 359, column: 1, scope: !4997)
!5059 = distinct !DISubprogram(name: "vc_uniscr_copy_line", scope: !3, file: !3, line: 547, type: !5060, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{null, !4322, !216, !578, !7, !7, !7}
!5062 = !DILocalVariable(name: "vc", arg: 1, scope: !5059, file: !3, line: 547, type: !4322)
!5063 = !DILocation(line: 547, column: 48, scope: !5059)
!5064 = !DILocalVariable(name: "dest", arg: 2, scope: !5059, file: !3, line: 547, type: !216)
!5065 = !DILocation(line: 547, column: 58, scope: !5059)
!5066 = !DILocalVariable(name: "viewed", arg: 3, scope: !5059, file: !3, line: 547, type: !578)
!5067 = !DILocation(line: 547, column: 69, scope: !5059)
!5068 = !DILocalVariable(name: "row", arg: 4, scope: !5059, file: !3, line: 548, type: !7)
!5069 = !DILocation(line: 548, column: 18, scope: !5059)
!5070 = !DILocalVariable(name: "col", arg: 5, scope: !5059, file: !3, line: 548, type: !7)
!5071 = !DILocation(line: 548, column: 36, scope: !5059)
!5072 = !DILocalVariable(name: "nr", arg: 6, scope: !5059, file: !3, line: 548, type: !7)
!5073 = !DILocation(line: 548, column: 54, scope: !5059)
!5074 = !DILocalVariable(name: "uniscr", scope: !5059, file: !3, line: 550, type: !4395)
!5075 = !DILocation(line: 550, column: 21, scope: !5059)
!5076 = !DILocation(line: 550, column: 30, scope: !5059)
!5077 = !DILocalVariable(name: "offset", scope: !5059, file: !3, line: 551, type: !215)
!5078 = !DILocation(line: 551, column: 6, scope: !5059)
!5079 = !DILocation(line: 551, column: 15, scope: !5059)
!5080 = !DILocation(line: 551, column: 21, scope: !5059)
!5081 = !DILocation(line: 551, column: 25, scope: !5059)
!5082 = !DILocation(line: 551, column: 19, scope: !5059)
!5083 = !DILocation(line: 551, column: 39, scope: !5059)
!5084 = !DILocation(line: 551, column: 43, scope: !5059)
!5085 = !DILocation(line: 551, column: 37, scope: !5059)
!5086 = !DILocalVariable(name: "pos", scope: !5059, file: !3, line: 552, type: !193)
!5087 = !DILocation(line: 552, column: 16, scope: !5059)
!5088 = !DILocation(line: 554, column: 2, scope: !5059)
!5089 = !DILocation(line: 554, column: 2, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 554, column: 2)
!5091 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 554, column: 2)
!5092 = !DILocation(line: 554, column: 2, scope: !5091)
!5093 = !DILocation(line: 554, column: 2, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 554, column: 2)
!5095 = !DILocation(line: 554, column: 2, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 554, column: 2)
!5097 = !DILocation(line: 554, column: 2, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 554, column: 2)
!5099 = !{i32 -2141806382, i32 -2141806353, i32 -2141806307, i32 -2141806249, i32 -2141806195, i32 -2141806141, i32 -2141806086, i32 -2141806055}
!5100 = !DILocation(line: 554, column: 2, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 554, column: 2)
!5102 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 554, column: 2)
!5103 = !{i32 -2141805613, i32 -2141805606, i32 -2141805552, i32 -2141805521, i32 -2141805491}
!5104 = !DILocation(line: 554, column: 2, scope: !5102)
!5105 = !DILocation(line: 556, column: 33, scope: !5059)
!5106 = !DILocation(line: 556, column: 37, scope: !5059)
!5107 = !DILocation(line: 556, column: 45, scope: !5059)
!5108 = !DILocation(line: 556, column: 23, scope: !5059)
!5109 = !DILocation(line: 556, column: 8, scope: !5059)
!5110 = !DILocation(line: 556, column: 6, scope: !5059)
!5111 = !DILocation(line: 557, column: 6, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 557, column: 6)
!5113 = !DILocation(line: 557, column: 13, scope: !5112)
!5114 = !DILocation(line: 557, column: 17, scope: !5112)
!5115 = !DILocation(line: 557, column: 10, scope: !5112)
!5116 = !DILocation(line: 557, column: 27, scope: !5112)
!5117 = !DILocation(line: 557, column: 30, scope: !5112)
!5118 = !DILocation(line: 557, column: 36, scope: !5112)
!5119 = !DILocation(line: 557, column: 40, scope: !5112)
!5120 = !DILocation(line: 557, column: 34, scope: !5112)
!5121 = !DILocation(line: 557, column: 6, scope: !5059)
!5122 = !DILocation(line: 563, column: 10, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 557, column: 52)
!5124 = !DILocation(line: 563, column: 16, scope: !5123)
!5125 = !DILocation(line: 563, column: 20, scope: !5123)
!5126 = !DILocation(line: 563, column: 14, scope: !5123)
!5127 = !DILocation(line: 563, column: 33, scope: !5123)
!5128 = !DILocation(line: 563, column: 37, scope: !5123)
!5129 = !DILocation(line: 563, column: 31, scope: !5123)
!5130 = !DILocation(line: 563, column: 9, scope: !5123)
!5131 = !DILocation(line: 563, column: 7, scope: !5123)
!5132 = !DILocation(line: 564, column: 11, scope: !5123)
!5133 = !DILocation(line: 564, column: 17, scope: !5123)
!5134 = !DILocation(line: 564, column: 21, scope: !5123)
!5135 = !DILocation(line: 564, column: 15, scope: !5123)
!5136 = !DILocation(line: 564, column: 34, scope: !5123)
!5137 = !DILocation(line: 564, column: 38, scope: !5123)
!5138 = !DILocation(line: 564, column: 32, scope: !5123)
!5139 = !DILocation(line: 564, column: 51, scope: !5123)
!5140 = !DILocation(line: 564, column: 9, scope: !5123)
!5141 = !DILocation(line: 564, column: 7, scope: !5123)
!5142 = !DILocation(line: 565, column: 10, scope: !5123)
!5143 = !DILocation(line: 565, column: 17, scope: !5123)
!5144 = !DILocation(line: 565, column: 25, scope: !5123)
!5145 = !DILocation(line: 565, column: 31, scope: !5123)
!5146 = !DILocation(line: 565, column: 36, scope: !5123)
!5147 = !DILocation(line: 565, column: 3, scope: !5123)
!5148 = !DILocation(line: 565, column: 42, scope: !5123)
!5149 = !DILocation(line: 565, column: 45, scope: !5123)
!5150 = !DILocation(line: 566, column: 2, scope: !5123)
!5151 = !DILocalVariable(name: "p", scope: !5152, file: !3, line: 573, type: !194)
!5152 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 566, column: 9)
!5153 = !DILocation(line: 573, column: 8, scope: !5152)
!5154 = !DILocation(line: 573, column: 19, scope: !5152)
!5155 = !DILocation(line: 573, column: 12, scope: !5152)
!5156 = !DILocalVariable(name: "mask", scope: !5152, file: !3, line: 574, type: !215)
!5157 = !DILocation(line: 574, column: 7, scope: !5152)
!5158 = !DILocation(line: 574, column: 14, scope: !5152)
!5159 = !DILocation(line: 574, column: 18, scope: !5152)
!5160 = !DILocation(line: 574, column: 34, scope: !5152)
!5161 = !DILocalVariable(name: "uni_buf", scope: !5152, file: !3, line: 575, type: !4400)
!5162 = !DILocation(line: 575, column: 13, scope: !5152)
!5163 = !DILocation(line: 575, column: 23, scope: !5152)
!5164 = !DILocation(line: 576, column: 3, scope: !5152)
!5165 = !DILocation(line: 576, column: 12, scope: !5152)
!5166 = !DILocalVariable(name: "glyph", scope: !5167, file: !3, line: 577, type: !195)
!5167 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 576, column: 16)
!5168 = !DILocation(line: 577, column: 8, scope: !5167)
!5169 = !DILocation(line: 577, column: 16, scope: !5167)
!5170 = !DILocation(line: 577, column: 33, scope: !5167)
!5171 = !DILocation(line: 577, column: 31, scope: !5167)
!5172 = !DILocation(line: 578, column: 35, scope: !5167)
!5173 = !DILocation(line: 578, column: 39, scope: !5167)
!5174 = !DILocation(line: 578, column: 17, scope: !5167)
!5175 = !DILocation(line: 578, column: 12, scope: !5167)
!5176 = !DILocation(line: 578, column: 15, scope: !5167)
!5177 = distinct !{!5177, !5164, !5178}
!5178 = !DILocation(line: 579, column: 3, scope: !5152)
!5179 = !DILocation(line: 581, column: 1, scope: !5059)
!5180 = distinct !DISubprogram(name: "screenpos", scope: !3, file: !3, line: 286, type: !5181, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!191, !4322, !215, !578}
!5183 = !DILocalVariable(name: "vc", arg: 1, scope: !5180, file: !3, line: 286, type: !4322)
!5184 = !DILocation(line: 286, column: 63, scope: !5180)
!5185 = !DILocalVariable(name: "offset", arg: 2, scope: !5180, file: !3, line: 286, type: !215)
!5186 = !DILocation(line: 286, column: 71, scope: !5180)
!5187 = !DILocalVariable(name: "viewed", arg: 3, scope: !5180, file: !3, line: 287, type: !578)
!5188 = !DILocation(line: 287, column: 8, scope: !5180)
!5189 = !DILocalVariable(name: "p", scope: !5180, file: !3, line: 289, type: !191)
!5190 = !DILocation(line: 289, column: 18, scope: !5180)
!5191 = !DILocation(line: 291, column: 7, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 291, column: 6)
!5193 = !DILocation(line: 291, column: 6, scope: !5180)
!5194 = !DILocation(line: 292, column: 26, scope: !5192)
!5195 = !DILocation(line: 292, column: 30, scope: !5192)
!5196 = !DILocation(line: 292, column: 42, scope: !5192)
!5197 = !DILocation(line: 292, column: 40, scope: !5192)
!5198 = !DILocation(line: 292, column: 7, scope: !5192)
!5199 = !DILocation(line: 292, column: 5, scope: !5192)
!5200 = !DILocation(line: 292, column: 3, scope: !5192)
!5201 = !DILocation(line: 293, column: 12, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 293, column: 11)
!5203 = !DILocation(line: 293, column: 16, scope: !5202)
!5204 = !DILocation(line: 293, column: 23, scope: !5202)
!5205 = !DILocation(line: 293, column: 11, scope: !5192)
!5206 = !DILocation(line: 294, column: 26, scope: !5202)
!5207 = !DILocation(line: 294, column: 30, scope: !5202)
!5208 = !DILocation(line: 294, column: 50, scope: !5202)
!5209 = !DILocation(line: 294, column: 48, scope: !5202)
!5210 = !DILocation(line: 294, column: 7, scope: !5202)
!5211 = !DILocation(line: 294, column: 5, scope: !5202)
!5212 = !DILocation(line: 294, column: 3, scope: !5202)
!5213 = !DILocation(line: 296, column: 7, scope: !5202)
!5214 = !DILocation(line: 296, column: 11, scope: !5202)
!5215 = !DILocation(line: 296, column: 18, scope: !5202)
!5216 = !DILocation(line: 296, column: 33, scope: !5202)
!5217 = !DILocation(line: 296, column: 37, scope: !5202)
!5218 = !DILocation(line: 296, column: 5, scope: !5202)
!5219 = !DILocation(line: 297, column: 9, scope: !5180)
!5220 = !DILocation(line: 297, column: 2, scope: !5180)
!5221 = distinct !DISubprogram(name: "update_region", scope: !3, file: !3, line: 688, type: !5222, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5222 = !DISubroutineType(types: !5223)
!5223 = !{null, !220, !193, !215}
!5224 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !5225)
!5225 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !5226)
!5226 = distinct !DILocation(line: 690, column: 2, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 690, column: 2)
!5228 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !5229)
!5229 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !5226)
!5230 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !5229)
!5231 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !5226)
!5232 = !DILocalVariable(name: "vc", arg: 1, scope: !5221, file: !3, line: 688, type: !220)
!5233 = !DILocation(line: 688, column: 36, scope: !5221)
!5234 = !DILocalVariable(name: "start", arg: 2, scope: !5221, file: !3, line: 688, type: !193)
!5235 = !DILocation(line: 688, column: 54, scope: !5221)
!5236 = !DILocalVariable(name: "count", arg: 3, scope: !5221, file: !3, line: 688, type: !215)
!5237 = !DILocation(line: 688, column: 65, scope: !5221)
!5238 = !DILocalVariable(name: "__ret_warn_on", scope: !5227, file: !3, line: 690, type: !215)
!5239 = !DILocation(line: 690, column: 2, scope: !5227)
!5240 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !5226)
!5241 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !5229)
!5242 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !5229)
!5243 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !5229)
!5244 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !5229)
!5245 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !5226)
!5246 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !5225)
!5247 = !DILocation(line: 0, scope: !5227)
!5248 = !DILocation(line: 690, column: 2, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 690, column: 2)
!5250 = !DILocation(line: 690, column: 2, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 690, column: 2)
!5252 = !DILocation(line: 690, column: 2, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 690, column: 2)
!5254 = !DILocation(line: 690, column: 2, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 690, column: 2)
!5256 = !{i32 -2141801948, i32 -2141801919, i32 -2141801873, i32 -2141801815, i32 -2141801761, i32 -2141801707, i32 -2141801652, i32 -2141801621}
!5257 = !DILocation(line: 690, column: 2, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 690, column: 2)
!5259 = !{i32 -2141801220, i32 -2141801213, i32 -2141801161, i32 -2141801130, i32 -2141801100}
!5260 = !DILocation(line: 690, column: 2, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 690, column: 2)
!5262 = !DILocation(line: 692, column: 24, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 692, column: 6)
!5264 = !DILocation(line: 692, column: 6, scope: !5263)
!5265 = !DILocation(line: 692, column: 6, scope: !5221)
!5266 = !DILocation(line: 693, column: 15, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 692, column: 29)
!5268 = !DILocation(line: 693, column: 3, scope: !5267)
!5269 = !DILocation(line: 694, column: 20, scope: !5267)
!5270 = !DILocation(line: 694, column: 24, scope: !5267)
!5271 = !DILocation(line: 694, column: 31, scope: !5267)
!5272 = !DILocation(line: 694, column: 3, scope: !5267)
!5273 = !DILocation(line: 695, column: 14, scope: !5267)
!5274 = !DILocation(line: 695, column: 3, scope: !5267)
!5275 = !DILocation(line: 696, column: 2, scope: !5267)
!5276 = !DILocation(line: 697, column: 1, scope: !5221)
!5277 = distinct !DISubprogram(name: "con_should_update", scope: !3, file: !3, line: 281, type: !5278, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5278 = !DISubroutineType(types: !5279)
!5279 = !{!578, !4322}
!5280 = !DILocalVariable(name: "vc", arg: 1, scope: !5277, file: !3, line: 281, type: !4322)
!5281 = !DILocation(line: 281, column: 60, scope: !5277)
!5282 = !DILocation(line: 283, column: 24, scope: !5277)
!5283 = !DILocation(line: 283, column: 9, scope: !5277)
!5284 = !DILocation(line: 283, column: 28, scope: !5277)
!5285 = !DILocation(line: 283, column: 32, scope: !5277)
!5286 = !DILocation(line: 283, column: 31, scope: !5277)
!5287 = !DILocation(line: 0, scope: !5277)
!5288 = !DILocation(line: 283, column: 2, scope: !5277)
!5289 = distinct !DISubprogram(name: "hide_cursor", scope: !3, file: !3, line: 902, type: !4246, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5290 = !DILocalVariable(name: "vc", arg: 1, scope: !5289, file: !3, line: 902, type: !220)
!5291 = !DILocation(line: 902, column: 41, scope: !5289)
!5292 = !DILocation(line: 904, column: 16, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 904, column: 6)
!5294 = !DILocation(line: 904, column: 6, scope: !5293)
!5295 = !DILocation(line: 904, column: 6, scope: !5289)
!5296 = !DILocation(line: 905, column: 3, scope: !5293)
!5297 = !DILocation(line: 907, column: 2, scope: !5289)
!5298 = !DILocation(line: 907, column: 6, scope: !5289)
!5299 = !DILocation(line: 907, column: 13, scope: !5289)
!5300 = !DILocation(line: 907, column: 24, scope: !5289)
!5301 = !DILocation(line: 908, column: 18, scope: !5289)
!5302 = !DILocation(line: 908, column: 2, scope: !5289)
!5303 = !DILocation(line: 909, column: 1, scope: !5289)
!5304 = distinct !DISubprogram(name: "do_update_region", scope: !3, file: !3, line: 644, type: !5222, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5305 = !DILocalVariable(name: "vc", arg: 1, scope: !5304, file: !3, line: 644, type: !220)
!5306 = !DILocation(line: 644, column: 46, scope: !5304)
!5307 = !DILocalVariable(name: "start", arg: 2, scope: !5304, file: !3, line: 644, type: !193)
!5308 = !DILocation(line: 644, column: 64, scope: !5304)
!5309 = !DILocalVariable(name: "count", arg: 3, scope: !5304, file: !3, line: 644, type: !215)
!5310 = !DILocation(line: 644, column: 75, scope: !5304)
!5311 = !DILocalVariable(name: "xx", scope: !5304, file: !3, line: 646, type: !7)
!5312 = !DILocation(line: 646, column: 15, scope: !5304)
!5313 = !DILocalVariable(name: "yy", scope: !5304, file: !3, line: 646, type: !7)
!5314 = !DILocation(line: 646, column: 19, scope: !5304)
!5315 = !DILocalVariable(name: "offset", scope: !5304, file: !3, line: 646, type: !7)
!5316 = !DILocation(line: 646, column: 23, scope: !5304)
!5317 = !DILocalVariable(name: "p", scope: !5304, file: !3, line: 647, type: !194)
!5318 = !DILocation(line: 647, column: 7, scope: !5304)
!5319 = !DILocation(line: 649, column: 14, scope: !5304)
!5320 = !DILocation(line: 649, column: 6, scope: !5304)
!5321 = !DILocation(line: 649, column: 4, scope: !5304)
!5322 = !DILocation(line: 650, column: 7, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 650, column: 6)
!5324 = !DILocation(line: 650, column: 11, scope: !5323)
!5325 = !DILocation(line: 650, column: 18, scope: !5323)
!5326 = !DILocation(line: 650, column: 6, scope: !5304)
!5327 = !DILocation(line: 651, column: 13, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 650, column: 29)
!5329 = !DILocation(line: 651, column: 21, scope: !5328)
!5330 = !DILocation(line: 651, column: 25, scope: !5328)
!5331 = !DILocation(line: 651, column: 19, scope: !5328)
!5332 = !DILocation(line: 651, column: 36, scope: !5328)
!5333 = !DILocation(line: 651, column: 12, scope: !5328)
!5334 = !DILocation(line: 651, column: 10, scope: !5328)
!5335 = !DILocation(line: 652, column: 8, scope: !5328)
!5336 = !DILocation(line: 652, column: 17, scope: !5328)
!5337 = !DILocation(line: 652, column: 21, scope: !5328)
!5338 = !DILocation(line: 652, column: 15, scope: !5328)
!5339 = !DILocation(line: 652, column: 6, scope: !5328)
!5340 = !DILocation(line: 653, column: 8, scope: !5328)
!5341 = !DILocation(line: 653, column: 17, scope: !5328)
!5342 = !DILocation(line: 653, column: 21, scope: !5328)
!5343 = !DILocation(line: 653, column: 15, scope: !5328)
!5344 = !DILocation(line: 653, column: 6, scope: !5328)
!5345 = !DILocation(line: 654, column: 2, scope: !5328)
!5346 = !DILocalVariable(name: "nxx", scope: !5347, file: !3, line: 655, type: !215)
!5347 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 654, column: 9)
!5348 = !DILocation(line: 655, column: 7, scope: !5347)
!5349 = !DILocalVariable(name: "nyy", scope: !5347, file: !3, line: 655, type: !215)
!5350 = !DILocation(line: 655, column: 12, scope: !5347)
!5351 = !DILocation(line: 656, column: 11, scope: !5347)
!5352 = !DILocation(line: 656, column: 15, scope: !5347)
!5353 = !DILocation(line: 656, column: 22, scope: !5347)
!5354 = !DILocation(line: 656, column: 32, scope: !5347)
!5355 = !DILocation(line: 656, column: 36, scope: !5347)
!5356 = !DILocation(line: 656, column: 9, scope: !5347)
!5357 = !DILocation(line: 657, column: 8, scope: !5347)
!5358 = !DILocation(line: 657, column: 6, scope: !5347)
!5359 = !DILocation(line: 657, column: 18, scope: !5347)
!5360 = !DILocation(line: 657, column: 16, scope: !5347)
!5361 = !DILocation(line: 659, column: 2, scope: !5304)
!5362 = !DILocalVariable(name: "attrib", scope: !5363, file: !3, line: 660, type: !195)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 659, column: 10)
!5364 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 659, column: 2)
!5365 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 659, column: 2)
!5366 = !DILocation(line: 660, column: 7, scope: !5363)
!5367 = !DILocation(line: 660, column: 16, scope: !5363)
!5368 = !DILocation(line: 660, column: 29, scope: !5363)
!5369 = !DILocalVariable(name: "startx", scope: !5363, file: !3, line: 661, type: !215)
!5370 = !DILocation(line: 661, column: 7, scope: !5363)
!5371 = !DILocation(line: 661, column: 16, scope: !5363)
!5372 = !DILocalVariable(name: "q", scope: !5363, file: !3, line: 662, type: !194)
!5373 = !DILocation(line: 662, column: 8, scope: !5363)
!5374 = !DILocation(line: 662, column: 12, scope: !5363)
!5375 = !DILocation(line: 663, column: 3, scope: !5363)
!5376 = !DILocation(line: 663, column: 10, scope: !5363)
!5377 = !DILocation(line: 663, column: 15, scope: !5363)
!5378 = !DILocation(line: 663, column: 19, scope: !5363)
!5379 = !DILocation(line: 663, column: 13, scope: !5363)
!5380 = !DILocation(line: 663, column: 27, scope: !5363)
!5381 = !DILocation(line: 663, column: 30, scope: !5363)
!5382 = !DILocation(line: 0, scope: !5363)
!5383 = !DILocation(line: 664, column: 8, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5385, file: !3, line: 664, column: 8)
!5385 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 663, column: 37)
!5386 = !DILocation(line: 664, column: 19, scope: !5384)
!5387 = !DILocation(line: 664, column: 32, scope: !5384)
!5388 = !DILocation(line: 664, column: 15, scope: !5384)
!5389 = !DILocation(line: 664, column: 8, scope: !5385)
!5390 = !DILocation(line: 665, column: 9, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 665, column: 9)
!5392 = distinct !DILexicalBlock(scope: !5384, file: !3, line: 664, column: 43)
!5393 = !DILocation(line: 665, column: 13, scope: !5391)
!5394 = !DILocation(line: 665, column: 11, scope: !5391)
!5395 = !DILocation(line: 665, column: 9, scope: !5392)
!5396 = !DILocation(line: 666, column: 6, scope: !5391)
!5397 = !DILocation(line: 666, column: 10, scope: !5391)
!5398 = !DILocation(line: 666, column: 17, scope: !5391)
!5399 = !DILocation(line: 666, column: 27, scope: !5391)
!5400 = !DILocation(line: 666, column: 31, scope: !5391)
!5401 = !DILocation(line: 666, column: 34, scope: !5391)
!5402 = !DILocation(line: 666, column: 36, scope: !5391)
!5403 = !DILocation(line: 666, column: 35, scope: !5391)
!5404 = !DILocation(line: 666, column: 39, scope: !5391)
!5405 = !DILocation(line: 666, column: 43, scope: !5391)
!5406 = !DILocation(line: 667, column: 14, scope: !5392)
!5407 = !DILocation(line: 667, column: 12, scope: !5392)
!5408 = !DILocation(line: 668, column: 9, scope: !5392)
!5409 = !DILocation(line: 668, column: 7, scope: !5392)
!5410 = !DILocation(line: 669, column: 14, scope: !5392)
!5411 = !DILocation(line: 669, column: 27, scope: !5392)
!5412 = !DILocation(line: 669, column: 12, scope: !5392)
!5413 = !DILocation(line: 670, column: 4, scope: !5392)
!5414 = !DILocation(line: 671, column: 5, scope: !5385)
!5415 = !DILocation(line: 672, column: 6, scope: !5385)
!5416 = !DILocation(line: 673, column: 9, scope: !5385)
!5417 = distinct !{!5417, !5375, !5418}
!5418 = !DILocation(line: 674, column: 3, scope: !5363)
!5419 = !DILocation(line: 675, column: 7, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 675, column: 7)
!5421 = !DILocation(line: 675, column: 11, scope: !5420)
!5422 = !DILocation(line: 675, column: 9, scope: !5420)
!5423 = !DILocation(line: 675, column: 7, scope: !5363)
!5424 = !DILocation(line: 676, column: 4, scope: !5420)
!5425 = !DILocation(line: 676, column: 8, scope: !5420)
!5426 = !DILocation(line: 676, column: 15, scope: !5420)
!5427 = !DILocation(line: 676, column: 25, scope: !5420)
!5428 = !DILocation(line: 676, column: 29, scope: !5420)
!5429 = !DILocation(line: 676, column: 32, scope: !5420)
!5430 = !DILocation(line: 676, column: 34, scope: !5420)
!5431 = !DILocation(line: 676, column: 33, scope: !5420)
!5432 = !DILocation(line: 676, column: 37, scope: !5420)
!5433 = !DILocation(line: 676, column: 41, scope: !5420)
!5434 = !DILocation(line: 677, column: 8, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 677, column: 7)
!5436 = !DILocation(line: 677, column: 7, scope: !5363)
!5437 = !DILocation(line: 678, column: 4, scope: !5435)
!5438 = !DILocation(line: 679, column: 6, scope: !5363)
!5439 = !DILocation(line: 680, column: 5, scope: !5363)
!5440 = !DILocation(line: 681, column: 7, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 681, column: 7)
!5442 = !DILocation(line: 681, column: 11, scope: !5441)
!5443 = !DILocation(line: 681, column: 18, scope: !5441)
!5444 = !DILocation(line: 681, column: 7, scope: !5363)
!5445 = !DILocation(line: 682, column: 15, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 681, column: 29)
!5447 = !DILocation(line: 682, column: 8, scope: !5446)
!5448 = !DILocation(line: 682, column: 6, scope: !5446)
!5449 = !DILocation(line: 683, column: 12, scope: !5446)
!5450 = !DILocation(line: 683, column: 16, scope: !5446)
!5451 = !DILocation(line: 683, column: 23, scope: !5446)
!5452 = !DILocation(line: 683, column: 33, scope: !5446)
!5453 = !DILocation(line: 683, column: 37, scope: !5446)
!5454 = !DILocation(line: 683, column: 10, scope: !5446)
!5455 = !DILocation(line: 684, column: 3, scope: !5446)
!5456 = !DILocation(line: 659, column: 2, scope: !5364)
!5457 = distinct !{!5457, !5458, !5459}
!5458 = !DILocation(line: 659, column: 2, scope: !5365)
!5459 = !DILocation(line: 685, column: 2, scope: !5365)
!5460 = !DILocation(line: 686, column: 1, scope: !5304)
!5461 = distinct !DISubprogram(name: "set_cursor", scope: !3, file: !3, line: 911, type: !4246, scopeLine: 912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5462 = !DILocalVariable(name: "vc", arg: 1, scope: !5461, file: !3, line: 911, type: !220)
!5463 = !DILocation(line: 911, column: 40, scope: !5461)
!5464 = !DILocation(line: 913, column: 17, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 913, column: 6)
!5466 = !DILocation(line: 913, column: 7, scope: !5465)
!5467 = !DILocation(line: 913, column: 21, scope: !5465)
!5468 = !DILocation(line: 913, column: 24, scope: !5465)
!5469 = !DILocation(line: 913, column: 40, scope: !5465)
!5470 = !DILocation(line: 913, column: 43, scope: !5465)
!5471 = !DILocation(line: 913, column: 47, scope: !5465)
!5472 = !DILocation(line: 913, column: 55, scope: !5465)
!5473 = !DILocation(line: 913, column: 6, scope: !5461)
!5474 = !DILocation(line: 914, column: 3, scope: !5465)
!5475 = !DILocation(line: 915, column: 6, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 915, column: 6)
!5477 = !DILocation(line: 915, column: 10, scope: !5476)
!5478 = !DILocation(line: 915, column: 6, scope: !5461)
!5479 = !DILocation(line: 916, column: 17, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 916, column: 7)
!5481 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 915, column: 20)
!5482 = !DILocation(line: 916, column: 7, scope: !5480)
!5483 = !DILocation(line: 916, column: 7, scope: !5481)
!5484 = !DILocation(line: 917, column: 4, scope: !5480)
!5485 = !DILocation(line: 918, column: 18, scope: !5481)
!5486 = !DILocation(line: 918, column: 3, scope: !5481)
!5487 = !DILocation(line: 919, column: 7, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 919, column: 7)
!5489 = !DILocation(line: 919, column: 36, scope: !5488)
!5490 = !DILocation(line: 919, column: 7, scope: !5481)
!5491 = !DILocation(line: 920, column: 4, scope: !5488)
!5492 = !DILocation(line: 920, column: 8, scope: !5488)
!5493 = !DILocation(line: 920, column: 15, scope: !5488)
!5494 = !DILocation(line: 920, column: 26, scope: !5488)
!5495 = !DILocation(line: 921, column: 2, scope: !5481)
!5496 = !DILocation(line: 922, column: 15, scope: !5476)
!5497 = !DILocation(line: 922, column: 3, scope: !5476)
!5498 = !DILocation(line: 923, column: 1, scope: !5461)
!5499 = distinct !DISubprogram(name: "invert_screen", scope: !3, file: !3, line: 756, type: !5500, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5500 = !DISubroutineType(types: !5501)
!5501 = !{null, !220, !215, !215, !578}
!5502 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !5503)
!5503 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !5504)
!5504 = distinct !DILocation(line: 760, column: 2, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 760, column: 2)
!5506 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !5507)
!5507 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !5504)
!5508 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !5507)
!5509 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !5504)
!5510 = !DILocalVariable(name: "vc", arg: 1, scope: !5499, file: !3, line: 756, type: !220)
!5511 = !DILocation(line: 756, column: 36, scope: !5499)
!5512 = !DILocalVariable(name: "offset", arg: 2, scope: !5499, file: !3, line: 756, type: !215)
!5513 = !DILocation(line: 756, column: 44, scope: !5499)
!5514 = !DILocalVariable(name: "count", arg: 3, scope: !5499, file: !3, line: 756, type: !215)
!5515 = !DILocation(line: 756, column: 56, scope: !5499)
!5516 = !DILocalVariable(name: "viewed", arg: 4, scope: !5499, file: !3, line: 756, type: !578)
!5517 = !DILocation(line: 756, column: 68, scope: !5499)
!5518 = !DILocalVariable(name: "p", scope: !5499, file: !3, line: 758, type: !191)
!5519 = !DILocation(line: 758, column: 18, scope: !5499)
!5520 = !DILocalVariable(name: "__ret_warn_on", scope: !5505, file: !3, line: 760, type: !215)
!5521 = !DILocation(line: 760, column: 2, scope: !5505)
!5522 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !5504)
!5523 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !5507)
!5524 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !5507)
!5525 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !5507)
!5526 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !5507)
!5527 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !5504)
!5528 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !5503)
!5529 = !DILocation(line: 0, scope: !5505)
!5530 = !DILocation(line: 760, column: 2, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 760, column: 2)
!5532 = !DILocation(line: 760, column: 2, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 760, column: 2)
!5534 = !DILocation(line: 760, column: 2, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 760, column: 2)
!5536 = !DILocation(line: 760, column: 2, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 760, column: 2)
!5538 = !{i32 -2141800320, i32 -2141800291, i32 -2141800245, i32 -2141800187, i32 -2141800133, i32 -2141800079, i32 -2141800024, i32 -2141799993}
!5539 = !DILocation(line: 760, column: 2, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 760, column: 2)
!5541 = !{i32 -2141799592, i32 -2141799585, i32 -2141799533, i32 -2141799502, i32 -2141799472}
!5542 = !DILocation(line: 760, column: 2, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 760, column: 2)
!5544 = !DILocation(line: 762, column: 8, scope: !5499)
!5545 = !DILocation(line: 763, column: 16, scope: !5499)
!5546 = !DILocation(line: 763, column: 20, scope: !5499)
!5547 = !DILocation(line: 763, column: 28, scope: !5499)
!5548 = !DILocation(line: 763, column: 6, scope: !5499)
!5549 = !DILocation(line: 763, column: 4, scope: !5499)
!5550 = !DILocation(line: 764, column: 6, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 764, column: 6)
!5552 = !DILocation(line: 764, column: 10, scope: !5551)
!5553 = !DILocation(line: 764, column: 17, scope: !5551)
!5554 = !DILocation(line: 764, column: 6, scope: !5499)
!5555 = !DILocation(line: 765, column: 3, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 764, column: 36)
!5557 = !DILocation(line: 765, column: 7, scope: !5556)
!5558 = !DILocation(line: 765, column: 14, scope: !5556)
!5559 = !DILocation(line: 765, column: 32, scope: !5556)
!5560 = !DILocation(line: 765, column: 36, scope: !5556)
!5561 = !DILocation(line: 765, column: 39, scope: !5556)
!5562 = !DILocation(line: 766, column: 2, scope: !5556)
!5563 = !DILocalVariable(name: "q", scope: !5564, file: !3, line: 767, type: !194)
!5564 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 766, column: 9)
!5565 = !DILocation(line: 767, column: 8, scope: !5564)
!5566 = !DILocation(line: 767, column: 12, scope: !5564)
!5567 = !DILocalVariable(name: "cnt", scope: !5564, file: !3, line: 768, type: !215)
!5568 = !DILocation(line: 768, column: 7, scope: !5564)
!5569 = !DILocation(line: 768, column: 13, scope: !5564)
!5570 = !DILocalVariable(name: "a", scope: !5564, file: !3, line: 769, type: !195)
!5571 = !DILocation(line: 769, column: 7, scope: !5564)
!5572 = !DILocation(line: 771, column: 8, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 771, column: 7)
!5574 = !DILocation(line: 771, column: 12, scope: !5573)
!5575 = !DILocation(line: 771, column: 7, scope: !5564)
!5576 = !DILocation(line: 772, column: 4, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5573, file: !3, line: 771, column: 29)
!5578 = !DILocation(line: 772, column: 14, scope: !5577)
!5579 = !DILocation(line: 773, column: 12, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 772, column: 18)
!5581 = !DILocation(line: 773, column: 10, scope: !5580)
!5582 = !DILocation(line: 774, column: 10, scope: !5580)
!5583 = !DILocation(line: 775, column: 8, scope: !5580)
!5584 = !DILocation(line: 776, column: 9, scope: !5580)
!5585 = distinct !{!5585, !5576, !5586}
!5586 = !DILocation(line: 777, column: 4, scope: !5577)
!5587 = !DILocation(line: 778, column: 3, scope: !5577)
!5588 = !DILocation(line: 778, column: 14, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5573, file: !3, line: 778, column: 14)
!5590 = !DILocation(line: 778, column: 18, scope: !5589)
!5591 = !DILocation(line: 778, column: 34, scope: !5589)
!5592 = !DILocation(line: 778, column: 14, scope: !5573)
!5593 = !DILocation(line: 779, column: 4, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 778, column: 44)
!5595 = !DILocation(line: 779, column: 14, scope: !5594)
!5596 = !DILocation(line: 780, column: 9, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 779, column: 18)
!5598 = !DILocation(line: 780, column: 7, scope: !5597)
!5599 = !DILocation(line: 781, column: 10, scope: !5597)
!5600 = !DILocation(line: 781, column: 12, scope: !5597)
!5601 = !DILocation(line: 782, column: 10, scope: !5597)
!5602 = !DILocation(line: 782, column: 12, scope: !5597)
!5603 = !DILocation(line: 782, column: 22, scope: !5597)
!5604 = !DILocation(line: 781, column: 22, scope: !5597)
!5605 = !DILocation(line: 783, column: 10, scope: !5597)
!5606 = !DILocation(line: 783, column: 12, scope: !5597)
!5607 = !DILocation(line: 783, column: 22, scope: !5597)
!5608 = !DILocation(line: 782, column: 28, scope: !5597)
!5609 = !DILocation(line: 781, column: 9, scope: !5597)
!5610 = !DILocation(line: 781, column: 7, scope: !5597)
!5611 = !DILocation(line: 784, column: 5, scope: !5597)
!5612 = !DILocation(line: 785, column: 6, scope: !5597)
!5613 = distinct !{!5613, !5593, !5614}
!5614 = !DILocation(line: 786, column: 4, scope: !5594)
!5615 = !DILocation(line: 787, column: 3, scope: !5594)
!5616 = !DILocation(line: 788, column: 4, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 787, column: 10)
!5618 = !DILocation(line: 788, column: 14, scope: !5617)
!5619 = !DILocation(line: 789, column: 9, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 788, column: 18)
!5621 = !DILocation(line: 789, column: 7, scope: !5620)
!5622 = !DILocation(line: 790, column: 10, scope: !5620)
!5623 = !DILocation(line: 790, column: 12, scope: !5620)
!5624 = !DILocation(line: 791, column: 10, scope: !5620)
!5625 = !DILocation(line: 791, column: 12, scope: !5620)
!5626 = !DILocation(line: 791, column: 22, scope: !5620)
!5627 = !DILocation(line: 790, column: 22, scope: !5620)
!5628 = !DILocation(line: 792, column: 10, scope: !5620)
!5629 = !DILocation(line: 792, column: 12, scope: !5620)
!5630 = !DILocation(line: 792, column: 22, scope: !5620)
!5631 = !DILocation(line: 791, column: 28, scope: !5620)
!5632 = !DILocation(line: 790, column: 9, scope: !5620)
!5633 = !DILocation(line: 790, column: 7, scope: !5620)
!5634 = !DILocation(line: 793, column: 5, scope: !5620)
!5635 = !DILocation(line: 794, column: 6, scope: !5620)
!5636 = distinct !{!5636, !5616, !5637}
!5637 = !DILocation(line: 795, column: 4, scope: !5617)
!5638 = !DILocation(line: 799, column: 24, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 799, column: 6)
!5640 = !DILocation(line: 799, column: 6, scope: !5639)
!5641 = !DILocation(line: 799, column: 6, scope: !5499)
!5642 = !DILocation(line: 800, column: 20, scope: !5639)
!5643 = !DILocation(line: 800, column: 40, scope: !5639)
!5644 = !DILocation(line: 800, column: 24, scope: !5639)
!5645 = !DILocation(line: 800, column: 43, scope: !5639)
!5646 = !DILocation(line: 800, column: 3, scope: !5639)
!5647 = !DILocation(line: 801, column: 16, scope: !5499)
!5648 = !DILocation(line: 801, column: 2, scope: !5499)
!5649 = !DILocation(line: 802, column: 1, scope: !5499)
!5650 = distinct !DISubprogram(name: "notify_update", scope: !3, file: !3, line: 267, type: !4246, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5651 = !DILocalVariable(name: "vc", arg: 1, scope: !5650, file: !3, line: 267, type: !220)
!5652 = !DILocation(line: 267, column: 43, scope: !5650)
!5653 = !DILocalVariable(name: "param", scope: !5650, file: !3, line: 269, type: !5654)
!5654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vt_notifier_param", file: !5655, line: 151, size: 128, elements: !5656)
!5655 = !DIFile(filename: "./include/linux/vt_kern.h", directory: "/home/lizy2001/genbc/linux")
!5656 = !{!5657, !5658}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "vc", scope: !5654, file: !5655, line: 152, baseType: !220, size: 64)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !5654, file: !5655, line: 153, baseType: !7, size: 32, offset: 64)
!5659 = !DILocation(line: 269, column: 27, scope: !5650)
!5660 = !DILocation(line: 269, column: 35, scope: !5650)
!5661 = !DILocation(line: 269, column: 43, scope: !5650)
!5662 = !DILocation(line: 270, column: 59, scope: !5650)
!5663 = !DILocation(line: 270, column: 2, scope: !5650)
!5664 = !DILocation(line: 271, column: 1, scope: !5650)
!5665 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !5666)
!5666 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !5667)
!5667 = distinct !DILocation(line: 811, column: 2, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 811, column: 2)
!5669 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !5670)
!5670 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !5667)
!5671 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !5670)
!5672 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !5667)
!5673 = !DILocalVariable(name: "vc", arg: 1, scope: !4498, file: !3, line: 805, type: !220)
!5674 = !DILocation(line: 805, column: 37, scope: !4498)
!5675 = !DILocalVariable(name: "offset", arg: 2, scope: !4498, file: !3, line: 805, type: !215)
!5676 = !DILocation(line: 805, column: 45, scope: !4498)
!5677 = !DILocalVariable(name: "__ret_warn_on", scope: !5668, file: !3, line: 811, type: !215)
!5678 = !DILocation(line: 811, column: 2, scope: !5668)
!5679 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !5667)
!5680 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !5670)
!5681 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !5670)
!5682 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !5670)
!5683 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !5670)
!5684 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !5667)
!5685 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !5666)
!5686 = !DILocation(line: 0, scope: !5668)
!5687 = !DILocation(line: 811, column: 2, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 811, column: 2)
!5689 = !DILocation(line: 811, column: 2, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5688, file: !3, line: 811, column: 2)
!5691 = !DILocation(line: 811, column: 2, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 811, column: 2)
!5693 = !DILocation(line: 811, column: 2, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 811, column: 2)
!5695 = !{i32 -2141798590, i32 -2141798561, i32 -2141798515, i32 -2141798457, i32 -2141798403, i32 -2141798349, i32 -2141798294, i32 -2141798263}
!5696 = !DILocation(line: 811, column: 2, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 811, column: 2)
!5698 = !{i32 -2141797862, i32 -2141797855, i32 -2141797803, i32 -2141797772, i32 -2141797742}
!5699 = !DILocation(line: 811, column: 2, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 811, column: 2)
!5701 = !DILocation(line: 813, column: 6, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 813, column: 6)
!5703 = !DILocation(line: 813, column: 17, scope: !5702)
!5704 = !DILocation(line: 813, column: 23, scope: !5702)
!5705 = !DILocation(line: 813, column: 26, scope: !5702)
!5706 = !DILocation(line: 813, column: 37, scope: !5702)
!5707 = !DILocation(line: 813, column: 42, scope: !5702)
!5708 = !DILocation(line: 814, column: 6, scope: !5702)
!5709 = !DILocation(line: 814, column: 19, scope: !5702)
!5710 = !DILocation(line: 814, column: 23, scope: !5702)
!5711 = !DILocation(line: 814, column: 17, scope: !5702)
!5712 = !DILocation(line: 813, column: 6, scope: !4498)
!5713 = !DILocation(line: 815, column: 3, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 814, column: 42)
!5715 = !DILocation(line: 816, column: 25, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 816, column: 7)
!5717 = !DILocation(line: 816, column: 7, scope: !5716)
!5718 = !DILocation(line: 816, column: 7, scope: !5714)
!5719 = !DILocation(line: 817, column: 4, scope: !5716)
!5720 = !DILocation(line: 817, column: 8, scope: !5716)
!5721 = !DILocation(line: 817, column: 15, scope: !5716)
!5722 = !DILocation(line: 817, column: 24, scope: !5716)
!5723 = !DILocation(line: 817, column: 28, scope: !5716)
!5724 = !DILocation(line: 817, column: 33, scope: !5716)
!5725 = !DILocation(line: 817, column: 39, scope: !5716)
!5726 = !DILocation(line: 818, column: 17, scope: !5714)
!5727 = !DILocation(line: 818, column: 3, scope: !5714)
!5728 = !DILocation(line: 819, column: 2, scope: !5714)
!5729 = !DILocation(line: 821, column: 15, scope: !4498)
!5730 = !DILocation(line: 821, column: 13, scope: !4498)
!5731 = !DILocation(line: 823, column: 6, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 823, column: 6)
!5733 = !DILocation(line: 823, column: 13, scope: !5732)
!5734 = !DILocation(line: 823, column: 19, scope: !5732)
!5735 = !DILocation(line: 823, column: 22, scope: !5732)
!5736 = !DILocation(line: 823, column: 29, scope: !5732)
!5737 = !DILocation(line: 823, column: 34, scope: !5732)
!5738 = !DILocation(line: 824, column: 6, scope: !5732)
!5739 = !DILocation(line: 824, column: 15, scope: !5732)
!5740 = !DILocation(line: 824, column: 19, scope: !5732)
!5741 = !DILocation(line: 824, column: 13, scope: !5732)
!5742 = !DILocation(line: 823, column: 6, scope: !4498)
!5743 = !DILocalVariable(name: "new", scope: !5744, file: !3, line: 825, type: !192)
!5744 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 824, column: 38)
!5745 = !DILocation(line: 825, column: 18, scope: !5744)
!5746 = !DILocalVariable(name: "p", scope: !5744, file: !3, line: 826, type: !191)
!5747 = !DILocation(line: 826, column: 19, scope: !5744)
!5748 = !DILocation(line: 827, column: 17, scope: !5744)
!5749 = !DILocation(line: 827, column: 21, scope: !5744)
!5750 = !DILocation(line: 827, column: 7, scope: !5744)
!5751 = !DILocation(line: 827, column: 5, scope: !5744)
!5752 = !DILocation(line: 828, column: 9, scope: !5744)
!5753 = !DILocation(line: 828, column: 7, scope: !5744)
!5754 = !DILocation(line: 829, column: 9, scope: !5744)
!5755 = !DILocation(line: 829, column: 15, scope: !5744)
!5756 = !DILocation(line: 829, column: 19, scope: !5744)
!5757 = !DILocation(line: 829, column: 13, scope: !5744)
!5758 = !DILocation(line: 829, column: 7, scope: !5744)
!5759 = !DILocation(line: 830, column: 3, scope: !5744)
!5760 = !DILocation(line: 831, column: 25, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 831, column: 7)
!5762 = !DILocation(line: 831, column: 7, scope: !5761)
!5763 = !DILocation(line: 831, column: 7, scope: !5744)
!5764 = !DILocation(line: 832, column: 12, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 831, column: 30)
!5766 = !DILocation(line: 832, column: 19, scope: !5765)
!5767 = !DILocation(line: 832, column: 27, scope: !5765)
!5768 = !DILocation(line: 832, column: 31, scope: !5765)
!5769 = !DILocation(line: 832, column: 25, scope: !5765)
!5770 = !DILocation(line: 832, column: 11, scope: !5765)
!5771 = !DILocation(line: 832, column: 9, scope: !5765)
!5772 = !DILocation(line: 833, column: 12, scope: !5765)
!5773 = !DILocation(line: 833, column: 19, scope: !5765)
!5774 = !DILocation(line: 833, column: 27, scope: !5765)
!5775 = !DILocation(line: 833, column: 31, scope: !5765)
!5776 = !DILocation(line: 833, column: 25, scope: !5765)
!5777 = !DILocation(line: 833, column: 11, scope: !5765)
!5778 = !DILocation(line: 833, column: 9, scope: !5765)
!5779 = !DILocation(line: 834, column: 4, scope: !5765)
!5780 = !DILocation(line: 834, column: 8, scope: !5765)
!5781 = !DILocation(line: 834, column: 15, scope: !5765)
!5782 = !DILocation(line: 834, column: 24, scope: !5765)
!5783 = !DILocation(line: 834, column: 28, scope: !5765)
!5784 = !DILocation(line: 834, column: 33, scope: !5765)
!5785 = !DILocation(line: 834, column: 39, scope: !5765)
!5786 = !DILocation(line: 835, column: 3, scope: !5765)
!5787 = !DILocation(line: 836, column: 17, scope: !5744)
!5788 = !DILocation(line: 836, column: 3, scope: !5744)
!5789 = !DILocation(line: 837, column: 2, scope: !5744)
!5790 = !DILocation(line: 838, column: 1, scope: !4498)
!5791 = distinct !DISubprogram(name: "clear_buffer_attributes", scope: !3, file: !3, line: 973, type: !4246, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5792 = !DILocalVariable(name: "vc", arg: 1, scope: !5791, file: !3, line: 973, type: !220)
!5793 = !DILocation(line: 973, column: 46, scope: !5791)
!5794 = !DILocalVariable(name: "p", scope: !5791, file: !3, line: 975, type: !191)
!5795 = !DILocation(line: 975, column: 18, scope: !5791)
!5796 = !DILocation(line: 975, column: 40, scope: !5791)
!5797 = !DILocation(line: 975, column: 44, scope: !5791)
!5798 = !DILocation(line: 975, column: 22, scope: !5791)
!5799 = !DILocalVariable(name: "count", scope: !5791, file: !3, line: 976, type: !215)
!5800 = !DILocation(line: 976, column: 6, scope: !5791)
!5801 = !DILocation(line: 976, column: 14, scope: !5791)
!5802 = !DILocation(line: 976, column: 18, scope: !5791)
!5803 = !DILocation(line: 976, column: 36, scope: !5791)
!5804 = !DILocalVariable(name: "mask", scope: !5791, file: !3, line: 977, type: !215)
!5805 = !DILocation(line: 977, column: 6, scope: !5791)
!5806 = !DILocation(line: 977, column: 13, scope: !5791)
!5807 = !DILocation(line: 977, column: 17, scope: !5791)
!5808 = !DILocation(line: 977, column: 33, scope: !5791)
!5809 = !DILocation(line: 979, column: 2, scope: !5791)
!5810 = !DILocation(line: 979, column: 9, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5812, file: !3, line: 979, column: 2)
!5812 = distinct !DILexicalBlock(scope: !5791, file: !3, line: 979, column: 2)
!5813 = !DILocation(line: 979, column: 15, scope: !5811)
!5814 = !DILocation(line: 979, column: 2, scope: !5812)
!5815 = !DILocation(line: 980, column: 3, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 979, column: 34)
!5817 = !DILocation(line: 981, column: 2, scope: !5816)
!5818 = !DILocation(line: 979, column: 25, scope: !5811)
!5819 = !DILocation(line: 979, column: 30, scope: !5811)
!5820 = !DILocation(line: 979, column: 2, scope: !5811)
!5821 = distinct !{!5821, !5814, !5822}
!5822 = !DILocation(line: 981, column: 2, scope: !5812)
!5823 = !DILocation(line: 982, column: 1, scope: !5791)
!5824 = distinct !DISubprogram(name: "redraw_screen", scope: !3, file: !3, line: 984, type: !4242, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5825 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !5826)
!5826 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !5827)
!5827 = distinct !DILocation(line: 988, column: 2, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 988, column: 2)
!5829 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !5830)
!5830 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !5827)
!5831 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !5830)
!5832 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !5827)
!5833 = !DILocalVariable(name: "vc", arg: 1, scope: !5824, file: !3, line: 984, type: !220)
!5834 = !DILocation(line: 984, column: 36, scope: !5824)
!5835 = !DILocalVariable(name: "is_switch", arg: 2, scope: !5824, file: !3, line: 984, type: !215)
!5836 = !DILocation(line: 984, column: 44, scope: !5824)
!5837 = !DILocalVariable(name: "redraw", scope: !5824, file: !3, line: 986, type: !215)
!5838 = !DILocation(line: 986, column: 6, scope: !5824)
!5839 = !DILocalVariable(name: "__ret_warn_on", scope: !5828, file: !3, line: 988, type: !215)
!5840 = !DILocation(line: 988, column: 2, scope: !5828)
!5841 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !5827)
!5842 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !5830)
!5843 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !5830)
!5844 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !5830)
!5845 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !5830)
!5846 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !5827)
!5847 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !5826)
!5848 = !DILocation(line: 0, scope: !5828)
!5849 = !DILocation(line: 988, column: 2, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 988, column: 2)
!5851 = !DILocation(line: 988, column: 2, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5850, file: !3, line: 988, column: 2)
!5853 = !DILocation(line: 988, column: 2, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 988, column: 2)
!5855 = !DILocation(line: 988, column: 2, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 988, column: 2)
!5857 = !{i32 -2141791596, i32 -2141791567, i32 -2141791521, i32 -2141791463, i32 -2141791409, i32 -2141791355, i32 -2141791300, i32 -2141791269}
!5858 = !DILocation(line: 988, column: 2, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 988, column: 2)
!5860 = !{i32 -2141790868, i32 -2141790861, i32 -2141790809, i32 -2141790778, i32 -2141790748}
!5861 = !DILocation(line: 988, column: 2, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 988, column: 2)
!5863 = !DILocation(line: 990, column: 7, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 990, column: 6)
!5865 = !DILocation(line: 990, column: 6, scope: !5824)
!5866 = !DILocation(line: 993, column: 3, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 990, column: 11)
!5868 = !DILocation(line: 996, column: 6, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 996, column: 6)
!5870 = !DILocation(line: 996, column: 6, scope: !5824)
!5871 = !DILocalVariable(name: "old_vc", scope: !5872, file: !3, line: 997, type: !220)
!5872 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 996, column: 17)
!5873 = !DILocation(line: 997, column: 19, scope: !5872)
!5874 = !DILocation(line: 997, column: 36, scope: !5872)
!5875 = !DILocation(line: 997, column: 28, scope: !5872)
!5876 = !DILocation(line: 997, column: 48, scope: !5872)
!5877 = !DILocation(line: 998, column: 7, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 998, column: 7)
!5879 = !DILocation(line: 998, column: 17, scope: !5878)
!5880 = !DILocation(line: 998, column: 14, scope: !5878)
!5881 = !DILocation(line: 998, column: 7, scope: !5872)
!5882 = !DILocation(line: 999, column: 4, scope: !5878)
!5883 = !DILocation(line: 1000, column: 23, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 1000, column: 7)
!5885 = !DILocation(line: 1000, column: 8, scope: !5884)
!5886 = !DILocation(line: 1000, column: 7, scope: !5872)
!5887 = !DILocation(line: 1001, column: 11, scope: !5884)
!5888 = !DILocation(line: 1001, column: 4, scope: !5884)
!5889 = !DILocation(line: 1002, column: 24, scope: !5872)
!5890 = !DILocation(line: 1002, column: 4, scope: !5872)
!5891 = !DILocation(line: 1002, column: 8, scope: !5872)
!5892 = !DILocation(line: 1002, column: 22, scope: !5872)
!5893 = !DILocation(line: 1003, column: 16, scope: !5872)
!5894 = !DILocation(line: 1003, column: 20, scope: !5872)
!5895 = !DILocation(line: 1003, column: 14, scope: !5872)
!5896 = !DILocation(line: 1004, column: 15, scope: !5872)
!5897 = !DILocation(line: 1004, column: 3, scope: !5872)
!5898 = !DILocation(line: 1005, column: 23, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 1005, column: 7)
!5900 = !DILocation(line: 1005, column: 8, scope: !5899)
!5901 = !DILocation(line: 1005, column: 7, scope: !5872)
!5902 = !DILocation(line: 1006, column: 16, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 1005, column: 32)
!5904 = !DILocation(line: 1006, column: 4, scope: !5903)
!5905 = !DILocation(line: 1007, column: 15, scope: !5903)
!5906 = !DILocation(line: 1007, column: 4, scope: !5903)
!5907 = !DILocation(line: 1008, column: 3, scope: !5903)
!5908 = !DILocation(line: 1009, column: 7, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 1009, column: 7)
!5910 = !DILocation(line: 1009, column: 7, scope: !5872)
!5911 = !DILocation(line: 1010, column: 18, scope: !5909)
!5912 = !DILocation(line: 1010, column: 27, scope: !5909)
!5913 = !DILocation(line: 1010, column: 4, scope: !5909)
!5914 = !DILocation(line: 1011, column: 2, scope: !5872)
!5915 = !DILocation(line: 1012, column: 15, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 1011, column: 9)
!5917 = !DILocation(line: 1012, column: 3, scope: !5916)
!5918 = !DILocation(line: 1013, column: 10, scope: !5916)
!5919 = !DILocation(line: 1016, column: 6, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 1016, column: 6)
!5921 = !DILocation(line: 1016, column: 6, scope: !5824)
!5922 = !DILocalVariable(name: "update", scope: !5923, file: !3, line: 1017, type: !215)
!5923 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 1016, column: 14)
!5924 = !DILocation(line: 1017, column: 7, scope: !5923)
!5925 = !DILocalVariable(name: "old_was_color", scope: !5923, file: !3, line: 1018, type: !215)
!5926 = !DILocation(line: 1018, column: 7, scope: !5923)
!5927 = !DILocation(line: 1018, column: 23, scope: !5923)
!5928 = !DILocation(line: 1018, column: 27, scope: !5923)
!5929 = !DILocation(line: 1020, column: 14, scope: !5923)
!5930 = !DILocation(line: 1020, column: 3, scope: !5923)
!5931 = !DILocation(line: 1021, column: 12, scope: !5923)
!5932 = !DILocation(line: 1021, column: 16, scope: !5923)
!5933 = !DILocation(line: 1021, column: 23, scope: !5923)
!5934 = !DILocation(line: 1021, column: 34, scope: !5923)
!5935 = !DILocation(line: 1021, column: 10, scope: !5923)
!5936 = !DILocation(line: 1022, column: 15, scope: !5923)
!5937 = !DILocation(line: 1022, column: 3, scope: !5923)
!5938 = !DILocation(line: 1029, column: 7, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 1029, column: 7)
!5940 = !DILocation(line: 1029, column: 24, scope: !5939)
!5941 = !DILocation(line: 1029, column: 28, scope: !5939)
!5942 = !DILocation(line: 1029, column: 21, scope: !5939)
!5943 = !DILocation(line: 1029, column: 7, scope: !5923)
!5944 = !DILocation(line: 1030, column: 16, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5939, file: !3, line: 1029, column: 45)
!5946 = !DILocation(line: 1030, column: 4, scope: !5945)
!5947 = !DILocation(line: 1031, column: 28, scope: !5945)
!5948 = !DILocation(line: 1031, column: 4, scope: !5945)
!5949 = !DILocation(line: 1032, column: 3, scope: !5945)
!5950 = !DILocation(line: 1034, column: 7, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 1034, column: 7)
!5952 = !DILocation(line: 1034, column: 14, scope: !5951)
!5953 = !DILocation(line: 1034, column: 17, scope: !5951)
!5954 = !DILocation(line: 1034, column: 21, scope: !5951)
!5955 = !DILocation(line: 1034, column: 29, scope: !5951)
!5956 = !DILocation(line: 1034, column: 7, scope: !5923)
!5957 = !DILocation(line: 1035, column: 21, scope: !5951)
!5958 = !DILocation(line: 1035, column: 25, scope: !5951)
!5959 = !DILocation(line: 1035, column: 29, scope: !5951)
!5960 = !DILocation(line: 1035, column: 40, scope: !5951)
!5961 = !DILocation(line: 1035, column: 44, scope: !5951)
!5962 = !DILocation(line: 1035, column: 62, scope: !5951)
!5963 = !DILocation(line: 1035, column: 4, scope: !5951)
!5964 = !DILocation(line: 1036, column: 2, scope: !5923)
!5965 = !DILocation(line: 1037, column: 13, scope: !5824)
!5966 = !DILocation(line: 1037, column: 2, scope: !5824)
!5967 = !DILocation(line: 1038, column: 6, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 1038, column: 6)
!5969 = !DILocation(line: 1038, column: 6, scope: !5824)
!5970 = !DILocation(line: 1039, column: 3, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 1038, column: 17)
!5972 = !DILocation(line: 1040, column: 3, scope: !5971)
!5973 = !DILocation(line: 1041, column: 17, scope: !5971)
!5974 = !DILocation(line: 1041, column: 3, scope: !5971)
!5975 = !DILocation(line: 1042, column: 2, scope: !5971)
!5976 = !DILocation(line: 1043, column: 1, scope: !5824)
!5977 = distinct !DISubprogram(name: "con_is_visible", scope: !3, file: !3, line: 3978, type: !5278, scopeLine: 3979, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!5978 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !5979)
!5979 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !5980)
!5980 = distinct !DILocation(line: 3980, column: 2, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 3980, column: 2)
!5982 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !5983)
!5983 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !5980)
!5984 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !5983)
!5985 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !5980)
!5986 = !DILocalVariable(name: "vc", arg: 1, scope: !5977, file: !3, line: 3978, type: !4322)
!5987 = !DILocation(line: 3978, column: 43, scope: !5977)
!5988 = !DILocalVariable(name: "__ret_warn_on", scope: !5981, file: !3, line: 3980, type: !215)
!5989 = !DILocation(line: 3980, column: 2, scope: !5981)
!5990 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !5980)
!5991 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !5983)
!5992 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !5983)
!5993 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !5983)
!5994 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !5983)
!5995 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !5980)
!5996 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !5979)
!5997 = !DILocation(line: 0, scope: !5981)
!5998 = !DILocation(line: 3980, column: 2, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 3980, column: 2)
!6000 = !DILocation(line: 3980, column: 2, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 3980, column: 2)
!6002 = !DILocation(line: 3980, column: 2, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 3980, column: 2)
!6004 = !DILocation(line: 3980, column: 2, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 3980, column: 2)
!6006 = !{i32 -2141696640, i32 -2141696611, i32 -2141696565, i32 -2141696507, i32 -2141696453, i32 -2141696399, i32 -2141696344, i32 -2141696313}
!6007 = !DILocation(line: 3980, column: 2, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 3980, column: 2)
!6009 = !{i32 -2141695911, i32 -2141695904, i32 -2141695852, i32 -2141695821, i32 -2141695791}
!6010 = !DILocation(line: 3980, column: 2, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 3980, column: 2)
!6012 = !DILocation(line: 3982, column: 10, scope: !5977)
!6013 = !DILocation(line: 3982, column: 14, scope: !5977)
!6014 = !DILocation(line: 3982, column: 9, scope: !5977)
!6015 = !DILocation(line: 3982, column: 31, scope: !5977)
!6016 = !DILocation(line: 3982, column: 28, scope: !5977)
!6017 = !DILocation(line: 3982, column: 2, scope: !5977)
!6018 = distinct !DISubprogram(name: "save_screen", scope: !3, file: !3, line: 939, type: !4246, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6019 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !6020)
!6020 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !6021)
!6021 = distinct !DILocation(line: 941, column: 2, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 941, column: 2)
!6023 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !6024)
!6024 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !6021)
!6025 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !6024)
!6026 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !6021)
!6027 = !DILocalVariable(name: "vc", arg: 1, scope: !6018, file: !3, line: 939, type: !220)
!6028 = !DILocation(line: 939, column: 41, scope: !6018)
!6029 = !DILocalVariable(name: "__ret_warn_on", scope: !6022, file: !3, line: 941, type: !215)
!6030 = !DILocation(line: 941, column: 2, scope: !6022)
!6031 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !6021)
!6032 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !6024)
!6033 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !6024)
!6034 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !6024)
!6035 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !6024)
!6036 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !6021)
!6037 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !6020)
!6038 = !DILocation(line: 0, scope: !6022)
!6039 = !DILocation(line: 941, column: 2, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 941, column: 2)
!6041 = !DILocation(line: 941, column: 2, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6040, file: !3, line: 941, column: 2)
!6043 = !DILocation(line: 941, column: 2, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 941, column: 2)
!6045 = !DILocation(line: 941, column: 2, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 941, column: 2)
!6047 = !{i32 -2141794938, i32 -2141794909, i32 -2141794863, i32 -2141794805, i32 -2141794751, i32 -2141794697, i32 -2141794642, i32 -2141794611}
!6048 = !DILocation(line: 941, column: 2, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 941, column: 2)
!6050 = !{i32 -2141794210, i32 -2141794203, i32 -2141794151, i32 -2141794120, i32 -2141794090}
!6051 = !DILocation(line: 941, column: 2, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 941, column: 2)
!6053 = !DILocation(line: 943, column: 6, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 943, column: 6)
!6055 = !DILocation(line: 943, column: 10, scope: !6054)
!6056 = !DILocation(line: 943, column: 17, scope: !6054)
!6057 = !DILocation(line: 943, column: 6, scope: !6018)
!6058 = !DILocation(line: 944, column: 3, scope: !6054)
!6059 = !DILocation(line: 944, column: 7, scope: !6054)
!6060 = !DILocation(line: 944, column: 14, scope: !6054)
!6061 = !DILocation(line: 944, column: 30, scope: !6054)
!6062 = !DILocation(line: 945, column: 1, scope: !6018)
!6063 = distinct !DISubprogram(name: "set_origin", scope: !3, file: !3, line: 925, type: !4246, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6064 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !6065)
!6065 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !6066)
!6066 = distinct !DILocation(line: 927, column: 2, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 927, column: 2)
!6068 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !6069)
!6069 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !6066)
!6070 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !6069)
!6071 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !6066)
!6072 = !DILocalVariable(name: "vc", arg: 1, scope: !6063, file: !3, line: 925, type: !220)
!6073 = !DILocation(line: 925, column: 40, scope: !6063)
!6074 = !DILocalVariable(name: "__ret_warn_on", scope: !6067, file: !3, line: 927, type: !215)
!6075 = !DILocation(line: 927, column: 2, scope: !6067)
!6076 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !6066)
!6077 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !6069)
!6078 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !6069)
!6079 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !6069)
!6080 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !6069)
!6081 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !6066)
!6082 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !6065)
!6083 = !DILocation(line: 0, scope: !6067)
!6084 = !DILocation(line: 927, column: 2, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 927, column: 2)
!6086 = !DILocation(line: 927, column: 2, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 927, column: 2)
!6088 = !DILocation(line: 927, column: 2, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 927, column: 2)
!6090 = !DILocation(line: 927, column: 2, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 927, column: 2)
!6092 = !{i32 -2141796566, i32 -2141796537, i32 -2141796491, i32 -2141796433, i32 -2141796379, i32 -2141796325, i32 -2141796270, i32 -2141796239}
!6093 = !DILocation(line: 927, column: 2, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 927, column: 2)
!6095 = !{i32 -2141795838, i32 -2141795831, i32 -2141795779, i32 -2141795748, i32 -2141795718}
!6096 = !DILocation(line: 927, column: 2, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 927, column: 2)
!6098 = !DILocation(line: 929, column: 22, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 929, column: 6)
!6100 = !DILocation(line: 929, column: 7, scope: !6099)
!6101 = !DILocation(line: 929, column: 26, scope: !6099)
!6102 = !DILocation(line: 930, column: 7, scope: !6099)
!6103 = !DILocation(line: 930, column: 11, scope: !6099)
!6104 = !DILocation(line: 930, column: 18, scope: !6099)
!6105 = !DILocation(line: 930, column: 33, scope: !6099)
!6106 = !DILocation(line: 931, column: 7, scope: !6099)
!6107 = !DILocation(line: 931, column: 11, scope: !6099)
!6108 = !DILocation(line: 931, column: 18, scope: !6099)
!6109 = !DILocation(line: 931, column: 33, scope: !6099)
!6110 = !DILocation(line: 929, column: 6, scope: !6063)
!6111 = !DILocation(line: 932, column: 34, scope: !6099)
!6112 = !DILocation(line: 932, column: 38, scope: !6099)
!6113 = !DILocation(line: 932, column: 19, scope: !6099)
!6114 = !DILocation(line: 932, column: 3, scope: !6099)
!6115 = !DILocation(line: 932, column: 7, scope: !6099)
!6116 = !DILocation(line: 932, column: 17, scope: !6099)
!6117 = !DILocation(line: 933, column: 26, scope: !6063)
!6118 = !DILocation(line: 933, column: 30, scope: !6063)
!6119 = !DILocation(line: 933, column: 2, scope: !6063)
!6120 = !DILocation(line: 933, column: 6, scope: !6063)
!6121 = !DILocation(line: 933, column: 24, scope: !6063)
!6122 = !DILocation(line: 934, column: 19, scope: !6063)
!6123 = !DILocation(line: 934, column: 23, scope: !6063)
!6124 = !DILocation(line: 934, column: 35, scope: !6063)
!6125 = !DILocation(line: 934, column: 39, scope: !6063)
!6126 = !DILocation(line: 934, column: 33, scope: !6063)
!6127 = !DILocation(line: 934, column: 2, scope: !6063)
!6128 = !DILocation(line: 934, column: 6, scope: !6063)
!6129 = !DILocation(line: 934, column: 17, scope: !6063)
!6130 = !DILocation(line: 935, column: 15, scope: !6063)
!6131 = !DILocation(line: 935, column: 19, scope: !6063)
!6132 = !DILocation(line: 935, column: 31, scope: !6063)
!6133 = !DILocation(line: 935, column: 35, scope: !6063)
!6134 = !DILocation(line: 935, column: 49, scope: !6063)
!6135 = !DILocation(line: 935, column: 53, scope: !6063)
!6136 = !DILocation(line: 935, column: 59, scope: !6063)
!6137 = !DILocation(line: 935, column: 47, scope: !6063)
!6138 = !DILocation(line: 935, column: 29, scope: !6063)
!6139 = !DILocation(line: 936, column: 7, scope: !6063)
!6140 = !DILocation(line: 936, column: 11, scope: !6063)
!6141 = !DILocation(line: 936, column: 17, scope: !6063)
!6142 = !DILocation(line: 936, column: 5, scope: !6063)
!6143 = !DILocation(line: 936, column: 3, scope: !6063)
!6144 = !DILocation(line: 935, column: 61, scope: !6063)
!6145 = !DILocation(line: 935, column: 2, scope: !6063)
!6146 = !DILocation(line: 935, column: 6, scope: !6063)
!6147 = !DILocation(line: 935, column: 13, scope: !6063)
!6148 = !DILocation(line: 937, column: 1, scope: !6063)
!6149 = distinct !DISubprogram(name: "set_palette", scope: !3, file: !3, line: 4471, type: !4246, scopeLine: 4472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6150 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !6151)
!6151 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !6152)
!6152 = distinct !DILocation(line: 4473, column: 2, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 4473, column: 2)
!6154 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !6155)
!6155 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !6152)
!6156 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !6155)
!6157 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !6152)
!6158 = !DILocalVariable(name: "vc", arg: 1, scope: !6149, file: !3, line: 4471, type: !220)
!6159 = !DILocation(line: 4471, column: 41, scope: !6149)
!6160 = !DILocalVariable(name: "__ret_warn_on", scope: !6153, file: !3, line: 4473, type: !215)
!6161 = !DILocation(line: 4473, column: 2, scope: !6153)
!6162 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !6152)
!6163 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !6155)
!6164 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !6155)
!6165 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !6155)
!6166 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !6155)
!6167 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !6152)
!6168 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !6151)
!6169 = !DILocation(line: 0, scope: !6153)
!6170 = !DILocation(line: 4473, column: 2, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 4473, column: 2)
!6172 = !DILocation(line: 4473, column: 2, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 4473, column: 2)
!6174 = !DILocation(line: 4473, column: 2, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 4473, column: 2)
!6176 = !DILocation(line: 4473, column: 2, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 4473, column: 2)
!6178 = !{i32 -2141680349, i32 -2141680320, i32 -2141680274, i32 -2141680216, i32 -2141680162, i32 -2141680108, i32 -2141680053, i32 -2141680022}
!6179 = !DILocation(line: 4473, column: 2, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 4473, column: 2)
!6181 = !{i32 -2141679620, i32 -2141679613, i32 -2141679561, i32 -2141679530, i32 -2141679500}
!6182 = !DILocation(line: 4473, column: 2, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 4473, column: 2)
!6184 = !DILocation(line: 4475, column: 6, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 4475, column: 6)
!6186 = !DILocation(line: 4475, column: 10, scope: !6185)
!6187 = !DILocation(line: 4475, column: 18, scope: !6185)
!6188 = !DILocation(line: 4475, column: 33, scope: !6185)
!6189 = !DILocation(line: 4475, column: 36, scope: !6185)
!6190 = !DILocation(line: 4475, column: 40, scope: !6185)
!6191 = !DILocation(line: 4475, column: 47, scope: !6185)
!6192 = !DILocation(line: 4475, column: 6, scope: !6149)
!6193 = !DILocation(line: 4476, column: 3, scope: !6185)
!6194 = !DILocation(line: 4476, column: 7, scope: !6185)
!6195 = !DILocation(line: 4476, column: 14, scope: !6185)
!6196 = !DILocation(line: 4476, column: 30, scope: !6185)
!6197 = !DILocation(line: 4477, column: 1, scope: !6149)
!6198 = distinct !DISubprogram(name: "update_attr", scope: !3, file: !3, line: 745, type: !4246, scopeLine: 746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6199 = !DILocalVariable(name: "vc", arg: 1, scope: !6198, file: !3, line: 745, type: !220)
!6200 = !DILocation(line: 745, column: 41, scope: !6198)
!6201 = !DILocation(line: 747, column: 27, scope: !6198)
!6202 = !DILocation(line: 747, column: 31, scope: !6198)
!6203 = !DILocation(line: 747, column: 35, scope: !6198)
!6204 = !DILocation(line: 747, column: 41, scope: !6198)
!6205 = !DILocation(line: 747, column: 48, scope: !6198)
!6206 = !DILocation(line: 747, column: 52, scope: !6198)
!6207 = !DILocation(line: 747, column: 58, scope: !6198)
!6208 = !DILocation(line: 748, column: 16, scope: !6198)
!6209 = !DILocation(line: 748, column: 20, scope: !6198)
!6210 = !DILocation(line: 748, column: 26, scope: !6198)
!6211 = !DILocation(line: 748, column: 33, scope: !6198)
!6212 = !DILocation(line: 748, column: 37, scope: !6198)
!6213 = !DILocation(line: 748, column: 43, scope: !6198)
!6214 = !DILocation(line: 749, column: 16, scope: !6198)
!6215 = !DILocation(line: 749, column: 20, scope: !6198)
!6216 = !DILocation(line: 749, column: 26, scope: !6198)
!6217 = !DILocation(line: 749, column: 36, scope: !6198)
!6218 = !DILocation(line: 749, column: 40, scope: !6198)
!6219 = !DILocation(line: 749, column: 34, scope: !6198)
!6220 = !DILocation(line: 749, column: 52, scope: !6198)
!6221 = !DILocation(line: 749, column: 56, scope: !6198)
!6222 = !DILocation(line: 749, column: 62, scope: !6198)
!6223 = !DILocation(line: 747, column: 16, scope: !6198)
!6224 = !DILocation(line: 747, column: 2, scope: !6198)
!6225 = !DILocation(line: 747, column: 6, scope: !6198)
!6226 = !DILocation(line: 747, column: 14, scope: !6198)
!6227 = !DILocation(line: 750, column: 46, scope: !6198)
!6228 = !DILocation(line: 750, column: 50, scope: !6198)
!6229 = !DILocation(line: 750, column: 54, scope: !6198)
!6230 = !DILocation(line: 750, column: 60, scope: !6198)
!6231 = !DILocation(line: 751, column: 17, scope: !6198)
!6232 = !DILocation(line: 751, column: 21, scope: !6198)
!6233 = !DILocation(line: 751, column: 27, scope: !6198)
!6234 = !DILocation(line: 752, column: 5, scope: !6198)
!6235 = !DILocation(line: 752, column: 9, scope: !6198)
!6236 = !DILocation(line: 750, column: 35, scope: !6198)
!6237 = !DILocation(line: 752, column: 28, scope: !6198)
!6238 = !DILocation(line: 750, column: 32, scope: !6198)
!6239 = !DILocation(line: 750, column: 28, scope: !6198)
!6240 = !DILocation(line: 750, column: 2, scope: !6198)
!6241 = !DILocation(line: 750, column: 6, scope: !6198)
!6242 = !DILocation(line: 750, column: 26, scope: !6198)
!6243 = !DILocation(line: 753, column: 1, scope: !6198)
!6244 = distinct !DISubprogram(name: "set_leds", scope: !6245, file: !6245, line: 78, type: !1978, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6245 = !DIFile(filename: "./include/linux/kbd_kern.h", directory: "/home/lizy2001/genbc/linux")
!6246 = !DILocation(line: 80, column: 2, scope: !6244)
!6247 = !DILocation(line: 81, column: 1, scope: !6244)
!6248 = distinct !DISubprogram(name: "vc_cons_allocated", scope: !3, file: !3, line: 1049, type: !6249, scopeLine: 1050, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6249 = !DISubroutineType(types: !6250)
!6250 = !{!215, !7}
!6251 = !DILocalVariable(name: "i", arg: 1, scope: !6248, file: !3, line: 1049, type: !7)
!6252 = !DILocation(line: 1049, column: 36, scope: !6248)
!6253 = !DILocation(line: 1051, column: 10, scope: !6248)
!6254 = !DILocation(line: 1051, column: 12, scope: !6248)
!6255 = !DILocation(line: 1051, column: 30, scope: !6248)
!6256 = !DILocation(line: 1051, column: 41, scope: !6248)
!6257 = !DILocation(line: 1051, column: 33, scope: !6248)
!6258 = !DILocation(line: 1051, column: 44, scope: !6248)
!6259 = !DILocation(line: 0, scope: !6248)
!6260 = !DILocation(line: 1051, column: 2, scope: !6248)
!6261 = distinct !DISubprogram(name: "vc_allocate", scope: !3, file: !3, line: 1109, type: !6249, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6262 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !6263)
!6263 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !6264)
!6264 = distinct !DILocation(line: 1115, column: 2, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1115, column: 2)
!6266 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !6267)
!6267 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !6264)
!6268 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !6267)
!6269 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !6264)
!6270 = !DILocalVariable(name: "currcons", arg: 1, scope: !6261, file: !3, line: 1109, type: !7)
!6271 = !DILocation(line: 1109, column: 30, scope: !6261)
!6272 = !DILocalVariable(name: "param", scope: !6261, file: !3, line: 1111, type: !5654)
!6273 = !DILocation(line: 1111, column: 27, scope: !6261)
!6274 = !DILocalVariable(name: "vc", scope: !6261, file: !3, line: 1112, type: !220)
!6275 = !DILocation(line: 1112, column: 18, scope: !6261)
!6276 = !DILocalVariable(name: "err", scope: !6261, file: !3, line: 1113, type: !215)
!6277 = !DILocation(line: 1113, column: 6, scope: !6261)
!6278 = !DILocalVariable(name: "__ret_warn_on", scope: !6265, file: !3, line: 1115, type: !215)
!6279 = !DILocation(line: 1115, column: 2, scope: !6265)
!6280 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !6264)
!6281 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !6267)
!6282 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !6267)
!6283 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !6267)
!6284 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !6267)
!6285 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !6264)
!6286 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !6263)
!6287 = !DILocation(line: 0, scope: !6265)
!6288 = !DILocation(line: 1115, column: 2, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 1115, column: 2)
!6290 = !DILocation(line: 1115, column: 2, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 1115, column: 2)
!6292 = !DILocation(line: 1115, column: 2, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1115, column: 2)
!6294 = !DILocation(line: 1115, column: 2, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1115, column: 2)
!6296 = !{i32 -2141788510, i32 -2141788481, i32 -2141788435, i32 -2141788377, i32 -2141788323, i32 -2141788269, i32 -2141788214, i32 -2141788183}
!6297 = !DILocation(line: 1115, column: 2, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1115, column: 2)
!6299 = !{i32 -2141787781, i32 -2141787774, i32 -2141787722, i32 -2141787691, i32 -2141787661}
!6300 = !DILocation(line: 1115, column: 2, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1115, column: 2)
!6302 = !DILocation(line: 1117, column: 6, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1117, column: 6)
!6304 = !DILocation(line: 1117, column: 15, scope: !6303)
!6305 = !DILocation(line: 1117, column: 6, scope: !6261)
!6306 = !DILocation(line: 1118, column: 3, scope: !6303)
!6307 = !DILocation(line: 1120, column: 14, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1120, column: 6)
!6309 = !DILocation(line: 1120, column: 6, scope: !6308)
!6310 = !DILocation(line: 1120, column: 24, scope: !6308)
!6311 = !DILocation(line: 1120, column: 6, scope: !6261)
!6312 = !DILocation(line: 1121, column: 3, scope: !6308)
!6313 = !DILocation(line: 1129, column: 18, scope: !6261)
!6314 = !DILocation(line: 1129, column: 16, scope: !6261)
!6315 = !DILocation(line: 1129, column: 8, scope: !6261)
!6316 = !DILocation(line: 1129, column: 11, scope: !6261)
!6317 = !DILocation(line: 1130, column: 7, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1130, column: 6)
!6319 = !DILocation(line: 1130, column: 6, scope: !6261)
!6320 = !DILocation(line: 1131, column: 3, scope: !6318)
!6321 = !DILocation(line: 1133, column: 24, scope: !6261)
!6322 = !DILocation(line: 1133, column: 10, scope: !6261)
!6323 = !DILocation(line: 1133, column: 2, scope: !6261)
!6324 = !DILocation(line: 1133, column: 20, scope: !6261)
!6325 = !DILocation(line: 1133, column: 22, scope: !6261)
!6326 = !DILocation(line: 1134, column: 17, scope: !6261)
!6327 = !DILocation(line: 1134, column: 21, scope: !6261)
!6328 = !DILocation(line: 1134, column: 2, scope: !6261)
!6329 = !DILocation(line: 1135, column: 2, scope: !6261)
!6330 = !DILocation(line: 1135, column: 6, scope: !6261)
!6331 = !DILocation(line: 1135, column: 11, scope: !6261)
!6332 = !DILocation(line: 1135, column: 15, scope: !6261)
!6333 = !DILocation(line: 1136, column: 2, scope: !6261)
!6334 = !DILocation(line: 1136, column: 2, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1136, column: 2)
!6336 = !DILocation(line: 1138, column: 14, scope: !6261)
!6337 = !DILocation(line: 1138, column: 18, scope: !6261)
!6338 = !DILocation(line: 1138, column: 2, scope: !6261)
!6339 = !DILocation(line: 1140, column: 8, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1140, column: 6)
!6341 = !DILocation(line: 1140, column: 12, scope: !6340)
!6342 = !DILocation(line: 1140, column: 7, scope: !6340)
!6343 = !DILocation(line: 1140, column: 6, scope: !6261)
!6344 = !DILocation(line: 1141, column: 26, scope: !6340)
!6345 = !DILocation(line: 1141, column: 3, scope: !6340)
!6346 = !DILocation(line: 1143, column: 6, scope: !6261)
!6347 = !DILocation(line: 1144, column: 6, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1144, column: 6)
!6349 = !DILocation(line: 1144, column: 10, scope: !6348)
!6350 = !DILocation(line: 1144, column: 18, scope: !6348)
!6351 = !DILocation(line: 1144, column: 30, scope: !6348)
!6352 = !DILocation(line: 1144, column: 33, scope: !6348)
!6353 = !DILocation(line: 1144, column: 37, scope: !6348)
!6354 = !DILocation(line: 1144, column: 45, scope: !6348)
!6355 = !DILocation(line: 1144, column: 57, scope: !6348)
!6356 = !DILocation(line: 1145, column: 6, scope: !6348)
!6357 = !DILocation(line: 1145, column: 10, scope: !6348)
!6358 = !DILocation(line: 1145, column: 28, scope: !6348)
!6359 = !DILocation(line: 1145, column: 47, scope: !6348)
!6360 = !DILocation(line: 1145, column: 51, scope: !6348)
!6361 = !DILocation(line: 1145, column: 55, scope: !6348)
!6362 = !DILocation(line: 1144, column: 6, scope: !6261)
!6363 = !DILocation(line: 1146, column: 3, scope: !6348)
!6364 = !DILocation(line: 1147, column: 6, scope: !6261)
!6365 = !DILocation(line: 1148, column: 29, scope: !6261)
!6366 = !DILocation(line: 1148, column: 33, scope: !6261)
!6367 = !DILocation(line: 1148, column: 21, scope: !6261)
!6368 = !DILocation(line: 1148, column: 2, scope: !6261)
!6369 = !DILocation(line: 1148, column: 6, scope: !6261)
!6370 = !DILocation(line: 1148, column: 19, scope: !6261)
!6371 = !DILocation(line: 1149, column: 7, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1149, column: 6)
!6373 = !DILocation(line: 1149, column: 11, scope: !6372)
!6374 = !DILocation(line: 1149, column: 6, scope: !6261)
!6375 = !DILocation(line: 1150, column: 3, scope: !6372)
!6376 = !DILocation(line: 1154, column: 6, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 1154, column: 6)
!6378 = !DILocation(line: 1154, column: 28, scope: !6377)
!6379 = !DILocation(line: 1154, column: 6, scope: !6261)
!6380 = !DILocation(line: 1155, column: 25, scope: !6377)
!6381 = !DILocation(line: 1155, column: 3, scope: !6377)
!6382 = !DILocation(line: 1157, column: 10, scope: !6261)
!6383 = !DILocation(line: 1157, column: 14, scope: !6261)
!6384 = !DILocation(line: 1157, column: 18, scope: !6261)
!6385 = !DILocation(line: 1157, column: 27, scope: !6261)
!6386 = !DILocation(line: 1157, column: 31, scope: !6261)
!6387 = !DILocation(line: 1157, column: 2, scope: !6261)
!6388 = !DILocation(line: 1158, column: 17, scope: !6261)
!6389 = !DILocation(line: 1158, column: 2, scope: !6261)
!6390 = !DILocation(line: 1159, column: 61, scope: !6261)
!6391 = !DILocation(line: 1159, column: 2, scope: !6261)
!6392 = !DILocation(line: 1161, column: 2, scope: !6261)
!6393 = !DILabel(scope: !6261, name: "err_free", file: !3, line: 1162)
!6394 = !DILocation(line: 1162, column: 1, scope: !6261)
!6395 = !DILocation(line: 1163, column: 16, scope: !6261)
!6396 = !DILocation(line: 1163, column: 2, scope: !6261)
!6397 = !DILocation(line: 1164, column: 8, scope: !6261)
!6398 = !DILocation(line: 1164, column: 2, scope: !6261)
!6399 = !DILocation(line: 1165, column: 10, scope: !6261)
!6400 = !DILocation(line: 1165, column: 2, scope: !6261)
!6401 = !DILocation(line: 1165, column: 20, scope: !6261)
!6402 = !DILocation(line: 1165, column: 22, scope: !6261)
!6403 = !DILocation(line: 1166, column: 9, scope: !6261)
!6404 = !DILocation(line: 1166, column: 2, scope: !6261)
!6405 = !DILocation(line: 1167, column: 1, scope: !6261)
!6406 = distinct !DISubprogram(name: "kzalloc", scope: !154, file: !154, line: 662, type: !6407, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{!216, !417, !199}
!6409 = !DILocalVariable(name: "s", arg: 1, scope: !6410, file: !154, line: 445, type: !1047)
!6410 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !154, file: !154, line: 445, type: !6411, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6411 = !DISubroutineType(types: !6412)
!6412 = !{!216, !1047, !199, !417}
!6413 = !DILocation(line: 445, column: 72, scope: !6410, inlinedAt: !6414)
!6414 = distinct !DILocation(line: 552, column: 10, scope: !6415, inlinedAt: !6418)
!6415 = distinct !DILexicalBlock(scope: !6416, file: !154, line: 540, column: 34)
!6416 = distinct !DILexicalBlock(scope: !6417, file: !154, line: 540, column: 6)
!6417 = distinct !DISubprogram(name: "kmalloc", scope: !154, file: !154, line: 538, type: !6407, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6418 = distinct !DILocation(line: 664, column: 9, scope: !6406)
!6419 = !DILocalVariable(name: "flags", arg: 2, scope: !6410, file: !154, line: 446, type: !199)
!6420 = !DILocation(line: 446, column: 9, scope: !6410, inlinedAt: !6414)
!6421 = !DILocalVariable(name: "size", arg: 3, scope: !6410, file: !154, line: 446, type: !417)
!6422 = !DILocation(line: 446, column: 23, scope: !6410, inlinedAt: !6414)
!6423 = !DILocalVariable(name: "ret", scope: !6410, file: !154, line: 448, type: !216)
!6424 = !DILocation(line: 448, column: 8, scope: !6410, inlinedAt: !6414)
!6425 = !DILocalVariable(name: "flags", arg: 1, scope: !6426, file: !154, line: 318, type: !199)
!6426 = distinct !DISubprogram(name: "kmalloc_type", scope: !154, file: !154, line: 318, type: !6427, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6427 = !DISubroutineType(types: !6428)
!6428 = !{!153, !199}
!6429 = !DILocation(line: 318, column: 67, scope: !6426, inlinedAt: !6430)
!6430 = distinct !DILocation(line: 553, column: 20, scope: !6415, inlinedAt: !6418)
!6431 = !DILocalVariable(name: "size", arg: 1, scope: !6432, file: !154, line: 346, type: !417)
!6432 = distinct !DISubprogram(name: "kmalloc_index", scope: !154, file: !154, line: 346, type: !6433, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6433 = !DISubroutineType(types: !6434)
!6434 = !{!7, !417}
!6435 = !DILocation(line: 346, column: 58, scope: !6432, inlinedAt: !6436)
!6436 = distinct !DILocation(line: 547, column: 11, scope: !6415, inlinedAt: !6418)
!6437 = !DILocalVariable(name: "size", arg: 1, scope: !6438, file: !154, line: 472, type: !417)
!6438 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !154, file: !154, line: 472, type: !6439, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6439 = !DISubroutineType(types: !6440)
!6440 = !{!216, !417, !199, !7}
!6441 = !DILocation(line: 472, column: 28, scope: !6438, inlinedAt: !6442)
!6442 = distinct !DILocation(line: 481, column: 9, scope: !6443, inlinedAt: !6444)
!6443 = distinct !DISubprogram(name: "kmalloc_large", scope: !154, file: !154, line: 478, type: !6407, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6444 = distinct !DILocation(line: 545, column: 11, scope: !6445, inlinedAt: !6418)
!6445 = distinct !DILexicalBlock(scope: !6415, file: !154, line: 544, column: 7)
!6446 = !DILocalVariable(name: "flags", arg: 2, scope: !6438, file: !154, line: 472, type: !199)
!6447 = !DILocation(line: 472, column: 40, scope: !6438, inlinedAt: !6442)
!6448 = !DILocalVariable(name: "order", arg: 3, scope: !6438, file: !154, line: 472, type: !7)
!6449 = !DILocation(line: 472, column: 60, scope: !6438, inlinedAt: !6442)
!6450 = !DILocalVariable(name: "size", arg: 1, scope: !6443, file: !154, line: 478, type: !417)
!6451 = !DILocation(line: 478, column: 51, scope: !6443, inlinedAt: !6444)
!6452 = !DILocalVariable(name: "flags", arg: 2, scope: !6443, file: !154, line: 478, type: !199)
!6453 = !DILocation(line: 478, column: 63, scope: !6443, inlinedAt: !6444)
!6454 = !DILocalVariable(name: "order", scope: !6443, file: !154, line: 480, type: !7)
!6455 = !DILocation(line: 480, column: 15, scope: !6443, inlinedAt: !6444)
!6456 = !DILocalVariable(name: "size", arg: 1, scope: !6417, file: !154, line: 538, type: !417)
!6457 = !DILocation(line: 538, column: 45, scope: !6417, inlinedAt: !6418)
!6458 = !DILocalVariable(name: "flags", arg: 2, scope: !6417, file: !154, line: 538, type: !199)
!6459 = !DILocation(line: 538, column: 57, scope: !6417, inlinedAt: !6418)
!6460 = !DILocalVariable(name: "index", scope: !6415, file: !154, line: 542, type: !7)
!6461 = !DILocation(line: 542, column: 16, scope: !6415, inlinedAt: !6418)
!6462 = !DILocalVariable(name: "size", arg: 1, scope: !6406, file: !154, line: 662, type: !417)
!6463 = !DILocation(line: 662, column: 36, scope: !6406)
!6464 = !DILocalVariable(name: "flags", arg: 2, scope: !6406, file: !154, line: 662, type: !199)
!6465 = !DILocation(line: 662, column: 48, scope: !6406)
!6466 = !DILocation(line: 664, column: 17, scope: !6406)
!6467 = !DILocation(line: 664, column: 23, scope: !6406)
!6468 = !DILocation(line: 664, column: 29, scope: !6406)
!6469 = !DILocation(line: 540, column: 27, scope: !6416, inlinedAt: !6418)
!6470 = !DILocation(line: 540, column: 6, scope: !6416, inlinedAt: !6418)
!6471 = !DILocation(line: 540, column: 6, scope: !6417, inlinedAt: !6418)
!6472 = !DILocation(line: 544, column: 7, scope: !6445, inlinedAt: !6418)
!6473 = !DILocation(line: 544, column: 12, scope: !6445, inlinedAt: !6418)
!6474 = !DILocation(line: 544, column: 7, scope: !6415, inlinedAt: !6418)
!6475 = !DILocation(line: 545, column: 25, scope: !6445, inlinedAt: !6418)
!6476 = !DILocation(line: 545, column: 31, scope: !6445, inlinedAt: !6418)
!6477 = !DILocation(line: 480, column: 33, scope: !6443, inlinedAt: !6444)
!6478 = !DILocation(line: 480, column: 23, scope: !6443, inlinedAt: !6444)
!6479 = !DILocation(line: 481, column: 29, scope: !6443, inlinedAt: !6444)
!6480 = !DILocation(line: 481, column: 35, scope: !6443, inlinedAt: !6444)
!6481 = !DILocation(line: 481, column: 42, scope: !6443, inlinedAt: !6444)
!6482 = !DILocation(line: 474, column: 23, scope: !6438, inlinedAt: !6442)
!6483 = !DILocation(line: 474, column: 29, scope: !6438, inlinedAt: !6442)
!6484 = !DILocation(line: 474, column: 36, scope: !6438, inlinedAt: !6442)
!6485 = !DILocation(line: 474, column: 9, scope: !6438, inlinedAt: !6442)
!6486 = !DILocation(line: 545, column: 4, scope: !6445, inlinedAt: !6418)
!6487 = !DILocation(line: 547, column: 25, scope: !6415, inlinedAt: !6418)
!6488 = !DILocation(line: 348, column: 7, scope: !6489, inlinedAt: !6436)
!6489 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 348, column: 6)
!6490 = !DILocation(line: 348, column: 6, scope: !6432, inlinedAt: !6436)
!6491 = !DILocation(line: 349, column: 3, scope: !6489, inlinedAt: !6436)
!6492 = !DILocation(line: 351, column: 6, scope: !6493, inlinedAt: !6436)
!6493 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 351, column: 6)
!6494 = !DILocation(line: 351, column: 11, scope: !6493, inlinedAt: !6436)
!6495 = !DILocation(line: 351, column: 6, scope: !6432, inlinedAt: !6436)
!6496 = !DILocation(line: 352, column: 3, scope: !6493, inlinedAt: !6436)
!6497 = !DILocation(line: 354, column: 32, scope: !6498, inlinedAt: !6436)
!6498 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 354, column: 6)
!6499 = !DILocation(line: 354, column: 37, scope: !6498, inlinedAt: !6436)
!6500 = !DILocation(line: 354, column: 42, scope: !6498, inlinedAt: !6436)
!6501 = !DILocation(line: 354, column: 45, scope: !6498, inlinedAt: !6436)
!6502 = !DILocation(line: 354, column: 50, scope: !6498, inlinedAt: !6436)
!6503 = !DILocation(line: 354, column: 6, scope: !6432, inlinedAt: !6436)
!6504 = !DILocation(line: 355, column: 3, scope: !6498, inlinedAt: !6436)
!6505 = !DILocation(line: 356, column: 32, scope: !6506, inlinedAt: !6436)
!6506 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 356, column: 6)
!6507 = !DILocation(line: 356, column: 37, scope: !6506, inlinedAt: !6436)
!6508 = !DILocation(line: 356, column: 43, scope: !6506, inlinedAt: !6436)
!6509 = !DILocation(line: 356, column: 46, scope: !6506, inlinedAt: !6436)
!6510 = !DILocation(line: 356, column: 51, scope: !6506, inlinedAt: !6436)
!6511 = !DILocation(line: 356, column: 6, scope: !6432, inlinedAt: !6436)
!6512 = !DILocation(line: 357, column: 3, scope: !6506, inlinedAt: !6436)
!6513 = !DILocation(line: 358, column: 6, scope: !6514, inlinedAt: !6436)
!6514 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 358, column: 6)
!6515 = !DILocation(line: 358, column: 11, scope: !6514, inlinedAt: !6436)
!6516 = !DILocation(line: 358, column: 6, scope: !6432, inlinedAt: !6436)
!6517 = !DILocation(line: 358, column: 26, scope: !6514, inlinedAt: !6436)
!6518 = !DILocation(line: 359, column: 6, scope: !6519, inlinedAt: !6436)
!6519 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 359, column: 6)
!6520 = !DILocation(line: 359, column: 11, scope: !6519, inlinedAt: !6436)
!6521 = !DILocation(line: 359, column: 6, scope: !6432, inlinedAt: !6436)
!6522 = !DILocation(line: 359, column: 26, scope: !6519, inlinedAt: !6436)
!6523 = !DILocation(line: 360, column: 6, scope: !6524, inlinedAt: !6436)
!6524 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 360, column: 6)
!6525 = !DILocation(line: 360, column: 11, scope: !6524, inlinedAt: !6436)
!6526 = !DILocation(line: 360, column: 6, scope: !6432, inlinedAt: !6436)
!6527 = !DILocation(line: 360, column: 26, scope: !6524, inlinedAt: !6436)
!6528 = !DILocation(line: 361, column: 6, scope: !6529, inlinedAt: !6436)
!6529 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 361, column: 6)
!6530 = !DILocation(line: 361, column: 11, scope: !6529, inlinedAt: !6436)
!6531 = !DILocation(line: 361, column: 6, scope: !6432, inlinedAt: !6436)
!6532 = !DILocation(line: 361, column: 26, scope: !6529, inlinedAt: !6436)
!6533 = !DILocation(line: 362, column: 6, scope: !6534, inlinedAt: !6436)
!6534 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 362, column: 6)
!6535 = !DILocation(line: 362, column: 11, scope: !6534, inlinedAt: !6436)
!6536 = !DILocation(line: 362, column: 6, scope: !6432, inlinedAt: !6436)
!6537 = !DILocation(line: 362, column: 26, scope: !6534, inlinedAt: !6436)
!6538 = !DILocation(line: 363, column: 6, scope: !6539, inlinedAt: !6436)
!6539 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 363, column: 6)
!6540 = !DILocation(line: 363, column: 11, scope: !6539, inlinedAt: !6436)
!6541 = !DILocation(line: 363, column: 6, scope: !6432, inlinedAt: !6436)
!6542 = !DILocation(line: 363, column: 26, scope: !6539, inlinedAt: !6436)
!6543 = !DILocation(line: 364, column: 6, scope: !6544, inlinedAt: !6436)
!6544 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 364, column: 6)
!6545 = !DILocation(line: 364, column: 11, scope: !6544, inlinedAt: !6436)
!6546 = !DILocation(line: 364, column: 6, scope: !6432, inlinedAt: !6436)
!6547 = !DILocation(line: 364, column: 26, scope: !6544, inlinedAt: !6436)
!6548 = !DILocation(line: 365, column: 6, scope: !6549, inlinedAt: !6436)
!6549 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 365, column: 6)
!6550 = !DILocation(line: 365, column: 11, scope: !6549, inlinedAt: !6436)
!6551 = !DILocation(line: 365, column: 6, scope: !6432, inlinedAt: !6436)
!6552 = !DILocation(line: 365, column: 26, scope: !6549, inlinedAt: !6436)
!6553 = !DILocation(line: 366, column: 6, scope: !6554, inlinedAt: !6436)
!6554 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 366, column: 6)
!6555 = !DILocation(line: 366, column: 11, scope: !6554, inlinedAt: !6436)
!6556 = !DILocation(line: 366, column: 6, scope: !6432, inlinedAt: !6436)
!6557 = !DILocation(line: 366, column: 26, scope: !6554, inlinedAt: !6436)
!6558 = !DILocation(line: 367, column: 6, scope: !6559, inlinedAt: !6436)
!6559 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 367, column: 6)
!6560 = !DILocation(line: 367, column: 11, scope: !6559, inlinedAt: !6436)
!6561 = !DILocation(line: 367, column: 6, scope: !6432, inlinedAt: !6436)
!6562 = !DILocation(line: 367, column: 26, scope: !6559, inlinedAt: !6436)
!6563 = !DILocation(line: 368, column: 6, scope: !6564, inlinedAt: !6436)
!6564 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 368, column: 6)
!6565 = !DILocation(line: 368, column: 11, scope: !6564, inlinedAt: !6436)
!6566 = !DILocation(line: 368, column: 6, scope: !6432, inlinedAt: !6436)
!6567 = !DILocation(line: 368, column: 26, scope: !6564, inlinedAt: !6436)
!6568 = !DILocation(line: 369, column: 6, scope: !6569, inlinedAt: !6436)
!6569 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 369, column: 6)
!6570 = !DILocation(line: 369, column: 11, scope: !6569, inlinedAt: !6436)
!6571 = !DILocation(line: 369, column: 6, scope: !6432, inlinedAt: !6436)
!6572 = !DILocation(line: 369, column: 26, scope: !6569, inlinedAt: !6436)
!6573 = !DILocation(line: 370, column: 6, scope: !6574, inlinedAt: !6436)
!6574 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 370, column: 6)
!6575 = !DILocation(line: 370, column: 11, scope: !6574, inlinedAt: !6436)
!6576 = !DILocation(line: 370, column: 6, scope: !6432, inlinedAt: !6436)
!6577 = !DILocation(line: 370, column: 26, scope: !6574, inlinedAt: !6436)
!6578 = !DILocation(line: 371, column: 6, scope: !6579, inlinedAt: !6436)
!6579 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 371, column: 6)
!6580 = !DILocation(line: 371, column: 11, scope: !6579, inlinedAt: !6436)
!6581 = !DILocation(line: 371, column: 6, scope: !6432, inlinedAt: !6436)
!6582 = !DILocation(line: 371, column: 26, scope: !6579, inlinedAt: !6436)
!6583 = !DILocation(line: 372, column: 6, scope: !6584, inlinedAt: !6436)
!6584 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 372, column: 6)
!6585 = !DILocation(line: 372, column: 11, scope: !6584, inlinedAt: !6436)
!6586 = !DILocation(line: 372, column: 6, scope: !6432, inlinedAt: !6436)
!6587 = !DILocation(line: 372, column: 26, scope: !6584, inlinedAt: !6436)
!6588 = !DILocation(line: 373, column: 6, scope: !6589, inlinedAt: !6436)
!6589 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 373, column: 6)
!6590 = !DILocation(line: 373, column: 11, scope: !6589, inlinedAt: !6436)
!6591 = !DILocation(line: 373, column: 6, scope: !6432, inlinedAt: !6436)
!6592 = !DILocation(line: 373, column: 26, scope: !6589, inlinedAt: !6436)
!6593 = !DILocation(line: 374, column: 6, scope: !6594, inlinedAt: !6436)
!6594 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 374, column: 6)
!6595 = !DILocation(line: 374, column: 11, scope: !6594, inlinedAt: !6436)
!6596 = !DILocation(line: 374, column: 6, scope: !6432, inlinedAt: !6436)
!6597 = !DILocation(line: 374, column: 26, scope: !6594, inlinedAt: !6436)
!6598 = !DILocation(line: 375, column: 6, scope: !6599, inlinedAt: !6436)
!6599 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 375, column: 6)
!6600 = !DILocation(line: 375, column: 11, scope: !6599, inlinedAt: !6436)
!6601 = !DILocation(line: 375, column: 6, scope: !6432, inlinedAt: !6436)
!6602 = !DILocation(line: 375, column: 27, scope: !6599, inlinedAt: !6436)
!6603 = !DILocation(line: 376, column: 6, scope: !6604, inlinedAt: !6436)
!6604 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 376, column: 6)
!6605 = !DILocation(line: 376, column: 11, scope: !6604, inlinedAt: !6436)
!6606 = !DILocation(line: 376, column: 6, scope: !6432, inlinedAt: !6436)
!6607 = !DILocation(line: 376, column: 32, scope: !6604, inlinedAt: !6436)
!6608 = !DILocation(line: 377, column: 6, scope: !6609, inlinedAt: !6436)
!6609 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 377, column: 6)
!6610 = !DILocation(line: 377, column: 11, scope: !6609, inlinedAt: !6436)
!6611 = !DILocation(line: 377, column: 6, scope: !6432, inlinedAt: !6436)
!6612 = !DILocation(line: 377, column: 32, scope: !6609, inlinedAt: !6436)
!6613 = !DILocation(line: 378, column: 6, scope: !6614, inlinedAt: !6436)
!6614 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 378, column: 6)
!6615 = !DILocation(line: 378, column: 11, scope: !6614, inlinedAt: !6436)
!6616 = !DILocation(line: 378, column: 6, scope: !6432, inlinedAt: !6436)
!6617 = !DILocation(line: 378, column: 32, scope: !6614, inlinedAt: !6436)
!6618 = !DILocation(line: 379, column: 6, scope: !6619, inlinedAt: !6436)
!6619 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 379, column: 6)
!6620 = !DILocation(line: 379, column: 11, scope: !6619, inlinedAt: !6436)
!6621 = !DILocation(line: 379, column: 6, scope: !6432, inlinedAt: !6436)
!6622 = !DILocation(line: 379, column: 33, scope: !6619, inlinedAt: !6436)
!6623 = !DILocation(line: 380, column: 6, scope: !6624, inlinedAt: !6436)
!6624 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 380, column: 6)
!6625 = !DILocation(line: 380, column: 11, scope: !6624, inlinedAt: !6436)
!6626 = !DILocation(line: 380, column: 6, scope: !6432, inlinedAt: !6436)
!6627 = !DILocation(line: 380, column: 33, scope: !6624, inlinedAt: !6436)
!6628 = !DILocation(line: 381, column: 6, scope: !6629, inlinedAt: !6436)
!6629 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 381, column: 6)
!6630 = !DILocation(line: 381, column: 11, scope: !6629, inlinedAt: !6436)
!6631 = !DILocation(line: 381, column: 6, scope: !6432, inlinedAt: !6436)
!6632 = !DILocation(line: 381, column: 33, scope: !6629, inlinedAt: !6436)
!6633 = !DILocation(line: 382, column: 2, scope: !6634, inlinedAt: !6436)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !154, line: 382, column: 2)
!6635 = distinct !DILexicalBlock(scope: !6432, file: !154, line: 382, column: 2)
!6636 = !{i32 -2142682856, i32 -2142682827, i32 -2142682781, i32 -2142682723, i32 -2142682669, i32 -2142682615, i32 -2142682560, i32 -2142682529}
!6637 = !DILocation(line: 382, column: 2, scope: !6638, inlinedAt: !6436)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !154, line: 382, column: 2)
!6639 = distinct !DILexicalBlock(scope: !6635, file: !154, line: 382, column: 2)
!6640 = !{i32 -2142682086, i32 -2142682079, i32 -2142682025, i32 -2142681994, i32 -2142681964}
!6641 = !DILocation(line: 382, column: 2, scope: !6639, inlinedAt: !6436)
!6642 = !DILocation(line: 386, column: 1, scope: !6432, inlinedAt: !6436)
!6643 = !DILocation(line: 547, column: 9, scope: !6415, inlinedAt: !6418)
!6644 = !DILocation(line: 549, column: 8, scope: !6645, inlinedAt: !6418)
!6645 = distinct !DILexicalBlock(scope: !6415, file: !154, line: 549, column: 7)
!6646 = !DILocation(line: 549, column: 7, scope: !6415, inlinedAt: !6418)
!6647 = !DILocation(line: 550, column: 4, scope: !6645, inlinedAt: !6418)
!6648 = !DILocation(line: 553, column: 33, scope: !6415, inlinedAt: !6418)
!6649 = !DILocation(line: 325, column: 6, scope: !6650, inlinedAt: !6430)
!6650 = distinct !DILexicalBlock(scope: !6426, file: !154, line: 325, column: 6)
!6651 = !DILocation(line: 325, column: 6, scope: !6426, inlinedAt: !6430)
!6652 = !DILocation(line: 326, column: 3, scope: !6650, inlinedAt: !6430)
!6653 = !DILocation(line: 332, column: 9, scope: !6426, inlinedAt: !6430)
!6654 = !DILocation(line: 332, column: 15, scope: !6426, inlinedAt: !6430)
!6655 = !DILocation(line: 332, column: 2, scope: !6426, inlinedAt: !6430)
!6656 = !DILocation(line: 336, column: 1, scope: !6426, inlinedAt: !6430)
!6657 = !DILocation(line: 553, column: 5, scope: !6415, inlinedAt: !6418)
!6658 = !DILocation(line: 553, column: 41, scope: !6415, inlinedAt: !6418)
!6659 = !DILocation(line: 554, column: 5, scope: !6415, inlinedAt: !6418)
!6660 = !DILocation(line: 554, column: 12, scope: !6415, inlinedAt: !6418)
!6661 = !DILocation(line: 448, column: 31, scope: !6410, inlinedAt: !6414)
!6662 = !DILocation(line: 448, column: 34, scope: !6410, inlinedAt: !6414)
!6663 = !DILocation(line: 448, column: 14, scope: !6410, inlinedAt: !6414)
!6664 = !DILocation(line: 450, column: 22, scope: !6410, inlinedAt: !6414)
!6665 = !DILocation(line: 450, column: 25, scope: !6410, inlinedAt: !6414)
!6666 = !DILocation(line: 450, column: 30, scope: !6410, inlinedAt: !6414)
!6667 = !DILocation(line: 450, column: 36, scope: !6410, inlinedAt: !6414)
!6668 = !DILocation(line: 450, column: 8, scope: !6410, inlinedAt: !6414)
!6669 = !DILocation(line: 450, column: 6, scope: !6410, inlinedAt: !6414)
!6670 = !DILocation(line: 451, column: 9, scope: !6410, inlinedAt: !6414)
!6671 = !DILocation(line: 552, column: 3, scope: !6415, inlinedAt: !6418)
!6672 = !DILocation(line: 557, column: 19, scope: !6417, inlinedAt: !6418)
!6673 = !DILocation(line: 557, column: 25, scope: !6417, inlinedAt: !6418)
!6674 = !DILocation(line: 557, column: 9, scope: !6417, inlinedAt: !6418)
!6675 = !DILocation(line: 557, column: 2, scope: !6417, inlinedAt: !6418)
!6676 = !DILocation(line: 558, column: 1, scope: !6417, inlinedAt: !6418)
!6677 = !DILocation(line: 664, column: 2, scope: !6406)
!6678 = distinct !DISubprogram(name: "__init_work", scope: !111, file: !111, line: 215, type: !6679, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6679 = !DISubroutineType(types: !6680)
!6680 = !{null, !277, !215}
!6681 = !DILocalVariable(name: "work", arg: 1, scope: !6678, file: !111, line: 215, type: !277)
!6682 = !DILocation(line: 215, column: 52, scope: !6678)
!6683 = !DILocalVariable(name: "onstack", arg: 2, scope: !6678, file: !111, line: 215, type: !215)
!6684 = !DILocation(line: 215, column: 62, scope: !6678)
!6685 = !DILocation(line: 215, column: 73, scope: !6678)
!6686 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !6687, file: !6687, line: 33, type: !6688, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6687 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6688 = !DISubroutineType(types: !6689)
!6689 = !{null, !270}
!6690 = !DILocalVariable(name: "list", arg: 1, scope: !6686, file: !6687, line: 33, type: !270)
!6691 = !DILocation(line: 33, column: 53, scope: !6686)
!6692 = !DILocation(line: 35, column: 2, scope: !6686)
!6693 = !DILocation(line: 35, column: 2, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6686, file: !6687, line: 35, column: 2)
!6695 = !DILocation(line: 35, column: 2, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6694, file: !6687, line: 35, column: 2)
!6697 = !DILocation(line: 35, column: 2, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6694, file: !6687, line: 35, column: 2)
!6699 = !DILocation(line: 36, column: 15, scope: !6686)
!6700 = !DILocation(line: 36, column: 2, scope: !6686)
!6701 = !DILocation(line: 36, column: 8, scope: !6686)
!6702 = !DILocation(line: 36, column: 13, scope: !6686)
!6703 = !DILocation(line: 37, column: 1, scope: !6686)
!6704 = distinct !DISubprogram(name: "visual_init", scope: !3, file: !3, line: 1054, type: !6705, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6705 = !DISubroutineType(types: !6706)
!6706 = !{null, !220, !215, !215}
!6707 = !DILocalVariable(name: "vc", arg: 1, scope: !6704, file: !3, line: 1054, type: !220)
!6708 = !DILocation(line: 1054, column: 41, scope: !6704)
!6709 = !DILocalVariable(name: "num", arg: 2, scope: !6704, file: !3, line: 1054, type: !215)
!6710 = !DILocation(line: 1054, column: 49, scope: !6704)
!6711 = !DILocalVariable(name: "init", arg: 3, scope: !6704, file: !3, line: 1054, type: !215)
!6712 = !DILocation(line: 1054, column: 58, scope: !6704)
!6713 = !DILocation(line: 1057, column: 6, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 1057, column: 6)
!6715 = !DILocation(line: 1057, column: 10, scope: !6714)
!6716 = !DILocation(line: 1057, column: 6, scope: !6704)
!6717 = !DILocation(line: 1058, column: 14, scope: !6714)
!6718 = !DILocation(line: 1058, column: 18, scope: !6714)
!6719 = !DILocation(line: 1058, column: 25, scope: !6714)
!6720 = !DILocation(line: 1058, column: 3, scope: !6714)
!6721 = !DILocation(line: 1059, column: 14, scope: !6704)
!6722 = !DILocation(line: 1059, column: 2, scope: !6704)
!6723 = !DILocation(line: 1059, column: 6, scope: !6704)
!6724 = !DILocation(line: 1059, column: 12, scope: !6704)
!6725 = !DILocation(line: 1061, column: 21, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 1061, column: 6)
!6727 = !DILocation(line: 1061, column: 6, scope: !6726)
!6728 = !DILocation(line: 1061, column: 6, scope: !6704)
!6729 = !DILocation(line: 1062, column: 30, scope: !6726)
!6730 = !DILocation(line: 1062, column: 15, scope: !6726)
!6731 = !DILocation(line: 1062, column: 3, scope: !6726)
!6732 = !DILocation(line: 1062, column: 7, scope: !6726)
!6733 = !DILocation(line: 1062, column: 13, scope: !6726)
!6734 = !DILocation(line: 1064, column: 15, scope: !6704)
!6735 = !DILocation(line: 1064, column: 19, scope: !6704)
!6736 = !DILocation(line: 1064, column: 26, scope: !6704)
!6737 = !DILocation(line: 1064, column: 2, scope: !6704)
!6738 = !DILocation(line: 1065, column: 15, scope: !6704)
!6739 = !DILocation(line: 1065, column: 2, scope: !6704)
!6740 = !DILocation(line: 1065, column: 6, scope: !6704)
!6741 = !DILocation(line: 1065, column: 13, scope: !6704)
!6742 = !DILocation(line: 1066, column: 2, scope: !6704)
!6743 = !DILocation(line: 1066, column: 6, scope: !6704)
!6744 = !DILocation(line: 1066, column: 20, scope: !6704)
!6745 = !DILocation(line: 1067, column: 6, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 1067, column: 6)
!6747 = !DILocation(line: 1067, column: 10, scope: !6746)
!6748 = !DILocation(line: 1067, column: 6, scope: !6704)
!6749 = !DILocation(line: 1068, column: 19, scope: !6746)
!6750 = !DILocation(line: 1068, column: 3, scope: !6746)
!6751 = !DILocation(line: 1069, column: 28, scope: !6704)
!6752 = !DILocation(line: 1069, column: 32, scope: !6704)
!6753 = !DILocation(line: 1069, column: 2, scope: !6704)
!6754 = !DILocation(line: 1069, column: 6, scope: !6704)
!6755 = !DILocation(line: 1069, column: 25, scope: !6704)
!6756 = !DILocation(line: 1070, column: 2, scope: !6704)
!6757 = !DILocation(line: 1070, column: 6, scope: !6704)
!6758 = !DILocation(line: 1070, column: 21, scope: !6704)
!6759 = !DILocation(line: 1071, column: 2, scope: !6704)
!6760 = !DILocation(line: 1071, column: 6, scope: !6704)
!6761 = !DILocation(line: 1071, column: 22, scope: !6704)
!6762 = !DILocation(line: 1072, column: 2, scope: !6704)
!6763 = !DILocation(line: 1072, column: 6, scope: !6704)
!6764 = !DILocation(line: 1072, column: 25, scope: !6704)
!6765 = !DILocation(line: 1073, column: 2, scope: !6704)
!6766 = !DILocation(line: 1073, column: 6, scope: !6704)
!6767 = !DILocation(line: 1073, column: 22, scope: !6704)
!6768 = !DILocation(line: 1074, column: 2, scope: !6704)
!6769 = !DILocation(line: 1074, column: 6, scope: !6704)
!6770 = !DILocation(line: 1074, column: 22, scope: !6704)
!6771 = !DILocation(line: 1075, column: 2, scope: !6704)
!6772 = !DILocation(line: 1075, column: 6, scope: !6704)
!6773 = !DILocation(line: 1075, column: 13, scope: !6704)
!6774 = !DILocation(line: 1075, column: 22, scope: !6704)
!6775 = !DILocation(line: 1075, column: 26, scope: !6704)
!6776 = !DILocation(line: 1076, column: 7, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 1076, column: 6)
!6778 = !DILocation(line: 1076, column: 11, scope: !6777)
!6779 = !DILocation(line: 1076, column: 6, scope: !6704)
!6780 = !DILocation(line: 1077, column: 28, scope: !6777)
!6781 = !DILocation(line: 1077, column: 32, scope: !6777)
!6782 = !DILocation(line: 1077, column: 3, scope: !6777)
!6783 = !DILocation(line: 1077, column: 7, scope: !6777)
!6784 = !DILocation(line: 1077, column: 26, scope: !6777)
!6785 = !DILocation(line: 1078, column: 29, scope: !6704)
!6786 = !DILocation(line: 1078, column: 33, scope: !6704)
!6787 = !DILocation(line: 1078, column: 2, scope: !6704)
!6788 = !DILocation(line: 1078, column: 6, scope: !6704)
!6789 = !DILocation(line: 1078, column: 27, scope: !6704)
!6790 = !DILocation(line: 1079, column: 20, scope: !6704)
!6791 = !DILocation(line: 1079, column: 24, scope: !6704)
!6792 = !DILocation(line: 1079, column: 32, scope: !6704)
!6793 = !DILocation(line: 1079, column: 2, scope: !6704)
!6794 = !DILocation(line: 1079, column: 6, scope: !6704)
!6795 = !DILocation(line: 1079, column: 18, scope: !6704)
!6796 = !DILocation(line: 1080, column: 26, scope: !6704)
!6797 = !DILocation(line: 1080, column: 30, scope: !6704)
!6798 = !DILocation(line: 1080, column: 40, scope: !6704)
!6799 = !DILocation(line: 1080, column: 44, scope: !6704)
!6800 = !DILocation(line: 1080, column: 38, scope: !6704)
!6801 = !DILocation(line: 1080, column: 2, scope: !6704)
!6802 = !DILocation(line: 1080, column: 6, scope: !6704)
!6803 = !DILocation(line: 1080, column: 24, scope: !6704)
!6804 = !DILocation(line: 1081, column: 1, scope: !6704)
!6805 = !DILocalVariable(name: "vc", arg: 1, scope: !4696, file: !3, line: 3417, type: !220)
!6806 = !DILocation(line: 3417, column: 37, scope: !4696)
!6807 = !DILocalVariable(name: "rows", arg: 2, scope: !4696, file: !3, line: 3417, type: !7)
!6808 = !DILocation(line: 3417, column: 54, scope: !4696)
!6809 = !DILocalVariable(name: "cols", arg: 3, scope: !4696, file: !3, line: 3418, type: !7)
!6810 = !DILocation(line: 3418, column: 20, scope: !4696)
!6811 = !DILocalVariable(name: "do_clear", arg: 4, scope: !4696, file: !3, line: 3418, type: !215)
!6812 = !DILocation(line: 3418, column: 30, scope: !4696)
!6813 = !DILocalVariable(name: "j", scope: !4696, file: !3, line: 3420, type: !215)
!6814 = !DILocation(line: 3420, column: 6, scope: !4696)
!6815 = !DILocalVariable(name: "k", scope: !4696, file: !3, line: 3420, type: !215)
!6816 = !DILocation(line: 3420, column: 9, scope: !4696)
!6817 = !DILocation(line: 3422, column: 16, scope: !4696)
!6818 = !DILocation(line: 3422, column: 2, scope: !4696)
!6819 = !DILocation(line: 3422, column: 6, scope: !4696)
!6820 = !DILocation(line: 3422, column: 14, scope: !4696)
!6821 = !DILocation(line: 3423, column: 16, scope: !4696)
!6822 = !DILocation(line: 3423, column: 2, scope: !4696)
!6823 = !DILocation(line: 3423, column: 6, scope: !4696)
!6824 = !DILocation(line: 3423, column: 14, scope: !4696)
!6825 = !DILocation(line: 3424, column: 20, scope: !4696)
!6826 = !DILocation(line: 3424, column: 25, scope: !4696)
!6827 = !DILocation(line: 3424, column: 2, scope: !4696)
!6828 = !DILocation(line: 3424, column: 6, scope: !4696)
!6829 = !DILocation(line: 3424, column: 18, scope: !4696)
!6830 = !DILocation(line: 3425, column: 26, scope: !4696)
!6831 = !DILocation(line: 3425, column: 30, scope: !4696)
!6832 = !DILocation(line: 3425, column: 40, scope: !4696)
!6833 = !DILocation(line: 3425, column: 44, scope: !4696)
!6834 = !DILocation(line: 3425, column: 38, scope: !4696)
!6835 = !DILocation(line: 3425, column: 2, scope: !4696)
!6836 = !DILocation(line: 3425, column: 6, scope: !4696)
!6837 = !DILocation(line: 3425, column: 24, scope: !4696)
!6838 = !DILocation(line: 3427, column: 13, scope: !4696)
!6839 = !DILocation(line: 3427, column: 2, scope: !4696)
!6840 = !DILocation(line: 3428, column: 15, scope: !4696)
!6841 = !DILocation(line: 3428, column: 19, scope: !4696)
!6842 = !DILocation(line: 3428, column: 2, scope: !4696)
!6843 = !DILocation(line: 3428, column: 6, scope: !4696)
!6844 = !DILocation(line: 3428, column: 13, scope: !4696)
!6845 = !DILocation(line: 3429, column: 11, scope: !4696)
!6846 = !DILocation(line: 3429, column: 2, scope: !4696)
!6847 = !DILocation(line: 3430, column: 10, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 3430, column: 2)
!6849 = !DILocation(line: 3430, column: 8, scope: !6848)
!6850 = !DILocation(line: 3430, column: 7, scope: !6848)
!6851 = !DILocation(line: 3430, column: 14, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 3430, column: 2)
!6853 = !DILocation(line: 3430, column: 15, scope: !6852)
!6854 = !DILocation(line: 3430, column: 2, scope: !6848)
!6855 = !DILocation(line: 3431, column: 37, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 3430, column: 25)
!6857 = !DILocation(line: 3431, column: 25, scope: !6856)
!6858 = !DILocation(line: 3431, column: 3, scope: !6856)
!6859 = !DILocation(line: 3431, column: 7, scope: !6856)
!6860 = !DILocation(line: 3431, column: 19, scope: !6856)
!6861 = !DILocation(line: 3431, column: 23, scope: !6856)
!6862 = !DILocation(line: 3432, column: 37, scope: !6856)
!6863 = !DILocation(line: 3432, column: 25, scope: !6856)
!6864 = !DILocation(line: 3432, column: 3, scope: !6856)
!6865 = !DILocation(line: 3432, column: 7, scope: !6856)
!6866 = !DILocation(line: 3432, column: 19, scope: !6856)
!6867 = !DILocation(line: 3432, column: 23, scope: !6856)
!6868 = !DILocation(line: 3433, column: 37, scope: !6856)
!6869 = !DILocation(line: 3433, column: 25, scope: !6856)
!6870 = !DILocation(line: 3433, column: 3, scope: !6856)
!6871 = !DILocation(line: 3433, column: 7, scope: !6856)
!6872 = !DILocation(line: 3433, column: 19, scope: !6856)
!6873 = !DILocation(line: 3433, column: 23, scope: !6856)
!6874 = !DILocation(line: 3434, column: 2, scope: !6856)
!6875 = !DILocation(line: 3430, column: 21, scope: !6852)
!6876 = !DILocation(line: 3430, column: 2, scope: !6852)
!6877 = distinct !{!6877, !6854, !6878}
!6878 = !DILocation(line: 3434, column: 2, scope: !6848)
!6879 = !DILocation(line: 3435, column: 27, scope: !4696)
!6880 = !DILocation(line: 3435, column: 2, scope: !4696)
!6881 = !DILocation(line: 3435, column: 6, scope: !4696)
!6882 = !DILocation(line: 3435, column: 25, scope: !4696)
!6883 = !DILocation(line: 3436, column: 27, scope: !4696)
!6884 = !DILocation(line: 3436, column: 2, scope: !4696)
!6885 = !DILocation(line: 3436, column: 6, scope: !4696)
!6886 = !DILocation(line: 3436, column: 25, scope: !4696)
!6887 = !DILocation(line: 3437, column: 27, scope: !4696)
!6888 = !DILocation(line: 3437, column: 2, scope: !4696)
!6889 = !DILocation(line: 3437, column: 6, scope: !4696)
!6890 = !DILocation(line: 3437, column: 25, scope: !4696)
!6891 = !DILocation(line: 3438, column: 2, scope: !4696)
!6892 = !DILocation(line: 3438, column: 6, scope: !4696)
!6893 = !DILocation(line: 3438, column: 25, scope: !4696)
!6894 = !DILocation(line: 3439, column: 2, scope: !4696)
!6895 = !DILocation(line: 3439, column: 2, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 3439, column: 2)
!6897 = !DILocation(line: 3440, column: 17, scope: !4696)
!6898 = !DILocation(line: 3440, column: 21, scope: !4696)
!6899 = !DILocation(line: 3440, column: 2, scope: !4696)
!6900 = !DILocation(line: 3441, column: 1, scope: !4696)
!6901 = distinct !DISubprogram(name: "visual_deinit", scope: !3, file: !3, line: 1084, type: !4246, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6902 = !DILocalVariable(name: "vc", arg: 1, scope: !6901, file: !3, line: 1084, type: !220)
!6903 = !DILocation(line: 1084, column: 43, scope: !6901)
!6904 = !DILocation(line: 1086, column: 2, scope: !6901)
!6905 = !DILocation(line: 1086, column: 6, scope: !6901)
!6906 = !DILocation(line: 1086, column: 13, scope: !6901)
!6907 = !DILocation(line: 1086, column: 24, scope: !6901)
!6908 = !DILocation(line: 1087, column: 13, scope: !6901)
!6909 = !DILocation(line: 1087, column: 17, scope: !6901)
!6910 = !DILocation(line: 1087, column: 24, scope: !6901)
!6911 = !DILocation(line: 1087, column: 2, scope: !6901)
!6912 = !DILocation(line: 1088, column: 1, scope: !6901)
!6913 = distinct !DISubprogram(name: "vc_resize", scope: !3, file: !3, line: 1344, type: !6914, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{!215, !220, !7, !7}
!6916 = !DILocalVariable(name: "vc", arg: 1, scope: !6913, file: !3, line: 1344, type: !220)
!6917 = !DILocation(line: 1344, column: 31, scope: !6913)
!6918 = !DILocalVariable(name: "cols", arg: 2, scope: !6913, file: !3, line: 1344, type: !7)
!6919 = !DILocation(line: 1344, column: 48, scope: !6913)
!6920 = !DILocalVariable(name: "rows", arg: 3, scope: !6913, file: !3, line: 1344, type: !7)
!6921 = !DILocation(line: 1344, column: 67, scope: !6913)
!6922 = !DILocation(line: 1346, column: 22, scope: !6913)
!6923 = !DILocation(line: 1346, column: 26, scope: !6913)
!6924 = !DILocation(line: 1346, column: 31, scope: !6913)
!6925 = !DILocation(line: 1346, column: 36, scope: !6913)
!6926 = !DILocation(line: 1346, column: 40, scope: !6913)
!6927 = !DILocation(line: 1346, column: 46, scope: !6913)
!6928 = !DILocation(line: 1346, column: 9, scope: !6913)
!6929 = !DILocation(line: 1346, column: 2, scope: !6913)
!6930 = distinct !DISubprogram(name: "vc_do_resize", scope: !3, file: !3, line: 1196, type: !6931, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!6931 = !DISubroutineType(types: !6932)
!6932 = !{!215, !314, !220, !7, !7}
!6933 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !6934)
!6934 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !6935)
!6935 = distinct !DILocation(line: 1207, column: 2, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1207, column: 2)
!6937 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !6938)
!6938 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !6935)
!6939 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !6938)
!6940 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !6935)
!6941 = !DILocalVariable(name: "tty", arg: 1, scope: !6930, file: !3, line: 1196, type: !314)
!6942 = !DILocation(line: 1196, column: 44, scope: !6930)
!6943 = !DILocalVariable(name: "vc", arg: 2, scope: !6930, file: !3, line: 1196, type: !220)
!6944 = !DILocation(line: 1196, column: 65, scope: !6930)
!6945 = !DILocalVariable(name: "cols", arg: 3, scope: !6930, file: !3, line: 1197, type: !7)
!6946 = !DILocation(line: 1197, column: 18, scope: !6930)
!6947 = !DILocalVariable(name: "lines", arg: 4, scope: !6930, file: !3, line: 1197, type: !7)
!6948 = !DILocation(line: 1197, column: 37, scope: !6930)
!6949 = !DILocalVariable(name: "old_origin", scope: !6930, file: !3, line: 1199, type: !193)
!6950 = !DILocation(line: 1199, column: 16, scope: !6930)
!6951 = !DILocalVariable(name: "new_origin", scope: !6930, file: !3, line: 1199, type: !193)
!6952 = !DILocation(line: 1199, column: 28, scope: !6930)
!6953 = !DILocalVariable(name: "new_scr_end", scope: !6930, file: !3, line: 1199, type: !193)
!6954 = !DILocation(line: 1199, column: 40, scope: !6930)
!6955 = !DILocalVariable(name: "rlth", scope: !6930, file: !3, line: 1199, type: !193)
!6956 = !DILocation(line: 1199, column: 53, scope: !6930)
!6957 = !DILocalVariable(name: "rrem", scope: !6930, file: !3, line: 1199, type: !193)
!6958 = !DILocation(line: 1199, column: 59, scope: !6930)
!6959 = !DILocalVariable(name: "err", scope: !6930, file: !3, line: 1199, type: !193)
!6960 = !DILocation(line: 1199, column: 65, scope: !6930)
!6961 = !DILocalVariable(name: "end", scope: !6930, file: !3, line: 1200, type: !193)
!6962 = !DILocation(line: 1200, column: 16, scope: !6930)
!6963 = !DILocalVariable(name: "old_rows", scope: !6930, file: !3, line: 1201, type: !7)
!6964 = !DILocation(line: 1201, column: 15, scope: !6930)
!6965 = !DILocalVariable(name: "old_row_size", scope: !6930, file: !3, line: 1201, type: !7)
!6966 = !DILocation(line: 1201, column: 25, scope: !6930)
!6967 = !DILocalVariable(name: "first_copied_row", scope: !6930, file: !3, line: 1201, type: !7)
!6968 = !DILocation(line: 1201, column: 39, scope: !6930)
!6969 = !DILocalVariable(name: "new_cols", scope: !6930, file: !3, line: 1202, type: !7)
!6970 = !DILocation(line: 1202, column: 15, scope: !6930)
!6971 = !DILocalVariable(name: "new_rows", scope: !6930, file: !3, line: 1202, type: !7)
!6972 = !DILocation(line: 1202, column: 25, scope: !6930)
!6973 = !DILocalVariable(name: "new_row_size", scope: !6930, file: !3, line: 1202, type: !7)
!6974 = !DILocation(line: 1202, column: 35, scope: !6930)
!6975 = !DILocalVariable(name: "new_screen_size", scope: !6930, file: !3, line: 1202, type: !7)
!6976 = !DILocation(line: 1202, column: 49, scope: !6930)
!6977 = !DILocalVariable(name: "user", scope: !6930, file: !3, line: 1203, type: !7)
!6978 = !DILocation(line: 1203, column: 15, scope: !6930)
!6979 = !DILocalVariable(name: "oldscreen", scope: !6930, file: !3, line: 1204, type: !191)
!6980 = !DILocation(line: 1204, column: 18, scope: !6930)
!6981 = !DILocalVariable(name: "newscreen", scope: !6930, file: !3, line: 1204, type: !191)
!6982 = !DILocation(line: 1204, column: 30, scope: !6930)
!6983 = !DILocalVariable(name: "new_uniscr", scope: !6930, file: !3, line: 1205, type: !4395)
!6984 = !DILocation(line: 1205, column: 21, scope: !6930)
!6985 = !DILocalVariable(name: "__ret_warn_on", scope: !6936, file: !3, line: 1207, type: !215)
!6986 = !DILocation(line: 1207, column: 2, scope: !6936)
!6987 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !6935)
!6988 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !6938)
!6989 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !6938)
!6990 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !6938)
!6991 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !6938)
!6992 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !6935)
!6993 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !6934)
!6994 = !DILocation(line: 0, scope: !6936)
!6995 = !DILocation(line: 1207, column: 2, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 1207, column: 2)
!6997 = !DILocation(line: 1207, column: 2, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6996, file: !3, line: 1207, column: 2)
!6999 = !DILocation(line: 1207, column: 2, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 1207, column: 2)
!7001 = !DILocation(line: 1207, column: 2, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 1207, column: 2)
!7003 = !{i32 -2141785678, i32 -2141785649, i32 -2141785603, i32 -2141785545, i32 -2141785491, i32 -2141785437, i32 -2141785382, i32 -2141785351}
!7004 = !DILocation(line: 1207, column: 2, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 1207, column: 2)
!7006 = !{i32 -2141784949, i32 -2141784942, i32 -2141784890, i32 -2141784859, i32 -2141784829}
!7007 = !DILocation(line: 1207, column: 2, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 1207, column: 2)
!7009 = !DILocation(line: 1209, column: 7, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1209, column: 6)
!7011 = !DILocation(line: 1209, column: 6, scope: !6930)
!7012 = !DILocation(line: 1210, column: 3, scope: !7010)
!7013 = !DILocation(line: 1212, column: 9, scope: !6930)
!7014 = !DILocation(line: 1212, column: 13, scope: !6930)
!7015 = !DILocation(line: 1212, column: 7, scope: !6930)
!7016 = !DILocation(line: 1213, column: 2, scope: !6930)
!7017 = !DILocation(line: 1213, column: 6, scope: !6930)
!7018 = !DILocation(line: 1213, column: 21, scope: !6930)
!7019 = !DILocation(line: 1215, column: 6, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1215, column: 6)
!7021 = !DILocation(line: 1215, column: 11, scope: !7020)
!7022 = !DILocation(line: 1215, column: 23, scope: !7020)
!7023 = !DILocation(line: 1215, column: 26, scope: !7020)
!7024 = !DILocation(line: 1215, column: 32, scope: !7020)
!7025 = !DILocation(line: 1215, column: 6, scope: !6930)
!7026 = !DILocation(line: 1216, column: 3, scope: !7020)
!7027 = !DILocation(line: 1218, column: 14, scope: !6930)
!7028 = !DILocation(line: 1218, column: 21, scope: !6930)
!7029 = !DILocation(line: 1218, column: 28, scope: !6930)
!7030 = !DILocation(line: 1218, column: 32, scope: !6930)
!7031 = !DILocation(line: 1218, column: 11, scope: !6930)
!7032 = !DILocation(line: 1219, column: 14, scope: !6930)
!7033 = !DILocation(line: 1219, column: 22, scope: !6930)
!7034 = !DILocation(line: 1219, column: 30, scope: !6930)
!7035 = !DILocation(line: 1219, column: 34, scope: !6930)
!7036 = !DILocation(line: 1219, column: 11, scope: !6930)
!7037 = !DILocation(line: 1220, column: 17, scope: !6930)
!7038 = !DILocation(line: 1220, column: 26, scope: !6930)
!7039 = !DILocation(line: 1220, column: 15, scope: !6930)
!7040 = !DILocation(line: 1221, column: 20, scope: !6930)
!7041 = !DILocation(line: 1221, column: 35, scope: !6930)
!7042 = !DILocation(line: 1221, column: 33, scope: !6930)
!7043 = !DILocation(line: 1221, column: 18, scope: !6930)
!7044 = !DILocation(line: 1223, column: 6, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1223, column: 6)
!7046 = !DILocation(line: 1223, column: 18, scope: !7045)
!7047 = !DILocation(line: 1223, column: 22, scope: !7045)
!7048 = !DILocation(line: 1223, column: 15, scope: !7045)
!7049 = !DILocation(line: 1223, column: 30, scope: !7045)
!7050 = !DILocation(line: 1223, column: 33, scope: !7045)
!7051 = !DILocation(line: 1223, column: 45, scope: !7045)
!7052 = !DILocation(line: 1223, column: 49, scope: !7045)
!7053 = !DILocation(line: 1223, column: 42, scope: !7045)
!7054 = !DILocation(line: 1223, column: 6, scope: !6930)
!7055 = !DILocation(line: 1224, column: 3, scope: !7045)
!7056 = !DILocation(line: 1226, column: 6, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1226, column: 6)
!7058 = !DILocation(line: 1226, column: 22, scope: !7057)
!7059 = !DILocation(line: 1226, column: 41, scope: !7057)
!7060 = !DILocation(line: 1226, column: 45, scope: !7057)
!7061 = !DILocation(line: 1226, column: 6, scope: !6930)
!7062 = !DILocation(line: 1227, column: 3, scope: !7057)
!7063 = !DILocation(line: 1228, column: 22, scope: !6930)
!7064 = !DILocation(line: 1228, column: 14, scope: !6930)
!7065 = !DILocation(line: 1228, column: 12, scope: !6930)
!7066 = !DILocation(line: 1229, column: 7, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1229, column: 6)
!7068 = !DILocation(line: 1229, column: 6, scope: !6930)
!7069 = !DILocation(line: 1230, column: 3, scope: !7067)
!7070 = !DILocation(line: 1232, column: 6, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1232, column: 6)
!7072 = !DILocation(line: 1232, column: 6, scope: !6930)
!7073 = !DILocation(line: 1233, column: 32, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 1232, column: 25)
!7075 = !DILocation(line: 1233, column: 42, scope: !7074)
!7076 = !DILocation(line: 1233, column: 16, scope: !7074)
!7077 = !DILocation(line: 1233, column: 14, scope: !7074)
!7078 = !DILocation(line: 1234, column: 8, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 1234, column: 7)
!7080 = !DILocation(line: 1234, column: 7, scope: !7074)
!7081 = !DILocation(line: 1235, column: 10, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 1234, column: 20)
!7083 = !DILocation(line: 1235, column: 4, scope: !7082)
!7084 = !DILocation(line: 1236, column: 4, scope: !7082)
!7085 = !DILocation(line: 1238, column: 2, scope: !7074)
!7086 = !DILocation(line: 1240, column: 16, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1240, column: 6)
!7088 = !DILocation(line: 1240, column: 6, scope: !7087)
!7089 = !DILocation(line: 1240, column: 6, scope: !6930)
!7090 = !DILocation(line: 1241, column: 3, scope: !7087)
!7091 = !DILocation(line: 1243, column: 13, scope: !6930)
!7092 = !DILocation(line: 1243, column: 17, scope: !6930)
!7093 = !DILocation(line: 1243, column: 11, scope: !6930)
!7094 = !DILocation(line: 1244, column: 17, scope: !6930)
!7095 = !DILocation(line: 1244, column: 21, scope: !6930)
!7096 = !DILocation(line: 1244, column: 15, scope: !6930)
!7097 = !DILocation(line: 1246, column: 22, scope: !6930)
!7098 = !DILocation(line: 1246, column: 26, scope: !6930)
!7099 = !DILocation(line: 1246, column: 36, scope: !6930)
!7100 = !DILocation(line: 1246, column: 46, scope: !6930)
!7101 = !DILocation(line: 1246, column: 8, scope: !6930)
!7102 = !DILocation(line: 1246, column: 6, scope: !6930)
!7103 = !DILocation(line: 1247, column: 6, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1247, column: 6)
!7105 = !DILocation(line: 1247, column: 6, scope: !6930)
!7106 = !DILocation(line: 1248, column: 9, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 1247, column: 11)
!7108 = !DILocation(line: 1248, column: 3, scope: !7107)
!7109 = !DILocation(line: 1249, column: 18, scope: !7107)
!7110 = !DILocation(line: 1249, column: 3, scope: !7107)
!7111 = !DILocation(line: 1250, column: 10, scope: !7107)
!7112 = !DILocation(line: 1250, column: 3, scope: !7107)
!7113 = !DILocation(line: 1253, column: 16, scope: !6930)
!7114 = !DILocation(line: 1253, column: 2, scope: !6930)
!7115 = !DILocation(line: 1253, column: 6, scope: !6930)
!7116 = !DILocation(line: 1253, column: 14, scope: !6930)
!7117 = !DILocation(line: 1254, column: 16, scope: !6930)
!7118 = !DILocation(line: 1254, column: 2, scope: !6930)
!7119 = !DILocation(line: 1254, column: 6, scope: !6930)
!7120 = !DILocation(line: 1254, column: 14, scope: !6930)
!7121 = !DILocation(line: 1255, column: 20, scope: !6930)
!7122 = !DILocation(line: 1255, column: 2, scope: !6930)
!7123 = !DILocation(line: 1255, column: 6, scope: !6930)
!7124 = !DILocation(line: 1255, column: 18, scope: !6930)
!7125 = !DILocation(line: 1256, column: 26, scope: !6930)
!7126 = !DILocation(line: 1256, column: 2, scope: !6930)
!7127 = !DILocation(line: 1256, column: 6, scope: !6930)
!7128 = !DILocation(line: 1256, column: 24, scope: !6930)
!7129 = !DILocalVariable(name: "__UNIQUE_ID___x245", scope: !7130, file: !3, line: 1258, type: !7)
!7130 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1258, column: 9)
!7131 = !DILocation(line: 1258, column: 9, scope: !7130)
!7132 = !DILocalVariable(name: "__UNIQUE_ID___y246", scope: !7130, file: !3, line: 1258, type: !7)
!7133 = !DILocation(line: 1258, column: 9, scope: !6930)
!7134 = !DILocation(line: 1258, column: 7, scope: !6930)
!7135 = !DILocation(line: 1259, column: 9, scope: !6930)
!7136 = !DILocation(line: 1259, column: 24, scope: !6930)
!7137 = !DILocation(line: 1259, column: 22, scope: !6930)
!7138 = !DILocation(line: 1259, column: 7, scope: !6930)
!7139 = !DILocation(line: 1260, column: 15, scope: !6930)
!7140 = !DILocation(line: 1260, column: 19, scope: !6930)
!7141 = !DILocation(line: 1260, column: 13, scope: !6930)
!7142 = !DILocation(line: 1261, column: 22, scope: !6930)
!7143 = !DILocation(line: 1261, column: 15, scope: !6930)
!7144 = !DILocation(line: 1261, column: 13, scope: !6930)
!7145 = !DILocation(line: 1262, column: 16, scope: !6930)
!7146 = !DILocation(line: 1262, column: 29, scope: !6930)
!7147 = !DILocation(line: 1262, column: 27, scope: !6930)
!7148 = !DILocation(line: 1262, column: 14, scope: !6930)
!7149 = !DILocation(line: 1264, column: 6, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1264, column: 6)
!7151 = !DILocation(line: 1264, column: 10, scope: !7150)
!7152 = !DILocation(line: 1264, column: 16, scope: !7150)
!7153 = !DILocation(line: 1264, column: 20, scope: !7150)
!7154 = !DILocation(line: 1264, column: 18, scope: !7150)
!7155 = !DILocation(line: 1264, column: 6, scope: !6930)
!7156 = !DILocation(line: 1265, column: 7, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 1265, column: 7)
!7158 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 1264, column: 30)
!7159 = !DILocation(line: 1265, column: 18, scope: !7157)
!7160 = !DILocation(line: 1265, column: 22, scope: !7157)
!7161 = !DILocation(line: 1265, column: 28, scope: !7157)
!7162 = !DILocation(line: 1265, column: 16, scope: !7157)
!7163 = !DILocation(line: 1265, column: 32, scope: !7157)
!7164 = !DILocation(line: 1265, column: 30, scope: !7157)
!7165 = !DILocation(line: 1265, column: 7, scope: !7158)
!7166 = !DILocation(line: 1270, column: 24, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1265, column: 42)
!7168 = !DILocation(line: 1270, column: 35, scope: !7167)
!7169 = !DILocation(line: 1270, column: 33, scope: !7167)
!7170 = !DILocation(line: 1270, column: 21, scope: !7167)
!7171 = !DILocation(line: 1271, column: 3, scope: !7167)
!7172 = !DILocation(line: 1276, column: 24, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1271, column: 10)
!7174 = !DILocation(line: 1276, column: 28, scope: !7173)
!7175 = !DILocation(line: 1276, column: 34, scope: !7173)
!7176 = !DILocation(line: 1276, column: 38, scope: !7173)
!7177 = !DILocation(line: 1276, column: 46, scope: !7173)
!7178 = !DILocation(line: 1276, column: 36, scope: !7173)
!7179 = !DILocation(line: 1276, column: 21, scope: !7173)
!7180 = !DILocation(line: 1278, column: 17, scope: !7158)
!7181 = !DILocation(line: 1278, column: 36, scope: !7158)
!7182 = !DILocation(line: 1278, column: 34, scope: !7158)
!7183 = !DILocation(line: 1278, column: 14, scope: !7158)
!7184 = !DILocation(line: 1279, column: 2, scope: !7158)
!7185 = !DILocation(line: 1280, column: 20, scope: !7150)
!7186 = !DILocation(line: 1281, column: 8, scope: !6930)
!7187 = !DILocation(line: 1281, column: 21, scope: !6930)
!7188 = !DILocalVariable(name: "__UNIQUE_ID___x247", scope: !7189, file: !3, line: 1281, type: !7)
!7189 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1281, column: 36)
!7190 = !DILocation(line: 1281, column: 36, scope: !7189)
!7191 = !DILocalVariable(name: "__UNIQUE_ID___y248", scope: !7189, file: !3, line: 1281, type: !7)
!7192 = !DILocation(line: 1281, column: 34, scope: !6930)
!7193 = !DILocation(line: 1281, column: 19, scope: !6930)
!7194 = !DILocation(line: 1281, column: 6, scope: !6930)
!7195 = !DILocation(line: 1283, column: 22, scope: !6930)
!7196 = !DILocation(line: 1283, column: 34, scope: !6930)
!7197 = !DILocation(line: 1283, column: 44, scope: !6930)
!7198 = !DILocation(line: 1284, column: 8, scope: !6930)
!7199 = !DILocation(line: 1284, column: 27, scope: !6930)
!7200 = !DILocation(line: 1284, column: 31, scope: !6930)
!7201 = !DILocation(line: 1284, column: 35, scope: !6930)
!7202 = !DILocalVariable(name: "__UNIQUE_ID___x249", scope: !7203, file: !3, line: 1285, type: !7)
!7203 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1285, column: 8)
!7204 = !DILocation(line: 1285, column: 8, scope: !7203)
!7205 = !DILocalVariable(name: "__UNIQUE_ID___y250", scope: !7203, file: !3, line: 1285, type: !7)
!7206 = !DILocation(line: 1283, column: 2, scope: !6930)
!7207 = !DILocation(line: 1286, column: 16, scope: !6930)
!7208 = !DILocation(line: 1286, column: 20, scope: !6930)
!7209 = !DILocation(line: 1286, column: 2, scope: !6930)
!7210 = !DILocation(line: 1288, column: 14, scope: !6930)
!7211 = !DILocation(line: 1288, column: 2, scope: !6930)
!7212 = !DILocation(line: 1290, column: 2, scope: !6930)
!7213 = !DILocation(line: 1290, column: 9, scope: !6930)
!7214 = !DILocation(line: 1290, column: 22, scope: !6930)
!7215 = !DILocation(line: 1290, column: 20, scope: !6930)
!7216 = !DILocation(line: 1291, column: 34, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1290, column: 27)
!7218 = !DILocation(line: 1291, column: 15, scope: !7217)
!7219 = !DILocation(line: 1292, column: 27, scope: !7217)
!7220 = !DILocation(line: 1292, column: 8, scope: !7217)
!7221 = !DILocation(line: 1292, column: 39, scope: !7217)
!7222 = !DILocation(line: 1291, column: 3, scope: !7217)
!7223 = !DILocation(line: 1293, column: 7, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 1293, column: 7)
!7225 = !DILocation(line: 1293, column: 7, scope: !7217)
!7226 = !DILocation(line: 1294, column: 25, scope: !7224)
!7227 = !DILocation(line: 1294, column: 38, scope: !7224)
!7228 = !DILocation(line: 1294, column: 36, scope: !7224)
!7229 = !DILocation(line: 1294, column: 16, scope: !7224)
!7230 = !DILocation(line: 1295, column: 9, scope: !7224)
!7231 = !DILocation(line: 1295, column: 13, scope: !7224)
!7232 = !DILocation(line: 1295, column: 34, scope: !7224)
!7233 = !DILocation(line: 1294, column: 4, scope: !7224)
!7234 = !DILocation(line: 1296, column: 17, scope: !7217)
!7235 = !DILocation(line: 1296, column: 14, scope: !7217)
!7236 = !DILocation(line: 1297, column: 17, scope: !7217)
!7237 = !DILocation(line: 1297, column: 14, scope: !7217)
!7238 = distinct !{!7238, !7212, !7239}
!7239 = !DILocation(line: 1298, column: 2, scope: !6930)
!7240 = !DILocation(line: 1299, column: 6, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1299, column: 6)
!7242 = !DILocation(line: 1299, column: 20, scope: !7241)
!7243 = !DILocation(line: 1299, column: 18, scope: !7241)
!7244 = !DILocation(line: 1299, column: 6, scope: !6930)
!7245 = !DILocation(line: 1300, column: 23, scope: !7241)
!7246 = !DILocation(line: 1300, column: 15, scope: !7241)
!7247 = !DILocation(line: 1300, column: 35, scope: !7241)
!7248 = !DILocation(line: 1300, column: 39, scope: !7241)
!7249 = !DILocation(line: 1301, column: 8, scope: !7241)
!7250 = !DILocation(line: 1301, column: 22, scope: !7241)
!7251 = !DILocation(line: 1301, column: 20, scope: !7241)
!7252 = !DILocation(line: 1300, column: 3, scope: !7241)
!7253 = !DILocation(line: 1302, column: 14, scope: !6930)
!7254 = !DILocation(line: 1302, column: 18, scope: !6930)
!7255 = !DILocation(line: 1302, column: 12, scope: !6930)
!7256 = !DILocation(line: 1303, column: 21, scope: !6930)
!7257 = !DILocation(line: 1303, column: 2, scope: !6930)
!7258 = !DILocation(line: 1303, column: 6, scope: !6930)
!7259 = !DILocation(line: 1303, column: 19, scope: !6930)
!7260 = !DILocation(line: 1304, column: 26, scope: !6930)
!7261 = !DILocation(line: 1304, column: 2, scope: !6930)
!7262 = !DILocation(line: 1304, column: 6, scope: !6930)
!7263 = !DILocation(line: 1304, column: 24, scope: !6930)
!7264 = !DILocation(line: 1305, column: 13, scope: !6930)
!7265 = !DILocation(line: 1305, column: 2, scope: !6930)
!7266 = !DILocation(line: 1306, column: 8, scope: !6930)
!7267 = !DILocation(line: 1306, column: 2, scope: !6930)
!7268 = !DILocation(line: 1309, column: 2, scope: !6930)
!7269 = !DILocation(line: 1309, column: 6, scope: !6930)
!7270 = !DILocation(line: 1309, column: 13, scope: !6930)
!7271 = !DILocation(line: 1310, column: 18, scope: !6930)
!7272 = !DILocation(line: 1310, column: 22, scope: !6930)
!7273 = !DILocation(line: 1310, column: 2, scope: !6930)
!7274 = !DILocation(line: 1310, column: 6, scope: !6930)
!7275 = !DILocation(line: 1310, column: 16, scope: !6930)
!7276 = !DILocation(line: 1311, column: 9, scope: !6930)
!7277 = !DILocation(line: 1311, column: 13, scope: !6930)
!7278 = !DILocation(line: 1311, column: 17, scope: !6930)
!7279 = !DILocation(line: 1311, column: 23, scope: !6930)
!7280 = !DILocation(line: 1311, column: 26, scope: !6930)
!7281 = !DILocation(line: 1311, column: 30, scope: !6930)
!7282 = !DILocation(line: 1311, column: 36, scope: !6930)
!7283 = !DILocation(line: 1311, column: 2, scope: !6930)
!7284 = !DILocation(line: 1312, column: 11, scope: !6930)
!7285 = !DILocation(line: 1312, column: 2, scope: !6930)
!7286 = !DILocation(line: 1314, column: 6, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1314, column: 6)
!7288 = !DILocation(line: 1314, column: 6, scope: !6930)
!7289 = !DILocalVariable(name: "ws", scope: !7290, file: !3, line: 1317, type: !4012)
!7290 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 1314, column: 11)
!7291 = !DILocation(line: 1317, column: 18, scope: !7290)
!7292 = !DILocation(line: 1318, column: 3, scope: !7290)
!7293 = !DILocation(line: 1319, column: 15, scope: !7290)
!7294 = !DILocation(line: 1319, column: 19, scope: !7290)
!7295 = !DILocation(line: 1319, column: 6, scope: !7290)
!7296 = !DILocation(line: 1319, column: 13, scope: !7290)
!7297 = !DILocation(line: 1320, column: 15, scope: !7290)
!7298 = !DILocation(line: 1320, column: 19, scope: !7290)
!7299 = !DILocation(line: 1320, column: 6, scope: !7290)
!7300 = !DILocation(line: 1320, column: 13, scope: !7290)
!7301 = !DILocation(line: 1321, column: 18, scope: !7290)
!7302 = !DILocation(line: 1321, column: 22, scope: !7290)
!7303 = !DILocation(line: 1321, column: 6, scope: !7290)
!7304 = !DILocation(line: 1321, column: 16, scope: !7290)
!7305 = !DILocation(line: 1322, column: 17, scope: !7290)
!7306 = !DILocation(line: 1322, column: 3, scope: !7290)
!7307 = !DILocation(line: 1323, column: 2, scope: !7290)
!7308 = !DILocation(line: 1325, column: 21, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1325, column: 6)
!7310 = !DILocation(line: 1325, column: 6, scope: !7309)
!7311 = !DILocation(line: 1325, column: 6, scope: !6930)
!7312 = !DILocation(line: 1326, column: 3, scope: !7309)
!7313 = !DILocation(line: 1327, column: 33, scope: !6930)
!7314 = !DILocation(line: 1327, column: 37, scope: !6930)
!7315 = !DILocation(line: 1327, column: 45, scope: !6930)
!7316 = !DILocation(line: 1327, column: 49, scope: !6930)
!7317 = !DILocation(line: 1327, column: 2, scope: !6930)
!7318 = !DILocation(line: 1328, column: 16, scope: !6930)
!7319 = !DILocation(line: 1328, column: 2, scope: !6930)
!7320 = !DILocation(line: 1329, column: 9, scope: !6930)
!7321 = !DILocation(line: 1329, column: 2, scope: !6930)
!7322 = !DILocation(line: 1330, column: 1, scope: !6930)
!7323 = distinct !DISubprogram(name: "vc_deallocate", scope: !3, file: !3, line: 1372, type: !7324, scopeLine: 1373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{!220, !7}
!7326 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !7327)
!7327 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !7328)
!7328 = distinct !DILocation(line: 1376, column: 2, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 1376, column: 2)
!7330 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !7331)
!7331 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !7328)
!7332 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !7331)
!7333 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !7328)
!7334 = !DILocalVariable(name: "currcons", arg: 1, scope: !7323, file: !3, line: 1372, type: !7)
!7335 = !DILocation(line: 1372, column: 44, scope: !7323)
!7336 = !DILocalVariable(name: "vc", scope: !7323, file: !3, line: 1374, type: !220)
!7337 = !DILocation(line: 1374, column: 18, scope: !7323)
!7338 = !DILocalVariable(name: "__ret_warn_on", scope: !7329, file: !3, line: 1376, type: !215)
!7339 = !DILocation(line: 1376, column: 2, scope: !7329)
!7340 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !7328)
!7341 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !7331)
!7342 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !7331)
!7343 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !7331)
!7344 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !7331)
!7345 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !7328)
!7346 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !7327)
!7347 = !DILocation(line: 0, scope: !7329)
!7348 = !DILocation(line: 1376, column: 2, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 1376, column: 2)
!7350 = !DILocation(line: 1376, column: 2, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 1376, column: 2)
!7352 = !DILocation(line: 1376, column: 2, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 1376, column: 2)
!7354 = !DILocation(line: 1376, column: 2, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 1376, column: 2)
!7356 = !{i32 -2141779376, i32 -2141779347, i32 -2141779301, i32 -2141779243, i32 -2141779189, i32 -2141779135, i32 -2141779080, i32 -2141779049}
!7357 = !DILocation(line: 1376, column: 2, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 1376, column: 2)
!7359 = !{i32 -2141778647, i32 -2141778640, i32 -2141778588, i32 -2141778557, i32 -2141778527}
!7360 = !DILocation(line: 1376, column: 2, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 1376, column: 2)
!7362 = !DILocation(line: 1378, column: 24, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 1378, column: 6)
!7364 = !DILocation(line: 1378, column: 6, scope: !7363)
!7365 = !DILocation(line: 1378, column: 6, scope: !7323)
!7366 = !DILocalVariable(name: "param", scope: !7367, file: !3, line: 1379, type: !5654)
!7367 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 1378, column: 35)
!7368 = !DILocation(line: 1379, column: 28, scope: !7367)
!7369 = !DILocation(line: 1381, column: 27, scope: !7367)
!7370 = !DILocation(line: 1381, column: 19, scope: !7367)
!7371 = !DILocation(line: 1381, column: 37, scope: !7367)
!7372 = !DILocation(line: 1381, column: 17, scope: !7367)
!7373 = !DILocation(line: 1381, column: 9, scope: !7367)
!7374 = !DILocation(line: 1381, column: 12, scope: !7367)
!7375 = !DILocation(line: 1382, column: 64, scope: !7367)
!7376 = !DILocation(line: 1382, column: 3, scope: !7367)
!7377 = !DILocation(line: 1383, column: 20, scope: !7367)
!7378 = !DILocation(line: 1383, column: 3, scope: !7367)
!7379 = !DILocation(line: 1384, column: 17, scope: !7367)
!7380 = !DILocation(line: 1384, column: 3, scope: !7367)
!7381 = !DILocation(line: 1385, column: 11, scope: !7367)
!7382 = !DILocation(line: 1385, column: 15, scope: !7367)
!7383 = !DILocation(line: 1385, column: 3, scope: !7367)
!7384 = !DILocation(line: 1386, column: 17, scope: !7367)
!7385 = !DILocation(line: 1386, column: 3, scope: !7367)
!7386 = !DILocation(line: 1387, column: 9, scope: !7367)
!7387 = !DILocation(line: 1387, column: 13, scope: !7367)
!7388 = !DILocation(line: 1387, column: 3, scope: !7367)
!7389 = !DILocation(line: 1388, column: 11, scope: !7367)
!7390 = !DILocation(line: 1388, column: 3, scope: !7367)
!7391 = !DILocation(line: 1388, column: 21, scope: !7367)
!7392 = !DILocation(line: 1388, column: 23, scope: !7367)
!7393 = !DILocation(line: 1389, column: 2, scope: !7367)
!7394 = !DILocation(line: 1390, column: 9, scope: !7323)
!7395 = !DILocation(line: 1390, column: 2, scope: !7323)
!7396 = distinct !DISubprogram(name: "vc_uniscr_set", scope: !3, file: !3, line: 366, type: !7397, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7397 = !DISubroutineType(types: !7398)
!7398 = !{null, !220, !4395}
!7399 = !DILocalVariable(name: "vc", arg: 1, scope: !7396, file: !3, line: 366, type: !220)
!7400 = !DILocation(line: 366, column: 43, scope: !7396)
!7401 = !DILocalVariable(name: "new_uniscr", arg: 2, scope: !7396, file: !3, line: 366, type: !4395)
!7402 = !DILocation(line: 366, column: 66, scope: !7396)
!7403 = !DILocation(line: 368, column: 17, scope: !7396)
!7404 = !DILocation(line: 368, column: 21, scope: !7396)
!7405 = !DILocation(line: 368, column: 2, scope: !7396)
!7406 = !DILocation(line: 369, column: 22, scope: !7396)
!7407 = !DILocation(line: 369, column: 2, scope: !7396)
!7408 = !DILocation(line: 369, column: 6, scope: !7396)
!7409 = !DILocation(line: 369, column: 20, scope: !7396)
!7410 = !DILocation(line: 370, column: 1, scope: !7396)
!7411 = distinct !DISubprogram(name: "scrollback", scope: !3, file: !3, line: 1472, type: !4246, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7412 = !DILocalVariable(name: "vc", arg: 1, scope: !7411, file: !3, line: 1472, type: !220)
!7413 = !DILocation(line: 1472, column: 33, scope: !7411)
!7414 = !DILocation(line: 1474, column: 16, scope: !7411)
!7415 = !DILocation(line: 1474, column: 20, scope: !7411)
!7416 = !DILocation(line: 1474, column: 28, scope: !7411)
!7417 = !DILocation(line: 1474, column: 14, scope: !7411)
!7418 = !DILocation(line: 1474, column: 2, scope: !7411)
!7419 = !DILocation(line: 1475, column: 1, scope: !7411)
!7420 = distinct !DISubprogram(name: "scrolldelta", scope: !3, file: !3, line: 301, type: !1971, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7421 = !DILocalVariable(name: "lines", arg: 1, scope: !7420, file: !3, line: 301, type: !215)
!7422 = !DILocation(line: 301, column: 36, scope: !7420)
!7423 = !DILocation(line: 306, column: 22, scope: !7420)
!7424 = !DILocation(line: 306, column: 19, scope: !7420)
!7425 = !DILocation(line: 307, column: 2, scope: !7420)
!7426 = !DILocation(line: 308, column: 1, scope: !7420)
!7427 = distinct !DISubprogram(name: "scrollfront", scope: !3, file: !3, line: 1477, type: !4242, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7428 = !DILocalVariable(name: "vc", arg: 1, scope: !7427, file: !3, line: 1477, type: !220)
!7429 = !DILocation(line: 1477, column: 34, scope: !7427)
!7430 = !DILocalVariable(name: "lines", arg: 2, scope: !7427, file: !3, line: 1477, type: !215)
!7431 = !DILocation(line: 1477, column: 42, scope: !7427)
!7432 = !DILocation(line: 1479, column: 7, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 1479, column: 6)
!7434 = !DILocation(line: 1479, column: 6, scope: !7427)
!7435 = !DILocation(line: 1480, column: 11, scope: !7433)
!7436 = !DILocation(line: 1480, column: 15, scope: !7433)
!7437 = !DILocation(line: 1480, column: 23, scope: !7433)
!7438 = !DILocation(line: 1480, column: 9, scope: !7433)
!7439 = !DILocation(line: 1480, column: 3, scope: !7433)
!7440 = !DILocation(line: 1481, column: 14, scope: !7427)
!7441 = !DILocation(line: 1481, column: 2, scope: !7427)
!7442 = !DILocation(line: 1482, column: 1, scope: !7427)
!7443 = distinct !DISubprogram(name: "mouse_report", scope: !3, file: !3, line: 1848, type: !7444, scopeLine: 1849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7444 = !DISubroutineType(types: !7445)
!7445 = !{null, !314, !215, !215, !215}
!7446 = !DILocalVariable(name: "tty", arg: 1, scope: !7443, file: !3, line: 1848, type: !314)
!7447 = !DILocation(line: 1848, column: 38, scope: !7443)
!7448 = !DILocalVariable(name: "butt", arg: 2, scope: !7443, file: !3, line: 1848, type: !215)
!7449 = !DILocation(line: 1848, column: 47, scope: !7443)
!7450 = !DILocalVariable(name: "mrx", arg: 3, scope: !7443, file: !3, line: 1848, type: !215)
!7451 = !DILocation(line: 1848, column: 57, scope: !7443)
!7452 = !DILocalVariable(name: "mry", arg: 4, scope: !7443, file: !3, line: 1848, type: !215)
!7453 = !DILocation(line: 1848, column: 66, scope: !7443)
!7454 = !DILocalVariable(name: "buf", scope: !7443, file: !3, line: 1850, type: !2121)
!7455 = !DILocation(line: 1850, column: 7, scope: !7443)
!7456 = !DILocalVariable(name: "len", scope: !7443, file: !3, line: 1851, type: !215)
!7457 = !DILocation(line: 1851, column: 6, scope: !7443)
!7458 = !DILocation(line: 1853, column: 16, scope: !7443)
!7459 = !DILocation(line: 1853, column: 50, scope: !7443)
!7460 = !DILocation(line: 1853, column: 48, scope: !7443)
!7461 = !DILocation(line: 1853, column: 37, scope: !7443)
!7462 = !DILocation(line: 1854, column: 17, scope: !7443)
!7463 = !DILocation(line: 1854, column: 15, scope: !7443)
!7464 = !DILocation(line: 1854, column: 4, scope: !7443)
!7465 = !DILocation(line: 1854, column: 36, scope: !7443)
!7466 = !DILocation(line: 1854, column: 34, scope: !7443)
!7467 = !DILocation(line: 1854, column: 23, scope: !7443)
!7468 = !DILocation(line: 1853, column: 8, scope: !7443)
!7469 = !DILocation(line: 1853, column: 6, scope: !7443)
!7470 = !DILocation(line: 1855, column: 17, scope: !7443)
!7471 = !DILocation(line: 1855, column: 22, scope: !7443)
!7472 = !DILocation(line: 1855, column: 27, scope: !7443)
!7473 = !DILocation(line: 1855, column: 32, scope: !7443)
!7474 = !DILocation(line: 1855, column: 2, scope: !7443)
!7475 = !DILocation(line: 1856, column: 1, scope: !7443)
!7476 = distinct !DISubprogram(name: "respond_string", scope: !3, file: !3, line: 1816, type: !7477, scopeLine: 1817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7477 = !DISubroutineType(types: !7478)
!7478 = !{null, !336, !417, !3922}
!7479 = !DILocalVariable(name: "p", arg: 1, scope: !7476, file: !3, line: 1816, type: !336)
!7480 = !DILocation(line: 1816, column: 40, scope: !7476)
!7481 = !DILocalVariable(name: "len", arg: 2, scope: !7476, file: !3, line: 1816, type: !417)
!7482 = !DILocation(line: 1816, column: 50, scope: !7476)
!7483 = !DILocalVariable(name: "port", arg: 3, scope: !7476, file: !3, line: 1816, type: !3922)
!7484 = !DILocation(line: 1816, column: 72, scope: !7476)
!7485 = !DILocation(line: 1818, column: 25, scope: !7476)
!7486 = !DILocation(line: 1818, column: 31, scope: !7476)
!7487 = !DILocation(line: 1818, column: 34, scope: !7476)
!7488 = !DILocation(line: 1818, column: 2, scope: !7476)
!7489 = !DILocation(line: 1819, column: 20, scope: !7476)
!7490 = !DILocation(line: 1819, column: 2, scope: !7476)
!7491 = !DILocation(line: 1820, column: 1, scope: !7476)
!7492 = distinct !DISubprogram(name: "mouse_reporting", scope: !3, file: !3, line: 1859, type: !4815, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7493 = !DILocation(line: 1861, column: 17, scope: !7492)
!7494 = !DILocation(line: 1861, column: 9, scope: !7492)
!7495 = !DILocation(line: 1861, column: 29, scope: !7492)
!7496 = !DILocation(line: 1861, column: 32, scope: !7492)
!7497 = !DILocation(line: 1861, column: 2, scope: !7492)
!7498 = distinct !DISubprogram(name: "set_console", scope: !3, file: !3, line: 2973, type: !3137, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7499 = !DILocalVariable(name: "nr", arg: 1, scope: !7498, file: !3, line: 2973, type: !215)
!7500 = !DILocation(line: 2973, column: 21, scope: !7498)
!7501 = !DILocalVariable(name: "vc", scope: !7498, file: !3, line: 2975, type: !220)
!7502 = !DILocation(line: 2975, column: 18, scope: !7498)
!7503 = !DILocation(line: 2975, column: 31, scope: !7498)
!7504 = !DILocation(line: 2975, column: 23, scope: !7498)
!7505 = !DILocation(line: 2975, column: 43, scope: !7498)
!7506 = !DILocation(line: 2977, column: 25, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 2977, column: 6)
!7508 = !DILocation(line: 2977, column: 7, scope: !7507)
!7509 = !DILocation(line: 2977, column: 29, scope: !7507)
!7510 = !DILocation(line: 2977, column: 32, scope: !7507)
!7511 = !DILocation(line: 2977, column: 47, scope: !7507)
!7512 = !DILocation(line: 2978, column: 4, scope: !7507)
!7513 = !DILocation(line: 2978, column: 8, scope: !7507)
!7514 = !DILocation(line: 2978, column: 16, scope: !7507)
!7515 = !DILocation(line: 2978, column: 21, scope: !7507)
!7516 = !DILocation(line: 2978, column: 32, scope: !7507)
!7517 = !DILocation(line: 2978, column: 35, scope: !7507)
!7518 = !DILocation(line: 2978, column: 39, scope: !7507)
!7519 = !DILocation(line: 2978, column: 47, scope: !7507)
!7520 = !DILocation(line: 2977, column: 6, scope: !7498)
!7521 = !DILocation(line: 2988, column: 3, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7507, file: !3, line: 2978, column: 64)
!7523 = !DILocation(line: 2991, column: 17, scope: !7498)
!7524 = !DILocation(line: 2991, column: 15, scope: !7498)
!7525 = !DILocation(line: 2992, column: 2, scope: !7498)
!7526 = !DILocation(line: 2994, column: 2, scope: !7498)
!7527 = !DILocation(line: 2995, column: 1, scope: !7498)
!7528 = !DILocalVariable(name: "v", arg: 1, scope: !7529, file: !4869, line: 84, type: !4872)
!7529 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !4869, file: !4869, line: 84, type: !4870, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7530 = !DILocation(line: 84, column: 74, scope: !7529, inlinedAt: !7531)
!7531 = distinct !DILocation(line: 3027, column: 10, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 3027, column: 10)
!7533 = distinct !DILexicalBlock(scope: !4529, file: !3, line: 3026, column: 6)
!7534 = !DILocalVariable(name: "size", arg: 2, scope: !7529, file: !4869, line: 84, type: !417)
!7535 = !DILocation(line: 84, column: 84, scope: !7529, inlinedAt: !7531)
!7536 = !DILocalVariable(name: "new", arg: 1, scope: !4529, file: !3, line: 3022, type: !215)
!7537 = !DILocation(line: 3022, column: 26, scope: !4529)
!7538 = !DILocation(line: 3026, column: 6, scope: !7533)
!7539 = !DILocation(line: 3026, column: 10, scope: !7533)
!7540 = !DILocation(line: 3026, column: 6, scope: !4529)
!7541 = !DILocalVariable(name: "__ai_ptr", scope: !7532, file: !3, line: 3027, type: !794)
!7542 = !DILocation(line: 3027, column: 10, scope: !7532)
!7543 = !DILocation(line: 86, column: 20, scope: !7529, inlinedAt: !7531)
!7544 = !DILocation(line: 86, column: 23, scope: !7529, inlinedAt: !7531)
!7545 = !DILocation(line: 86, column: 2, scope: !7529, inlinedAt: !7531)
!7546 = !DILocation(line: 87, column: 2, scope: !7529, inlinedAt: !7531)
!7547 = !DILocalVariable(name: "__ret", scope: !7548, file: !3, line: 3027, type: !215)
!7548 = distinct !DILexicalBlock(scope: !7532, file: !3, line: 3027, column: 10)
!7549 = !DILocation(line: 3027, column: 10, scope: !7548)
!7550 = !{i32 -2141743266}
!7551 = !DILocation(line: 3027, column: 3, scope: !7533)
!7552 = !DILocation(line: 3029, column: 10, scope: !7533)
!7553 = !DILocation(line: 3029, column: 3, scope: !7533)
!7554 = !DILocation(line: 3030, column: 1, scope: !4529)
!7555 = distinct !DISubprogram(name: "tioclinux", scope: !3, file: !3, line: 3144, type: !7556, scopeLine: 3145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7556 = !DISubroutineType(types: !7557)
!7557 = !{!215, !314, !193}
!7558 = !DILocalVariable(name: "pscr_ret__", scope: !7559, file: !7560, line: 15, type: !1323)
!7559 = distinct !DILexicalBlock(scope: !7561, file: !7560, line: 15, column: 9)
!7560 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!7561 = distinct !DISubprogram(name: "get_current", scope: !7560, file: !7560, line: 13, type: !7562, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{!1323}
!7564 = !DILocation(line: 15, column: 9, scope: !7559, inlinedAt: !7565)
!7565 = distinct !DILocation(line: 3151, column: 6, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 3151, column: 6)
!7567 = !DILocalVariable(name: "__vpp_verify", scope: !7568, file: !7560, line: 15, type: !2216)
!7568 = distinct !DILexicalBlock(scope: !7559, file: !7560, line: 15, column: 9)
!7569 = !DILocation(line: 15, column: 9, scope: !7568, inlinedAt: !7565)
!7570 = !DILocalVariable(name: "pfo_val__", scope: !7571, file: !7560, line: 15, type: !509)
!7571 = distinct !DILexicalBlock(scope: !7559, file: !7560, line: 15, column: 9)
!7572 = !DILocation(line: 15, column: 9, scope: !7571, inlinedAt: !7565)
!7573 = !DILocalVariable(name: "tty", arg: 1, scope: !7555, file: !3, line: 3144, type: !314)
!7574 = !DILocation(line: 3144, column: 34, scope: !7555)
!7575 = !DILocalVariable(name: "arg", arg: 2, scope: !7555, file: !3, line: 3144, type: !193)
!7576 = !DILocation(line: 3144, column: 53, scope: !7555)
!7577 = !DILocalVariable(name: "type", scope: !7555, file: !3, line: 3146, type: !201)
!7578 = !DILocation(line: 3146, column: 7, scope: !7555)
!7579 = !DILocalVariable(name: "data", scope: !7555, file: !3, line: 3146, type: !201)
!7580 = !DILocation(line: 3146, column: 13, scope: !7555)
!7581 = !DILocalVariable(name: "p", scope: !7555, file: !3, line: 3147, type: !202)
!7582 = !DILocation(line: 3147, column: 15, scope: !7555)
!7583 = !DILocation(line: 3147, column: 34, scope: !7555)
!7584 = !DILocation(line: 3147, column: 19, scope: !7555)
!7585 = !DILocalVariable(name: "lines", scope: !7555, file: !3, line: 3148, type: !215)
!7586 = !DILocation(line: 3148, column: 6, scope: !7555)
!7587 = !DILocalVariable(name: "ret", scope: !7555, file: !3, line: 3149, type: !215)
!7588 = !DILocation(line: 3149, column: 6, scope: !7555)
!7589 = !{i32 -2146116257}
!7590 = !DILocation(line: 3151, column: 15, scope: !7566)
!7591 = !DILocation(line: 3151, column: 23, scope: !7566)
!7592 = !DILocation(line: 3151, column: 30, scope: !7566)
!7593 = !DILocation(line: 3151, column: 27, scope: !7566)
!7594 = !DILocation(line: 3151, column: 34, scope: !7566)
!7595 = !DILocation(line: 3151, column: 38, scope: !7566)
!7596 = !DILocation(line: 3151, column: 6, scope: !7555)
!7597 = !DILocation(line: 3152, column: 3, scope: !7566)
!7598 = !DILocation(line: 3153, column: 6, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 3153, column: 6)
!7600 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 3153, column: 6)
!7601 = !DILocalVariable(name: "__ret_gu", scope: !7602, file: !3, line: 3153, type: !215)
!7602 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 3153, column: 6)
!7603 = !DILocation(line: 3153, column: 6, scope: !7602)
!7604 = !DILocalVariable(name: "__val_gu", scope: !7602, file: !3, line: 3153, type: !515)
!7605 = !{i32 -2141742533}
!7606 = !DILocation(line: 3153, column: 6, scope: !7600)
!7607 = !DILocation(line: 3153, column: 6, scope: !7555)
!7608 = !DILocation(line: 3154, column: 3, scope: !7600)
!7609 = !DILocation(line: 3155, column: 6, scope: !7555)
!7610 = !DILocation(line: 3157, column: 10, scope: !7555)
!7611 = !DILocation(line: 3157, column: 2, scope: !7555)
!7612 = !DILocation(line: 3161, column: 18, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 3158, column: 2)
!7614 = !DILocation(line: 3161, column: 19, scope: !7613)
!7615 = !DILocation(line: 3160, column: 29, scope: !7613)
!7616 = !DILocation(line: 3161, column: 24, scope: !7613)
!7617 = !DILocation(line: 3160, column: 10, scope: !7613)
!7618 = !DILocation(line: 3160, column: 8, scope: !7613)
!7619 = !DILocation(line: 3162, column: 4, scope: !7613)
!7620 = !DILocation(line: 3164, column: 26, scope: !7613)
!7621 = !DILocation(line: 3164, column: 10, scope: !7613)
!7622 = !DILocation(line: 3164, column: 8, scope: !7613)
!7623 = !DILocation(line: 3165, column: 4, scope: !7613)
!7624 = !DILocation(line: 3167, column: 4, scope: !7613)
!7625 = !DILocation(line: 3168, column: 4, scope: !7613)
!7626 = !DILocation(line: 3169, column: 4, scope: !7613)
!7627 = !DILocation(line: 3170, column: 4, scope: !7613)
!7628 = !DILocation(line: 3172, column: 4, scope: !7613)
!7629 = !DILocation(line: 3173, column: 22, scope: !7613)
!7630 = !DILocation(line: 3173, column: 10, scope: !7613)
!7631 = !DILocation(line: 3173, column: 8, scope: !7613)
!7632 = !DILocation(line: 3174, column: 4, scope: !7613)
!7633 = !DILocation(line: 3175, column: 4, scope: !7613)
!7634 = !DILocation(line: 3184, column: 11, scope: !7613)
!7635 = !DILocation(line: 3184, column: 9, scope: !7613)
!7636 = !DILocation(line: 3185, column: 10, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 3185, column: 10)
!7638 = !DILocalVariable(name: "__ret_pu", scope: !7639, file: !3, line: 3185, type: !215)
!7639 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 3185, column: 10)
!7640 = !DILocation(line: 3185, column: 10, scope: !7639)
!7641 = !DILocalVariable(name: "__ptr_pu", scope: !7639, file: !3, line: 3185, type: !216)
!7642 = !DILocalVariable(name: "__val_pu", scope: !7639, file: !3, line: 3185, type: !201)
!7643 = !{i32 -2141740838}
!7644 = !DILocation(line: 3185, column: 10, scope: !7613)
!7645 = !DILocation(line: 3185, column: 8, scope: !7613)
!7646 = !DILocation(line: 3186, column: 4, scope: !7613)
!7647 = !DILocation(line: 3188, column: 4, scope: !7613)
!7648 = !DILocation(line: 3189, column: 11, scope: !7613)
!7649 = !DILocation(line: 3189, column: 9, scope: !7613)
!7650 = !DILocation(line: 3190, column: 4, scope: !7613)
!7651 = !DILocation(line: 3191, column: 10, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 3191, column: 10)
!7653 = !DILocalVariable(name: "__ret_pu", scope: !7654, file: !3, line: 3191, type: !215)
!7654 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 3191, column: 10)
!7655 = !DILocation(line: 3191, column: 10, scope: !7654)
!7656 = !DILocalVariable(name: "__ptr_pu", scope: !7654, file: !3, line: 3191, type: !216)
!7657 = !DILocalVariable(name: "__val_pu", scope: !7654, file: !3, line: 3191, type: !201)
!7658 = !{i32 -2141740105}
!7659 = !DILocation(line: 3191, column: 10, scope: !7613)
!7660 = !DILocation(line: 3191, column: 8, scope: !7613)
!7661 = !DILocation(line: 3192, column: 4, scope: !7613)
!7662 = !DILocation(line: 3194, column: 4, scope: !7613)
!7663 = !DILocation(line: 3195, column: 28, scope: !7613)
!7664 = !DILocation(line: 3195, column: 10, scope: !7613)
!7665 = !DILocation(line: 3195, column: 8, scope: !7613)
!7666 = !DILocation(line: 3196, column: 4, scope: !7613)
!7667 = !DILocation(line: 3197, column: 4, scope: !7613)
!7668 = !DILocation(line: 3199, column: 11, scope: !7613)
!7669 = !DILocation(line: 3199, column: 9, scope: !7613)
!7670 = !DILocation(line: 3200, column: 10, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 3200, column: 10)
!7672 = !DILocalVariable(name: "__ret_pu", scope: !7673, file: !3, line: 3200, type: !215)
!7673 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 3200, column: 10)
!7674 = !DILocation(line: 3200, column: 10, scope: !7673)
!7675 = !DILocalVariable(name: "__ptr_pu", scope: !7673, file: !3, line: 3200, type: !216)
!7676 = !DILocalVariable(name: "__val_pu", scope: !7673, file: !3, line: 3200, type: !201)
!7677 = !{i32 -2141739347}
!7678 = !DILocation(line: 3200, column: 10, scope: !7613)
!7679 = !DILocation(line: 3200, column: 8, scope: !7613)
!7680 = !DILocation(line: 3201, column: 4, scope: !7613)
!7681 = !DILocation(line: 3203, column: 9, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 3203, column: 8)
!7683 = !DILocation(line: 3203, column: 8, scope: !7613)
!7684 = !DILocation(line: 3204, column: 9, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 3203, column: 33)
!7686 = !DILocation(line: 3205, column: 4, scope: !7685)
!7687 = !DILocation(line: 3206, column: 9, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 3206, column: 9)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 3206, column: 9)
!7690 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 3205, column: 11)
!7691 = !DILocalVariable(name: "__ret_gu", scope: !7692, file: !3, line: 3206, type: !215)
!7692 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 3206, column: 9)
!7693 = !DILocation(line: 3206, column: 9, scope: !7692)
!7694 = !DILocalVariable(name: "__val_gu", scope: !7692, file: !3, line: 3206, type: !515)
!7695 = !{i32 -2141738689}
!7696 = !DILocation(line: 3206, column: 9, scope: !7689)
!7697 = !DILocation(line: 3206, column: 9, scope: !7690)
!7698 = !DILocation(line: 3207, column: 10, scope: !7689)
!7699 = !DILocation(line: 3207, column: 6, scope: !7689)
!7700 = !DILocation(line: 3209, column: 23, scope: !7689)
!7701 = !DILocation(line: 3209, column: 6, scope: !7689)
!7702 = !DILocation(line: 3211, column: 4, scope: !7613)
!7703 = !DILocation(line: 3216, column: 10, scope: !7613)
!7704 = !DILocation(line: 3216, column: 8, scope: !7613)
!7705 = !DILocation(line: 3217, column: 4, scope: !7613)
!7706 = !DILocation(line: 3219, column: 8, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 3219, column: 8)
!7708 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 3219, column: 8)
!7709 = !DILocalVariable(name: "__ret_gu", scope: !7710, file: !3, line: 3219, type: !215)
!7710 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 3219, column: 8)
!7711 = !DILocation(line: 3219, column: 8, scope: !7710)
!7712 = !DILocalVariable(name: "__val_gu", scope: !7710, file: !3, line: 3219, type: !7)
!7713 = !{i32 -2141737024}
!7714 = !DILocation(line: 3219, column: 8, scope: !7708)
!7715 = !DILocation(line: 3219, column: 8, scope: !7613)
!7716 = !DILocation(line: 3220, column: 9, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 3219, column: 46)
!7718 = !DILocation(line: 3221, column: 4, scope: !7717)
!7719 = !DILocation(line: 3225, column: 5, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 3221, column: 11)
!7721 = !DILocation(line: 3226, column: 25, scope: !7720)
!7722 = !DILocation(line: 3226, column: 17, scope: !7720)
!7723 = !DILocation(line: 3226, column: 37, scope: !7720)
!7724 = !DILocation(line: 3226, column: 40, scope: !7720)
!7725 = !DILocation(line: 3226, column: 5, scope: !7720)
!7726 = !DILocation(line: 3227, column: 5, scope: !7720)
!7727 = !DILocation(line: 3228, column: 9, scope: !7720)
!7728 = !DILocation(line: 3230, column: 4, scope: !7613)
!7729 = !DILocation(line: 3232, column: 4, scope: !7613)
!7730 = !DILocation(line: 3233, column: 16, scope: !7613)
!7731 = !DILocation(line: 3234, column: 4, scope: !7613)
!7732 = !DILocation(line: 3235, column: 4, scope: !7613)
!7733 = !DILocation(line: 3236, column: 4, scope: !7613)
!7734 = !DILocation(line: 3238, column: 10, scope: !7613)
!7735 = !DILocation(line: 3238, column: 8, scope: !7613)
!7736 = !DILocation(line: 3239, column: 4, scope: !7613)
!7737 = !DILocation(line: 3241, column: 8, scope: !7613)
!7738 = !DILocation(line: 3242, column: 4, scope: !7613)
!7739 = !DILocation(line: 3244, column: 9, scope: !7555)
!7740 = !DILocation(line: 3244, column: 2, scope: !7555)
!7741 = !DILocation(line: 3245, column: 1, scope: !7555)
!7742 = distinct !DISubprogram(name: "might_fault", scope: !7743, file: !7743, line: 315, type: !1978, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7743 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!7744 = !DILocation(line: 315, column: 40, scope: !7742)
!7745 = distinct !DISubprogram(name: "unblank_screen", scope: !3, file: !3, line: 4423, type: !1978, scopeLine: 4424, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7746 = !DILocation(line: 4425, column: 2, scope: !7745)
!7747 = !DILocation(line: 4426, column: 1, scope: !7745)
!7748 = distinct !DISubprogram(name: "set_vesa_blanking", scope: !3, file: !3, line: 4302, type: !7749, scopeLine: 4303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{!215, !202}
!7751 = !DILocalVariable(name: "p", arg: 1, scope: !7748, file: !3, line: 4302, type: !202)
!7752 = !DILocation(line: 4302, column: 43, scope: !7748)
!7753 = !DILocalVariable(name: "mode", scope: !7748, file: !3, line: 4304, type: !7)
!7754 = !DILocation(line: 4304, column: 15, scope: !7748)
!7755 = !DILocation(line: 4306, column: 6, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 4306, column: 6)
!7757 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 4306, column: 6)
!7758 = !DILocalVariable(name: "__ret_gu", scope: !7759, file: !3, line: 4306, type: !215)
!7759 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 4306, column: 6)
!7760 = !DILocation(line: 4306, column: 6, scope: !7759)
!7761 = !DILocalVariable(name: "__val_gu", scope: !7759, file: !3, line: 4306, type: !515)
!7762 = !{i32 -2141688017}
!7763 = !DILocation(line: 4306, column: 6, scope: !7757)
!7764 = !DILocation(line: 4306, column: 6, scope: !7748)
!7765 = !DILocation(line: 4307, column: 3, scope: !7757)
!7766 = !DILocation(line: 4309, column: 21, scope: !7748)
!7767 = !DILocation(line: 4309, column: 26, scope: !7748)
!7768 = !DILocation(line: 4309, column: 20, scope: !7748)
!7769 = !DILocation(line: 4309, column: 33, scope: !7748)
!7770 = !DILocation(line: 4309, column: 18, scope: !7748)
!7771 = !DILocation(line: 4310, column: 2, scope: !7748)
!7772 = !DILocation(line: 4311, column: 1, scope: !7748)
!7773 = distinct !DISubprogram(name: "do_blank_screen", scope: !3, file: !3, line: 4313, type: !1971, scopeLine: 4314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7774 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !7775)
!7775 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !7776)
!7776 = distinct !DILocation(line: 4320, column: 2, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 4320, column: 2)
!7778 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !7779)
!7779 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !7776)
!7780 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !7779)
!7781 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !7776)
!7782 = !DILocalVariable(name: "entering_gfx", arg: 1, scope: !7773, file: !3, line: 4313, type: !215)
!7783 = !DILocation(line: 4313, column: 26, scope: !7773)
!7784 = !DILocalVariable(name: "vc", scope: !7773, file: !3, line: 4315, type: !220)
!7785 = !DILocation(line: 4315, column: 18, scope: !7773)
!7786 = !DILocation(line: 4315, column: 31, scope: !7773)
!7787 = !DILocation(line: 4315, column: 23, scope: !7773)
!7788 = !DILocation(line: 4315, column: 43, scope: !7773)
!7789 = !DILocalVariable(name: "i", scope: !7773, file: !3, line: 4316, type: !215)
!7790 = !DILocation(line: 4316, column: 6, scope: !7773)
!7791 = !DILocation(line: 4318, column: 2, scope: !7773)
!7792 = !DILocation(line: 4318, column: 2, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 4318, column: 2)
!7794 = !DILocation(line: 4318, column: 2, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 4318, column: 2)
!7796 = !DILocalVariable(name: "__ret_warn_on", scope: !7777, file: !3, line: 4320, type: !215)
!7797 = !DILocation(line: 4320, column: 2, scope: !7777)
!7798 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !7776)
!7799 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !7779)
!7800 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !7779)
!7801 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !7779)
!7802 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !7779)
!7803 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !7776)
!7804 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !7775)
!7805 = !DILocation(line: 0, scope: !7777)
!7806 = !DILocation(line: 4320, column: 2, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 4320, column: 2)
!7808 = !DILocation(line: 4320, column: 2, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 4320, column: 2)
!7810 = !DILocation(line: 4320, column: 2, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 4320, column: 2)
!7812 = !DILocation(line: 4320, column: 2, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 4320, column: 2)
!7814 = !{i32 -2141685803, i32 -2141685774, i32 -2141685728, i32 -2141685670, i32 -2141685616, i32 -2141685562, i32 -2141685507, i32 -2141685476}
!7815 = !DILocation(line: 4320, column: 2, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 4320, column: 2)
!7817 = !{i32 -2141685074, i32 -2141685067, i32 -2141685015, i32 -2141684984, i32 -2141684954}
!7818 = !DILocation(line: 4320, column: 2, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 4320, column: 2)
!7820 = !DILocation(line: 4322, column: 6, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 4322, column: 6)
!7822 = !DILocation(line: 4322, column: 6, scope: !7773)
!7823 = !DILocation(line: 4323, column: 7, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7825, file: !3, line: 4323, column: 7)
!7825 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 4322, column: 23)
!7826 = !DILocation(line: 4323, column: 19, scope: !7824)
!7827 = !DILocation(line: 4323, column: 7, scope: !7825)
!7828 = !DILocation(line: 4324, column: 16, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 4323, column: 39)
!7830 = !DILocation(line: 4325, column: 4, scope: !7829)
!7831 = !DILocation(line: 4325, column: 8, scope: !7829)
!7832 = !DILocation(line: 4325, column: 15, scope: !7829)
!7833 = !DILocation(line: 4325, column: 25, scope: !7829)
!7834 = !DILocation(line: 4325, column: 29, scope: !7829)
!7835 = !DILocation(line: 4325, column: 45, scope: !7829)
!7836 = !DILocation(line: 4326, column: 3, scope: !7829)
!7837 = !DILocation(line: 4327, column: 3, scope: !7825)
!7838 = !DILocation(line: 4331, column: 6, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 4331, column: 6)
!7840 = !DILocation(line: 4331, column: 6, scope: !7773)
!7841 = !DILocation(line: 4332, column: 15, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 4331, column: 20)
!7843 = !DILocation(line: 4332, column: 3, scope: !7842)
!7844 = !DILocation(line: 4333, column: 15, scope: !7842)
!7845 = !DILocation(line: 4333, column: 3, scope: !7842)
!7846 = !DILocation(line: 4334, column: 3, scope: !7842)
!7847 = !DILocation(line: 4334, column: 7, scope: !7842)
!7848 = !DILocation(line: 4334, column: 14, scope: !7842)
!7849 = !DILocation(line: 4334, column: 24, scope: !7842)
!7850 = !DILocation(line: 4335, column: 21, scope: !7842)
!7851 = !DILocation(line: 4335, column: 32, scope: !7842)
!7852 = !DILocation(line: 4335, column: 19, scope: !7842)
!7853 = !DILocation(line: 4336, column: 15, scope: !7842)
!7854 = !DILocation(line: 4337, column: 14, scope: !7842)
!7855 = !DILocation(line: 4337, column: 3, scope: !7842)
!7856 = !DILocation(line: 4338, column: 3, scope: !7842)
!7857 = !DILocation(line: 4341, column: 14, scope: !7773)
!7858 = !DILocation(line: 4344, column: 6, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 4344, column: 6)
!7860 = !DILocation(line: 4344, column: 10, scope: !7859)
!7861 = !DILocation(line: 4344, column: 18, scope: !7859)
!7862 = !DILocation(line: 4344, column: 6, scope: !7773)
!7863 = !DILocation(line: 4345, column: 21, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7859, file: !3, line: 4344, column: 30)
!7865 = !DILocation(line: 4345, column: 32, scope: !7864)
!7866 = !DILocation(line: 4345, column: 19, scope: !7864)
!7867 = !DILocation(line: 4346, column: 3, scope: !7864)
!7868 = !DILocation(line: 4349, column: 14, scope: !7773)
!7869 = !DILocation(line: 4349, column: 2, scope: !7773)
!7870 = !DILocation(line: 4350, column: 2, scope: !7773)
!7871 = !DILocation(line: 4351, column: 22, scope: !7773)
!7872 = !DILocation(line: 4353, column: 14, scope: !7773)
!7873 = !DILocation(line: 4353, column: 2, scope: !7773)
!7874 = !DILocation(line: 4355, column: 6, scope: !7773)
!7875 = !DILocation(line: 4355, column: 10, scope: !7773)
!7876 = !DILocation(line: 4355, column: 17, scope: !7773)
!7877 = !DILocation(line: 4355, column: 27, scope: !7773)
!7878 = !DILocation(line: 4355, column: 31, scope: !7773)
!7879 = !DILocation(line: 4355, column: 56, scope: !7773)
!7880 = !DILocation(line: 4355, column: 72, scope: !7773)
!7881 = !DILocation(line: 4355, column: 4, scope: !7773)
!7882 = !DILocation(line: 4356, column: 20, scope: !7773)
!7883 = !DILocation(line: 4356, column: 31, scope: !7773)
!7884 = !DILocation(line: 4356, column: 18, scope: !7773)
!7885 = !DILocation(line: 4357, column: 6, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 4357, column: 6)
!7887 = !DILocation(line: 4357, column: 6, scope: !7773)
!7888 = !DILocation(line: 4358, column: 14, scope: !7886)
!7889 = !DILocation(line: 4358, column: 3, scope: !7886)
!7890 = !DILocation(line: 4360, column: 6, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 4360, column: 6)
!7892 = !DILocation(line: 4360, column: 25, scope: !7891)
!7893 = !DILocation(line: 4360, column: 28, scope: !7891)
!7894 = !DILocation(line: 4360, column: 6, scope: !7773)
!7895 = !DILocation(line: 4361, column: 3, scope: !7891)
!7896 = !DILocation(line: 4363, column: 6, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 4363, column: 6)
!7898 = !DILocation(line: 4363, column: 24, scope: !7897)
!7899 = !DILocation(line: 4363, column: 27, scope: !7897)
!7900 = !DILocation(line: 4363, column: 6, scope: !7773)
!7901 = !DILocation(line: 4364, column: 15, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 4363, column: 44)
!7903 = !DILocation(line: 4365, column: 29, scope: !7902)
!7904 = !DILocation(line: 4365, column: 39, scope: !7902)
!7905 = !DILocation(line: 4365, column: 37, scope: !7902)
!7906 = !DILocation(line: 4365, column: 3, scope: !7902)
!7907 = !DILocation(line: 4366, column: 2, scope: !7902)
!7908 = !DILocation(line: 4367, column: 32, scope: !7773)
!7909 = !DILocation(line: 4367, column: 36, scope: !7773)
!7910 = !DILocation(line: 4367, column: 44, scope: !7773)
!7911 = !DILocation(line: 4367, column: 48, scope: !7773)
!7912 = !DILocation(line: 4367, column: 2, scope: !7773)
!7913 = !DILocation(line: 4368, column: 1, scope: !7773)
!7914 = distinct !DISubprogram(name: "con_init", scope: !3, file: !3, line: 3449, type: !4815, scopeLine: 3450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!7915 = !DILocalVariable(name: "display_desc", scope: !7914, file: !3, line: 3451, type: !336)
!7916 = !DILocation(line: 3451, column: 14, scope: !7914)
!7917 = !DILocalVariable(name: "vc", scope: !7914, file: !3, line: 3452, type: !220)
!7918 = !DILocation(line: 3452, column: 18, scope: !7914)
!7919 = !DILocalVariable(name: "currcons", scope: !7914, file: !3, line: 3453, type: !7)
!7920 = !DILocation(line: 3453, column: 15, scope: !7914)
!7921 = !DILocalVariable(name: "i", scope: !7914, file: !3, line: 3453, type: !7)
!7922 = !DILocation(line: 3453, column: 29, scope: !7914)
!7923 = !DILocation(line: 3455, column: 2, scope: !7914)
!7924 = !DILocation(line: 3457, column: 7, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 3457, column: 6)
!7926 = !DILocation(line: 3457, column: 6, scope: !7914)
!7927 = !DILocation(line: 3458, column: 14, scope: !7925)
!7928 = !DILocation(line: 3458, column: 3, scope: !7925)
!7929 = !DILocation(line: 3459, column: 17, scope: !7914)
!7930 = !DILocation(line: 3459, column: 29, scope: !7914)
!7931 = !DILocation(line: 3459, column: 15, scope: !7914)
!7932 = !DILocation(line: 3460, column: 7, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 3460, column: 6)
!7934 = !DILocation(line: 3460, column: 6, scope: !7914)
!7935 = !DILocation(line: 3461, column: 14, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 3460, column: 21)
!7937 = !DILocation(line: 3462, column: 3, scope: !7936)
!7938 = !DILocation(line: 3463, column: 3, scope: !7936)
!7939 = !DILocation(line: 3466, column: 9, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 3466, column: 2)
!7941 = !DILocation(line: 3466, column: 7, scope: !7940)
!7942 = !DILocation(line: 3466, column: 14, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 3466, column: 2)
!7944 = !DILocation(line: 3466, column: 16, scope: !7943)
!7945 = !DILocation(line: 3466, column: 2, scope: !7940)
!7946 = !DILocalVariable(name: "con_driver", scope: !7947, file: !3, line: 3467, type: !7948)
!7947 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 3466, column: 42)
!7948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!7949 = !DILocation(line: 3467, column: 22, scope: !7947)
!7950 = !DILocation(line: 3467, column: 58, scope: !7947)
!7951 = !DILocation(line: 3467, column: 36, scope: !7947)
!7952 = !DILocation(line: 3469, column: 7, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 3469, column: 7)
!7954 = !DILocation(line: 3469, column: 19, scope: !7953)
!7955 = !DILocation(line: 3469, column: 23, scope: !7953)
!7956 = !DILocation(line: 3469, column: 7, scope: !7947)
!7957 = !DILocation(line: 3470, column: 22, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 3469, column: 32)
!7959 = !DILocation(line: 3470, column: 4, scope: !7958)
!7960 = !DILocation(line: 3470, column: 16, scope: !7958)
!7961 = !DILocation(line: 3470, column: 20, scope: !7958)
!7962 = !DILocation(line: 3471, column: 23, scope: !7958)
!7963 = !DILocation(line: 3471, column: 4, scope: !7958)
!7964 = !DILocation(line: 3471, column: 16, scope: !7958)
!7965 = !DILocation(line: 3471, column: 21, scope: !7958)
!7966 = !DILocation(line: 3472, column: 4, scope: !7958)
!7967 = !DILocation(line: 3472, column: 16, scope: !7958)
!7968 = !DILocation(line: 3472, column: 21, scope: !7958)
!7969 = !DILocation(line: 3473, column: 4, scope: !7958)
!7970 = !DILocation(line: 3473, column: 16, scope: !7958)
!7971 = !DILocation(line: 3473, column: 22, scope: !7958)
!7972 = !DILocation(line: 3474, column: 4, scope: !7958)
!7973 = !DILocation(line: 3474, column: 16, scope: !7958)
!7974 = !DILocation(line: 3474, column: 21, scope: !7958)
!7975 = !DILocation(line: 3475, column: 4, scope: !7958)
!7976 = !DILocation(line: 3477, column: 2, scope: !7947)
!7977 = !DILocation(line: 3466, column: 38, scope: !7943)
!7978 = !DILocation(line: 3466, column: 2, scope: !7943)
!7979 = distinct !{!7979, !7945, !7980}
!7980 = !DILocation(line: 3477, column: 2, scope: !7940)
!7981 = !DILocation(line: 3479, column: 9, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 3479, column: 2)
!7983 = !DILocation(line: 3479, column: 7, scope: !7982)
!7984 = !DILocation(line: 3479, column: 14, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 3479, column: 2)
!7986 = !DILocation(line: 3479, column: 16, scope: !7985)
!7987 = !DILocation(line: 3479, column: 2, scope: !7982)
!7988 = !DILocation(line: 3480, column: 23, scope: !7985)
!7989 = !DILocation(line: 3480, column: 18, scope: !7985)
!7990 = !DILocation(line: 3480, column: 3, scope: !7985)
!7991 = !DILocation(line: 3480, column: 21, scope: !7985)
!7992 = !DILocation(line: 3479, column: 36, scope: !7985)
!7993 = !DILocation(line: 3479, column: 2, scope: !7985)
!7994 = distinct !{!7994, !7987, !7995}
!7995 = !DILocation(line: 3480, column: 23, scope: !7982)
!7996 = !DILocation(line: 3482, column: 6, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 3482, column: 6)
!7998 = !DILocation(line: 3482, column: 6, scope: !7914)
!7999 = !DILocation(line: 3483, column: 15, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 3482, column: 21)
!8001 = !DILocation(line: 3484, column: 29, scope: !8000)
!8002 = !DILocation(line: 3484, column: 40, scope: !8000)
!8003 = !DILocation(line: 3484, column: 54, scope: !8000)
!8004 = !DILocation(line: 3484, column: 39, scope: !8000)
!8005 = !DILocation(line: 3484, column: 37, scope: !8000)
!8006 = !DILocation(line: 3484, column: 3, scope: !8000)
!8007 = !DILocation(line: 3485, column: 2, scope: !8000)
!8008 = !DILocation(line: 3487, column: 16, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 3487, column: 2)
!8010 = !DILocation(line: 3487, column: 7, scope: !8009)
!8011 = !DILocation(line: 3487, column: 21, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 3487, column: 2)
!8013 = !DILocation(line: 3487, column: 30, scope: !8012)
!8014 = !DILocation(line: 3487, column: 2, scope: !8009)
!8015 = !DILocation(line: 3488, column: 30, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 3487, column: 61)
!8017 = !DILocation(line: 3488, column: 28, scope: !8016)
!8018 = !DILocation(line: 3488, column: 11, scope: !8016)
!8019 = !DILocation(line: 3488, column: 3, scope: !8016)
!8020 = !DILocation(line: 3488, column: 21, scope: !8016)
!8021 = !DILocation(line: 3488, column: 23, scope: !8016)
!8022 = !DILocation(line: 3489, column: 3, scope: !8016)
!8023 = !DILocation(line: 3489, column: 3, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8016, file: !3, line: 3489, column: 3)
!8025 = !DILocation(line: 3490, column: 18, scope: !8016)
!8026 = !DILocation(line: 3490, column: 22, scope: !8016)
!8027 = !DILocation(line: 3490, column: 3, scope: !8016)
!8028 = !DILocation(line: 3491, column: 15, scope: !8016)
!8029 = !DILocation(line: 3491, column: 19, scope: !8016)
!8030 = !DILocation(line: 3491, column: 3, scope: !8016)
!8031 = !DILocation(line: 3493, column: 30, scope: !8016)
!8032 = !DILocation(line: 3493, column: 34, scope: !8016)
!8033 = !DILocation(line: 3493, column: 22, scope: !8016)
!8034 = !DILocation(line: 3493, column: 3, scope: !8016)
!8035 = !DILocation(line: 3493, column: 7, scope: !8016)
!8036 = !DILocation(line: 3493, column: 20, scope: !8016)
!8037 = !DILocation(line: 3494, column: 11, scope: !8016)
!8038 = !DILocation(line: 3494, column: 15, scope: !8016)
!8039 = !DILocation(line: 3494, column: 19, scope: !8016)
!8040 = !DILocation(line: 3494, column: 28, scope: !8016)
!8041 = !DILocation(line: 3494, column: 32, scope: !8016)
!8042 = !DILocation(line: 3495, column: 4, scope: !8016)
!8043 = !DILocation(line: 3495, column: 13, scope: !8016)
!8044 = !DILocation(line: 3495, column: 17, scope: !8016)
!8045 = !DILocation(line: 3495, column: 21, scope: !8016)
!8046 = !DILocation(line: 3495, column: 28, scope: !8016)
!8047 = !DILocation(line: 3495, column: 16, scope: !8016)
!8048 = !DILocation(line: 3494, column: 3, scope: !8016)
!8049 = !DILocation(line: 3496, column: 2, scope: !8016)
!8050 = !DILocation(line: 3487, column: 57, scope: !8012)
!8051 = !DILocation(line: 3487, column: 2, scope: !8012)
!8052 = distinct !{!8052, !8014, !8053}
!8053 = !DILocation(line: 3496, column: 2, scope: !8009)
!8054 = !DILocation(line: 3497, column: 24, scope: !7914)
!8055 = !DILocation(line: 3497, column: 11, scope: !7914)
!8056 = !DILocation(line: 3498, column: 35, scope: !7914)
!8057 = !DILocation(line: 3498, column: 27, scope: !7914)
!8058 = !DILocation(line: 3498, column: 45, scope: !7914)
!8059 = !DILocation(line: 3498, column: 25, scope: !7914)
!8060 = !DILocation(line: 3498, column: 20, scope: !7914)
!8061 = !DILocation(line: 3499, column: 13, scope: !7914)
!8062 = !DILocation(line: 3499, column: 2, scope: !7914)
!8063 = !DILocation(line: 3500, column: 14, scope: !7914)
!8064 = !DILocation(line: 3500, column: 2, scope: !7914)
!8065 = !DILocation(line: 3501, column: 9, scope: !7914)
!8066 = !DILocation(line: 3501, column: 13, scope: !7914)
!8067 = !DILocation(line: 3501, column: 17, scope: !7914)
!8068 = !DILocation(line: 3501, column: 23, scope: !7914)
!8069 = !DILocation(line: 3501, column: 26, scope: !7914)
!8070 = !DILocation(line: 3501, column: 30, scope: !7914)
!8071 = !DILocation(line: 3501, column: 36, scope: !7914)
!8072 = !DILocation(line: 3501, column: 2, scope: !7914)
!8073 = !DILocation(line: 3502, column: 8, scope: !7914)
!8074 = !DILocation(line: 3502, column: 2, scope: !7914)
!8075 = !DILocation(line: 3503, column: 2, scope: !7914)
!8076 = !DILocation(line: 3504, column: 2, scope: !7914)
!8077 = !DILocation(line: 3507, column: 12, scope: !7914)
!8078 = !DILocation(line: 3509, column: 2, scope: !7914)
!8079 = !DILocation(line: 3512, column: 2, scope: !7914)
!8080 = !DILocation(line: 3514, column: 2, scope: !7914)
!8081 = !DILocation(line: 3515, column: 1, scope: !7914)
!8082 = distinct !DISubprogram(name: "vty_init", scope: !3, file: !3, line: 3556, type: !8083, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!215, !2949}
!8085 = !DILocalVariable(name: "console_fops", arg: 1, scope: !8082, file: !3, line: 3556, type: !2949)
!8086 = !DILocation(line: 3556, column: 51, scope: !8082)
!8087 = !DILocation(line: 3558, column: 23, scope: !8082)
!8088 = !DILocation(line: 3558, column: 2, scope: !8082)
!8089 = !DILocation(line: 3559, column: 6, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 3559, column: 6)
!8091 = !DILocation(line: 3559, column: 50, scope: !8090)
!8092 = !DILocation(line: 3560, column: 6, scope: !8090)
!8093 = !DILocation(line: 3560, column: 66, scope: !8090)
!8094 = !DILocation(line: 3559, column: 6, scope: !8082)
!8095 = !DILocation(line: 3561, column: 3, scope: !8090)
!8096 = !DILocation(line: 3562, column: 38, scope: !8082)
!8097 = !DILocation(line: 3562, column: 12, scope: !8082)
!8098 = !DILocation(line: 3562, column: 10, scope: !8082)
!8099 = !DILocation(line: 3565, column: 13, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 3565, column: 6)
!8101 = !DILocation(line: 3565, column: 6, scope: !8100)
!8102 = !DILocation(line: 3565, column: 6, scope: !8082)
!8103 = !DILocation(line: 3566, column: 11, scope: !8100)
!8104 = !DILocation(line: 3566, column: 3, scope: !8100)
!8105 = !DILocation(line: 3568, column: 2, scope: !8082)
!8106 = !DILocation(line: 3570, column: 19, scope: !8082)
!8107 = !DILocation(line: 3570, column: 17, scope: !8082)
!8108 = !DILocation(line: 3571, column: 7, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 3571, column: 6)
!8110 = !DILocation(line: 3571, column: 6, scope: !8082)
!8111 = !DILocation(line: 3572, column: 3, scope: !8109)
!8112 = !DILocation(line: 3574, column: 2, scope: !8082)
!8113 = !DILocation(line: 3574, column: 18, scope: !8082)
!8114 = !DILocation(line: 3574, column: 23, scope: !8082)
!8115 = !DILocation(line: 3575, column: 2, scope: !8082)
!8116 = !DILocation(line: 3575, column: 18, scope: !8082)
!8117 = !DILocation(line: 3575, column: 28, scope: !8082)
!8118 = !DILocation(line: 3576, column: 2, scope: !8082)
!8119 = !DILocation(line: 3576, column: 18, scope: !8082)
!8120 = !DILocation(line: 3576, column: 24, scope: !8082)
!8121 = !DILocation(line: 3577, column: 2, scope: !8082)
!8122 = !DILocation(line: 3577, column: 18, scope: !8082)
!8123 = !DILocation(line: 3577, column: 30, scope: !8082)
!8124 = !DILocation(line: 3578, column: 2, scope: !8082)
!8125 = !DILocation(line: 3578, column: 18, scope: !8082)
!8126 = !DILocation(line: 3578, column: 23, scope: !8082)
!8127 = !DILocation(line: 3579, column: 2, scope: !8082)
!8128 = !DILocation(line: 3579, column: 18, scope: !8082)
!8129 = !DILocation(line: 3579, column: 33, scope: !8082)
!8130 = !DILocation(line: 3580, column: 6, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 3580, column: 6)
!8132 = !DILocation(line: 3580, column: 6, scope: !8082)
!8133 = !DILocation(line: 3581, column: 3, scope: !8131)
!8134 = !DILocation(line: 3581, column: 19, scope: !8131)
!8135 = !DILocation(line: 3581, column: 32, scope: !8131)
!8136 = !DILocation(line: 3581, column: 40, scope: !8131)
!8137 = !DILocation(line: 3582, column: 2, scope: !8082)
!8138 = !DILocation(line: 3582, column: 18, scope: !8082)
!8139 = !DILocation(line: 3582, column: 24, scope: !8082)
!8140 = !DILocation(line: 3583, column: 21, scope: !8082)
!8141 = !DILocation(line: 3583, column: 2, scope: !8082)
!8142 = !DILocation(line: 3584, column: 26, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 3584, column: 6)
!8144 = !DILocation(line: 3584, column: 6, scope: !8143)
!8145 = !DILocation(line: 3584, column: 6, scope: !8082)
!8146 = !DILocation(line: 3585, column: 3, scope: !8143)
!8147 = !DILocation(line: 3586, column: 2, scope: !8082)
!8148 = !DILocation(line: 3587, column: 2, scope: !8082)
!8149 = !DILocation(line: 3591, column: 2, scope: !8082)
!8150 = distinct !DISubprogram(name: "IS_ERR", scope: !8151, file: !8151, line: 34, type: !8152, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8151 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!8152 = !DISubroutineType(types: !8153)
!8153 = !{!578, !2216}
!8154 = !DILocalVariable(name: "ptr", arg: 1, scope: !8150, file: !8151, line: 34, type: !2216)
!8155 = !DILocation(line: 34, column: 60, scope: !8150)
!8156 = !DILocation(line: 36, column: 9, scope: !8150)
!8157 = !DILocation(line: 36, column: 2, scope: !8150)
!8158 = distinct !DISubprogram(name: "alloc_tty_driver", scope: !3880, file: !3880, line: 355, type: !8159, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8159 = !DISubroutineType(types: !8160)
!8160 = !{!3878, !7}
!8161 = !DILocalVariable(name: "lines", arg: 1, scope: !8158, file: !3880, line: 355, type: !7)
!8162 = !DILocation(line: 355, column: 64, scope: !8158)
!8163 = !DILocalVariable(name: "ret", scope: !8158, file: !3880, line: 357, type: !3878)
!8164 = !DILocation(line: 357, column: 21, scope: !8158)
!8165 = !DILocation(line: 357, column: 27, scope: !8158)
!8166 = !DILocation(line: 358, column: 13, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8158, file: !3880, line: 358, column: 6)
!8168 = !DILocation(line: 358, column: 6, scope: !8167)
!8169 = !DILocation(line: 358, column: 6, scope: !8158)
!8170 = !DILocation(line: 359, column: 3, scope: !8167)
!8171 = !DILocation(line: 360, column: 9, scope: !8158)
!8172 = !DILocation(line: 360, column: 2, scope: !8158)
!8173 = !DILocation(line: 361, column: 1, scope: !8158)
!8174 = distinct !DISubprogram(name: "do_unbind_con_driver", scope: !3, file: !3, line: 3701, type: !8175, scopeLine: 3702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8175 = !DISubroutineType(types: !8176)
!8176 = !{!215, !4231, !215, !215, !215}
!8177 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !8178)
!8178 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !8179)
!8179 = distinct !DILocation(line: 3711, column: 2, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3711, column: 2)
!8181 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !8182)
!8182 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !8179)
!8183 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !8182)
!8184 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !8179)
!8185 = !DILocalVariable(name: "csw", arg: 1, scope: !8174, file: !3, line: 3701, type: !4231)
!8186 = !DILocation(line: 3701, column: 46, scope: !8174)
!8187 = !DILocalVariable(name: "first", arg: 2, scope: !8174, file: !3, line: 3701, type: !215)
!8188 = !DILocation(line: 3701, column: 55, scope: !8174)
!8189 = !DILocalVariable(name: "last", arg: 3, scope: !8174, file: !3, line: 3701, type: !215)
!8190 = !DILocation(line: 3701, column: 66, scope: !8174)
!8191 = !DILocalVariable(name: "deflt", arg: 4, scope: !8174, file: !3, line: 3701, type: !215)
!8192 = !DILocation(line: 3701, column: 76, scope: !8174)
!8193 = !DILocalVariable(name: "owner", scope: !8174, file: !3, line: 3703, type: !719)
!8194 = !DILocation(line: 3703, column: 17, scope: !8174)
!8195 = !DILocation(line: 3703, column: 25, scope: !8174)
!8196 = !DILocation(line: 3703, column: 30, scope: !8174)
!8197 = !DILocalVariable(name: "defcsw", scope: !8174, file: !3, line: 3704, type: !4231)
!8198 = !DILocation(line: 3704, column: 22, scope: !8174)
!8199 = !DILocalVariable(name: "con_driver", scope: !8174, file: !3, line: 3705, type: !7948)
!8200 = !DILocation(line: 3705, column: 21, scope: !8174)
!8201 = !DILocalVariable(name: "con_back", scope: !8174, file: !3, line: 3705, type: !7948)
!8202 = !DILocation(line: 3705, column: 41, scope: !8174)
!8203 = !DILocalVariable(name: "i", scope: !8174, file: !3, line: 3706, type: !215)
!8204 = !DILocation(line: 3706, column: 6, scope: !8174)
!8205 = !DILocalVariable(name: "retval", scope: !8174, file: !3, line: 3706, type: !215)
!8206 = !DILocation(line: 3706, column: 9, scope: !8174)
!8207 = !DILocation(line: 3708, column: 22, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3708, column: 6)
!8209 = !DILocation(line: 3708, column: 7, scope: !8208)
!8210 = !DILocation(line: 3708, column: 6, scope: !8174)
!8211 = !DILocation(line: 3709, column: 3, scope: !8208)
!8212 = !DILocalVariable(name: "__ret_warn_on", scope: !8180, file: !3, line: 3711, type: !215)
!8213 = !DILocation(line: 3711, column: 2, scope: !8180)
!8214 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !8179)
!8215 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !8182)
!8216 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !8182)
!8217 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !8182)
!8218 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !8182)
!8219 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !8179)
!8220 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !8178)
!8221 = !DILocation(line: 0, scope: !8180)
!8222 = !DILocation(line: 3711, column: 2, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 3711, column: 2)
!8224 = !DILocation(line: 3711, column: 2, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 3711, column: 2)
!8226 = !DILocation(line: 3711, column: 2, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 3711, column: 2)
!8228 = !DILocation(line: 3711, column: 2, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 3711, column: 2)
!8230 = !{i32 -2141711418, i32 -2141711389, i32 -2141711343, i32 -2141711285, i32 -2141711231, i32 -2141711177, i32 -2141711122, i32 -2141711091}
!8231 = !DILocation(line: 3711, column: 2, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 3711, column: 2)
!8233 = !{i32 -2141710689, i32 -2141710682, i32 -2141710630, i32 -2141710599, i32 -2141710569}
!8234 = !DILocation(line: 3711, column: 2, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8225, file: !3, line: 3711, column: 2)
!8236 = !DILocation(line: 3714, column: 9, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3714, column: 2)
!8238 = !DILocation(line: 3714, column: 7, scope: !8237)
!8239 = !DILocation(line: 3714, column: 14, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 3714, column: 2)
!8241 = !DILocation(line: 3714, column: 16, scope: !8240)
!8242 = !DILocation(line: 3714, column: 2, scope: !8237)
!8243 = !DILocation(line: 3715, column: 39, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 3714, column: 42)
!8245 = !DILocation(line: 3715, column: 17, scope: !8244)
!8246 = !DILocation(line: 3715, column: 14, scope: !8244)
!8247 = !DILocation(line: 3717, column: 7, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 3717, column: 7)
!8249 = !DILocation(line: 3717, column: 19, scope: !8248)
!8250 = !DILocation(line: 3717, column: 26, scope: !8248)
!8251 = !DILocation(line: 3717, column: 23, scope: !8248)
!8252 = !DILocation(line: 3717, column: 30, scope: !8248)
!8253 = !DILocation(line: 3718, column: 7, scope: !8248)
!8254 = !DILocation(line: 3718, column: 19, scope: !8248)
!8255 = !DILocation(line: 3718, column: 24, scope: !8248)
!8256 = !DILocation(line: 3717, column: 7, scope: !8244)
!8257 = !DILocation(line: 3719, column: 11, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8248, file: !3, line: 3718, column: 50)
!8259 = !DILocation(line: 3720, column: 4, scope: !8258)
!8260 = !DILocation(line: 3722, column: 2, scope: !8244)
!8261 = !DILocation(line: 3714, column: 38, scope: !8240)
!8262 = !DILocation(line: 3714, column: 2, scope: !8240)
!8263 = distinct !{!8263, !8242, !8264}
!8264 = !DILocation(line: 3722, column: 2, scope: !8237)
!8265 = !DILocation(line: 3724, column: 6, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3724, column: 6)
!8267 = !DILocation(line: 3724, column: 6, scope: !8174)
!8268 = !DILocation(line: 3725, column: 3, scope: !8266)
!8269 = !DILocation(line: 3727, column: 9, scope: !8174)
!8270 = !DILocation(line: 3730, column: 9, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3730, column: 2)
!8272 = !DILocation(line: 3730, column: 7, scope: !8271)
!8273 = !DILocation(line: 3730, column: 14, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 3730, column: 2)
!8275 = !DILocation(line: 3730, column: 16, scope: !8274)
!8276 = !DILocation(line: 3730, column: 2, scope: !8271)
!8277 = !DILocation(line: 3731, column: 37, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 3730, column: 42)
!8279 = !DILocation(line: 3731, column: 15, scope: !8278)
!8280 = !DILocation(line: 3731, column: 12, scope: !8278)
!8281 = !DILocation(line: 3733, column: 7, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8278, file: !3, line: 3733, column: 7)
!8283 = !DILocation(line: 3733, column: 17, scope: !8282)
!8284 = !DILocation(line: 3733, column: 21, scope: !8282)
!8285 = !DILocation(line: 3733, column: 24, scope: !8282)
!8286 = !DILocation(line: 3733, column: 34, scope: !8282)
!8287 = !DILocation(line: 3733, column: 41, scope: !8282)
!8288 = !DILocation(line: 3733, column: 38, scope: !8282)
!8289 = !DILocation(line: 3733, column: 7, scope: !8278)
!8290 = !DILocation(line: 3734, column: 13, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 3733, column: 46)
!8292 = !DILocation(line: 3734, column: 23, scope: !8291)
!8293 = !DILocation(line: 3734, column: 11, scope: !8291)
!8294 = !DILocation(line: 3735, column: 11, scope: !8291)
!8295 = !DILocation(line: 3736, column: 4, scope: !8291)
!8296 = !DILocation(line: 3738, column: 2, scope: !8278)
!8297 = !DILocation(line: 3730, column: 38, scope: !8274)
!8298 = !DILocation(line: 3730, column: 2, scope: !8274)
!8299 = distinct !{!8299, !8276, !8300}
!8300 = !DILocation(line: 3738, column: 2, scope: !8271)
!8301 = !DILocation(line: 3740, column: 6, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3740, column: 6)
!8303 = !DILocation(line: 3740, column: 6, scope: !8174)
!8304 = !DILocation(line: 3741, column: 3, scope: !8302)
!8305 = !DILocation(line: 3743, column: 20, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3743, column: 6)
!8307 = !DILocation(line: 3743, column: 7, scope: !8306)
!8308 = !DILocation(line: 3743, column: 6, scope: !8174)
!8309 = !DILocation(line: 3744, column: 3, scope: !8306)
!8310 = !DILocalVariable(name: "__UNIQUE_ID___x278", scope: !8311, file: !3, line: 3746, type: !215)
!8311 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3746, column: 10)
!8312 = !DILocation(line: 3746, column: 10, scope: !8311)
!8313 = !DILocalVariable(name: "__UNIQUE_ID___y279", scope: !8311, file: !3, line: 3746, type: !215)
!8314 = !DILocation(line: 3746, column: 8, scope: !8174)
!8315 = !DILocalVariable(name: "__UNIQUE_ID___x280", scope: !8316, file: !3, line: 3747, type: !215)
!8316 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3747, column: 9)
!8317 = !DILocation(line: 3747, column: 9, scope: !8316)
!8318 = !DILocalVariable(name: "__UNIQUE_ID___y281", scope: !8316, file: !3, line: 3747, type: !215)
!8319 = !DILocation(line: 3747, column: 7, scope: !8174)
!8320 = !DILocation(line: 3749, column: 11, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3749, column: 2)
!8322 = !DILocation(line: 3749, column: 9, scope: !8321)
!8323 = !DILocation(line: 3749, column: 7, scope: !8321)
!8324 = !DILocation(line: 3749, column: 18, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 3749, column: 2)
!8326 = !DILocation(line: 3749, column: 23, scope: !8325)
!8327 = !DILocation(line: 3749, column: 20, scope: !8325)
!8328 = !DILocation(line: 3749, column: 2, scope: !8321)
!8329 = !DILocation(line: 3750, column: 22, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 3750, column: 7)
!8331 = distinct !DILexicalBlock(scope: !8325, file: !3, line: 3749, column: 34)
!8332 = !DILocation(line: 3750, column: 7, scope: !8330)
!8333 = !DILocation(line: 3750, column: 28, scope: !8330)
!8334 = !DILocation(line: 3750, column: 25, scope: !8330)
!8335 = !DILocation(line: 3750, column: 7, scope: !8331)
!8336 = !DILocation(line: 3751, column: 15, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 3750, column: 33)
!8338 = !DILocation(line: 3751, column: 20, scope: !8337)
!8339 = !DILocation(line: 3751, column: 4, scope: !8337)
!8340 = !DILocation(line: 3752, column: 19, scope: !8337)
!8341 = !DILocation(line: 3752, column: 4, scope: !8337)
!8342 = !DILocation(line: 3752, column: 22, scope: !8337)
!8343 = !DILocation(line: 3753, column: 3, scope: !8337)
!8344 = !DILocation(line: 3754, column: 2, scope: !8331)
!8345 = !DILocation(line: 3749, column: 30, scope: !8325)
!8346 = !DILocation(line: 3749, column: 2, scope: !8325)
!8347 = distinct !{!8347, !8328, !8348}
!8348 = !DILocation(line: 3754, column: 2, scope: !8321)
!8349 = !DILocation(line: 3756, column: 20, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3756, column: 6)
!8351 = !DILocation(line: 3756, column: 7, scope: !8350)
!8352 = !DILocation(line: 3756, column: 6, scope: !8174)
!8353 = !DILocalVariable(name: "defconsw", scope: !8354, file: !3, line: 3757, type: !4231)
!8354 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 3756, column: 29)
!8355 = !DILocation(line: 3757, column: 23, scope: !8354)
!8356 = !DILocation(line: 3757, column: 34, scope: !8354)
!8357 = !DILocation(line: 3759, column: 3, scope: !8354)
!8358 = !DILocation(line: 3759, column: 11, scope: !8354)
!8359 = !DILocation(line: 3760, column: 3, scope: !8354)
!8360 = !DILocation(line: 3760, column: 13, scope: !8354)
!8361 = !DILocation(line: 3760, column: 18, scope: !8354)
!8362 = !DILocation(line: 3765, column: 16, scope: !8354)
!8363 = !DILocation(line: 3765, column: 14, scope: !8354)
!8364 = !DILocation(line: 3766, column: 2, scope: !8354)
!8365 = !DILocation(line: 3768, column: 20, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 3768, column: 6)
!8367 = !DILocation(line: 3768, column: 7, scope: !8366)
!8368 = !DILocation(line: 3768, column: 6, scope: !8174)
!8369 = !DILocation(line: 3769, column: 3, scope: !8366)
!8370 = !DILocation(line: 3769, column: 15, scope: !8366)
!8371 = !DILocation(line: 3769, column: 20, scope: !8366)
!8372 = !DILocation(line: 3772, column: 21, scope: !8174)
!8373 = !DILocation(line: 3772, column: 29, scope: !8174)
!8374 = !DILocation(line: 3772, column: 36, scope: !8174)
!8375 = !DILocation(line: 3772, column: 42, scope: !8174)
!8376 = !DILocation(line: 3772, column: 2, scope: !8174)
!8377 = !DILabel(scope: !8174, name: "err", file: !3, line: 3773)
!8378 = !DILocation(line: 3773, column: 1, scope: !8174)
!8379 = !DILocation(line: 3774, column: 13, scope: !8174)
!8380 = !DILocation(line: 3774, column: 2, scope: !8174)
!8381 = !DILocation(line: 3775, column: 9, scope: !8174)
!8382 = !DILocation(line: 3775, column: 2, scope: !8174)
!8383 = !DILocation(line: 3777, column: 1, scope: !8174)
!8384 = distinct !DISubprogram(name: "try_module_get", scope: !8385, file: !8385, line: 751, type: !8386, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8385 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!8386 = !DISubroutineType(types: !8387)
!8387 = !{!578, !719}
!8388 = !DILocalVariable(name: "module", arg: 1, scope: !8384, file: !8385, line: 751, type: !719)
!8389 = !DILocation(line: 751, column: 50, scope: !8384)
!8390 = !DILocation(line: 753, column: 2, scope: !8384)
!8391 = distinct !DISubprogram(name: "con_is_bound", scope: !3, file: !3, line: 3955, type: !8392, scopeLine: 3956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8392 = !DISubroutineType(types: !8393)
!8393 = !{!215, !4231}
!8394 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !8395)
!8395 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !8396)
!8396 = distinct !DILocation(line: 3959, column: 2, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 3959, column: 2)
!8398 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !8399)
!8399 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !8396)
!8400 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !8399)
!8401 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !8396)
!8402 = !DILocalVariable(name: "csw", arg: 1, scope: !8391, file: !3, line: 3955, type: !4231)
!8403 = !DILocation(line: 3955, column: 38, scope: !8391)
!8404 = !DILocalVariable(name: "i", scope: !8391, file: !3, line: 3957, type: !215)
!8405 = !DILocation(line: 3957, column: 6, scope: !8391)
!8406 = !DILocalVariable(name: "bound", scope: !8391, file: !3, line: 3957, type: !215)
!8407 = !DILocation(line: 3957, column: 9, scope: !8391)
!8408 = !DILocalVariable(name: "__ret_warn_on", scope: !8397, file: !3, line: 3959, type: !215)
!8409 = !DILocation(line: 3959, column: 2, scope: !8397)
!8410 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !8396)
!8411 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !8399)
!8412 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !8399)
!8413 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !8399)
!8414 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !8399)
!8415 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !8396)
!8416 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !8395)
!8417 = !DILocation(line: 0, scope: !8397)
!8418 = !DILocation(line: 3959, column: 2, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 3959, column: 2)
!8420 = !DILocation(line: 3959, column: 2, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 3959, column: 2)
!8422 = !DILocation(line: 3959, column: 2, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 3959, column: 2)
!8424 = !DILocation(line: 3959, column: 2, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 3959, column: 2)
!8426 = !{i32 -2141698355, i32 -2141698326, i32 -2141698280, i32 -2141698222, i32 -2141698168, i32 -2141698114, i32 -2141698059, i32 -2141698028}
!8427 = !DILocation(line: 3959, column: 2, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 3959, column: 2)
!8429 = !{i32 -2141697626, i32 -2141697619, i32 -2141697567, i32 -2141697536, i32 -2141697506}
!8430 = !DILocation(line: 3959, column: 2, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 3959, column: 2)
!8432 = !DILocation(line: 3961, column: 9, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 3961, column: 2)
!8434 = !DILocation(line: 3961, column: 7, scope: !8433)
!8435 = !DILocation(line: 3961, column: 14, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 3961, column: 2)
!8437 = !DILocation(line: 3961, column: 16, scope: !8436)
!8438 = !DILocation(line: 3961, column: 2, scope: !8433)
!8439 = !DILocation(line: 3962, column: 22, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 3962, column: 7)
!8441 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 3961, column: 40)
!8442 = !DILocation(line: 3962, column: 7, scope: !8440)
!8443 = !DILocation(line: 3962, column: 28, scope: !8440)
!8444 = !DILocation(line: 3962, column: 25, scope: !8440)
!8445 = !DILocation(line: 3962, column: 7, scope: !8441)
!8446 = !DILocation(line: 3963, column: 10, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8440, file: !3, line: 3962, column: 33)
!8448 = !DILocation(line: 3964, column: 4, scope: !8447)
!8449 = !DILocation(line: 3966, column: 2, scope: !8441)
!8450 = !DILocation(line: 3961, column: 36, scope: !8436)
!8451 = !DILocation(line: 3961, column: 2, scope: !8436)
!8452 = distinct !{!8452, !8438, !8453}
!8453 = !DILocation(line: 3966, column: 2, scope: !8433)
!8454 = !DILocation(line: 3968, column: 9, scope: !8391)
!8455 = !DILocation(line: 3968, column: 2, scope: !8391)
!8456 = distinct !DISubprogram(name: "module_put", scope: !8385, file: !8385, line: 756, type: !8457, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8457 = !DISubroutineType(types: !8458)
!8458 = !{null, !719}
!8459 = !DILocalVariable(name: "module", arg: 1, scope: !8456, file: !8385, line: 756, type: !719)
!8460 = !DILocation(line: 756, column: 46, scope: !8456)
!8461 = !DILocation(line: 758, column: 1, scope: !8456)
!8462 = distinct !DISubprogram(name: "do_bind_con_driver", scope: !3, file: !3, line: 3598, type: !8175, scopeLine: 3600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8463 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !8464)
!8464 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !8465)
!8465 = distinct !DILocation(line: 3609, column: 2, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3609, column: 2)
!8467 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !8468)
!8468 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !8465)
!8469 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !8468)
!8470 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !8465)
!8471 = !DILocalVariable(name: "csw", arg: 1, scope: !8462, file: !3, line: 3598, type: !4231)
!8472 = !DILocation(line: 3598, column: 51, scope: !8462)
!8473 = !DILocalVariable(name: "first", arg: 2, scope: !8462, file: !3, line: 3598, type: !215)
!8474 = !DILocation(line: 3598, column: 60, scope: !8462)
!8475 = !DILocalVariable(name: "last", arg: 3, scope: !8462, file: !3, line: 3598, type: !215)
!8476 = !DILocation(line: 3598, column: 71, scope: !8462)
!8477 = !DILocalVariable(name: "deflt", arg: 4, scope: !8462, file: !3, line: 3599, type: !215)
!8478 = !DILocation(line: 3599, column: 11, scope: !8462)
!8479 = !DILocalVariable(name: "owner", scope: !8462, file: !3, line: 3601, type: !719)
!8480 = !DILocation(line: 3601, column: 17, scope: !8462)
!8481 = !DILocation(line: 3601, column: 25, scope: !8462)
!8482 = !DILocation(line: 3601, column: 30, scope: !8462)
!8483 = !DILocalVariable(name: "desc", scope: !8462, file: !3, line: 3602, type: !336)
!8484 = !DILocation(line: 3602, column: 14, scope: !8462)
!8485 = !DILocalVariable(name: "con_driver", scope: !8462, file: !3, line: 3603, type: !7948)
!8486 = !DILocation(line: 3603, column: 21, scope: !8462)
!8487 = !DILocalVariable(name: "i", scope: !8462, file: !3, line: 3604, type: !215)
!8488 = !DILocation(line: 3604, column: 6, scope: !8462)
!8489 = !DILocalVariable(name: "j", scope: !8462, file: !3, line: 3604, type: !215)
!8490 = !DILocation(line: 3604, column: 9, scope: !8462)
!8491 = !DILocalVariable(name: "k", scope: !8462, file: !3, line: 3604, type: !215)
!8492 = !DILocation(line: 3604, column: 17, scope: !8462)
!8493 = !DILocalVariable(name: "retval", scope: !8462, file: !3, line: 3604, type: !215)
!8494 = !DILocation(line: 3604, column: 25, scope: !8462)
!8495 = !DILocation(line: 3606, column: 22, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3606, column: 6)
!8497 = !DILocation(line: 3606, column: 7, scope: !8496)
!8498 = !DILocation(line: 3606, column: 6, scope: !8462)
!8499 = !DILocation(line: 3607, column: 3, scope: !8496)
!8500 = !DILocalVariable(name: "__ret_warn_on", scope: !8466, file: !3, line: 3609, type: !215)
!8501 = !DILocation(line: 3609, column: 2, scope: !8466)
!8502 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !8465)
!8503 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !8468)
!8504 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !8468)
!8505 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !8468)
!8506 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !8468)
!8507 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !8465)
!8508 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !8464)
!8509 = !DILocation(line: 0, scope: !8466)
!8510 = !DILocation(line: 3609, column: 2, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 3609, column: 2)
!8512 = !DILocation(line: 3609, column: 2, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 3609, column: 2)
!8514 = !DILocation(line: 3609, column: 2, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8513, file: !3, line: 3609, column: 2)
!8516 = !DILocation(line: 3609, column: 2, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8513, file: !3, line: 3609, column: 2)
!8518 = !{i32 -2141716448, i32 -2141716419, i32 -2141716373, i32 -2141716315, i32 -2141716261, i32 -2141716207, i32 -2141716152, i32 -2141716121}
!8519 = !DILocation(line: 3609, column: 2, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8513, file: !3, line: 3609, column: 2)
!8521 = !{i32 -2141715719, i32 -2141715712, i32 -2141715660, i32 -2141715629, i32 -2141715599}
!8522 = !DILocation(line: 3609, column: 2, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8513, file: !3, line: 3609, column: 2)
!8524 = !DILocation(line: 3612, column: 9, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3612, column: 2)
!8526 = !DILocation(line: 3612, column: 7, scope: !8525)
!8527 = !DILocation(line: 3612, column: 14, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 3612, column: 2)
!8529 = !DILocation(line: 3612, column: 16, scope: !8528)
!8530 = !DILocation(line: 3612, column: 2, scope: !8525)
!8531 = !DILocation(line: 3613, column: 39, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 3612, column: 42)
!8533 = !DILocation(line: 3613, column: 17, scope: !8532)
!8534 = !DILocation(line: 3613, column: 14, scope: !8532)
!8535 = !DILocation(line: 3615, column: 7, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 3615, column: 7)
!8537 = !DILocation(line: 3615, column: 19, scope: !8536)
!8538 = !DILocation(line: 3615, column: 26, scope: !8536)
!8539 = !DILocation(line: 3615, column: 23, scope: !8536)
!8540 = !DILocation(line: 3615, column: 7, scope: !8532)
!8541 = !DILocation(line: 3616, column: 11, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 3615, column: 31)
!8543 = !DILocation(line: 3616, column: 23, scope: !8542)
!8544 = !DILocation(line: 3616, column: 9, scope: !8542)
!8545 = !DILocation(line: 3617, column: 11, scope: !8542)
!8546 = !DILocation(line: 3618, column: 4, scope: !8542)
!8547 = !DILocation(line: 3620, column: 2, scope: !8532)
!8548 = !DILocation(line: 3612, column: 38, scope: !8528)
!8549 = !DILocation(line: 3612, column: 2, scope: !8528)
!8550 = distinct !{!8550, !8530, !8551}
!8551 = !DILocation(line: 3620, column: 2, scope: !8525)
!8552 = !DILocation(line: 3622, column: 6, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3622, column: 6)
!8554 = !DILocation(line: 3622, column: 6, scope: !8462)
!8555 = !DILocation(line: 3623, column: 3, scope: !8553)
!8556 = !DILocation(line: 3625, column: 8, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3625, column: 6)
!8558 = !DILocation(line: 3625, column: 20, scope: !8557)
!8559 = !DILocation(line: 3625, column: 25, scope: !8557)
!8560 = !DILocation(line: 3625, column: 6, scope: !8462)
!8561 = !DILocation(line: 3626, column: 3, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 3625, column: 50)
!8563 = !DILocation(line: 3626, column: 8, scope: !8562)
!8564 = !DILocation(line: 3627, column: 3, scope: !8562)
!8565 = !DILocation(line: 3627, column: 15, scope: !8562)
!8566 = !DILocation(line: 3627, column: 20, scope: !8562)
!8567 = !DILocation(line: 3628, column: 2, scope: !8562)
!8568 = !DILocation(line: 3630, column: 6, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3630, column: 6)
!8570 = !DILocation(line: 3630, column: 6, scope: !8462)
!8571 = !DILocation(line: 3631, column: 7, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 3631, column: 7)
!8573 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 3630, column: 13)
!8574 = !DILocation(line: 3631, column: 7, scope: !8573)
!8575 = !DILocation(line: 3632, column: 15, scope: !8572)
!8576 = !DILocation(line: 3632, column: 27, scope: !8572)
!8577 = !DILocation(line: 3632, column: 4, scope: !8572)
!8578 = !DILocation(line: 3634, column: 16, scope: !8573)
!8579 = !DILocation(line: 3634, column: 3, scope: !8573)
!8580 = !DILocation(line: 3635, column: 16, scope: !8573)
!8581 = !DILocation(line: 3635, column: 14, scope: !8573)
!8582 = !DILocation(line: 3636, column: 2, scope: !8573)
!8583 = !DILocalVariable(name: "__UNIQUE_ID___x273", scope: !8584, file: !3, line: 3638, type: !215)
!8584 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3638, column: 10)
!8585 = !DILocation(line: 3638, column: 10, scope: !8584)
!8586 = !DILocalVariable(name: "__UNIQUE_ID___y274", scope: !8584, file: !3, line: 3638, type: !215)
!8587 = !DILocation(line: 3638, column: 8, scope: !8462)
!8588 = !DILocalVariable(name: "__UNIQUE_ID___x275", scope: !8589, file: !3, line: 3639, type: !215)
!8589 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3639, column: 9)
!8590 = !DILocation(line: 3639, column: 9, scope: !8589)
!8591 = !DILocalVariable(name: "__UNIQUE_ID___y276", scope: !8589, file: !3, line: 3639, type: !215)
!8592 = !DILocation(line: 3639, column: 7, scope: !8462)
!8593 = !DILocation(line: 3641, column: 11, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3641, column: 2)
!8595 = !DILocation(line: 3641, column: 9, scope: !8594)
!8596 = !DILocation(line: 3641, column: 7, scope: !8594)
!8597 = !DILocation(line: 3641, column: 18, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 3641, column: 2)
!8599 = !DILocation(line: 3641, column: 23, scope: !8598)
!8600 = !DILocation(line: 3641, column: 20, scope: !8598)
!8601 = !DILocation(line: 3641, column: 2, scope: !8594)
!8602 = !DILocalVariable(name: "old_was_color", scope: !8603, file: !3, line: 3642, type: !215)
!8603 = distinct !DILexicalBlock(scope: !8598, file: !3, line: 3641, column: 34)
!8604 = !DILocation(line: 3642, column: 7, scope: !8603)
!8605 = !DILocalVariable(name: "vc", scope: !8603, file: !3, line: 3643, type: !220)
!8606 = !DILocation(line: 3643, column: 19, scope: !8603)
!8607 = !DILocation(line: 3643, column: 32, scope: !8603)
!8608 = !DILocation(line: 3643, column: 24, scope: !8603)
!8609 = !DILocation(line: 3643, column: 35, scope: !8603)
!8610 = !DILocation(line: 3645, column: 22, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 3645, column: 7)
!8612 = !DILocation(line: 3645, column: 7, scope: !8611)
!8613 = !DILocation(line: 3645, column: 7, scope: !8603)
!8614 = !DILocation(line: 3646, column: 30, scope: !8611)
!8615 = !DILocation(line: 3646, column: 15, scope: !8611)
!8616 = !DILocation(line: 3646, column: 34, scope: !8611)
!8617 = !DILocation(line: 3646, column: 4, scope: !8611)
!8618 = !DILocation(line: 3647, column: 16, scope: !8603)
!8619 = !DILocation(line: 3647, column: 3, scope: !8603)
!8620 = !DILocation(line: 3648, column: 23, scope: !8603)
!8621 = !DILocation(line: 3648, column: 18, scope: !8603)
!8622 = !DILocation(line: 3648, column: 3, scope: !8603)
!8623 = !DILocation(line: 3648, column: 21, scope: !8603)
!8624 = !DILocation(line: 3650, column: 8, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 3650, column: 7)
!8626 = !DILocation(line: 3650, column: 11, scope: !8625)
!8627 = !DILocation(line: 3650, column: 15, scope: !8625)
!8628 = !DILocation(line: 3650, column: 19, scope: !8625)
!8629 = !DILocation(line: 3650, column: 7, scope: !8603)
!8630 = !DILocation(line: 3651, column: 4, scope: !8625)
!8631 = !DILocation(line: 3653, column: 7, scope: !8603)
!8632 = !DILocation(line: 3653, column: 5, scope: !8603)
!8633 = !DILocation(line: 3655, column: 22, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 3655, column: 7)
!8635 = !DILocation(line: 3655, column: 7, scope: !8634)
!8636 = !DILocation(line: 3655, column: 7, scope: !8603)
!8637 = !DILocation(line: 3656, column: 8, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 3655, column: 27)
!8639 = !DILocation(line: 3656, column: 6, scope: !8638)
!8640 = !DILocation(line: 3657, column: 16, scope: !8638)
!8641 = !DILocation(line: 3657, column: 4, scope: !8638)
!8642 = !DILocation(line: 3658, column: 3, scope: !8638)
!8643 = !DILocation(line: 3660, column: 19, scope: !8603)
!8644 = !DILocation(line: 3660, column: 23, scope: !8603)
!8645 = !DILocation(line: 3660, column: 17, scope: !8603)
!8646 = !DILocation(line: 3661, column: 3, scope: !8603)
!8647 = !DILocation(line: 3661, column: 7, scope: !8603)
!8648 = !DILocation(line: 3661, column: 14, scope: !8603)
!8649 = !DILocation(line: 3661, column: 25, scope: !8603)
!8650 = !DILocation(line: 3662, column: 34, scope: !8603)
!8651 = !DILocation(line: 3662, column: 38, scope: !8603)
!8652 = !DILocation(line: 3662, column: 19, scope: !8603)
!8653 = !DILocation(line: 3662, column: 3, scope: !8603)
!8654 = !DILocation(line: 3662, column: 7, scope: !8603)
!8655 = !DILocation(line: 3662, column: 17, scope: !8603)
!8656 = !DILocation(line: 3663, column: 15, scope: !8603)
!8657 = !DILocation(line: 3663, column: 19, scope: !8603)
!8658 = !DILocation(line: 3663, column: 3, scope: !8603)
!8659 = !DILocation(line: 3664, column: 14, scope: !8603)
!8660 = !DILocation(line: 3664, column: 3, scope: !8603)
!8661 = !DILocation(line: 3665, column: 15, scope: !8603)
!8662 = !DILocation(line: 3665, column: 3, scope: !8603)
!8663 = !DILocation(line: 3671, column: 7, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 3671, column: 7)
!8665 = !DILocation(line: 3671, column: 24, scope: !8664)
!8666 = !DILocation(line: 3671, column: 28, scope: !8664)
!8667 = !DILocation(line: 3671, column: 21, scope: !8664)
!8668 = !DILocation(line: 3671, column: 7, scope: !8603)
!8669 = !DILocation(line: 3672, column: 28, scope: !8664)
!8670 = !DILocation(line: 3672, column: 4, scope: !8664)
!8671 = !DILocation(line: 3673, column: 2, scope: !8603)
!8672 = !DILocation(line: 3641, column: 30, scope: !8598)
!8673 = !DILocation(line: 3641, column: 2, scope: !8598)
!8674 = distinct !{!8674, !8601, !8675}
!8675 = !DILocation(line: 3673, column: 2, scope: !8594)
!8676 = !DILocation(line: 3675, column: 2, scope: !8462)
!8677 = !DILocation(line: 3676, column: 7, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3676, column: 6)
!8679 = !DILocation(line: 3676, column: 6, scope: !8462)
!8680 = !DILocation(line: 3677, column: 3, scope: !8678)
!8681 = !DILocation(line: 3678, column: 6, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 3678, column: 6)
!8683 = !DILocation(line: 3678, column: 8, scope: !8682)
!8684 = !DILocation(line: 3678, column: 6, scope: !8462)
!8685 = !DILocalVariable(name: "vc", scope: !8686, file: !3, line: 3679, type: !220)
!8686 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 3678, column: 14)
!8687 = !DILocation(line: 3679, column: 19, scope: !8686)
!8688 = !DILocation(line: 3679, column: 32, scope: !8686)
!8689 = !DILocation(line: 3679, column: 24, scope: !8686)
!8690 = !DILocation(line: 3679, column: 35, scope: !8686)
!8691 = !DILocation(line: 3681, column: 3, scope: !8686)
!8692 = !DILocation(line: 3685, column: 7, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 3685, column: 7)
!8694 = !DILocation(line: 3685, column: 9, scope: !8693)
!8695 = !DILocation(line: 3685, column: 7, scope: !8686)
!8696 = !DILocation(line: 3686, column: 17, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 3685, column: 15)
!8698 = !DILocation(line: 3686, column: 9, scope: !8697)
!8699 = !DILocation(line: 3686, column: 20, scope: !8697)
!8700 = !DILocation(line: 3686, column: 7, scope: !8697)
!8701 = !DILocation(line: 3687, column: 4, scope: !8697)
!8702 = !DILocation(line: 3688, column: 3, scope: !8697)
!8703 = !DILocation(line: 3689, column: 2, scope: !8686)
!8704 = !DILocation(line: 3690, column: 3, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 3689, column: 9)
!8706 = !DILocation(line: 3693, column: 9, scope: !8462)
!8707 = !DILocation(line: 3693, column: 2, scope: !8462)
!8708 = !DILabel(scope: !8462, name: "err", file: !3, line: 3694)
!8709 = !DILocation(line: 3694, column: 1, scope: !8462)
!8710 = !DILocation(line: 3695, column: 13, scope: !8462)
!8711 = !DILocation(line: 3695, column: 2, scope: !8462)
!8712 = !DILocation(line: 3696, column: 9, scope: !8462)
!8713 = !DILocation(line: 3696, column: 2, scope: !8462)
!8714 = !DILocation(line: 3697, column: 1, scope: !8462)
!8715 = distinct !DISubprogram(name: "con_debug_enter", scope: !3, file: !3, line: 3998, type: !4269, scopeLine: 3999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8716 = !DILocalVariable(name: "vc", arg: 1, scope: !8715, file: !3, line: 3998, type: !220)
!8717 = !DILocation(line: 3998, column: 37, scope: !8715)
!8718 = !DILocalVariable(name: "ret", scope: !8715, file: !3, line: 4000, type: !215)
!8719 = !DILocation(line: 4000, column: 6, scope: !8715)
!8720 = !DILocation(line: 4002, column: 21, scope: !8715)
!8721 = !DILocation(line: 4002, column: 19, scope: !8715)
!8722 = !DILocation(line: 4003, column: 23, scope: !8715)
!8723 = !DILocation(line: 4003, column: 21, scope: !8715)
!8724 = !DILocation(line: 4004, column: 23, scope: !8715)
!8725 = !DILocation(line: 4004, column: 21, scope: !8715)
!8726 = !DILocation(line: 4005, column: 18, scope: !8715)
!8727 = !DILocation(line: 4005, column: 22, scope: !8715)
!8728 = !DILocation(line: 4005, column: 16, scope: !8715)
!8729 = !DILocation(line: 4006, column: 26, scope: !8715)
!8730 = !DILocation(line: 4006, column: 24, scope: !8715)
!8731 = !DILocation(line: 4007, column: 2, scope: !8715)
!8732 = !DILocation(line: 4007, column: 6, scope: !8715)
!8733 = !DILocation(line: 4007, column: 14, scope: !8715)
!8734 = !DILocation(line: 4008, column: 18, scope: !8715)
!8735 = !DILocation(line: 4009, column: 6, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 4009, column: 6)
!8737 = !DILocation(line: 4009, column: 10, scope: !8736)
!8738 = !DILocation(line: 4009, column: 17, scope: !8736)
!8739 = !DILocation(line: 4009, column: 6, scope: !8715)
!8740 = !DILocation(line: 4010, column: 9, scope: !8736)
!8741 = !DILocation(line: 4010, column: 13, scope: !8736)
!8742 = !DILocation(line: 4010, column: 20, scope: !8736)
!8743 = !DILocation(line: 4010, column: 36, scope: !8736)
!8744 = !DILocation(line: 4010, column: 7, scope: !8736)
!8745 = !DILocation(line: 4010, column: 3, scope: !8736)
!8746 = !DILocation(line: 4040, column: 9, scope: !8715)
!8747 = !DILocation(line: 4040, column: 2, scope: !8715)
!8748 = distinct !DISubprogram(name: "con_debug_leave", scope: !3, file: !3, line: 4054, type: !4815, scopeLine: 4055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8749 = !DILocalVariable(name: "vc", scope: !8748, file: !3, line: 4056, type: !220)
!8750 = !DILocation(line: 4056, column: 18, scope: !8748)
!8751 = !DILocalVariable(name: "ret", scope: !8748, file: !3, line: 4057, type: !215)
!8752 = !DILocation(line: 4057, column: 6, scope: !8748)
!8753 = !DILocation(line: 4059, column: 15, scope: !8748)
!8754 = !DILocation(line: 4059, column: 13, scope: !8748)
!8755 = !DILocation(line: 4060, column: 17, scope: !8748)
!8756 = !DILocation(line: 4060, column: 15, scope: !8748)
!8757 = !DILocation(line: 4061, column: 17, scope: !8748)
!8758 = !DILocation(line: 4061, column: 15, scope: !8748)
!8759 = !DILocation(line: 4062, column: 20, scope: !8748)
!8760 = !DILocation(line: 4062, column: 18, scope: !8748)
!8761 = !DILocation(line: 4063, column: 35, scope: !8748)
!8762 = !DILocation(line: 4063, column: 10, scope: !8748)
!8763 = !DILocation(line: 4063, column: 2, scope: !8748)
!8764 = !DILocation(line: 4063, column: 22, scope: !8748)
!8765 = !DILocation(line: 4063, column: 25, scope: !8748)
!8766 = !DILocation(line: 4063, column: 33, scope: !8748)
!8767 = !DILocation(line: 4065, column: 15, scope: !8748)
!8768 = !DILocation(line: 4065, column: 7, scope: !8748)
!8769 = !DILocation(line: 4065, column: 27, scope: !8748)
!8770 = !DILocation(line: 4065, column: 5, scope: !8748)
!8771 = !DILocation(line: 4066, column: 6, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 4066, column: 6)
!8773 = !DILocation(line: 4066, column: 10, scope: !8772)
!8774 = !DILocation(line: 4066, column: 17, scope: !8772)
!8775 = !DILocation(line: 4066, column: 6, scope: !8748)
!8776 = !DILocation(line: 4067, column: 9, scope: !8772)
!8777 = !DILocation(line: 4067, column: 13, scope: !8772)
!8778 = !DILocation(line: 4067, column: 20, scope: !8772)
!8779 = !DILocation(line: 4067, column: 36, scope: !8772)
!8780 = !DILocation(line: 4067, column: 7, scope: !8772)
!8781 = !DILocation(line: 4067, column: 3, scope: !8772)
!8782 = !DILocation(line: 4068, column: 9, scope: !8748)
!8783 = !DILocation(line: 4068, column: 2, scope: !8748)
!8784 = distinct !DISubprogram(name: "do_unregister_con_driver", scope: !3, file: !3, line: 4152, type: !8392, scopeLine: 4153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8785 = !DILocalVariable(name: "csw", arg: 1, scope: !8784, file: !3, line: 4152, type: !4231)
!8786 = !DILocation(line: 4152, column: 50, scope: !8784)
!8787 = !DILocalVariable(name: "i", scope: !8784, file: !3, line: 4154, type: !215)
!8788 = !DILocation(line: 4154, column: 6, scope: !8784)
!8789 = !DILocation(line: 4157, column: 19, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 4157, column: 6)
!8791 = !DILocation(line: 4157, column: 6, scope: !8790)
!8792 = !DILocation(line: 4157, column: 6, scope: !8784)
!8793 = !DILocation(line: 4158, column: 3, scope: !8790)
!8794 = !DILocation(line: 4160, column: 6, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 4160, column: 6)
!8796 = !DILocation(line: 4160, column: 13, scope: !8795)
!8797 = !DILocation(line: 4160, column: 10, scope: !8795)
!8798 = !DILocation(line: 4160, column: 6, scope: !8784)
!8799 = !DILocation(line: 4161, column: 3, scope: !8795)
!8800 = !DILocation(line: 4163, column: 9, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 4163, column: 2)
!8802 = !DILocation(line: 4163, column: 7, scope: !8801)
!8803 = !DILocation(line: 4163, column: 14, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 4163, column: 2)
!8805 = !DILocation(line: 4163, column: 16, scope: !8804)
!8806 = !DILocation(line: 4163, column: 2, scope: !8801)
!8807 = !DILocalVariable(name: "con_driver", scope: !8808, file: !3, line: 4164, type: !7948)
!8808 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 4163, column: 42)
!8809 = !DILocation(line: 4164, column: 22, scope: !8808)
!8810 = !DILocation(line: 4164, column: 58, scope: !8808)
!8811 = !DILocation(line: 4164, column: 36, scope: !8808)
!8812 = !DILocation(line: 4166, column: 7, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 4166, column: 7)
!8814 = !DILocation(line: 4166, column: 19, scope: !8813)
!8815 = !DILocation(line: 4166, column: 26, scope: !8813)
!8816 = !DILocation(line: 4166, column: 23, scope: !8813)
!8817 = !DILocation(line: 4166, column: 7, scope: !8808)
!8818 = !DILocation(line: 4177, column: 4, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8813, file: !3, line: 4166, column: 31)
!8820 = !DILocation(line: 4177, column: 16, scope: !8819)
!8821 = !DILocation(line: 4177, column: 20, scope: !8819)
!8822 = !DILocation(line: 4178, column: 4, scope: !8819)
!8823 = !DILocation(line: 4178, column: 16, scope: !8819)
!8824 = !DILocation(line: 4178, column: 21, scope: !8819)
!8825 = !DILocation(line: 4179, column: 4, scope: !8819)
!8826 = !DILocation(line: 4181, column: 4, scope: !8819)
!8827 = !DILocation(line: 4183, column: 2, scope: !8808)
!8828 = !DILocation(line: 4163, column: 38, scope: !8804)
!8829 = !DILocation(line: 4163, column: 2, scope: !8804)
!8830 = distinct !{!8830, !8806, !8831}
!8831 = !DILocation(line: 4183, column: 2, scope: !8801)
!8832 = !DILocation(line: 4185, column: 2, scope: !8784)
!8833 = !DILocation(line: 4186, column: 1, scope: !8784)
!8834 = distinct !DISubprogram(name: "do_take_over_console", scope: !3, file: !3, line: 4229, type: !8175, scopeLine: 4230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8835 = !DILocalVariable(name: "csw", arg: 1, scope: !8834, file: !3, line: 4229, type: !4231)
!8836 = !DILocation(line: 4229, column: 46, scope: !8834)
!8837 = !DILocalVariable(name: "first", arg: 2, scope: !8834, file: !3, line: 4229, type: !215)
!8838 = !DILocation(line: 4229, column: 55, scope: !8834)
!8839 = !DILocalVariable(name: "last", arg: 3, scope: !8834, file: !3, line: 4229, type: !215)
!8840 = !DILocation(line: 4229, column: 66, scope: !8834)
!8841 = !DILocalVariable(name: "deflt", arg: 4, scope: !8834, file: !3, line: 4229, type: !215)
!8842 = !DILocation(line: 4229, column: 76, scope: !8834)
!8843 = !DILocalVariable(name: "err", scope: !8834, file: !3, line: 4231, type: !215)
!8844 = !DILocation(line: 4231, column: 6, scope: !8834)
!8845 = !DILocation(line: 4233, column: 31, scope: !8834)
!8846 = !DILocation(line: 4233, column: 36, scope: !8834)
!8847 = !DILocation(line: 4233, column: 43, scope: !8834)
!8848 = !DILocation(line: 4233, column: 8, scope: !8834)
!8849 = !DILocation(line: 4233, column: 6, scope: !8834)
!8850 = !DILocation(line: 4239, column: 6, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 4239, column: 6)
!8852 = !DILocation(line: 4239, column: 10, scope: !8851)
!8853 = !DILocation(line: 4239, column: 6, scope: !8834)
!8854 = !DILocation(line: 4240, column: 7, scope: !8851)
!8855 = !DILocation(line: 4240, column: 3, scope: !8851)
!8856 = !DILocation(line: 4241, column: 7, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 4241, column: 6)
!8858 = !DILocation(line: 4241, column: 6, scope: !8834)
!8859 = !DILocation(line: 4242, column: 22, scope: !8857)
!8860 = !DILocation(line: 4242, column: 27, scope: !8857)
!8861 = !DILocation(line: 4242, column: 34, scope: !8857)
!8862 = !DILocation(line: 4242, column: 40, scope: !8857)
!8863 = !DILocation(line: 4242, column: 3, scope: !8857)
!8864 = !DILocation(line: 4244, column: 9, scope: !8834)
!8865 = !DILocation(line: 4244, column: 2, scope: !8834)
!8866 = distinct !DISubprogram(name: "do_register_con_driver", scope: !3, file: !3, line: 4072, type: !8867, scopeLine: 4073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!8867 = !DISubroutineType(types: !8868)
!8868 = !{!215, !4231, !215, !215}
!8869 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !8870)
!8870 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !8871)
!8871 = distinct !DILocation(line: 4079, column: 2, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 4079, column: 2)
!8873 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !8874)
!8874 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !8871)
!8875 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !8874)
!8876 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !8871)
!8877 = !DILocalVariable(name: "csw", arg: 1, scope: !8866, file: !3, line: 4072, type: !4231)
!8878 = !DILocation(line: 4072, column: 55, scope: !8866)
!8879 = !DILocalVariable(name: "first", arg: 2, scope: !8866, file: !3, line: 4072, type: !215)
!8880 = !DILocation(line: 4072, column: 64, scope: !8866)
!8881 = !DILocalVariable(name: "last", arg: 3, scope: !8866, file: !3, line: 4072, type: !215)
!8882 = !DILocation(line: 4072, column: 75, scope: !8866)
!8883 = !DILocalVariable(name: "owner", scope: !8866, file: !3, line: 4074, type: !719)
!8884 = !DILocation(line: 4074, column: 17, scope: !8866)
!8885 = !DILocation(line: 4074, column: 25, scope: !8866)
!8886 = !DILocation(line: 4074, column: 30, scope: !8866)
!8887 = !DILocalVariable(name: "con_driver", scope: !8866, file: !3, line: 4075, type: !7948)
!8888 = !DILocation(line: 4075, column: 21, scope: !8866)
!8889 = !DILocalVariable(name: "desc", scope: !8866, file: !3, line: 4076, type: !336)
!8890 = !DILocation(line: 4076, column: 14, scope: !8866)
!8891 = !DILocalVariable(name: "i", scope: !8866, file: !3, line: 4077, type: !215)
!8892 = !DILocation(line: 4077, column: 6, scope: !8866)
!8893 = !DILocalVariable(name: "retval", scope: !8866, file: !3, line: 4077, type: !215)
!8894 = !DILocation(line: 4077, column: 9, scope: !8866)
!8895 = !DILocalVariable(name: "__ret_warn_on", scope: !8872, file: !3, line: 4079, type: !215)
!8896 = !DILocation(line: 4079, column: 2, scope: !8872)
!8897 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !8871)
!8898 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !8874)
!8899 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !8874)
!8900 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !8874)
!8901 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !8874)
!8902 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !8871)
!8903 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !8870)
!8904 = !DILocation(line: 0, scope: !8872)
!8905 = !DILocation(line: 4079, column: 2, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 4079, column: 2)
!8907 = !DILocation(line: 4079, column: 2, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8906, file: !3, line: 4079, column: 2)
!8909 = !DILocation(line: 4079, column: 2, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 4079, column: 2)
!8911 = !DILocation(line: 4079, column: 2, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 4079, column: 2)
!8913 = !{i32 -2141694725, i32 -2141694696, i32 -2141694650, i32 -2141694592, i32 -2141694538, i32 -2141694484, i32 -2141694429, i32 -2141694398}
!8914 = !DILocation(line: 4079, column: 2, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 4079, column: 2)
!8916 = !{i32 -2141693996, i32 -2141693989, i32 -2141693937, i32 -2141693906, i32 -2141693876}
!8917 = !DILocation(line: 4079, column: 2, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 4079, column: 2)
!8919 = !DILocation(line: 4081, column: 22, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 4081, column: 6)
!8921 = !DILocation(line: 4081, column: 7, scope: !8920)
!8922 = !DILocation(line: 4081, column: 6, scope: !8866)
!8923 = !DILocation(line: 4082, column: 3, scope: !8920)
!8924 = !DILocation(line: 4084, column: 9, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 4084, column: 2)
!8926 = !DILocation(line: 4084, column: 7, scope: !8925)
!8927 = !DILocation(line: 4084, column: 14, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 4084, column: 2)
!8929 = !DILocation(line: 4084, column: 16, scope: !8928)
!8930 = !DILocation(line: 4084, column: 2, scope: !8925)
!8931 = !DILocation(line: 4085, column: 39, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 4084, column: 42)
!8933 = !DILocation(line: 4085, column: 17, scope: !8932)
!8934 = !DILocation(line: 4085, column: 14, scope: !8932)
!8935 = !DILocation(line: 4088, column: 7, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 4088, column: 7)
!8937 = !DILocation(line: 4088, column: 19, scope: !8936)
!8938 = !DILocation(line: 4088, column: 26, scope: !8936)
!8939 = !DILocation(line: 4088, column: 23, scope: !8936)
!8940 = !DILocation(line: 4088, column: 7, scope: !8932)
!8941 = !DILocation(line: 4089, column: 11, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 4088, column: 31)
!8943 = !DILocation(line: 4090, column: 4, scope: !8942)
!8944 = !DILocation(line: 4092, column: 2, scope: !8932)
!8945 = !DILocation(line: 4084, column: 38, scope: !8928)
!8946 = !DILocation(line: 4084, column: 2, scope: !8928)
!8947 = distinct !{!8947, !8930, !8948}
!8948 = !DILocation(line: 4092, column: 2, scope: !8925)
!8949 = !DILocation(line: 4094, column: 9, scope: !8866)
!8950 = !DILocation(line: 4094, column: 14, scope: !8866)
!8951 = !DILocation(line: 4094, column: 7, scope: !8866)
!8952 = !DILocation(line: 4095, column: 7, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 4095, column: 6)
!8954 = !DILocation(line: 4095, column: 6, scope: !8866)
!8955 = !DILocation(line: 4096, column: 10, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 4095, column: 13)
!8957 = !DILocation(line: 4097, column: 3, scope: !8956)
!8958 = !DILocation(line: 4100, column: 9, scope: !8866)
!8959 = !DILocation(line: 4102, column: 9, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 4102, column: 2)
!8961 = !DILocation(line: 4102, column: 7, scope: !8960)
!8962 = !DILocation(line: 4102, column: 14, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 4102, column: 2)
!8964 = !DILocation(line: 4102, column: 16, scope: !8963)
!8965 = !DILocation(line: 4102, column: 2, scope: !8960)
!8966 = !DILocation(line: 4103, column: 39, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 4102, column: 42)
!8968 = !DILocation(line: 4103, column: 17, scope: !8967)
!8969 = !DILocation(line: 4103, column: 14, scope: !8967)
!8970 = !DILocation(line: 4105, column: 7, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8967, file: !3, line: 4105, column: 7)
!8972 = !DILocation(line: 4105, column: 19, scope: !8971)
!8973 = !DILocation(line: 4105, column: 23, scope: !8971)
!8974 = !DILocation(line: 4105, column: 31, scope: !8971)
!8975 = !DILocation(line: 4106, column: 9, scope: !8971)
!8976 = !DILocation(line: 4106, column: 21, scope: !8971)
!8977 = !DILocation(line: 4106, column: 26, scope: !8971)
!8978 = !DILocation(line: 4105, column: 7, scope: !8967)
!8979 = !DILocation(line: 4107, column: 22, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 4106, column: 53)
!8981 = !DILocation(line: 4107, column: 4, scope: !8980)
!8982 = !DILocation(line: 4107, column: 16, scope: !8980)
!8983 = !DILocation(line: 4107, column: 20, scope: !8980)
!8984 = !DILocation(line: 4108, column: 23, scope: !8980)
!8985 = !DILocation(line: 4108, column: 4, scope: !8980)
!8986 = !DILocation(line: 4108, column: 16, scope: !8980)
!8987 = !DILocation(line: 4108, column: 21, scope: !8980)
!8988 = !DILocation(line: 4109, column: 23, scope: !8980)
!8989 = !DILocation(line: 4109, column: 4, scope: !8980)
!8990 = !DILocation(line: 4109, column: 16, scope: !8980)
!8991 = !DILocation(line: 4109, column: 21, scope: !8980)
!8992 = !DILocation(line: 4110, column: 4, scope: !8980)
!8993 = !DILocation(line: 4110, column: 16, scope: !8980)
!8994 = !DILocation(line: 4110, column: 21, scope: !8980)
!8995 = !DILocation(line: 4112, column: 24, scope: !8980)
!8996 = !DILocation(line: 4112, column: 4, scope: !8980)
!8997 = !DILocation(line: 4112, column: 16, scope: !8980)
!8998 = !DILocation(line: 4112, column: 22, scope: !8980)
!8999 = !DILocation(line: 4113, column: 23, scope: !8980)
!9000 = !DILocation(line: 4113, column: 4, scope: !8980)
!9001 = !DILocation(line: 4113, column: 16, scope: !8980)
!9002 = !DILocation(line: 4113, column: 21, scope: !8980)
!9003 = !DILocation(line: 4114, column: 11, scope: !8980)
!9004 = !DILocation(line: 4115, column: 4, scope: !8980)
!9005 = !DILocation(line: 4117, column: 2, scope: !8967)
!9006 = !DILocation(line: 4102, column: 38, scope: !8963)
!9007 = !DILocation(line: 4102, column: 2, scope: !8963)
!9008 = distinct !{!9008, !8965, !9009}
!9009 = !DILocation(line: 4117, column: 2, scope: !8960)
!9010 = !DILocation(line: 4119, column: 6, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 4119, column: 6)
!9012 = !DILocation(line: 4119, column: 6, scope: !8866)
!9013 = !DILocation(line: 4120, column: 3, scope: !9011)
!9014 = !DILocation(line: 4123, column: 29, scope: !8866)
!9015 = !DILocation(line: 4124, column: 8, scope: !8866)
!9016 = !DILocation(line: 4125, column: 8, scope: !8866)
!9017 = !DILocation(line: 4126, column: 19, scope: !8866)
!9018 = !DILocation(line: 4126, column: 31, scope: !8866)
!9019 = !DILocation(line: 4123, column: 3, scope: !8866)
!9020 = !DILocation(line: 4122, column: 2, scope: !8866)
!9021 = !DILocation(line: 4122, column: 14, scope: !8866)
!9022 = !DILocation(line: 4122, column: 18, scope: !8866)
!9023 = !DILocation(line: 4127, column: 13, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !8866, file: !3, line: 4127, column: 6)
!9025 = !DILocation(line: 4127, column: 25, scope: !9024)
!9026 = !DILocation(line: 4127, column: 6, scope: !9024)
!9027 = !DILocation(line: 4127, column: 6, scope: !8866)
!9028 = !DILocation(line: 4128, column: 3, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 4127, column: 31)
!9030 = !DILocation(line: 4130, column: 3, scope: !9029)
!9031 = !DILocation(line: 4130, column: 15, scope: !9029)
!9032 = !DILocation(line: 4130, column: 19, scope: !9029)
!9033 = !DILocation(line: 4131, column: 2, scope: !9029)
!9034 = !DILocation(line: 4132, column: 25, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 4131, column: 9)
!9036 = !DILocation(line: 4132, column: 3, scope: !9035)
!9037 = !DILocation(line: 4127, column: 28, scope: !9024)
!9038 = !DILabel(scope: !8866, name: "err", file: !3, line: 4135)
!9039 = !DILocation(line: 4135, column: 1, scope: !8866)
!9040 = !DILocation(line: 4136, column: 13, scope: !8866)
!9041 = !DILocation(line: 4136, column: 2, scope: !8866)
!9042 = !DILocation(line: 4137, column: 9, scope: !8866)
!9043 = !DILocation(line: 4137, column: 2, scope: !8866)
!9044 = !DILocation(line: 4138, column: 1, scope: !8866)
!9045 = distinct !DISubprogram(name: "give_up_console", scope: !3, file: !3, line: 4253, type: !9046, scopeLine: 4254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9046 = !DISubroutineType(types: !9047)
!9047 = !{null, !4231}
!9048 = !DILocalVariable(name: "csw", arg: 1, scope: !9045, file: !3, line: 4253, type: !4231)
!9049 = !DILocation(line: 4253, column: 42, scope: !9045)
!9050 = !DILocation(line: 4255, column: 2, scope: !9045)
!9051 = !DILocation(line: 4256, column: 27, scope: !9045)
!9052 = !DILocation(line: 4256, column: 2, scope: !9045)
!9053 = !DILocation(line: 4257, column: 2, scope: !9045)
!9054 = !DILocation(line: 4258, column: 1, scope: !9045)
!9055 = !DILocalVariable(name: "i", scope: !4814, file: !3, line: 4262, type: !215)
!9056 = !DILocation(line: 4262, column: 6, scope: !4814)
!9057 = !DILocation(line: 4264, column: 20, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 4264, column: 20)
!9059 = !DILocation(line: 4264, column: 18, scope: !4814)
!9060 = !DILocation(line: 4265, column: 13, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 4265, column: 6)
!9062 = !DILocation(line: 4265, column: 6, scope: !9061)
!9063 = !DILocation(line: 4265, column: 6, scope: !4814)
!9064 = !DILocation(line: 4266, column: 3, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9061, file: !3, line: 4265, column: 31)
!9066 = !DILocation(line: 4268, column: 19, scope: !9065)
!9067 = !DILocation(line: 4269, column: 2, scope: !9065)
!9068 = !DILocation(line: 4272, column: 9, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 4272, column: 2)
!9070 = !DILocation(line: 4272, column: 7, scope: !9069)
!9071 = !DILocation(line: 4272, column: 14, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 4272, column: 2)
!9073 = !DILocation(line: 4272, column: 16, scope: !9072)
!9074 = !DILocation(line: 4272, column: 2, scope: !9069)
!9075 = !DILocalVariable(name: "con", scope: !9076, file: !3, line: 4273, type: !7948)
!9076 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 4272, column: 42)
!9077 = !DILocation(line: 4273, column: 22, scope: !9076)
!9078 = !DILocation(line: 4273, column: 51, scope: !9076)
!9079 = !DILocation(line: 4273, column: 29, scope: !9076)
!9080 = !DILocation(line: 4275, column: 7, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 4275, column: 7)
!9082 = !DILocation(line: 4275, column: 12, scope: !9081)
!9083 = !DILocation(line: 4275, column: 16, scope: !9081)
!9084 = !DILocation(line: 4275, column: 20, scope: !9081)
!9085 = !DILocation(line: 4275, column: 25, scope: !9081)
!9086 = !DILocation(line: 4275, column: 7, scope: !9076)
!9087 = !DILocation(line: 4277, column: 31, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9081, file: !3, line: 4275, column: 30)
!9089 = !DILocation(line: 4278, column: 10, scope: !9088)
!9090 = !DILocation(line: 4279, column: 10, scope: !9088)
!9091 = !DILocation(line: 4280, column: 21, scope: !9088)
!9092 = !DILocation(line: 4280, column: 26, scope: !9088)
!9093 = !DILocation(line: 4277, column: 5, scope: !9088)
!9094 = !DILocation(line: 4276, column: 4, scope: !9088)
!9095 = !DILocation(line: 4276, column: 9, scope: !9088)
!9096 = !DILocation(line: 4276, column: 13, scope: !9088)
!9097 = !DILocation(line: 4282, column: 15, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 4282, column: 8)
!9099 = !DILocation(line: 4282, column: 20, scope: !9098)
!9100 = !DILocation(line: 4282, column: 8, scope: !9098)
!9101 = !DILocation(line: 4282, column: 8, scope: !9088)
!9102 = !DILocation(line: 4283, column: 5, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 4282, column: 26)
!9104 = !DILocation(line: 4285, column: 5, scope: !9103)
!9105 = !DILocation(line: 4285, column: 10, scope: !9103)
!9106 = !DILocation(line: 4285, column: 14, scope: !9103)
!9107 = !DILocation(line: 4286, column: 4, scope: !9103)
!9108 = !DILocation(line: 4287, column: 27, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 4286, column: 11)
!9110 = !DILocation(line: 4287, column: 5, scope: !9109)
!9111 = !DILocation(line: 4289, column: 3, scope: !9088)
!9112 = !DILocation(line: 4290, column: 2, scope: !9076)
!9113 = !DILocation(line: 4272, column: 38, scope: !9072)
!9114 = !DILocation(line: 4272, column: 2, scope: !9072)
!9115 = distinct !{!9115, !9074, !9116}
!9116 = !DILocation(line: 4290, column: 2, scope: !9069)
!9117 = !DILocation(line: 4292, column: 2, scope: !4814)
!9118 = distinct !DISubprogram(name: "do_unblank_screen", scope: !3, file: !3, line: 4374, type: !1971, scopeLine: 4375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9119 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !9120)
!9120 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !9121)
!9121 = distinct !DILocation(line: 4385, column: 2, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 4385, column: 2)
!9123 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !9124)
!9124 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !9121)
!9125 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !9124)
!9126 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !9121)
!9127 = !DILocalVariable(name: "leaving_gfx", arg: 1, scope: !9118, file: !3, line: 4374, type: !215)
!9128 = !DILocation(line: 4374, column: 28, scope: !9118)
!9129 = !DILocalVariable(name: "vc", scope: !9118, file: !3, line: 4376, type: !220)
!9130 = !DILocation(line: 4376, column: 18, scope: !9118)
!9131 = !DILocation(line: 4382, column: 7, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 4382, column: 6)
!9133 = !DILocation(line: 4382, column: 6, scope: !9118)
!9134 = !DILocation(line: 4383, column: 3, scope: !9132)
!9135 = !DILocation(line: 4383, column: 3, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9132, file: !3, line: 4383, column: 3)
!9137 = !DILocation(line: 4383, column: 3, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 4383, column: 3)
!9139 = !DILocalVariable(name: "__ret_warn_on", scope: !9122, file: !3, line: 4385, type: !215)
!9140 = !DILocation(line: 4385, column: 2, scope: !9122)
!9141 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !9121)
!9142 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !9124)
!9143 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !9124)
!9144 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !9124)
!9145 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !9124)
!9146 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !9121)
!9147 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !9120)
!9148 = !DILocation(line: 0, scope: !9122)
!9149 = !DILocation(line: 4385, column: 2, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 4385, column: 2)
!9151 = !DILocation(line: 4385, column: 2, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 4385, column: 2)
!9153 = !DILocation(line: 4385, column: 2, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 4385, column: 2)
!9155 = !DILocation(line: 4385, column: 2, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 4385, column: 2)
!9157 = !{i32 -2141683994, i32 -2141683965, i32 -2141683919, i32 -2141683861, i32 -2141683807, i32 -2141683753, i32 -2141683698, i32 -2141683667}
!9158 = !DILocation(line: 4385, column: 2, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 4385, column: 2)
!9160 = !{i32 -2141683265, i32 -2141683258, i32 -2141683206, i32 -2141683175, i32 -2141683145}
!9161 = !DILocation(line: 4385, column: 2, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 4385, column: 2)
!9163 = !DILocation(line: 4387, column: 14, scope: !9118)
!9164 = !DILocation(line: 4388, column: 7, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 4388, column: 6)
!9166 = !DILocation(line: 4388, column: 6, scope: !9118)
!9167 = !DILocation(line: 4389, column: 3, scope: !9165)
!9168 = !DILocation(line: 4390, column: 25, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 4390, column: 6)
!9170 = !DILocation(line: 4390, column: 7, scope: !9169)
!9171 = !DILocation(line: 4390, column: 6, scope: !9118)
!9172 = !DILocation(line: 4392, column: 3, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 4390, column: 38)
!9174 = !DILocation(line: 4394, column: 3, scope: !9173)
!9175 = !DILocation(line: 4396, column: 15, scope: !9118)
!9176 = !DILocation(line: 4396, column: 7, scope: !9118)
!9177 = !DILocation(line: 4396, column: 27, scope: !9118)
!9178 = !DILocation(line: 4396, column: 5, scope: !9118)
!9179 = !DILocation(line: 4397, column: 6, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 4397, column: 6)
!9181 = !DILocation(line: 4397, column: 10, scope: !9180)
!9182 = !DILocation(line: 4397, column: 18, scope: !9180)
!9183 = !DILocation(line: 4397, column: 6, scope: !9118)
!9184 = !DILocation(line: 4398, column: 3, scope: !9180)
!9185 = !DILocation(line: 4400, column: 6, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 4400, column: 6)
!9187 = !DILocation(line: 4400, column: 6, scope: !9118)
!9188 = !DILocation(line: 4401, column: 29, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9186, file: !3, line: 4400, column: 21)
!9190 = !DILocation(line: 4401, column: 40, scope: !9189)
!9191 = !DILocation(line: 4401, column: 54, scope: !9189)
!9192 = !DILocation(line: 4401, column: 39, scope: !9189)
!9193 = !DILocation(line: 4401, column: 37, scope: !9189)
!9194 = !DILocation(line: 4401, column: 3, scope: !9189)
!9195 = !DILocation(line: 4402, column: 15, scope: !9189)
!9196 = !DILocation(line: 4403, column: 2, scope: !9189)
!9197 = !DILocation(line: 4405, column: 18, scope: !9118)
!9198 = !DILocation(line: 4406, column: 6, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 4406, column: 6)
!9200 = !DILocation(line: 4406, column: 10, scope: !9199)
!9201 = !DILocation(line: 4406, column: 17, scope: !9199)
!9202 = !DILocation(line: 4406, column: 27, scope: !9199)
!9203 = !DILocation(line: 4406, column: 34, scope: !9199)
!9204 = !DILocation(line: 4406, column: 6, scope: !9118)
!9205 = !DILocation(line: 4408, column: 3, scope: !9199)
!9206 = !DILocation(line: 4409, column: 6, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 4409, column: 6)
!9208 = !DILocation(line: 4409, column: 6, scope: !9118)
!9209 = !DILocation(line: 4410, column: 3, scope: !9207)
!9210 = !DILocation(line: 4411, column: 14, scope: !9118)
!9211 = !DILocation(line: 4411, column: 2, scope: !9118)
!9212 = !DILocation(line: 4412, column: 13, scope: !9118)
!9213 = !DILocation(line: 4412, column: 2, scope: !9118)
!9214 = !DILocation(line: 4413, column: 34, scope: !9118)
!9215 = !DILocation(line: 4413, column: 38, scope: !9118)
!9216 = !DILocation(line: 4413, column: 46, scope: !9118)
!9217 = !DILocation(line: 4413, column: 50, scope: !9118)
!9218 = !DILocation(line: 4413, column: 2, scope: !9118)
!9219 = !DILocation(line: 4414, column: 1, scope: !9118)
!9220 = distinct !DISubprogram(name: "poke_blanked_console", scope: !3, file: !3, line: 4439, type: !1978, scopeLine: 4440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9221 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !9222)
!9222 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !9223)
!9223 = distinct !DILocation(line: 4441, column: 2, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 4441, column: 2)
!9225 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !9226)
!9226 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !9223)
!9227 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !9226)
!9228 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !9223)
!9229 = !DILocalVariable(name: "__ret_warn_on", scope: !9224, file: !3, line: 4441, type: !215)
!9230 = !DILocation(line: 4441, column: 2, scope: !9224)
!9231 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !9223)
!9232 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !9226)
!9233 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !9226)
!9234 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !9226)
!9235 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !9226)
!9236 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !9223)
!9237 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !9222)
!9238 = !DILocation(line: 0, scope: !9224)
!9239 = !DILocation(line: 4441, column: 2, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 4441, column: 2)
!9241 = !DILocation(line: 4441, column: 2, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 4441, column: 2)
!9243 = !DILocation(line: 4441, column: 2, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 4441, column: 2)
!9245 = !DILocation(line: 4441, column: 2, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 4441, column: 2)
!9247 = !{i32 -2141682048, i32 -2141682019, i32 -2141681973, i32 -2141681915, i32 -2141681861, i32 -2141681807, i32 -2141681752, i32 -2141681721}
!9248 = !DILocation(line: 4441, column: 2, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 4441, column: 2)
!9250 = !{i32 -2141681319, i32 -2141681312, i32 -2141681260, i32 -2141681229, i32 -2141681199}
!9251 = !DILocation(line: 4441, column: 2, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 4441, column: 2)
!9253 = !DILocation(line: 4449, column: 2, scope: !9220)
!9254 = !DILocation(line: 4449, column: 2, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 4449, column: 2)
!9256 = !DILocation(line: 4449, column: 2, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 4449, column: 2)
!9258 = !DILocation(line: 4454, column: 2, scope: !9220)
!9259 = !DILocation(line: 4455, column: 22, scope: !9220)
!9260 = !DILocation(line: 4457, column: 6, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 4457, column: 6)
!9262 = !DILocation(line: 4457, column: 18, scope: !9261)
!9263 = !DILocation(line: 4457, column: 30, scope: !9261)
!9264 = !DILocation(line: 4457, column: 22, scope: !9261)
!9265 = !DILocation(line: 4457, column: 42, scope: !9261)
!9266 = !DILocation(line: 4457, column: 44, scope: !9261)
!9267 = !DILocation(line: 4457, column: 55, scope: !9261)
!9268 = !DILocation(line: 4457, column: 47, scope: !9261)
!9269 = !DILocation(line: 4457, column: 67, scope: !9261)
!9270 = !DILocation(line: 4457, column: 70, scope: !9261)
!9271 = !DILocation(line: 4457, column: 78, scope: !9261)
!9272 = !DILocation(line: 4457, column: 6, scope: !9220)
!9273 = !DILocation(line: 4458, column: 3, scope: !9261)
!9274 = !DILocation(line: 4459, column: 6, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 4459, column: 6)
!9276 = !DILocation(line: 4459, column: 6, scope: !9220)
!9277 = !DILocation(line: 4460, column: 3, scope: !9275)
!9278 = !DILocation(line: 4461, column: 11, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 4461, column: 11)
!9280 = !DILocation(line: 4461, column: 11, scope: !9275)
!9281 = !DILocation(line: 4462, column: 29, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 4461, column: 26)
!9283 = !DILocation(line: 4462, column: 40, scope: !9282)
!9284 = !DILocation(line: 4462, column: 54, scope: !9282)
!9285 = !DILocation(line: 4462, column: 39, scope: !9282)
!9286 = !DILocation(line: 4462, column: 37, scope: !9282)
!9287 = !DILocation(line: 4462, column: 3, scope: !9282)
!9288 = !DILocation(line: 4463, column: 15, scope: !9282)
!9289 = !DILocation(line: 4464, column: 2, scope: !9282)
!9290 = !DILocation(line: 4465, column: 1, scope: !9220)
!9291 = distinct !DISubprogram(name: "con_set_cmap", scope: !3, file: !3, line: 4484, type: !9292, scopeLine: 4485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9292 = !DISubroutineType(types: !9293)
!9293 = !{!215, !4083}
!9294 = !DILocalVariable(name: "addr", arg: 1, scope: !9295, file: !9296, line: 138, type: !2216)
!9295 = distinct !DISubprogram(name: "check_copy_size", scope: !9296, file: !9296, line: 138, type: !9297, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9296 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!578, !2216, !417, !578}
!9299 = !DILocation(line: 138, column: 29, scope: !9295, inlinedAt: !9300)
!9300 = distinct !DILocation(line: 191, column: 6, scope: !9301, inlinedAt: !9306)
!9301 = distinct !DILexicalBlock(scope: !9303, file: !9302, line: 191, column: 6)
!9302 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!9303 = distinct !DISubprogram(name: "copy_from_user", scope: !9302, file: !9302, line: 189, type: !9304, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9304 = !DISubroutineType(types: !9305)
!9305 = !{!193, !216, !2216, !193}
!9306 = distinct !DILocation(line: 4489, column: 6, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 4489, column: 6)
!9308 = !DILocalVariable(name: "bytes", arg: 2, scope: !9295, file: !9296, line: 138, type: !417)
!9309 = !DILocation(line: 138, column: 42, scope: !9295, inlinedAt: !9300)
!9310 = !DILocalVariable(name: "is_source", arg: 3, scope: !9295, file: !9296, line: 138, type: !578)
!9311 = !DILocation(line: 138, column: 54, scope: !9295, inlinedAt: !9300)
!9312 = !DILocalVariable(name: "sz", scope: !9295, file: !9296, line: 140, type: !215)
!9313 = !DILocation(line: 140, column: 6, scope: !9295, inlinedAt: !9300)
!9314 = !DILocalVariable(name: "__ret_warn_on", scope: !9315, file: !9296, line: 150, type: !215)
!9315 = distinct !DILexicalBlock(scope: !9316, file: !9296, line: 150, column: 6)
!9316 = distinct !DILexicalBlock(scope: !9295, file: !9296, line: 150, column: 6)
!9317 = !DILocation(line: 150, column: 6, scope: !9315, inlinedAt: !9300)
!9318 = !DILocalVariable(name: "to", arg: 1, scope: !9303, file: !9302, line: 189, type: !216)
!9319 = !DILocation(line: 189, column: 22, scope: !9303, inlinedAt: !9306)
!9320 = !DILocalVariable(name: "from", arg: 2, scope: !9303, file: !9302, line: 189, type: !2216)
!9321 = !DILocation(line: 189, column: 45, scope: !9303, inlinedAt: !9306)
!9322 = !DILocalVariable(name: "n", arg: 3, scope: !9303, file: !9302, line: 189, type: !193)
!9323 = !DILocation(line: 189, column: 65, scope: !9303, inlinedAt: !9306)
!9324 = !DILocalVariable(name: "arg", arg: 1, scope: !9291, file: !3, line: 4484, type: !4083)
!9325 = !DILocation(line: 4484, column: 40, scope: !9291)
!9326 = !DILocalVariable(name: "i", scope: !9291, file: !3, line: 4486, type: !215)
!9327 = !DILocation(line: 4486, column: 6, scope: !9291)
!9328 = !DILocalVariable(name: "j", scope: !9291, file: !3, line: 4486, type: !215)
!9329 = !DILocation(line: 4486, column: 9, scope: !9291)
!9330 = !DILocalVariable(name: "k", scope: !9291, file: !3, line: 4486, type: !215)
!9331 = !DILocation(line: 4486, column: 12, scope: !9291)
!9332 = !DILocalVariable(name: "colormap", scope: !9291, file: !3, line: 4487, type: !4379)
!9333 = !DILocation(line: 4487, column: 16, scope: !9291)
!9334 = !DILocation(line: 4489, column: 21, scope: !9307)
!9335 = !DILocation(line: 4489, column: 31, scope: !9307)
!9336 = !DILocation(line: 191, column: 6, scope: !9301, inlinedAt: !9306)
!9337 = !DILocation(line: 141, column: 6, scope: !9338, inlinedAt: !9300)
!9338 = distinct !DILexicalBlock(scope: !9295, file: !9296, line: 141, column: 6)
!9339 = !DILocation(line: 0, scope: !9338, inlinedAt: !9300)
!9340 = !DILocation(line: 141, column: 6, scope: !9295, inlinedAt: !9300)
!9341 = !DILocation(line: 142, column: 29, scope: !9342, inlinedAt: !9300)
!9342 = distinct !DILexicalBlock(scope: !9343, file: !9296, line: 142, column: 7)
!9343 = distinct !DILexicalBlock(scope: !9338, file: !9296, line: 141, column: 39)
!9344 = !DILocation(line: 142, column: 8, scope: !9342, inlinedAt: !9300)
!9345 = !DILocation(line: 142, column: 7, scope: !9343, inlinedAt: !9300)
!9346 = !DILocation(line: 143, column: 18, scope: !9342, inlinedAt: !9300)
!9347 = !DILocation(line: 143, column: 22, scope: !9342, inlinedAt: !9300)
!9348 = !DILocation(line: 143, column: 4, scope: !9342, inlinedAt: !9300)
!9349 = !DILocation(line: 144, column: 12, scope: !9350, inlinedAt: !9300)
!9350 = distinct !DILexicalBlock(scope: !9342, file: !9296, line: 144, column: 12)
!9351 = !DILocation(line: 144, column: 12, scope: !9342, inlinedAt: !9300)
!9352 = !DILocation(line: 145, column: 4, scope: !9350, inlinedAt: !9300)
!9353 = !DILocation(line: 147, column: 4, scope: !9350, inlinedAt: !9300)
!9354 = !DILocation(line: 148, column: 3, scope: !9343, inlinedAt: !9300)
!9355 = !DILocation(line: 150, column: 6, scope: !9356, inlinedAt: !9300)
!9356 = distinct !DILexicalBlock(scope: !9315, file: !9296, line: 150, column: 6)
!9357 = !DILocation(line: 150, column: 6, scope: !9358, inlinedAt: !9300)
!9358 = distinct !DILexicalBlock(scope: !9359, file: !9296, line: 150, column: 6)
!9359 = distinct !DILexicalBlock(scope: !9356, file: !9296, line: 150, column: 6)
!9360 = !{i32 -2145444278, i32 -2145444249, i32 -2145444203, i32 -2145444145, i32 -2145444091, i32 -2145444037, i32 -2145443982, i32 -2145443951}
!9361 = !DILocation(line: 150, column: 6, scope: !9362, inlinedAt: !9300)
!9362 = distinct !DILexicalBlock(scope: !9359, file: !9296, line: 150, column: 6)
!9363 = !{i32 -2145443531, i32 -2145443524, i32 -2145443472, i32 -2145443441, i32 -2145443411}
!9364 = !DILocation(line: 150, column: 6, scope: !9359, inlinedAt: !9300)
!9365 = !DILocation(line: 150, column: 6, scope: !9316, inlinedAt: !9300)
!9366 = !DILocation(line: 150, column: 6, scope: !9295, inlinedAt: !9300)
!9367 = !DILocation(line: 151, column: 3, scope: !9316, inlinedAt: !9300)
!9368 = !DILocation(line: 152, column: 20, scope: !9295, inlinedAt: !9300)
!9369 = !DILocation(line: 152, column: 26, scope: !9295, inlinedAt: !9300)
!9370 = !DILocation(line: 152, column: 33, scope: !9295, inlinedAt: !9300)
!9371 = !DILocation(line: 152, column: 2, scope: !9295, inlinedAt: !9300)
!9372 = !DILocation(line: 153, column: 2, scope: !9295, inlinedAt: !9300)
!9373 = !DILocation(line: 154, column: 1, scope: !9295, inlinedAt: !9300)
!9374 = !DILocation(line: 191, column: 6, scope: !9303, inlinedAt: !9306)
!9375 = !DILocation(line: 192, column: 23, scope: !9301, inlinedAt: !9306)
!9376 = !DILocation(line: 192, column: 27, scope: !9301, inlinedAt: !9306)
!9377 = !DILocation(line: 192, column: 33, scope: !9301, inlinedAt: !9306)
!9378 = !DILocation(line: 192, column: 7, scope: !9301, inlinedAt: !9306)
!9379 = !DILocation(line: 192, column: 5, scope: !9301, inlinedAt: !9306)
!9380 = !DILocation(line: 192, column: 3, scope: !9301, inlinedAt: !9306)
!9381 = !DILocation(line: 193, column: 9, scope: !9303, inlinedAt: !9306)
!9382 = !DILocation(line: 4489, column: 6, scope: !9307)
!9383 = !DILocation(line: 4489, column: 6, scope: !9291)
!9384 = !DILocation(line: 4490, column: 3, scope: !9307)
!9385 = !DILocation(line: 4492, column: 2, scope: !9291)
!9386 = !DILocation(line: 4493, column: 13, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 4493, column: 2)
!9388 = !DILocation(line: 4493, column: 9, scope: !9387)
!9389 = !DILocation(line: 4493, column: 7, scope: !9387)
!9390 = !DILocation(line: 4493, column: 18, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9387, file: !3, line: 4493, column: 2)
!9392 = !DILocation(line: 4493, column: 20, scope: !9391)
!9393 = !DILocation(line: 4493, column: 2, scope: !9387)
!9394 = !DILocation(line: 4494, column: 30, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 4493, column: 31)
!9396 = !DILocation(line: 4494, column: 20, scope: !9395)
!9397 = !DILocation(line: 4494, column: 15, scope: !9395)
!9398 = !DILocation(line: 4494, column: 3, scope: !9395)
!9399 = !DILocation(line: 4494, column: 18, scope: !9395)
!9400 = !DILocation(line: 4495, column: 30, scope: !9395)
!9401 = !DILocation(line: 4495, column: 20, scope: !9395)
!9402 = !DILocation(line: 4495, column: 15, scope: !9395)
!9403 = !DILocation(line: 4495, column: 3, scope: !9395)
!9404 = !DILocation(line: 4495, column: 18, scope: !9395)
!9405 = !DILocation(line: 4496, column: 30, scope: !9395)
!9406 = !DILocation(line: 4496, column: 20, scope: !9395)
!9407 = !DILocation(line: 4496, column: 15, scope: !9395)
!9408 = !DILocation(line: 4496, column: 3, scope: !9395)
!9409 = !DILocation(line: 4496, column: 18, scope: !9395)
!9410 = !DILocation(line: 4497, column: 2, scope: !9395)
!9411 = !DILocation(line: 4493, column: 27, scope: !9391)
!9412 = !DILocation(line: 4493, column: 2, scope: !9391)
!9413 = distinct !{!9413, !9393, !9414}
!9414 = !DILocation(line: 4497, column: 2, scope: !9387)
!9415 = !DILocation(line: 4498, column: 9, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 4498, column: 2)
!9417 = !DILocation(line: 4498, column: 7, scope: !9416)
!9418 = !DILocation(line: 4498, column: 14, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 4498, column: 2)
!9420 = !DILocation(line: 4498, column: 16, scope: !9419)
!9421 = !DILocation(line: 4498, column: 2, scope: !9416)
!9422 = !DILocation(line: 4499, column: 26, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9424, file: !3, line: 4499, column: 7)
!9424 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 4498, column: 40)
!9425 = !DILocation(line: 4499, column: 8, scope: !9423)
!9426 = !DILocation(line: 4499, column: 7, scope: !9424)
!9427 = !DILocation(line: 4500, column: 4, scope: !9423)
!9428 = !DILocation(line: 4501, column: 14, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9424, file: !3, line: 4501, column: 3)
!9430 = !DILocation(line: 4501, column: 10, scope: !9429)
!9431 = !DILocation(line: 4501, column: 8, scope: !9429)
!9432 = !DILocation(line: 4501, column: 19, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9429, file: !3, line: 4501, column: 3)
!9434 = !DILocation(line: 4501, column: 21, scope: !9433)
!9435 = !DILocation(line: 4501, column: 3, scope: !9429)
!9436 = !DILocation(line: 4502, column: 48, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 4501, column: 32)
!9438 = !DILocation(line: 4502, column: 36, scope: !9437)
!9439 = !DILocation(line: 4502, column: 12, scope: !9437)
!9440 = !DILocation(line: 4502, column: 4, scope: !9437)
!9441 = !DILocation(line: 4502, column: 15, scope: !9437)
!9442 = !DILocation(line: 4502, column: 18, scope: !9437)
!9443 = !DILocation(line: 4502, column: 30, scope: !9437)
!9444 = !DILocation(line: 4502, column: 34, scope: !9437)
!9445 = !DILocation(line: 4503, column: 48, scope: !9437)
!9446 = !DILocation(line: 4503, column: 36, scope: !9437)
!9447 = !DILocation(line: 4503, column: 12, scope: !9437)
!9448 = !DILocation(line: 4503, column: 4, scope: !9437)
!9449 = !DILocation(line: 4503, column: 15, scope: !9437)
!9450 = !DILocation(line: 4503, column: 18, scope: !9437)
!9451 = !DILocation(line: 4503, column: 30, scope: !9437)
!9452 = !DILocation(line: 4503, column: 34, scope: !9437)
!9453 = !DILocation(line: 4504, column: 48, scope: !9437)
!9454 = !DILocation(line: 4504, column: 36, scope: !9437)
!9455 = !DILocation(line: 4504, column: 12, scope: !9437)
!9456 = !DILocation(line: 4504, column: 4, scope: !9437)
!9457 = !DILocation(line: 4504, column: 15, scope: !9437)
!9458 = !DILocation(line: 4504, column: 18, scope: !9437)
!9459 = !DILocation(line: 4504, column: 30, scope: !9437)
!9460 = !DILocation(line: 4504, column: 34, scope: !9437)
!9461 = !DILocation(line: 4505, column: 3, scope: !9437)
!9462 = !DILocation(line: 4501, column: 28, scope: !9433)
!9463 = !DILocation(line: 4501, column: 3, scope: !9433)
!9464 = distinct !{!9464, !9435, !9465}
!9465 = !DILocation(line: 4505, column: 3, scope: !9429)
!9466 = !DILocation(line: 4506, column: 23, scope: !9424)
!9467 = !DILocation(line: 4506, column: 15, scope: !9424)
!9468 = !DILocation(line: 4506, column: 26, scope: !9424)
!9469 = !DILocation(line: 4506, column: 3, scope: !9424)
!9470 = !DILocation(line: 4507, column: 2, scope: !9424)
!9471 = !DILocation(line: 4498, column: 36, scope: !9419)
!9472 = !DILocation(line: 4498, column: 2, scope: !9419)
!9473 = distinct !{!9473, !9421, !9474}
!9474 = !DILocation(line: 4507, column: 2, scope: !9416)
!9475 = !DILocation(line: 4508, column: 2, scope: !9291)
!9476 = !DILocation(line: 4510, column: 2, scope: !9291)
!9477 = !DILocation(line: 4511, column: 1, scope: !9291)
!9478 = distinct !DISubprogram(name: "con_get_cmap", scope: !3, file: !3, line: 4513, type: !9292, scopeLine: 4514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9479 = !DILocation(line: 138, column: 29, scope: !9295, inlinedAt: !9480)
!9480 = distinct !DILocation(line: 199, column: 6, scope: !9481, inlinedAt: !9483)
!9481 = distinct !DILexicalBlock(scope: !9482, file: !9302, line: 199, column: 6)
!9482 = distinct !DISubprogram(name: "copy_to_user", scope: !9302, file: !9302, line: 197, type: !9304, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9483 = distinct !DILocation(line: 4526, column: 6, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 4526, column: 6)
!9485 = !DILocation(line: 138, column: 42, scope: !9295, inlinedAt: !9480)
!9486 = !DILocation(line: 138, column: 54, scope: !9295, inlinedAt: !9480)
!9487 = !DILocation(line: 140, column: 6, scope: !9295, inlinedAt: !9480)
!9488 = !DILocation(line: 150, column: 6, scope: !9315, inlinedAt: !9480)
!9489 = !DILocalVariable(name: "to", arg: 1, scope: !9482, file: !9302, line: 197, type: !216)
!9490 = !DILocation(line: 197, column: 27, scope: !9482, inlinedAt: !9483)
!9491 = !DILocalVariable(name: "from", arg: 2, scope: !9482, file: !9302, line: 197, type: !2216)
!9492 = !DILocation(line: 197, column: 43, scope: !9482, inlinedAt: !9483)
!9493 = !DILocalVariable(name: "n", arg: 3, scope: !9482, file: !9302, line: 197, type: !193)
!9494 = !DILocation(line: 197, column: 63, scope: !9482, inlinedAt: !9483)
!9495 = !DILocalVariable(name: "arg", arg: 1, scope: !9478, file: !3, line: 4513, type: !4083)
!9496 = !DILocation(line: 4513, column: 40, scope: !9478)
!9497 = !DILocalVariable(name: "i", scope: !9478, file: !3, line: 4515, type: !215)
!9498 = !DILocation(line: 4515, column: 6, scope: !9478)
!9499 = !DILocalVariable(name: "k", scope: !9478, file: !3, line: 4515, type: !215)
!9500 = !DILocation(line: 4515, column: 9, scope: !9478)
!9501 = !DILocalVariable(name: "colormap", scope: !9478, file: !3, line: 4516, type: !4379)
!9502 = !DILocation(line: 4516, column: 16, scope: !9478)
!9503 = !DILocation(line: 4518, column: 2, scope: !9478)
!9504 = !DILocation(line: 4519, column: 13, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 4519, column: 2)
!9506 = !DILocation(line: 4519, column: 9, scope: !9505)
!9507 = !DILocation(line: 4519, column: 7, scope: !9505)
!9508 = !DILocation(line: 4519, column: 18, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9505, file: !3, line: 4519, column: 2)
!9510 = !DILocation(line: 4519, column: 20, scope: !9509)
!9511 = !DILocation(line: 4519, column: 2, scope: !9505)
!9512 = !DILocation(line: 4520, column: 31, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 4519, column: 31)
!9514 = !DILocation(line: 4520, column: 19, scope: !9513)
!9515 = !DILocation(line: 4520, column: 13, scope: !9513)
!9516 = !DILocation(line: 4520, column: 3, scope: !9513)
!9517 = !DILocation(line: 4520, column: 17, scope: !9513)
!9518 = !DILocation(line: 4521, column: 31, scope: !9513)
!9519 = !DILocation(line: 4521, column: 19, scope: !9513)
!9520 = !DILocation(line: 4521, column: 13, scope: !9513)
!9521 = !DILocation(line: 4521, column: 3, scope: !9513)
!9522 = !DILocation(line: 4521, column: 17, scope: !9513)
!9523 = !DILocation(line: 4522, column: 31, scope: !9513)
!9524 = !DILocation(line: 4522, column: 19, scope: !9513)
!9525 = !DILocation(line: 4522, column: 13, scope: !9513)
!9526 = !DILocation(line: 4522, column: 3, scope: !9513)
!9527 = !DILocation(line: 4522, column: 17, scope: !9513)
!9528 = !DILocation(line: 4523, column: 2, scope: !9513)
!9529 = !DILocation(line: 4519, column: 27, scope: !9509)
!9530 = !DILocation(line: 4519, column: 2, scope: !9509)
!9531 = distinct !{!9531, !9511, !9532}
!9532 = !DILocation(line: 4523, column: 2, scope: !9505)
!9533 = !DILocation(line: 4524, column: 2, scope: !9478)
!9534 = !DILocation(line: 4526, column: 19, scope: !9484)
!9535 = !DILocation(line: 4526, column: 24, scope: !9484)
!9536 = !DILocation(line: 199, column: 6, scope: !9481, inlinedAt: !9483)
!9537 = !DILocation(line: 141, column: 6, scope: !9338, inlinedAt: !9480)
!9538 = !DILocation(line: 0, scope: !9338, inlinedAt: !9480)
!9539 = !DILocation(line: 141, column: 6, scope: !9295, inlinedAt: !9480)
!9540 = !DILocation(line: 142, column: 29, scope: !9342, inlinedAt: !9480)
!9541 = !DILocation(line: 142, column: 8, scope: !9342, inlinedAt: !9480)
!9542 = !DILocation(line: 142, column: 7, scope: !9343, inlinedAt: !9480)
!9543 = !DILocation(line: 143, column: 18, scope: !9342, inlinedAt: !9480)
!9544 = !DILocation(line: 143, column: 22, scope: !9342, inlinedAt: !9480)
!9545 = !DILocation(line: 143, column: 4, scope: !9342, inlinedAt: !9480)
!9546 = !DILocation(line: 144, column: 12, scope: !9350, inlinedAt: !9480)
!9547 = !DILocation(line: 144, column: 12, scope: !9342, inlinedAt: !9480)
!9548 = !DILocation(line: 145, column: 4, scope: !9350, inlinedAt: !9480)
!9549 = !DILocation(line: 147, column: 4, scope: !9350, inlinedAt: !9480)
!9550 = !DILocation(line: 148, column: 3, scope: !9343, inlinedAt: !9480)
!9551 = !DILocation(line: 150, column: 6, scope: !9356, inlinedAt: !9480)
!9552 = !DILocation(line: 150, column: 6, scope: !9358, inlinedAt: !9480)
!9553 = !DILocation(line: 150, column: 6, scope: !9362, inlinedAt: !9480)
!9554 = !DILocation(line: 150, column: 6, scope: !9359, inlinedAt: !9480)
!9555 = !DILocation(line: 150, column: 6, scope: !9316, inlinedAt: !9480)
!9556 = !DILocation(line: 150, column: 6, scope: !9295, inlinedAt: !9480)
!9557 = !DILocation(line: 151, column: 3, scope: !9316, inlinedAt: !9480)
!9558 = !DILocation(line: 152, column: 20, scope: !9295, inlinedAt: !9480)
!9559 = !DILocation(line: 152, column: 26, scope: !9295, inlinedAt: !9480)
!9560 = !DILocation(line: 152, column: 33, scope: !9295, inlinedAt: !9480)
!9561 = !DILocation(line: 152, column: 2, scope: !9295, inlinedAt: !9480)
!9562 = !DILocation(line: 153, column: 2, scope: !9295, inlinedAt: !9480)
!9563 = !DILocation(line: 154, column: 1, scope: !9295, inlinedAt: !9480)
!9564 = !DILocation(line: 199, column: 6, scope: !9482, inlinedAt: !9483)
!9565 = !DILocation(line: 200, column: 21, scope: !9481, inlinedAt: !9483)
!9566 = !DILocation(line: 200, column: 25, scope: !9481, inlinedAt: !9483)
!9567 = !DILocation(line: 200, column: 31, scope: !9481, inlinedAt: !9483)
!9568 = !DILocation(line: 200, column: 7, scope: !9481, inlinedAt: !9483)
!9569 = !DILocation(line: 200, column: 5, scope: !9481, inlinedAt: !9483)
!9570 = !DILocation(line: 200, column: 3, scope: !9481, inlinedAt: !9483)
!9571 = !DILocation(line: 201, column: 9, scope: !9482, inlinedAt: !9483)
!9572 = !DILocation(line: 4526, column: 6, scope: !9484)
!9573 = !DILocation(line: 4526, column: 6, scope: !9478)
!9574 = !DILocation(line: 4527, column: 3, scope: !9484)
!9575 = !DILocation(line: 4529, column: 2, scope: !9478)
!9576 = !DILocation(line: 4530, column: 1, scope: !9478)
!9577 = distinct !DISubprogram(name: "reset_palette", scope: !3, file: !3, line: 4532, type: !4246, scopeLine: 4533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9578 = !DILocalVariable(name: "vc", arg: 1, scope: !9577, file: !3, line: 4532, type: !220)
!9579 = !DILocation(line: 4532, column: 36, scope: !9577)
!9580 = !DILocalVariable(name: "j", scope: !9577, file: !3, line: 4534, type: !215)
!9581 = !DILocation(line: 4534, column: 6, scope: !9577)
!9582 = !DILocalVariable(name: "k", scope: !9577, file: !3, line: 4534, type: !215)
!9583 = !DILocation(line: 4534, column: 9, scope: !9577)
!9584 = !DILocation(line: 4535, column: 10, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9577, file: !3, line: 4535, column: 2)
!9586 = !DILocation(line: 4535, column: 8, scope: !9585)
!9587 = !DILocation(line: 4535, column: 7, scope: !9585)
!9588 = !DILocation(line: 4535, column: 14, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9585, file: !3, line: 4535, column: 2)
!9590 = !DILocation(line: 4535, column: 15, scope: !9589)
!9591 = !DILocation(line: 4535, column: 2, scope: !9585)
!9592 = !DILocation(line: 4536, column: 37, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 4535, column: 25)
!9594 = !DILocation(line: 4536, column: 25, scope: !9593)
!9595 = !DILocation(line: 4536, column: 3, scope: !9593)
!9596 = !DILocation(line: 4536, column: 7, scope: !9593)
!9597 = !DILocation(line: 4536, column: 19, scope: !9593)
!9598 = !DILocation(line: 4536, column: 23, scope: !9593)
!9599 = !DILocation(line: 4537, column: 37, scope: !9593)
!9600 = !DILocation(line: 4537, column: 25, scope: !9593)
!9601 = !DILocation(line: 4537, column: 3, scope: !9593)
!9602 = !DILocation(line: 4537, column: 7, scope: !9593)
!9603 = !DILocation(line: 4537, column: 19, scope: !9593)
!9604 = !DILocation(line: 4537, column: 23, scope: !9593)
!9605 = !DILocation(line: 4538, column: 37, scope: !9593)
!9606 = !DILocation(line: 4538, column: 25, scope: !9593)
!9607 = !DILocation(line: 4538, column: 3, scope: !9593)
!9608 = !DILocation(line: 4538, column: 7, scope: !9593)
!9609 = !DILocation(line: 4538, column: 19, scope: !9593)
!9610 = !DILocation(line: 4538, column: 23, scope: !9593)
!9611 = !DILocation(line: 4539, column: 2, scope: !9593)
!9612 = !DILocation(line: 4535, column: 21, scope: !9589)
!9613 = !DILocation(line: 4535, column: 2, scope: !9589)
!9614 = distinct !{!9614, !9591, !9615}
!9615 = !DILocation(line: 4539, column: 2, scope: !9585)
!9616 = !DILocation(line: 4540, column: 14, scope: !9577)
!9617 = !DILocation(line: 4540, column: 2, scope: !9577)
!9618 = !DILocation(line: 4541, column: 1, scope: !9577)
!9619 = distinct !DISubprogram(name: "con_font_op", scope: !3, file: !3, line: 4707, type: !9620, scopeLine: 4708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9620 = !DISubroutineType(types: !9621)
!9621 = !{!215, !220, !9622}
!9622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9623, size: 64)
!9623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_font_op", file: !4281, line: 159, size: 256, elements: !9624)
!9624 = !{!9625, !9626, !9627, !9628, !9629, !9630}
!9625 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !9623, file: !4281, line: 160, baseType: !7, size: 32)
!9626 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9623, file: !4281, line: 161, baseType: !7, size: 32, offset: 32)
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !9623, file: !4281, line: 162, baseType: !7, size: 32, offset: 64)
!9628 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !9623, file: !4281, line: 162, baseType: !7, size: 32, offset: 96)
!9629 = !DIDerivedType(tag: DW_TAG_member, name: "charcount", scope: !9623, file: !4281, line: 163, baseType: !7, size: 32, offset: 128)
!9630 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9623, file: !4281, line: 164, baseType: !4083, size: 64, offset: 192)
!9631 = !DILocalVariable(name: "vc", arg: 1, scope: !9619, file: !3, line: 4707, type: !220)
!9632 = !DILocation(line: 4707, column: 33, scope: !9619)
!9633 = !DILocalVariable(name: "op", arg: 2, scope: !9619, file: !3, line: 4707, type: !9622)
!9634 = !DILocation(line: 4707, column: 61, scope: !9619)
!9635 = !DILocation(line: 4709, column: 10, scope: !9619)
!9636 = !DILocation(line: 4709, column: 14, scope: !9619)
!9637 = !DILocation(line: 4709, column: 2, scope: !9619)
!9638 = !DILocation(line: 4711, column: 23, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 4709, column: 18)
!9640 = !DILocation(line: 4711, column: 27, scope: !9639)
!9641 = !DILocation(line: 4711, column: 10, scope: !9639)
!9642 = !DILocation(line: 4711, column: 3, scope: !9639)
!9643 = !DILocation(line: 4713, column: 23, scope: !9639)
!9644 = !DILocation(line: 4713, column: 27, scope: !9639)
!9645 = !DILocation(line: 4713, column: 10, scope: !9639)
!9646 = !DILocation(line: 4713, column: 3, scope: !9639)
!9647 = !DILocation(line: 4715, column: 27, scope: !9639)
!9648 = !DILocation(line: 4715, column: 31, scope: !9639)
!9649 = !DILocation(line: 4715, column: 10, scope: !9639)
!9650 = !DILocation(line: 4715, column: 3, scope: !9639)
!9651 = !DILocation(line: 4718, column: 3, scope: !9639)
!9652 = !DILocation(line: 4720, column: 2, scope: !9619)
!9653 = !DILocation(line: 4721, column: 1, scope: !9619)
!9654 = distinct !DISubprogram(name: "con_font_set", scope: !3, file: !3, line: 4612, type: !9620, scopeLine: 4613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9655 = !DILocalVariable(name: "vc", arg: 1, scope: !9654, file: !3, line: 4612, type: !220)
!9656 = !DILocation(line: 4612, column: 41, scope: !9654)
!9657 = !DILocalVariable(name: "op", arg: 2, scope: !9654, file: !3, line: 4612, type: !9622)
!9658 = !DILocation(line: 4612, column: 69, scope: !9654)
!9659 = !DILocalVariable(name: "font", scope: !9654, file: !3, line: 4614, type: !4280)
!9660 = !DILocation(line: 4614, column: 22, scope: !9654)
!9661 = !DILocalVariable(name: "rc", scope: !9654, file: !3, line: 4615, type: !215)
!9662 = !DILocation(line: 4615, column: 6, scope: !9654)
!9663 = !DILocalVariable(name: "size", scope: !9654, file: !3, line: 4616, type: !215)
!9664 = !DILocation(line: 4616, column: 6, scope: !9654)
!9665 = !DILocation(line: 4618, column: 6, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 4618, column: 6)
!9667 = !DILocation(line: 4618, column: 10, scope: !9666)
!9668 = !DILocation(line: 4618, column: 18, scope: !9666)
!9669 = !DILocation(line: 4618, column: 6, scope: !9654)
!9670 = !DILocation(line: 4619, column: 3, scope: !9666)
!9671 = !DILocation(line: 4620, column: 7, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 4620, column: 6)
!9673 = !DILocation(line: 4620, column: 11, scope: !9672)
!9674 = !DILocation(line: 4620, column: 6, scope: !9654)
!9675 = !DILocation(line: 4621, column: 3, scope: !9672)
!9676 = !DILocation(line: 4622, column: 6, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 4622, column: 6)
!9678 = !DILocation(line: 4622, column: 10, scope: !9677)
!9679 = !DILocation(line: 4622, column: 20, scope: !9677)
!9680 = !DILocation(line: 4622, column: 6, scope: !9654)
!9681 = !DILocation(line: 4623, column: 3, scope: !9677)
!9682 = !DILocation(line: 4624, column: 6, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 4624, column: 6)
!9684 = !DILocation(line: 4624, column: 10, scope: !9683)
!9685 = !DILocation(line: 4624, column: 16, scope: !9683)
!9686 = !DILocation(line: 4624, column: 21, scope: !9683)
!9687 = !DILocation(line: 4624, column: 24, scope: !9683)
!9688 = !DILocation(line: 4624, column: 28, scope: !9683)
!9689 = !DILocation(line: 4624, column: 34, scope: !9683)
!9690 = !DILocation(line: 4624, column: 39, scope: !9683)
!9691 = !DILocation(line: 4624, column: 42, scope: !9683)
!9692 = !DILocation(line: 4624, column: 46, scope: !9683)
!9693 = !DILocation(line: 4624, column: 53, scope: !9683)
!9694 = !DILocation(line: 4624, column: 6, scope: !9654)
!9695 = !DILocation(line: 4625, column: 3, scope: !9683)
!9696 = !DILocation(line: 4626, column: 10, scope: !9654)
!9697 = !DILocation(line: 4626, column: 14, scope: !9654)
!9698 = !DILocation(line: 4626, column: 19, scope: !9654)
!9699 = !DILocation(line: 4626, column: 22, scope: !9654)
!9700 = !DILocation(line: 4626, column: 25, scope: !9654)
!9701 = !DILocation(line: 4626, column: 32, scope: !9654)
!9702 = !DILocation(line: 4626, column: 36, scope: !9654)
!9703 = !DILocation(line: 4626, column: 30, scope: !9654)
!9704 = !DILocation(line: 4626, column: 7, scope: !9654)
!9705 = !DILocation(line: 4627, column: 6, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 4627, column: 6)
!9707 = !DILocation(line: 4627, column: 11, scope: !9706)
!9708 = !DILocation(line: 4627, column: 6, scope: !9654)
!9709 = !DILocation(line: 4628, column: 3, scope: !9706)
!9710 = !DILocation(line: 4630, column: 26, scope: !9654)
!9711 = !DILocation(line: 4630, column: 30, scope: !9654)
!9712 = !DILocation(line: 4630, column: 36, scope: !9654)
!9713 = !DILocation(line: 4630, column: 14, scope: !9654)
!9714 = !DILocation(line: 4630, column: 7, scope: !9654)
!9715 = !DILocation(line: 4630, column: 12, scope: !9654)
!9716 = !DILocation(line: 4631, column: 18, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 4631, column: 6)
!9718 = !DILocation(line: 4631, column: 6, scope: !9717)
!9719 = !DILocation(line: 4631, column: 6, scope: !9654)
!9720 = !DILocation(line: 4632, column: 23, scope: !9717)
!9721 = !DILocation(line: 4632, column: 10, scope: !9717)
!9722 = !DILocation(line: 4632, column: 3, scope: !9717)
!9723 = !DILocation(line: 4634, column: 7, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 4634, column: 6)
!9725 = !DILocation(line: 4634, column: 11, scope: !9724)
!9726 = !DILocation(line: 4634, column: 6, scope: !9654)
!9727 = !DILocalVariable(name: "h", scope: !9728, file: !3, line: 4635, type: !215)
!9728 = distinct !DILexicalBlock(scope: !9724, file: !3, line: 4634, column: 19)
!9729 = !DILocation(line: 4635, column: 7, scope: !9728)
!9730 = !DILocalVariable(name: "i", scope: !9728, file: !3, line: 4635, type: !215)
!9731 = !DILocation(line: 4635, column: 10, scope: !9728)
!9732 = !DILocalVariable(name: "charmap", scope: !9728, file: !3, line: 4636, type: !9733)
!9733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!9734 = !DILocation(line: 4636, column: 7, scope: !9728)
!9735 = !DILocation(line: 4636, column: 22, scope: !9728)
!9736 = !DILocation(line: 4642, column: 9, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 4642, column: 7)
!9738 = !DILocation(line: 4642, column: 13, scope: !9737)
!9739 = !DILocation(line: 4642, column: 19, scope: !9737)
!9740 = !DILocation(line: 4642, column: 7, scope: !9728)
!9741 = !DILocation(line: 4643, column: 15, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 4642, column: 40)
!9743 = !DILocation(line: 4643, column: 4, scope: !9742)
!9744 = !DILocation(line: 4644, column: 4, scope: !9742)
!9745 = !DILocation(line: 4647, column: 10, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9728, file: !3, line: 4647, column: 3)
!9747 = !DILocation(line: 4647, column: 8, scope: !9746)
!9748 = !DILocation(line: 4647, column: 16, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9746, file: !3, line: 4647, column: 3)
!9750 = !DILocation(line: 4647, column: 18, scope: !9749)
!9751 = !DILocation(line: 4647, column: 3, scope: !9746)
!9752 = !DILocation(line: 4648, column: 11, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 4648, column: 4)
!9754 = !DILocation(line: 4648, column: 9, scope: !9753)
!9755 = !DILocation(line: 4648, column: 16, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 4648, column: 4)
!9757 = !DILocation(line: 4648, column: 20, scope: !9756)
!9758 = !DILocation(line: 4648, column: 24, scope: !9756)
!9759 = !DILocation(line: 4648, column: 18, scope: !9756)
!9760 = !DILocation(line: 4648, column: 4, scope: !9753)
!9761 = !DILocation(line: 4649, column: 9, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9756, file: !3, line: 4649, column: 9)
!9763 = !DILocation(line: 4649, column: 20, scope: !9762)
!9764 = !DILocation(line: 4649, column: 19, scope: !9762)
!9765 = !DILocation(line: 4649, column: 22, scope: !9762)
!9766 = !DILocation(line: 4649, column: 21, scope: !9762)
!9767 = !DILocation(line: 4649, column: 23, scope: !9762)
!9768 = !DILocation(line: 4649, column: 9, scope: !9756)
!9769 = !DILocation(line: 4650, column: 6, scope: !9762)
!9770 = !DILocation(line: 4649, column: 25, scope: !9762)
!9771 = !DILocation(line: 4648, column: 36, scope: !9756)
!9772 = !DILocation(line: 4648, column: 4, scope: !9756)
!9773 = distinct !{!9773, !9760, !9774}
!9774 = !DILocation(line: 4650, column: 11, scope: !9753)
!9775 = !DILocation(line: 4647, column: 24, scope: !9749)
!9776 = !DILocation(line: 4647, column: 3, scope: !9749)
!9777 = distinct !{!9777, !9751, !9778}
!9778 = !DILocation(line: 4650, column: 11, scope: !9746)
!9779 = !DILocation(line: 4652, column: 14, scope: !9728)
!9780 = !DILocation(line: 4652, column: 3, scope: !9728)
!9781 = !DILocation(line: 4653, column: 3, scope: !9728)
!9782 = !DILabel(scope: !9728, name: "nonzero", file: !3, line: 4655)
!9783 = !DILocation(line: 4655, column: 2, scope: !9728)
!9784 = !DILocation(line: 4656, column: 16, scope: !9728)
!9785 = !DILocation(line: 4656, column: 3, scope: !9728)
!9786 = !DILocation(line: 4656, column: 7, scope: !9728)
!9787 = !DILocation(line: 4656, column: 14, scope: !9728)
!9788 = !DILocation(line: 4657, column: 2, scope: !9728)
!9789 = !DILocation(line: 4659, column: 19, scope: !9654)
!9790 = !DILocation(line: 4659, column: 23, scope: !9654)
!9791 = !DILocation(line: 4659, column: 7, scope: !9654)
!9792 = !DILocation(line: 4659, column: 17, scope: !9654)
!9793 = !DILocation(line: 4660, column: 15, scope: !9654)
!9794 = !DILocation(line: 4660, column: 19, scope: !9654)
!9795 = !DILocation(line: 4660, column: 7, scope: !9654)
!9796 = !DILocation(line: 4660, column: 13, scope: !9654)
!9797 = !DILocation(line: 4661, column: 16, scope: !9654)
!9798 = !DILocation(line: 4661, column: 20, scope: !9654)
!9799 = !DILocation(line: 4661, column: 7, scope: !9654)
!9800 = !DILocation(line: 4661, column: 14, scope: !9654)
!9801 = !DILocation(line: 4663, column: 2, scope: !9654)
!9802 = !DILocation(line: 4664, column: 6, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 4664, column: 6)
!9804 = !DILocation(line: 4664, column: 10, scope: !9803)
!9805 = !DILocation(line: 4664, column: 18, scope: !9803)
!9806 = !DILocation(line: 4664, column: 6, scope: !9654)
!9807 = !DILocation(line: 4665, column: 6, scope: !9803)
!9808 = !DILocation(line: 4665, column: 3, scope: !9803)
!9809 = !DILocation(line: 4666, column: 11, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 4666, column: 11)
!9811 = !DILocation(line: 4666, column: 15, scope: !9810)
!9812 = !DILocation(line: 4666, column: 22, scope: !9810)
!9813 = !DILocation(line: 4666, column: 11, scope: !9803)
!9814 = !DILocation(line: 4667, column: 8, scope: !9810)
!9815 = !DILocation(line: 4667, column: 12, scope: !9810)
!9816 = !DILocation(line: 4667, column: 19, scope: !9810)
!9817 = !DILocation(line: 4667, column: 32, scope: !9810)
!9818 = !DILocation(line: 4667, column: 43, scope: !9810)
!9819 = !DILocation(line: 4667, column: 47, scope: !9810)
!9820 = !DILocation(line: 4667, column: 6, scope: !9810)
!9821 = !DILocation(line: 4667, column: 3, scope: !9810)
!9822 = !DILocation(line: 4669, column: 6, scope: !9810)
!9823 = !DILocation(line: 4670, column: 2, scope: !9654)
!9824 = !DILocation(line: 4671, column: 13, scope: !9654)
!9825 = !DILocation(line: 4671, column: 2, scope: !9654)
!9826 = !DILocation(line: 4672, column: 9, scope: !9654)
!9827 = !DILocation(line: 4672, column: 2, scope: !9654)
!9828 = !DILocation(line: 4673, column: 1, scope: !9654)
!9829 = distinct !DISubprogram(name: "con_font_get", scope: !3, file: !3, line: 4558, type: !9620, scopeLine: 4559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!9830 = !DILocation(line: 138, column: 29, scope: !9295, inlinedAt: !9831)
!9831 = distinct !DILocation(line: 199, column: 6, scope: !9481, inlinedAt: !9832)
!9832 = distinct !DILocation(line: 4604, column: 18, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4604, column: 6)
!9834 = !DILocation(line: 138, column: 42, scope: !9295, inlinedAt: !9831)
!9835 = !DILocation(line: 138, column: 54, scope: !9295, inlinedAt: !9831)
!9836 = !DILocation(line: 140, column: 6, scope: !9295, inlinedAt: !9831)
!9837 = !DILocation(line: 150, column: 6, scope: !9315, inlinedAt: !9831)
!9838 = !DILocation(line: 197, column: 27, scope: !9482, inlinedAt: !9832)
!9839 = !DILocation(line: 197, column: 43, scope: !9482, inlinedAt: !9832)
!9840 = !DILocation(line: 197, column: 63, scope: !9482, inlinedAt: !9832)
!9841 = !DILocation(line: 445, column: 72, scope: !6410, inlinedAt: !9842)
!9842 = distinct !DILocation(line: 552, column: 10, scope: !6415, inlinedAt: !9843)
!9843 = distinct !DILocation(line: 4565, column: 15, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9845, file: !3, line: 4564, column: 16)
!9845 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4564, column: 6)
!9846 = !DILocation(line: 446, column: 9, scope: !6410, inlinedAt: !9842)
!9847 = !DILocation(line: 446, column: 23, scope: !6410, inlinedAt: !9842)
!9848 = !DILocation(line: 448, column: 8, scope: !6410, inlinedAt: !9842)
!9849 = !DILocation(line: 318, column: 67, scope: !6426, inlinedAt: !9850)
!9850 = distinct !DILocation(line: 553, column: 20, scope: !6415, inlinedAt: !9843)
!9851 = !DILocation(line: 346, column: 58, scope: !6432, inlinedAt: !9852)
!9852 = distinct !DILocation(line: 547, column: 11, scope: !6415, inlinedAt: !9843)
!9853 = !DILocation(line: 472, column: 28, scope: !6438, inlinedAt: !9854)
!9854 = distinct !DILocation(line: 481, column: 9, scope: !6443, inlinedAt: !9855)
!9855 = distinct !DILocation(line: 545, column: 11, scope: !6445, inlinedAt: !9843)
!9856 = !DILocation(line: 472, column: 40, scope: !6438, inlinedAt: !9854)
!9857 = !DILocation(line: 472, column: 60, scope: !6438, inlinedAt: !9854)
!9858 = !DILocation(line: 478, column: 51, scope: !6443, inlinedAt: !9855)
!9859 = !DILocation(line: 478, column: 63, scope: !6443, inlinedAt: !9855)
!9860 = !DILocation(line: 480, column: 15, scope: !6443, inlinedAt: !9855)
!9861 = !DILocation(line: 538, column: 45, scope: !6417, inlinedAt: !9843)
!9862 = !DILocation(line: 538, column: 57, scope: !6417, inlinedAt: !9843)
!9863 = !DILocation(line: 542, column: 16, scope: !6415, inlinedAt: !9843)
!9864 = !DILocalVariable(name: "vc", arg: 1, scope: !9829, file: !3, line: 4558, type: !220)
!9865 = !DILocation(line: 4558, column: 41, scope: !9829)
!9866 = !DILocalVariable(name: "op", arg: 2, scope: !9829, file: !3, line: 4558, type: !9622)
!9867 = !DILocation(line: 4558, column: 69, scope: !9829)
!9868 = !DILocalVariable(name: "font", scope: !9829, file: !3, line: 4560, type: !4280)
!9869 = !DILocation(line: 4560, column: 22, scope: !9829)
!9870 = !DILocalVariable(name: "rc", scope: !9829, file: !3, line: 4561, type: !215)
!9871 = !DILocation(line: 4561, column: 6, scope: !9829)
!9872 = !DILocalVariable(name: "c", scope: !9829, file: !3, line: 4562, type: !215)
!9873 = !DILocation(line: 4562, column: 6, scope: !9829)
!9874 = !DILocation(line: 4564, column: 6, scope: !9845)
!9875 = !DILocation(line: 4564, column: 10, scope: !9845)
!9876 = !DILocation(line: 4564, column: 6, scope: !9829)
!9877 = !DILocation(line: 540, column: 27, scope: !6416, inlinedAt: !9843)
!9878 = !DILocation(line: 540, column: 6, scope: !6416, inlinedAt: !9843)
!9879 = !DILocation(line: 540, column: 6, scope: !6417, inlinedAt: !9843)
!9880 = !DILocation(line: 544, column: 7, scope: !6445, inlinedAt: !9843)
!9881 = !DILocation(line: 544, column: 12, scope: !6445, inlinedAt: !9843)
!9882 = !DILocation(line: 544, column: 7, scope: !6415, inlinedAt: !9843)
!9883 = !DILocation(line: 545, column: 25, scope: !6445, inlinedAt: !9843)
!9884 = !DILocation(line: 545, column: 31, scope: !6445, inlinedAt: !9843)
!9885 = !DILocation(line: 480, column: 33, scope: !6443, inlinedAt: !9855)
!9886 = !DILocation(line: 480, column: 23, scope: !6443, inlinedAt: !9855)
!9887 = !DILocation(line: 481, column: 29, scope: !6443, inlinedAt: !9855)
!9888 = !DILocation(line: 481, column: 35, scope: !6443, inlinedAt: !9855)
!9889 = !DILocation(line: 481, column: 42, scope: !6443, inlinedAt: !9855)
!9890 = !DILocation(line: 474, column: 23, scope: !6438, inlinedAt: !9854)
!9891 = !DILocation(line: 474, column: 29, scope: !6438, inlinedAt: !9854)
!9892 = !DILocation(line: 474, column: 36, scope: !6438, inlinedAt: !9854)
!9893 = !DILocation(line: 474, column: 9, scope: !6438, inlinedAt: !9854)
!9894 = !DILocation(line: 545, column: 4, scope: !6445, inlinedAt: !9843)
!9895 = !DILocation(line: 547, column: 25, scope: !6415, inlinedAt: !9843)
!9896 = !DILocation(line: 348, column: 7, scope: !6489, inlinedAt: !9852)
!9897 = !DILocation(line: 348, column: 6, scope: !6432, inlinedAt: !9852)
!9898 = !DILocation(line: 349, column: 3, scope: !6489, inlinedAt: !9852)
!9899 = !DILocation(line: 351, column: 6, scope: !6493, inlinedAt: !9852)
!9900 = !DILocation(line: 351, column: 11, scope: !6493, inlinedAt: !9852)
!9901 = !DILocation(line: 351, column: 6, scope: !6432, inlinedAt: !9852)
!9902 = !DILocation(line: 352, column: 3, scope: !6493, inlinedAt: !9852)
!9903 = !DILocation(line: 354, column: 32, scope: !6498, inlinedAt: !9852)
!9904 = !DILocation(line: 354, column: 37, scope: !6498, inlinedAt: !9852)
!9905 = !DILocation(line: 354, column: 42, scope: !6498, inlinedAt: !9852)
!9906 = !DILocation(line: 354, column: 45, scope: !6498, inlinedAt: !9852)
!9907 = !DILocation(line: 354, column: 50, scope: !6498, inlinedAt: !9852)
!9908 = !DILocation(line: 354, column: 6, scope: !6432, inlinedAt: !9852)
!9909 = !DILocation(line: 355, column: 3, scope: !6498, inlinedAt: !9852)
!9910 = !DILocation(line: 356, column: 32, scope: !6506, inlinedAt: !9852)
!9911 = !DILocation(line: 356, column: 37, scope: !6506, inlinedAt: !9852)
!9912 = !DILocation(line: 356, column: 43, scope: !6506, inlinedAt: !9852)
!9913 = !DILocation(line: 356, column: 46, scope: !6506, inlinedAt: !9852)
!9914 = !DILocation(line: 356, column: 51, scope: !6506, inlinedAt: !9852)
!9915 = !DILocation(line: 356, column: 6, scope: !6432, inlinedAt: !9852)
!9916 = !DILocation(line: 357, column: 3, scope: !6506, inlinedAt: !9852)
!9917 = !DILocation(line: 358, column: 6, scope: !6514, inlinedAt: !9852)
!9918 = !DILocation(line: 358, column: 11, scope: !6514, inlinedAt: !9852)
!9919 = !DILocation(line: 358, column: 6, scope: !6432, inlinedAt: !9852)
!9920 = !DILocation(line: 358, column: 26, scope: !6514, inlinedAt: !9852)
!9921 = !DILocation(line: 359, column: 6, scope: !6519, inlinedAt: !9852)
!9922 = !DILocation(line: 359, column: 11, scope: !6519, inlinedAt: !9852)
!9923 = !DILocation(line: 359, column: 6, scope: !6432, inlinedAt: !9852)
!9924 = !DILocation(line: 359, column: 26, scope: !6519, inlinedAt: !9852)
!9925 = !DILocation(line: 360, column: 6, scope: !6524, inlinedAt: !9852)
!9926 = !DILocation(line: 360, column: 11, scope: !6524, inlinedAt: !9852)
!9927 = !DILocation(line: 360, column: 6, scope: !6432, inlinedAt: !9852)
!9928 = !DILocation(line: 360, column: 26, scope: !6524, inlinedAt: !9852)
!9929 = !DILocation(line: 361, column: 6, scope: !6529, inlinedAt: !9852)
!9930 = !DILocation(line: 361, column: 11, scope: !6529, inlinedAt: !9852)
!9931 = !DILocation(line: 361, column: 6, scope: !6432, inlinedAt: !9852)
!9932 = !DILocation(line: 361, column: 26, scope: !6529, inlinedAt: !9852)
!9933 = !DILocation(line: 362, column: 6, scope: !6534, inlinedAt: !9852)
!9934 = !DILocation(line: 362, column: 11, scope: !6534, inlinedAt: !9852)
!9935 = !DILocation(line: 362, column: 6, scope: !6432, inlinedAt: !9852)
!9936 = !DILocation(line: 362, column: 26, scope: !6534, inlinedAt: !9852)
!9937 = !DILocation(line: 363, column: 6, scope: !6539, inlinedAt: !9852)
!9938 = !DILocation(line: 363, column: 11, scope: !6539, inlinedAt: !9852)
!9939 = !DILocation(line: 363, column: 6, scope: !6432, inlinedAt: !9852)
!9940 = !DILocation(line: 363, column: 26, scope: !6539, inlinedAt: !9852)
!9941 = !DILocation(line: 364, column: 6, scope: !6544, inlinedAt: !9852)
!9942 = !DILocation(line: 364, column: 11, scope: !6544, inlinedAt: !9852)
!9943 = !DILocation(line: 364, column: 6, scope: !6432, inlinedAt: !9852)
!9944 = !DILocation(line: 364, column: 26, scope: !6544, inlinedAt: !9852)
!9945 = !DILocation(line: 365, column: 6, scope: !6549, inlinedAt: !9852)
!9946 = !DILocation(line: 365, column: 11, scope: !6549, inlinedAt: !9852)
!9947 = !DILocation(line: 365, column: 6, scope: !6432, inlinedAt: !9852)
!9948 = !DILocation(line: 365, column: 26, scope: !6549, inlinedAt: !9852)
!9949 = !DILocation(line: 366, column: 6, scope: !6554, inlinedAt: !9852)
!9950 = !DILocation(line: 366, column: 11, scope: !6554, inlinedAt: !9852)
!9951 = !DILocation(line: 366, column: 6, scope: !6432, inlinedAt: !9852)
!9952 = !DILocation(line: 366, column: 26, scope: !6554, inlinedAt: !9852)
!9953 = !DILocation(line: 367, column: 6, scope: !6559, inlinedAt: !9852)
!9954 = !DILocation(line: 367, column: 11, scope: !6559, inlinedAt: !9852)
!9955 = !DILocation(line: 367, column: 6, scope: !6432, inlinedAt: !9852)
!9956 = !DILocation(line: 367, column: 26, scope: !6559, inlinedAt: !9852)
!9957 = !DILocation(line: 368, column: 6, scope: !6564, inlinedAt: !9852)
!9958 = !DILocation(line: 368, column: 11, scope: !6564, inlinedAt: !9852)
!9959 = !DILocation(line: 368, column: 6, scope: !6432, inlinedAt: !9852)
!9960 = !DILocation(line: 368, column: 26, scope: !6564, inlinedAt: !9852)
!9961 = !DILocation(line: 369, column: 6, scope: !6569, inlinedAt: !9852)
!9962 = !DILocation(line: 369, column: 11, scope: !6569, inlinedAt: !9852)
!9963 = !DILocation(line: 369, column: 6, scope: !6432, inlinedAt: !9852)
!9964 = !DILocation(line: 369, column: 26, scope: !6569, inlinedAt: !9852)
!9965 = !DILocation(line: 370, column: 6, scope: !6574, inlinedAt: !9852)
!9966 = !DILocation(line: 370, column: 11, scope: !6574, inlinedAt: !9852)
!9967 = !DILocation(line: 370, column: 6, scope: !6432, inlinedAt: !9852)
!9968 = !DILocation(line: 370, column: 26, scope: !6574, inlinedAt: !9852)
!9969 = !DILocation(line: 371, column: 6, scope: !6579, inlinedAt: !9852)
!9970 = !DILocation(line: 371, column: 11, scope: !6579, inlinedAt: !9852)
!9971 = !DILocation(line: 371, column: 6, scope: !6432, inlinedAt: !9852)
!9972 = !DILocation(line: 371, column: 26, scope: !6579, inlinedAt: !9852)
!9973 = !DILocation(line: 372, column: 6, scope: !6584, inlinedAt: !9852)
!9974 = !DILocation(line: 372, column: 11, scope: !6584, inlinedAt: !9852)
!9975 = !DILocation(line: 372, column: 6, scope: !6432, inlinedAt: !9852)
!9976 = !DILocation(line: 372, column: 26, scope: !6584, inlinedAt: !9852)
!9977 = !DILocation(line: 373, column: 6, scope: !6589, inlinedAt: !9852)
!9978 = !DILocation(line: 373, column: 11, scope: !6589, inlinedAt: !9852)
!9979 = !DILocation(line: 373, column: 6, scope: !6432, inlinedAt: !9852)
!9980 = !DILocation(line: 373, column: 26, scope: !6589, inlinedAt: !9852)
!9981 = !DILocation(line: 374, column: 6, scope: !6594, inlinedAt: !9852)
!9982 = !DILocation(line: 374, column: 11, scope: !6594, inlinedAt: !9852)
!9983 = !DILocation(line: 374, column: 6, scope: !6432, inlinedAt: !9852)
!9984 = !DILocation(line: 374, column: 26, scope: !6594, inlinedAt: !9852)
!9985 = !DILocation(line: 375, column: 6, scope: !6599, inlinedAt: !9852)
!9986 = !DILocation(line: 375, column: 11, scope: !6599, inlinedAt: !9852)
!9987 = !DILocation(line: 375, column: 6, scope: !6432, inlinedAt: !9852)
!9988 = !DILocation(line: 375, column: 27, scope: !6599, inlinedAt: !9852)
!9989 = !DILocation(line: 376, column: 6, scope: !6604, inlinedAt: !9852)
!9990 = !DILocation(line: 376, column: 11, scope: !6604, inlinedAt: !9852)
!9991 = !DILocation(line: 376, column: 6, scope: !6432, inlinedAt: !9852)
!9992 = !DILocation(line: 376, column: 32, scope: !6604, inlinedAt: !9852)
!9993 = !DILocation(line: 377, column: 6, scope: !6609, inlinedAt: !9852)
!9994 = !DILocation(line: 377, column: 11, scope: !6609, inlinedAt: !9852)
!9995 = !DILocation(line: 377, column: 6, scope: !6432, inlinedAt: !9852)
!9996 = !DILocation(line: 377, column: 32, scope: !6609, inlinedAt: !9852)
!9997 = !DILocation(line: 378, column: 6, scope: !6614, inlinedAt: !9852)
!9998 = !DILocation(line: 378, column: 11, scope: !6614, inlinedAt: !9852)
!9999 = !DILocation(line: 378, column: 6, scope: !6432, inlinedAt: !9852)
!10000 = !DILocation(line: 378, column: 32, scope: !6614, inlinedAt: !9852)
!10001 = !DILocation(line: 379, column: 6, scope: !6619, inlinedAt: !9852)
!10002 = !DILocation(line: 379, column: 11, scope: !6619, inlinedAt: !9852)
!10003 = !DILocation(line: 379, column: 6, scope: !6432, inlinedAt: !9852)
!10004 = !DILocation(line: 379, column: 33, scope: !6619, inlinedAt: !9852)
!10005 = !DILocation(line: 380, column: 6, scope: !6624, inlinedAt: !9852)
!10006 = !DILocation(line: 380, column: 11, scope: !6624, inlinedAt: !9852)
!10007 = !DILocation(line: 380, column: 6, scope: !6432, inlinedAt: !9852)
!10008 = !DILocation(line: 380, column: 33, scope: !6624, inlinedAt: !9852)
!10009 = !DILocation(line: 381, column: 6, scope: !6629, inlinedAt: !9852)
!10010 = !DILocation(line: 381, column: 11, scope: !6629, inlinedAt: !9852)
!10011 = !DILocation(line: 381, column: 6, scope: !6432, inlinedAt: !9852)
!10012 = !DILocation(line: 381, column: 33, scope: !6629, inlinedAt: !9852)
!10013 = !DILocation(line: 382, column: 2, scope: !6634, inlinedAt: !9852)
!10014 = !DILocation(line: 382, column: 2, scope: !6638, inlinedAt: !9852)
!10015 = !DILocation(line: 382, column: 2, scope: !6639, inlinedAt: !9852)
!10016 = !DILocation(line: 386, column: 1, scope: !6432, inlinedAt: !9852)
!10017 = !DILocation(line: 547, column: 9, scope: !6415, inlinedAt: !9843)
!10018 = !DILocation(line: 549, column: 8, scope: !6645, inlinedAt: !9843)
!10019 = !DILocation(line: 549, column: 7, scope: !6415, inlinedAt: !9843)
!10020 = !DILocation(line: 550, column: 4, scope: !6645, inlinedAt: !9843)
!10021 = !DILocation(line: 553, column: 33, scope: !6415, inlinedAt: !9843)
!10022 = !DILocation(line: 325, column: 6, scope: !6650, inlinedAt: !9850)
!10023 = !DILocation(line: 325, column: 6, scope: !6426, inlinedAt: !9850)
!10024 = !DILocation(line: 326, column: 3, scope: !6650, inlinedAt: !9850)
!10025 = !DILocation(line: 332, column: 9, scope: !6426, inlinedAt: !9850)
!10026 = !DILocation(line: 332, column: 15, scope: !6426, inlinedAt: !9850)
!10027 = !DILocation(line: 332, column: 2, scope: !6426, inlinedAt: !9850)
!10028 = !DILocation(line: 336, column: 1, scope: !6426, inlinedAt: !9850)
!10029 = !DILocation(line: 553, column: 5, scope: !6415, inlinedAt: !9843)
!10030 = !DILocation(line: 553, column: 41, scope: !6415, inlinedAt: !9843)
!10031 = !DILocation(line: 554, column: 5, scope: !6415, inlinedAt: !9843)
!10032 = !DILocation(line: 554, column: 12, scope: !6415, inlinedAt: !9843)
!10033 = !DILocation(line: 448, column: 31, scope: !6410, inlinedAt: !9842)
!10034 = !DILocation(line: 448, column: 34, scope: !6410, inlinedAt: !9842)
!10035 = !DILocation(line: 448, column: 14, scope: !6410, inlinedAt: !9842)
!10036 = !DILocation(line: 450, column: 22, scope: !6410, inlinedAt: !9842)
!10037 = !DILocation(line: 450, column: 25, scope: !6410, inlinedAt: !9842)
!10038 = !DILocation(line: 450, column: 30, scope: !6410, inlinedAt: !9842)
!10039 = !DILocation(line: 450, column: 36, scope: !6410, inlinedAt: !9842)
!10040 = !DILocation(line: 450, column: 8, scope: !6410, inlinedAt: !9842)
!10041 = !DILocation(line: 450, column: 6, scope: !6410, inlinedAt: !9842)
!10042 = !DILocation(line: 451, column: 9, scope: !6410, inlinedAt: !9842)
!10043 = !DILocation(line: 552, column: 3, scope: !6415, inlinedAt: !9843)
!10044 = !DILocation(line: 557, column: 19, scope: !6417, inlinedAt: !9843)
!10045 = !DILocation(line: 557, column: 25, scope: !6417, inlinedAt: !9843)
!10046 = !DILocation(line: 557, column: 9, scope: !6417, inlinedAt: !9843)
!10047 = !DILocation(line: 557, column: 2, scope: !6417, inlinedAt: !9843)
!10048 = !DILocation(line: 558, column: 1, scope: !6417, inlinedAt: !9843)
!10049 = !DILocation(line: 4565, column: 8, scope: !9844)
!10050 = !DILocation(line: 4565, column: 13, scope: !9844)
!10051 = !DILocation(line: 4566, column: 13, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !9844, file: !3, line: 4566, column: 7)
!10053 = !DILocation(line: 4566, column: 8, scope: !10052)
!10054 = !DILocation(line: 4566, column: 7, scope: !9844)
!10055 = !DILocation(line: 4567, column: 4, scope: !10052)
!10056 = !DILocation(line: 4568, column: 2, scope: !9844)
!10057 = !DILocation(line: 4569, column: 8, scope: !9845)
!10058 = !DILocation(line: 4569, column: 13, scope: !9845)
!10059 = !DILocation(line: 4571, column: 2, scope: !9829)
!10060 = !DILocation(line: 4572, column: 6, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4572, column: 6)
!10062 = !DILocation(line: 4572, column: 10, scope: !10061)
!10063 = !DILocation(line: 4572, column: 18, scope: !10061)
!10064 = !DILocation(line: 4572, column: 6, scope: !9829)
!10065 = !DILocation(line: 4573, column: 6, scope: !10061)
!10066 = !DILocation(line: 4573, column: 3, scope: !10061)
!10067 = !DILocation(line: 4574, column: 11, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 4574, column: 11)
!10069 = !DILocation(line: 4574, column: 15, scope: !10068)
!10070 = !DILocation(line: 4574, column: 22, scope: !10068)
!10071 = !DILocation(line: 4574, column: 11, scope: !10061)
!10072 = !DILocation(line: 4575, column: 8, scope: !10068)
!10073 = !DILocation(line: 4575, column: 12, scope: !10068)
!10074 = !DILocation(line: 4575, column: 19, scope: !10068)
!10075 = !DILocation(line: 4575, column: 32, scope: !10068)
!10076 = !DILocation(line: 4575, column: 6, scope: !10068)
!10077 = !DILocation(line: 4575, column: 3, scope: !10068)
!10078 = !DILocation(line: 4577, column: 6, scope: !10068)
!10079 = !DILocation(line: 4578, column: 2, scope: !9829)
!10080 = !DILocation(line: 4580, column: 6, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4580, column: 6)
!10082 = !DILocation(line: 4580, column: 6, scope: !9829)
!10083 = !DILocation(line: 4581, column: 3, scope: !10081)
!10084 = !DILocation(line: 4583, column: 12, scope: !9829)
!10085 = !DILocation(line: 4583, column: 17, scope: !9829)
!10086 = !DILocation(line: 4583, column: 20, scope: !9829)
!10087 = !DILocation(line: 4583, column: 23, scope: !9829)
!10088 = !DILocation(line: 4583, column: 35, scope: !9829)
!10089 = !DILocation(line: 4583, column: 28, scope: !9829)
!10090 = !DILocation(line: 4583, column: 4, scope: !9829)
!10091 = !DILocation(line: 4585, column: 6, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4585, column: 6)
!10093 = !DILocation(line: 4585, column: 10, scope: !10092)
!10094 = !DILocation(line: 4585, column: 15, scope: !10092)
!10095 = !DILocation(line: 4585, column: 23, scope: !10092)
!10096 = !DILocation(line: 4585, column: 35, scope: !10092)
!10097 = !DILocation(line: 4585, column: 39, scope: !10092)
!10098 = !DILocation(line: 4585, column: 33, scope: !10092)
!10099 = !DILocation(line: 4585, column: 6, scope: !9829)
!10100 = !DILocation(line: 4586, column: 6, scope: !10092)
!10101 = !DILocation(line: 4586, column: 3, scope: !10092)
!10102 = !DILocation(line: 4587, column: 8, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4587, column: 6)
!10104 = !DILocation(line: 4587, column: 12, scope: !10103)
!10105 = !DILocation(line: 4587, column: 18, scope: !10103)
!10106 = !DILocation(line: 4587, column: 6, scope: !9829)
!10107 = !DILocation(line: 4588, column: 12, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 4588, column: 7)
!10109 = distinct !DILexicalBlock(scope: !10103, file: !3, line: 4587, column: 39)
!10110 = !DILocation(line: 4588, column: 20, scope: !10108)
!10111 = !DILocation(line: 4588, column: 24, scope: !10108)
!10112 = !DILocation(line: 4588, column: 18, scope: !10108)
!10113 = !DILocation(line: 4588, column: 30, scope: !10108)
!10114 = !DILocation(line: 4588, column: 38, scope: !10108)
!10115 = !DILocation(line: 4588, column: 47, scope: !10108)
!10116 = !DILocation(line: 4588, column: 51, scope: !10108)
!10117 = !DILocation(line: 4588, column: 45, scope: !10108)
!10118 = !DILocation(line: 4588, column: 7, scope: !10109)
!10119 = !DILocation(line: 4589, column: 7, scope: !10108)
!10120 = !DILocation(line: 4589, column: 4, scope: !10108)
!10121 = !DILocation(line: 4590, column: 2, scope: !10109)
!10122 = !DILocation(line: 4591, column: 12, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 4591, column: 7)
!10124 = distinct !DILexicalBlock(scope: !10103, file: !3, line: 4590, column: 9)
!10125 = !DILocation(line: 4591, column: 18, scope: !10123)
!10126 = !DILocation(line: 4591, column: 7, scope: !10124)
!10127 = !DILocation(line: 4592, column: 7, scope: !10123)
!10128 = !DILocation(line: 4592, column: 4, scope: !10123)
!10129 = !DILocation(line: 4593, column: 13, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 4593, column: 12)
!10131 = !DILocation(line: 4593, column: 17, scope: !10130)
!10132 = !DILocation(line: 4593, column: 24, scope: !10130)
!10133 = !DILocation(line: 4593, column: 32, scope: !10130)
!10134 = !DILocation(line: 4593, column: 41, scope: !10130)
!10135 = !DILocation(line: 4593, column: 45, scope: !10130)
!10136 = !DILocation(line: 4593, column: 39, scope: !10130)
!10137 = !DILocation(line: 4593, column: 53, scope: !10130)
!10138 = !DILocation(line: 4594, column: 10, scope: !10130)
!10139 = !DILocation(line: 4594, column: 17, scope: !10130)
!10140 = !DILocation(line: 4593, column: 12, scope: !10123)
!10141 = !DILocation(line: 4595, column: 7, scope: !10130)
!10142 = !DILocation(line: 4595, column: 4, scope: !10130)
!10143 = !DILocation(line: 4597, column: 6, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 4597, column: 6)
!10145 = !DILocation(line: 4597, column: 6, scope: !9829)
!10146 = !DILocation(line: 4598, column: 3, scope: !10144)
!10147 = !DILocation(line: 4600, column: 20, scope: !9829)
!10148 = !DILocation(line: 4600, column: 2, scope: !9829)
!10149 = !DILocation(line: 4600, column: 6, scope: !9829)
!10150 = !DILocation(line: 4600, column: 13, scope: !9829)
!10151 = !DILocation(line: 4601, column: 19, scope: !9829)
!10152 = !DILocation(line: 4601, column: 2, scope: !9829)
!10153 = !DILocation(line: 4601, column: 6, scope: !9829)
!10154 = !DILocation(line: 4601, column: 12, scope: !9829)
!10155 = !DILocation(line: 4602, column: 23, scope: !9829)
!10156 = !DILocation(line: 4602, column: 2, scope: !9829)
!10157 = !DILocation(line: 4602, column: 6, scope: !9829)
!10158 = !DILocation(line: 4602, column: 16, scope: !9829)
!10159 = !DILocation(line: 4604, column: 6, scope: !9833)
!10160 = !DILocation(line: 4604, column: 10, scope: !9833)
!10161 = !DILocation(line: 4604, column: 15, scope: !9833)
!10162 = !DILocation(line: 4604, column: 31, scope: !9833)
!10163 = !DILocation(line: 4604, column: 35, scope: !9833)
!10164 = !DILocation(line: 4604, column: 46, scope: !9833)
!10165 = !DILocation(line: 4604, column: 52, scope: !9833)
!10166 = !DILocation(line: 199, column: 6, scope: !9481, inlinedAt: !9832)
!10167 = !DILocation(line: 141, column: 6, scope: !9338, inlinedAt: !9831)
!10168 = !DILocation(line: 0, scope: !9338, inlinedAt: !9831)
!10169 = !DILocation(line: 141, column: 6, scope: !9295, inlinedAt: !9831)
!10170 = !DILocation(line: 142, column: 29, scope: !9342, inlinedAt: !9831)
!10171 = !DILocation(line: 142, column: 8, scope: !9342, inlinedAt: !9831)
!10172 = !DILocation(line: 142, column: 7, scope: !9343, inlinedAt: !9831)
!10173 = !DILocation(line: 143, column: 18, scope: !9342, inlinedAt: !9831)
!10174 = !DILocation(line: 143, column: 22, scope: !9342, inlinedAt: !9831)
!10175 = !DILocation(line: 143, column: 4, scope: !9342, inlinedAt: !9831)
!10176 = !DILocation(line: 144, column: 12, scope: !9350, inlinedAt: !9831)
!10177 = !DILocation(line: 144, column: 12, scope: !9342, inlinedAt: !9831)
!10178 = !DILocation(line: 145, column: 4, scope: !9350, inlinedAt: !9831)
!10179 = !DILocation(line: 147, column: 4, scope: !9350, inlinedAt: !9831)
!10180 = !DILocation(line: 148, column: 3, scope: !9343, inlinedAt: !9831)
!10181 = !DILocation(line: 150, column: 6, scope: !9356, inlinedAt: !9831)
!10182 = !DILocation(line: 150, column: 6, scope: !9358, inlinedAt: !9831)
!10183 = !DILocation(line: 150, column: 6, scope: !9362, inlinedAt: !9831)
!10184 = !DILocation(line: 150, column: 6, scope: !9359, inlinedAt: !9831)
!10185 = !DILocation(line: 150, column: 6, scope: !9316, inlinedAt: !9831)
!10186 = !DILocation(line: 150, column: 6, scope: !9295, inlinedAt: !9831)
!10187 = !DILocation(line: 151, column: 3, scope: !9316, inlinedAt: !9831)
!10188 = !DILocation(line: 152, column: 20, scope: !9295, inlinedAt: !9831)
!10189 = !DILocation(line: 152, column: 26, scope: !9295, inlinedAt: !9831)
!10190 = !DILocation(line: 152, column: 33, scope: !9295, inlinedAt: !9831)
!10191 = !DILocation(line: 152, column: 2, scope: !9295, inlinedAt: !9831)
!10192 = !DILocation(line: 153, column: 2, scope: !9295, inlinedAt: !9831)
!10193 = !DILocation(line: 154, column: 1, scope: !9295, inlinedAt: !9831)
!10194 = !DILocation(line: 199, column: 6, scope: !9482, inlinedAt: !9832)
!10195 = !DILocation(line: 200, column: 21, scope: !9481, inlinedAt: !9832)
!10196 = !DILocation(line: 200, column: 25, scope: !9481, inlinedAt: !9832)
!10197 = !DILocation(line: 200, column: 31, scope: !9481, inlinedAt: !9832)
!10198 = !DILocation(line: 200, column: 7, scope: !9481, inlinedAt: !9832)
!10199 = !DILocation(line: 200, column: 5, scope: !9481, inlinedAt: !9832)
!10200 = !DILocation(line: 200, column: 3, scope: !9481, inlinedAt: !9832)
!10201 = !DILocation(line: 201, column: 9, scope: !9482, inlinedAt: !9832)
!10202 = !DILocation(line: 4604, column: 18, scope: !9833)
!10203 = !DILocation(line: 4604, column: 6, scope: !9829)
!10204 = !DILocation(line: 4605, column: 6, scope: !9833)
!10205 = !DILocation(line: 4605, column: 3, scope: !9833)
!10206 = !DILocation(line: 4604, column: 53, scope: !9833)
!10207 = !DILabel(scope: !9829, name: "out", file: !3, line: 4607)
!10208 = !DILocation(line: 4607, column: 1, scope: !9829)
!10209 = !DILocation(line: 4608, column: 13, scope: !9829)
!10210 = !DILocation(line: 4608, column: 2, scope: !9829)
!10211 = !DILocation(line: 4609, column: 9, scope: !9829)
!10212 = !DILocation(line: 4609, column: 2, scope: !9829)
!10213 = !DILocation(line: 4610, column: 1, scope: !9829)
!10214 = distinct !DISubprogram(name: "con_font_default", scope: !3, file: !3, line: 4675, type: !9620, scopeLine: 4676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10215 = !DILocalVariable(name: "vc", arg: 1, scope: !10214, file: !3, line: 4675, type: !220)
!10216 = !DILocation(line: 4675, column: 45, scope: !10214)
!10217 = !DILocalVariable(name: "op", arg: 2, scope: !10214, file: !3, line: 4675, type: !9622)
!10218 = !DILocation(line: 4675, column: 73, scope: !10214)
!10219 = !DILocalVariable(name: "font", scope: !10214, file: !3, line: 4677, type: !4280)
!10220 = !DILocation(line: 4677, column: 22, scope: !10214)
!10221 = !DILocation(line: 4677, column: 29, scope: !10214)
!10222 = !DILocation(line: 4677, column: 39, scope: !10214)
!10223 = !DILocation(line: 4677, column: 43, scope: !10214)
!10224 = !DILocation(line: 4677, column: 60, scope: !10214)
!10225 = !DILocation(line: 4677, column: 64, scope: !10214)
!10226 = !DILocalVariable(name: "name", scope: !10214, file: !3, line: 4678, type: !2786)
!10227 = !DILocation(line: 4678, column: 7, scope: !10214)
!10228 = !DILocalVariable(name: "s", scope: !10214, file: !3, line: 4679, type: !202)
!10229 = !DILocation(line: 4679, column: 8, scope: !10214)
!10230 = !DILocation(line: 4679, column: 12, scope: !10214)
!10231 = !DILocalVariable(name: "rc", scope: !10214, file: !3, line: 4680, type: !215)
!10232 = !DILocation(line: 4680, column: 6, scope: !10214)
!10233 = !DILocation(line: 4683, column: 7, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 4683, column: 6)
!10235 = !DILocation(line: 4683, column: 11, scope: !10234)
!10236 = !DILocation(line: 4683, column: 6, scope: !10214)
!10237 = !DILocation(line: 4684, column: 5, scope: !10234)
!10238 = !DILocation(line: 4684, column: 3, scope: !10234)
!10239 = !DILocation(line: 4685, column: 29, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 4685, column: 11)
!10241 = !DILocation(line: 4685, column: 35, scope: !10240)
!10242 = !DILocation(line: 4685, column: 39, scope: !10240)
!10243 = !DILocation(line: 4685, column: 11, scope: !10240)
!10244 = !DILocation(line: 4685, column: 64, scope: !10240)
!10245 = !DILocation(line: 4685, column: 11, scope: !10234)
!10246 = !DILocation(line: 4686, column: 3, scope: !10240)
!10247 = !DILocation(line: 4688, column: 3, scope: !10240)
!10248 = !DILocation(line: 4688, column: 27, scope: !10240)
!10249 = !DILocation(line: 4690, column: 2, scope: !10214)
!10250 = !DILocation(line: 4691, column: 6, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 4691, column: 6)
!10252 = !DILocation(line: 4691, column: 10, scope: !10251)
!10253 = !DILocation(line: 4691, column: 18, scope: !10251)
!10254 = !DILocation(line: 4691, column: 6, scope: !10214)
!10255 = !DILocation(line: 4692, column: 3, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10251, file: !3, line: 4691, column: 30)
!10257 = !DILocation(line: 4693, column: 3, scope: !10256)
!10258 = !DILocation(line: 4695, column: 6, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 4695, column: 6)
!10260 = !DILocation(line: 4695, column: 10, scope: !10259)
!10261 = !DILocation(line: 4695, column: 17, scope: !10259)
!10262 = !DILocation(line: 4695, column: 6, scope: !10214)
!10263 = !DILocation(line: 4696, column: 8, scope: !10259)
!10264 = !DILocation(line: 4696, column: 12, scope: !10259)
!10265 = !DILocation(line: 4696, column: 19, scope: !10259)
!10266 = !DILocation(line: 4696, column: 36, scope: !10259)
!10267 = !DILocation(line: 4696, column: 47, scope: !10259)
!10268 = !DILocation(line: 4696, column: 6, scope: !10259)
!10269 = !DILocation(line: 4696, column: 3, scope: !10259)
!10270 = !DILocation(line: 4698, column: 6, scope: !10259)
!10271 = !DILocation(line: 4699, column: 2, scope: !10214)
!10272 = !DILocation(line: 4700, column: 7, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 4700, column: 6)
!10274 = !DILocation(line: 4700, column: 6, scope: !10214)
!10275 = !DILocation(line: 4701, column: 20, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 4700, column: 11)
!10277 = !DILocation(line: 4701, column: 3, scope: !10276)
!10278 = !DILocation(line: 4701, column: 7, scope: !10276)
!10279 = !DILocation(line: 4701, column: 13, scope: !10276)
!10280 = !DILocation(line: 4702, column: 21, scope: !10276)
!10281 = !DILocation(line: 4702, column: 3, scope: !10276)
!10282 = !DILocation(line: 4702, column: 7, scope: !10276)
!10283 = !DILocation(line: 4702, column: 14, scope: !10276)
!10284 = !DILocation(line: 4703, column: 2, scope: !10276)
!10285 = !DILocation(line: 4704, column: 9, scope: !10214)
!10286 = !DILocation(line: 4704, column: 2, scope: !10214)
!10287 = !DILocation(line: 4705, column: 1, scope: !10214)
!10288 = distinct !DISubprogram(name: "screen_glyph", scope: !3, file: !3, line: 4728, type: !10289, scopeLine: 4729, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10289 = !DISubroutineType(types: !10290)
!10290 = !{!195, !4322, !215}
!10291 = !DILocalVariable(name: "vc", arg: 1, scope: !10288, file: !3, line: 4728, type: !4322)
!10292 = !DILocation(line: 4728, column: 40, scope: !10288)
!10293 = !DILocalVariable(name: "offset", arg: 2, scope: !10288, file: !3, line: 4728, type: !215)
!10294 = !DILocation(line: 4728, column: 48, scope: !10288)
!10295 = !DILocalVariable(name: "w", scope: !10288, file: !3, line: 4730, type: !195)
!10296 = !DILocation(line: 4730, column: 6, scope: !10288)
!10297 = !DILocation(line: 4730, column: 10, scope: !10288)
!10298 = !DILocalVariable(name: "c", scope: !10288, file: !3, line: 4731, type: !195)
!10299 = !DILocation(line: 4731, column: 6, scope: !10288)
!10300 = !DILocation(line: 4731, column: 10, scope: !10288)
!10301 = !DILocation(line: 4731, column: 12, scope: !10288)
!10302 = !DILocation(line: 4733, column: 6, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10288, file: !3, line: 4733, column: 6)
!10304 = !DILocation(line: 4733, column: 10, scope: !10303)
!10305 = !DILocation(line: 4733, column: 14, scope: !10303)
!10306 = !DILocation(line: 4733, column: 8, scope: !10303)
!10307 = !DILocation(line: 4733, column: 6, scope: !10288)
!10308 = !DILocation(line: 4734, column: 5, scope: !10303)
!10309 = !DILocation(line: 4734, column: 3, scope: !10303)
!10310 = !DILocation(line: 4735, column: 9, scope: !10288)
!10311 = !DILocation(line: 4735, column: 2, scope: !10288)
!10312 = distinct !DISubprogram(name: "screen_glyph_unicode", scope: !3, file: !3, line: 4739, type: !10313, scopeLine: 4740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10313 = !DISubroutineType(types: !10314)
!10314 = !{!505, !4322, !215}
!10315 = !DILocalVariable(name: "vc", arg: 1, scope: !10312, file: !3, line: 4739, type: !4322)
!10316 = !DILocation(line: 4739, column: 48, scope: !10312)
!10317 = !DILocalVariable(name: "n", arg: 2, scope: !10312, file: !3, line: 4739, type: !215)
!10318 = !DILocation(line: 4739, column: 56, scope: !10312)
!10319 = !DILocalVariable(name: "uniscr", scope: !10312, file: !3, line: 4741, type: !4395)
!10320 = !DILocation(line: 4741, column: 21, scope: !10312)
!10321 = !DILocation(line: 4741, column: 30, scope: !10312)
!10322 = !DILocation(line: 4743, column: 6, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 4743, column: 6)
!10324 = !DILocation(line: 4743, column: 6, scope: !10312)
!10325 = !DILocation(line: 4744, column: 10, scope: !10323)
!10326 = !DILocation(line: 4744, column: 18, scope: !10323)
!10327 = !DILocation(line: 4744, column: 24, scope: !10323)
!10328 = !DILocation(line: 4744, column: 28, scope: !10323)
!10329 = !DILocation(line: 4744, column: 32, scope: !10323)
!10330 = !DILocation(line: 4744, column: 26, scope: !10323)
!10331 = !DILocation(line: 4744, column: 41, scope: !10323)
!10332 = !DILocation(line: 4744, column: 45, scope: !10323)
!10333 = !DILocation(line: 4744, column: 49, scope: !10323)
!10334 = !DILocation(line: 4744, column: 43, scope: !10323)
!10335 = !DILocation(line: 4744, column: 3, scope: !10323)
!10336 = !DILocation(line: 4745, column: 27, scope: !10312)
!10337 = !DILocation(line: 4745, column: 44, scope: !10312)
!10338 = !DILocation(line: 4745, column: 48, scope: !10312)
!10339 = !DILocation(line: 4745, column: 50, scope: !10312)
!10340 = !DILocation(line: 4745, column: 31, scope: !10312)
!10341 = !DILocation(line: 4745, column: 9, scope: !10312)
!10342 = !DILocation(line: 4745, column: 2, scope: !10312)
!10343 = !DILocation(line: 4746, column: 1, scope: !10312)
!10344 = distinct !DISubprogram(name: "screen_pos", scope: !3, file: !3, line: 4750, type: !5181, scopeLine: 4751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10345 = !DILocalVariable(name: "vc", arg: 1, scope: !10344, file: !3, line: 4750, type: !4322)
!10346 = !DILocation(line: 4750, column: 50, scope: !10344)
!10347 = !DILocalVariable(name: "w_offset", arg: 2, scope: !10344, file: !3, line: 4750, type: !215)
!10348 = !DILocation(line: 4750, column: 58, scope: !10344)
!10349 = !DILocalVariable(name: "viewed", arg: 3, scope: !10344, file: !3, line: 4750, type: !578)
!10350 = !DILocation(line: 4750, column: 73, scope: !10344)
!10351 = !DILocation(line: 4752, column: 19, scope: !10344)
!10352 = !DILocation(line: 4752, column: 27, scope: !10344)
!10353 = !DILocation(line: 4752, column: 25, scope: !10344)
!10354 = !DILocation(line: 4752, column: 37, scope: !10344)
!10355 = !DILocation(line: 4752, column: 9, scope: !10344)
!10356 = !DILocation(line: 4752, column: 2, scope: !10344)
!10357 = distinct !DISubprogram(name: "getconsxy", scope: !3, file: !3, line: 4756, type: !10358, scopeLine: 4757, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10358 = !DISubroutineType(types: !10359)
!10359 = !{null, !4322, !4083}
!10360 = !DILocalVariable(name: "vc", arg: 1, scope: !10357, file: !3, line: 4756, type: !4322)
!10361 = !DILocation(line: 4756, column: 38, scope: !10357)
!10362 = !DILocalVariable(name: "xy", arg: 2, scope: !10357, file: !3, line: 4756, type: !4083)
!10363 = !DILocation(line: 4756, column: 56, scope: !10357)
!10364 = !DILocalVariable(name: "__UNIQUE_ID___x292", scope: !10365, file: !3, line: 4759, type: !2913)
!10365 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 4759, column: 10)
!10366 = !DILocation(line: 4759, column: 10, scope: !10365)
!10367 = !DILocalVariable(name: "__UNIQUE_ID___y293", scope: !10365, file: !3, line: 4759, type: !7)
!10368 = !DILocation(line: 4759, column: 10, scope: !10357)
!10369 = !DILocation(line: 4759, column: 2, scope: !10357)
!10370 = !DILocation(line: 4759, column: 8, scope: !10357)
!10371 = !DILocalVariable(name: "__UNIQUE_ID___x294", scope: !10372, file: !3, line: 4760, type: !2913)
!10372 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 4760, column: 10)
!10373 = !DILocation(line: 4760, column: 10, scope: !10372)
!10374 = !DILocalVariable(name: "__UNIQUE_ID___y295", scope: !10372, file: !3, line: 4760, type: !7)
!10375 = !DILocation(line: 4760, column: 10, scope: !10357)
!10376 = !DILocation(line: 4760, column: 2, scope: !10357)
!10377 = !DILocation(line: 4760, column: 8, scope: !10357)
!10378 = !DILocation(line: 4761, column: 1, scope: !10357)
!10379 = distinct !DISubprogram(name: "putconsxy", scope: !3, file: !3, line: 4763, type: !10380, scopeLine: 4764, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10380 = !DISubroutineType(types: !10381)
!10381 = !{null, !220, !10382}
!10382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4083)
!10383 = !DILocalVariable(name: "vc", arg: 1, scope: !10379, file: !3, line: 4763, type: !220)
!10384 = !DILocation(line: 4763, column: 32, scope: !10379)
!10385 = !DILocalVariable(name: "xy", arg: 2, scope: !10379, file: !3, line: 4763, type: !10382)
!10386 = !DILocation(line: 4763, column: 50, scope: !10379)
!10387 = !DILocation(line: 4765, column: 14, scope: !10379)
!10388 = !DILocation(line: 4765, column: 2, scope: !10379)
!10389 = !DILocation(line: 4766, column: 9, scope: !10379)
!10390 = !DILocation(line: 4766, column: 13, scope: !10379)
!10391 = !DILocation(line: 4766, column: 20, scope: !10379)
!10392 = !DILocation(line: 4766, column: 2, scope: !10379)
!10393 = !DILocation(line: 4767, column: 13, scope: !10379)
!10394 = !DILocation(line: 4767, column: 2, scope: !10379)
!10395 = !DILocation(line: 4768, column: 1, scope: !10379)
!10396 = distinct !DISubprogram(name: "gotoxy", scope: !3, file: !3, line: 1435, type: !6705, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10397 = !DILocalVariable(name: "vc", arg: 1, scope: !10396, file: !3, line: 1435, type: !220)
!10398 = !DILocation(line: 1435, column: 36, scope: !10396)
!10399 = !DILocalVariable(name: "new_x", arg: 2, scope: !10396, file: !3, line: 1435, type: !215)
!10400 = !DILocation(line: 1435, column: 44, scope: !10396)
!10401 = !DILocalVariable(name: "new_y", arg: 3, scope: !10396, file: !3, line: 1435, type: !215)
!10402 = !DILocation(line: 1435, column: 55, scope: !10396)
!10403 = !DILocalVariable(name: "min_y", scope: !10396, file: !3, line: 1437, type: !215)
!10404 = !DILocation(line: 1437, column: 6, scope: !10396)
!10405 = !DILocalVariable(name: "max_y", scope: !10396, file: !3, line: 1437, type: !215)
!10406 = !DILocation(line: 1437, column: 13, scope: !10396)
!10407 = !DILocation(line: 1439, column: 6, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10396, file: !3, line: 1439, column: 6)
!10409 = !DILocation(line: 1439, column: 12, scope: !10408)
!10410 = !DILocation(line: 1439, column: 6, scope: !10396)
!10411 = !DILocation(line: 1440, column: 3, scope: !10408)
!10412 = !DILocation(line: 1440, column: 7, scope: !10408)
!10413 = !DILocation(line: 1440, column: 13, scope: !10408)
!10414 = !DILocation(line: 1440, column: 15, scope: !10408)
!10415 = !DILocation(line: 1442, column: 7, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 1442, column: 7)
!10417 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 1441, column: 7)
!10418 = !DILocation(line: 1442, column: 16, scope: !10416)
!10419 = !DILocation(line: 1442, column: 20, scope: !10416)
!10420 = !DILocation(line: 1442, column: 13, scope: !10416)
!10421 = !DILocation(line: 1442, column: 7, scope: !10417)
!10422 = !DILocation(line: 1443, column: 18, scope: !10416)
!10423 = !DILocation(line: 1443, column: 22, scope: !10416)
!10424 = !DILocation(line: 1443, column: 30, scope: !10416)
!10425 = !DILocation(line: 1443, column: 4, scope: !10416)
!10426 = !DILocation(line: 1443, column: 8, scope: !10416)
!10427 = !DILocation(line: 1443, column: 14, scope: !10416)
!10428 = !DILocation(line: 1443, column: 16, scope: !10416)
!10429 = !DILocation(line: 1445, column: 18, scope: !10416)
!10430 = !DILocation(line: 1445, column: 4, scope: !10416)
!10431 = !DILocation(line: 1445, column: 8, scope: !10416)
!10432 = !DILocation(line: 1445, column: 14, scope: !10416)
!10433 = !DILocation(line: 1445, column: 16, scope: !10416)
!10434 = !DILocation(line: 1448, column: 7, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10396, file: !3, line: 1448, column: 7)
!10436 = !DILocation(line: 1448, column: 11, scope: !10435)
!10437 = !DILocation(line: 1448, column: 7, scope: !10396)
!10438 = !DILocation(line: 1449, column: 11, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 1448, column: 21)
!10440 = !DILocation(line: 1449, column: 15, scope: !10439)
!10441 = !DILocation(line: 1449, column: 9, scope: !10439)
!10442 = !DILocation(line: 1450, column: 11, scope: !10439)
!10443 = !DILocation(line: 1450, column: 15, scope: !10439)
!10444 = !DILocation(line: 1450, column: 9, scope: !10439)
!10445 = !DILocation(line: 1451, column: 2, scope: !10439)
!10446 = !DILocation(line: 1452, column: 9, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 1451, column: 9)
!10448 = !DILocation(line: 1453, column: 11, scope: !10447)
!10449 = !DILocation(line: 1453, column: 15, scope: !10447)
!10450 = !DILocation(line: 1453, column: 9, scope: !10447)
!10451 = !DILocation(line: 1455, column: 6, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10396, file: !3, line: 1455, column: 6)
!10453 = !DILocation(line: 1455, column: 14, scope: !10452)
!10454 = !DILocation(line: 1455, column: 12, scope: !10452)
!10455 = !DILocation(line: 1455, column: 6, scope: !10396)
!10456 = !DILocation(line: 1456, column: 17, scope: !10452)
!10457 = !DILocation(line: 1456, column: 3, scope: !10452)
!10458 = !DILocation(line: 1456, column: 7, scope: !10452)
!10459 = !DILocation(line: 1456, column: 13, scope: !10452)
!10460 = !DILocation(line: 1456, column: 15, scope: !10452)
!10461 = !DILocation(line: 1457, column: 11, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 1457, column: 11)
!10463 = !DILocation(line: 1457, column: 20, scope: !10462)
!10464 = !DILocation(line: 1457, column: 17, scope: !10462)
!10465 = !DILocation(line: 1457, column: 11, scope: !10452)
!10466 = !DILocation(line: 1458, column: 17, scope: !10462)
!10467 = !DILocation(line: 1458, column: 23, scope: !10462)
!10468 = !DILocation(line: 1458, column: 3, scope: !10462)
!10469 = !DILocation(line: 1458, column: 7, scope: !10462)
!10470 = !DILocation(line: 1458, column: 13, scope: !10462)
!10471 = !DILocation(line: 1458, column: 15, scope: !10462)
!10472 = !DILocation(line: 1460, column: 17, scope: !10462)
!10473 = !DILocation(line: 1460, column: 3, scope: !10462)
!10474 = !DILocation(line: 1460, column: 7, scope: !10462)
!10475 = !DILocation(line: 1460, column: 13, scope: !10462)
!10476 = !DILocation(line: 1460, column: 15, scope: !10462)
!10477 = !DILocation(line: 1461, column: 15, scope: !10396)
!10478 = !DILocation(line: 1461, column: 19, scope: !10396)
!10479 = !DILocation(line: 1461, column: 31, scope: !10396)
!10480 = !DILocation(line: 1461, column: 35, scope: !10396)
!10481 = !DILocation(line: 1461, column: 41, scope: !10396)
!10482 = !DILocation(line: 1461, column: 45, scope: !10396)
!10483 = !DILocation(line: 1461, column: 49, scope: !10396)
!10484 = !DILocation(line: 1461, column: 43, scope: !10396)
!10485 = !DILocation(line: 1461, column: 29, scope: !10396)
!10486 = !DILocation(line: 1462, column: 4, scope: !10396)
!10487 = !DILocation(line: 1462, column: 8, scope: !10396)
!10488 = !DILocation(line: 1462, column: 14, scope: !10396)
!10489 = !DILocation(line: 1462, column: 16, scope: !10396)
!10490 = !DILocation(line: 1462, column: 3, scope: !10396)
!10491 = !DILocation(line: 1461, column: 61, scope: !10396)
!10492 = !DILocation(line: 1461, column: 2, scope: !10396)
!10493 = !DILocation(line: 1461, column: 6, scope: !10396)
!10494 = !DILocation(line: 1461, column: 13, scope: !10396)
!10495 = !DILocation(line: 1463, column: 2, scope: !10396)
!10496 = !DILocation(line: 1463, column: 6, scope: !10396)
!10497 = !DILocation(line: 1463, column: 19, scope: !10396)
!10498 = !DILocation(line: 1464, column: 1, scope: !10396)
!10499 = distinct !DISubprogram(name: "vcs_scr_readw", scope: !3, file: !3, line: 4770, type: !10500, scopeLine: 4771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10500 = !DISubroutineType(types: !10501)
!10501 = !{!195, !4322, !10502}
!10502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4444, size: 64)
!10503 = !DILocalVariable(name: "vc", arg: 1, scope: !10499, file: !3, line: 4770, type: !4322)
!10504 = !DILocation(line: 4770, column: 41, scope: !10499)
!10505 = !DILocalVariable(name: "org", arg: 2, scope: !10499, file: !3, line: 4770, type: !10502)
!10506 = !DILocation(line: 4770, column: 56, scope: !10499)
!10507 = !DILocation(line: 4772, column: 21, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 4772, column: 6)
!10509 = !DILocation(line: 4772, column: 6, scope: !10508)
!10510 = !DILocation(line: 4772, column: 28, scope: !10508)
!10511 = !DILocation(line: 4772, column: 32, scope: !10508)
!10512 = !DILocation(line: 4772, column: 25, scope: !10508)
!10513 = !DILocation(line: 4772, column: 39, scope: !10508)
!10514 = !DILocation(line: 4772, column: 42, scope: !10508)
!10515 = !DILocation(line: 4772, column: 62, scope: !10508)
!10516 = !DILocation(line: 4772, column: 6, scope: !10499)
!10517 = !DILocation(line: 4773, column: 10, scope: !10508)
!10518 = !DILocation(line: 4773, column: 3, scope: !10508)
!10519 = !DILocation(line: 4774, column: 9, scope: !10499)
!10520 = !DILocation(line: 4774, column: 2, scope: !10499)
!10521 = !DILocation(line: 4775, column: 1, scope: !10499)
!10522 = distinct !DISubprogram(name: "vcs_scr_writew", scope: !3, file: !3, line: 4777, type: !10523, scopeLine: 4778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10523 = !DISubroutineType(types: !10524)
!10524 = !{null, !220, !195, !194}
!10525 = !DILocalVariable(name: "vc", arg: 1, scope: !10522, file: !3, line: 4777, type: !220)
!10526 = !DILocation(line: 4777, column: 37, scope: !10522)
!10527 = !DILocalVariable(name: "val", arg: 2, scope: !10522, file: !3, line: 4777, type: !195)
!10528 = !DILocation(line: 4777, column: 45, scope: !10522)
!10529 = !DILocalVariable(name: "org", arg: 3, scope: !10522, file: !3, line: 4777, type: !194)
!10530 = !DILocation(line: 4777, column: 55, scope: !10522)
!10531 = !DILocation(line: 4779, column: 2, scope: !10522)
!10532 = !DILocation(line: 4780, column: 21, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 4780, column: 6)
!10534 = !DILocation(line: 4780, column: 6, scope: !10533)
!10535 = !DILocation(line: 4780, column: 28, scope: !10533)
!10536 = !DILocation(line: 4780, column: 32, scope: !10533)
!10537 = !DILocation(line: 4780, column: 25, scope: !10533)
!10538 = !DILocation(line: 4780, column: 6, scope: !10522)
!10539 = !DILocation(line: 4781, column: 23, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 4780, column: 40)
!10541 = !DILocation(line: 4782, column: 18, scope: !10540)
!10542 = !DILocation(line: 4782, column: 3, scope: !10540)
!10543 = !DILocation(line: 4783, column: 2, scope: !10540)
!10544 = !DILocation(line: 4784, column: 1, scope: !10522)
!10545 = distinct !DISubprogram(name: "add_softcursor", scope: !3, file: !3, line: 869, type: !4246, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10546 = !DILocalVariable(name: "vc", arg: 1, scope: !10545, file: !3, line: 869, type: !220)
!10547 = !DILocation(line: 869, column: 44, scope: !10545)
!10548 = !DILocalVariable(name: "i", scope: !10545, file: !3, line: 871, type: !215)
!10549 = !DILocation(line: 871, column: 6, scope: !10545)
!10550 = !DILocation(line: 871, column: 10, scope: !10545)
!10551 = !DILocalVariable(name: "type", scope: !10545, file: !3, line: 872, type: !505)
!10552 = !DILocation(line: 872, column: 6, scope: !10545)
!10553 = !DILocation(line: 872, column: 13, scope: !10545)
!10554 = !DILocation(line: 872, column: 17, scope: !10545)
!10555 = !DILocation(line: 874, column: 8, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 874, column: 6)
!10557 = !DILocation(line: 874, column: 13, scope: !10556)
!10558 = !DILocation(line: 874, column: 6, scope: !10545)
!10559 = !DILocation(line: 875, column: 3, scope: !10556)
!10560 = !DILocation(line: 876, column: 6, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 876, column: 6)
!10562 = !DILocation(line: 876, column: 26, scope: !10561)
!10563 = !DILocation(line: 876, column: 6, scope: !10545)
!10564 = !DILocation(line: 877, column: 3, scope: !10561)
!10565 = !DILocation(line: 878, column: 24, scope: !10545)
!10566 = !DILocation(line: 878, column: 22, scope: !10545)
!10567 = !DILocation(line: 879, column: 7, scope: !10545)
!10568 = !DILocation(line: 879, column: 4, scope: !10545)
!10569 = !DILocation(line: 880, column: 7, scope: !10545)
!10570 = !DILocation(line: 880, column: 4, scope: !10545)
!10571 = !DILocation(line: 881, column: 7, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 881, column: 6)
!10573 = !DILocation(line: 881, column: 12, scope: !10572)
!10574 = !DILocation(line: 881, column: 29, scope: !10572)
!10575 = !DILocation(line: 882, column: 5, scope: !10572)
!10576 = !DILocation(line: 882, column: 25, scope: !10572)
!10577 = !DILocation(line: 882, column: 39, scope: !10572)
!10578 = !DILocation(line: 882, column: 41, scope: !10572)
!10579 = !DILocation(line: 882, column: 35, scope: !10572)
!10580 = !DILocation(line: 881, column: 6, scope: !10545)
!10581 = !DILocation(line: 883, column: 5, scope: !10572)
!10582 = !DILocation(line: 883, column: 3, scope: !10572)
!10583 = !DILocation(line: 884, column: 7, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 884, column: 6)
!10585 = !DILocation(line: 884, column: 12, scope: !10584)
!10586 = !DILocation(line: 884, column: 32, scope: !10584)
!10587 = !DILocation(line: 884, column: 36, scope: !10584)
!10588 = !DILocation(line: 884, column: 38, scope: !10584)
!10589 = !DILocation(line: 884, column: 53, scope: !10584)
!10590 = !DILocation(line: 884, column: 55, scope: !10584)
!10591 = !DILocation(line: 884, column: 65, scope: !10584)
!10592 = !DILocation(line: 884, column: 48, scope: !10584)
!10593 = !DILocation(line: 884, column: 6, scope: !10545)
!10594 = !DILocation(line: 885, column: 5, scope: !10584)
!10595 = !DILocation(line: 885, column: 3, scope: !10584)
!10596 = !DILocation(line: 886, column: 2, scope: !10545)
!10597 = !DILocation(line: 887, column: 24, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 887, column: 6)
!10599 = !DILocation(line: 887, column: 6, scope: !10598)
!10600 = !DILocation(line: 887, column: 6, scope: !10545)
!10601 = !DILocation(line: 888, column: 3, scope: !10598)
!10602 = !DILocation(line: 888, column: 7, scope: !10598)
!10603 = !DILocation(line: 888, column: 14, scope: !10598)
!10604 = !DILocation(line: 888, column: 23, scope: !10598)
!10605 = !DILocation(line: 888, column: 27, scope: !10598)
!10606 = !DILocation(line: 888, column: 30, scope: !10598)
!10607 = !DILocation(line: 888, column: 34, scope: !10598)
!10608 = !DILocation(line: 888, column: 40, scope: !10598)
!10609 = !DILocation(line: 888, column: 43, scope: !10598)
!10610 = !DILocation(line: 888, column: 47, scope: !10598)
!10611 = !DILocation(line: 888, column: 53, scope: !10598)
!10612 = !DILocation(line: 889, column: 1, scope: !10545)
!10613 = distinct !DISubprogram(name: "vcs_scr_updated", scope: !3, file: !3, line: 4786, type: !4246, scopeLine: 4787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10614 = !DILocalVariable(name: "vc", arg: 1, scope: !10613, file: !3, line: 4786, type: !220)
!10615 = !DILocation(line: 4786, column: 38, scope: !10613)
!10616 = !DILocation(line: 4788, column: 16, scope: !10613)
!10617 = !DILocation(line: 4788, column: 2, scope: !10613)
!10618 = !DILocation(line: 4789, column: 1, scope: !10613)
!10619 = distinct !DISubprogram(name: "vc_scrolldelta_helper", scope: !3, file: !3, line: 4791, type: !10620, scopeLine: 4793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10620 = !DISubroutineType(types: !10621)
!10621 = !{null, !220, !215, !7, !216, !7}
!10622 = !DILocalVariable(name: "c", arg: 1, scope: !10619, file: !3, line: 4791, type: !220)
!10623 = !DILocation(line: 4791, column: 44, scope: !10619)
!10624 = !DILocalVariable(name: "lines", arg: 2, scope: !10619, file: !3, line: 4791, type: !215)
!10625 = !DILocation(line: 4791, column: 51, scope: !10619)
!10626 = !DILocalVariable(name: "rolled_over", arg: 3, scope: !10619, file: !3, line: 4792, type: !7)
!10627 = !DILocation(line: 4792, column: 16, scope: !10619)
!10628 = !DILocalVariable(name: "base", arg: 4, scope: !10619, file: !3, line: 4792, type: !216)
!10629 = !DILocation(line: 4792, column: 35, scope: !10619)
!10630 = !DILocalVariable(name: "size", arg: 5, scope: !10619, file: !3, line: 4792, type: !7)
!10631 = !DILocation(line: 4792, column: 54, scope: !10619)
!10632 = !DILocalVariable(name: "ubase", scope: !10619, file: !3, line: 4794, type: !193)
!10633 = !DILocation(line: 4794, column: 16, scope: !10619)
!10634 = !DILocation(line: 4794, column: 39, scope: !10619)
!10635 = !DILocation(line: 4794, column: 24, scope: !10619)
!10636 = !DILocalVariable(name: "scr_end", scope: !10619, file: !3, line: 4795, type: !10637)
!10637 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !200, line: 65, baseType: !10638)
!10638 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ptrdiff_t", file: !405, line: 74, baseType: !406)
!10639 = !DILocation(line: 4795, column: 12, scope: !10619)
!10640 = !DILocation(line: 4795, column: 30, scope: !10619)
!10641 = !DILocation(line: 4795, column: 33, scope: !10619)
!10642 = !DILocation(line: 4795, column: 22, scope: !10619)
!10643 = !DILocation(line: 4795, column: 46, scope: !10619)
!10644 = !DILocation(line: 4795, column: 44, scope: !10619)
!10645 = !DILocalVariable(name: "vorigin", scope: !10619, file: !3, line: 4796, type: !10637)
!10646 = !DILocation(line: 4796, column: 12, scope: !10619)
!10647 = !DILocation(line: 4796, column: 30, scope: !10619)
!10648 = !DILocation(line: 4796, column: 33, scope: !10619)
!10649 = !DILocation(line: 4796, column: 22, scope: !10619)
!10650 = !DILocation(line: 4796, column: 53, scope: !10619)
!10651 = !DILocation(line: 4796, column: 51, scope: !10619)
!10652 = !DILocalVariable(name: "origin", scope: !10619, file: !3, line: 4797, type: !10637)
!10653 = !DILocation(line: 4797, column: 12, scope: !10619)
!10654 = !DILocation(line: 4797, column: 29, scope: !10619)
!10655 = !DILocation(line: 4797, column: 32, scope: !10619)
!10656 = !DILocation(line: 4797, column: 21, scope: !10619)
!10657 = !DILocation(line: 4797, column: 44, scope: !10619)
!10658 = !DILocation(line: 4797, column: 42, scope: !10619)
!10659 = !DILocalVariable(name: "margin", scope: !10619, file: !3, line: 4798, type: !215)
!10660 = !DILocation(line: 4798, column: 6, scope: !10619)
!10661 = !DILocation(line: 4798, column: 15, scope: !10619)
!10662 = !DILocation(line: 4798, column: 18, scope: !10619)
!10663 = !DILocation(line: 4798, column: 30, scope: !10619)
!10664 = !DILocalVariable(name: "from", scope: !10619, file: !3, line: 4799, type: !215)
!10665 = !DILocation(line: 4799, column: 6, scope: !10619)
!10666 = !DILocalVariable(name: "wrap", scope: !10619, file: !3, line: 4799, type: !215)
!10667 = !DILocation(line: 4799, column: 12, scope: !10619)
!10668 = !DILocalVariable(name: "from_off", scope: !10619, file: !3, line: 4799, type: !215)
!10669 = !DILocation(line: 4799, column: 18, scope: !10619)
!10670 = !DILocalVariable(name: "avail", scope: !10619, file: !3, line: 4799, type: !215)
!10671 = !DILocation(line: 4799, column: 28, scope: !10619)
!10672 = !DILocation(line: 4802, column: 7, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 4802, column: 6)
!10674 = !DILocation(line: 4802, column: 6, scope: !10619)
!10675 = !DILocation(line: 4803, column: 26, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 4802, column: 14)
!10677 = !DILocation(line: 4803, column: 29, scope: !10676)
!10678 = !DILocation(line: 4803, column: 3, scope: !10676)
!10679 = !DILocation(line: 4803, column: 6, scope: !10676)
!10680 = !DILocation(line: 4803, column: 24, scope: !10676)
!10681 = !DILocation(line: 4804, column: 3, scope: !10676)
!10682 = !DILocation(line: 4808, column: 6, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 4808, column: 6)
!10684 = !DILocation(line: 4808, column: 20, scope: !10683)
!10685 = !DILocation(line: 4808, column: 30, scope: !10683)
!10686 = !DILocation(line: 4808, column: 28, scope: !10683)
!10687 = !DILocation(line: 4808, column: 18, scope: !10683)
!10688 = !DILocation(line: 4808, column: 6, scope: !10619)
!10689 = !DILocation(line: 4809, column: 10, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 4808, column: 38)
!10691 = !DILocation(line: 4809, column: 8, scope: !10690)
!10692 = !DILocation(line: 4810, column: 10, scope: !10690)
!10693 = !DILocation(line: 4810, column: 24, scope: !10690)
!10694 = !DILocation(line: 4810, column: 27, scope: !10690)
!10695 = !DILocation(line: 4810, column: 22, scope: !10690)
!10696 = !DILocation(line: 4810, column: 8, scope: !10690)
!10697 = !DILocation(line: 4811, column: 2, scope: !10690)
!10698 = !DILocation(line: 4812, column: 8, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 4811, column: 9)
!10700 = !DILocation(line: 4813, column: 10, scope: !10699)
!10701 = !DILocation(line: 4813, column: 8, scope: !10699)
!10702 = !DILocation(line: 4816, column: 14, scope: !10619)
!10703 = !DILocation(line: 4816, column: 24, scope: !10619)
!10704 = !DILocation(line: 4816, column: 22, scope: !10619)
!10705 = !DILocation(line: 4816, column: 31, scope: !10619)
!10706 = !DILocation(line: 4816, column: 29, scope: !10619)
!10707 = !DILocation(line: 4816, column: 39, scope: !10619)
!10708 = !DILocation(line: 4816, column: 37, scope: !10619)
!10709 = !DILocation(line: 4816, column: 46, scope: !10619)
!10710 = !DILocation(line: 4816, column: 54, scope: !10619)
!10711 = !DILocation(line: 4816, column: 57, scope: !10619)
!10712 = !DILocation(line: 4816, column: 52, scope: !10619)
!10713 = !DILocation(line: 4816, column: 44, scope: !10619)
!10714 = !DILocation(line: 4816, column: 13, scope: !10619)
!10715 = !DILocation(line: 4816, column: 11, scope: !10619)
!10716 = !DILocation(line: 4817, column: 11, scope: !10619)
!10717 = !DILocation(line: 4817, column: 20, scope: !10619)
!10718 = !DILocation(line: 4817, column: 18, scope: !10619)
!10719 = !DILocation(line: 4817, column: 27, scope: !10619)
!10720 = !DILocation(line: 4817, column: 25, scope: !10619)
!10721 = !DILocation(line: 4817, column: 35, scope: !10619)
!10722 = !DILocation(line: 4817, column: 33, scope: !10619)
!10723 = !DILocation(line: 4817, column: 10, scope: !10619)
!10724 = !DILocation(line: 4817, column: 8, scope: !10619)
!10725 = !DILocation(line: 4820, column: 6, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 4820, column: 6)
!10727 = !DILocation(line: 4820, column: 18, scope: !10726)
!10728 = !DILocation(line: 4820, column: 16, scope: !10726)
!10729 = !DILocation(line: 4820, column: 12, scope: !10726)
!10730 = !DILocation(line: 4820, column: 6, scope: !10619)
!10731 = !DILocation(line: 4821, column: 10, scope: !10726)
!10732 = !DILocation(line: 4821, column: 3, scope: !10726)
!10733 = !DILocation(line: 4822, column: 6, scope: !10734)
!10734 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 4822, column: 6)
!10735 = !DILocation(line: 4822, column: 17, scope: !10734)
!10736 = !DILocation(line: 4822, column: 15, scope: !10734)
!10737 = !DILocation(line: 4822, column: 6, scope: !10619)
!10738 = !DILocation(line: 4823, column: 12, scope: !10734)
!10739 = !DILocation(line: 4823, column: 3, scope: !10734)
!10740 = !DILocation(line: 4824, column: 6, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 4824, column: 6)
!10742 = !DILocation(line: 4824, column: 17, scope: !10741)
!10743 = !DILocation(line: 4824, column: 25, scope: !10741)
!10744 = !DILocation(line: 4824, column: 23, scope: !10741)
!10745 = !DILocation(line: 4824, column: 15, scope: !10741)
!10746 = !DILocation(line: 4824, column: 6, scope: !10619)
!10747 = !DILocation(line: 4825, column: 14, scope: !10741)
!10748 = !DILocation(line: 4825, column: 12, scope: !10741)
!10749 = !DILocation(line: 4825, column: 3, scope: !10741)
!10750 = !DILocation(line: 4827, column: 25, scope: !10619)
!10751 = !DILocation(line: 4827, column: 34, scope: !10619)
!10752 = !DILocation(line: 4827, column: 41, scope: !10619)
!10753 = !DILocation(line: 4827, column: 39, scope: !10619)
!10754 = !DILocation(line: 4827, column: 53, scope: !10619)
!10755 = !DILocation(line: 4827, column: 51, scope: !10619)
!10756 = !DILocation(line: 4827, column: 33, scope: !10619)
!10757 = !DILocation(line: 4827, column: 31, scope: !10619)
!10758 = !DILocation(line: 4827, column: 2, scope: !10619)
!10759 = !DILocation(line: 4827, column: 5, scope: !10619)
!10760 = !DILocation(line: 4827, column: 23, scope: !10619)
!10761 = !DILocation(line: 4828, column: 1, scope: !10619)
!10762 = distinct !DISubprogram(name: "queue_work", scope: !111, file: !111, line: 504, type: !10763, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10763 = !DISubroutineType(types: !10764)
!10764 = !{!578, !2879, !277}
!10765 = !DILocalVariable(name: "wq", arg: 1, scope: !10762, file: !111, line: 504, type: !2879)
!10766 = !DILocation(line: 504, column: 56, scope: !10762)
!10767 = !DILocalVariable(name: "work", arg: 2, scope: !10762, file: !111, line: 505, type: !277)
!10768 = !DILocation(line: 505, column: 30, scope: !10762)
!10769 = !DILocation(line: 507, column: 41, scope: !10762)
!10770 = !DILocation(line: 507, column: 45, scope: !10762)
!10771 = !DILocation(line: 507, column: 9, scope: !10762)
!10772 = !DILocation(line: 507, column: 2, scope: !10762)
!10773 = distinct !DISubprogram(name: "console_callback", scope: !3, file: !3, line: 2938, type: !275, scopeLine: 2939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10774 = !DILocalVariable(name: "ignored", arg: 1, scope: !10773, file: !3, line: 2938, type: !277)
!10775 = !DILocation(line: 2938, column: 50, scope: !10773)
!10776 = !DILocation(line: 2940, column: 2, scope: !10773)
!10777 = !DILocation(line: 2942, column: 6, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2942, column: 6)
!10779 = !DILocation(line: 2942, column: 19, scope: !10778)
!10780 = !DILocation(line: 2942, column: 6, scope: !10773)
!10781 = !DILocation(line: 2943, column: 7, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 2943, column: 7)
!10783 = distinct !DILexicalBlock(scope: !10778, file: !3, line: 2942, column: 25)
!10784 = !DILocation(line: 2943, column: 23, scope: !10782)
!10785 = !DILocation(line: 2943, column: 20, scope: !10782)
!10786 = !DILocation(line: 2943, column: 34, scope: !10782)
!10787 = !DILocation(line: 2944, column: 25, scope: !10782)
!10788 = !DILocation(line: 2944, column: 7, scope: !10782)
!10789 = !DILocation(line: 2943, column: 7, scope: !10783)
!10790 = !DILocation(line: 2945, column: 24, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 2944, column: 40)
!10792 = !DILocation(line: 2945, column: 16, scope: !10791)
!10793 = !DILocation(line: 2945, column: 36, scope: !10791)
!10794 = !DILocation(line: 2945, column: 4, scope: !10791)
!10795 = !DILocation(line: 2946, column: 27, scope: !10791)
!10796 = !DILocation(line: 2946, column: 19, scope: !10791)
!10797 = !DILocation(line: 2946, column: 41, scope: !10791)
!10798 = !DILocation(line: 2946, column: 4, scope: !10791)
!10799 = !DILocation(line: 2950, column: 3, scope: !10791)
!10800 = !DILocation(line: 2951, column: 16, scope: !10783)
!10801 = !DILocation(line: 2952, column: 2, scope: !10783)
!10802 = !DILocation(line: 2953, column: 6, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2953, column: 6)
!10804 = !DILocation(line: 2953, column: 6, scope: !10773)
!10805 = !DILocation(line: 2954, column: 27, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10803, file: !3, line: 2953, column: 31)
!10807 = !DILocation(line: 2955, column: 3, scope: !10806)
!10808 = !DILocation(line: 2956, column: 2, scope: !10806)
!10809 = !DILocation(line: 2957, column: 6, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2957, column: 6)
!10811 = !DILocation(line: 2957, column: 6, scope: !10773)
!10812 = !DILocalVariable(name: "vc", scope: !10813, file: !3, line: 2958, type: !220)
!10813 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 2957, column: 24)
!10814 = !DILocation(line: 2958, column: 19, scope: !10813)
!10815 = !DILocation(line: 2958, column: 32, scope: !10813)
!10816 = !DILocation(line: 2958, column: 24, scope: !10813)
!10817 = !DILocation(line: 2958, column: 44, scope: !10813)
!10818 = !DILocation(line: 2959, column: 3, scope: !10813)
!10819 = !DILocation(line: 2960, column: 7, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2960, column: 7)
!10821 = !DILocation(line: 2960, column: 11, scope: !10820)
!10822 = !DILocation(line: 2960, column: 19, scope: !10820)
!10823 = !DILocation(line: 2960, column: 30, scope: !10820)
!10824 = !DILocation(line: 2960, column: 33, scope: !10820)
!10825 = !DILocation(line: 2960, column: 37, scope: !10820)
!10826 = !DILocation(line: 2960, column: 44, scope: !10820)
!10827 = !DILocation(line: 2960, column: 7, scope: !10813)
!10828 = !DILocation(line: 2961, column: 4, scope: !10820)
!10829 = !DILocation(line: 2961, column: 8, scope: !10820)
!10830 = !DILocation(line: 2961, column: 15, scope: !10820)
!10831 = !DILocation(line: 2961, column: 31, scope: !10820)
!10832 = !DILocation(line: 2961, column: 35, scope: !10820)
!10833 = !DILocation(line: 2962, column: 20, scope: !10813)
!10834 = !DILocation(line: 2963, column: 2, scope: !10813)
!10835 = !DILocation(line: 2964, column: 6, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 2964, column: 6)
!10837 = !DILocation(line: 2964, column: 6, scope: !10773)
!10838 = !DILocation(line: 2965, column: 3, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 2964, column: 27)
!10840 = !DILocation(line: 2966, column: 23, scope: !10839)
!10841 = !DILocation(line: 2967, column: 2, scope: !10839)
!10842 = !DILocation(line: 2968, column: 24, scope: !10773)
!10843 = !DILocation(line: 2968, column: 16, scope: !10773)
!10844 = !DILocation(line: 2968, column: 36, scope: !10773)
!10845 = !DILocation(line: 2968, column: 2, scope: !10773)
!10846 = !DILocation(line: 2970, column: 2, scope: !10773)
!10847 = !DILocation(line: 2971, column: 1, scope: !10773)
!10848 = distinct !DISubprogram(name: "kasan_check_read", scope: !10849, file: !10849, line: 34, type: !10850, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10849 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10850 = !DISubroutineType(types: !10851)
!10851 = !{!578, !4872, !7}
!10852 = !DILocalVariable(name: "p", arg: 1, scope: !10848, file: !10849, line: 34, type: !4872)
!10853 = !DILocation(line: 34, column: 58, scope: !10848)
!10854 = !DILocalVariable(name: "size", arg: 2, scope: !10848, file: !10849, line: 34, type: !7)
!10855 = !DILocation(line: 34, column: 74, scope: !10848)
!10856 = !DILocation(line: 36, column: 2, scope: !10848)
!10857 = distinct !DISubprogram(name: "kcsan_check_access", scope: !10858, file: !10858, line: 178, type: !10859, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10858 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10859 = !DISubroutineType(types: !10860)
!10860 = !{null, !4872, !417, !215}
!10861 = !DILocalVariable(name: "ptr", arg: 1, scope: !10857, file: !10858, line: 178, type: !4872)
!10862 = !DILocation(line: 178, column: 60, scope: !10857)
!10863 = !DILocalVariable(name: "size", arg: 2, scope: !10857, file: !10858, line: 178, type: !417)
!10864 = !DILocation(line: 178, column: 72, scope: !10857)
!10865 = !DILocalVariable(name: "type", arg: 3, scope: !10857, file: !10858, line: 179, type: !215)
!10866 = !DILocation(line: 179, column: 15, scope: !10857)
!10867 = !DILocation(line: 179, column: 23, scope: !10857)
!10868 = distinct !DISubprogram(name: "hide_softcursor", scope: !3, file: !3, line: 891, type: !4246, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10869 = !DILocalVariable(name: "vc", arg: 1, scope: !10868, file: !3, line: 891, type: !220)
!10870 = !DILocation(line: 891, column: 45, scope: !10868)
!10871 = !DILocation(line: 893, column: 6, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10868, file: !3, line: 893, column: 6)
!10873 = !DILocation(line: 893, column: 26, scope: !10872)
!10874 = !DILocation(line: 893, column: 6, scope: !10868)
!10875 = !DILocation(line: 894, column: 3, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 893, column: 33)
!10877 = !DILocation(line: 895, column: 25, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 895, column: 7)
!10879 = !DILocation(line: 895, column: 7, scope: !10878)
!10880 = !DILocation(line: 895, column: 7, scope: !10876)
!10881 = !DILocation(line: 896, column: 4, scope: !10878)
!10882 = !DILocation(line: 896, column: 8, scope: !10878)
!10883 = !DILocation(line: 896, column: 15, scope: !10878)
!10884 = !DILocation(line: 896, column: 24, scope: !10878)
!10885 = !DILocation(line: 896, column: 28, scope: !10878)
!10886 = !DILocation(line: 897, column: 6, scope: !10878)
!10887 = !DILocation(line: 897, column: 10, scope: !10878)
!10888 = !DILocation(line: 897, column: 16, scope: !10878)
!10889 = !DILocation(line: 897, column: 19, scope: !10878)
!10890 = !DILocation(line: 897, column: 23, scope: !10878)
!10891 = !DILocation(line: 897, column: 29, scope: !10878)
!10892 = !DILocation(line: 898, column: 23, scope: !10876)
!10893 = !DILocation(line: 899, column: 2, scope: !10876)
!10894 = !DILocation(line: 900, column: 1, scope: !10868)
!10895 = distinct !DISubprogram(name: "con_is_fg", scope: !3, file: !3, line: 276, type: !5278, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10896 = !DILocalVariable(name: "vc", arg: 1, scope: !10895, file: !3, line: 276, type: !4322)
!10897 = !DILocation(line: 276, column: 52, scope: !10895)
!10898 = !DILocation(line: 278, column: 9, scope: !10895)
!10899 = !DILocation(line: 278, column: 13, scope: !10895)
!10900 = !DILocation(line: 278, column: 23, scope: !10895)
!10901 = !DILocation(line: 278, column: 20, scope: !10895)
!10902 = !DILocation(line: 278, column: 2, scope: !10895)
!10903 = distinct !DISubprogram(name: "build_attr", scope: !3, file: !3, line: 701, type: !4312, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!10904 = !DILocalVariable(name: "vc", arg: 1, scope: !10903, file: !3, line: 701, type: !220)
!10905 = !DILocation(line: 701, column: 38, scope: !10903)
!10906 = !DILocalVariable(name: "_color", arg: 2, scope: !10903, file: !3, line: 701, type: !1454)
!10907 = !DILocation(line: 701, column: 45, scope: !10903)
!10908 = !DILocalVariable(name: "_intensity", arg: 3, scope: !10903, file: !3, line: 702, type: !93)
!10909 = !DILocation(line: 702, column: 21, scope: !10903)
!10910 = !DILocalVariable(name: "_blink", arg: 4, scope: !10903, file: !3, line: 702, type: !578)
!10911 = !DILocation(line: 702, column: 38, scope: !10903)
!10912 = !DILocalVariable(name: "_underline", arg: 5, scope: !10903, file: !3, line: 702, type: !578)
!10913 = !DILocation(line: 702, column: 51, scope: !10903)
!10914 = !DILocalVariable(name: "_reverse", arg: 6, scope: !10903, file: !3, line: 703, type: !578)
!10915 = !DILocation(line: 703, column: 8, scope: !10903)
!10916 = !DILocalVariable(name: "_italic", arg: 7, scope: !10903, file: !3, line: 703, type: !578)
!10917 = !DILocation(line: 703, column: 23, scope: !10903)
!10918 = !DILocation(line: 705, column: 6, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 705, column: 6)
!10920 = !DILocation(line: 705, column: 10, scope: !10919)
!10921 = !DILocation(line: 705, column: 17, scope: !10919)
!10922 = !DILocation(line: 705, column: 6, scope: !10903)
!10923 = !DILocation(line: 706, column: 10, scope: !10919)
!10924 = !DILocation(line: 706, column: 14, scope: !10919)
!10925 = !DILocation(line: 706, column: 21, scope: !10919)
!10926 = !DILocation(line: 706, column: 36, scope: !10919)
!10927 = !DILocation(line: 706, column: 40, scope: !10919)
!10928 = !DILocation(line: 706, column: 48, scope: !10919)
!10929 = !DILocation(line: 707, column: 10, scope: !10919)
!10930 = !DILocation(line: 707, column: 18, scope: !10919)
!10931 = !DILocation(line: 707, column: 30, scope: !10919)
!10932 = !DILocation(line: 707, column: 40, scope: !10919)
!10933 = !DILocation(line: 706, column: 3, scope: !10919)
!10934 = !DILocalVariable(name: "a", scope: !10935, file: !3, line: 720, type: !1454)
!10935 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 719, column: 2)
!10936 = !DILocation(line: 720, column: 5, scope: !10935)
!10937 = !DILocation(line: 720, column: 9, scope: !10935)
!10938 = !DILocation(line: 721, column: 7, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 721, column: 6)
!10940 = !DILocation(line: 721, column: 11, scope: !10939)
!10941 = !DILocation(line: 721, column: 6, scope: !10935)
!10942 = !DILocation(line: 722, column: 10, scope: !10939)
!10943 = !DILocation(line: 723, column: 11, scope: !10939)
!10944 = !DILocation(line: 723, column: 22, scope: !10939)
!10945 = !DILocation(line: 722, column: 21, scope: !10939)
!10946 = !DILocation(line: 724, column: 11, scope: !10939)
!10947 = !DILocation(line: 724, column: 22, scope: !10939)
!10948 = !DILocation(line: 723, column: 28, scope: !10939)
!10949 = !DILocation(line: 725, column: 11, scope: !10939)
!10950 = !DILocation(line: 725, column: 22, scope: !10939)
!10951 = !DILocation(line: 724, column: 28, scope: !10939)
!10952 = !DILocation(line: 726, column: 11, scope: !10939)
!10953 = !DILocation(line: 726, column: 22, scope: !10939)
!10954 = !DILocation(line: 725, column: 28, scope: !10939)
!10955 = !DILocation(line: 722, column: 3, scope: !10939)
!10956 = !DILocation(line: 727, column: 6, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 727, column: 6)
!10958 = !DILocation(line: 727, column: 6, scope: !10935)
!10959 = !DILocation(line: 728, column: 8, scope: !10957)
!10960 = !DILocation(line: 728, column: 10, scope: !10957)
!10961 = !DILocation(line: 728, column: 20, scope: !10957)
!10962 = !DILocation(line: 728, column: 24, scope: !10957)
!10963 = !DILocation(line: 728, column: 18, scope: !10957)
!10964 = !DILocation(line: 728, column: 7, scope: !10957)
!10965 = !DILocation(line: 728, column: 5, scope: !10957)
!10966 = !DILocation(line: 728, column: 3, scope: !10957)
!10967 = !DILocation(line: 729, column: 11, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 729, column: 11)
!10969 = !DILocation(line: 729, column: 11, scope: !10957)
!10970 = !DILocation(line: 730, column: 8, scope: !10968)
!10971 = !DILocation(line: 730, column: 10, scope: !10968)
!10972 = !DILocation(line: 730, column: 20, scope: !10968)
!10973 = !DILocation(line: 730, column: 24, scope: !10968)
!10974 = !DILocation(line: 730, column: 18, scope: !10968)
!10975 = !DILocation(line: 730, column: 7, scope: !10968)
!10976 = !DILocation(line: 730, column: 5, scope: !10968)
!10977 = !DILocation(line: 730, column: 3, scope: !10968)
!10978 = !DILocation(line: 731, column: 11, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10968, file: !3, line: 731, column: 11)
!10980 = !DILocation(line: 731, column: 22, scope: !10979)
!10981 = !DILocation(line: 731, column: 11, scope: !10968)
!10982 = !DILocation(line: 732, column: 8, scope: !10979)
!10983 = !DILocation(line: 732, column: 10, scope: !10979)
!10984 = !DILocation(line: 732, column: 20, scope: !10979)
!10985 = !DILocation(line: 732, column: 24, scope: !10979)
!10986 = !DILocation(line: 732, column: 18, scope: !10979)
!10987 = !DILocation(line: 732, column: 7, scope: !10979)
!10988 = !DILocation(line: 732, column: 5, scope: !10979)
!10989 = !DILocation(line: 732, column: 3, scope: !10979)
!10990 = !DILocation(line: 733, column: 6, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 733, column: 6)
!10992 = !DILocation(line: 733, column: 6, scope: !10935)
!10993 = !DILocation(line: 734, column: 8, scope: !10991)
!10994 = !DILocation(line: 734, column: 10, scope: !10991)
!10995 = !DILocation(line: 734, column: 23, scope: !10991)
!10996 = !DILocation(line: 734, column: 25, scope: !10991)
!10997 = !DILocation(line: 734, column: 34, scope: !10991)
!10998 = !DILocation(line: 734, column: 36, scope: !10991)
!10999 = !DILocation(line: 734, column: 31, scope: !10991)
!11000 = !DILocation(line: 734, column: 43, scope: !10991)
!11001 = !DILocation(line: 734, column: 18, scope: !10991)
!11002 = !DILocation(line: 734, column: 7, scope: !10991)
!11003 = !DILocation(line: 734, column: 5, scope: !10991)
!11004 = !DILocation(line: 734, column: 3, scope: !10991)
!11005 = !DILocation(line: 735, column: 6, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 735, column: 6)
!11007 = !DILocation(line: 735, column: 6, scope: !10935)
!11008 = !DILocation(line: 736, column: 5, scope: !11006)
!11009 = !DILocation(line: 736, column: 3, scope: !11006)
!11010 = !DILocation(line: 737, column: 6, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 737, column: 6)
!11012 = !DILocation(line: 737, column: 17, scope: !11011)
!11013 = !DILocation(line: 737, column: 6, scope: !10935)
!11014 = !DILocation(line: 738, column: 5, scope: !11011)
!11015 = !DILocation(line: 738, column: 3, scope: !11011)
!11016 = !DILocation(line: 739, column: 6, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 739, column: 6)
!11018 = !DILocation(line: 739, column: 10, scope: !11017)
!11019 = !DILocation(line: 739, column: 26, scope: !11017)
!11020 = !DILocation(line: 739, column: 6, scope: !10935)
!11021 = !DILocation(line: 740, column: 5, scope: !11017)
!11022 = !DILocation(line: 740, column: 3, scope: !11017)
!11023 = !DILocation(line: 741, column: 9, scope: !10935)
!11024 = !DILocation(line: 741, column: 2, scope: !10935)
!11025 = !DILocation(line: 743, column: 1, scope: !10903)
!11026 = distinct !DISubprogram(name: "tasklet_schedule", scope: !149, file: !149, line: 681, type: !11027, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11027 = !DISubroutineType(types: !11028)
!11028 = !{null, !11029}
!11029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11030, size: 64)
!11030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !149, line: 609, size: 320, elements: !11031)
!11031 = !{!11032, !11033, !11034, !11035, !11036, !11045}
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11030, file: !149, line: 611, baseType: !11029, size: 64)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11030, file: !149, line: 612, baseType: !193, size: 64, offset: 64)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !11030, file: !149, line: 613, baseType: !301, size: 32, offset: 128)
!11035 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !11030, file: !149, line: 614, baseType: !578, size: 8, offset: 160)
!11036 = !DIDerivedType(tag: DW_TAG_member, scope: !11030, file: !149, line: 615, baseType: !11037, size: 64, offset: 192)
!11037 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11030, file: !149, line: 615, size: 64, elements: !11038)
!11038 = !{!11039, !11043}
!11039 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !11037, file: !149, line: 616, baseType: !11040, size: 64)
!11040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11041, size: 64)
!11041 = !DISubroutineType(types: !11042)
!11042 = !{null, !193}
!11043 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !11037, file: !149, line: 617, baseType: !11044, size: 64)
!11044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11027, size: 64)
!11045 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11030, file: !149, line: 619, baseType: !193, size: 64, offset: 256)
!11046 = !DILocalVariable(name: "t", arg: 1, scope: !11026, file: !149, line: 681, type: !11029)
!11047 = !DILocation(line: 681, column: 60, scope: !11026)
!11048 = !DILocation(line: 683, column: 46, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11026, file: !149, line: 683, column: 6)
!11050 = !DILocation(line: 683, column: 49, scope: !11049)
!11051 = !DILocation(line: 683, column: 7, scope: !11049)
!11052 = !DILocation(line: 683, column: 6, scope: !11026)
!11053 = !DILocation(line: 684, column: 22, scope: !11049)
!11054 = !DILocation(line: 684, column: 3, scope: !11049)
!11055 = !DILocation(line: 685, column: 1, scope: !11026)
!11056 = distinct !DISubprogram(name: "test_and_set_bit", scope: !11057, file: !11057, line: 68, type: !11058, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11057 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!11058 = !DISubroutineType(types: !11059)
!11059 = !{!578, !112, !11060}
!11060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11061, size: 64)
!11061 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !193)
!11062 = !DILocalVariable(name: "nr", arg: 1, scope: !11063, file: !11064, line: 136, type: !112)
!11063 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !11064, file: !11064, line: 136, type: !11058, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11064 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!11065 = !DILocation(line: 136, column: 28, scope: !11063, inlinedAt: !11066)
!11066 = distinct !DILocation(line: 71, column: 9, scope: !11056)
!11067 = !DILocalVariable(name: "addr", arg: 2, scope: !11063, file: !11064, line: 136, type: !11060)
!11068 = !DILocation(line: 136, column: 56, scope: !11063, inlinedAt: !11066)
!11069 = !DILocalVariable(name: "c", scope: !11070, file: !11064, line: 138, type: !578)
!11070 = distinct !DILexicalBlock(scope: !11063, file: !11064, line: 138, column: 9)
!11071 = !DILocation(line: 138, column: 9, scope: !11070, inlinedAt: !11066)
!11072 = !DILocalVariable(name: "v", arg: 1, scope: !11073, file: !4869, line: 99, type: !4872)
!11073 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !4869, file: !4869, line: 99, type: !4870, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11074 = !DILocation(line: 99, column: 79, scope: !11073, inlinedAt: !11075)
!11075 = distinct !DILocation(line: 70, column: 2, scope: !11056)
!11076 = !DILocalVariable(name: "size", arg: 2, scope: !11073, file: !4869, line: 99, type: !417)
!11077 = !DILocation(line: 99, column: 89, scope: !11073, inlinedAt: !11075)
!11078 = !DILocalVariable(name: "nr", arg: 1, scope: !11056, file: !11057, line: 68, type: !112)
!11079 = !DILocation(line: 68, column: 42, scope: !11056)
!11080 = !DILocalVariable(name: "addr", arg: 2, scope: !11056, file: !11057, line: 68, type: !11060)
!11081 = !DILocation(line: 68, column: 70, scope: !11056)
!11082 = !DILocation(line: 70, column: 31, scope: !11056)
!11083 = !DILocation(line: 70, column: 38, scope: !11056)
!11084 = !DILocation(line: 70, column: 36, scope: !11056)
!11085 = !DILocation(line: 101, column: 20, scope: !11073, inlinedAt: !11075)
!11086 = !DILocation(line: 101, column: 23, scope: !11073, inlinedAt: !11075)
!11087 = !DILocation(line: 101, column: 2, scope: !11073, inlinedAt: !11075)
!11088 = !DILocation(line: 102, column: 2, scope: !11073, inlinedAt: !11075)
!11089 = !DILocation(line: 71, column: 31, scope: !11056)
!11090 = !DILocation(line: 71, column: 35, scope: !11056)
!11091 = !{i32 -2147035181, i32 -2147035085}
!11092 = !DILocation(line: 71, column: 2, scope: !11056)
!11093 = distinct !DISubprogram(name: "kasan_check_write", scope: !10849, file: !10849, line: 38, type: !10850, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11094 = !DILocalVariable(name: "p", arg: 1, scope: !11093, file: !10849, line: 38, type: !4872)
!11095 = !DILocation(line: 38, column: 59, scope: !11093)
!11096 = !DILocalVariable(name: "size", arg: 2, scope: !11093, file: !10849, line: 38, type: !7)
!11097 = !DILocation(line: 38, column: 75, scope: !11093)
!11098 = !DILocation(line: 40, column: 2, scope: !11093)
!11099 = distinct !DISubprogram(name: "get_order", scope: !11100, file: !11100, line: 29, type: !11101, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11100 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11101 = !DISubroutineType(types: !11102)
!11102 = !{!215, !193}
!11103 = !DILocalVariable(name: "x", arg: 1, scope: !11104, file: !11064, line: 366, type: !510)
!11104 = distinct !DISubprogram(name: "fls64", scope: !11064, file: !11064, line: 366, type: !11105, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11105 = !DISubroutineType(types: !11106)
!11106 = !{!215, !510}
!11107 = !DILocation(line: 366, column: 40, scope: !11104, inlinedAt: !11108)
!11108 = distinct !DILocation(line: 46, column: 9, scope: !11099)
!11109 = !DILocalVariable(name: "bitpos", scope: !11104, file: !11064, line: 368, type: !215)
!11110 = !DILocation(line: 368, column: 6, scope: !11104, inlinedAt: !11108)
!11111 = !DILocalVariable(name: "size", arg: 1, scope: !11099, file: !11100, line: 29, type: !193)
!11112 = !DILocation(line: 29, column: 63, scope: !11099)
!11113 = !DILocation(line: 31, column: 27, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11099, file: !11100, line: 31, column: 6)
!11115 = !DILocation(line: 31, column: 6, scope: !11114)
!11116 = !DILocation(line: 31, column: 6, scope: !11099)
!11117 = !DILocation(line: 32, column: 8, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11119, file: !11100, line: 32, column: 7)
!11119 = distinct !DILexicalBlock(scope: !11114, file: !11100, line: 31, column: 34)
!11120 = !DILocation(line: 32, column: 7, scope: !11119)
!11121 = !DILocation(line: 33, column: 4, scope: !11118)
!11122 = !DILocation(line: 35, column: 7, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11119, file: !11100, line: 35, column: 7)
!11124 = !DILocation(line: 35, column: 12, scope: !11123)
!11125 = !DILocation(line: 35, column: 7, scope: !11119)
!11126 = !DILocation(line: 36, column: 4, scope: !11123)
!11127 = !DILocation(line: 38, column: 10, scope: !11119)
!11128 = !DILocation(line: 38, column: 28, scope: !11119)
!11129 = !DILocation(line: 38, column: 41, scope: !11119)
!11130 = !DILocation(line: 38, column: 3, scope: !11119)
!11131 = !DILocation(line: 41, column: 6, scope: !11099)
!11132 = !DILocation(line: 42, column: 7, scope: !11099)
!11133 = !DILocation(line: 46, column: 15, scope: !11099)
!11134 = !DILocation(line: 374, column: 2, scope: !11104, inlinedAt: !11108)
!11135 = !DILocation(line: 376, column: 14, scope: !11104, inlinedAt: !11108)
!11136 = !{i32 412554}
!11137 = !DILocation(line: 377, column: 9, scope: !11104, inlinedAt: !11108)
!11138 = !DILocation(line: 377, column: 16, scope: !11104, inlinedAt: !11108)
!11139 = !DILocation(line: 46, column: 2, scope: !11099)
!11140 = !DILocation(line: 48, column: 1, scope: !11099)
!11141 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11142, file: !11142, line: 30, type: !11143, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11142 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11143 = !DISubroutineType(types: !11144)
!11144 = !{!215, !509}
!11145 = !DILocation(line: 366, column: 40, scope: !11104, inlinedAt: !11146)
!11146 = distinct !DILocation(line: 32, column: 9, scope: !11141)
!11147 = !DILocation(line: 368, column: 6, scope: !11104, inlinedAt: !11146)
!11148 = !DILocalVariable(name: "n", arg: 1, scope: !11141, file: !11142, line: 30, type: !509)
!11149 = !DILocation(line: 30, column: 21, scope: !11141)
!11150 = !DILocation(line: 32, column: 15, scope: !11141)
!11151 = !DILocation(line: 374, column: 2, scope: !11104, inlinedAt: !11146)
!11152 = !DILocation(line: 376, column: 14, scope: !11104, inlinedAt: !11146)
!11153 = !DILocation(line: 377, column: 9, scope: !11104, inlinedAt: !11146)
!11154 = !DILocation(line: 377, column: 16, scope: !11104, inlinedAt: !11146)
!11155 = !DILocation(line: 32, column: 18, scope: !11141)
!11156 = !DILocation(line: 32, column: 2, scope: !11141)
!11157 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !11158, file: !11158, line: 137, type: !11159, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11158 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!11159 = !DISubroutineType(types: !11160)
!11160 = !{!216, !1047, !2216, !417, !199}
!11161 = !DILocalVariable(name: "s", arg: 1, scope: !11157, file: !11158, line: 137, type: !1047)
!11162 = !DILocation(line: 137, column: 54, scope: !11157)
!11163 = !DILocalVariable(name: "object", arg: 2, scope: !11157, file: !11158, line: 137, type: !2216)
!11164 = !DILocation(line: 137, column: 69, scope: !11157)
!11165 = !DILocalVariable(name: "size", arg: 3, scope: !11157, file: !11158, line: 138, type: !417)
!11166 = !DILocation(line: 138, column: 12, scope: !11157)
!11167 = !DILocalVariable(name: "flags", arg: 4, scope: !11157, file: !11158, line: 138, type: !199)
!11168 = !DILocation(line: 138, column: 24, scope: !11157)
!11169 = !DILocation(line: 140, column: 17, scope: !11157)
!11170 = !DILocation(line: 140, column: 2, scope: !11157)
!11171 = distinct !DISubprogram(name: "vc_port_destruct", scope: !3, file: !3, line: 1090, type: !4171, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11172 = !DILocalVariable(name: "port", arg: 1, scope: !11171, file: !3, line: 1090, type: !3922)
!11173 = !DILocation(line: 1090, column: 47, scope: !11171)
!11174 = !DILocalVariable(name: "vc", scope: !11171, file: !3, line: 1092, type: !220)
!11175 = !DILocation(line: 1092, column: 18, scope: !11171)
!11176 = !DILocalVariable(name: "__mptr", scope: !11177, file: !3, line: 1092, type: !216)
!11177 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 1092, column: 23)
!11178 = !DILocation(line: 1092, column: 23, scope: !11177)
!11179 = !DILocation(line: 1092, column: 23, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11177, file: !3, line: 1092, column: 23)
!11181 = !DILocation(line: 1094, column: 8, scope: !11171)
!11182 = !DILocation(line: 1094, column: 2, scope: !11171)
!11183 = !DILocation(line: 1095, column: 1, scope: !11171)
!11184 = distinct !DISubprogram(name: "__module_get", scope: !8385, file: !8385, line: 747, type: !8457, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11185 = !DILocalVariable(name: "module", arg: 1, scope: !11184, file: !8385, line: 747, type: !719)
!11186 = !DILocation(line: 747, column: 48, scope: !11184)
!11187 = !DILocation(line: 749, column: 1, scope: !11184)
!11188 = distinct !DISubprogram(name: "resize_screen", scope: !3, file: !3, line: 1169, type: !11189, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11189 = !DISubroutineType(types: !11190)
!11190 = !{!215, !220, !215, !215, !215}
!11191 = !DILocalVariable(name: "vc", arg: 1, scope: !11188, file: !3, line: 1169, type: !220)
!11192 = !DILocation(line: 1169, column: 49, scope: !11188)
!11193 = !DILocalVariable(name: "width", arg: 2, scope: !11188, file: !3, line: 1169, type: !215)
!11194 = !DILocation(line: 1169, column: 57, scope: !11188)
!11195 = !DILocalVariable(name: "height", arg: 3, scope: !11188, file: !3, line: 1169, type: !215)
!11196 = !DILocation(line: 1169, column: 68, scope: !11188)
!11197 = !DILocalVariable(name: "user", arg: 4, scope: !11188, file: !3, line: 1170, type: !215)
!11198 = !DILocation(line: 1170, column: 9, scope: !11188)
!11199 = !DILocalVariable(name: "err", scope: !11188, file: !3, line: 1173, type: !215)
!11200 = !DILocation(line: 1173, column: 6, scope: !11188)
!11201 = !DILocation(line: 1175, column: 6, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 1175, column: 6)
!11203 = !DILocation(line: 1175, column: 10, scope: !11202)
!11204 = !DILocation(line: 1175, column: 18, scope: !11202)
!11205 = !DILocation(line: 1175, column: 33, scope: !11202)
!11206 = !DILocation(line: 1175, column: 36, scope: !11202)
!11207 = !DILocation(line: 1175, column: 40, scope: !11202)
!11208 = !DILocation(line: 1175, column: 47, scope: !11202)
!11209 = !DILocation(line: 1175, column: 6, scope: !11188)
!11210 = !DILocation(line: 1176, column: 9, scope: !11202)
!11211 = !DILocation(line: 1176, column: 13, scope: !11202)
!11212 = !DILocation(line: 1176, column: 20, scope: !11202)
!11213 = !DILocation(line: 1176, column: 31, scope: !11202)
!11214 = !DILocation(line: 1176, column: 35, scope: !11202)
!11215 = !DILocation(line: 1176, column: 42, scope: !11202)
!11216 = !DILocation(line: 1176, column: 50, scope: !11202)
!11217 = !DILocation(line: 1176, column: 7, scope: !11202)
!11218 = !DILocation(line: 1176, column: 3, scope: !11202)
!11219 = !DILocation(line: 1178, column: 9, scope: !11188)
!11220 = !DILocation(line: 1178, column: 2, scope: !11188)
!11221 = distinct !DISubprogram(name: "vc_uniscr_free", scope: !3, file: !3, line: 361, type: !11222, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11222 = !DISubroutineType(types: !11223)
!11223 = !{null, !4395}
!11224 = !DILocalVariable(name: "uniscr", arg: 1, scope: !11221, file: !3, line: 361, type: !4395)
!11225 = !DILocation(line: 361, column: 47, scope: !11221)
!11226 = !DILocation(line: 363, column: 8, scope: !11221)
!11227 = !DILocation(line: 363, column: 2, scope: !11221)
!11228 = !DILocation(line: 364, column: 1, scope: !11221)
!11229 = distinct !DISubprogram(name: "vc_uniscr_copy_area", scope: !3, file: !3, line: 464, type: !11230, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11230 = !DISubroutineType(types: !11231)
!11231 = !{null, !4395, !7, !7, !4395, !7, !7, !7}
!11232 = !DILocalVariable(name: "dst", arg: 1, scope: !11229, file: !3, line: 464, type: !4395)
!11233 = !DILocation(line: 464, column: 52, scope: !11229)
!11234 = !DILocalVariable(name: "dst_cols", arg: 2, scope: !11229, file: !3, line: 465, type: !7)
!11235 = !DILocation(line: 465, column: 18, scope: !11229)
!11236 = !DILocalVariable(name: "dst_rows", arg: 3, scope: !11229, file: !3, line: 466, type: !7)
!11237 = !DILocation(line: 466, column: 18, scope: !11229)
!11238 = !DILocalVariable(name: "src", arg: 4, scope: !11229, file: !3, line: 467, type: !4395)
!11239 = !DILocation(line: 467, column: 24, scope: !11229)
!11240 = !DILocalVariable(name: "src_cols", arg: 5, scope: !11229, file: !3, line: 468, type: !7)
!11241 = !DILocation(line: 468, column: 18, scope: !11229)
!11242 = !DILocalVariable(name: "src_top_row", arg: 6, scope: !11229, file: !3, line: 469, type: !7)
!11243 = !DILocation(line: 469, column: 18, scope: !11229)
!11244 = !DILocalVariable(name: "src_bot_row", arg: 7, scope: !11229, file: !3, line: 470, type: !7)
!11245 = !DILocation(line: 470, column: 18, scope: !11229)
!11246 = !DILocalVariable(name: "dst_row", scope: !11229, file: !3, line: 472, type: !7)
!11247 = !DILocation(line: 472, column: 15, scope: !11229)
!11248 = !DILocation(line: 474, column: 7, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 474, column: 6)
!11250 = !DILocation(line: 474, column: 6, scope: !11229)
!11251 = !DILocation(line: 475, column: 3, scope: !11249)
!11252 = !DILocation(line: 477, column: 2, scope: !11229)
!11253 = !DILocation(line: 477, column: 9, scope: !11229)
!11254 = !DILocation(line: 477, column: 23, scope: !11229)
!11255 = !DILocation(line: 477, column: 21, scope: !11229)
!11256 = !DILocalVariable(name: "src_line", scope: !11257, file: !3, line: 478, type: !4400)
!11257 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 477, column: 36)
!11258 = !DILocation(line: 478, column: 13, scope: !11257)
!11259 = !DILocation(line: 478, column: 24, scope: !11257)
!11260 = !DILocation(line: 478, column: 29, scope: !11257)
!11261 = !DILocation(line: 478, column: 35, scope: !11257)
!11262 = !DILocalVariable(name: "dst_line", scope: !11257, file: !3, line: 479, type: !4400)
!11263 = !DILocation(line: 479, column: 13, scope: !11257)
!11264 = !DILocation(line: 479, column: 24, scope: !11257)
!11265 = !DILocation(line: 479, column: 29, scope: !11257)
!11266 = !DILocation(line: 479, column: 35, scope: !11257)
!11267 = !DILocation(line: 481, column: 10, scope: !11257)
!11268 = !DILocation(line: 481, column: 3, scope: !11257)
!11269 = !DILocation(line: 481, column: 20, scope: !11257)
!11270 = !DILocation(line: 481, column: 30, scope: !11257)
!11271 = !DILocation(line: 481, column: 39, scope: !11257)
!11272 = !DILocation(line: 482, column: 7, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11257, file: !3, line: 482, column: 7)
!11274 = !DILocation(line: 482, column: 18, scope: !11273)
!11275 = !DILocation(line: 482, column: 16, scope: !11273)
!11276 = !DILocation(line: 482, column: 7, scope: !11257)
!11277 = !DILocation(line: 483, column: 13, scope: !11273)
!11278 = !DILocation(line: 483, column: 24, scope: !11273)
!11279 = !DILocation(line: 483, column: 22, scope: !11273)
!11280 = !DILocation(line: 483, column: 39, scope: !11273)
!11281 = !DILocation(line: 483, column: 50, scope: !11273)
!11282 = !DILocation(line: 483, column: 48, scope: !11273)
!11283 = !DILocation(line: 483, column: 4, scope: !11273)
!11284 = !DILocation(line: 484, column: 14, scope: !11257)
!11285 = !DILocation(line: 485, column: 10, scope: !11257)
!11286 = distinct !{!11286, !11252, !11287}
!11287 = !DILocation(line: 486, column: 2, scope: !11229)
!11288 = !DILocation(line: 487, column: 2, scope: !11229)
!11289 = !DILocation(line: 487, column: 9, scope: !11229)
!11290 = !DILocation(line: 487, column: 19, scope: !11229)
!11291 = !DILocation(line: 487, column: 17, scope: !11229)
!11292 = !DILocalVariable(name: "dst_line", scope: !11293, file: !3, line: 488, type: !4400)
!11293 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 487, column: 29)
!11294 = !DILocation(line: 488, column: 13, scope: !11293)
!11295 = !DILocation(line: 488, column: 24, scope: !11293)
!11296 = !DILocation(line: 488, column: 29, scope: !11293)
!11297 = !DILocation(line: 488, column: 35, scope: !11293)
!11298 = !DILocation(line: 490, column: 12, scope: !11293)
!11299 = !DILocation(line: 490, column: 27, scope: !11293)
!11300 = !DILocation(line: 490, column: 3, scope: !11293)
!11301 = !DILocation(line: 491, column: 10, scope: !11293)
!11302 = distinct !{!11302, !11288, !11303}
!11303 = !DILocation(line: 492, column: 2, scope: !11229)
!11304 = !DILocation(line: 493, column: 1, scope: !11229)
!11305 = distinct !DISubprogram(name: "scr_memcpyw", scope: !11306, file: !11306, line: 42, type: !11307, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11306 = !DIFile(filename: "./include/linux/vt_buffer.h", directory: "/home/lizy2001/genbc/linux")
!11307 = !DISubroutineType(types: !11308)
!11308 = !{null, !194, !10502, !7}
!11309 = !DILocalVariable(name: "d", arg: 1, scope: !11305, file: !11306, line: 42, type: !194)
!11310 = !DILocation(line: 42, column: 37, scope: !11305)
!11311 = !DILocalVariable(name: "s", arg: 2, scope: !11305, file: !11306, line: 42, type: !10502)
!11312 = !DILocation(line: 42, column: 51, scope: !11305)
!11313 = !DILocalVariable(name: "count", arg: 3, scope: !11305, file: !11306, line: 42, type: !7)
!11314 = !DILocation(line: 42, column: 67, scope: !11305)
!11315 = !DILocation(line: 49, column: 9, scope: !11305)
!11316 = !DILocation(line: 49, column: 2, scope: !11305)
!11317 = !DILocation(line: 49, column: 12, scope: !11305)
!11318 = !DILocation(line: 49, column: 15, scope: !11305)
!11319 = !DILocation(line: 51, column: 1, scope: !11305)
!11320 = distinct !DISubprogram(name: "scr_memsetw", scope: !11306, file: !11306, line: 29, type: !11321, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11321 = !DISubroutineType(types: !11322)
!11322 = !{null, !194, !195, !7}
!11323 = !DILocalVariable(name: "s", arg: 1, scope: !11320, file: !11306, line: 29, type: !194)
!11324 = !DILocation(line: 29, column: 37, scope: !11320)
!11325 = !DILocalVariable(name: "c", arg: 2, scope: !11320, file: !11306, line: 29, type: !195)
!11326 = !DILocation(line: 29, column: 44, scope: !11320)
!11327 = !DILocalVariable(name: "count", arg: 3, scope: !11320, file: !11306, line: 29, type: !7)
!11328 = !DILocation(line: 29, column: 60, scope: !11320)
!11329 = !DILocation(line: 36, column: 11, scope: !11320)
!11330 = !DILocation(line: 36, column: 14, scope: !11320)
!11331 = !DILocation(line: 36, column: 17, scope: !11320)
!11332 = !DILocation(line: 36, column: 23, scope: !11320)
!11333 = !DILocation(line: 36, column: 2, scope: !11320)
!11334 = !DILocation(line: 38, column: 1, scope: !11320)
!11335 = distinct !DISubprogram(name: "save_cur", scope: !3, file: !3, line: 2043, type: !4246, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11336 = !DILocalVariable(name: "vc", arg: 1, scope: !11335, file: !3, line: 2043, type: !220)
!11337 = !DILocation(line: 2043, column: 38, scope: !11335)
!11338 = !DILocation(line: 2045, column: 10, scope: !11335)
!11339 = !DILocation(line: 2045, column: 14, scope: !11335)
!11340 = !DILocation(line: 2045, column: 2, scope: !11335)
!11341 = !DILocation(line: 2045, column: 28, scope: !11335)
!11342 = !DILocation(line: 2045, column: 32, scope: !11335)
!11343 = !DILocation(line: 2046, column: 1, scope: !11335)
!11344 = distinct !DISubprogram(name: "memset32", scope: !11345, file: !11345, line: 34, type: !11346, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11345 = !DIFile(filename: "./arch/x86/include/asm/string_64.h", directory: "/home/lizy2001/genbc/linux")
!11346 = !DISubroutineType(types: !11347)
!11347 = !{!216, !4412, !645, !417}
!11348 = !DILocalVariable(name: "s", arg: 1, scope: !11344, file: !11345, line: 34, type: !4412)
!11349 = !DILocation(line: 34, column: 40, scope: !11344)
!11350 = !DILocalVariable(name: "v", arg: 2, scope: !11344, file: !11345, line: 34, type: !645)
!11351 = !DILocation(line: 34, column: 52, scope: !11344)
!11352 = !DILocalVariable(name: "n", arg: 3, scope: !11344, file: !11345, line: 34, type: !417)
!11353 = !DILocation(line: 34, column: 62, scope: !11344)
!11354 = !DILocalVariable(name: "d0", scope: !11344, file: !11345, line: 36, type: !112)
!11355 = !DILocation(line: 36, column: 7, scope: !11344)
!11356 = !DILocalVariable(name: "d1", scope: !11344, file: !11345, line: 36, type: !112)
!11357 = !DILocation(line: 36, column: 11, scope: !11344)
!11358 = !DILocation(line: 40, column: 15, scope: !11344)
!11359 = !DILocation(line: 40, column: 24, scope: !11344)
!11360 = !DILocation(line: 40, column: 33, scope: !11344)
!11361 = !DILocation(line: 37, column: 2, scope: !11344)
!11362 = !{i32 1471076, i32 1471082}
!11363 = !DILocation(line: 42, column: 9, scope: !11344)
!11364 = !DILocation(line: 42, column: 2, scope: !11344)
!11365 = distinct !DISubprogram(name: "memset16", scope: !11345, file: !11345, line: 22, type: !11366, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11366 = !DISubroutineType(types: !11367)
!11367 = !{!216, !11368, !11369, !417}
!11368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11369, size: 64)
!11369 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !200, line: 103, baseType: !195)
!11370 = !DILocalVariable(name: "s", arg: 1, scope: !11365, file: !11345, line: 22, type: !11368)
!11371 = !DILocation(line: 22, column: 40, scope: !11365)
!11372 = !DILocalVariable(name: "v", arg: 2, scope: !11365, file: !11345, line: 22, type: !11369)
!11373 = !DILocation(line: 22, column: 52, scope: !11365)
!11374 = !DILocalVariable(name: "n", arg: 3, scope: !11365, file: !11345, line: 22, type: !417)
!11375 = !DILocation(line: 22, column: 62, scope: !11365)
!11376 = !DILocalVariable(name: "d0", scope: !11365, file: !11345, line: 24, type: !112)
!11377 = !DILocation(line: 24, column: 7, scope: !11365)
!11378 = !DILocalVariable(name: "d1", scope: !11365, file: !11345, line: 24, type: !112)
!11379 = !DILocation(line: 24, column: 11, scope: !11365)
!11380 = !DILocation(line: 28, column: 15, scope: !11365)
!11381 = !DILocation(line: 28, column: 24, scope: !11365)
!11382 = !DILocation(line: 28, column: 33, scope: !11365)
!11383 = !DILocation(line: 25, column: 2, scope: !11365)
!11384 = !{i32 1470827, i32 1470833}
!11385 = !DILocation(line: 30, column: 9, scope: !11365)
!11386 = !DILocation(line: 30, column: 2, scope: !11365)
!11387 = distinct !DISubprogram(name: "tty_insert_flip_string", scope: !11388, file: !11388, line: 34, type: !11389, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11388 = !DIFile(filename: "./include/linux/tty_flip.h", directory: "/home/lizy2001/genbc/linux")
!11389 = !DISubroutineType(types: !11390)
!11390 = !{!215, !3922, !513, !417}
!11391 = !DILocalVariable(name: "port", arg: 1, scope: !11387, file: !11388, line: 34, type: !3922)
!11392 = !DILocation(line: 34, column: 59, scope: !11387)
!11393 = !DILocalVariable(name: "chars", arg: 2, scope: !11387, file: !11388, line: 35, type: !513)
!11394 = !DILocation(line: 35, column: 24, scope: !11387)
!11395 = !DILocalVariable(name: "size", arg: 3, scope: !11387, file: !11388, line: 35, type: !417)
!11396 = !DILocation(line: 35, column: 38, scope: !11387)
!11397 = !DILocation(line: 37, column: 43, scope: !11387)
!11398 = !DILocation(line: 37, column: 49, scope: !11387)
!11399 = !DILocation(line: 37, column: 68, scope: !11387)
!11400 = !DILocation(line: 37, column: 9, scope: !11387)
!11401 = !DILocation(line: 37, column: 2, scope: !11387)
!11402 = distinct !DISubprogram(name: "reset_terminal", scope: !3, file: !3, line: 2065, type: !4242, scopeLine: 2066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11403 = !DILocalVariable(name: "vc", arg: 1, scope: !11402, file: !3, line: 2065, type: !220)
!11404 = !DILocation(line: 2065, column: 44, scope: !11402)
!11405 = !DILocalVariable(name: "do_clear", arg: 2, scope: !11402, file: !3, line: 2065, type: !215)
!11406 = !DILocation(line: 2065, column: 52, scope: !11402)
!11407 = !DILocalVariable(name: "i", scope: !11402, file: !3, line: 2067, type: !7)
!11408 = !DILocation(line: 2067, column: 15, scope: !11402)
!11409 = !DILocation(line: 2069, column: 2, scope: !11402)
!11410 = !DILocation(line: 2069, column: 6, scope: !11402)
!11411 = !DILocation(line: 2069, column: 14, scope: !11402)
!11412 = !DILocation(line: 2070, column: 19, scope: !11402)
!11413 = !DILocation(line: 2070, column: 23, scope: !11402)
!11414 = !DILocation(line: 2070, column: 2, scope: !11402)
!11415 = !DILocation(line: 2070, column: 6, scope: !11402)
!11416 = !DILocation(line: 2070, column: 17, scope: !11402)
!11417 = !DILocation(line: 2071, column: 2, scope: !11402)
!11418 = !DILocation(line: 2071, column: 6, scope: !11402)
!11419 = !DILocation(line: 2071, column: 16, scope: !11402)
!11420 = !DILocation(line: 2072, column: 2, scope: !11402)
!11421 = !DILocation(line: 2072, column: 6, scope: !11402)
!11422 = !DILocation(line: 2072, column: 15, scope: !11402)
!11423 = !DILocation(line: 2073, column: 45, scope: !11402)
!11424 = !DILocation(line: 2073, column: 21, scope: !11402)
!11425 = !DILocation(line: 2073, column: 2, scope: !11402)
!11426 = !DILocation(line: 2073, column: 6, scope: !11402)
!11427 = !DILocation(line: 2073, column: 19, scope: !11402)
!11428 = !DILocation(line: 2074, column: 2, scope: !11402)
!11429 = !DILocation(line: 2074, column: 6, scope: !11402)
!11430 = !DILocation(line: 2074, column: 12, scope: !11402)
!11431 = !DILocation(line: 2074, column: 26, scope: !11402)
!11432 = !DILocation(line: 2075, column: 2, scope: !11402)
!11433 = !DILocation(line: 2075, column: 6, scope: !11402)
!11434 = !DILocation(line: 2075, column: 12, scope: !11402)
!11435 = !DILocation(line: 2075, column: 26, scope: !11402)
!11436 = !DILocation(line: 2076, column: 2, scope: !11402)
!11437 = !DILocation(line: 2076, column: 6, scope: !11402)
!11438 = !DILocation(line: 2076, column: 12, scope: !11402)
!11439 = !DILocation(line: 2076, column: 20, scope: !11402)
!11440 = !DILocation(line: 2077, column: 2, scope: !11402)
!11441 = !DILocation(line: 2077, column: 6, scope: !11402)
!11442 = !DILocation(line: 2077, column: 19, scope: !11402)
!11443 = !DILocation(line: 2078, column: 2, scope: !11402)
!11444 = !DILocation(line: 2078, column: 6, scope: !11402)
!11445 = !DILocation(line: 2078, column: 22, scope: !11402)
!11446 = !DILocation(line: 2079, column: 28, scope: !11402)
!11447 = !DILocation(line: 2079, column: 2, scope: !11402)
!11448 = !DILocation(line: 2079, column: 6, scope: !11402)
!11449 = !DILocation(line: 2079, column: 26, scope: !11402)
!11450 = !DILocation(line: 2080, column: 2, scope: !11402)
!11451 = !DILocation(line: 2080, column: 6, scope: !11402)
!11452 = !DILocation(line: 2080, column: 19, scope: !11402)
!11453 = !DILocation(line: 2082, column: 2, scope: !11402)
!11454 = !DILocation(line: 2082, column: 6, scope: !11402)
!11455 = !DILocation(line: 2082, column: 19, scope: !11402)
!11456 = !DILocation(line: 2083, column: 2, scope: !11402)
!11457 = !DILocation(line: 2083, column: 6, scope: !11402)
!11458 = !DILocation(line: 2083, column: 21, scope: !11402)
!11459 = !DILocation(line: 2085, column: 2, scope: !11402)
!11460 = !DILocation(line: 2085, column: 6, scope: !11402)
!11461 = !DILocation(line: 2085, column: 18, scope: !11402)
!11462 = !DILocation(line: 2086, column: 2, scope: !11402)
!11463 = !DILocation(line: 2086, column: 6, scope: !11402)
!11464 = !DILocation(line: 2086, column: 16, scope: !11402)
!11465 = !DILocation(line: 2087, column: 2, scope: !11402)
!11466 = !DILocation(line: 2087, column: 6, scope: !11402)
!11467 = !DILocation(line: 2087, column: 17, scope: !11402)
!11468 = !DILocation(line: 2088, column: 18, scope: !11402)
!11469 = !DILocation(line: 2088, column: 2, scope: !11402)
!11470 = !DILocation(line: 2088, column: 6, scope: !11402)
!11471 = !DILocation(line: 2088, column: 16, scope: !11402)
!11472 = !DILocation(line: 2089, column: 2, scope: !11402)
!11473 = !DILocation(line: 2089, column: 6, scope: !11402)
!11474 = !DILocation(line: 2089, column: 16, scope: !11402)
!11475 = !DILocation(line: 2091, column: 20, scope: !11402)
!11476 = !DILocation(line: 2091, column: 24, scope: !11402)
!11477 = !DILocation(line: 2091, column: 2, scope: !11402)
!11478 = !DILocation(line: 2093, column: 23, scope: !11402)
!11479 = !DILocation(line: 2093, column: 2, scope: !11402)
!11480 = !DILocation(line: 2093, column: 6, scope: !11402)
!11481 = !DILocation(line: 2093, column: 21, scope: !11402)
!11482 = !DILocation(line: 2094, column: 27, scope: !11402)
!11483 = !DILocation(line: 2094, column: 31, scope: !11402)
!11484 = !DILocation(line: 2094, column: 2, scope: !11402)
!11485 = !DILocation(line: 2094, column: 6, scope: !11402)
!11486 = !DILocation(line: 2094, column: 25, scope: !11402)
!11487 = !DILocation(line: 2096, column: 15, scope: !11402)
!11488 = !DILocation(line: 2096, column: 2, scope: !11402)
!11489 = !DILocation(line: 2097, column: 14, scope: !11402)
!11490 = !DILocation(line: 2097, column: 2, scope: !11402)
!11491 = !DILocation(line: 2099, column: 14, scope: !11402)
!11492 = !DILocation(line: 2099, column: 18, scope: !11402)
!11493 = !DILocation(line: 2099, column: 2, scope: !11402)
!11494 = !DILocation(line: 2100, column: 9, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 2100, column: 2)
!11496 = !DILocation(line: 2100, column: 7, scope: !11495)
!11497 = !DILocation(line: 2100, column: 14, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11495, file: !3, line: 2100, column: 2)
!11499 = !DILocation(line: 2100, column: 16, scope: !11498)
!11500 = !DILocation(line: 2100, column: 2, scope: !11495)
!11501 = !DILocation(line: 2101, column: 11, scope: !11498)
!11502 = !DILocation(line: 2101, column: 14, scope: !11498)
!11503 = !DILocation(line: 2101, column: 18, scope: !11498)
!11504 = !DILocation(line: 2101, column: 3, scope: !11498)
!11505 = !DILocation(line: 2100, column: 39, scope: !11498)
!11506 = !DILocation(line: 2100, column: 2, scope: !11498)
!11507 = distinct !{!11507, !11500, !11508}
!11508 = !DILocation(line: 2101, column: 29, scope: !11495)
!11509 = !DILocation(line: 2103, column: 2, scope: !11402)
!11510 = !DILocation(line: 2103, column: 6, scope: !11402)
!11511 = !DILocation(line: 2103, column: 20, scope: !11402)
!11512 = !DILocation(line: 2104, column: 2, scope: !11402)
!11513 = !DILocation(line: 2104, column: 6, scope: !11402)
!11514 = !DILocation(line: 2104, column: 23, scope: !11402)
!11515 = !DILocation(line: 2105, column: 2, scope: !11402)
!11516 = !DILocation(line: 2105, column: 6, scope: !11402)
!11517 = !DILocation(line: 2105, column: 22, scope: !11402)
!11518 = !DILocation(line: 2107, column: 9, scope: !11402)
!11519 = !DILocation(line: 2107, column: 2, scope: !11402)
!11520 = !DILocation(line: 2108, column: 11, scope: !11402)
!11521 = !DILocation(line: 2108, column: 2, scope: !11402)
!11522 = !DILocation(line: 2109, column: 6, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 2109, column: 6)
!11524 = !DILocation(line: 2109, column: 6, scope: !11402)
!11525 = !DILocation(line: 2110, column: 12, scope: !11523)
!11526 = !DILocation(line: 2110, column: 6, scope: !11523)
!11527 = !DILocation(line: 2111, column: 1, scope: !11402)
!11528 = distinct !DISubprogram(name: "default_attr", scope: !3, file: !3, line: 1618, type: !4246, scopeLine: 1619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11529 = !DILocalVariable(name: "vc", arg: 1, scope: !11528, file: !3, line: 1618, type: !220)
!11530 = !DILocation(line: 1618, column: 42, scope: !11528)
!11531 = !DILocation(line: 1620, column: 2, scope: !11528)
!11532 = !DILocation(line: 1620, column: 6, scope: !11528)
!11533 = !DILocation(line: 1620, column: 12, scope: !11528)
!11534 = !DILocation(line: 1620, column: 22, scope: !11528)
!11535 = !DILocation(line: 1621, column: 2, scope: !11528)
!11536 = !DILocation(line: 1621, column: 6, scope: !11528)
!11537 = !DILocation(line: 1621, column: 12, scope: !11528)
!11538 = !DILocation(line: 1621, column: 19, scope: !11528)
!11539 = !DILocation(line: 1622, column: 2, scope: !11528)
!11540 = !DILocation(line: 1622, column: 6, scope: !11528)
!11541 = !DILocation(line: 1622, column: 12, scope: !11528)
!11542 = !DILocation(line: 1622, column: 22, scope: !11528)
!11543 = !DILocation(line: 1623, column: 2, scope: !11528)
!11544 = !DILocation(line: 1623, column: 6, scope: !11528)
!11545 = !DILocation(line: 1623, column: 12, scope: !11528)
!11546 = !DILocation(line: 1623, column: 20, scope: !11528)
!11547 = !DILocation(line: 1624, column: 2, scope: !11528)
!11548 = !DILocation(line: 1624, column: 6, scope: !11528)
!11549 = !DILocation(line: 1624, column: 12, scope: !11528)
!11550 = !DILocation(line: 1624, column: 18, scope: !11528)
!11551 = !DILocation(line: 1625, column: 20, scope: !11528)
!11552 = !DILocation(line: 1625, column: 24, scope: !11528)
!11553 = !DILocation(line: 1625, column: 2, scope: !11528)
!11554 = !DILocation(line: 1625, column: 6, scope: !11528)
!11555 = !DILocation(line: 1625, column: 12, scope: !11528)
!11556 = !DILocation(line: 1625, column: 18, scope: !11528)
!11557 = !DILocation(line: 1626, column: 1, scope: !11528)
!11558 = distinct !DISubprogram(name: "bitmap_zero", scope: !11559, file: !11559, line: 235, type: !11560, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11559 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!11560 = !DISubroutineType(types: !11561)
!11561 = !{null, !11562, !7}
!11562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!11563 = !DILocalVariable(name: "dst", arg: 1, scope: !11558, file: !11559, line: 235, type: !11562)
!11564 = !DILocation(line: 235, column: 47, scope: !11558)
!11565 = !DILocalVariable(name: "nbits", arg: 2, scope: !11558, file: !11559, line: 235, type: !7)
!11566 = !DILocation(line: 235, column: 65, scope: !11558)
!11567 = !DILocalVariable(name: "len", scope: !11558, file: !11559, line: 237, type: !7)
!11568 = !DILocation(line: 237, column: 15, scope: !11558)
!11569 = !DILocation(line: 237, column: 21, scope: !11558)
!11570 = !DILocation(line: 237, column: 42, scope: !11558)
!11571 = !DILocation(line: 238, column: 9, scope: !11558)
!11572 = !DILocation(line: 238, column: 2, scope: !11558)
!11573 = !DILocation(line: 238, column: 17, scope: !11558)
!11574 = !DILocation(line: 239, column: 1, scope: !11558)
!11575 = distinct !DISubprogram(name: "set_bit", scope: !11057, file: !11057, line: 26, type: !11576, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11576 = !DISubroutineType(types: !11577)
!11577 = !{null, !112, !11060}
!11578 = !DILocalVariable(name: "nr", arg: 1, scope: !11579, file: !11064, line: 52, type: !112)
!11579 = distinct !DISubprogram(name: "arch_set_bit", scope: !11064, file: !11064, line: 52, type: !11576, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11580 = !DILocation(line: 52, column: 19, scope: !11579, inlinedAt: !11581)
!11581 = distinct !DILocation(line: 29, column: 2, scope: !11575)
!11582 = !DILocalVariable(name: "addr", arg: 2, scope: !11579, file: !11064, line: 52, type: !11060)
!11583 = !DILocation(line: 52, column: 47, scope: !11579, inlinedAt: !11581)
!11584 = !DILocation(line: 84, column: 74, scope: !7529, inlinedAt: !11585)
!11585 = distinct !DILocation(line: 28, column: 2, scope: !11575)
!11586 = !DILocation(line: 84, column: 84, scope: !7529, inlinedAt: !11585)
!11587 = !DILocalVariable(name: "nr", arg: 1, scope: !11575, file: !11057, line: 26, type: !112)
!11588 = !DILocation(line: 26, column: 33, scope: !11575)
!11589 = !DILocalVariable(name: "addr", arg: 2, scope: !11575, file: !11057, line: 26, type: !11060)
!11590 = !DILocation(line: 26, column: 61, scope: !11575)
!11591 = !DILocation(line: 28, column: 26, scope: !11575)
!11592 = !DILocation(line: 28, column: 33, scope: !11575)
!11593 = !DILocation(line: 28, column: 31, scope: !11575)
!11594 = !DILocation(line: 86, column: 20, scope: !7529, inlinedAt: !11585)
!11595 = !DILocation(line: 86, column: 23, scope: !7529, inlinedAt: !11585)
!11596 = !DILocation(line: 86, column: 2, scope: !7529, inlinedAt: !11585)
!11597 = !DILocation(line: 87, column: 2, scope: !7529, inlinedAt: !11585)
!11598 = !DILocation(line: 29, column: 15, scope: !11575)
!11599 = !DILocation(line: 29, column: 19, scope: !11575)
!11600 = !DILocation(line: 54, column: 27, scope: !11601, inlinedAt: !11581)
!11601 = distinct !DILexicalBlock(scope: !11579, file: !11064, line: 54, column: 6)
!11602 = !DILocation(line: 54, column: 6, scope: !11601, inlinedAt: !11581)
!11603 = !DILocation(line: 54, column: 6, scope: !11579, inlinedAt: !11581)
!11604 = !DILocation(line: 56, column: 6, scope: !11605, inlinedAt: !11581)
!11605 = distinct !DILexicalBlock(scope: !11601, file: !11064, line: 54, column: 32)
!11606 = !DILocation(line: 57, column: 12, scope: !11605, inlinedAt: !11581)
!11607 = !DILocation(line: 55, column: 3, scope: !11605, inlinedAt: !11581)
!11608 = !{i32 -2147039667}
!11609 = !DILocation(line: 59, column: 2, scope: !11605, inlinedAt: !11581)
!11610 = !DILocation(line: 61, column: 8, scope: !11611, inlinedAt: !11581)
!11611 = distinct !DILexicalBlock(scope: !11601, file: !11064, line: 59, column: 9)
!11612 = !DILocation(line: 61, column: 32, scope: !11611, inlinedAt: !11581)
!11613 = !DILocation(line: 60, column: 3, scope: !11611, inlinedAt: !11581)
!11614 = !{i32 -2147039535}
!11615 = !DILocation(line: 30, column: 1, scope: !11575)
!11616 = distinct !DISubprogram(name: "csi_J", scope: !3, file: !3, line: 1535, type: !4242, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11617 = !DILocalVariable(name: "vc", arg: 1, scope: !11616, file: !3, line: 1535, type: !220)
!11618 = !DILocation(line: 1535, column: 35, scope: !11616)
!11619 = !DILocalVariable(name: "vpar", arg: 2, scope: !11616, file: !3, line: 1535, type: !215)
!11620 = !DILocation(line: 1535, column: 43, scope: !11616)
!11621 = !DILocalVariable(name: "count", scope: !11616, file: !3, line: 1537, type: !7)
!11622 = !DILocation(line: 1537, column: 15, scope: !11616)
!11623 = !DILocalVariable(name: "start", scope: !11616, file: !3, line: 1538, type: !191)
!11624 = !DILocation(line: 1538, column: 19, scope: !11616)
!11625 = !DILocation(line: 1540, column: 10, scope: !11616)
!11626 = !DILocation(line: 1540, column: 2, scope: !11616)
!11627 = !DILocation(line: 1542, column: 25, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 1540, column: 16)
!11629 = !DILocation(line: 1542, column: 29, scope: !11628)
!11630 = !DILocation(line: 1542, column: 33, scope: !11628)
!11631 = !DILocation(line: 1542, column: 39, scope: !11628)
!11632 = !DILocation(line: 1543, column: 11, scope: !11628)
!11633 = !DILocation(line: 1543, column: 15, scope: !11628)
!11634 = !DILocation(line: 1543, column: 25, scope: !11628)
!11635 = !DILocation(line: 1543, column: 29, scope: !11628)
!11636 = !DILocation(line: 1543, column: 35, scope: !11628)
!11637 = !DILocation(line: 1543, column: 23, scope: !11628)
!11638 = !DILocation(line: 1542, column: 4, scope: !11628)
!11639 = !DILocation(line: 1544, column: 26, scope: !11628)
!11640 = !DILocation(line: 1544, column: 30, scope: !11628)
!11641 = !DILocation(line: 1544, column: 34, scope: !11628)
!11642 = !DILocation(line: 1544, column: 40, scope: !11628)
!11643 = !DILocation(line: 1544, column: 42, scope: !11628)
!11644 = !DILocation(line: 1545, column: 12, scope: !11628)
!11645 = !DILocation(line: 1545, column: 16, scope: !11628)
!11646 = !DILocation(line: 1545, column: 26, scope: !11628)
!11647 = !DILocation(line: 1545, column: 30, scope: !11628)
!11648 = !DILocation(line: 1545, column: 36, scope: !11628)
!11649 = !DILocation(line: 1545, column: 24, scope: !11628)
!11650 = !DILocation(line: 1545, column: 38, scope: !11628)
!11651 = !DILocation(line: 1544, column: 4, scope: !11628)
!11652 = !DILocation(line: 1546, column: 13, scope: !11628)
!11653 = !DILocation(line: 1546, column: 17, scope: !11628)
!11654 = !DILocation(line: 1546, column: 30, scope: !11628)
!11655 = !DILocation(line: 1546, column: 34, scope: !11628)
!11656 = !DILocation(line: 1546, column: 28, scope: !11628)
!11657 = !DILocation(line: 1546, column: 42, scope: !11628)
!11658 = !DILocation(line: 1546, column: 12, scope: !11628)
!11659 = !DILocation(line: 1546, column: 10, scope: !11628)
!11660 = !DILocation(line: 1547, column: 30, scope: !11628)
!11661 = !DILocation(line: 1547, column: 34, scope: !11628)
!11662 = !DILocation(line: 1547, column: 12, scope: !11628)
!11663 = !DILocation(line: 1547, column: 10, scope: !11628)
!11664 = !DILocation(line: 1548, column: 4, scope: !11628)
!11665 = !DILocation(line: 1550, column: 25, scope: !11628)
!11666 = !DILocation(line: 1550, column: 32, scope: !11628)
!11667 = !DILocation(line: 1550, column: 36, scope: !11628)
!11668 = !DILocation(line: 1550, column: 42, scope: !11628)
!11669 = !DILocation(line: 1550, column: 44, scope: !11628)
!11670 = !DILocation(line: 1550, column: 4, scope: !11628)
!11671 = !DILocation(line: 1551, column: 26, scope: !11628)
!11672 = !DILocation(line: 1551, column: 33, scope: !11628)
!11673 = !DILocation(line: 1551, column: 37, scope: !11628)
!11674 = !DILocation(line: 1551, column: 43, scope: !11628)
!11675 = !DILocation(line: 1551, column: 4, scope: !11628)
!11676 = !DILocation(line: 1552, column: 14, scope: !11628)
!11677 = !DILocation(line: 1552, column: 18, scope: !11628)
!11678 = !DILocation(line: 1552, column: 27, scope: !11628)
!11679 = !DILocation(line: 1552, column: 31, scope: !11628)
!11680 = !DILocation(line: 1552, column: 25, scope: !11628)
!11681 = !DILocation(line: 1552, column: 42, scope: !11628)
!11682 = !DILocation(line: 1552, column: 48, scope: !11628)
!11683 = !DILocation(line: 1552, column: 12, scope: !11628)
!11684 = !DILocation(line: 1552, column: 10, scope: !11628)
!11685 = !DILocation(line: 1553, column: 30, scope: !11628)
!11686 = !DILocation(line: 1553, column: 34, scope: !11628)
!11687 = !DILocation(line: 1553, column: 12, scope: !11628)
!11688 = !DILocation(line: 1553, column: 10, scope: !11628)
!11689 = !DILocation(line: 1554, column: 4, scope: !11628)
!11690 = !DILocation(line: 1556, column: 21, scope: !11628)
!11691 = !DILocation(line: 1556, column: 4, scope: !11628)
!11692 = !DILocation(line: 1559, column: 26, scope: !11628)
!11693 = !DILocation(line: 1559, column: 33, scope: !11628)
!11694 = !DILocation(line: 1559, column: 37, scope: !11628)
!11695 = !DILocation(line: 1559, column: 4, scope: !11628)
!11696 = !DILocation(line: 1560, column: 12, scope: !11628)
!11697 = !DILocation(line: 1560, column: 16, scope: !11628)
!11698 = !DILocation(line: 1560, column: 26, scope: !11628)
!11699 = !DILocation(line: 1560, column: 30, scope: !11628)
!11700 = !DILocation(line: 1560, column: 24, scope: !11628)
!11701 = !DILocation(line: 1560, column: 10, scope: !11628)
!11702 = !DILocation(line: 1561, column: 30, scope: !11628)
!11703 = !DILocation(line: 1561, column: 34, scope: !11628)
!11704 = !DILocation(line: 1561, column: 12, scope: !11628)
!11705 = !DILocation(line: 1561, column: 10, scope: !11628)
!11706 = !DILocation(line: 1562, column: 4, scope: !11628)
!11707 = !DILocation(line: 1564, column: 4, scope: !11628)
!11708 = !DILocation(line: 1566, column: 14, scope: !11616)
!11709 = !DILocation(line: 1566, column: 21, scope: !11616)
!11710 = !DILocation(line: 1566, column: 25, scope: !11616)
!11711 = !DILocation(line: 1566, column: 50, scope: !11616)
!11712 = !DILocation(line: 1566, column: 48, scope: !11616)
!11713 = !DILocation(line: 1566, column: 2, scope: !11616)
!11714 = !DILocation(line: 1567, column: 24, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 1567, column: 6)
!11716 = !DILocation(line: 1567, column: 6, scope: !11715)
!11717 = !DILocation(line: 1567, column: 6, scope: !11616)
!11718 = !DILocation(line: 1568, column: 20, scope: !11715)
!11719 = !DILocation(line: 1568, column: 40, scope: !11715)
!11720 = !DILocation(line: 1568, column: 24, scope: !11715)
!11721 = !DILocation(line: 1568, column: 47, scope: !11715)
!11722 = !DILocation(line: 1568, column: 3, scope: !11715)
!11723 = !DILocation(line: 1569, column: 2, scope: !11616)
!11724 = !DILocation(line: 1569, column: 6, scope: !11616)
!11725 = !DILocation(line: 1569, column: 19, scope: !11616)
!11726 = !DILocation(line: 1570, column: 1, scope: !11616)
!11727 = distinct !DISubprogram(name: "vc_uniscr_clear_line", scope: !3, file: !3, line: 406, type: !11728, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11728 = !DISubroutineType(types: !11729)
!11729 = !{null, !220, !7, !7}
!11730 = !DILocalVariable(name: "vc", arg: 1, scope: !11727, file: !3, line: 406, type: !220)
!11731 = !DILocation(line: 406, column: 50, scope: !11727)
!11732 = !DILocalVariable(name: "x", arg: 2, scope: !11727, file: !3, line: 406, type: !7)
!11733 = !DILocation(line: 406, column: 67, scope: !11727)
!11734 = !DILocalVariable(name: "nr", arg: 3, scope: !11727, file: !3, line: 407, type: !7)
!11735 = !DILocation(line: 407, column: 19, scope: !11727)
!11736 = !DILocalVariable(name: "uniscr", scope: !11727, file: !3, line: 409, type: !4395)
!11737 = !DILocation(line: 409, column: 21, scope: !11727)
!11738 = !DILocation(line: 409, column: 30, scope: !11727)
!11739 = !DILocation(line: 411, column: 6, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 411, column: 6)
!11741 = !DILocation(line: 411, column: 6, scope: !11727)
!11742 = !DILocalVariable(name: "ln", scope: !11743, file: !3, line: 412, type: !4400)
!11743 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 411, column: 14)
!11744 = !DILocation(line: 412, column: 13, scope: !11743)
!11745 = !DILocation(line: 412, column: 18, scope: !11743)
!11746 = !DILocation(line: 412, column: 26, scope: !11743)
!11747 = !DILocation(line: 412, column: 32, scope: !11743)
!11748 = !DILocation(line: 412, column: 36, scope: !11743)
!11749 = !DILocation(line: 412, column: 42, scope: !11743)
!11750 = !DILocation(line: 414, column: 13, scope: !11743)
!11751 = !DILocation(line: 414, column: 16, scope: !11743)
!11752 = !DILocation(line: 414, column: 25, scope: !11743)
!11753 = !DILocation(line: 414, column: 3, scope: !11743)
!11754 = !DILocation(line: 415, column: 2, scope: !11743)
!11755 = !DILocation(line: 416, column: 1, scope: !11727)
!11756 = distinct !DISubprogram(name: "vc_uniscr_clear_lines", scope: !3, file: !3, line: 418, type: !11728, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11757 = !DILocalVariable(name: "vc", arg: 1, scope: !11756, file: !3, line: 418, type: !220)
!11758 = !DILocation(line: 418, column: 51, scope: !11756)
!11759 = !DILocalVariable(name: "y", arg: 2, scope: !11756, file: !3, line: 418, type: !7)
!11760 = !DILocation(line: 418, column: 68, scope: !11756)
!11761 = !DILocalVariable(name: "nr", arg: 3, scope: !11756, file: !3, line: 419, type: !7)
!11762 = !DILocation(line: 419, column: 20, scope: !11756)
!11763 = !DILocalVariable(name: "uniscr", scope: !11756, file: !3, line: 421, type: !4395)
!11764 = !DILocation(line: 421, column: 21, scope: !11756)
!11765 = !DILocation(line: 421, column: 30, scope: !11756)
!11766 = !DILocation(line: 423, column: 6, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 423, column: 6)
!11768 = !DILocation(line: 423, column: 6, scope: !11756)
!11769 = !DILocalVariable(name: "cols", scope: !11770, file: !3, line: 424, type: !7)
!11770 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 423, column: 14)
!11771 = !DILocation(line: 424, column: 16, scope: !11770)
!11772 = !DILocation(line: 424, column: 23, scope: !11770)
!11773 = !DILocation(line: 424, column: 27, scope: !11770)
!11774 = !DILocation(line: 426, column: 3, scope: !11770)
!11775 = !DILocation(line: 426, column: 12, scope: !11770)
!11776 = !DILocation(line: 427, column: 13, scope: !11770)
!11777 = !DILocation(line: 427, column: 21, scope: !11770)
!11778 = !DILocation(line: 427, column: 28, scope: !11770)
!11779 = !DILocation(line: 427, column: 38, scope: !11770)
!11780 = !DILocation(line: 427, column: 4, scope: !11770)
!11781 = distinct !{!11781, !11774, !11782}
!11782 = !DILocation(line: 427, column: 42, scope: !11770)
!11783 = !DILocation(line: 428, column: 2, scope: !11770)
!11784 = !DILocation(line: 429, column: 1, scope: !11756)
!11785 = distinct !DISubprogram(name: "flush_scrollback", scope: !3, file: !3, line: 947, type: !4246, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11786 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !11787)
!11787 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !11788)
!11788 = distinct !DILocation(line: 949, column: 2, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 949, column: 2)
!11790 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !11791)
!11791 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !11788)
!11792 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !11791)
!11793 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !11788)
!11794 = !DILocalVariable(name: "vc", arg: 1, scope: !11785, file: !3, line: 947, type: !220)
!11795 = !DILocation(line: 947, column: 46, scope: !11785)
!11796 = !DILocalVariable(name: "__ret_warn_on", scope: !11789, file: !3, line: 949, type: !215)
!11797 = !DILocation(line: 949, column: 2, scope: !11789)
!11798 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !11788)
!11799 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !11791)
!11800 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !11791)
!11801 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !11791)
!11802 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !11791)
!11803 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !11788)
!11804 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !11787)
!11805 = !DILocation(line: 0, scope: !11789)
!11806 = !DILocation(line: 949, column: 2, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 949, column: 2)
!11808 = !DILocation(line: 949, column: 2, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 949, column: 2)
!11810 = !DILocation(line: 949, column: 2, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 949, column: 2)
!11812 = !DILocation(line: 949, column: 2, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 949, column: 2)
!11814 = !{i32 -2141793310, i32 -2141793281, i32 -2141793235, i32 -2141793177, i32 -2141793123, i32 -2141793069, i32 -2141793014, i32 -2141792983}
!11815 = !DILocation(line: 949, column: 2, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 949, column: 2)
!11817 = !{i32 -2141792582, i32 -2141792575, i32 -2141792523, i32 -2141792492, i32 -2141792462}
!11818 = !DILocation(line: 949, column: 2, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 949, column: 2)
!11820 = !DILocation(line: 951, column: 13, scope: !11785)
!11821 = !DILocation(line: 951, column: 2, scope: !11785)
!11822 = !DILocation(line: 952, column: 6, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 952, column: 6)
!11824 = !DILocation(line: 952, column: 10, scope: !11823)
!11825 = !DILocation(line: 952, column: 17, scope: !11823)
!11826 = !DILocation(line: 952, column: 6, scope: !11785)
!11827 = !DILocation(line: 953, column: 3, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 952, column: 39)
!11829 = !DILocation(line: 953, column: 7, scope: !11828)
!11830 = !DILocation(line: 953, column: 14, scope: !11828)
!11831 = !DILocation(line: 953, column: 35, scope: !11828)
!11832 = !DILocation(line: 954, column: 2, scope: !11828)
!11833 = !DILocation(line: 954, column: 28, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 954, column: 13)
!11835 = !DILocation(line: 954, column: 13, scope: !11834)
!11836 = !DILocation(line: 954, column: 13, scope: !11823)
!11837 = !DILocation(line: 963, column: 15, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11834, file: !3, line: 954, column: 33)
!11839 = !DILocation(line: 963, column: 3, scope: !11838)
!11840 = !DILocation(line: 964, column: 3, scope: !11838)
!11841 = !DILocation(line: 964, column: 7, scope: !11838)
!11842 = !DILocation(line: 964, column: 14, scope: !11838)
!11843 = !DILocation(line: 964, column: 25, scope: !11838)
!11844 = !DILocation(line: 965, column: 14, scope: !11838)
!11845 = !DILocation(line: 965, column: 3, scope: !11838)
!11846 = !DILocation(line: 966, column: 2, scope: !11838)
!11847 = !DILocation(line: 967, column: 1, scope: !11785)
!11848 = !DILocalVariable(name: "lock", arg: 1, scope: !11849, file: !11850, line: 392, type: !1177)
!11849 = distinct !DISubprogram(name: "spin_unlock", scope: !11850, file: !11850, line: 392, type: !11851, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11850 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!11851 = !DISubroutineType(types: !11852)
!11852 = !{null, !1177}
!11853 = !DILocation(line: 392, column: 53, scope: !11849, inlinedAt: !11854)
!11854 = distinct !DILocation(line: 3110, column: 2, scope: !4740)
!11855 = !DILocalVariable(name: "lock", arg: 1, scope: !11856, file: !11850, line: 362, type: !1177)
!11856 = distinct !DISubprogram(name: "spin_trylock", scope: !11850, file: !11850, line: 362, type: !11857, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!11857 = !DISubroutineType(types: !11858)
!11858 = !{!215, !1177}
!11859 = !DILocation(line: 362, column: 53, scope: !11856, inlinedAt: !11860)
!11860 = distinct !DILocation(line: 3050, column: 7, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 3050, column: 6)
!11862 = !DILocalVariable(name: "co", arg: 1, scope: !4740, file: !3, line: 3038, type: !4710)
!11863 = !DILocation(line: 3038, column: 46, scope: !4740)
!11864 = !DILocalVariable(name: "b", arg: 2, scope: !4740, file: !3, line: 3038, type: !336)
!11865 = !DILocation(line: 3038, column: 62, scope: !4740)
!11866 = !DILocalVariable(name: "count", arg: 3, scope: !4740, file: !3, line: 3038, type: !7)
!11867 = !DILocation(line: 3038, column: 74, scope: !4740)
!11868 = !DILocalVariable(name: "vc", scope: !4740, file: !3, line: 3040, type: !220)
!11869 = !DILocation(line: 3040, column: 18, scope: !4740)
!11870 = !DILocation(line: 3040, column: 31, scope: !4740)
!11871 = !DILocation(line: 3040, column: 23, scope: !4740)
!11872 = !DILocation(line: 3040, column: 43, scope: !4740)
!11873 = !DILocalVariable(name: "c", scope: !4740, file: !3, line: 3041, type: !515)
!11874 = !DILocation(line: 3041, column: 16, scope: !4740)
!11875 = !DILocalVariable(name: "start", scope: !4740, file: !3, line: 3043, type: !11876)
!11876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11877, size: 64)
!11877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4409)
!11878 = !DILocation(line: 3043, column: 16, scope: !4740)
!11879 = !DILocalVariable(name: "start_x", scope: !4740, file: !3, line: 3044, type: !4409)
!11880 = !DILocation(line: 3044, column: 9, scope: !4740)
!11881 = !DILocalVariable(name: "cnt", scope: !4740, file: !3, line: 3044, type: !4409)
!11882 = !DILocation(line: 3044, column: 18, scope: !4740)
!11883 = !DILocalVariable(name: "kmsg_console", scope: !4740, file: !3, line: 3045, type: !215)
!11884 = !DILocation(line: 3045, column: 6, scope: !4740)
!11885 = !DILocation(line: 3048, column: 7, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 3048, column: 6)
!11887 = !DILocation(line: 3048, column: 6, scope: !4740)
!11888 = !DILocation(line: 3049, column: 3, scope: !11886)
!11889 = !DILocation(line: 364, column: 9, scope: !11890, inlinedAt: !11860)
!11890 = distinct !DILexicalBlock(scope: !11891, file: !11850, line: 364, column: 9)
!11891 = distinct !DILexicalBlock(scope: !11856, file: !11850, line: 364, column: 9)
!11892 = !{i32 -2145365222}
!11893 = !DILocation(line: 364, column: 9, scope: !11894, inlinedAt: !11860)
!11894 = distinct !DILexicalBlock(scope: !11890, file: !11850, line: 364, column: 9)
!11895 = !DILocation(line: 364, column: 9, scope: !11891, inlinedAt: !11860)
!11896 = !DILocation(line: 3050, column: 7, scope: !11861)
!11897 = !DILocation(line: 3050, column: 6, scope: !4740)
!11898 = !DILocation(line: 3051, column: 3, scope: !11861)
!11899 = !DILocation(line: 3053, column: 17, scope: !4740)
!11900 = !DILocation(line: 3053, column: 15, scope: !4740)
!11901 = !DILocation(line: 3054, column: 6, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 3054, column: 6)
!11903 = !DILocation(line: 3054, column: 19, scope: !11902)
!11904 = !DILocation(line: 3054, column: 40, scope: !11902)
!11905 = !DILocation(line: 3054, column: 53, scope: !11902)
!11906 = !DILocation(line: 3054, column: 22, scope: !11902)
!11907 = !DILocation(line: 3054, column: 6, scope: !4740)
!11908 = !DILocation(line: 3055, column: 16, scope: !11902)
!11909 = !DILocation(line: 3055, column: 29, scope: !11902)
!11910 = !DILocation(line: 3055, column: 8, scope: !11902)
!11911 = !DILocation(line: 3055, column: 34, scope: !11902)
!11912 = !DILocation(line: 3055, column: 6, scope: !11902)
!11913 = !DILocation(line: 3055, column: 3, scope: !11902)
!11914 = !DILocation(line: 3057, column: 25, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 3057, column: 6)
!11916 = !DILocation(line: 3057, column: 7, scope: !11915)
!11917 = !DILocation(line: 3057, column: 6, scope: !4740)
!11918 = !DILocation(line: 3060, column: 3, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11915, file: !3, line: 3057, column: 38)
!11920 = !DILocation(line: 3063, column: 6, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 3063, column: 6)
!11922 = !DILocation(line: 3063, column: 10, scope: !11921)
!11923 = !DILocation(line: 3063, column: 18, scope: !11921)
!11924 = !DILocation(line: 3063, column: 6, scope: !4740)
!11925 = !DILocation(line: 3064, column: 3, scope: !11921)
!11926 = !DILocation(line: 3067, column: 16, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 3067, column: 6)
!11928 = !DILocation(line: 3067, column: 6, scope: !11927)
!11929 = !DILocation(line: 3067, column: 6, scope: !4740)
!11930 = !DILocation(line: 3068, column: 15, scope: !11927)
!11931 = !DILocation(line: 3068, column: 3, scope: !11927)
!11932 = !DILocation(line: 3070, column: 20, scope: !4740)
!11933 = !DILocation(line: 3070, column: 24, scope: !4740)
!11934 = !DILocation(line: 3070, column: 10, scope: !4740)
!11935 = !DILocation(line: 3070, column: 8, scope: !4740)
!11936 = !DILocation(line: 3071, column: 12, scope: !4740)
!11937 = !DILocation(line: 3071, column: 16, scope: !4740)
!11938 = !DILocation(line: 3071, column: 22, scope: !4740)
!11939 = !DILocation(line: 3071, column: 10, scope: !4740)
!11940 = !DILocation(line: 3072, column: 6, scope: !4740)
!11941 = !DILocation(line: 3073, column: 2, scope: !4740)
!11942 = !DILocation(line: 3073, column: 14, scope: !4740)
!11943 = !DILocation(line: 3074, column: 9, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 3073, column: 18)
!11945 = !DILocation(line: 3074, column: 7, scope: !11944)
!11946 = !DILocation(line: 3074, column: 5, scope: !11944)
!11947 = !DILocation(line: 3075, column: 7, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11944, file: !3, line: 3075, column: 7)
!11949 = !DILocation(line: 3075, column: 9, scope: !11948)
!11950 = !DILocation(line: 3075, column: 15, scope: !11948)
!11951 = !DILocation(line: 3075, column: 18, scope: !11948)
!11952 = !DILocation(line: 3075, column: 20, scope: !11948)
!11953 = !DILocation(line: 3075, column: 26, scope: !11948)
!11954 = !DILocation(line: 3075, column: 29, scope: !11948)
!11955 = !DILocation(line: 3075, column: 31, scope: !11948)
!11956 = !DILocation(line: 3075, column: 36, scope: !11948)
!11957 = !DILocation(line: 3075, column: 39, scope: !11948)
!11958 = !DILocation(line: 3075, column: 43, scope: !11948)
!11959 = !DILocation(line: 3075, column: 7, scope: !11944)
!11960 = !DILocation(line: 3076, column: 8, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 3076, column: 8)
!11962 = distinct !DILexicalBlock(scope: !11948, file: !3, line: 3075, column: 57)
!11963 = !DILocation(line: 3076, column: 12, scope: !11961)
!11964 = !DILocation(line: 3076, column: 30, scope: !11961)
!11965 = !DILocation(line: 3076, column: 15, scope: !11961)
!11966 = !DILocation(line: 3076, column: 8, scope: !11962)
!11967 = !DILocation(line: 3077, column: 5, scope: !11961)
!11968 = !DILocation(line: 3077, column: 9, scope: !11961)
!11969 = !DILocation(line: 3077, column: 16, scope: !11961)
!11970 = !DILocation(line: 3077, column: 26, scope: !11961)
!11971 = !DILocation(line: 3077, column: 30, scope: !11961)
!11972 = !DILocation(line: 3077, column: 37, scope: !11961)
!11973 = !DILocation(line: 3077, column: 42, scope: !11961)
!11974 = !DILocation(line: 3077, column: 46, scope: !11961)
!11975 = !DILocation(line: 3077, column: 52, scope: !11961)
!11976 = !DILocation(line: 3077, column: 55, scope: !11961)
!11977 = !DILocation(line: 3078, column: 8, scope: !11962)
!11978 = !DILocation(line: 3079, column: 8, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 3079, column: 8)
!11980 = !DILocation(line: 3079, column: 10, scope: !11979)
!11981 = !DILocation(line: 3079, column: 8, scope: !11962)
!11982 = !DILocation(line: 3080, column: 8, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11979, file: !3, line: 3079, column: 16)
!11984 = !DILocation(line: 3080, column: 5, scope: !11983)
!11985 = !DILocation(line: 3081, column: 23, scope: !11983)
!11986 = !DILocation(line: 3081, column: 27, scope: !11983)
!11987 = !DILocation(line: 3081, column: 13, scope: !11983)
!11988 = !DILocation(line: 3081, column: 11, scope: !11983)
!11989 = !DILocation(line: 3082, column: 15, scope: !11983)
!11990 = !DILocation(line: 3082, column: 19, scope: !11983)
!11991 = !DILocation(line: 3082, column: 25, scope: !11983)
!11992 = !DILocation(line: 3082, column: 13, scope: !11983)
!11993 = !DILocation(line: 3083, column: 5, scope: !11983)
!11994 = distinct !{!11994, !11941, !11995}
!11995 = !DILocation(line: 3103, column: 2, scope: !4740)
!11996 = !DILocation(line: 3085, column: 8, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 3085, column: 8)
!11998 = !DILocation(line: 3085, column: 10, scope: !11997)
!11999 = !DILocation(line: 3085, column: 8, scope: !11962)
!12000 = !DILocation(line: 3086, column: 8, scope: !11997)
!12001 = !DILocation(line: 3086, column: 5, scope: !11997)
!12002 = !DILocation(line: 3087, column: 7, scope: !11962)
!12003 = !DILocation(line: 3087, column: 4, scope: !11962)
!12004 = !DILocation(line: 3088, column: 22, scope: !11962)
!12005 = !DILocation(line: 3088, column: 26, scope: !11962)
!12006 = !DILocation(line: 3088, column: 12, scope: !11962)
!12007 = !DILocation(line: 3088, column: 10, scope: !11962)
!12008 = !DILocation(line: 3089, column: 14, scope: !11962)
!12009 = !DILocation(line: 3089, column: 18, scope: !11962)
!12010 = !DILocation(line: 3089, column: 24, scope: !11962)
!12011 = !DILocation(line: 3089, column: 12, scope: !11962)
!12012 = !DILocation(line: 3090, column: 8, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !11962, file: !3, line: 3090, column: 8)
!12014 = !DILocation(line: 3090, column: 10, scope: !12013)
!12015 = !DILocation(line: 3090, column: 16, scope: !12013)
!12016 = !DILocation(line: 3090, column: 19, scope: !12013)
!12017 = !DILocation(line: 3090, column: 21, scope: !12013)
!12018 = !DILocation(line: 3090, column: 8, scope: !11962)
!12019 = !DILocation(line: 3091, column: 5, scope: !12013)
!12020 = !DILocation(line: 3092, column: 3, scope: !11962)
!12021 = !DILocation(line: 3093, column: 18, scope: !11944)
!12022 = !DILocation(line: 3093, column: 22, scope: !11944)
!12023 = !DILocation(line: 3093, column: 3, scope: !11944)
!12024 = !DILocation(line: 3094, column: 3, scope: !11944)
!12025 = !DILocation(line: 3095, column: 16, scope: !11944)
!12026 = !DILocation(line: 3095, column: 20, scope: !11944)
!12027 = !DILocation(line: 3095, column: 3, scope: !11944)
!12028 = !DILocation(line: 3096, column: 6, scope: !11944)
!12029 = !DILocation(line: 3097, column: 7, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !11944, file: !3, line: 3097, column: 7)
!12031 = !DILocation(line: 3097, column: 11, scope: !12030)
!12032 = !DILocation(line: 3097, column: 17, scope: !12030)
!12033 = !DILocation(line: 3097, column: 22, scope: !12030)
!12034 = !DILocation(line: 3097, column: 26, scope: !12030)
!12035 = !DILocation(line: 3097, column: 34, scope: !12030)
!12036 = !DILocation(line: 3097, column: 19, scope: !12030)
!12037 = !DILocation(line: 3097, column: 7, scope: !11944)
!12038 = !DILocation(line: 3098, column: 4, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 3097, column: 39)
!12040 = !DILocation(line: 3098, column: 8, scope: !12039)
!12041 = !DILocation(line: 3098, column: 21, scope: !12039)
!12042 = !DILocation(line: 3099, column: 3, scope: !12039)
!12043 = !DILocation(line: 3100, column: 4, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 3099, column: 10)
!12045 = !DILocation(line: 3100, column: 8, scope: !12044)
!12046 = !DILocation(line: 3100, column: 15, scope: !12044)
!12047 = !DILocation(line: 3101, column: 4, scope: !12044)
!12048 = !DILocation(line: 3101, column: 8, scope: !12044)
!12049 = !DILocation(line: 3101, column: 14, scope: !12044)
!12050 = !DILocation(line: 3101, column: 15, scope: !12044)
!12051 = !DILocation(line: 3104, column: 6, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 3104, column: 6)
!12053 = !DILocation(line: 3104, column: 10, scope: !12052)
!12054 = !DILocation(line: 3104, column: 28, scope: !12052)
!12055 = !DILocation(line: 3104, column: 13, scope: !12052)
!12056 = !DILocation(line: 3104, column: 6, scope: !4740)
!12057 = !DILocation(line: 3105, column: 3, scope: !12052)
!12058 = !DILocation(line: 3105, column: 7, scope: !12052)
!12059 = !DILocation(line: 3105, column: 14, scope: !12052)
!12060 = !DILocation(line: 3105, column: 24, scope: !12052)
!12061 = !DILocation(line: 3105, column: 28, scope: !12052)
!12062 = !DILocation(line: 3105, column: 35, scope: !12052)
!12063 = !DILocation(line: 3105, column: 40, scope: !12052)
!12064 = !DILocation(line: 3105, column: 44, scope: !12052)
!12065 = !DILocation(line: 3105, column: 50, scope: !12052)
!12066 = !DILocation(line: 3105, column: 53, scope: !12052)
!12067 = !DILocation(line: 3106, column: 13, scope: !4740)
!12068 = !DILocation(line: 3106, column: 2, scope: !4740)
!12069 = !DILocation(line: 3107, column: 16, scope: !4740)
!12070 = !DILocation(line: 3107, column: 2, scope: !4740)
!12071 = !DILabel(scope: !4740, name: "quit", file: !3, line: 3109)
!12072 = !DILocation(line: 3109, column: 1, scope: !4740)
!12073 = !DILocation(line: 394, column: 2, scope: !12074, inlinedAt: !11854)
!12074 = distinct !DILexicalBlock(scope: !11849, file: !11850, line: 394, column: 2)
!12075 = !{i32 -2145364162}
!12076 = !DILocation(line: 394, column: 2, scope: !12077, inlinedAt: !11854)
!12077 = distinct !DILexicalBlock(scope: !12074, file: !11850, line: 394, column: 2)
!12078 = !DILocation(line: 3111, column: 1, scope: !4740)
!12079 = distinct !DISubprogram(name: "vt_console_device", scope: !3, file: !3, line: 3113, type: !4717, scopeLine: 3114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12080 = !DILocalVariable(name: "c", arg: 1, scope: !12079, file: !3, line: 3113, type: !4710)
!12081 = !DILocation(line: 3113, column: 61, scope: !12079)
!12082 = !DILocalVariable(name: "index", arg: 2, scope: !12079, file: !3, line: 3113, type: !794)
!12083 = !DILocation(line: 3113, column: 69, scope: !12079)
!12084 = !DILocation(line: 3115, column: 11, scope: !12079)
!12085 = !DILocation(line: 3115, column: 14, scope: !12079)
!12086 = !DILocation(line: 3115, column: 22, scope: !12079)
!12087 = !DILocation(line: 3115, column: 25, scope: !12079)
!12088 = !DILocation(line: 3115, column: 30, scope: !12079)
!12089 = !DILocation(line: 3115, column: 35, scope: !12079)
!12090 = !DILocation(line: 3115, column: 3, scope: !12079)
!12091 = !DILocation(line: 3115, column: 9, scope: !12079)
!12092 = !DILocation(line: 3116, column: 9, scope: !12079)
!12093 = !DILocation(line: 3116, column: 2, scope: !12079)
!12094 = distinct !DISubprogram(name: "bs", scope: !3, file: !3, line: 1520, type: !4246, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12095 = !DILocalVariable(name: "vc", arg: 1, scope: !12094, file: !3, line: 1520, type: !220)
!12096 = !DILocation(line: 1520, column: 39, scope: !12094)
!12097 = !DILocation(line: 1522, column: 6, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12094, file: !3, line: 1522, column: 6)
!12099 = !DILocation(line: 1522, column: 10, scope: !12098)
!12100 = !DILocation(line: 1522, column: 16, scope: !12098)
!12101 = !DILocation(line: 1522, column: 6, scope: !12094)
!12102 = !DILocation(line: 1523, column: 3, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 1522, column: 19)
!12104 = !DILocation(line: 1523, column: 7, scope: !12103)
!12105 = !DILocation(line: 1523, column: 14, scope: !12103)
!12106 = !DILocation(line: 1524, column: 3, scope: !12103)
!12107 = !DILocation(line: 1524, column: 7, scope: !12103)
!12108 = !DILocation(line: 1524, column: 13, scope: !12103)
!12109 = !DILocation(line: 1524, column: 14, scope: !12103)
!12110 = !DILocation(line: 1525, column: 3, scope: !12103)
!12111 = !DILocation(line: 1525, column: 7, scope: !12103)
!12112 = !DILocation(line: 1525, column: 20, scope: !12103)
!12113 = !DILocation(line: 1526, column: 16, scope: !12103)
!12114 = !DILocation(line: 1526, column: 3, scope: !12103)
!12115 = !DILocation(line: 1527, column: 2, scope: !12103)
!12116 = !DILocation(line: 1528, column: 1, scope: !12094)
!12117 = distinct !DISubprogram(name: "lf", scope: !3, file: !3, line: 1484, type: !4246, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12118 = !DILocalVariable(name: "vc", arg: 1, scope: !12117, file: !3, line: 1484, type: !220)
!12119 = !DILocation(line: 1484, column: 32, scope: !12117)
!12120 = !DILocation(line: 1489, column: 6, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12117, file: !3, line: 1489, column: 6)
!12122 = !DILocation(line: 1489, column: 10, scope: !12121)
!12123 = !DILocation(line: 1489, column: 16, scope: !12121)
!12124 = !DILocation(line: 1489, column: 18, scope: !12121)
!12125 = !DILocation(line: 1489, column: 25, scope: !12121)
!12126 = !DILocation(line: 1489, column: 29, scope: !12121)
!12127 = !DILocation(line: 1489, column: 22, scope: !12121)
!12128 = !DILocation(line: 1489, column: 6, scope: !12117)
!12129 = !DILocation(line: 1490, column: 14, scope: !12121)
!12130 = !DILocation(line: 1490, column: 18, scope: !12121)
!12131 = !DILocation(line: 1490, column: 22, scope: !12121)
!12132 = !DILocation(line: 1490, column: 30, scope: !12121)
!12133 = !DILocation(line: 1490, column: 34, scope: !12121)
!12134 = !DILocation(line: 1490, column: 3, scope: !12121)
!12135 = !DILocation(line: 1491, column: 11, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12121, file: !3, line: 1491, column: 11)
!12137 = !DILocation(line: 1491, column: 15, scope: !12136)
!12138 = !DILocation(line: 1491, column: 21, scope: !12136)
!12139 = !DILocation(line: 1491, column: 25, scope: !12136)
!12140 = !DILocation(line: 1491, column: 29, scope: !12136)
!12141 = !DILocation(line: 1491, column: 37, scope: !12136)
!12142 = !DILocation(line: 1491, column: 23, scope: !12136)
!12143 = !DILocation(line: 1491, column: 11, scope: !12121)
!12144 = !DILocation(line: 1492, column: 3, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12136, file: !3, line: 1491, column: 42)
!12146 = !DILocation(line: 1492, column: 7, scope: !12145)
!12147 = !DILocation(line: 1492, column: 13, scope: !12145)
!12148 = !DILocation(line: 1492, column: 14, scope: !12145)
!12149 = !DILocation(line: 1493, column: 17, scope: !12145)
!12150 = !DILocation(line: 1493, column: 21, scope: !12145)
!12151 = !DILocation(line: 1493, column: 3, scope: !12145)
!12152 = !DILocation(line: 1493, column: 7, scope: !12145)
!12153 = !DILocation(line: 1493, column: 14, scope: !12145)
!12154 = !DILocation(line: 1494, column: 2, scope: !12145)
!12155 = !DILocation(line: 1495, column: 2, scope: !12117)
!12156 = !DILocation(line: 1495, column: 6, scope: !12117)
!12157 = !DILocation(line: 1495, column: 19, scope: !12117)
!12158 = !DILocation(line: 1496, column: 15, scope: !12117)
!12159 = !DILocation(line: 1496, column: 2, scope: !12117)
!12160 = !DILocation(line: 1497, column: 1, scope: !12117)
!12161 = distinct !DISubprogram(name: "cr", scope: !3, file: !3, line: 1513, type: !4246, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12162 = !DILocalVariable(name: "vc", arg: 1, scope: !12161, file: !3, line: 1513, type: !220)
!12163 = !DILocation(line: 1513, column: 39, scope: !12161)
!12164 = !DILocation(line: 1515, column: 16, scope: !12161)
!12165 = !DILocation(line: 1515, column: 20, scope: !12161)
!12166 = !DILocation(line: 1515, column: 26, scope: !12161)
!12167 = !DILocation(line: 1515, column: 28, scope: !12161)
!12168 = !DILocation(line: 1515, column: 2, scope: !12161)
!12169 = !DILocation(line: 1515, column: 6, scope: !12161)
!12170 = !DILocation(line: 1515, column: 13, scope: !12161)
!12171 = !DILocation(line: 1516, column: 21, scope: !12161)
!12172 = !DILocation(line: 1516, column: 25, scope: !12161)
!12173 = !DILocation(line: 1516, column: 31, scope: !12161)
!12174 = !DILocation(line: 1516, column: 33, scope: !12161)
!12175 = !DILocation(line: 1516, column: 2, scope: !12161)
!12176 = !DILocation(line: 1516, column: 6, scope: !12161)
!12177 = !DILocation(line: 1516, column: 19, scope: !12161)
!12178 = !DILocation(line: 1517, column: 15, scope: !12161)
!12179 = !DILocation(line: 1517, column: 2, scope: !12161)
!12180 = !DILocation(line: 1518, column: 1, scope: !12161)
!12181 = distinct !DISubprogram(name: "vc_uniscr_putc", scope: !3, file: !3, line: 372, type: !12182, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12182 = !DISubroutineType(types: !12183)
!12183 = !{null, !220, !4401}
!12184 = !DILocalVariable(name: "vc", arg: 1, scope: !12181, file: !3, line: 372, type: !220)
!12185 = !DILocation(line: 372, column: 44, scope: !12181)
!12186 = !DILocalVariable(name: "uc", arg: 2, scope: !12181, file: !3, line: 372, type: !4401)
!12187 = !DILocation(line: 372, column: 57, scope: !12181)
!12188 = !DILocalVariable(name: "uniscr", scope: !12181, file: !3, line: 374, type: !4395)
!12189 = !DILocation(line: 374, column: 21, scope: !12181)
!12190 = !DILocation(line: 374, column: 30, scope: !12181)
!12191 = !DILocation(line: 376, column: 6, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12181, file: !3, line: 376, column: 6)
!12193 = !DILocation(line: 376, column: 6, scope: !12181)
!12194 = !DILocation(line: 377, column: 45, scope: !12192)
!12195 = !DILocation(line: 377, column: 3, scope: !12192)
!12196 = !DILocation(line: 377, column: 11, scope: !12192)
!12197 = !DILocation(line: 377, column: 17, scope: !12192)
!12198 = !DILocation(line: 377, column: 21, scope: !12192)
!12199 = !DILocation(line: 377, column: 27, scope: !12192)
!12200 = !DILocation(line: 377, column: 30, scope: !12192)
!12201 = !DILocation(line: 377, column: 34, scope: !12192)
!12202 = !DILocation(line: 377, column: 40, scope: !12192)
!12203 = !DILocation(line: 377, column: 43, scope: !12192)
!12204 = !DILocation(line: 378, column: 1, scope: !12181)
!12205 = distinct !DISubprogram(name: "notify_write", scope: !3, file: !3, line: 261, type: !12206, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12206 = !DISubroutineType(types: !12207)
!12207 = !{null, !220, !7}
!12208 = !DILocalVariable(name: "vc", arg: 1, scope: !12205, file: !3, line: 261, type: !220)
!12209 = !DILocation(line: 261, column: 42, scope: !12205)
!12210 = !DILocalVariable(name: "unicode", arg: 2, scope: !12205, file: !3, line: 261, type: !7)
!12211 = !DILocation(line: 261, column: 59, scope: !12205)
!12212 = !DILocalVariable(name: "param", scope: !12205, file: !3, line: 263, type: !5654)
!12213 = !DILocation(line: 263, column: 27, scope: !12205)
!12214 = !DILocation(line: 263, column: 35, scope: !12205)
!12215 = !DILocation(line: 263, column: 43, scope: !12205)
!12216 = !DILocation(line: 263, column: 52, scope: !12205)
!12217 = !DILocation(line: 264, column: 58, scope: !12205)
!12218 = !DILocation(line: 264, column: 2, scope: !12205)
!12219 = !DILocation(line: 265, column: 1, scope: !12205)
!12220 = distinct !DISubprogram(name: "con_scroll", scope: !3, file: !3, line: 620, type: !12221, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12221 = !DISubroutineType(types: !12222)
!12222 = !{null, !220, !7, !7, !100, !7}
!12223 = !DILocalVariable(name: "vc", arg: 1, scope: !12220, file: !3, line: 620, type: !220)
!12224 = !DILocation(line: 620, column: 40, scope: !12220)
!12225 = !DILocalVariable(name: "t", arg: 2, scope: !12220, file: !3, line: 620, type: !7)
!12226 = !DILocation(line: 620, column: 57, scope: !12220)
!12227 = !DILocalVariable(name: "b", arg: 3, scope: !12220, file: !3, line: 620, type: !7)
!12228 = !DILocation(line: 620, column: 73, scope: !12220)
!12229 = !DILocalVariable(name: "dir", arg: 4, scope: !12220, file: !3, line: 621, type: !100)
!12230 = !DILocation(line: 621, column: 19, scope: !12220)
!12231 = !DILocalVariable(name: "nr", arg: 5, scope: !12220, file: !3, line: 621, type: !7)
!12232 = !DILocation(line: 621, column: 37, scope: !12220)
!12233 = !DILocalVariable(name: "clear", scope: !12220, file: !3, line: 623, type: !194)
!12234 = !DILocation(line: 623, column: 7, scope: !12220)
!12235 = !DILocalVariable(name: "d", scope: !12220, file: !3, line: 623, type: !194)
!12236 = !DILocation(line: 623, column: 15, scope: !12220)
!12237 = !DILocalVariable(name: "s", scope: !12220, file: !3, line: 623, type: !194)
!12238 = !DILocation(line: 623, column: 19, scope: !12220)
!12239 = !DILocation(line: 625, column: 6, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12220, file: !3, line: 625, column: 6)
!12241 = !DILocation(line: 625, column: 10, scope: !12240)
!12242 = !DILocation(line: 625, column: 8, scope: !12240)
!12243 = !DILocation(line: 625, column: 16, scope: !12240)
!12244 = !DILocation(line: 625, column: 13, scope: !12240)
!12245 = !DILocation(line: 625, column: 6, scope: !12220)
!12246 = !DILocation(line: 626, column: 8, scope: !12240)
!12247 = !DILocation(line: 626, column: 12, scope: !12240)
!12248 = !DILocation(line: 626, column: 10, scope: !12240)
!12249 = !DILocation(line: 626, column: 14, scope: !12240)
!12250 = !DILocation(line: 626, column: 6, scope: !12240)
!12251 = !DILocation(line: 626, column: 3, scope: !12240)
!12252 = !DILocation(line: 627, column: 6, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12220, file: !3, line: 627, column: 6)
!12254 = !DILocation(line: 627, column: 10, scope: !12253)
!12255 = !DILocation(line: 627, column: 14, scope: !12253)
!12256 = !DILocation(line: 627, column: 8, scope: !12253)
!12257 = !DILocation(line: 627, column: 22, scope: !12253)
!12258 = !DILocation(line: 627, column: 25, scope: !12253)
!12259 = !DILocation(line: 627, column: 30, scope: !12253)
!12260 = !DILocation(line: 627, column: 27, scope: !12253)
!12261 = !DILocation(line: 627, column: 32, scope: !12253)
!12262 = !DILocation(line: 627, column: 35, scope: !12253)
!12263 = !DILocation(line: 627, column: 38, scope: !12253)
!12264 = !DILocation(line: 627, column: 6, scope: !12220)
!12265 = !DILocation(line: 628, column: 3, scope: !12253)
!12266 = !DILocation(line: 629, column: 19, scope: !12220)
!12267 = !DILocation(line: 629, column: 23, scope: !12220)
!12268 = !DILocation(line: 629, column: 26, scope: !12220)
!12269 = !DILocation(line: 629, column: 29, scope: !12220)
!12270 = !DILocation(line: 629, column: 34, scope: !12220)
!12271 = !DILocation(line: 629, column: 2, scope: !12220)
!12272 = !DILocation(line: 630, column: 21, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12220, file: !3, line: 630, column: 6)
!12274 = !DILocation(line: 630, column: 6, scope: !12273)
!12275 = !DILocation(line: 630, column: 25, scope: !12273)
!12276 = !DILocation(line: 630, column: 28, scope: !12273)
!12277 = !DILocation(line: 630, column: 32, scope: !12273)
!12278 = !DILocation(line: 630, column: 39, scope: !12273)
!12279 = !DILocation(line: 630, column: 50, scope: !12273)
!12280 = !DILocation(line: 630, column: 54, scope: !12273)
!12281 = !DILocation(line: 630, column: 57, scope: !12273)
!12282 = !DILocation(line: 630, column: 60, scope: !12273)
!12283 = !DILocation(line: 630, column: 65, scope: !12273)
!12284 = !DILocation(line: 630, column: 6, scope: !12220)
!12285 = !DILocation(line: 631, column: 3, scope: !12273)
!12286 = !DILocation(line: 633, column: 22, scope: !12220)
!12287 = !DILocation(line: 633, column: 26, scope: !12220)
!12288 = !DILocation(line: 633, column: 38, scope: !12220)
!12289 = !DILocation(line: 633, column: 42, scope: !12220)
!12290 = !DILocation(line: 633, column: 56, scope: !12220)
!12291 = !DILocation(line: 633, column: 54, scope: !12220)
!12292 = !DILocation(line: 633, column: 36, scope: !12220)
!12293 = !DILocation(line: 633, column: 14, scope: !12220)
!12294 = !DILocation(line: 633, column: 12, scope: !12220)
!12295 = !DILocation(line: 633, column: 4, scope: !12220)
!12296 = !DILocation(line: 634, column: 14, scope: !12220)
!12297 = !DILocation(line: 634, column: 18, scope: !12220)
!12298 = !DILocation(line: 634, column: 30, scope: !12220)
!12299 = !DILocation(line: 634, column: 34, scope: !12220)
!12300 = !DILocation(line: 634, column: 49, scope: !12220)
!12301 = !DILocation(line: 634, column: 53, scope: !12220)
!12302 = !DILocation(line: 634, column: 51, scope: !12220)
!12303 = !DILocation(line: 634, column: 46, scope: !12220)
!12304 = !DILocation(line: 634, column: 28, scope: !12220)
!12305 = !DILocation(line: 634, column: 6, scope: !12220)
!12306 = !DILocation(line: 634, column: 4, scope: !12220)
!12307 = !DILocation(line: 636, column: 6, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12220, file: !3, line: 636, column: 6)
!12309 = !DILocation(line: 636, column: 10, scope: !12308)
!12310 = !DILocation(line: 636, column: 6, scope: !12220)
!12311 = !DILocation(line: 637, column: 11, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12308, file: !3, line: 636, column: 20)
!12313 = !DILocation(line: 637, column: 16, scope: !12312)
!12314 = !DILocation(line: 637, column: 20, scope: !12312)
!12315 = !DILocation(line: 637, column: 18, scope: !12312)
!12316 = !DILocation(line: 637, column: 24, scope: !12312)
!12317 = !DILocation(line: 637, column: 22, scope: !12312)
!12318 = !DILocation(line: 637, column: 30, scope: !12312)
!12319 = !DILocation(line: 637, column: 34, scope: !12312)
!12320 = !DILocation(line: 637, column: 28, scope: !12312)
!12321 = !DILocation(line: 637, column: 13, scope: !12312)
!12322 = !DILocation(line: 637, column: 9, scope: !12312)
!12323 = !DILocation(line: 638, column: 3, scope: !12312)
!12324 = !DILocalVariable(name: "__tmp", scope: !12325, file: !3, line: 638, type: !194)
!12325 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 638, column: 3)
!12326 = !DILocation(line: 638, column: 3, scope: !12325)
!12327 = !DILocation(line: 639, column: 2, scope: !12312)
!12328 = !DILocation(line: 640, column: 15, scope: !12220)
!12329 = !DILocation(line: 640, column: 18, scope: !12220)
!12330 = !DILocation(line: 640, column: 22, scope: !12220)
!12331 = !DILocation(line: 640, column: 26, scope: !12220)
!12332 = !DILocation(line: 640, column: 24, scope: !12220)
!12333 = !DILocation(line: 640, column: 30, scope: !12220)
!12334 = !DILocation(line: 640, column: 28, scope: !12220)
!12335 = !DILocation(line: 640, column: 36, scope: !12220)
!12336 = !DILocation(line: 640, column: 40, scope: !12220)
!12337 = !DILocation(line: 640, column: 34, scope: !12220)
!12338 = !DILocation(line: 640, column: 2, scope: !12220)
!12339 = !DILocation(line: 641, column: 14, scope: !12220)
!12340 = !DILocation(line: 641, column: 21, scope: !12220)
!12341 = !DILocation(line: 641, column: 25, scope: !12220)
!12342 = !DILocation(line: 641, column: 46, scope: !12220)
!12343 = !DILocation(line: 641, column: 50, scope: !12220)
!12344 = !DILocation(line: 641, column: 64, scope: !12220)
!12345 = !DILocation(line: 641, column: 62, scope: !12220)
!12346 = !DILocation(line: 641, column: 2, scope: !12220)
!12347 = !DILocation(line: 642, column: 1, scope: !12220)
!12348 = distinct !DISubprogram(name: "vc_uniscr_scroll", scope: !3, file: !3, line: 431, type: !12221, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12349 = !DILocalVariable(name: "vc", arg: 1, scope: !12348, file: !3, line: 431, type: !220)
!12350 = !DILocation(line: 431, column: 46, scope: !12348)
!12351 = !DILocalVariable(name: "t", arg: 2, scope: !12348, file: !3, line: 431, type: !7)
!12352 = !DILocation(line: 431, column: 63, scope: !12348)
!12353 = !DILocalVariable(name: "b", arg: 3, scope: !12348, file: !3, line: 431, type: !7)
!12354 = !DILocation(line: 431, column: 79, scope: !12348)
!12355 = !DILocalVariable(name: "dir", arg: 4, scope: !12348, file: !3, line: 432, type: !100)
!12356 = !DILocation(line: 432, column: 25, scope: !12348)
!12357 = !DILocalVariable(name: "nr", arg: 5, scope: !12348, file: !3, line: 432, type: !7)
!12358 = !DILocation(line: 432, column: 43, scope: !12348)
!12359 = !DILocalVariable(name: "uniscr", scope: !12348, file: !3, line: 434, type: !4395)
!12360 = !DILocation(line: 434, column: 21, scope: !12348)
!12361 = !DILocation(line: 434, column: 30, scope: !12348)
!12362 = !DILocation(line: 436, column: 6, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 436, column: 6)
!12364 = !DILocation(line: 436, column: 6, scope: !12348)
!12365 = !DILocalVariable(name: "i", scope: !12366, file: !3, line: 437, type: !7)
!12366 = distinct !DILexicalBlock(scope: !12363, file: !3, line: 436, column: 14)
!12367 = !DILocation(line: 437, column: 16, scope: !12366)
!12368 = !DILocalVariable(name: "j", scope: !12366, file: !3, line: 437, type: !7)
!12369 = !DILocation(line: 437, column: 19, scope: !12366)
!12370 = !DILocalVariable(name: "k", scope: !12366, file: !3, line: 437, type: !7)
!12371 = !DILocation(line: 437, column: 22, scope: !12366)
!12372 = !DILocalVariable(name: "sz", scope: !12366, file: !3, line: 437, type: !7)
!12373 = !DILocation(line: 437, column: 25, scope: !12366)
!12374 = !DILocalVariable(name: "d", scope: !12366, file: !3, line: 437, type: !7)
!12375 = !DILocation(line: 437, column: 29, scope: !12366)
!12376 = !DILocalVariable(name: "clear", scope: !12366, file: !3, line: 437, type: !7)
!12377 = !DILocation(line: 437, column: 32, scope: !12366)
!12378 = !DILocation(line: 439, column: 8, scope: !12366)
!12379 = !DILocation(line: 439, column: 12, scope: !12366)
!12380 = !DILocation(line: 439, column: 10, scope: !12366)
!12381 = !DILocation(line: 439, column: 6, scope: !12366)
!12382 = !DILocation(line: 440, column: 11, scope: !12366)
!12383 = !DILocation(line: 440, column: 15, scope: !12366)
!12384 = !DILocation(line: 440, column: 13, scope: !12366)
!12385 = !DILocation(line: 440, column: 9, scope: !12366)
!12386 = !DILocation(line: 441, column: 7, scope: !12366)
!12387 = !DILocation(line: 441, column: 5, scope: !12366)
!12388 = !DILocation(line: 442, column: 7, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 442, column: 7)
!12390 = !DILocation(line: 442, column: 11, scope: !12389)
!12391 = !DILocation(line: 442, column: 7, scope: !12366)
!12392 = !DILocation(line: 443, column: 12, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12389, file: !3, line: 442, column: 23)
!12394 = !DILocation(line: 443, column: 10, scope: !12393)
!12395 = !DILocation(line: 444, column: 8, scope: !12393)
!12396 = !DILocation(line: 444, column: 13, scope: !12393)
!12397 = !DILocation(line: 444, column: 11, scope: !12393)
!12398 = !DILocation(line: 444, column: 6, scope: !12393)
!12399 = !DILocation(line: 445, column: 3, scope: !12393)
!12400 = !DILocation(line: 446, column: 10, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 446, column: 3)
!12402 = !DILocation(line: 446, column: 8, scope: !12401)
!12403 = !DILocation(line: 446, column: 15, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 446, column: 3)
!12405 = !DILocation(line: 446, column: 23, scope: !12404)
!12406 = !DILocation(line: 446, column: 26, scope: !12404)
!12407 = !DILocation(line: 446, column: 19, scope: !12404)
!12408 = !DILocation(line: 446, column: 17, scope: !12404)
!12409 = !DILocation(line: 446, column: 3, scope: !12401)
!12410 = !DILocalVariable(name: "tmp", scope: !12411, file: !3, line: 447, type: !4400)
!12411 = distinct !DILexicalBlock(scope: !12404, file: !3, line: 446, column: 36)
!12412 = !DILocation(line: 447, column: 14, scope: !12411)
!12413 = !DILocation(line: 447, column: 20, scope: !12411)
!12414 = !DILocation(line: 447, column: 28, scope: !12411)
!12415 = !DILocation(line: 447, column: 34, scope: !12411)
!12416 = !DILocation(line: 447, column: 38, scope: !12411)
!12417 = !DILocation(line: 447, column: 36, scope: !12411)
!12418 = !DILocation(line: 448, column: 8, scope: !12411)
!12419 = !DILocation(line: 448, column: 6, scope: !12411)
!12420 = !DILocation(line: 449, column: 4, scope: !12411)
!12421 = !DILocation(line: 450, column: 9, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12411, file: !3, line: 449, column: 14)
!12423 = !DILocation(line: 450, column: 13, scope: !12422)
!12424 = !DILocation(line: 450, column: 11, scope: !12422)
!12425 = !DILocation(line: 450, column: 7, scope: !12422)
!12426 = !DILocation(line: 451, column: 9, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 451, column: 9)
!12428 = !DILocation(line: 451, column: 14, scope: !12427)
!12429 = !DILocation(line: 451, column: 11, scope: !12427)
!12430 = !DILocation(line: 451, column: 9, scope: !12422)
!12431 = !DILocation(line: 452, column: 11, scope: !12427)
!12432 = !DILocation(line: 452, column: 8, scope: !12427)
!12433 = !DILocation(line: 452, column: 6, scope: !12427)
!12434 = !DILocation(line: 453, column: 9, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 453, column: 9)
!12436 = !DILocation(line: 453, column: 14, scope: !12435)
!12437 = !DILocation(line: 453, column: 11, scope: !12435)
!12438 = !DILocation(line: 453, column: 9, scope: !12422)
!12439 = !DILocation(line: 454, column: 6, scope: !12435)
!12440 = !DILocation(line: 455, column: 28, scope: !12422)
!12441 = !DILocation(line: 455, column: 36, scope: !12422)
!12442 = !DILocation(line: 455, column: 42, scope: !12422)
!12443 = !DILocation(line: 455, column: 46, scope: !12422)
!12444 = !DILocation(line: 455, column: 44, scope: !12422)
!12445 = !DILocation(line: 455, column: 5, scope: !12422)
!12446 = !DILocation(line: 455, column: 13, scope: !12422)
!12447 = !DILocation(line: 455, column: 19, scope: !12422)
!12448 = !DILocation(line: 455, column: 23, scope: !12422)
!12449 = !DILocation(line: 455, column: 21, scope: !12422)
!12450 = !DILocation(line: 455, column: 26, scope: !12422)
!12451 = !DILocation(line: 456, column: 9, scope: !12422)
!12452 = !DILocation(line: 456, column: 7, scope: !12422)
!12453 = distinct !{!12453, !12420, !12454}
!12454 = !DILocation(line: 457, column: 4, scope: !12411)
!12455 = !DILocation(line: 458, column: 27, scope: !12411)
!12456 = !DILocation(line: 458, column: 4, scope: !12411)
!12457 = !DILocation(line: 458, column: 12, scope: !12411)
!12458 = !DILocation(line: 458, column: 18, scope: !12411)
!12459 = !DILocation(line: 458, column: 22, scope: !12411)
!12460 = !DILocation(line: 458, column: 20, scope: !12411)
!12461 = !DILocation(line: 458, column: 25, scope: !12411)
!12462 = !DILocation(line: 459, column: 3, scope: !12411)
!12463 = !DILocation(line: 446, column: 32, scope: !12404)
!12464 = !DILocation(line: 446, column: 3, scope: !12404)
!12465 = distinct !{!12465, !12409, !12466}
!12466 = !DILocation(line: 459, column: 3, scope: !12401)
!12467 = !DILocation(line: 460, column: 25, scope: !12366)
!12468 = !DILocation(line: 460, column: 29, scope: !12366)
!12469 = !DILocation(line: 460, column: 36, scope: !12366)
!12470 = !DILocation(line: 460, column: 3, scope: !12366)
!12471 = !DILocation(line: 461, column: 2, scope: !12366)
!12472 = !DILocation(line: 462, column: 1, scope: !12348)
!12473 = distinct !DISubprogram(name: "scr_memmovew", scope: !11306, file: !11306, line: 55, type: !11307, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12474 = !DILocalVariable(name: "d", arg: 1, scope: !12473, file: !11306, line: 55, type: !194)
!12475 = !DILocation(line: 55, column: 38, scope: !12473)
!12476 = !DILocalVariable(name: "s", arg: 2, scope: !12473, file: !11306, line: 55, type: !10502)
!12477 = !DILocation(line: 55, column: 52, scope: !12473)
!12478 = !DILocalVariable(name: "count", arg: 3, scope: !12473, file: !11306, line: 55, type: !7)
!12479 = !DILocation(line: 55, column: 68, scope: !12473)
!12480 = !DILocation(line: 68, column: 10, scope: !12473)
!12481 = !DILocation(line: 68, column: 2, scope: !12473)
!12482 = !DILocation(line: 68, column: 13, scope: !12473)
!12483 = !DILocation(line: 68, column: 16, scope: !12473)
!12484 = !DILocation(line: 70, column: 1, scope: !12473)
!12485 = distinct !DISubprogram(name: "show_tty_active", scope: !3, file: !3, line: 3542, type: !4756, scopeLine: 3544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12486 = !DILocalVariable(name: "dev", arg: 1, scope: !12485, file: !3, line: 3542, type: !328)
!12487 = !DILocation(line: 3542, column: 47, scope: !12485)
!12488 = !DILocalVariable(name: "attr", arg: 2, scope: !12485, file: !3, line: 3543, type: !4758)
!12489 = !DILocation(line: 3543, column: 30, scope: !12485)
!12490 = !DILocalVariable(name: "buf", arg: 3, scope: !12485, file: !3, line: 3543, type: !202)
!12491 = !DILocation(line: 3543, column: 42, scope: !12485)
!12492 = !DILocation(line: 3545, column: 17, scope: !12485)
!12493 = !DILocation(line: 3545, column: 33, scope: !12485)
!12494 = !DILocation(line: 3545, column: 44, scope: !12485)
!12495 = !DILocation(line: 3545, column: 9, scope: !12485)
!12496 = !DILocation(line: 3545, column: 2, scope: !12485)
!12497 = distinct !DISubprogram(name: "con_install", scope: !3, file: !3, line: 3342, type: !3938, scopeLine: 3343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12498 = !DILocalVariable(name: "driver", arg: 1, scope: !12497, file: !3, line: 3342, type: !3878)
!12499 = !DILocation(line: 3342, column: 43, scope: !12497)
!12500 = !DILocalVariable(name: "tty", arg: 2, scope: !12497, file: !3, line: 3342, type: !314)
!12501 = !DILocation(line: 3342, column: 70, scope: !12497)
!12502 = !DILocalVariable(name: "currcons", scope: !12497, file: !3, line: 3344, type: !7)
!12503 = !DILocation(line: 3344, column: 15, scope: !12497)
!12504 = !DILocation(line: 3344, column: 26, scope: !12497)
!12505 = !DILocation(line: 3344, column: 31, scope: !12497)
!12506 = !DILocalVariable(name: "vc", scope: !12497, file: !3, line: 3345, type: !220)
!12507 = !DILocation(line: 3345, column: 18, scope: !12497)
!12508 = !DILocalVariable(name: "ret", scope: !12497, file: !3, line: 3346, type: !215)
!12509 = !DILocation(line: 3346, column: 6, scope: !12497)
!12510 = !DILocation(line: 3348, column: 2, scope: !12497)
!12511 = !DILocation(line: 3349, column: 20, scope: !12497)
!12512 = !DILocation(line: 3349, column: 8, scope: !12497)
!12513 = !DILocation(line: 3349, column: 6, scope: !12497)
!12514 = !DILocation(line: 3350, column: 6, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 3350, column: 6)
!12516 = !DILocation(line: 3350, column: 6, scope: !12497)
!12517 = !DILocation(line: 3351, column: 3, scope: !12515)
!12518 = !DILocation(line: 3353, column: 15, scope: !12497)
!12519 = !DILocation(line: 3353, column: 7, scope: !12497)
!12520 = !DILocation(line: 3353, column: 25, scope: !12497)
!12521 = !DILocation(line: 3353, column: 5, scope: !12497)
!12522 = !DILocation(line: 3356, column: 6, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 3356, column: 6)
!12524 = !DILocation(line: 3356, column: 10, scope: !12523)
!12525 = !DILocation(line: 3356, column: 15, scope: !12523)
!12526 = !DILocation(line: 3356, column: 6, scope: !12497)
!12527 = !DILocation(line: 3357, column: 7, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3356, column: 20)
!12529 = !DILocation(line: 3358, column: 3, scope: !12528)
!12530 = !DILocation(line: 3361, column: 26, scope: !12497)
!12531 = !DILocation(line: 3361, column: 30, scope: !12497)
!12532 = !DILocation(line: 3361, column: 36, scope: !12497)
!12533 = !DILocation(line: 3361, column: 44, scope: !12497)
!12534 = !DILocation(line: 3361, column: 8, scope: !12497)
!12535 = !DILocation(line: 3361, column: 6, scope: !12497)
!12536 = !DILocation(line: 3362, column: 6, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 3362, column: 6)
!12538 = !DILocation(line: 3362, column: 6, scope: !12497)
!12539 = !DILocation(line: 3363, column: 3, scope: !12537)
!12540 = !DILocation(line: 3365, column: 21, scope: !12497)
!12541 = !DILocation(line: 3365, column: 2, scope: !12497)
!12542 = !DILocation(line: 3365, column: 7, scope: !12497)
!12543 = !DILocation(line: 3365, column: 19, scope: !12497)
!12544 = !DILocation(line: 3366, column: 17, scope: !12497)
!12545 = !DILocation(line: 3366, column: 2, scope: !12497)
!12546 = !DILocation(line: 3366, column: 6, scope: !12497)
!12547 = !DILocation(line: 3366, column: 11, scope: !12497)
!12548 = !DILocation(line: 3366, column: 15, scope: !12497)
!12549 = !DILocation(line: 3367, column: 16, scope: !12497)
!12550 = !DILocation(line: 3367, column: 20, scope: !12497)
!12551 = !DILocation(line: 3367, column: 2, scope: !12497)
!12552 = !DILocation(line: 3369, column: 7, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 3369, column: 6)
!12554 = !DILocation(line: 3369, column: 12, scope: !12553)
!12555 = !DILocation(line: 3369, column: 20, scope: !12553)
!12556 = !DILocation(line: 3369, column: 27, scope: !12553)
!12557 = !DILocation(line: 3369, column: 31, scope: !12553)
!12558 = !DILocation(line: 3369, column: 36, scope: !12553)
!12559 = !DILocation(line: 3369, column: 44, scope: !12553)
!12560 = !DILocation(line: 3369, column: 6, scope: !12497)
!12561 = !DILocation(line: 3370, column: 33, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12553, file: !3, line: 3369, column: 52)
!12563 = !DILocation(line: 3370, column: 25, scope: !12562)
!12564 = !DILocation(line: 3370, column: 43, scope: !12562)
!12565 = !DILocation(line: 3370, column: 46, scope: !12562)
!12566 = !DILocation(line: 3370, column: 3, scope: !12562)
!12567 = !DILocation(line: 3370, column: 8, scope: !12562)
!12568 = !DILocation(line: 3370, column: 16, scope: !12562)
!12569 = !DILocation(line: 3370, column: 23, scope: !12562)
!12570 = !DILocation(line: 3371, column: 33, scope: !12562)
!12571 = !DILocation(line: 3371, column: 25, scope: !12562)
!12572 = !DILocation(line: 3371, column: 43, scope: !12562)
!12573 = !DILocation(line: 3371, column: 46, scope: !12562)
!12574 = !DILocation(line: 3371, column: 3, scope: !12562)
!12575 = !DILocation(line: 3371, column: 8, scope: !12562)
!12576 = !DILocation(line: 3371, column: 16, scope: !12562)
!12577 = !DILocation(line: 3371, column: 23, scope: !12562)
!12578 = !DILocation(line: 3372, column: 2, scope: !12562)
!12579 = !DILocation(line: 3373, column: 6, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 3373, column: 6)
!12581 = !DILocation(line: 3373, column: 10, scope: !12580)
!12582 = !DILocation(line: 3373, column: 6, scope: !12497)
!12583 = !DILocation(line: 3374, column: 3, scope: !12580)
!12584 = !DILocation(line: 3374, column: 8, scope: !12580)
!12585 = !DILocation(line: 3374, column: 16, scope: !12580)
!12586 = !DILocation(line: 3374, column: 24, scope: !12580)
!12587 = !DILocation(line: 3376, column: 3, scope: !12580)
!12588 = !DILocation(line: 3376, column: 8, scope: !12580)
!12589 = !DILocation(line: 3376, column: 16, scope: !12580)
!12590 = !DILocation(line: 3376, column: 24, scope: !12580)
!12591 = !DILabel(scope: !12497, name: "unlock", file: !3, line: 3377)
!12592 = !DILocation(line: 3377, column: 1, scope: !12497)
!12593 = !DILocation(line: 3378, column: 2, scope: !12497)
!12594 = !DILocation(line: 3379, column: 9, scope: !12497)
!12595 = !DILocation(line: 3379, column: 2, scope: !12497)
!12596 = distinct !DISubprogram(name: "con_open", scope: !3, file: !3, line: 3382, type: !3946, scopeLine: 3383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12597 = !DILocalVariable(name: "tty", arg: 1, scope: !12596, file: !3, line: 3382, type: !314)
!12598 = !DILocation(line: 3382, column: 40, scope: !12596)
!12599 = !DILocalVariable(name: "filp", arg: 2, scope: !12596, file: !3, line: 3382, type: !447)
!12600 = !DILocation(line: 3382, column: 58, scope: !12596)
!12601 = !DILocation(line: 3385, column: 2, scope: !12596)
!12602 = distinct !DISubprogram(name: "con_close", scope: !3, file: !3, line: 3389, type: !3950, scopeLine: 3390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12603 = !DILocalVariable(name: "tty", arg: 1, scope: !12602, file: !3, line: 3389, type: !314)
!12604 = !DILocation(line: 3389, column: 42, scope: !12602)
!12605 = !DILocalVariable(name: "filp", arg: 2, scope: !12602, file: !3, line: 3389, type: !447)
!12606 = !DILocation(line: 3389, column: 60, scope: !12602)
!12607 = !DILocation(line: 3392, column: 1, scope: !12602)
!12608 = distinct !DISubprogram(name: "con_shutdown", scope: !3, file: !3, line: 3394, type: !3954, scopeLine: 3395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12609 = !DILocalVariable(name: "tty", arg: 1, scope: !12608, file: !3, line: 3394, type: !314)
!12610 = !DILocation(line: 3394, column: 45, scope: !12608)
!12611 = !DILocalVariable(name: "vc", scope: !12608, file: !3, line: 3396, type: !220)
!12612 = !DILocation(line: 3396, column: 18, scope: !12608)
!12613 = !DILocation(line: 3396, column: 23, scope: !12608)
!12614 = !DILocation(line: 3396, column: 28, scope: !12608)
!12615 = !DILocation(line: 3397, column: 2, scope: !12608)
!12616 = !DILocation(line: 3397, column: 2, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12618, file: !3, line: 3397, column: 2)
!12618 = distinct !DILexicalBlock(scope: !12608, file: !3, line: 3397, column: 2)
!12619 = !DILocation(line: 3397, column: 2, scope: !12618)
!12620 = !DILocation(line: 3397, column: 2, scope: !12621)
!12621 = distinct !DILexicalBlock(scope: !12617, file: !3, line: 3397, column: 2)
!12622 = !DILocation(line: 3397, column: 2, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 3397, column: 2)
!12624 = !DILocation(line: 3397, column: 2, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 3397, column: 2)
!12626 = !{i32 -2141733928, i32 -2141733899, i32 -2141733853, i32 -2141733795, i32 -2141733741, i32 -2141733687, i32 -2141733632, i32 -2141733601}
!12627 = !DILocation(line: 3397, column: 2, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12629, file: !3, line: 3397, column: 2)
!12629 = distinct !DILexicalBlock(scope: !12621, file: !3, line: 3397, column: 2)
!12630 = !{i32 -2141733158, i32 -2141733151, i32 -2141733097, i32 -2141733066, i32 -2141733036}
!12631 = !DILocation(line: 3397, column: 2, scope: !12629)
!12632 = !DILocation(line: 3398, column: 2, scope: !12608)
!12633 = !DILocation(line: 3399, column: 2, scope: !12608)
!12634 = !DILocation(line: 3399, column: 6, scope: !12608)
!12635 = !DILocation(line: 3399, column: 11, scope: !12608)
!12636 = !DILocation(line: 3399, column: 15, scope: !12608)
!12637 = !DILocation(line: 3400, column: 2, scope: !12608)
!12638 = !DILocation(line: 3401, column: 1, scope: !12608)
!12639 = distinct !DISubprogram(name: "con_cleanup", scope: !3, file: !3, line: 3403, type: !3954, scopeLine: 3404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12640 = !DILocalVariable(name: "tty", arg: 1, scope: !12639, file: !3, line: 3403, type: !314)
!12641 = !DILocation(line: 3403, column: 44, scope: !12639)
!12642 = !DILocalVariable(name: "vc", scope: !12639, file: !3, line: 3405, type: !220)
!12643 = !DILocation(line: 3405, column: 18, scope: !12639)
!12644 = !DILocation(line: 3405, column: 23, scope: !12639)
!12645 = !DILocation(line: 3405, column: 28, scope: !12639)
!12646 = !DILocation(line: 3407, column: 16, scope: !12639)
!12647 = !DILocation(line: 3407, column: 20, scope: !12639)
!12648 = !DILocation(line: 3407, column: 2, scope: !12639)
!12649 = !DILocation(line: 3408, column: 1, scope: !12639)
!12650 = distinct !DISubprogram(name: "con_write", scope: !3, file: !3, line: 3251, type: !3959, scopeLine: 3252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12651 = !DILocalVariable(name: "tty", arg: 1, scope: !12650, file: !3, line: 3251, type: !314)
!12652 = !DILocation(line: 3251, column: 41, scope: !12650)
!12653 = !DILocalVariable(name: "buf", arg: 2, scope: !12650, file: !3, line: 3251, type: !513)
!12654 = !DILocation(line: 3251, column: 67, scope: !12650)
!12655 = !DILocalVariable(name: "count", arg: 3, scope: !12650, file: !3, line: 3251, type: !215)
!12656 = !DILocation(line: 3251, column: 76, scope: !12650)
!12657 = !DILocalVariable(name: "retval", scope: !12650, file: !3, line: 3253, type: !215)
!12658 = !DILocation(line: 3253, column: 6, scope: !12650)
!12659 = !DILocation(line: 3255, column: 24, scope: !12650)
!12660 = !DILocation(line: 3255, column: 29, scope: !12650)
!12661 = !DILocation(line: 3255, column: 34, scope: !12650)
!12662 = !DILocation(line: 3255, column: 11, scope: !12650)
!12663 = !DILocation(line: 3255, column: 9, scope: !12650)
!12664 = !DILocation(line: 3256, column: 18, scope: !12650)
!12665 = !DILocation(line: 3256, column: 2, scope: !12650)
!12666 = !DILocation(line: 3258, column: 9, scope: !12650)
!12667 = !DILocation(line: 3258, column: 2, scope: !12650)
!12668 = distinct !DISubprogram(name: "con_put_char", scope: !3, file: !3, line: 3261, type: !3963, scopeLine: 3262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12669 = !DILocalVariable(name: "pfo_val__", scope: !12670, file: !12671, line: 26, type: !505)
!12670 = distinct !DILexicalBlock(scope: !12672, file: !12671, line: 26, column: 9)
!12671 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!12672 = distinct !DISubprogram(name: "preempt_count", scope: !12671, file: !12671, line: 24, type: !4815, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12673 = !DILocation(line: 26, column: 9, scope: !12670, inlinedAt: !12674)
!12674 = distinct !DILocation(line: 3263, column: 6, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 3263, column: 6)
!12676 = !DILocalVariable(name: "tty", arg: 1, scope: !12668, file: !3, line: 3261, type: !314)
!12677 = !DILocation(line: 3261, column: 44, scope: !12668)
!12678 = !DILocalVariable(name: "ch", arg: 2, scope: !12668, file: !3, line: 3261, type: !515)
!12679 = !DILocation(line: 3261, column: 63, scope: !12668)
!12680 = !{i32 -2145442493}
!12681 = !DILocation(line: 26, column: 41, scope: !12672, inlinedAt: !12674)
!12682 = !DILocation(line: 3263, column: 6, scope: !12675)
!12683 = !DILocation(line: 3263, column: 6, scope: !12668)
!12684 = !DILocation(line: 3264, column: 3, scope: !12675)
!12685 = !DILocation(line: 3265, column: 22, scope: !12668)
!12686 = !DILocation(line: 3265, column: 9, scope: !12668)
!12687 = !DILocation(line: 3265, column: 2, scope: !12668)
!12688 = !DILocation(line: 3266, column: 1, scope: !12668)
!12689 = distinct !DISubprogram(name: "con_flush_chars", scope: !3, file: !3, line: 3324, type: !3954, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12690 = !DILocation(line: 26, column: 9, scope: !12670, inlinedAt: !12691)
!12691 = distinct !DILocation(line: 3328, column: 6, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12689, file: !3, line: 3328, column: 6)
!12693 = !DILocalVariable(name: "tty", arg: 1, scope: !12689, file: !3, line: 3324, type: !314)
!12694 = !DILocation(line: 3324, column: 48, scope: !12689)
!12695 = !DILocalVariable(name: "vc", scope: !12689, file: !3, line: 3326, type: !220)
!12696 = !DILocation(line: 3326, column: 18, scope: !12689)
!12697 = !DILocation(line: 26, column: 41, scope: !12672, inlinedAt: !12691)
!12698 = !DILocation(line: 3328, column: 6, scope: !12692)
!12699 = !DILocation(line: 3328, column: 6, scope: !12689)
!12700 = !DILocation(line: 3329, column: 3, scope: !12692)
!12701 = !DILocation(line: 3332, column: 2, scope: !12689)
!12702 = !DILocation(line: 3333, column: 7, scope: !12689)
!12703 = !DILocation(line: 3333, column: 12, scope: !12689)
!12704 = !DILocation(line: 3333, column: 5, scope: !12689)
!12705 = !DILocation(line: 3334, column: 6, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12689, file: !3, line: 3334, column: 6)
!12707 = !DILocation(line: 3334, column: 6, scope: !12689)
!12708 = !DILocation(line: 3335, column: 14, scope: !12706)
!12709 = !DILocation(line: 3335, column: 3, scope: !12706)
!12710 = !DILocation(line: 3336, column: 2, scope: !12689)
!12711 = !DILocation(line: 3337, column: 1, scope: !12689)
!12712 = distinct !DISubprogram(name: "con_write_room", scope: !3, file: !3, line: 3268, type: !3968, scopeLine: 3269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12713 = !DILocalVariable(name: "tty", arg: 1, scope: !12712, file: !3, line: 3268, type: !314)
!12714 = !DILocation(line: 3268, column: 46, scope: !12712)
!12715 = !DILocation(line: 3270, column: 6, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12712, file: !3, line: 3270, column: 6)
!12717 = !DILocation(line: 3270, column: 11, scope: !12716)
!12718 = !DILocation(line: 3270, column: 6, scope: !12712)
!12719 = !DILocation(line: 3271, column: 3, scope: !12716)
!12720 = !DILocation(line: 3272, column: 2, scope: !12712)
!12721 = !DILocation(line: 3273, column: 1, scope: !12712)
!12722 = distinct !DISubprogram(name: "con_chars_in_buffer", scope: !3, file: !3, line: 3275, type: !3968, scopeLine: 3276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12723 = !DILocalVariable(name: "tty", arg: 1, scope: !12722, file: !3, line: 3275, type: !314)
!12724 = !DILocation(line: 3275, column: 51, scope: !12722)
!12725 = !DILocation(line: 3277, column: 2, scope: !12722)
!12726 = distinct !DISubprogram(name: "con_throttle", scope: !3, file: !3, line: 3285, type: !3954, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12727 = !DILocalVariable(name: "tty", arg: 1, scope: !12726, file: !3, line: 3285, type: !314)
!12728 = !DILocation(line: 3285, column: 45, scope: !12726)
!12729 = !DILocation(line: 3287, column: 1, scope: !12726)
!12730 = distinct !DISubprogram(name: "con_unthrottle", scope: !3, file: !3, line: 3289, type: !3954, scopeLine: 3290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12731 = !DILocalVariable(name: "tty", arg: 1, scope: !12730, file: !3, line: 3289, type: !314)
!12732 = !DILocation(line: 3289, column: 47, scope: !12730)
!12733 = !DILocalVariable(name: "vc", scope: !12730, file: !3, line: 3291, type: !220)
!12734 = !DILocation(line: 3291, column: 18, scope: !12730)
!12735 = !DILocation(line: 3291, column: 23, scope: !12730)
!12736 = !DILocation(line: 3291, column: 28, scope: !12730)
!12737 = !DILocation(line: 3293, column: 2, scope: !12730)
!12738 = !DILocation(line: 3294, column: 1, scope: !12730)
!12739 = distinct !DISubprogram(name: "con_stop", scope: !3, file: !3, line: 3299, type: !3954, scopeLine: 3300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12740 = !DILocalVariable(name: "tty", arg: 1, scope: !12739, file: !3, line: 3299, type: !314)
!12741 = !DILocation(line: 3299, column: 41, scope: !12739)
!12742 = !DILocalVariable(name: "console_num", scope: !12739, file: !3, line: 3301, type: !215)
!12743 = !DILocation(line: 3301, column: 6, scope: !12739)
!12744 = !DILocation(line: 3302, column: 7, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 3302, column: 6)
!12746 = !DILocation(line: 3302, column: 6, scope: !12739)
!12747 = !DILocation(line: 3303, column: 3, scope: !12745)
!12748 = !DILocation(line: 3304, column: 16, scope: !12739)
!12749 = !DILocation(line: 3304, column: 21, scope: !12739)
!12750 = !DILocation(line: 3304, column: 14, scope: !12739)
!12751 = !DILocation(line: 3305, column: 25, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12739, file: !3, line: 3305, column: 6)
!12753 = !DILocation(line: 3305, column: 7, scope: !12752)
!12754 = !DILocation(line: 3305, column: 6, scope: !12739)
!12755 = !DILocation(line: 3306, column: 3, scope: !12752)
!12756 = !DILocation(line: 3307, column: 18, scope: !12739)
!12757 = !DILocation(line: 3307, column: 2, scope: !12739)
!12758 = !DILocation(line: 3308, column: 1, scope: !12739)
!12759 = distinct !DISubprogram(name: "con_start", scope: !3, file: !3, line: 3313, type: !3954, scopeLine: 3314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12760 = !DILocalVariable(name: "tty", arg: 1, scope: !12759, file: !3, line: 3313, type: !314)
!12761 = !DILocation(line: 3313, column: 42, scope: !12759)
!12762 = !DILocalVariable(name: "console_num", scope: !12759, file: !3, line: 3315, type: !215)
!12763 = !DILocation(line: 3315, column: 6, scope: !12759)
!12764 = !DILocation(line: 3316, column: 7, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 3316, column: 6)
!12766 = !DILocation(line: 3316, column: 6, scope: !12759)
!12767 = !DILocation(line: 3317, column: 3, scope: !12765)
!12768 = !DILocation(line: 3318, column: 16, scope: !12759)
!12769 = !DILocation(line: 3318, column: 21, scope: !12759)
!12770 = !DILocation(line: 3318, column: 14, scope: !12759)
!12771 = !DILocation(line: 3319, column: 25, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 3319, column: 6)
!12773 = !DILocation(line: 3319, column: 7, scope: !12772)
!12774 = !DILocation(line: 3319, column: 6, scope: !12759)
!12775 = !DILocation(line: 3320, column: 3, scope: !12772)
!12776 = !DILocation(line: 3321, column: 19, scope: !12759)
!12777 = !DILocation(line: 3321, column: 2, scope: !12759)
!12778 = !DILocation(line: 3322, column: 1, scope: !12759)
!12779 = distinct !DISubprogram(name: "vt_resize", scope: !3, file: !3, line: 1361, type: !4009, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12780 = !DILocalVariable(name: "tty", arg: 1, scope: !12779, file: !3, line: 1361, type: !314)
!12781 = !DILocation(line: 1361, column: 41, scope: !12779)
!12782 = !DILocalVariable(name: "ws", arg: 2, scope: !12779, file: !3, line: 1361, type: !4011)
!12783 = !DILocation(line: 1361, column: 62, scope: !12779)
!12784 = !DILocalVariable(name: "vc", scope: !12779, file: !3, line: 1363, type: !220)
!12785 = !DILocation(line: 1363, column: 18, scope: !12779)
!12786 = !DILocation(line: 1363, column: 23, scope: !12779)
!12787 = !DILocation(line: 1363, column: 28, scope: !12779)
!12788 = !DILocalVariable(name: "ret", scope: !12779, file: !3, line: 1364, type: !215)
!12789 = !DILocation(line: 1364, column: 6, scope: !12779)
!12790 = !DILocation(line: 1366, column: 2, scope: !12779)
!12791 = !DILocation(line: 1367, column: 21, scope: !12779)
!12792 = !DILocation(line: 1367, column: 26, scope: !12779)
!12793 = !DILocation(line: 1367, column: 30, scope: !12779)
!12794 = !DILocation(line: 1367, column: 34, scope: !12779)
!12795 = !DILocation(line: 1367, column: 42, scope: !12779)
!12796 = !DILocation(line: 1367, column: 46, scope: !12779)
!12797 = !DILocation(line: 1367, column: 8, scope: !12779)
!12798 = !DILocation(line: 1367, column: 6, scope: !12779)
!12799 = !DILocation(line: 1368, column: 2, scope: !12779)
!12800 = !DILocation(line: 1369, column: 9, scope: !12779)
!12801 = !DILocation(line: 1369, column: 2, scope: !12779)
!12802 = distinct !DISubprogram(name: "tty_port_get", scope: !225, file: !225, line: 604, type: !12803, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12803 = !DISubroutineType(types: !12804)
!12804 = !{!3922, !3922}
!12805 = !DILocalVariable(name: "port", arg: 1, scope: !12802, file: !225, line: 604, type: !3922)
!12806 = !DILocation(line: 604, column: 62, scope: !12802)
!12807 = !DILocation(line: 606, column: 6, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12802, file: !225, line: 606, column: 6)
!12809 = !DILocation(line: 606, column: 11, scope: !12808)
!12810 = !DILocation(line: 606, column: 36, scope: !12808)
!12811 = !DILocation(line: 606, column: 42, scope: !12808)
!12812 = !DILocation(line: 606, column: 14, scope: !12808)
!12813 = !DILocation(line: 606, column: 6, scope: !12802)
!12814 = !DILocation(line: 607, column: 10, scope: !12808)
!12815 = !DILocation(line: 607, column: 3, scope: !12808)
!12816 = !DILocation(line: 608, column: 2, scope: !12802)
!12817 = !DILocation(line: 609, column: 1, scope: !12802)
!12818 = distinct !DISubprogram(name: "kref_get_unless_zero", scope: !320, file: !320, line: 109, type: !12819, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12819 = !DISubroutineType(types: !12820)
!12820 = !{!215, !12821}
!12821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!12822 = !DILocalVariable(name: "kref", arg: 1, scope: !12818, file: !320, line: 109, type: !12821)
!12823 = !DILocation(line: 109, column: 66, scope: !12818)
!12824 = !DILocation(line: 111, column: 32, scope: !12818)
!12825 = !DILocation(line: 111, column: 38, scope: !12818)
!12826 = !DILocation(line: 111, column: 9, scope: !12818)
!12827 = !DILocation(line: 111, column: 2, scope: !12818)
!12828 = distinct !DISubprogram(name: "refcount_inc_not_zero", scope: !183, file: !183, line: 243, type: !12829, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12829 = !DISubroutineType(types: !12830)
!12830 = !{!578, !12831}
!12831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!12832 = !DILocalVariable(name: "r", arg: 1, scope: !12828, file: !183, line: 243, type: !12831)
!12833 = !DILocation(line: 243, column: 67, scope: !12828)
!12834 = !DILocation(line: 245, column: 33, scope: !12828)
!12835 = !DILocation(line: 245, column: 9, scope: !12828)
!12836 = !DILocation(line: 245, column: 2, scope: !12828)
!12837 = distinct !DISubprogram(name: "__refcount_inc_not_zero", scope: !183, file: !183, line: 225, type: !12838, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12838 = !DISubroutineType(types: !12839)
!12839 = !{!578, !12831, !794}
!12840 = !DILocalVariable(name: "r", arg: 1, scope: !12837, file: !183, line: 225, type: !12831)
!12841 = !DILocation(line: 225, column: 69, scope: !12837)
!12842 = !DILocalVariable(name: "oldp", arg: 2, scope: !12837, file: !183, line: 225, type: !794)
!12843 = !DILocation(line: 225, column: 77, scope: !12837)
!12844 = !DILocation(line: 227, column: 36, scope: !12837)
!12845 = !DILocation(line: 227, column: 39, scope: !12837)
!12846 = !DILocation(line: 227, column: 9, scope: !12837)
!12847 = !DILocation(line: 227, column: 2, scope: !12837)
!12848 = distinct !DISubprogram(name: "__refcount_add_not_zero", scope: !183, file: !183, line: 150, type: !12849, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12849 = !DISubroutineType(types: !12850)
!12850 = !{!578, !215, !12831, !794}
!12851 = !DILocalVariable(name: "v", arg: 1, scope: !12852, file: !4856, line: 200, type: !12855)
!12852 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !4856, file: !4856, line: 200, type: !12853, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12853 = !DISubroutineType(types: !12854)
!12854 = !{!578, !12855, !794, !215}
!12855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!12856 = !DILocation(line: 200, column: 63, scope: !12852, inlinedAt: !12857)
!12857 = distinct !DILocation(line: 729, column: 9, scope: !12858, inlinedAt: !12859)
!12858 = distinct !DISubprogram(name: "atomic_try_cmpxchg_relaxed", scope: !4864, file: !4864, line: 725, type: !12853, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12859 = distinct !DILocation(line: 157, column: 12, scope: !12848)
!12860 = !DILocalVariable(name: "old", arg: 2, scope: !12852, file: !4856, line: 200, type: !794)
!12861 = !DILocation(line: 200, column: 71, scope: !12852, inlinedAt: !12857)
!12862 = !DILocalVariable(name: "new", arg: 3, scope: !12852, file: !4856, line: 200, type: !215)
!12863 = !DILocation(line: 200, column: 80, scope: !12852, inlinedAt: !12857)
!12864 = !DILocalVariable(name: "success", scope: !12865, file: !4856, line: 202, type: !578)
!12865 = distinct !DILexicalBlock(scope: !12852, file: !4856, line: 202, column: 9)
!12866 = !DILocation(line: 202, column: 9, scope: !12865, inlinedAt: !12857)
!12867 = !DILocalVariable(name: "_old", scope: !12865, file: !4856, line: 202, type: !794)
!12868 = !DILocalVariable(name: "__old", scope: !12865, file: !4856, line: 202, type: !215)
!12869 = !DILocalVariable(name: "__new", scope: !12865, file: !4856, line: 202, type: !215)
!12870 = !DILocalVariable(name: "__ptr", scope: !12865, file: !4856, line: 202, type: !4410)
!12871 = !DILocation(line: 99, column: 79, scope: !11073, inlinedAt: !12872)
!12872 = distinct !DILocation(line: 728, column: 2, scope: !12858, inlinedAt: !12859)
!12873 = !DILocation(line: 99, column: 89, scope: !11073, inlinedAt: !12872)
!12874 = !DILocation(line: 99, column: 79, scope: !11073, inlinedAt: !12875)
!12875 = distinct !DILocation(line: 727, column: 2, scope: !12858, inlinedAt: !12859)
!12876 = !DILocation(line: 99, column: 89, scope: !11073, inlinedAt: !12875)
!12877 = !DILocalVariable(name: "v", arg: 1, scope: !12858, file: !4864, line: 725, type: !12855)
!12878 = !DILocation(line: 725, column: 38, scope: !12858, inlinedAt: !12859)
!12879 = !DILocalVariable(name: "old", arg: 2, scope: !12858, file: !4864, line: 725, type: !794)
!12880 = !DILocation(line: 725, column: 46, scope: !12858, inlinedAt: !12859)
!12881 = !DILocalVariable(name: "new", arg: 3, scope: !12858, file: !4864, line: 725, type: !215)
!12882 = !DILocation(line: 725, column: 55, scope: !12858, inlinedAt: !12859)
!12883 = !DILocalVariable(name: "i", arg: 1, scope: !12848, file: !183, line: 150, type: !215)
!12884 = !DILocation(line: 150, column: 61, scope: !12848)
!12885 = !DILocalVariable(name: "r", arg: 2, scope: !12848, file: !183, line: 150, type: !12831)
!12886 = !DILocation(line: 150, column: 76, scope: !12848)
!12887 = !DILocalVariable(name: "oldp", arg: 3, scope: !12848, file: !183, line: 150, type: !794)
!12888 = !DILocation(line: 150, column: 84, scope: !12848)
!12889 = !DILocalVariable(name: "old", scope: !12848, file: !183, line: 152, type: !215)
!12890 = !DILocation(line: 152, column: 6, scope: !12848)
!12891 = !DILocation(line: 152, column: 26, scope: !12848)
!12892 = !DILocation(line: 152, column: 12, scope: !12848)
!12893 = !DILocation(line: 154, column: 2, scope: !12848)
!12894 = !DILocation(line: 155, column: 8, scope: !12895)
!12895 = distinct !DILexicalBlock(scope: !12896, file: !183, line: 155, column: 7)
!12896 = distinct !DILexicalBlock(scope: !12848, file: !183, line: 154, column: 5)
!12897 = !DILocation(line: 155, column: 7, scope: !12896)
!12898 = !DILocation(line: 156, column: 4, scope: !12895)
!12899 = !DILocation(line: 157, column: 2, scope: !12896)
!12900 = !DILocation(line: 157, column: 40, scope: !12848)
!12901 = !DILocation(line: 157, column: 43, scope: !12848)
!12902 = !DILocation(line: 157, column: 55, scope: !12848)
!12903 = !DILocation(line: 157, column: 61, scope: !12848)
!12904 = !DILocation(line: 157, column: 59, scope: !12848)
!12905 = !DILocation(line: 727, column: 31, scope: !12858, inlinedAt: !12859)
!12906 = !DILocation(line: 101, column: 20, scope: !11073, inlinedAt: !12875)
!12907 = !DILocation(line: 101, column: 23, scope: !11073, inlinedAt: !12875)
!12908 = !DILocation(line: 101, column: 2, scope: !11073, inlinedAt: !12875)
!12909 = !DILocation(line: 102, column: 2, scope: !11073, inlinedAt: !12875)
!12910 = !DILocation(line: 728, column: 31, scope: !12858, inlinedAt: !12859)
!12911 = !DILocation(line: 101, column: 20, scope: !11073, inlinedAt: !12872)
!12912 = !DILocation(line: 101, column: 23, scope: !11073, inlinedAt: !12872)
!12913 = !DILocation(line: 101, column: 2, scope: !11073, inlinedAt: !12872)
!12914 = !DILocation(line: 102, column: 2, scope: !11073, inlinedAt: !12872)
!12915 = !DILocation(line: 729, column: 41, scope: !12858, inlinedAt: !12859)
!12916 = !DILocation(line: 729, column: 44, scope: !12858, inlinedAt: !12859)
!12917 = !DILocation(line: 729, column: 49, scope: !12858, inlinedAt: !12859)
!12918 = !{i32 -2146503946, i32 -2146503791}
!12919 = !DILocation(line: 202, column: 9, scope: !12920, inlinedAt: !12857)
!12920 = distinct !DILexicalBlock(scope: !12865, file: !4856, line: 202, column: 9)
!12921 = !DILocation(line: 202, column: 9, scope: !12852, inlinedAt: !12857)
!12922 = !DILocation(line: 157, column: 11, scope: !12848)
!12923 = distinct !{!12923, !12893, !12924}
!12924 = !DILocation(line: 157, column: 63, scope: !12848)
!12925 = !DILocation(line: 159, column: 6, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12848, file: !183, line: 159, column: 6)
!12927 = !DILocation(line: 159, column: 6, scope: !12848)
!12928 = !DILocation(line: 160, column: 11, scope: !12926)
!12929 = !DILocation(line: 160, column: 4, scope: !12926)
!12930 = !DILocation(line: 160, column: 9, scope: !12926)
!12931 = !DILocation(line: 160, column: 3, scope: !12926)
!12932 = !DILocation(line: 162, column: 6, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12848, file: !183, line: 162, column: 6)
!12934 = !DILocation(line: 162, column: 6, scope: !12848)
!12935 = !DILocation(line: 163, column: 26, scope: !12933)
!12936 = !DILocation(line: 163, column: 3, scope: !12933)
!12937 = !DILocation(line: 165, column: 9, scope: !12848)
!12938 = !DILocation(line: 165, column: 2, scope: !12848)
!12939 = distinct !DISubprogram(name: "refcount_read", scope: !183, file: !183, line: 145, type: !12940, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!12940 = !DISubroutineType(types: !12941)
!12941 = !{!7, !12942}
!12942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12943, size: 64)
!12943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!12944 = !DILocation(line: 23, column: 61, scope: !4855, inlinedAt: !12945)
!12945 = distinct !DILocation(line: 28, column: 9, scope: !4863, inlinedAt: !12946)
!12946 = distinct !DILocation(line: 147, column: 9, scope: !12939)
!12947 = !DILocation(line: 69, column: 73, scope: !4868, inlinedAt: !12948)
!12948 = distinct !DILocation(line: 27, column: 2, scope: !4863, inlinedAt: !12946)
!12949 = !DILocation(line: 69, column: 83, scope: !4868, inlinedAt: !12948)
!12950 = !DILocation(line: 25, column: 29, scope: !4863, inlinedAt: !12946)
!12951 = !DILocalVariable(name: "r", arg: 1, scope: !12939, file: !183, line: 145, type: !12942)
!12952 = !DILocation(line: 145, column: 60, scope: !12939)
!12953 = !DILocation(line: 147, column: 22, scope: !12939)
!12954 = !DILocation(line: 147, column: 25, scope: !12939)
!12955 = !DILocation(line: 27, column: 25, scope: !4863, inlinedAt: !12946)
!12956 = !DILocation(line: 71, column: 19, scope: !4868, inlinedAt: !12948)
!12957 = !DILocation(line: 71, column: 22, scope: !4868, inlinedAt: !12948)
!12958 = !DILocation(line: 71, column: 2, scope: !4868, inlinedAt: !12948)
!12959 = !DILocation(line: 72, column: 2, scope: !4868, inlinedAt: !12948)
!12960 = !DILocation(line: 28, column: 26, scope: !4863, inlinedAt: !12946)
!12961 = !DILocation(line: 29, column: 9, scope: !4855, inlinedAt: !12945)
!12962 = !DILocation(line: 147, column: 2, scope: !12939)
!12963 = !DILocation(line: 26, column: 9, scope: !12670, inlinedAt: !12964)
!12964 = distinct !DILocation(line: 2865, column: 6, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 2865, column: 6)
!12966 = !DILocalVariable(name: "tty", arg: 1, scope: !4767, file: !3, line: 2854, type: !314)
!12967 = !DILocation(line: 2854, column: 44, scope: !4767)
!12968 = !DILocalVariable(name: "buf", arg: 2, scope: !4767, file: !3, line: 2854, type: !513)
!12969 = !DILocation(line: 2854, column: 70, scope: !4767)
!12970 = !DILocalVariable(name: "count", arg: 3, scope: !4767, file: !3, line: 2854, type: !215)
!12971 = !DILocation(line: 2854, column: 79, scope: !4767)
!12972 = !DILocalVariable(name: "draw", scope: !4767, file: !3, line: 2856, type: !12973)
!12973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vc_draw_region", file: !3, line: 2567, size: 192, elements: !12974)
!12974 = !{!12975, !12976, !12977}
!12975 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !12973, file: !3, line: 2568, baseType: !193, size: 64)
!12976 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !12973, file: !3, line: 2568, baseType: !193, size: 64, offset: 64)
!12977 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !12973, file: !3, line: 2569, baseType: !215, size: 32, offset: 128)
!12978 = !DILocation(line: 2856, column: 24, scope: !4767)
!12979 = !DILocalVariable(name: "c", scope: !4767, file: !3, line: 2859, type: !215)
!12980 = !DILocation(line: 2859, column: 6, scope: !4767)
!12981 = !DILocalVariable(name: "tc", scope: !4767, file: !3, line: 2859, type: !215)
!12982 = !DILocation(line: 2859, column: 9, scope: !4767)
!12983 = !DILocalVariable(name: "n", scope: !4767, file: !3, line: 2859, type: !215)
!12984 = !DILocation(line: 2859, column: 13, scope: !4767)
!12985 = !DILocalVariable(name: "currcons", scope: !4767, file: !3, line: 2860, type: !7)
!12986 = !DILocation(line: 2860, column: 15, scope: !4767)
!12987 = !DILocalVariable(name: "vc", scope: !4767, file: !3, line: 2861, type: !220)
!12988 = !DILocation(line: 2861, column: 18, scope: !4767)
!12989 = !DILocalVariable(name: "param", scope: !4767, file: !3, line: 2862, type: !5654)
!12990 = !DILocation(line: 2862, column: 27, scope: !4767)
!12991 = !DILocalVariable(name: "rescan", scope: !4767, file: !3, line: 2863, type: !578)
!12992 = !DILocation(line: 2863, column: 7, scope: !4767)
!12993 = !DILocation(line: 26, column: 41, scope: !12672, inlinedAt: !12964)
!12994 = !DILocation(line: 2865, column: 6, scope: !12965)
!12995 = !DILocation(line: 2865, column: 6, scope: !4767)
!12996 = !DILocation(line: 2866, column: 10, scope: !12965)
!12997 = !DILocation(line: 2866, column: 3, scope: !12965)
!12998 = !DILocation(line: 2868, column: 2, scope: !4767)
!12999 = !DILocation(line: 2869, column: 7, scope: !4767)
!13000 = !DILocation(line: 2869, column: 12, scope: !4767)
!13001 = !DILocation(line: 2869, column: 5, scope: !4767)
!13002 = !DILocation(line: 2870, column: 6, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 2870, column: 6)
!13004 = !DILocation(line: 2870, column: 9, scope: !13003)
!13005 = !DILocation(line: 2870, column: 6, scope: !4767)
!13006 = !DILocation(line: 2871, column: 3, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !13003, file: !3, line: 2870, column: 18)
!13008 = !DILocation(line: 2872, column: 3, scope: !13007)
!13009 = !DILocation(line: 2873, column: 3, scope: !13007)
!13010 = !DILocation(line: 2876, column: 13, scope: !4767)
!13011 = !DILocation(line: 2876, column: 17, scope: !4767)
!13012 = !DILocation(line: 2876, column: 11, scope: !4767)
!13013 = !DILocation(line: 2877, column: 25, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 2877, column: 6)
!13015 = !DILocation(line: 2877, column: 7, scope: !13014)
!13016 = !DILocation(line: 2877, column: 6, scope: !4767)
!13017 = !DILocalVariable(name: "__ret_print_once", scope: !13018, file: !3, line: 2879, type: !578)
!13018 = distinct !DILexicalBlock(scope: !13019, file: !3, line: 2879, column: 3)
!13019 = distinct !DILexicalBlock(scope: !13014, file: !3, line: 2877, column: 36)
!13020 = !DILocation(line: 2879, column: 3, scope: !13018)
!13021 = !DILocation(line: 2879, column: 3, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13018, file: !3, line: 2879, column: 3)
!13023 = !DILocation(line: 2879, column: 3, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13022, file: !3, line: 2879, column: 3)
!13025 = !DILocation(line: 2880, column: 3, scope: !13019)
!13026 = !DILocation(line: 2881, column: 3, scope: !13019)
!13027 = !DILocation(line: 2886, column: 16, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 2886, column: 6)
!13029 = !DILocation(line: 2886, column: 6, scope: !13028)
!13030 = !DILocation(line: 2886, column: 6, scope: !4767)
!13031 = !DILocation(line: 2887, column: 15, scope: !13028)
!13032 = !DILocation(line: 2887, column: 3, scope: !13028)
!13033 = !DILocation(line: 2889, column: 13, scope: !4767)
!13034 = !DILocation(line: 2889, column: 8, scope: !4767)
!13035 = !DILocation(line: 2889, column: 11, scope: !4767)
!13036 = !DILocation(line: 2891, column: 2, scope: !4767)
!13037 = !DILocation(line: 2891, column: 10, scope: !4767)
!13038 = !DILocation(line: 2891, column: 15, scope: !4767)
!13039 = !DILocation(line: 2891, column: 23, scope: !4767)
!13040 = !DILocation(line: 2891, column: 26, scope: !4767)
!13041 = !DILocation(line: 0, scope: !4767)
!13042 = !DILocalVariable(name: "orig", scope: !13043, file: !3, line: 2892, type: !215)
!13043 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 2891, column: 33)
!13044 = !DILocation(line: 2892, column: 7, scope: !13043)
!13045 = !DILocation(line: 2892, column: 15, scope: !13043)
!13046 = !DILocation(line: 2892, column: 14, scope: !13043)
!13047 = !DILocation(line: 2893, column: 6, scope: !13043)
!13048 = !DILocation(line: 2894, column: 4, scope: !13043)
!13049 = !DILocation(line: 2895, column: 8, scope: !13043)
!13050 = !DILocation(line: 2895, column: 3, scope: !13043)
!13051 = !DILabel(scope: !13043, name: "rescan_last_byte", file: !3, line: 2896)
!13052 = !DILocation(line: 2896, column: 1, scope: !13043)
!13053 = !DILocation(line: 2897, column: 7, scope: !13043)
!13054 = !DILocation(line: 2897, column: 5, scope: !13043)
!13055 = !DILocation(line: 2898, column: 10, scope: !13043)
!13056 = !DILocation(line: 2900, column: 21, scope: !13043)
!13057 = !DILocation(line: 2900, column: 8, scope: !13043)
!13058 = !DILocation(line: 2900, column: 6, scope: !13043)
!13059 = !DILocation(line: 2901, column: 7, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 2901, column: 7)
!13061 = !DILocation(line: 2901, column: 10, scope: !13060)
!13062 = !DILocation(line: 2901, column: 7, scope: !13043)
!13063 = !DILocation(line: 2902, column: 4, scope: !13060)
!13064 = distinct !{!13064, !13036, !13065}
!13065 = !DILocation(line: 2920, column: 2, scope: !4767)
!13066 = !DILocation(line: 2904, column: 13, scope: !13043)
!13067 = !DILocation(line: 2904, column: 9, scope: !13043)
!13068 = !DILocation(line: 2904, column: 11, scope: !13043)
!13069 = !DILocation(line: 2906, column: 6, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 2905, column: 7)
!13071 = !DILocation(line: 2905, column: 7, scope: !13070)
!13072 = !DILocation(line: 2906, column: 14, scope: !13070)
!13073 = !DILocation(line: 2905, column: 7, scope: !13043)
!13074 = !DILocation(line: 2907, column: 4, scope: !13070)
!13075 = !DILocation(line: 2909, column: 21, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 2909, column: 7)
!13077 = !DILocation(line: 2909, column: 25, scope: !13076)
!13078 = !DILocation(line: 2909, column: 29, scope: !13076)
!13079 = !DILocation(line: 2909, column: 7, scope: !13076)
!13080 = !DILocation(line: 2909, column: 7, scope: !13043)
!13081 = !DILocation(line: 2910, column: 14, scope: !13082)
!13082 = distinct !DILexicalBlock(scope: !13076, file: !3, line: 2909, column: 33)
!13083 = !DILocation(line: 2910, column: 4, scope: !13082)
!13084 = !DILocation(line: 2911, column: 16, scope: !13082)
!13085 = !DILocation(line: 2911, column: 21, scope: !13082)
!13086 = !DILocation(line: 2911, column: 25, scope: !13082)
!13087 = !DILocation(line: 2911, column: 4, scope: !13082)
!13088 = !DILocation(line: 2912, column: 4, scope: !13082)
!13089 = !DILocation(line: 2915, column: 27, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 2915, column: 7)
!13091 = !DILocation(line: 2915, column: 31, scope: !13090)
!13092 = !DILocation(line: 2915, column: 35, scope: !13090)
!13093 = !DILocation(line: 2915, column: 7, scope: !13090)
!13094 = !DILocation(line: 2915, column: 45, scope: !13090)
!13095 = !DILocation(line: 2915, column: 7, scope: !13043)
!13096 = !DILocation(line: 2916, column: 4, scope: !13090)
!13097 = !DILocation(line: 2918, column: 7, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 2918, column: 7)
!13099 = !DILocation(line: 2918, column: 7, scope: !13043)
!13100 = !DILocation(line: 2919, column: 4, scope: !13098)
!13101 = !DILocation(line: 2921, column: 12, scope: !4767)
!13102 = !DILocation(line: 2921, column: 2, scope: !4767)
!13103 = !DILocation(line: 2922, column: 24, scope: !4767)
!13104 = !DILocation(line: 2922, column: 2, scope: !4767)
!13105 = !DILocation(line: 2923, column: 2, scope: !4767)
!13106 = !DILocation(line: 2924, column: 16, scope: !4767)
!13107 = !DILocation(line: 2924, column: 2, scope: !4767)
!13108 = !DILocation(line: 2925, column: 2, scope: !4767)
!13109 = !DILocation(line: 2926, column: 9, scope: !4767)
!13110 = !DILocation(line: 2926, column: 2, scope: !4767)
!13111 = !DILocation(line: 2927, column: 1, scope: !4767)
!13112 = distinct !DISubprogram(name: "vc_translate", scope: !3, file: !3, line: 2684, type: !13113, scopeLine: 2685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!13113 = !DISubroutineType(types: !13114)
!13114 = !{!215, !220, !794, !1003}
!13115 = !DILocalVariable(name: "vc", arg: 1, scope: !13112, file: !3, line: 2684, type: !220)
!13116 = !DILocation(line: 2684, column: 41, scope: !13112)
!13117 = !DILocalVariable(name: "c", arg: 2, scope: !13112, file: !3, line: 2684, type: !794)
!13118 = !DILocation(line: 2684, column: 50, scope: !13112)
!13119 = !DILocalVariable(name: "rescan", arg: 3, scope: !13112, file: !3, line: 2684, type: !1003)
!13120 = !DILocation(line: 2684, column: 59, scope: !13112)
!13121 = !DILocation(line: 2687, column: 6, scope: !13122)
!13122 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 2687, column: 6)
!13123 = !DILocation(line: 2687, column: 10, scope: !13122)
!13124 = !DILocation(line: 2687, column: 19, scope: !13122)
!13125 = !DILocation(line: 2687, column: 6, scope: !13112)
!13126 = !DILocation(line: 2688, column: 11, scope: !13122)
!13127 = !DILocation(line: 2688, column: 10, scope: !13122)
!13128 = !DILocation(line: 2688, column: 3, scope: !13122)
!13129 = !DILocation(line: 2690, column: 6, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 2690, column: 6)
!13131 = !DILocation(line: 2690, column: 10, scope: !13130)
!13132 = !DILocation(line: 2690, column: 17, scope: !13130)
!13133 = !DILocation(line: 2690, column: 21, scope: !13130)
!13134 = !DILocation(line: 2690, column: 25, scope: !13130)
!13135 = !DILocation(line: 2690, column: 6, scope: !13112)
!13136 = !DILocation(line: 2691, column: 36, scope: !13130)
!13137 = !DILocation(line: 2691, column: 41, scope: !13130)
!13138 = !DILocation(line: 2691, column: 40, scope: !13130)
!13139 = !DILocation(line: 2691, column: 44, scope: !13130)
!13140 = !DILocation(line: 2691, column: 15, scope: !13130)
!13141 = !DILocation(line: 2691, column: 11, scope: !13130)
!13142 = !DILocation(line: 2691, column: 13, scope: !13130)
!13143 = !DILocation(line: 2691, column: 3, scope: !13130)
!13144 = !DILocation(line: 2694, column: 28, scope: !13112)
!13145 = !DILocation(line: 2694, column: 33, scope: !13112)
!13146 = !DILocation(line: 2694, column: 32, scope: !13112)
!13147 = !DILocation(line: 2694, column: 9, scope: !13112)
!13148 = !DILocation(line: 2694, column: 2, scope: !13112)
!13149 = !DILocation(line: 2695, column: 1, scope: !13112)
!13150 = !DILocalVariable(name: "vc", arg: 1, scope: !4777, file: !3, line: 2712, type: !220)
!13151 = !DILocation(line: 2712, column: 43, scope: !4777)
!13152 = !DILocalVariable(name: "tc", arg: 2, scope: !4777, file: !3, line: 2712, type: !215)
!13153 = !DILocation(line: 2712, column: 51, scope: !4777)
!13154 = !DILocalVariable(name: "c", arg: 3, scope: !4777, file: !3, line: 2712, type: !215)
!13155 = !DILocation(line: 2712, column: 59, scope: !4777)
!13156 = !DILocation(line: 2724, column: 6, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2724, column: 6)
!13158 = !DILocation(line: 2724, column: 10, scope: !13157)
!13159 = !DILocation(line: 2724, column: 19, scope: !13157)
!13160 = !DILocation(line: 2724, column: 6, scope: !4777)
!13161 = !DILocation(line: 2725, column: 3, scope: !13157)
!13162 = !DILocation(line: 2727, column: 7, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2727, column: 6)
!13164 = !DILocation(line: 2727, column: 6, scope: !4777)
!13165 = !DILocation(line: 2728, column: 3, scope: !13163)
!13166 = !DILocation(line: 2739, column: 6, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2739, column: 6)
!13168 = !DILocation(line: 2739, column: 8, scope: !13167)
!13169 = !DILocation(line: 2739, column: 6, scope: !4777)
!13170 = !DILocation(line: 2740, column: 7, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13172, file: !3, line: 2740, column: 7)
!13172 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 2739, column: 14)
!13173 = !DILocation(line: 2740, column: 11, scope: !13171)
!13174 = !DILocation(line: 2740, column: 7, scope: !13172)
!13175 = !DILocation(line: 2741, column: 25, scope: !13171)
!13176 = !DILocation(line: 2741, column: 23, scope: !13171)
!13177 = !DILocation(line: 2741, column: 11, scope: !13171)
!13178 = !DILocation(line: 2741, column: 4, scope: !13171)
!13179 = !DILocation(line: 2743, column: 11, scope: !13171)
!13180 = !DILocation(line: 2743, column: 15, scope: !13171)
!13181 = !DILocation(line: 2743, column: 22, scope: !13171)
!13182 = !DILocation(line: 2743, column: 40, scope: !13171)
!13183 = !DILocation(line: 2743, column: 38, scope: !13171)
!13184 = !DILocation(line: 2743, column: 4, scope: !13171)
!13185 = !DILocation(line: 2746, column: 6, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2746, column: 6)
!13187 = !DILocation(line: 2746, column: 8, scope: !13186)
!13188 = !DILocation(line: 2746, column: 15, scope: !13186)
!13189 = !DILocation(line: 2746, column: 19, scope: !13186)
!13190 = !DILocation(line: 2746, column: 23, scope: !13186)
!13191 = !DILocation(line: 2746, column: 6, scope: !4777)
!13192 = !DILocation(line: 2747, column: 3, scope: !13186)
!13193 = !DILocation(line: 2749, column: 6, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !4777, file: !3, line: 2749, column: 6)
!13195 = !DILocation(line: 2749, column: 8, scope: !13194)
!13196 = !DILocation(line: 2749, column: 6, scope: !4777)
!13197 = !DILocation(line: 2750, column: 3, scope: !13194)
!13198 = !DILocation(line: 2752, column: 2, scope: !4777)
!13199 = !DILocation(line: 2753, column: 1, scope: !4777)
!13200 = distinct !DISubprogram(name: "con_flush", scope: !3, file: !3, line: 2572, type: !13201, scopeLine: 2573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!13201 = !DISubroutineType(types: !13202)
!13202 = !{null, !220, !13203}
!13203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12973, size: 64)
!13204 = !DILocalVariable(name: "vc", arg: 1, scope: !13200, file: !3, line: 2572, type: !220)
!13205 = !DILocation(line: 2572, column: 39, scope: !13200)
!13206 = !DILocalVariable(name: "draw", arg: 2, scope: !13200, file: !3, line: 2572, type: !13203)
!13207 = !DILocation(line: 2572, column: 66, scope: !13200)
!13208 = !DILocation(line: 2574, column: 6, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13200, file: !3, line: 2574, column: 6)
!13210 = !DILocation(line: 2574, column: 12, scope: !13209)
!13211 = !DILocation(line: 2574, column: 14, scope: !13209)
!13212 = !DILocation(line: 2574, column: 6, scope: !13200)
!13213 = !DILocation(line: 2575, column: 3, scope: !13209)
!13214 = !DILocation(line: 2577, column: 2, scope: !13200)
!13215 = !DILocation(line: 2577, column: 6, scope: !13200)
!13216 = !DILocation(line: 2577, column: 13, scope: !13200)
!13217 = !DILocation(line: 2577, column: 23, scope: !13200)
!13218 = !DILocation(line: 2577, column: 34, scope: !13200)
!13219 = !DILocation(line: 2577, column: 40, scope: !13200)
!13220 = !DILocation(line: 2577, column: 27, scope: !13200)
!13221 = !DILocation(line: 2578, column: 11, scope: !13200)
!13222 = !DILocation(line: 2578, column: 17, scope: !13200)
!13223 = !DILocation(line: 2578, column: 4, scope: !13200)
!13224 = !DILocation(line: 2578, column: 29, scope: !13200)
!13225 = !DILocation(line: 2578, column: 35, scope: !13200)
!13226 = !DILocation(line: 2578, column: 22, scope: !13200)
!13227 = !DILocation(line: 2578, column: 20, scope: !13200)
!13228 = !DILocation(line: 2578, column: 41, scope: !13200)
!13229 = !DILocation(line: 2578, column: 45, scope: !13200)
!13230 = !DILocation(line: 2578, column: 51, scope: !13200)
!13231 = !DILocation(line: 2579, column: 4, scope: !13200)
!13232 = !DILocation(line: 2579, column: 10, scope: !13200)
!13233 = !DILocation(line: 2580, column: 2, scope: !13200)
!13234 = !DILocation(line: 2580, column: 8, scope: !13200)
!13235 = !DILocation(line: 2580, column: 10, scope: !13200)
!13236 = !DILocation(line: 2581, column: 1, scope: !13200)
!13237 = distinct !DISubprogram(name: "do_con_trol", scope: !3, file: !3, line: 2137, type: !13238, scopeLine: 2138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!13238 = !DISubroutineType(types: !13239)
!13239 = !{null, !314, !220, !215}
!13240 = !DILocalVariable(name: "tty", arg: 1, scope: !13237, file: !3, line: 2137, type: !314)
!13241 = !DILocation(line: 2137, column: 44, scope: !13237)
!13242 = !DILocalVariable(name: "vc", arg: 2, scope: !13237, file: !3, line: 2137, type: !220)
!13243 = !DILocation(line: 2137, column: 65, scope: !13237)
!13244 = !DILocalVariable(name: "c", arg: 3, scope: !13237, file: !3, line: 2137, type: !215)
!13245 = !DILocation(line: 2137, column: 73, scope: !13237)
!13246 = !DILocation(line: 2143, column: 6, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13237, file: !3, line: 2143, column: 6)
!13248 = !DILocation(line: 2143, column: 10, scope: !13247)
!13249 = !DILocation(line: 2143, column: 19, scope: !13247)
!13250 = !DILocation(line: 2143, column: 28, scope: !13247)
!13251 = !DILocation(line: 2143, column: 31, scope: !13247)
!13252 = !DILocation(line: 2143, column: 32, scope: !13247)
!13253 = !DILocation(line: 2143, column: 36, scope: !13247)
!13254 = !DILocation(line: 2143, column: 39, scope: !13247)
!13255 = !DILocation(line: 2143, column: 40, scope: !13247)
!13256 = !DILocation(line: 2143, column: 6, scope: !13237)
!13257 = !DILocation(line: 2144, column: 3, scope: !13247)
!13258 = !DILocation(line: 2145, column: 10, scope: !13237)
!13259 = !DILocation(line: 2145, column: 2, scope: !13237)
!13260 = !DILocation(line: 2147, column: 3, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13237, file: !3, line: 2145, column: 13)
!13262 = !DILocation(line: 2149, column: 7, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 2149, column: 7)
!13264 = !DILocation(line: 2149, column: 11, scope: !13263)
!13265 = !DILocation(line: 2149, column: 20, scope: !13263)
!13266 = !DILocation(line: 2149, column: 7, scope: !13261)
!13267 = !DILocation(line: 2150, column: 4, scope: !13263)
!13268 = !DILocation(line: 2150, column: 8, scope: !13263)
!13269 = !DILocation(line: 2150, column: 17, scope: !13263)
!13270 = !DILocation(line: 2151, column: 12, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13263, file: !3, line: 2151, column: 12)
!13272 = !DILocation(line: 2151, column: 16, scope: !13271)
!13273 = !DILocation(line: 2151, column: 12, scope: !13263)
!13274 = !DILocation(line: 2152, column: 15, scope: !13271)
!13275 = !DILocation(line: 2152, column: 19, scope: !13271)
!13276 = !DILocation(line: 2152, column: 34, scope: !13271)
!13277 = !DILocation(line: 2152, column: 38, scope: !13271)
!13278 = !DILocation(line: 2152, column: 4, scope: !13271)
!13279 = !DILocation(line: 2153, column: 3, scope: !13261)
!13280 = !DILocation(line: 2155, column: 6, scope: !13261)
!13281 = !DILocation(line: 2155, column: 3, scope: !13261)
!13282 = !DILocation(line: 2156, column: 3, scope: !13261)
!13283 = !DILocation(line: 2158, column: 18, scope: !13261)
!13284 = !DILocation(line: 2158, column: 22, scope: !13261)
!13285 = !DILocation(line: 2158, column: 28, scope: !13261)
!13286 = !DILocation(line: 2158, column: 30, scope: !13261)
!13287 = !DILocation(line: 2158, column: 17, scope: !13261)
!13288 = !DILocation(line: 2158, column: 3, scope: !13261)
!13289 = !DILocation(line: 2158, column: 7, scope: !13261)
!13290 = !DILocation(line: 2158, column: 14, scope: !13261)
!13291 = !DILocation(line: 2160, column: 31, scope: !13261)
!13292 = !DILocation(line: 2160, column: 35, scope: !13261)
!13293 = !DILocalVariable(name: "__UNIQUE_ID___x265", scope: !13294, file: !3, line: 2161, type: !7)
!13294 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 2161, column: 5)
!13295 = !DILocation(line: 2161, column: 5, scope: !13294)
!13296 = !DILocalVariable(name: "__UNIQUE_ID___y266", scope: !13294, file: !3, line: 2161, type: !7)
!13297 = !DILocation(line: 2161, column: 5, scope: !13261)
!13298 = !DILocation(line: 2162, column: 5, scope: !13261)
!13299 = !DILocation(line: 2162, column: 9, scope: !13261)
!13300 = !DILocation(line: 2162, column: 15, scope: !13261)
!13301 = !DILocation(line: 2162, column: 17, scope: !13261)
!13302 = !DILocation(line: 2160, column: 17, scope: !13261)
!13303 = !DILocation(line: 2160, column: 3, scope: !13261)
!13304 = !DILocation(line: 2160, column: 7, scope: !13261)
!13305 = !DILocation(line: 2160, column: 13, scope: !13261)
!13306 = !DILocation(line: 2160, column: 15, scope: !13261)
!13307 = !DILocation(line: 2163, column: 7, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 2163, column: 7)
!13309 = !DILocation(line: 2163, column: 11, scope: !13308)
!13310 = !DILocation(line: 2163, column: 17, scope: !13308)
!13311 = !DILocation(line: 2163, column: 19, scope: !13308)
!13312 = !DILocation(line: 2163, column: 7, scope: !13261)
!13313 = !DILocation(line: 2164, column: 18, scope: !13308)
!13314 = !DILocation(line: 2164, column: 22, scope: !13308)
!13315 = !DILocation(line: 2164, column: 30, scope: !13308)
!13316 = !DILocation(line: 2164, column: 4, scope: !13308)
!13317 = !DILocation(line: 2164, column: 8, scope: !13308)
!13318 = !DILocation(line: 2164, column: 14, scope: !13308)
!13319 = !DILocation(line: 2164, column: 16, scope: !13308)
!13320 = !DILocation(line: 2166, column: 18, scope: !13261)
!13321 = !DILocation(line: 2166, column: 22, scope: !13261)
!13322 = !DILocation(line: 2166, column: 28, scope: !13261)
!13323 = !DILocation(line: 2166, column: 30, scope: !13261)
!13324 = !DILocation(line: 2166, column: 17, scope: !13261)
!13325 = !DILocation(line: 2166, column: 3, scope: !13261)
!13326 = !DILocation(line: 2166, column: 7, scope: !13261)
!13327 = !DILocation(line: 2166, column: 14, scope: !13261)
!13328 = !DILocation(line: 2167, column: 16, scope: !13261)
!13329 = !DILocation(line: 2167, column: 3, scope: !13261)
!13330 = !DILocation(line: 2168, column: 3, scope: !13261)
!13331 = !DILocation(line: 2170, column: 6, scope: !13261)
!13332 = !DILocation(line: 2170, column: 3, scope: !13261)
!13333 = !DILocation(line: 2171, column: 8, scope: !13334)
!13334 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 2171, column: 7)
!13335 = !DILocation(line: 2171, column: 7, scope: !13261)
!13336 = !DILocation(line: 2172, column: 4, scope: !13334)
!13337 = !DILocation(line: 2175, column: 6, scope: !13261)
!13338 = !DILocation(line: 2175, column: 3, scope: !13261)
!13339 = !DILocation(line: 2176, column: 3, scope: !13261)
!13340 = !DILocation(line: 2178, column: 3, scope: !13261)
!13341 = !DILocation(line: 2178, column: 7, scope: !13261)
!13342 = !DILocation(line: 2178, column: 13, scope: !13261)
!13343 = !DILocation(line: 2178, column: 21, scope: !13261)
!13344 = !DILocation(line: 2179, column: 36, scope: !13261)
!13345 = !DILocation(line: 2179, column: 40, scope: !13261)
!13346 = !DILocation(line: 2179, column: 46, scope: !13261)
!13347 = !DILocation(line: 2179, column: 61, scope: !13261)
!13348 = !DILocation(line: 2179, column: 22, scope: !13261)
!13349 = !DILocation(line: 2179, column: 3, scope: !13261)
!13350 = !DILocation(line: 2179, column: 7, scope: !13261)
!13351 = !DILocation(line: 2179, column: 20, scope: !13261)
!13352 = !DILocation(line: 2180, column: 3, scope: !13261)
!13353 = !DILocation(line: 2180, column: 7, scope: !13261)
!13354 = !DILocation(line: 2180, column: 20, scope: !13261)
!13355 = !DILocation(line: 2181, column: 3, scope: !13261)
!13356 = !DILocation(line: 2183, column: 3, scope: !13261)
!13357 = !DILocation(line: 2183, column: 7, scope: !13261)
!13358 = !DILocation(line: 2183, column: 13, scope: !13261)
!13359 = !DILocation(line: 2183, column: 21, scope: !13261)
!13360 = !DILocation(line: 2184, column: 36, scope: !13261)
!13361 = !DILocation(line: 2184, column: 40, scope: !13261)
!13362 = !DILocation(line: 2184, column: 46, scope: !13261)
!13363 = !DILocation(line: 2184, column: 61, scope: !13261)
!13364 = !DILocation(line: 2184, column: 22, scope: !13261)
!13365 = !DILocation(line: 2184, column: 3, scope: !13261)
!13366 = !DILocation(line: 2184, column: 7, scope: !13261)
!13367 = !DILocation(line: 2184, column: 20, scope: !13261)
!13368 = !DILocation(line: 2185, column: 3, scope: !13261)
!13369 = !DILocation(line: 2185, column: 7, scope: !13261)
!13370 = !DILocation(line: 2185, column: 20, scope: !13261)
!13371 = !DILocation(line: 2186, column: 3, scope: !13261)
!13372 = !DILocation(line: 2188, column: 3, scope: !13261)
!13373 = !DILocation(line: 2188, column: 7, scope: !13261)
!13374 = !DILocation(line: 2188, column: 16, scope: !13261)
!13375 = !DILocation(line: 2189, column: 3, scope: !13261)
!13376 = !DILocation(line: 2191, column: 3, scope: !13261)
!13377 = !DILocation(line: 2191, column: 7, scope: !13261)
!13378 = !DILocation(line: 2191, column: 16, scope: !13261)
!13379 = !DILocation(line: 2192, column: 3, scope: !13261)
!13380 = !DILocation(line: 2194, column: 7, scope: !13261)
!13381 = !DILocation(line: 2194, column: 3, scope: !13261)
!13382 = !DILocation(line: 2195, column: 3, scope: !13261)
!13383 = !DILocation(line: 2197, column: 3, scope: !13261)
!13384 = !DILocation(line: 2197, column: 7, scope: !13261)
!13385 = !DILocation(line: 2197, column: 16, scope: !13261)
!13386 = !DILocation(line: 2198, column: 3, scope: !13261)
!13387 = !DILocation(line: 2200, column: 9, scope: !13237)
!13388 = !DILocation(line: 2200, column: 13, scope: !13237)
!13389 = !DILocation(line: 2200, column: 2, scope: !13237)
!13390 = !DILocation(line: 2202, column: 3, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13237, file: !3, line: 2200, column: 23)
!13392 = !DILocation(line: 2202, column: 7, scope: !13391)
!13393 = !DILocation(line: 2202, column: 16, scope: !13391)
!13394 = !DILocation(line: 2203, column: 11, scope: !13391)
!13395 = !DILocation(line: 2203, column: 3, scope: !13391)
!13396 = !DILocation(line: 2205, column: 4, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2203, column: 14)
!13398 = !DILocation(line: 2205, column: 8, scope: !13397)
!13399 = !DILocation(line: 2205, column: 17, scope: !13397)
!13400 = !DILocation(line: 2206, column: 4, scope: !13397)
!13401 = !DILocation(line: 2208, column: 4, scope: !13397)
!13402 = !DILocation(line: 2208, column: 8, scope: !13397)
!13403 = !DILocation(line: 2208, column: 17, scope: !13397)
!13404 = !DILocation(line: 2209, column: 4, scope: !13397)
!13405 = !DILocation(line: 2211, column: 4, scope: !13397)
!13406 = !DILocation(line: 2211, column: 8, scope: !13397)
!13407 = !DILocation(line: 2211, column: 17, scope: !13397)
!13408 = !DILocation(line: 2212, column: 4, scope: !13397)
!13409 = !DILocation(line: 2214, column: 7, scope: !13397)
!13410 = !DILocation(line: 2214, column: 4, scope: !13397)
!13411 = !DILocation(line: 2215, column: 7, scope: !13397)
!13412 = !DILocation(line: 2215, column: 4, scope: !13397)
!13413 = !DILocation(line: 2216, column: 4, scope: !13397)
!13414 = !DILocation(line: 2218, column: 7, scope: !13397)
!13415 = !DILocation(line: 2218, column: 4, scope: !13397)
!13416 = !DILocation(line: 2219, column: 4, scope: !13397)
!13417 = !DILocation(line: 2221, column: 7, scope: !13397)
!13418 = !DILocation(line: 2221, column: 4, scope: !13397)
!13419 = !DILocation(line: 2222, column: 4, scope: !13397)
!13420 = !DILocation(line: 2224, column: 8, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13397, file: !3, line: 2224, column: 8)
!13422 = !DILocation(line: 2224, column: 12, scope: !13421)
!13423 = !DILocation(line: 2224, column: 18, scope: !13421)
!13424 = !DILocation(line: 2224, column: 20, scope: !13421)
!13425 = !DILocation(line: 2224, column: 8, scope: !13397)
!13426 = !DILocation(line: 2225, column: 13, scope: !13421)
!13427 = !DILocation(line: 2225, column: 17, scope: !13421)
!13428 = !DILocation(line: 2225, column: 23, scope: !13421)
!13429 = !DILocation(line: 2225, column: 26, scope: !13421)
!13430 = !DILocation(line: 2225, column: 30, scope: !13421)
!13431 = !DILocation(line: 2225, column: 5, scope: !13421)
!13432 = !DILocation(line: 2226, column: 4, scope: !13397)
!13433 = !DILocation(line: 2228, column: 15, scope: !13397)
!13434 = !DILocation(line: 2228, column: 4, scope: !13397)
!13435 = !DILocation(line: 2229, column: 4, scope: !13397)
!13436 = !DILocation(line: 2231, column: 13, scope: !13397)
!13437 = !DILocation(line: 2231, column: 4, scope: !13397)
!13438 = !DILocation(line: 2232, column: 4, scope: !13397)
!13439 = !DILocation(line: 2234, column: 16, scope: !13397)
!13440 = !DILocation(line: 2234, column: 4, scope: !13397)
!13441 = !DILocation(line: 2235, column: 4, scope: !13397)
!13442 = !DILocation(line: 2237, column: 4, scope: !13397)
!13443 = !DILocation(line: 2237, column: 8, scope: !13397)
!13444 = !DILocation(line: 2237, column: 17, scope: !13397)
!13445 = !DILocation(line: 2238, column: 4, scope: !13397)
!13446 = !DILocation(line: 2240, column: 4, scope: !13397)
!13447 = !DILocation(line: 2240, column: 8, scope: !13397)
!13448 = !DILocation(line: 2240, column: 17, scope: !13397)
!13449 = !DILocation(line: 2241, column: 4, scope: !13397)
!13450 = !DILocation(line: 2243, column: 4, scope: !13397)
!13451 = !DILocation(line: 2243, column: 8, scope: !13397)
!13452 = !DILocation(line: 2243, column: 17, scope: !13397)
!13453 = !DILocation(line: 2244, column: 4, scope: !13397)
!13454 = !DILocation(line: 2246, column: 19, scope: !13397)
!13455 = !DILocation(line: 2246, column: 4, scope: !13397)
!13456 = !DILocation(line: 2247, column: 4, scope: !13397)
!13457 = !DILocation(line: 2249, column: 4, scope: !13397)
!13458 = !DILocation(line: 2250, column: 4, scope: !13397)
!13459 = !DILocation(line: 2252, column: 4, scope: !13397)
!13460 = !DILocation(line: 2253, column: 4, scope: !13397)
!13461 = !DILocation(line: 2255, column: 3, scope: !13391)
!13462 = !DILocation(line: 2257, column: 7, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2257, column: 7)
!13464 = !DILocation(line: 2257, column: 8, scope: !13463)
!13465 = !DILocation(line: 2257, column: 7, scope: !13391)
!13466 = !DILocation(line: 2258, column: 9, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13468, file: !3, line: 2258, column: 4)
!13468 = distinct !DILexicalBlock(scope: !13463, file: !3, line: 2257, column: 15)
!13469 = !DILocation(line: 2258, column: 13, scope: !13467)
!13470 = !DILocation(line: 2258, column: 21, scope: !13467)
!13471 = !DILocation(line: 2258, column: 26, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13467, file: !3, line: 2258, column: 4)
!13473 = !DILocation(line: 2258, column: 30, scope: !13472)
!13474 = !DILocation(line: 2258, column: 38, scope: !13472)
!13475 = !DILocation(line: 2258, column: 4, scope: !13467)
!13476 = !DILocation(line: 2259, column: 5, scope: !13472)
!13477 = !DILocation(line: 2259, column: 9, scope: !13472)
!13478 = !DILocation(line: 2259, column: 16, scope: !13472)
!13479 = !DILocation(line: 2259, column: 20, scope: !13472)
!13480 = !DILocation(line: 2259, column: 29, scope: !13472)
!13481 = !DILocation(line: 2258, column: 46, scope: !13472)
!13482 = !DILocation(line: 2258, column: 50, scope: !13472)
!13483 = !DILocation(line: 2258, column: 57, scope: !13472)
!13484 = !DILocation(line: 2258, column: 4, scope: !13472)
!13485 = distinct !{!13485, !13475, !13486}
!13486 = !DILocation(line: 2259, column: 31, scope: !13467)
!13487 = !DILocation(line: 2260, column: 4, scope: !13468)
!13488 = !DILocation(line: 2260, column: 8, scope: !13468)
!13489 = !DILocation(line: 2260, column: 16, scope: !13468)
!13490 = !DILocation(line: 2261, column: 4, scope: !13468)
!13491 = !DILocation(line: 2261, column: 8, scope: !13468)
!13492 = !DILocation(line: 2261, column: 17, scope: !13468)
!13493 = !DILocation(line: 2262, column: 4, scope: !13468)
!13494 = !DILocation(line: 2263, column: 14, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13463, file: !3, line: 2263, column: 14)
!13496 = !DILocation(line: 2263, column: 15, scope: !13495)
!13497 = !DILocation(line: 2263, column: 14, scope: !13463)
!13498 = !DILocation(line: 2264, column: 18, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13495, file: !3, line: 2263, column: 22)
!13500 = !DILocation(line: 2264, column: 4, scope: !13499)
!13501 = !DILocation(line: 2265, column: 4, scope: !13499)
!13502 = !DILocation(line: 2265, column: 8, scope: !13499)
!13503 = !DILocation(line: 2265, column: 17, scope: !13499)
!13504 = !DILocation(line: 2266, column: 3, scope: !13499)
!13505 = !DILocation(line: 2266, column: 14, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13495, file: !3, line: 2266, column: 14)
!13507 = !DILocation(line: 2266, column: 15, scope: !13506)
!13508 = !DILocation(line: 2266, column: 21, scope: !13506)
!13509 = !DILocation(line: 2266, column: 24, scope: !13506)
!13510 = !DILocation(line: 2266, column: 25, scope: !13506)
!13511 = !DILocation(line: 2266, column: 14, scope: !13495)
!13512 = !DILocation(line: 2267, column: 4, scope: !13506)
!13513 = !DILocation(line: 2267, column: 8, scope: !13506)
!13514 = !DILocation(line: 2267, column: 17, scope: !13506)
!13515 = !DILocation(line: 2269, column: 4, scope: !13506)
!13516 = !DILocation(line: 2269, column: 8, scope: !13506)
!13517 = !DILocation(line: 2269, column: 17, scope: !13506)
!13518 = !DILocation(line: 2270, column: 3, scope: !13391)
!13519 = !DILocation(line: 2272, column: 7, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2272, column: 7)
!13521 = !DILocation(line: 2272, column: 7, scope: !13391)
!13522 = !DILocation(line: 2273, column: 43, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13520, file: !3, line: 2272, column: 20)
!13524 = !DILocation(line: 2273, column: 32, scope: !13523)
!13525 = !DILocation(line: 2273, column: 4, scope: !13523)
!13526 = !DILocation(line: 2273, column: 8, scope: !13523)
!13527 = !DILocation(line: 2273, column: 15, scope: !13523)
!13528 = !DILocation(line: 2273, column: 19, scope: !13523)
!13529 = !DILocation(line: 2273, column: 26, scope: !13523)
!13530 = !DILocation(line: 2273, column: 30, scope: !13523)
!13531 = !DILocation(line: 2274, column: 8, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13523, file: !3, line: 2274, column: 8)
!13533 = !DILocation(line: 2274, column: 12, scope: !13532)
!13534 = !DILocation(line: 2274, column: 20, scope: !13532)
!13535 = !DILocation(line: 2274, column: 8, scope: !13523)
!13536 = !DILocalVariable(name: "i", scope: !13537, file: !3, line: 2275, type: !215)
!13537 = distinct !DILexicalBlock(scope: !13532, file: !3, line: 2274, column: 26)
!13538 = !DILocation(line: 2275, column: 9, scope: !13537)
!13539 = !DILocation(line: 2275, column: 13, scope: !13537)
!13540 = !DILocation(line: 2275, column: 17, scope: !13537)
!13541 = !DILocation(line: 2275, column: 27, scope: !13537)
!13542 = !DILocalVariable(name: "j", scope: !13537, file: !3, line: 2275, type: !215)
!13543 = !DILocation(line: 2275, column: 32, scope: !13537)
!13544 = !DILocation(line: 2276, column: 30, scope: !13537)
!13545 = !DILocation(line: 2276, column: 34, scope: !13537)
!13546 = !DILocation(line: 2276, column: 42, scope: !13537)
!13547 = !DILocation(line: 2276, column: 28, scope: !13537)
!13548 = !DILocation(line: 2276, column: 25, scope: !13537)
!13549 = !DILocation(line: 2276, column: 5, scope: !13537)
!13550 = !DILocation(line: 2276, column: 9, scope: !13537)
!13551 = !DILocation(line: 2276, column: 20, scope: !13537)
!13552 = !DILocation(line: 2276, column: 23, scope: !13537)
!13553 = !DILocation(line: 2277, column: 28, scope: !13537)
!13554 = !DILocation(line: 2277, column: 32, scope: !13537)
!13555 = !DILocation(line: 2277, column: 40, scope: !13537)
!13556 = !DILocation(line: 2277, column: 5, scope: !13537)
!13557 = !DILocation(line: 2277, column: 9, scope: !13537)
!13558 = !DILocation(line: 2277, column: 21, scope: !13537)
!13559 = !DILocation(line: 2277, column: 25, scope: !13537)
!13560 = !DILocation(line: 2278, column: 30, scope: !13537)
!13561 = !DILocation(line: 2278, column: 34, scope: !13537)
!13562 = !DILocation(line: 2278, column: 42, scope: !13537)
!13563 = !DILocation(line: 2278, column: 28, scope: !13537)
!13564 = !DILocation(line: 2278, column: 25, scope: !13537)
!13565 = !DILocation(line: 2278, column: 5, scope: !13537)
!13566 = !DILocation(line: 2278, column: 9, scope: !13537)
!13567 = !DILocation(line: 2278, column: 20, scope: !13537)
!13568 = !DILocation(line: 2278, column: 23, scope: !13537)
!13569 = !DILocation(line: 2279, column: 28, scope: !13537)
!13570 = !DILocation(line: 2279, column: 32, scope: !13537)
!13571 = !DILocation(line: 2279, column: 40, scope: !13537)
!13572 = !DILocation(line: 2279, column: 5, scope: !13537)
!13573 = !DILocation(line: 2279, column: 9, scope: !13537)
!13574 = !DILocation(line: 2279, column: 21, scope: !13537)
!13575 = !DILocation(line: 2279, column: 25, scope: !13537)
!13576 = !DILocation(line: 2280, column: 30, scope: !13537)
!13577 = !DILocation(line: 2280, column: 34, scope: !13537)
!13578 = !DILocation(line: 2280, column: 42, scope: !13537)
!13579 = !DILocation(line: 2280, column: 28, scope: !13537)
!13580 = !DILocation(line: 2280, column: 25, scope: !13537)
!13581 = !DILocation(line: 2280, column: 5, scope: !13537)
!13582 = !DILocation(line: 2280, column: 9, scope: !13537)
!13583 = !DILocation(line: 2280, column: 20, scope: !13537)
!13584 = !DILocation(line: 2280, column: 23, scope: !13537)
!13585 = !DILocation(line: 2281, column: 26, scope: !13537)
!13586 = !DILocation(line: 2281, column: 30, scope: !13537)
!13587 = !DILocation(line: 2281, column: 37, scope: !13537)
!13588 = !DILocation(line: 2281, column: 5, scope: !13537)
!13589 = !DILocation(line: 2281, column: 9, scope: !13537)
!13590 = !DILocation(line: 2281, column: 20, scope: !13537)
!13591 = !DILocation(line: 2281, column: 23, scope: !13537)
!13592 = !DILocation(line: 2282, column: 17, scope: !13537)
!13593 = !DILocation(line: 2282, column: 5, scope: !13537)
!13594 = !DILocation(line: 2283, column: 5, scope: !13537)
!13595 = !DILocation(line: 2283, column: 9, scope: !13537)
!13596 = !DILocation(line: 2283, column: 18, scope: !13537)
!13597 = !DILocation(line: 2284, column: 4, scope: !13537)
!13598 = !DILocation(line: 2285, column: 3, scope: !13523)
!13599 = !DILocation(line: 2286, column: 4, scope: !13520)
!13600 = !DILocation(line: 2286, column: 8, scope: !13520)
!13601 = !DILocation(line: 2286, column: 17, scope: !13520)
!13602 = !DILocation(line: 2287, column: 3, scope: !13391)
!13603 = !DILocation(line: 2289, column: 8, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2289, column: 3)
!13605 = !DILocation(line: 2289, column: 12, scope: !13604)
!13606 = !DILocation(line: 2289, column: 20, scope: !13604)
!13607 = !DILocation(line: 2289, column: 25, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13604, file: !3, line: 2289, column: 3)
!13609 = !DILocation(line: 2289, column: 29, scope: !13608)
!13610 = !DILocation(line: 2289, column: 37, scope: !13608)
!13611 = !DILocation(line: 2289, column: 3, scope: !13604)
!13612 = !DILocation(line: 2290, column: 4, scope: !13608)
!13613 = !DILocation(line: 2290, column: 8, scope: !13608)
!13614 = !DILocation(line: 2290, column: 15, scope: !13608)
!13615 = !DILocation(line: 2290, column: 19, scope: !13608)
!13616 = !DILocation(line: 2290, column: 28, scope: !13608)
!13617 = !DILocation(line: 2289, column: 45, scope: !13608)
!13618 = !DILocation(line: 2289, column: 49, scope: !13608)
!13619 = !DILocation(line: 2289, column: 56, scope: !13608)
!13620 = !DILocation(line: 2289, column: 3, scope: !13608)
!13621 = distinct !{!13621, !13611, !13622}
!13622 = !DILocation(line: 2290, column: 30, scope: !13604)
!13623 = !DILocation(line: 2291, column: 3, scope: !13391)
!13624 = !DILocation(line: 2291, column: 7, scope: !13391)
!13625 = !DILocation(line: 2291, column: 15, scope: !13391)
!13626 = !DILocation(line: 2292, column: 3, scope: !13391)
!13627 = !DILocation(line: 2292, column: 7, scope: !13391)
!13628 = !DILocation(line: 2292, column: 16, scope: !13391)
!13629 = !DILocation(line: 2293, column: 7, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2293, column: 7)
!13631 = !DILocation(line: 2293, column: 9, scope: !13630)
!13632 = !DILocation(line: 2293, column: 7, scope: !13391)
!13633 = !DILocation(line: 2294, column: 4, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13630, file: !3, line: 2293, column: 17)
!13635 = !DILocation(line: 2294, column: 8, scope: !13634)
!13636 = !DILocation(line: 2294, column: 16, scope: !13634)
!13637 = !DILocation(line: 2295, column: 4, scope: !13634)
!13638 = !DILocation(line: 2297, column: 11, scope: !13391)
!13639 = !DILocation(line: 2297, column: 3, scope: !13391)
!13640 = !DILocation(line: 2299, column: 4, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2297, column: 14)
!13642 = !DILocation(line: 2299, column: 8, scope: !13641)
!13643 = !DILocation(line: 2299, column: 16, scope: !13641)
!13644 = !DILocation(line: 2300, column: 4, scope: !13641)
!13645 = !DILocation(line: 2302, column: 4, scope: !13641)
!13646 = !DILocation(line: 2302, column: 8, scope: !13641)
!13647 = !DILocation(line: 2302, column: 16, scope: !13641)
!13648 = !DILocation(line: 2303, column: 4, scope: !13641)
!13649 = !DILocation(line: 2305, column: 4, scope: !13641)
!13650 = !DILocation(line: 2305, column: 8, scope: !13641)
!13651 = !DILocation(line: 2305, column: 16, scope: !13641)
!13652 = !DILocation(line: 2306, column: 4, scope: !13641)
!13653 = !DILocation(line: 2308, column: 4, scope: !13641)
!13654 = !DILocation(line: 2308, column: 8, scope: !13641)
!13655 = !DILocation(line: 2308, column: 16, scope: !13641)
!13656 = !DILocation(line: 2309, column: 4, scope: !13641)
!13657 = !DILocation(line: 2311, column: 3, scope: !13391)
!13658 = !DILocation(line: 2311, column: 7, scope: !13391)
!13659 = !DILocation(line: 2311, column: 15, scope: !13391)
!13660 = !DILocation(line: 2314, column: 7, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2314, column: 7)
!13662 = !DILocation(line: 2314, column: 9, scope: !13661)
!13663 = !DILocation(line: 2314, column: 16, scope: !13661)
!13664 = !DILocation(line: 2314, column: 19, scope: !13661)
!13665 = !DILocation(line: 2314, column: 23, scope: !13661)
!13666 = !DILocation(line: 2314, column: 31, scope: !13661)
!13667 = !DILocation(line: 2314, column: 7, scope: !13391)
!13668 = !DILocation(line: 2315, column: 4, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13661, file: !3, line: 2314, column: 43)
!13670 = !DILocation(line: 2315, column: 8, scope: !13669)
!13671 = !DILocation(line: 2315, column: 15, scope: !13669)
!13672 = !DILocation(line: 2316, column: 4, scope: !13669)
!13673 = !DILocation(line: 2317, column: 14, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13661, file: !3, line: 2317, column: 14)
!13675 = !DILocation(line: 2317, column: 15, scope: !13674)
!13676 = !DILocation(line: 2317, column: 21, scope: !13674)
!13677 = !DILocation(line: 2317, column: 24, scope: !13674)
!13678 = !DILocation(line: 2317, column: 25, scope: !13674)
!13679 = !DILocation(line: 2317, column: 14, scope: !13661)
!13680 = !DILocation(line: 2318, column: 4, scope: !13681)
!13681 = distinct !DILexicalBlock(scope: !13674, file: !3, line: 2317, column: 32)
!13682 = !DILocation(line: 2318, column: 8, scope: !13681)
!13683 = !DILocation(line: 2318, column: 15, scope: !13681)
!13684 = !DILocation(line: 2318, column: 19, scope: !13681)
!13685 = !DILocation(line: 2318, column: 28, scope: !13681)
!13686 = !DILocation(line: 2319, column: 31, scope: !13681)
!13687 = !DILocation(line: 2319, column: 33, scope: !13681)
!13688 = !DILocation(line: 2319, column: 4, scope: !13681)
!13689 = !DILocation(line: 2319, column: 8, scope: !13681)
!13690 = !DILocation(line: 2319, column: 15, scope: !13681)
!13691 = !DILocation(line: 2319, column: 19, scope: !13681)
!13692 = !DILocation(line: 2319, column: 28, scope: !13681)
!13693 = !DILocation(line: 2320, column: 4, scope: !13681)
!13694 = !DILocation(line: 2322, column: 7, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2322, column: 7)
!13696 = !DILocation(line: 2322, column: 9, scope: !13695)
!13697 = !DILocation(line: 2322, column: 17, scope: !13695)
!13698 = !DILocation(line: 2322, column: 20, scope: !13695)
!13699 = !DILocation(line: 2322, column: 22, scope: !13695)
!13700 = !DILocation(line: 2322, column: 7, scope: !13391)
!13701 = !DILocation(line: 2323, column: 4, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13695, file: !3, line: 2322, column: 31)
!13703 = !DILocation(line: 2323, column: 8, scope: !13702)
!13704 = !DILocation(line: 2323, column: 17, scope: !13702)
!13705 = !DILocation(line: 2324, column: 4, scope: !13702)
!13706 = !DILocation(line: 2326, column: 3, scope: !13391)
!13707 = !DILocation(line: 2326, column: 7, scope: !13391)
!13708 = !DILocation(line: 2326, column: 16, scope: !13391)
!13709 = !DILocation(line: 2327, column: 10, scope: !13391)
!13710 = !DILocation(line: 2327, column: 3, scope: !13391)
!13711 = !DILocation(line: 2329, column: 8, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13713, file: !3, line: 2329, column: 8)
!13713 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2327, column: 13)
!13714 = !DILocation(line: 2329, column: 12, scope: !13712)
!13715 = !DILocation(line: 2329, column: 20, scope: !13712)
!13716 = !DILocation(line: 2329, column: 8, scope: !13713)
!13717 = !DILocation(line: 2330, column: 14, scope: !13712)
!13718 = !DILocation(line: 2330, column: 5, scope: !13712)
!13719 = !DILocation(line: 2331, column: 4, scope: !13713)
!13720 = !DILocation(line: 2333, column: 8, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13713, file: !3, line: 2333, column: 8)
!13722 = !DILocation(line: 2333, column: 12, scope: !13721)
!13723 = !DILocation(line: 2333, column: 20, scope: !13721)
!13724 = !DILocation(line: 2333, column: 8, scope: !13713)
!13725 = !DILocation(line: 2334, column: 14, scope: !13721)
!13726 = !DILocation(line: 2334, column: 5, scope: !13721)
!13727 = !DILocation(line: 2335, column: 4, scope: !13713)
!13728 = !DILocation(line: 2337, column: 8, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13713, file: !3, line: 2337, column: 8)
!13730 = !DILocation(line: 2337, column: 12, scope: !13729)
!13731 = !DILocation(line: 2337, column: 20, scope: !13729)
!13732 = !DILocation(line: 2337, column: 8, scope: !13713)
!13733 = !DILocation(line: 2338, column: 9, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13735, file: !3, line: 2338, column: 9)
!13735 = distinct !DILexicalBlock(scope: !13729, file: !3, line: 2337, column: 30)
!13736 = !DILocation(line: 2338, column: 13, scope: !13734)
!13737 = !DILocation(line: 2338, column: 9, scope: !13735)
!13738 = !DILocation(line: 2340, column: 7, scope: !13734)
!13739 = !DILocation(line: 2339, column: 6, scope: !13734)
!13740 = !DILocation(line: 2339, column: 10, scope: !13734)
!13741 = !DILocation(line: 2339, column: 25, scope: !13734)
!13742 = !DILocation(line: 2344, column: 27, scope: !13734)
!13743 = !DILocation(line: 2344, column: 6, scope: !13734)
!13744 = !DILocation(line: 2344, column: 10, scope: !13734)
!13745 = !DILocation(line: 2344, column: 25, scope: !13734)
!13746 = !DILocation(line: 2345, column: 5, scope: !13735)
!13747 = !DILocation(line: 2347, column: 4, scope: !13713)
!13748 = !DILocation(line: 2349, column: 8, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13713, file: !3, line: 2349, column: 8)
!13750 = !DILocation(line: 2349, column: 12, scope: !13749)
!13751 = !DILocation(line: 2349, column: 20, scope: !13749)
!13752 = !DILocation(line: 2349, column: 8, scope: !13713)
!13753 = !DILocation(line: 2350, column: 5, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13749, file: !3, line: 2349, column: 30)
!13755 = !DILocation(line: 2351, column: 9, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 2351, column: 9)
!13757 = !DILocation(line: 2351, column: 13, scope: !13756)
!13758 = !DILocation(line: 2351, column: 9, scope: !13754)
!13759 = !DILocation(line: 2352, column: 31, scope: !13756)
!13760 = !DILocation(line: 2352, column: 35, scope: !13756)
!13761 = !DILocation(line: 2352, column: 45, scope: !13756)
!13762 = !DILocation(line: 2352, column: 52, scope: !13756)
!13763 = !DILocation(line: 2352, column: 56, scope: !13756)
!13764 = !DILocation(line: 2352, column: 50, scope: !13756)
!13765 = !DILocation(line: 2352, column: 6, scope: !13756)
!13766 = !DILocation(line: 2352, column: 10, scope: !13756)
!13767 = !DILocation(line: 2352, column: 29, scope: !13756)
!13768 = !DILocation(line: 2354, column: 31, scope: !13756)
!13769 = !DILocation(line: 2354, column: 35, scope: !13756)
!13770 = !DILocation(line: 2354, column: 6, scope: !13756)
!13771 = !DILocation(line: 2354, column: 10, scope: !13756)
!13772 = !DILocation(line: 2354, column: 29, scope: !13756)
!13773 = !DILocation(line: 2355, column: 5, scope: !13754)
!13774 = !DILocation(line: 2357, column: 4, scope: !13713)
!13775 = !DILocation(line: 2359, column: 8, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13713, file: !3, line: 2359, column: 8)
!13777 = !DILocation(line: 2359, column: 12, scope: !13776)
!13778 = !DILocation(line: 2359, column: 20, scope: !13776)
!13779 = !DILocation(line: 2359, column: 8, scope: !13713)
!13780 = !DILocation(line: 2360, column: 9, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !3, line: 2360, column: 9)
!13782 = distinct !DILexicalBlock(scope: !13776, file: !3, line: 2359, column: 31)
!13783 = !DILocation(line: 2360, column: 13, scope: !13781)
!13784 = !DILocation(line: 2360, column: 23, scope: !13781)
!13785 = !DILocation(line: 2360, column: 9, scope: !13782)
!13786 = !DILocation(line: 2361, column: 20, scope: !13781)
!13787 = !DILocation(line: 2361, column: 6, scope: !13781)
!13788 = !DILocation(line: 2362, column: 14, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13781, file: !3, line: 2362, column: 14)
!13790 = !DILocation(line: 2362, column: 18, scope: !13789)
!13791 = !DILocation(line: 2362, column: 28, scope: !13789)
!13792 = !DILocation(line: 2362, column: 14, scope: !13781)
!13793 = !DILocation(line: 2363, column: 20, scope: !13789)
!13794 = !DILocation(line: 2363, column: 24, scope: !13789)
!13795 = !DILocation(line: 2363, column: 6, scope: !13789)
!13796 = !DILocation(line: 2364, column: 4, scope: !13782)
!13797 = !DILocation(line: 2365, column: 4, scope: !13713)
!13798 = !DILocation(line: 2367, column: 7, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2367, column: 7)
!13800 = !DILocation(line: 2367, column: 11, scope: !13799)
!13801 = !DILocation(line: 2367, column: 19, scope: !13799)
!13802 = !DILocation(line: 2367, column: 7, scope: !13391)
!13803 = !DILocation(line: 2368, column: 4, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13799, file: !3, line: 2367, column: 30)
!13805 = !DILocation(line: 2368, column: 8, scope: !13804)
!13806 = !DILocation(line: 2368, column: 16, scope: !13804)
!13807 = !DILocation(line: 2369, column: 4, scope: !13804)
!13808 = !DILocation(line: 2371, column: 10, scope: !13391)
!13809 = !DILocation(line: 2371, column: 3, scope: !13391)
!13810 = !DILocation(line: 2373, column: 8, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2373, column: 8)
!13812 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2371, column: 13)
!13813 = !DILocation(line: 2373, column: 12, scope: !13811)
!13814 = !DILocation(line: 2373, column: 8, scope: !13812)
!13815 = !DILocation(line: 2374, column: 5, scope: !13811)
!13816 = !DILocation(line: 2374, column: 9, scope: !13811)
!13817 = !DILocation(line: 2374, column: 18, scope: !13811)
!13818 = !DILocation(line: 2375, column: 11, scope: !13812)
!13819 = !DILocation(line: 2375, column: 15, scope: !13812)
!13820 = !DILocation(line: 2375, column: 19, scope: !13812)
!13821 = !DILocation(line: 2375, column: 30, scope: !13812)
!13822 = !DILocation(line: 2375, column: 34, scope: !13812)
!13823 = !DILocation(line: 2375, column: 40, scope: !13812)
!13824 = !DILocation(line: 2375, column: 4, scope: !13812)
!13825 = !DILocation(line: 2376, column: 4, scope: !13812)
!13826 = !DILocation(line: 2378, column: 9, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2378, column: 8)
!13828 = !DILocation(line: 2378, column: 13, scope: !13827)
!13829 = !DILocation(line: 2378, column: 8, scope: !13812)
!13830 = !DILocation(line: 2379, column: 5, scope: !13827)
!13831 = !DILocation(line: 2379, column: 9, scope: !13827)
!13832 = !DILocation(line: 2379, column: 18, scope: !13827)
!13833 = !DILocation(line: 2380, column: 11, scope: !13812)
!13834 = !DILocation(line: 2380, column: 15, scope: !13812)
!13835 = !DILocation(line: 2380, column: 19, scope: !13812)
!13836 = !DILocation(line: 2380, column: 25, scope: !13812)
!13837 = !DILocation(line: 2380, column: 28, scope: !13812)
!13838 = !DILocation(line: 2380, column: 32, scope: !13812)
!13839 = !DILocation(line: 2380, column: 38, scope: !13812)
!13840 = !DILocation(line: 2380, column: 42, scope: !13812)
!13841 = !DILocation(line: 2380, column: 46, scope: !13812)
!13842 = !DILocation(line: 2380, column: 40, scope: !13812)
!13843 = !DILocation(line: 2380, column: 4, scope: !13812)
!13844 = !DILocation(line: 2381, column: 4, scope: !13812)
!13845 = !DILocation(line: 2383, column: 9, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2383, column: 8)
!13847 = !DILocation(line: 2383, column: 13, scope: !13846)
!13848 = !DILocation(line: 2383, column: 8, scope: !13812)
!13849 = !DILocation(line: 2384, column: 5, scope: !13846)
!13850 = !DILocation(line: 2384, column: 9, scope: !13846)
!13851 = !DILocation(line: 2384, column: 18, scope: !13846)
!13852 = !DILocation(line: 2385, column: 11, scope: !13812)
!13853 = !DILocation(line: 2385, column: 15, scope: !13812)
!13854 = !DILocation(line: 2385, column: 19, scope: !13812)
!13855 = !DILocation(line: 2385, column: 25, scope: !13812)
!13856 = !DILocation(line: 2385, column: 28, scope: !13812)
!13857 = !DILocation(line: 2385, column: 32, scope: !13812)
!13858 = !DILocation(line: 2385, column: 38, scope: !13812)
!13859 = !DILocation(line: 2385, column: 42, scope: !13812)
!13860 = !DILocation(line: 2385, column: 46, scope: !13812)
!13861 = !DILocation(line: 2385, column: 40, scope: !13812)
!13862 = !DILocation(line: 2385, column: 4, scope: !13812)
!13863 = !DILocation(line: 2386, column: 4, scope: !13812)
!13864 = !DILocation(line: 2388, column: 9, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2388, column: 8)
!13866 = !DILocation(line: 2388, column: 13, scope: !13865)
!13867 = !DILocation(line: 2388, column: 8, scope: !13812)
!13868 = !DILocation(line: 2389, column: 5, scope: !13865)
!13869 = !DILocation(line: 2389, column: 9, scope: !13865)
!13870 = !DILocation(line: 2389, column: 18, scope: !13865)
!13871 = !DILocation(line: 2390, column: 11, scope: !13812)
!13872 = !DILocation(line: 2390, column: 15, scope: !13812)
!13873 = !DILocation(line: 2390, column: 19, scope: !13812)
!13874 = !DILocation(line: 2390, column: 25, scope: !13812)
!13875 = !DILocation(line: 2390, column: 29, scope: !13812)
!13876 = !DILocation(line: 2390, column: 33, scope: !13812)
!13877 = !DILocation(line: 2390, column: 27, scope: !13812)
!13878 = !DILocation(line: 2390, column: 44, scope: !13812)
!13879 = !DILocation(line: 2390, column: 48, scope: !13812)
!13880 = !DILocation(line: 2390, column: 54, scope: !13812)
!13881 = !DILocation(line: 2390, column: 4, scope: !13812)
!13882 = !DILocation(line: 2391, column: 4, scope: !13812)
!13883 = !DILocation(line: 2393, column: 9, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2393, column: 8)
!13885 = !DILocation(line: 2393, column: 13, scope: !13884)
!13886 = !DILocation(line: 2393, column: 8, scope: !13812)
!13887 = !DILocation(line: 2394, column: 5, scope: !13884)
!13888 = !DILocation(line: 2394, column: 9, scope: !13884)
!13889 = !DILocation(line: 2394, column: 18, scope: !13884)
!13890 = !DILocation(line: 2395, column: 11, scope: !13812)
!13891 = !DILocation(line: 2395, column: 15, scope: !13812)
!13892 = !DILocation(line: 2395, column: 19, scope: !13812)
!13893 = !DILocation(line: 2395, column: 25, scope: !13812)
!13894 = !DILocation(line: 2395, column: 29, scope: !13812)
!13895 = !DILocation(line: 2395, column: 33, scope: !13812)
!13896 = !DILocation(line: 2395, column: 27, scope: !13812)
!13897 = !DILocation(line: 2395, column: 44, scope: !13812)
!13898 = !DILocation(line: 2395, column: 48, scope: !13812)
!13899 = !DILocation(line: 2395, column: 54, scope: !13812)
!13900 = !DILocation(line: 2395, column: 4, scope: !13812)
!13901 = !DILocation(line: 2396, column: 4, scope: !13812)
!13902 = !DILocation(line: 2398, column: 9, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2398, column: 8)
!13904 = !DILocation(line: 2398, column: 13, scope: !13903)
!13905 = !DILocation(line: 2398, column: 8, scope: !13812)
!13906 = !DILocation(line: 2399, column: 5, scope: !13903)
!13907 = !DILocation(line: 2399, column: 9, scope: !13903)
!13908 = !DILocation(line: 2399, column: 18, scope: !13903)
!13909 = !DILocation(line: 2400, column: 11, scope: !13812)
!13910 = !DILocation(line: 2400, column: 18, scope: !13812)
!13911 = !DILocation(line: 2400, column: 22, scope: !13812)
!13912 = !DILocation(line: 2400, column: 28, scope: !13812)
!13913 = !DILocation(line: 2400, column: 32, scope: !13812)
!13914 = !DILocation(line: 2400, column: 36, scope: !13812)
!13915 = !DILocation(line: 2400, column: 30, scope: !13812)
!13916 = !DILocation(line: 2400, column: 4, scope: !13812)
!13917 = !DILocation(line: 2401, column: 4, scope: !13812)
!13918 = !DILocation(line: 2403, column: 9, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2403, column: 8)
!13920 = !DILocation(line: 2403, column: 13, scope: !13919)
!13921 = !DILocation(line: 2403, column: 8, scope: !13812)
!13922 = !DILocation(line: 2404, column: 5, scope: !13919)
!13923 = !DILocation(line: 2404, column: 9, scope: !13919)
!13924 = !DILocation(line: 2404, column: 18, scope: !13919)
!13925 = !DILocation(line: 2405, column: 11, scope: !13812)
!13926 = !DILocation(line: 2405, column: 18, scope: !13812)
!13927 = !DILocation(line: 2405, column: 22, scope: !13812)
!13928 = !DILocation(line: 2405, column: 28, scope: !13812)
!13929 = !DILocation(line: 2405, column: 32, scope: !13812)
!13930 = !DILocation(line: 2405, column: 36, scope: !13812)
!13931 = !DILocation(line: 2405, column: 30, scope: !13812)
!13932 = !DILocation(line: 2405, column: 4, scope: !13812)
!13933 = !DILocation(line: 2406, column: 4, scope: !13812)
!13934 = !DILocation(line: 2408, column: 8, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2408, column: 8)
!13936 = !DILocation(line: 2408, column: 12, scope: !13935)
!13937 = !DILocation(line: 2408, column: 8, scope: !13812)
!13938 = !DILocation(line: 2409, column: 5, scope: !13935)
!13939 = !DILocation(line: 2409, column: 9, scope: !13935)
!13940 = !DILocation(line: 2409, column: 18, scope: !13935)
!13941 = !DILocation(line: 2410, column: 12, scope: !13812)
!13942 = !DILocation(line: 2410, column: 16, scope: !13812)
!13943 = !DILocation(line: 2410, column: 20, scope: !13812)
!13944 = !DILocation(line: 2410, column: 26, scope: !13812)
!13945 = !DILocation(line: 2410, column: 29, scope: !13812)
!13946 = !DILocation(line: 2410, column: 33, scope: !13812)
!13947 = !DILocation(line: 2410, column: 4, scope: !13812)
!13948 = !DILocation(line: 2411, column: 4, scope: !13812)
!13949 = !DILocation(line: 2413, column: 8, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2413, column: 8)
!13951 = !DILocation(line: 2413, column: 12, scope: !13950)
!13952 = !DILocation(line: 2413, column: 8, scope: !13812)
!13953 = !DILocation(line: 2414, column: 5, scope: !13950)
!13954 = !DILocation(line: 2414, column: 9, scope: !13950)
!13955 = !DILocation(line: 2414, column: 18, scope: !13950)
!13956 = !DILocation(line: 2415, column: 8, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2415, column: 8)
!13958 = !DILocation(line: 2415, column: 12, scope: !13957)
!13959 = !DILocation(line: 2415, column: 8, scope: !13812)
!13960 = !DILocation(line: 2416, column: 5, scope: !13957)
!13961 = !DILocation(line: 2416, column: 9, scope: !13957)
!13962 = !DILocation(line: 2416, column: 18, scope: !13957)
!13963 = !DILocation(line: 2417, column: 12, scope: !13812)
!13964 = !DILocation(line: 2417, column: 16, scope: !13812)
!13965 = !DILocation(line: 2417, column: 20, scope: !13812)
!13966 = !DILocation(line: 2417, column: 31, scope: !13812)
!13967 = !DILocation(line: 2417, column: 35, scope: !13812)
!13968 = !DILocation(line: 2417, column: 4, scope: !13812)
!13969 = !DILocation(line: 2418, column: 4, scope: !13812)
!13970 = !DILocation(line: 2420, column: 10, scope: !13812)
!13971 = !DILocation(line: 2420, column: 14, scope: !13812)
!13972 = !DILocation(line: 2420, column: 18, scope: !13812)
!13973 = !DILocation(line: 2420, column: 4, scope: !13812)
!13974 = !DILocation(line: 2421, column: 4, scope: !13812)
!13975 = !DILocation(line: 2423, column: 10, scope: !13812)
!13976 = !DILocation(line: 2423, column: 14, scope: !13812)
!13977 = !DILocation(line: 2423, column: 18, scope: !13812)
!13978 = !DILocation(line: 2423, column: 4, scope: !13812)
!13979 = !DILocation(line: 2424, column: 4, scope: !13812)
!13980 = !DILocation(line: 2426, column: 10, scope: !13812)
!13981 = !DILocation(line: 2426, column: 14, scope: !13812)
!13982 = !DILocation(line: 2426, column: 18, scope: !13812)
!13983 = !DILocation(line: 2426, column: 4, scope: !13812)
!13984 = !DILocation(line: 2427, column: 4, scope: !13812)
!13985 = !DILocation(line: 2429, column: 10, scope: !13812)
!13986 = !DILocation(line: 2429, column: 14, scope: !13812)
!13987 = !DILocation(line: 2429, column: 18, scope: !13812)
!13988 = !DILocation(line: 2429, column: 4, scope: !13812)
!13989 = !DILocation(line: 2430, column: 4, scope: !13812)
!13990 = !DILocation(line: 2432, column: 10, scope: !13812)
!13991 = !DILocation(line: 2432, column: 14, scope: !13812)
!13992 = !DILocation(line: 2432, column: 18, scope: !13812)
!13993 = !DILocation(line: 2432, column: 4, scope: !13812)
!13994 = !DILocation(line: 2433, column: 4, scope: !13812)
!13995 = !DILocation(line: 2435, column: 9, scope: !13996)
!13996 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2435, column: 8)
!13997 = !DILocation(line: 2435, column: 13, scope: !13996)
!13998 = !DILocation(line: 2435, column: 8, scope: !13812)
!13999 = !DILocation(line: 2436, column: 16, scope: !13996)
!14000 = !DILocation(line: 2436, column: 5, scope: !13996)
!14001 = !DILocation(line: 2437, column: 4, scope: !13812)
!14002 = !DILocation(line: 2439, column: 9, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2439, column: 8)
!14004 = !DILocation(line: 2439, column: 13, scope: !14003)
!14005 = !DILocation(line: 2439, column: 23, scope: !14003)
!14006 = !DILocation(line: 2439, column: 26, scope: !14003)
!14007 = !DILocation(line: 2439, column: 30, scope: !14003)
!14008 = !DILocation(line: 2439, column: 36, scope: !14003)
!14009 = !DILocation(line: 2439, column: 38, scope: !14003)
!14010 = !DILocation(line: 2439, column: 8, scope: !13812)
!14011 = !DILocation(line: 2440, column: 13, scope: !14003)
!14012 = !DILocation(line: 2440, column: 17, scope: !14003)
!14013 = !DILocation(line: 2440, column: 23, scope: !14003)
!14014 = !DILocation(line: 2440, column: 26, scope: !14003)
!14015 = !DILocation(line: 2440, column: 30, scope: !14003)
!14016 = !DILocation(line: 2440, column: 5, scope: !14003)
!14017 = !DILocation(line: 2441, column: 13, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14003, file: !3, line: 2441, column: 13)
!14019 = !DILocation(line: 2441, column: 17, scope: !14018)
!14020 = !DILocation(line: 2441, column: 27, scope: !14018)
!14021 = !DILocation(line: 2441, column: 13, scope: !14003)
!14022 = !DILocation(line: 2442, column: 17, scope: !14018)
!14023 = !DILocation(line: 2442, column: 21, scope: !14018)
!14024 = !DILocation(line: 2442, column: 5, scope: !14018)
!14025 = !DILocation(line: 2443, column: 4, scope: !13812)
!14026 = !DILocation(line: 2445, column: 10, scope: !13812)
!14027 = !DILocation(line: 2445, column: 4, scope: !13812)
!14028 = !DILocation(line: 2446, column: 4, scope: !13812)
!14029 = !DILocation(line: 2449, column: 8, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2449, column: 8)
!14031 = !DILocation(line: 2449, column: 12, scope: !14030)
!14032 = !DILocation(line: 2449, column: 22, scope: !14030)
!14033 = !DILocation(line: 2449, column: 8, scope: !13812)
!14034 = !DILocation(line: 2450, column: 22, scope: !14030)
!14035 = !DILocation(line: 2450, column: 26, scope: !14030)
!14036 = !DILocation(line: 2451, column: 11, scope: !14030)
!14037 = !DILocation(line: 2451, column: 15, scope: !14030)
!14038 = !DILocation(line: 2451, column: 25, scope: !14030)
!14039 = !DILocation(line: 2451, column: 10, scope: !14030)
!14040 = !DILocation(line: 2451, column: 32, scope: !14030)
!14041 = !DILocation(line: 2451, column: 36, scope: !14030)
!14042 = !DILocation(line: 2450, column: 5, scope: !14030)
!14043 = !DILocation(line: 2452, column: 4, scope: !13812)
!14044 = !DILocation(line: 2454, column: 9, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2454, column: 8)
!14046 = !DILocation(line: 2454, column: 13, scope: !14045)
!14047 = !DILocation(line: 2454, column: 8, scope: !13812)
!14048 = !DILocation(line: 2455, column: 5, scope: !14045)
!14049 = !DILocation(line: 2455, column: 9, scope: !14045)
!14050 = !DILocation(line: 2455, column: 18, scope: !14045)
!14051 = !DILocation(line: 2456, column: 9, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2456, column: 8)
!14053 = !DILocation(line: 2456, column: 13, scope: !14052)
!14054 = !DILocation(line: 2456, column: 8, scope: !13812)
!14055 = !DILocation(line: 2457, column: 21, scope: !14052)
!14056 = !DILocation(line: 2457, column: 25, scope: !14052)
!14057 = !DILocation(line: 2457, column: 5, scope: !14052)
!14058 = !DILocation(line: 2457, column: 9, scope: !14052)
!14059 = !DILocation(line: 2457, column: 19, scope: !14052)
!14060 = !DILocation(line: 2459, column: 8, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2459, column: 8)
!14062 = !DILocation(line: 2459, column: 12, scope: !14061)
!14063 = !DILocation(line: 2459, column: 24, scope: !14061)
!14064 = !DILocation(line: 2459, column: 28, scope: !14061)
!14065 = !DILocation(line: 2459, column: 22, scope: !14061)
!14066 = !DILocation(line: 2459, column: 38, scope: !14061)
!14067 = !DILocation(line: 2460, column: 8, scope: !14061)
!14068 = !DILocation(line: 2460, column: 12, scope: !14061)
!14069 = !DILocation(line: 2460, column: 25, scope: !14061)
!14070 = !DILocation(line: 2460, column: 29, scope: !14061)
!14071 = !DILocation(line: 2460, column: 22, scope: !14061)
!14072 = !DILocation(line: 2459, column: 8, scope: !13812)
!14073 = !DILocation(line: 2461, column: 18, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !14061, file: !3, line: 2460, column: 38)
!14075 = !DILocation(line: 2461, column: 22, scope: !14074)
!14076 = !DILocation(line: 2461, column: 32, scope: !14074)
!14077 = !DILocation(line: 2461, column: 5, scope: !14074)
!14078 = !DILocation(line: 2461, column: 9, scope: !14074)
!14079 = !DILocation(line: 2461, column: 16, scope: !14074)
!14080 = !DILocation(line: 2462, column: 21, scope: !14074)
!14081 = !DILocation(line: 2462, column: 25, scope: !14074)
!14082 = !DILocation(line: 2462, column: 5, scope: !14074)
!14083 = !DILocation(line: 2462, column: 9, scope: !14074)
!14084 = !DILocation(line: 2462, column: 19, scope: !14074)
!14085 = !DILocation(line: 2463, column: 13, scope: !14074)
!14086 = !DILocation(line: 2463, column: 5, scope: !14074)
!14087 = !DILocation(line: 2464, column: 4, scope: !14074)
!14088 = !DILocation(line: 2465, column: 4, scope: !13812)
!14089 = !DILocation(line: 2467, column: 13, scope: !13812)
!14090 = !DILocation(line: 2467, column: 4, scope: !13812)
!14091 = !DILocation(line: 2468, column: 4, scope: !13812)
!14092 = !DILocation(line: 2470, column: 16, scope: !13812)
!14093 = !DILocation(line: 2470, column: 4, scope: !13812)
!14094 = !DILocation(line: 2471, column: 4, scope: !13812)
!14095 = !DILocation(line: 2473, column: 10, scope: !13812)
!14096 = !DILocation(line: 2473, column: 14, scope: !13812)
!14097 = !DILocation(line: 2473, column: 18, scope: !13812)
!14098 = !DILocation(line: 2473, column: 4, scope: !13812)
!14099 = !DILocation(line: 2474, column: 4, scope: !13812)
!14100 = !DILocation(line: 2476, column: 11, scope: !13812)
!14101 = !DILocation(line: 2476, column: 15, scope: !13812)
!14102 = !DILocation(line: 2476, column: 19, scope: !13812)
!14103 = !DILocation(line: 2476, column: 4, scope: !13812)
!14104 = !DILocation(line: 2477, column: 4, scope: !13812)
!14105 = !DILocation(line: 2479, column: 20, scope: !13812)
!14106 = !DILocation(line: 2479, column: 4, scope: !13812)
!14107 = !DILocation(line: 2480, column: 4, scope: !13812)
!14108 = !DILocation(line: 2482, column: 3, scope: !13391)
!14109 = !DILocation(line: 2484, column: 7, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2484, column: 7)
!14111 = !DILocation(line: 2484, column: 9, scope: !14110)
!14112 = !DILocation(line: 2484, column: 15, scope: !14110)
!14113 = !DILocation(line: 2484, column: 18, scope: !14110)
!14114 = !DILocation(line: 2484, column: 20, scope: !14110)
!14115 = !DILocation(line: 2484, column: 7, scope: !13391)
!14116 = !DILocation(line: 2485, column: 4, scope: !14110)
!14117 = !DILocation(line: 2486, column: 3, scope: !13391)
!14118 = !DILocation(line: 2486, column: 7, scope: !13391)
!14119 = !DILocation(line: 2486, column: 16, scope: !13391)
!14120 = !DILocation(line: 2487, column: 3, scope: !13391)
!14121 = !DILocation(line: 2489, column: 3, scope: !13391)
!14122 = !DILocation(line: 2489, column: 7, scope: !13391)
!14123 = !DILocation(line: 2489, column: 16, scope: !13391)
!14124 = !DILocation(line: 2490, column: 11, scope: !13391)
!14125 = !DILocation(line: 2490, column: 3, scope: !13391)
!14126 = !DILocation(line: 2492, column: 4, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2490, column: 14)
!14128 = !DILocation(line: 2492, column: 8, scope: !14127)
!14129 = !DILocation(line: 2492, column: 15, scope: !14127)
!14130 = !DILocation(line: 2493, column: 4, scope: !14127)
!14131 = !DILocation(line: 2496, column: 4, scope: !14127)
!14132 = !DILocation(line: 2496, column: 8, scope: !14127)
!14133 = !DILocation(line: 2496, column: 15, scope: !14127)
!14134 = !DILocation(line: 2497, column: 4, scope: !14127)
!14135 = !DILocation(line: 2499, column: 3, scope: !13391)
!14136 = !DILocation(line: 2501, column: 3, scope: !13391)
!14137 = !DILocation(line: 2501, column: 7, scope: !13391)
!14138 = !DILocation(line: 2501, column: 16, scope: !13391)
!14139 = !DILocation(line: 2502, column: 3, scope: !13391)
!14140 = !DILocation(line: 2504, column: 3, scope: !13391)
!14141 = !DILocation(line: 2504, column: 7, scope: !13391)
!14142 = !DILocation(line: 2504, column: 16, scope: !13391)
!14143 = !DILocation(line: 2505, column: 7, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2505, column: 7)
!14145 = !DILocation(line: 2505, column: 9, scope: !14144)
!14146 = !DILocation(line: 2505, column: 7, scope: !13391)
!14147 = !DILocation(line: 2508, column: 6, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14144, file: !3, line: 2505, column: 17)
!14149 = !DILocation(line: 2508, column: 10, scope: !14148)
!14150 = !DILocation(line: 2508, column: 30, scope: !14148)
!14151 = !DILocation(line: 2508, column: 40, scope: !14148)
!14152 = !DILocation(line: 2508, column: 5, scope: !14148)
!14153 = !DILocation(line: 2507, column: 4, scope: !14148)
!14154 = !DILocation(line: 2507, column: 8, scope: !14148)
!14155 = !DILocation(line: 2507, column: 28, scope: !14148)
!14156 = !DILocation(line: 2509, column: 10, scope: !14148)
!14157 = !DILocation(line: 2509, column: 4, scope: !14148)
!14158 = !DILocation(line: 2511, column: 6, scope: !14148)
!14159 = !DILocation(line: 2511, column: 10, scope: !14148)
!14160 = !DILocation(line: 2511, column: 30, scope: !14148)
!14161 = !DILocation(line: 2511, column: 40, scope: !14148)
!14162 = !DILocation(line: 2511, column: 5, scope: !14148)
!14163 = !DILocation(line: 2510, column: 4, scope: !14148)
!14164 = !DILocation(line: 2510, column: 8, scope: !14148)
!14165 = !DILocation(line: 2510, column: 28, scope: !14148)
!14166 = !DILocation(line: 2512, column: 21, scope: !14148)
!14167 = !DILocation(line: 2512, column: 25, scope: !14148)
!14168 = !DILocation(line: 2512, column: 29, scope: !14148)
!14169 = !DILocation(line: 2512, column: 40, scope: !14148)
!14170 = !DILocation(line: 2512, column: 44, scope: !14148)
!14171 = !DILocation(line: 2512, column: 62, scope: !14148)
!14172 = !DILocation(line: 2512, column: 4, scope: !14148)
!14173 = !DILocation(line: 2513, column: 3, scope: !14148)
!14174 = !DILocation(line: 2514, column: 3, scope: !13391)
!14175 = !DILocation(line: 2516, column: 12, scope: !13391)
!14176 = !DILocation(line: 2516, column: 19, scope: !13391)
!14177 = !DILocation(line: 2516, column: 3, scope: !13391)
!14178 = !DILocation(line: 2517, column: 3, scope: !13391)
!14179 = !DILocation(line: 2517, column: 7, scope: !13391)
!14180 = !DILocation(line: 2517, column: 16, scope: !13391)
!14181 = !DILocation(line: 2518, column: 3, scope: !13391)
!14182 = !DILocation(line: 2520, column: 12, scope: !13391)
!14183 = !DILocation(line: 2520, column: 19, scope: !13391)
!14184 = !DILocation(line: 2520, column: 3, scope: !13391)
!14185 = !DILocation(line: 2521, column: 3, scope: !13391)
!14186 = !DILocation(line: 2521, column: 7, scope: !13391)
!14187 = !DILocation(line: 2521, column: 16, scope: !13391)
!14188 = !DILocation(line: 2522, column: 3, scope: !13391)
!14189 = !DILocation(line: 2524, column: 3, scope: !13391)
!14190 = !DILocation(line: 2526, column: 3, scope: !13391)
!14191 = !DILocation(line: 2526, column: 7, scope: !13391)
!14192 = !DILocation(line: 2526, column: 16, scope: !13391)
!14193 = !DILocation(line: 2527, column: 2, scope: !13391)
!14194 = !DILocation(line: 2528, column: 1, scope: !13237)
!14195 = distinct !DISubprogram(name: "vc_con_write_normal", scope: !3, file: !3, line: 2755, type: !14196, scopeLine: 2757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14196 = !DISubroutineType(types: !14197)
!14197 = !{!215, !220, !215, !215, !13203}
!14198 = !DILocalVariable(name: "vc", arg: 1, scope: !14195, file: !3, line: 2755, type: !220)
!14199 = !DILocation(line: 2755, column: 48, scope: !14195)
!14200 = !DILocalVariable(name: "tc", arg: 2, scope: !14195, file: !3, line: 2755, type: !215)
!14201 = !DILocation(line: 2755, column: 56, scope: !14195)
!14202 = !DILocalVariable(name: "c", arg: 3, scope: !14195, file: !3, line: 2755, type: !215)
!14203 = !DILocation(line: 2755, column: 64, scope: !14195)
!14204 = !DILocalVariable(name: "draw", arg: 4, scope: !14195, file: !3, line: 2756, type: !13203)
!14205 = !DILocation(line: 2756, column: 26, scope: !14195)
!14206 = !DILocalVariable(name: "next_c", scope: !14195, file: !3, line: 2758, type: !215)
!14207 = !DILocation(line: 2758, column: 6, scope: !14195)
!14208 = !DILocalVariable(name: "vc_attr", scope: !14195, file: !3, line: 2759, type: !515)
!14209 = !DILocation(line: 2759, column: 16, scope: !14195)
!14210 = !DILocation(line: 2759, column: 26, scope: !14195)
!14211 = !DILocation(line: 2759, column: 30, scope: !14195)
!14212 = !DILocalVariable(name: "himask", scope: !14195, file: !3, line: 2760, type: !195)
!14213 = !DILocation(line: 2760, column: 6, scope: !14195)
!14214 = !DILocation(line: 2760, column: 15, scope: !14195)
!14215 = !DILocation(line: 2760, column: 19, scope: !14195)
!14216 = !DILocalVariable(name: "charmask", scope: !14195, file: !3, line: 2760, type: !195)
!14217 = !DILocation(line: 2760, column: 36, scope: !14195)
!14218 = !DILocation(line: 2760, column: 47, scope: !14195)
!14219 = !DILocalVariable(name: "width", scope: !14195, file: !3, line: 2761, type: !1454)
!14220 = !DILocation(line: 2761, column: 5, scope: !14195)
!14221 = !DILocalVariable(name: "inverse", scope: !14195, file: !3, line: 2762, type: !578)
!14222 = !DILocation(line: 2762, column: 7, scope: !14195)
!14223 = !DILocation(line: 2764, column: 6, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14195, file: !3, line: 2764, column: 6)
!14225 = !DILocation(line: 2764, column: 10, scope: !14224)
!14226 = !DILocation(line: 2764, column: 17, scope: !14224)
!14227 = !DILocation(line: 2764, column: 21, scope: !14224)
!14228 = !DILocation(line: 2764, column: 25, scope: !14224)
!14229 = !DILocation(line: 2764, column: 6, scope: !14195)
!14230 = !DILocation(line: 2765, column: 23, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14232, file: !3, line: 2765, column: 7)
!14232 = distinct !DILexicalBlock(scope: !14224, file: !3, line: 2764, column: 39)
!14233 = !DILocation(line: 2765, column: 7, scope: !14231)
!14234 = !DILocation(line: 2765, column: 7, scope: !14232)
!14235 = !DILocation(line: 2766, column: 10, scope: !14231)
!14236 = !DILocation(line: 2766, column: 4, scope: !14231)
!14237 = !DILocation(line: 2767, column: 2, scope: !14232)
!14238 = !DILocation(line: 2770, column: 22, scope: !14195)
!14239 = !DILocation(line: 2770, column: 26, scope: !14195)
!14240 = !DILocation(line: 2770, column: 7, scope: !14195)
!14241 = !DILocation(line: 2770, column: 5, scope: !14195)
!14242 = !DILocation(line: 2771, column: 6, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14195, file: !3, line: 2771, column: 6)
!14244 = !DILocation(line: 2771, column: 12, scope: !14243)
!14245 = !DILocation(line: 2771, column: 11, scope: !14243)
!14246 = !DILocation(line: 2771, column: 9, scope: !14243)
!14247 = !DILocation(line: 2771, column: 6, scope: !14195)
!14248 = !DILocation(line: 2772, column: 7, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14250, file: !3, line: 2772, column: 7)
!14250 = distinct !DILexicalBlock(scope: !14243, file: !3, line: 2771, column: 22)
!14251 = !DILocation(line: 2772, column: 10, scope: !14249)
!14252 = !DILocation(line: 2772, column: 16, scope: !14249)
!14253 = !DILocation(line: 2772, column: 19, scope: !14249)
!14254 = !DILocation(line: 2772, column: 22, scope: !14249)
!14255 = !DILocation(line: 2772, column: 7, scope: !14250)
!14256 = !DILocation(line: 2773, column: 4, scope: !14249)
!14257 = !DILocation(line: 2776, column: 9, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14250, file: !3, line: 2776, column: 7)
!14259 = !DILocation(line: 2776, column: 13, scope: !14258)
!14260 = !DILocation(line: 2776, column: 20, scope: !14258)
!14261 = !DILocation(line: 2776, column: 23, scope: !14258)
!14262 = !DILocation(line: 2776, column: 27, scope: !14258)
!14263 = !DILocation(line: 2776, column: 40, scope: !14258)
!14264 = !DILocation(line: 2776, column: 43, scope: !14258)
!14265 = !DILocation(line: 2776, column: 45, scope: !14258)
!14266 = !DILocation(line: 2776, column: 52, scope: !14258)
!14267 = !DILocation(line: 2777, column: 7, scope: !14258)
!14268 = !DILocation(line: 2777, column: 12, scope: !14258)
!14269 = !DILocation(line: 2777, column: 11, scope: !14258)
!14270 = !DILocation(line: 2777, column: 9, scope: !14258)
!14271 = !DILocation(line: 2776, column: 7, scope: !14250)
!14272 = !DILocation(line: 2786, column: 9, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 2777, column: 23)
!14274 = !DILocation(line: 2786, column: 7, scope: !14273)
!14275 = !DILocation(line: 2787, column: 3, scope: !14273)
!14276 = !DILocation(line: 2792, column: 24, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 2787, column: 10)
!14278 = !DILocation(line: 2792, column: 9, scope: !14277)
!14279 = !DILocation(line: 2792, column: 7, scope: !14277)
!14280 = !DILocation(line: 2793, column: 8, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14277, file: !3, line: 2793, column: 8)
!14282 = !DILocation(line: 2793, column: 11, scope: !14281)
!14283 = !DILocation(line: 2793, column: 8, scope: !14277)
!14284 = !DILocation(line: 2794, column: 13, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14281, file: !3, line: 2793, column: 16)
!14286 = !DILocation(line: 2795, column: 25, scope: !14285)
!14287 = !DILocation(line: 2795, column: 10, scope: !14285)
!14288 = !DILocation(line: 2795, column: 8, scope: !14285)
!14289 = !DILocation(line: 2796, column: 9, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14285, file: !3, line: 2796, column: 9)
!14291 = !DILocation(line: 2796, column: 12, scope: !14290)
!14292 = !DILocation(line: 2796, column: 9, scope: !14285)
!14293 = !DILocation(line: 2797, column: 9, scope: !14290)
!14294 = !DILocation(line: 2797, column: 6, scope: !14290)
!14295 = !DILocation(line: 2799, column: 30, scope: !14285)
!14296 = !DILocation(line: 2799, column: 15, scope: !14285)
!14297 = !DILocation(line: 2799, column: 13, scope: !14285)
!14298 = !DILocation(line: 2800, column: 15, scope: !14285)
!14299 = !DILocation(line: 2800, column: 19, scope: !14285)
!14300 = !DILocation(line: 2800, column: 5, scope: !14285)
!14301 = !DILocation(line: 2801, column: 4, scope: !14285)
!14302 = !DILocation(line: 2803, column: 2, scope: !14250)
!14303 = !DILocation(line: 2805, column: 11, scope: !14195)
!14304 = !DILocation(line: 2805, column: 9, scope: !14195)
!14305 = !DILocation(line: 2806, column: 2, scope: !14195)
!14306 = !DILocation(line: 2807, column: 7, scope: !14307)
!14307 = distinct !DILexicalBlock(scope: !14308, file: !3, line: 2807, column: 7)
!14308 = distinct !DILexicalBlock(scope: !14195, file: !3, line: 2806, column: 12)
!14309 = !DILocation(line: 2807, column: 11, scope: !14307)
!14310 = !DILocation(line: 2807, column: 24, scope: !14307)
!14311 = !DILocation(line: 2807, column: 27, scope: !14307)
!14312 = !DILocation(line: 2807, column: 31, scope: !14307)
!14313 = !DILocation(line: 2807, column: 7, scope: !14308)
!14314 = !DILocation(line: 2808, column: 14, scope: !14307)
!14315 = !DILocation(line: 2808, column: 18, scope: !14307)
!14316 = !DILocation(line: 2808, column: 4, scope: !14307)
!14317 = !DILocation(line: 2809, column: 7, scope: !14318)
!14318 = distinct !DILexicalBlock(scope: !14308, file: !3, line: 2809, column: 7)
!14319 = !DILocation(line: 2809, column: 11, scope: !14318)
!14320 = !DILocation(line: 2809, column: 7, scope: !14308)
!14321 = !DILocation(line: 2810, column: 7, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14318, file: !3, line: 2809, column: 25)
!14323 = !DILocation(line: 2810, column: 4, scope: !14322)
!14324 = !DILocation(line: 2811, column: 7, scope: !14322)
!14325 = !DILocation(line: 2811, column: 4, scope: !14322)
!14326 = !DILocation(line: 2812, column: 3, scope: !14322)
!14327 = !DILocation(line: 2813, column: 7, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14308, file: !3, line: 2813, column: 7)
!14329 = !DILocation(line: 2813, column: 11, scope: !14328)
!14330 = !DILocation(line: 2813, column: 7, scope: !14308)
!14331 = !DILocation(line: 2814, column: 16, scope: !14328)
!14332 = !DILocation(line: 2814, column: 4, scope: !14328)
!14333 = !DILocation(line: 2815, column: 18, scope: !14308)
!14334 = !DILocation(line: 2815, column: 22, scope: !14308)
!14335 = !DILocation(line: 2815, column: 3, scope: !14308)
!14336 = !DILocation(line: 2817, column: 7, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14308, file: !3, line: 2817, column: 7)
!14338 = !DILocation(line: 2817, column: 7, scope: !14308)
!14339 = !DILocation(line: 2818, column: 11, scope: !14337)
!14340 = !DILocation(line: 2818, column: 14, scope: !14337)
!14341 = !DILocation(line: 2818, column: 10, scope: !14337)
!14342 = !DILocation(line: 2818, column: 25, scope: !14337)
!14343 = !DILocation(line: 2819, column: 11, scope: !14337)
!14344 = !DILocation(line: 2819, column: 14, scope: !14337)
!14345 = !DILocation(line: 2818, column: 37, scope: !14337)
!14346 = !DILocation(line: 2818, column: 7, scope: !14337)
!14347 = !DILocation(line: 2818, column: 4, scope: !14337)
!14348 = !DILocation(line: 2820, column: 10, scope: !14308)
!14349 = !DILocation(line: 2820, column: 18, scope: !14308)
!14350 = !DILocation(line: 2820, column: 27, scope: !14308)
!14351 = !DILocation(line: 2820, column: 26, scope: !14308)
!14352 = !DILocation(line: 2820, column: 24, scope: !14308)
!14353 = !DILocation(line: 2820, column: 6, scope: !14308)
!14354 = !DILocation(line: 2822, column: 3, scope: !14308)
!14355 = !DILocation(line: 2824, column: 25, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14308, file: !3, line: 2824, column: 7)
!14357 = !DILocation(line: 2824, column: 7, scope: !14356)
!14358 = !DILocation(line: 2824, column: 29, scope: !14356)
!14359 = !DILocation(line: 2824, column: 32, scope: !14356)
!14360 = !DILocation(line: 2824, column: 38, scope: !14356)
!14361 = !DILocation(line: 2824, column: 40, scope: !14356)
!14362 = !DILocation(line: 2824, column: 7, scope: !14308)
!14363 = !DILocation(line: 2825, column: 14, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14356, file: !3, line: 2824, column: 45)
!14365 = !DILocation(line: 2825, column: 18, scope: !14364)
!14366 = !DILocation(line: 2825, column: 24, scope: !14364)
!14367 = !DILocation(line: 2825, column: 4, scope: !14364)
!14368 = !DILocation(line: 2825, column: 10, scope: !14364)
!14369 = !DILocation(line: 2825, column: 12, scope: !14364)
!14370 = !DILocation(line: 2826, column: 17, scope: !14364)
!14371 = !DILocation(line: 2826, column: 21, scope: !14364)
!14372 = !DILocation(line: 2826, column: 4, scope: !14364)
!14373 = !DILocation(line: 2826, column: 10, scope: !14364)
!14374 = !DILocation(line: 2826, column: 15, scope: !14364)
!14375 = !DILocation(line: 2827, column: 3, scope: !14364)
!14376 = !DILocation(line: 2828, column: 7, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14308, file: !3, line: 2828, column: 7)
!14378 = !DILocation(line: 2828, column: 11, scope: !14377)
!14379 = !DILocation(line: 2828, column: 17, scope: !14377)
!14380 = !DILocation(line: 2828, column: 22, scope: !14377)
!14381 = !DILocation(line: 2828, column: 26, scope: !14377)
!14382 = !DILocation(line: 2828, column: 34, scope: !14377)
!14383 = !DILocation(line: 2828, column: 19, scope: !14377)
!14384 = !DILocation(line: 2828, column: 7, scope: !14308)
!14385 = !DILocation(line: 2829, column: 23, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 2828, column: 39)
!14387 = !DILocation(line: 2829, column: 27, scope: !14386)
!14388 = !DILocation(line: 2829, column: 4, scope: !14386)
!14389 = !DILocation(line: 2829, column: 8, scope: !14386)
!14390 = !DILocation(line: 2829, column: 21, scope: !14386)
!14391 = !DILocation(line: 2830, column: 15, scope: !14386)
!14392 = !DILocation(line: 2830, column: 19, scope: !14386)
!14393 = !DILocation(line: 2830, column: 26, scope: !14386)
!14394 = !DILocation(line: 2830, column: 4, scope: !14386)
!14395 = !DILocation(line: 2830, column: 10, scope: !14386)
!14396 = !DILocation(line: 2830, column: 13, scope: !14386)
!14397 = !DILocation(line: 2831, column: 3, scope: !14386)
!14398 = !DILocation(line: 2832, column: 4, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 2831, column: 10)
!14400 = !DILocation(line: 2832, column: 8, scope: !14399)
!14401 = !DILocation(line: 2832, column: 14, scope: !14399)
!14402 = !DILocation(line: 2832, column: 15, scope: !14399)
!14403 = !DILocation(line: 2833, column: 16, scope: !14399)
!14404 = !DILocation(line: 2833, column: 20, scope: !14399)
!14405 = !DILocation(line: 2833, column: 27, scope: !14399)
!14406 = !DILocation(line: 2833, column: 4, scope: !14399)
!14407 = !DILocation(line: 2833, column: 10, scope: !14399)
!14408 = !DILocation(line: 2833, column: 13, scope: !14399)
!14409 = !DILocation(line: 2836, column: 8, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14308, file: !3, line: 2836, column: 7)
!14411 = !DILocation(line: 2836, column: 7, scope: !14308)
!14412 = !DILocation(line: 2837, column: 4, scope: !14410)
!14413 = !DILocation(line: 2840, column: 23, scope: !14308)
!14414 = !DILocation(line: 2840, column: 8, scope: !14308)
!14415 = !DILocation(line: 2840, column: 6, scope: !14308)
!14416 = !DILocation(line: 2841, column: 7, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14308, file: !3, line: 2841, column: 7)
!14418 = !DILocation(line: 2841, column: 10, scope: !14417)
!14419 = !DILocation(line: 2841, column: 7, scope: !14308)
!14420 = !DILocation(line: 2842, column: 7, scope: !14417)
!14421 = !DILocation(line: 2842, column: 4, scope: !14417)
!14422 = !DILocation(line: 2843, column: 10, scope: !14308)
!14423 = distinct !{!14423, !14305, !14424}
!14424 = !DILocation(line: 2844, column: 2, scope: !14195)
!14425 = !DILocation(line: 2845, column: 15, scope: !14195)
!14426 = !DILocation(line: 2845, column: 19, scope: !14195)
!14427 = !DILocation(line: 2845, column: 2, scope: !14195)
!14428 = !DILocation(line: 2847, column: 6, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14195, file: !3, line: 2847, column: 6)
!14430 = !DILocation(line: 2847, column: 6, scope: !14195)
!14431 = !DILocation(line: 2848, column: 13, scope: !14429)
!14432 = !DILocation(line: 2848, column: 17, scope: !14429)
!14433 = !DILocation(line: 2848, column: 3, scope: !14429)
!14434 = !DILocation(line: 2850, column: 2, scope: !14195)
!14435 = !DILocation(line: 2851, column: 1, scope: !14195)
!14436 = distinct !DISubprogram(name: "vc_uniscr_debug_check", scope: !3, file: !3, line: 584, type: !4246, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14437 = !DILocalVariable(name: "vc", arg: 1, scope: !14436, file: !3, line: 584, type: !220)
!14438 = !DILocation(line: 584, column: 51, scope: !14436)
!14439 = !DILocalVariable(name: "uniscr", scope: !14436, file: !3, line: 586, type: !4395)
!14440 = !DILocation(line: 586, column: 21, scope: !14436)
!14441 = !DILocation(line: 586, column: 30, scope: !14436)
!14442 = !DILocalVariable(name: "p", scope: !14436, file: !3, line: 587, type: !191)
!14443 = !DILocation(line: 587, column: 18, scope: !14436)
!14444 = !DILocalVariable(name: "x", scope: !14436, file: !3, line: 588, type: !215)
!14445 = !DILocation(line: 588, column: 6, scope: !14436)
!14446 = !DILocalVariable(name: "y", scope: !14436, file: !3, line: 588, type: !215)
!14447 = !DILocation(line: 588, column: 9, scope: !14436)
!14448 = !DILocalVariable(name: "mask", scope: !14436, file: !3, line: 588, type: !215)
!14449 = !DILocation(line: 588, column: 12, scope: !14436)
!14450 = !DILocation(line: 591, column: 3, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14436, file: !3, line: 590, column: 6)
!14452 = !DILocalVariable(name: "vc", arg: 1, scope: !4770, file: !3, line: 2618, type: !220)
!14453 = !DILocation(line: 2618, column: 49, scope: !4770)
!14454 = !DILocalVariable(name: "c", arg: 2, scope: !4770, file: !3, line: 2618, type: !215)
!14455 = !DILocation(line: 2618, column: 57, scope: !4770)
!14456 = !DILocalVariable(name: "rescan", arg: 3, scope: !4770, file: !3, line: 2618, type: !1003)
!14457 = !DILocation(line: 2618, column: 66, scope: !4770)
!14458 = !DILocation(line: 2626, column: 7, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2626, column: 6)
!14460 = !DILocation(line: 2626, column: 9, scope: !14459)
!14461 = !DILocation(line: 2626, column: 17, scope: !14459)
!14462 = !DILocation(line: 2626, column: 6, scope: !4770)
!14463 = !DILocation(line: 2628, column: 8, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14465, file: !3, line: 2628, column: 7)
!14465 = distinct !DILexicalBlock(scope: !14459, file: !3, line: 2626, column: 26)
!14466 = !DILocation(line: 2628, column: 12, scope: !14464)
!14467 = !DILocation(line: 2628, column: 7, scope: !14465)
!14468 = !DILocation(line: 2629, column: 4, scope: !14464)
!14469 = !DILocation(line: 2631, column: 22, scope: !14465)
!14470 = !DILocation(line: 2631, column: 26, scope: !14465)
!14471 = !DILocation(line: 2631, column: 38, scope: !14465)
!14472 = !DILocation(line: 2631, column: 47, scope: !14465)
!14473 = !DILocation(line: 2631, column: 49, scope: !14465)
!14474 = !DILocation(line: 2631, column: 44, scope: !14465)
!14475 = !DILocation(line: 2631, column: 3, scope: !14465)
!14476 = !DILocation(line: 2631, column: 7, scope: !14465)
!14477 = !DILocation(line: 2631, column: 19, scope: !14465)
!14478 = !DILocation(line: 2632, column: 3, scope: !14465)
!14479 = !DILocation(line: 2632, column: 7, scope: !14465)
!14480 = !DILocation(line: 2632, column: 14, scope: !14465)
!14481 = !DILocation(line: 2633, column: 9, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14465, file: !3, line: 2633, column: 7)
!14483 = !DILocation(line: 2633, column: 13, scope: !14482)
!14484 = !DILocation(line: 2633, column: 7, scope: !14482)
!14485 = !DILocation(line: 2633, column: 7, scope: !14465)
!14486 = !DILocation(line: 2634, column: 4, scope: !14482)
!14487 = !DILocation(line: 2637, column: 7, scope: !14465)
!14488 = !DILocation(line: 2637, column: 11, scope: !14465)
!14489 = !DILocation(line: 2637, column: 5, scope: !14465)
!14490 = !DILocation(line: 2639, column: 7, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14465, file: !3, line: 2639, column: 7)
!14492 = !DILocation(line: 2639, column: 32, scope: !14491)
!14493 = !DILocation(line: 2639, column: 36, scope: !14491)
!14494 = !DILocation(line: 2639, column: 44, scope: !14491)
!14495 = !DILocation(line: 2639, column: 12, scope: !14491)
!14496 = !DILocation(line: 2639, column: 9, scope: !14491)
!14497 = !DILocation(line: 2639, column: 49, scope: !14491)
!14498 = !DILocation(line: 2640, column: 5, scope: !14491)
!14499 = !DILocation(line: 2640, column: 29, scope: !14491)
!14500 = !DILocation(line: 2640, column: 33, scope: !14491)
!14501 = !DILocation(line: 2640, column: 9, scope: !14491)
!14502 = !DILocation(line: 2640, column: 7, scope: !14491)
!14503 = !DILocation(line: 2639, column: 7, scope: !14465)
!14504 = !DILocation(line: 2641, column: 4, scope: !14491)
!14505 = !DILocation(line: 2643, column: 30, scope: !14465)
!14506 = !DILocation(line: 2643, column: 10, scope: !14465)
!14507 = !DILocation(line: 2643, column: 3, scope: !14465)
!14508 = !DILocation(line: 2647, column: 6, scope: !14509)
!14509 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2647, column: 6)
!14510 = !DILocation(line: 2647, column: 10, scope: !14509)
!14511 = !DILocation(line: 2647, column: 6, scope: !4770)
!14512 = !DILocation(line: 2649, column: 4, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14509, file: !3, line: 2647, column: 24)
!14514 = !DILocation(line: 2649, column: 11, scope: !14513)
!14515 = !DILocation(line: 2650, column: 3, scope: !14513)
!14516 = !DILocation(line: 2650, column: 7, scope: !14513)
!14517 = !DILocation(line: 2650, column: 20, scope: !14513)
!14518 = !DILocation(line: 2651, column: 3, scope: !14513)
!14519 = !DILocation(line: 2655, column: 6, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2655, column: 6)
!14521 = !DILocation(line: 2655, column: 8, scope: !14520)
!14522 = !DILocation(line: 2655, column: 6, scope: !4770)
!14523 = !DILocation(line: 2656, column: 10, scope: !14520)
!14524 = !DILocation(line: 2656, column: 3, scope: !14520)
!14525 = !DILocation(line: 2659, column: 2, scope: !4770)
!14526 = !DILocation(line: 2659, column: 6, scope: !4770)
!14527 = !DILocation(line: 2659, column: 14, scope: !4770)
!14528 = !DILocation(line: 2660, column: 7, scope: !14529)
!14529 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 2660, column: 6)
!14530 = !DILocation(line: 2660, column: 9, scope: !14529)
!14531 = !DILocation(line: 2660, column: 17, scope: !14529)
!14532 = !DILocation(line: 2660, column: 6, scope: !4770)
!14533 = !DILocation(line: 2661, column: 3, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14529, file: !3, line: 2660, column: 26)
!14535 = !DILocation(line: 2661, column: 7, scope: !14534)
!14536 = !DILocation(line: 2661, column: 20, scope: !14534)
!14537 = !DILocation(line: 2662, column: 22, scope: !14534)
!14538 = !DILocation(line: 2662, column: 24, scope: !14534)
!14539 = !DILocation(line: 2662, column: 3, scope: !14534)
!14540 = !DILocation(line: 2662, column: 7, scope: !14534)
!14541 = !DILocation(line: 2662, column: 19, scope: !14534)
!14542 = !DILocation(line: 2663, column: 2, scope: !14534)
!14543 = !DILocation(line: 2663, column: 14, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14529, file: !3, line: 2663, column: 13)
!14545 = !DILocation(line: 2663, column: 16, scope: !14544)
!14546 = !DILocation(line: 2663, column: 24, scope: !14544)
!14547 = !DILocation(line: 2663, column: 13, scope: !14529)
!14548 = !DILocation(line: 2664, column: 3, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14544, file: !3, line: 2663, column: 33)
!14550 = !DILocation(line: 2664, column: 7, scope: !14549)
!14551 = !DILocation(line: 2664, column: 20, scope: !14549)
!14552 = !DILocation(line: 2665, column: 22, scope: !14549)
!14553 = !DILocation(line: 2665, column: 24, scope: !14549)
!14554 = !DILocation(line: 2665, column: 3, scope: !14549)
!14555 = !DILocation(line: 2665, column: 7, scope: !14549)
!14556 = !DILocation(line: 2665, column: 19, scope: !14549)
!14557 = !DILocation(line: 2666, column: 2, scope: !14549)
!14558 = !DILocation(line: 2666, column: 14, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14544, file: !3, line: 2666, column: 13)
!14560 = !DILocation(line: 2666, column: 16, scope: !14559)
!14561 = !DILocation(line: 2666, column: 24, scope: !14559)
!14562 = !DILocation(line: 2666, column: 13, scope: !14544)
!14563 = !DILocation(line: 2667, column: 3, scope: !14564)
!14564 = distinct !DILexicalBlock(scope: !14559, file: !3, line: 2666, column: 33)
!14565 = !DILocation(line: 2667, column: 7, scope: !14564)
!14566 = !DILocation(line: 2667, column: 20, scope: !14564)
!14567 = !DILocation(line: 2668, column: 22, scope: !14564)
!14568 = !DILocation(line: 2668, column: 24, scope: !14564)
!14569 = !DILocation(line: 2668, column: 3, scope: !14564)
!14570 = !DILocation(line: 2668, column: 7, scope: !14564)
!14571 = !DILocation(line: 2668, column: 19, scope: !14564)
!14572 = !DILocation(line: 2669, column: 2, scope: !14564)
!14573 = !DILocation(line: 2669, column: 14, scope: !14574)
!14574 = distinct !DILexicalBlock(scope: !14559, file: !3, line: 2669, column: 13)
!14575 = !DILocation(line: 2669, column: 16, scope: !14574)
!14576 = !DILocation(line: 2669, column: 24, scope: !14574)
!14577 = !DILocation(line: 2669, column: 13, scope: !14559)
!14578 = !DILocation(line: 2670, column: 3, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14574, file: !3, line: 2669, column: 33)
!14580 = !DILocation(line: 2670, column: 7, scope: !14579)
!14581 = !DILocation(line: 2670, column: 20, scope: !14579)
!14582 = !DILocation(line: 2671, column: 22, scope: !14579)
!14583 = !DILocation(line: 2671, column: 24, scope: !14579)
!14584 = !DILocation(line: 2671, column: 3, scope: !14579)
!14585 = !DILocation(line: 2671, column: 7, scope: !14579)
!14586 = !DILocation(line: 2671, column: 19, scope: !14579)
!14587 = !DILocation(line: 2672, column: 2, scope: !14579)
!14588 = !DILocation(line: 2672, column: 14, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14574, file: !3, line: 2672, column: 13)
!14590 = !DILocation(line: 2672, column: 16, scope: !14589)
!14591 = !DILocation(line: 2672, column: 24, scope: !14589)
!14592 = !DILocation(line: 2672, column: 13, scope: !14574)
!14593 = !DILocation(line: 2673, column: 3, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14589, file: !3, line: 2672, column: 33)
!14595 = !DILocation(line: 2673, column: 7, scope: !14594)
!14596 = !DILocation(line: 2673, column: 20, scope: !14594)
!14597 = !DILocation(line: 2674, column: 22, scope: !14594)
!14598 = !DILocation(line: 2674, column: 24, scope: !14594)
!14599 = !DILocation(line: 2674, column: 3, scope: !14594)
!14600 = !DILocation(line: 2674, column: 7, scope: !14594)
!14601 = !DILocation(line: 2674, column: 19, scope: !14594)
!14602 = !DILocation(line: 2675, column: 2, scope: !14594)
!14603 = !DILocation(line: 2677, column: 3, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14589, file: !3, line: 2675, column: 9)
!14605 = !DILocation(line: 2660, column: 20, scope: !14529)
!14606 = !DILabel(scope: !4770, name: "need_more_bytes", file: !3, line: 2680)
!14607 = !DILocation(line: 2680, column: 1, scope: !4770)
!14608 = !DILocation(line: 2681, column: 2, scope: !4770)
!14609 = !DILocation(line: 2682, column: 1, scope: !4770)
!14610 = distinct !DISubprogram(name: "vc_translate_ascii", scope: !3, file: !3, line: 2583, type: !14611, scopeLine: 2584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14611 = !DISubroutineType(types: !14612)
!14612 = !{!215, !4322, !215}
!14613 = !DILocalVariable(name: "vc", arg: 1, scope: !14610, file: !3, line: 2583, type: !4322)
!14614 = !DILocation(line: 2583, column: 60, scope: !14610)
!14615 = !DILocalVariable(name: "c", arg: 2, scope: !14610, file: !3, line: 2583, type: !215)
!14616 = !DILocation(line: 2583, column: 68, scope: !14610)
!14617 = !DILocation(line: 2586, column: 7, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14619, file: !3, line: 2586, column: 7)
!14619 = distinct !DILexicalBlock(scope: !14620, file: !3, line: 2585, column: 47)
!14620 = distinct !DILexicalBlock(scope: !14610, file: !3, line: 2585, column: 6)
!14621 = !DILocation(line: 2586, column: 11, scope: !14618)
!14622 = !DILocation(line: 2586, column: 7, scope: !14619)
!14623 = !DILocation(line: 2587, column: 6, scope: !14618)
!14624 = !DILocation(line: 2587, column: 4, scope: !14618)
!14625 = !DILocation(line: 2589, column: 10, scope: !14619)
!14626 = !DILocation(line: 2589, column: 14, scope: !14619)
!14627 = !DILocation(line: 2589, column: 27, scope: !14619)
!14628 = !DILocation(line: 2589, column: 3, scope: !14619)
!14629 = distinct !DISubprogram(name: "vc_sanitize_unicode", scope: !3, file: !3, line: 2600, type: !14630, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14630 = !DISubroutineType(types: !14631)
!14631 = !{!215, !14632}
!14632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !215)
!14633 = !DILocalVariable(name: "c", arg: 1, scope: !14629, file: !3, line: 2600, type: !14632)
!14634 = !DILocation(line: 2600, column: 49, scope: !14629)
!14635 = !DILocation(line: 2602, column: 7, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14629, file: !3, line: 2602, column: 6)
!14637 = !DILocation(line: 2602, column: 9, scope: !14636)
!14638 = !DILocation(line: 2602, column: 19, scope: !14636)
!14639 = !DILocation(line: 2602, column: 22, scope: !14636)
!14640 = !DILocation(line: 2602, column: 24, scope: !14636)
!14641 = !DILocation(line: 2602, column: 35, scope: !14636)
!14642 = !DILocation(line: 2602, column: 38, scope: !14636)
!14643 = !DILocation(line: 2602, column: 40, scope: !14636)
!14644 = !DILocation(line: 2602, column: 50, scope: !14636)
!14645 = !DILocation(line: 2602, column: 53, scope: !14636)
!14646 = !DILocation(line: 2602, column: 55, scope: !14636)
!14647 = !DILocation(line: 2602, column: 6, scope: !14629)
!14648 = !DILocation(line: 2603, column: 3, scope: !14636)
!14649 = !DILocation(line: 2605, column: 9, scope: !14629)
!14650 = !DILocation(line: 2605, column: 2, scope: !14629)
!14651 = !DILocation(line: 2606, column: 1, scope: !14629)
!14652 = distinct !DISubprogram(name: "del", scope: !3, file: !3, line: 1530, type: !4246, scopeLine: 1531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14653 = !DILocalVariable(name: "vc", arg: 1, scope: !14652, file: !3, line: 1530, type: !220)
!14654 = !DILocation(line: 1530, column: 40, scope: !14652)
!14655 = !DILocation(line: 1533, column: 1, scope: !14652)
!14656 = distinct !DISubprogram(name: "ri", scope: !3, file: !3, line: 1499, type: !4246, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14657 = !DILocalVariable(name: "vc", arg: 1, scope: !14656, file: !3, line: 1499, type: !220)
!14658 = !DILocation(line: 1499, column: 32, scope: !14656)
!14659 = !DILocation(line: 1504, column: 6, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 1504, column: 6)
!14661 = !DILocation(line: 1504, column: 10, scope: !14660)
!14662 = !DILocation(line: 1504, column: 16, scope: !14660)
!14663 = !DILocation(line: 1504, column: 21, scope: !14660)
!14664 = !DILocation(line: 1504, column: 25, scope: !14660)
!14665 = !DILocation(line: 1504, column: 18, scope: !14660)
!14666 = !DILocation(line: 1504, column: 6, scope: !14656)
!14667 = !DILocation(line: 1505, column: 14, scope: !14660)
!14668 = !DILocation(line: 1505, column: 18, scope: !14660)
!14669 = !DILocation(line: 1505, column: 22, scope: !14660)
!14670 = !DILocation(line: 1505, column: 30, scope: !14660)
!14671 = !DILocation(line: 1505, column: 34, scope: !14660)
!14672 = !DILocation(line: 1505, column: 3, scope: !14660)
!14673 = !DILocation(line: 1506, column: 11, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14660, file: !3, line: 1506, column: 11)
!14675 = !DILocation(line: 1506, column: 15, scope: !14674)
!14676 = !DILocation(line: 1506, column: 21, scope: !14674)
!14677 = !DILocation(line: 1506, column: 23, scope: !14674)
!14678 = !DILocation(line: 1506, column: 11, scope: !14660)
!14679 = !DILocation(line: 1507, column: 3, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 1506, column: 28)
!14681 = !DILocation(line: 1507, column: 7, scope: !14680)
!14682 = !DILocation(line: 1507, column: 13, scope: !14680)
!14683 = !DILocation(line: 1507, column: 14, scope: !14680)
!14684 = !DILocation(line: 1508, column: 17, scope: !14680)
!14685 = !DILocation(line: 1508, column: 21, scope: !14680)
!14686 = !DILocation(line: 1508, column: 3, scope: !14680)
!14687 = !DILocation(line: 1508, column: 7, scope: !14680)
!14688 = !DILocation(line: 1508, column: 14, scope: !14680)
!14689 = !DILocation(line: 1509, column: 2, scope: !14680)
!14690 = !DILocation(line: 1510, column: 2, scope: !14656)
!14691 = !DILocation(line: 1510, column: 6, scope: !14656)
!14692 = !DILocation(line: 1510, column: 19, scope: !14656)
!14693 = !DILocation(line: 1511, column: 1, scope: !14656)
!14694 = !DILocalVariable(name: "tty", arg: 1, scope: !4784, file: !3, line: 1840, type: !314)
!14695 = !DILocation(line: 1840, column: 50, scope: !4784)
!14696 = !DILocation(line: 1845, column: 27, scope: !4784)
!14697 = !DILocation(line: 1845, column: 45, scope: !4784)
!14698 = !DILocation(line: 1845, column: 50, scope: !4784)
!14699 = !DILocation(line: 1845, column: 2, scope: !4784)
!14700 = !DILocation(line: 1846, column: 1, scope: !4784)
!14701 = distinct !DISubprogram(name: "restore_cur", scope: !3, file: !3, line: 2049, type: !4246, scopeLine: 2050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14702 = !DILocalVariable(name: "vc", arg: 1, scope: !14701, file: !3, line: 2049, type: !220)
!14703 = !DILocation(line: 2049, column: 41, scope: !14701)
!14704 = !DILocation(line: 2051, column: 10, scope: !14701)
!14705 = !DILocation(line: 2051, column: 14, scope: !14701)
!14706 = !DILocation(line: 2051, column: 2, scope: !14701)
!14707 = !DILocation(line: 2051, column: 22, scope: !14701)
!14708 = !DILocation(line: 2051, column: 26, scope: !14701)
!14709 = !DILocation(line: 2053, column: 9, scope: !14701)
!14710 = !DILocation(line: 2053, column: 13, scope: !14701)
!14711 = !DILocation(line: 2053, column: 17, scope: !14701)
!14712 = !DILocation(line: 2053, column: 23, scope: !14701)
!14713 = !DILocation(line: 2053, column: 26, scope: !14701)
!14714 = !DILocation(line: 2053, column: 30, scope: !14701)
!14715 = !DILocation(line: 2053, column: 36, scope: !14701)
!14716 = !DILocation(line: 2053, column: 2, scope: !14701)
!14717 = !DILocation(line: 2054, column: 35, scope: !14701)
!14718 = !DILocation(line: 2054, column: 39, scope: !14701)
!14719 = !DILocation(line: 2054, column: 45, scope: !14701)
!14720 = !DILocation(line: 2054, column: 56, scope: !14701)
!14721 = !DILocation(line: 2054, column: 60, scope: !14701)
!14722 = !DILocation(line: 2054, column: 66, scope: !14701)
!14723 = !DILocation(line: 2055, column: 4, scope: !14701)
!14724 = !DILocation(line: 2054, column: 21, scope: !14701)
!14725 = !DILocation(line: 2054, column: 2, scope: !14701)
!14726 = !DILocation(line: 2054, column: 6, scope: !14701)
!14727 = !DILocation(line: 2054, column: 19, scope: !14701)
!14728 = !DILocation(line: 2056, column: 14, scope: !14701)
!14729 = !DILocation(line: 2056, column: 2, scope: !14701)
!14730 = !DILocation(line: 2057, column: 2, scope: !14701)
!14731 = !DILocation(line: 2057, column: 6, scope: !14701)
!14732 = !DILocation(line: 2057, column: 19, scope: !14701)
!14733 = !DILocation(line: 2058, column: 1, scope: !14701)
!14734 = distinct !DISubprogram(name: "set_mode", scope: !3, file: !3, line: 1865, type: !4242, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14735 = !DILocalVariable(name: "vc", arg: 1, scope: !14734, file: !3, line: 1865, type: !220)
!14736 = !DILocation(line: 1865, column: 38, scope: !14734)
!14737 = !DILocalVariable(name: "on_off", arg: 2, scope: !14734, file: !3, line: 1865, type: !215)
!14738 = !DILocation(line: 1865, column: 46, scope: !14734)
!14739 = !DILocalVariable(name: "i", scope: !14734, file: !3, line: 1867, type: !215)
!14740 = !DILocation(line: 1867, column: 6, scope: !14734)
!14741 = !DILocation(line: 1869, column: 9, scope: !14742)
!14742 = distinct !DILexicalBlock(scope: !14734, file: !3, line: 1869, column: 2)
!14743 = !DILocation(line: 1869, column: 7, scope: !14742)
!14744 = !DILocation(line: 1869, column: 14, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 1869, column: 2)
!14746 = !DILocation(line: 1869, column: 19, scope: !14745)
!14747 = !DILocation(line: 1869, column: 23, scope: !14745)
!14748 = !DILocation(line: 1869, column: 16, scope: !14745)
!14749 = !DILocation(line: 1869, column: 2, scope: !14742)
!14750 = !DILocation(line: 1870, column: 7, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14745, file: !3, line: 1870, column: 7)
!14752 = !DILocation(line: 1870, column: 11, scope: !14751)
!14753 = !DILocation(line: 1870, column: 19, scope: !14751)
!14754 = !DILocation(line: 1870, column: 7, scope: !14745)
!14755 = !DILocation(line: 1871, column: 11, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14751, file: !3, line: 1870, column: 29)
!14757 = !DILocation(line: 1871, column: 15, scope: !14756)
!14758 = !DILocation(line: 1871, column: 22, scope: !14756)
!14759 = !DILocation(line: 1871, column: 4, scope: !14756)
!14760 = !DILocation(line: 1873, column: 9, scope: !14761)
!14761 = distinct !DILexicalBlock(scope: !14762, file: !3, line: 1873, column: 9)
!14762 = distinct !DILexicalBlock(scope: !14756, file: !3, line: 1871, column: 26)
!14763 = !DILocation(line: 1873, column: 9, scope: !14762)
!14764 = !DILocation(line: 1874, column: 6, scope: !14761)
!14765 = !DILocation(line: 1876, column: 6, scope: !14761)
!14766 = !DILocation(line: 1877, column: 5, scope: !14762)
!14767 = !DILocation(line: 1884, column: 5, scope: !14762)
!14768 = !DILocation(line: 1886, column: 9, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14762, file: !3, line: 1886, column: 9)
!14770 = !DILocation(line: 1886, column: 13, scope: !14769)
!14771 = !DILocation(line: 1886, column: 27, scope: !14769)
!14772 = !DILocation(line: 1886, column: 24, scope: !14769)
!14773 = !DILocation(line: 1886, column: 9, scope: !14762)
!14774 = !DILocation(line: 1887, column: 23, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14769, file: !3, line: 1886, column: 35)
!14776 = !DILocation(line: 1887, column: 6, scope: !14775)
!14777 = !DILocation(line: 1887, column: 10, scope: !14775)
!14778 = !DILocation(line: 1887, column: 21, scope: !14775)
!14779 = !DILocation(line: 1888, column: 20, scope: !14775)
!14780 = !DILocation(line: 1889, column: 8, scope: !14775)
!14781 = !DILocation(line: 1889, column: 12, scope: !14775)
!14782 = !DILocation(line: 1888, column: 6, scope: !14775)
!14783 = !DILocation(line: 1891, column: 18, scope: !14775)
!14784 = !DILocation(line: 1891, column: 6, scope: !14775)
!14785 = !DILocation(line: 1892, column: 5, scope: !14775)
!14786 = !DILocation(line: 1893, column: 5, scope: !14762)
!14787 = !DILocation(line: 1895, column: 20, scope: !14762)
!14788 = !DILocation(line: 1895, column: 5, scope: !14762)
!14789 = !DILocation(line: 1895, column: 9, scope: !14762)
!14790 = !DILocation(line: 1895, column: 18, scope: !14762)
!14791 = !DILocation(line: 1896, column: 13, scope: !14762)
!14792 = !DILocation(line: 1896, column: 5, scope: !14762)
!14793 = !DILocation(line: 1897, column: 5, scope: !14762)
!14794 = !DILocation(line: 1899, column: 21, scope: !14762)
!14795 = !DILocation(line: 1899, column: 5, scope: !14762)
!14796 = !DILocation(line: 1899, column: 9, scope: !14762)
!14797 = !DILocation(line: 1899, column: 19, scope: !14762)
!14798 = !DILocation(line: 1900, column: 5, scope: !14762)
!14799 = !DILocation(line: 1902, column: 9, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14762, file: !3, line: 1902, column: 9)
!14801 = !DILocation(line: 1902, column: 9, scope: !14762)
!14802 = !DILocation(line: 1903, column: 6, scope: !14800)
!14803 = !DILocation(line: 1905, column: 6, scope: !14800)
!14804 = !DILocation(line: 1906, column: 5, scope: !14762)
!14805 = !DILocation(line: 1908, column: 27, scope: !14762)
!14806 = !DILocation(line: 1908, column: 5, scope: !14762)
!14807 = !DILocation(line: 1908, column: 9, scope: !14762)
!14808 = !DILocation(line: 1908, column: 25, scope: !14762)
!14809 = !DILocation(line: 1909, column: 5, scope: !14762)
!14810 = !DILocation(line: 1911, column: 20, scope: !14762)
!14811 = !DILocation(line: 1911, column: 5, scope: !14762)
!14812 = !DILocation(line: 1911, column: 9, scope: !14762)
!14813 = !DILocation(line: 1911, column: 18, scope: !14762)
!14814 = !DILocation(line: 1912, column: 5, scope: !14762)
!14815 = !DILocation(line: 1914, column: 27, scope: !14762)
!14816 = !DILocation(line: 1914, column: 5, scope: !14762)
!14817 = !DILocation(line: 1914, column: 9, scope: !14762)
!14818 = !DILocation(line: 1914, column: 25, scope: !14762)
!14819 = !DILocation(line: 1915, column: 5, scope: !14762)
!14820 = !DILocation(line: 1917, column: 3, scope: !14756)
!14821 = !DILocation(line: 1918, column: 11, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14751, file: !3, line: 1917, column: 10)
!14823 = !DILocation(line: 1918, column: 15, scope: !14822)
!14824 = !DILocation(line: 1918, column: 22, scope: !14822)
!14825 = !DILocation(line: 1918, column: 4, scope: !14822)
!14826 = !DILocation(line: 1920, column: 24, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14822, file: !3, line: 1918, column: 26)
!14828 = !DILocation(line: 1920, column: 5, scope: !14827)
!14829 = !DILocation(line: 1920, column: 9, scope: !14827)
!14830 = !DILocation(line: 1920, column: 22, scope: !14827)
!14831 = !DILocation(line: 1921, column: 5, scope: !14827)
!14832 = !DILocation(line: 1923, column: 20, scope: !14827)
!14833 = !DILocation(line: 1923, column: 5, scope: !14827)
!14834 = !DILocation(line: 1923, column: 9, scope: !14827)
!14835 = !DILocation(line: 1923, column: 18, scope: !14827)
!14836 = !DILocation(line: 1924, column: 5, scope: !14827)
!14837 = !DILocation(line: 1926, column: 9, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14827, file: !3, line: 1926, column: 9)
!14839 = !DILocation(line: 1926, column: 9, scope: !14827)
!14840 = !DILocation(line: 1927, column: 6, scope: !14838)
!14841 = !DILocation(line: 1929, column: 6, scope: !14838)
!14842 = !DILocation(line: 1930, column: 5, scope: !14827)
!14843 = !DILocation(line: 1870, column: 22, scope: !14751)
!14844 = !DILocation(line: 1869, column: 33, scope: !14745)
!14845 = !DILocation(line: 1869, column: 2, scope: !14745)
!14846 = distinct !{!14846, !14749, !14847}
!14847 = !DILocation(line: 1932, column: 3, scope: !14742)
!14848 = !DILocation(line: 1933, column: 1, scope: !14734)
!14849 = !DILocalVariable(name: "tty", arg: 1, scope: !4788, file: !3, line: 1833, type: !314)
!14850 = !DILocation(line: 1833, column: 53, scope: !4788)
!14851 = !DILocation(line: 1837, column: 29, scope: !4788)
!14852 = !DILocation(line: 1837, column: 49, scope: !4788)
!14853 = !DILocation(line: 1837, column: 54, scope: !4788)
!14854 = !DILocation(line: 1837, column: 2, scope: !4788)
!14855 = !DILocation(line: 1838, column: 1, scope: !4788)
!14856 = distinct !DISubprogram(name: "cursor_report", scope: !3, file: !3, line: 1822, type: !14857, scopeLine: 1823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14857 = !DISubroutineType(types: !14858)
!14858 = !{null, !220, !314}
!14859 = !DILocalVariable(name: "vc", arg: 1, scope: !14856, file: !3, line: 1822, type: !220)
!14860 = !DILocation(line: 1822, column: 43, scope: !14856)
!14861 = !DILocalVariable(name: "tty", arg: 2, scope: !14856, file: !3, line: 1822, type: !314)
!14862 = !DILocation(line: 1822, column: 66, scope: !14856)
!14863 = !DILocalVariable(name: "buf", scope: !14856, file: !3, line: 1824, type: !14864)
!14864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 320, elements: !14865)
!14865 = !{!14866}
!14866 = !DISubrange(count: 40)
!14867 = !DILocation(line: 1824, column: 7, scope: !14856)
!14868 = !DILocalVariable(name: "len", scope: !14856, file: !3, line: 1825, type: !215)
!14869 = !DILocation(line: 1825, column: 6, scope: !14856)
!14870 = !DILocation(line: 1827, column: 16, scope: !14856)
!14871 = !DILocation(line: 1827, column: 36, scope: !14856)
!14872 = !DILocation(line: 1827, column: 40, scope: !14856)
!14873 = !DILocation(line: 1827, column: 46, scope: !14856)
!14874 = !DILocation(line: 1828, column: 5, scope: !14856)
!14875 = !DILocation(line: 1828, column: 9, scope: !14856)
!14876 = !DILocation(line: 1828, column: 20, scope: !14856)
!14877 = !DILocation(line: 1828, column: 24, scope: !14856)
!14878 = !DILocation(line: 1828, column: 31, scope: !14856)
!14879 = !DILocation(line: 1827, column: 48, scope: !14856)
!14880 = !DILocation(line: 1829, column: 4, scope: !14856)
!14881 = !DILocation(line: 1829, column: 8, scope: !14856)
!14882 = !DILocation(line: 1829, column: 14, scope: !14856)
!14883 = !DILocation(line: 1829, column: 16, scope: !14856)
!14884 = !DILocation(line: 1827, column: 8, scope: !14856)
!14885 = !DILocation(line: 1827, column: 6, scope: !14856)
!14886 = !DILocation(line: 1830, column: 17, scope: !14856)
!14887 = !DILocation(line: 1830, column: 22, scope: !14856)
!14888 = !DILocation(line: 1830, column: 27, scope: !14856)
!14889 = !DILocation(line: 1830, column: 32, scope: !14856)
!14890 = !DILocation(line: 1830, column: 2, scope: !14856)
!14891 = !DILocation(line: 1831, column: 1, scope: !14856)
!14892 = distinct !DISubprogram(name: "gotoxay", scope: !3, file: !3, line: 1467, type: !6705, scopeLine: 1468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14893 = !DILocalVariable(name: "vc", arg: 1, scope: !14892, file: !3, line: 1467, type: !220)
!14894 = !DILocation(line: 1467, column: 37, scope: !14892)
!14895 = !DILocalVariable(name: "new_x", arg: 2, scope: !14892, file: !3, line: 1467, type: !215)
!14896 = !DILocation(line: 1467, column: 45, scope: !14892)
!14897 = !DILocalVariable(name: "new_y", arg: 3, scope: !14892, file: !3, line: 1467, type: !215)
!14898 = !DILocation(line: 1467, column: 56, scope: !14892)
!14899 = !DILocation(line: 1469, column: 9, scope: !14892)
!14900 = !DILocation(line: 1469, column: 13, scope: !14892)
!14901 = !DILocation(line: 1469, column: 20, scope: !14892)
!14902 = !DILocation(line: 1469, column: 24, scope: !14892)
!14903 = !DILocation(line: 1469, column: 36, scope: !14892)
!14904 = !DILocation(line: 1469, column: 40, scope: !14892)
!14905 = !DILocation(line: 1469, column: 49, scope: !14892)
!14906 = !DILocation(line: 1469, column: 47, scope: !14892)
!14907 = !DILocation(line: 1469, column: 58, scope: !14892)
!14908 = !DILocation(line: 1469, column: 2, scope: !14892)
!14909 = !DILocation(line: 1470, column: 1, scope: !14892)
!14910 = distinct !DISubprogram(name: "csi_K", scope: !3, file: !3, line: 1572, type: !4242, scopeLine: 1573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14911 = !DILocalVariable(name: "vc", arg: 1, scope: !14910, file: !3, line: 1572, type: !220)
!14912 = !DILocation(line: 1572, column: 35, scope: !14910)
!14913 = !DILocalVariable(name: "vpar", arg: 2, scope: !14910, file: !3, line: 1572, type: !215)
!14914 = !DILocation(line: 1572, column: 43, scope: !14910)
!14915 = !DILocalVariable(name: "count", scope: !14910, file: !3, line: 1574, type: !7)
!14916 = !DILocation(line: 1574, column: 15, scope: !14910)
!14917 = !DILocalVariable(name: "start", scope: !14910, file: !3, line: 1575, type: !191)
!14918 = !DILocation(line: 1575, column: 18, scope: !14910)
!14919 = !DILocation(line: 1575, column: 44, scope: !14910)
!14920 = !DILocation(line: 1575, column: 48, scope: !14910)
!14921 = !DILocation(line: 1575, column: 26, scope: !14910)
!14922 = !DILocalVariable(name: "offset", scope: !14910, file: !3, line: 1576, type: !215)
!14923 = !DILocation(line: 1576, column: 6, scope: !14910)
!14924 = !DILocation(line: 1578, column: 10, scope: !14910)
!14925 = !DILocation(line: 1578, column: 2, scope: !14910)
!14926 = !DILocation(line: 1580, column: 11, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14910, file: !3, line: 1578, column: 16)
!14928 = !DILocation(line: 1581, column: 12, scope: !14927)
!14929 = !DILocation(line: 1581, column: 16, scope: !14927)
!14930 = !DILocation(line: 1581, column: 26, scope: !14927)
!14931 = !DILocation(line: 1581, column: 30, scope: !14927)
!14932 = !DILocation(line: 1581, column: 36, scope: !14927)
!14933 = !DILocation(line: 1581, column: 24, scope: !14927)
!14934 = !DILocation(line: 1581, column: 10, scope: !14927)
!14935 = !DILocation(line: 1582, column: 4, scope: !14927)
!14936 = !DILocation(line: 1584, column: 14, scope: !14927)
!14937 = !DILocation(line: 1584, column: 18, scope: !14927)
!14938 = !DILocation(line: 1584, column: 24, scope: !14927)
!14939 = !DILocation(line: 1584, column: 13, scope: !14927)
!14940 = !DILocation(line: 1584, column: 11, scope: !14927)
!14941 = !DILocation(line: 1585, column: 12, scope: !14927)
!14942 = !DILocation(line: 1585, column: 16, scope: !14927)
!14943 = !DILocation(line: 1585, column: 22, scope: !14927)
!14944 = !DILocation(line: 1585, column: 24, scope: !14927)
!14945 = !DILocation(line: 1585, column: 10, scope: !14927)
!14946 = !DILocation(line: 1586, column: 4, scope: !14927)
!14947 = !DILocation(line: 1588, column: 14, scope: !14927)
!14948 = !DILocation(line: 1588, column: 18, scope: !14927)
!14949 = !DILocation(line: 1588, column: 24, scope: !14927)
!14950 = !DILocation(line: 1588, column: 13, scope: !14927)
!14951 = !DILocation(line: 1588, column: 11, scope: !14927)
!14952 = !DILocation(line: 1589, column: 12, scope: !14927)
!14953 = !DILocation(line: 1589, column: 16, scope: !14927)
!14954 = !DILocation(line: 1589, column: 10, scope: !14927)
!14955 = !DILocation(line: 1590, column: 4, scope: !14927)
!14956 = !DILocation(line: 1592, column: 4, scope: !14927)
!14957 = !DILocation(line: 1594, column: 23, scope: !14910)
!14958 = !DILocation(line: 1594, column: 27, scope: !14910)
!14959 = !DILocation(line: 1594, column: 31, scope: !14910)
!14960 = !DILocation(line: 1594, column: 37, scope: !14910)
!14961 = !DILocation(line: 1594, column: 41, scope: !14910)
!14962 = !DILocation(line: 1594, column: 39, scope: !14910)
!14963 = !DILocation(line: 1594, column: 49, scope: !14910)
!14964 = !DILocation(line: 1594, column: 2, scope: !14910)
!14965 = !DILocation(line: 1595, column: 14, scope: !14910)
!14966 = !DILocation(line: 1595, column: 22, scope: !14910)
!14967 = !DILocation(line: 1595, column: 20, scope: !14910)
!14968 = !DILocation(line: 1595, column: 30, scope: !14910)
!14969 = !DILocation(line: 1595, column: 34, scope: !14910)
!14970 = !DILocation(line: 1595, column: 59, scope: !14910)
!14971 = !DILocation(line: 1595, column: 57, scope: !14910)
!14972 = !DILocation(line: 1595, column: 2, scope: !14910)
!14973 = !DILocation(line: 1596, column: 2, scope: !14910)
!14974 = !DILocation(line: 1596, column: 6, scope: !14910)
!14975 = !DILocation(line: 1596, column: 19, scope: !14910)
!14976 = !DILocation(line: 1597, column: 24, scope: !14977)
!14977 = distinct !DILexicalBlock(scope: !14910, file: !3, line: 1597, column: 6)
!14978 = !DILocation(line: 1597, column: 6, scope: !14977)
!14979 = !DILocation(line: 1597, column: 6, scope: !14910)
!14980 = !DILocation(line: 1598, column: 20, scope: !14977)
!14981 = !DILocation(line: 1598, column: 40, scope: !14977)
!14982 = !DILocation(line: 1598, column: 48, scope: !14977)
!14983 = !DILocation(line: 1598, column: 46, scope: !14977)
!14984 = !DILocation(line: 1598, column: 24, scope: !14977)
!14985 = !DILocation(line: 1598, column: 57, scope: !14977)
!14986 = !DILocation(line: 1598, column: 3, scope: !14977)
!14987 = !DILocation(line: 1599, column: 1, scope: !14910)
!14988 = distinct !DISubprogram(name: "csi_L", scope: !3, file: !3, line: 2011, type: !12206, scopeLine: 2012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!14989 = !DILocalVariable(name: "vc", arg: 1, scope: !14988, file: !3, line: 2011, type: !220)
!14990 = !DILocation(line: 2011, column: 35, scope: !14988)
!14991 = !DILocalVariable(name: "nr", arg: 2, scope: !14988, file: !3, line: 2011, type: !7)
!14992 = !DILocation(line: 2011, column: 52, scope: !14988)
!14993 = !DILocation(line: 2013, column: 6, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14988, file: !3, line: 2013, column: 6)
!14995 = !DILocation(line: 2013, column: 11, scope: !14994)
!14996 = !DILocation(line: 2013, column: 15, scope: !14994)
!14997 = !DILocation(line: 2013, column: 25, scope: !14994)
!14998 = !DILocation(line: 2013, column: 29, scope: !14994)
!14999 = !DILocation(line: 2013, column: 35, scope: !14994)
!15000 = !DILocation(line: 2013, column: 23, scope: !14994)
!15001 = !DILocation(line: 2013, column: 9, scope: !14994)
!15002 = !DILocation(line: 2013, column: 6, scope: !14988)
!15003 = !DILocation(line: 2014, column: 8, scope: !14994)
!15004 = !DILocation(line: 2014, column: 12, scope: !14994)
!15005 = !DILocation(line: 2014, column: 22, scope: !14994)
!15006 = !DILocation(line: 2014, column: 26, scope: !14994)
!15007 = !DILocation(line: 2014, column: 32, scope: !14994)
!15008 = !DILocation(line: 2014, column: 20, scope: !14994)
!15009 = !DILocation(line: 2014, column: 6, scope: !14994)
!15010 = !DILocation(line: 2014, column: 3, scope: !14994)
!15011 = !DILocation(line: 2015, column: 12, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !14994, file: !3, line: 2015, column: 11)
!15013 = !DILocation(line: 2015, column: 11, scope: !14994)
!15014 = !DILocation(line: 2016, column: 6, scope: !15012)
!15015 = !DILocation(line: 2016, column: 3, scope: !15012)
!15016 = !DILocation(line: 2017, column: 13, scope: !14988)
!15017 = !DILocation(line: 2017, column: 17, scope: !14988)
!15018 = !DILocation(line: 2017, column: 21, scope: !14988)
!15019 = !DILocation(line: 2017, column: 27, scope: !14988)
!15020 = !DILocation(line: 2017, column: 30, scope: !14988)
!15021 = !DILocation(line: 2017, column: 34, scope: !14988)
!15022 = !DILocation(line: 2017, column: 54, scope: !14988)
!15023 = !DILocation(line: 2017, column: 2, scope: !14988)
!15024 = !DILocation(line: 2018, column: 2, scope: !14988)
!15025 = !DILocation(line: 2018, column: 6, scope: !14988)
!15026 = !DILocation(line: 2018, column: 19, scope: !14988)
!15027 = !DILocation(line: 2019, column: 1, scope: !14988)
!15028 = distinct !DISubprogram(name: "csi_M", scope: !3, file: !3, line: 2032, type: !12206, scopeLine: 2033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15029 = !DILocalVariable(name: "vc", arg: 1, scope: !15028, file: !3, line: 2032, type: !220)
!15030 = !DILocation(line: 2032, column: 35, scope: !15028)
!15031 = !DILocalVariable(name: "nr", arg: 2, scope: !15028, file: !3, line: 2032, type: !7)
!15032 = !DILocation(line: 2032, column: 52, scope: !15028)
!15033 = !DILocation(line: 2034, column: 6, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 2034, column: 6)
!15035 = !DILocation(line: 2034, column: 11, scope: !15034)
!15036 = !DILocation(line: 2034, column: 15, scope: !15034)
!15037 = !DILocation(line: 2034, column: 25, scope: !15034)
!15038 = !DILocation(line: 2034, column: 29, scope: !15034)
!15039 = !DILocation(line: 2034, column: 35, scope: !15034)
!15040 = !DILocation(line: 2034, column: 23, scope: !15034)
!15041 = !DILocation(line: 2034, column: 9, scope: !15034)
!15042 = !DILocation(line: 2034, column: 6, scope: !15028)
!15043 = !DILocation(line: 2035, column: 8, scope: !15034)
!15044 = !DILocation(line: 2035, column: 12, scope: !15034)
!15045 = !DILocation(line: 2035, column: 22, scope: !15034)
!15046 = !DILocation(line: 2035, column: 26, scope: !15034)
!15047 = !DILocation(line: 2035, column: 32, scope: !15034)
!15048 = !DILocation(line: 2035, column: 20, scope: !15034)
!15049 = !DILocation(line: 2035, column: 6, scope: !15034)
!15050 = !DILocation(line: 2035, column: 3, scope: !15034)
!15051 = !DILocation(line: 2036, column: 12, scope: !15052)
!15052 = distinct !DILexicalBlock(scope: !15034, file: !3, line: 2036, column: 11)
!15053 = !DILocation(line: 2036, column: 11, scope: !15034)
!15054 = !DILocation(line: 2037, column: 5, scope: !15052)
!15055 = !DILocation(line: 2037, column: 3, scope: !15052)
!15056 = !DILocation(line: 2038, column: 13, scope: !15028)
!15057 = !DILocation(line: 2038, column: 17, scope: !15028)
!15058 = !DILocation(line: 2038, column: 21, scope: !15028)
!15059 = !DILocation(line: 2038, column: 27, scope: !15028)
!15060 = !DILocation(line: 2038, column: 30, scope: !15028)
!15061 = !DILocation(line: 2038, column: 34, scope: !15028)
!15062 = !DILocation(line: 2038, column: 52, scope: !15028)
!15063 = !DILocation(line: 2038, column: 2, scope: !15028)
!15064 = !DILocation(line: 2039, column: 2, scope: !15028)
!15065 = !DILocation(line: 2039, column: 6, scope: !15028)
!15066 = !DILocation(line: 2039, column: 19, scope: !15028)
!15067 = !DILocation(line: 2040, column: 1, scope: !15028)
!15068 = distinct !DISubprogram(name: "csi_P", scope: !3, file: !3, line: 2022, type: !12206, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15069 = !DILocalVariable(name: "vc", arg: 1, scope: !15068, file: !3, line: 2022, type: !220)
!15070 = !DILocation(line: 2022, column: 35, scope: !15068)
!15071 = !DILocalVariable(name: "nr", arg: 2, scope: !15068, file: !3, line: 2022, type: !7)
!15072 = !DILocation(line: 2022, column: 52, scope: !15068)
!15073 = !DILocation(line: 2024, column: 6, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15068, file: !3, line: 2024, column: 6)
!15075 = !DILocation(line: 2024, column: 11, scope: !15074)
!15076 = !DILocation(line: 2024, column: 15, scope: !15074)
!15077 = !DILocation(line: 2024, column: 25, scope: !15074)
!15078 = !DILocation(line: 2024, column: 29, scope: !15074)
!15079 = !DILocation(line: 2024, column: 35, scope: !15074)
!15080 = !DILocation(line: 2024, column: 23, scope: !15074)
!15081 = !DILocation(line: 2024, column: 9, scope: !15074)
!15082 = !DILocation(line: 2024, column: 6, scope: !15068)
!15083 = !DILocation(line: 2025, column: 8, scope: !15074)
!15084 = !DILocation(line: 2025, column: 12, scope: !15074)
!15085 = !DILocation(line: 2025, column: 22, scope: !15074)
!15086 = !DILocation(line: 2025, column: 26, scope: !15074)
!15087 = !DILocation(line: 2025, column: 32, scope: !15074)
!15088 = !DILocation(line: 2025, column: 20, scope: !15074)
!15089 = !DILocation(line: 2025, column: 6, scope: !15074)
!15090 = !DILocation(line: 2025, column: 3, scope: !15074)
!15091 = !DILocation(line: 2026, column: 12, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !15074, file: !3, line: 2026, column: 11)
!15093 = !DILocation(line: 2026, column: 11, scope: !15074)
!15094 = !DILocation(line: 2027, column: 6, scope: !15092)
!15095 = !DILocation(line: 2027, column: 3, scope: !15092)
!15096 = !DILocation(line: 2028, column: 14, scope: !15068)
!15097 = !DILocation(line: 2028, column: 18, scope: !15068)
!15098 = !DILocation(line: 2028, column: 2, scope: !15068)
!15099 = !DILocation(line: 2029, column: 1, scope: !15068)
!15100 = distinct !DISubprogram(name: "csi_m", scope: !3, file: !3, line: 1714, type: !4246, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15101 = !DILocalVariable(name: "vc", arg: 1, scope: !15100, file: !3, line: 1714, type: !220)
!15102 = !DILocation(line: 1714, column: 35, scope: !15100)
!15103 = !DILocalVariable(name: "i", scope: !15100, file: !3, line: 1716, type: !215)
!15104 = !DILocation(line: 1716, column: 6, scope: !15100)
!15105 = !DILocation(line: 1718, column: 9, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15100, file: !3, line: 1718, column: 2)
!15107 = !DILocation(line: 1718, column: 7, scope: !15106)
!15108 = !DILocation(line: 1718, column: 14, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15106, file: !3, line: 1718, column: 2)
!15110 = !DILocation(line: 1718, column: 19, scope: !15109)
!15111 = !DILocation(line: 1718, column: 23, scope: !15109)
!15112 = !DILocation(line: 1718, column: 16, scope: !15109)
!15113 = !DILocation(line: 1718, column: 2, scope: !15106)
!15114 = !DILocation(line: 1719, column: 11, scope: !15109)
!15115 = !DILocation(line: 1719, column: 15, scope: !15109)
!15116 = !DILocation(line: 1719, column: 22, scope: !15109)
!15117 = !DILocation(line: 1719, column: 3, scope: !15109)
!15118 = !DILocation(line: 1721, column: 17, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15109, file: !3, line: 1719, column: 26)
!15120 = !DILocation(line: 1721, column: 4, scope: !15119)
!15121 = !DILocation(line: 1722, column: 4, scope: !15119)
!15122 = !DILocation(line: 1724, column: 4, scope: !15119)
!15123 = !DILocation(line: 1724, column: 8, scope: !15119)
!15124 = !DILocation(line: 1724, column: 14, scope: !15119)
!15125 = !DILocation(line: 1724, column: 24, scope: !15119)
!15126 = !DILocation(line: 1725, column: 4, scope: !15119)
!15127 = !DILocation(line: 1727, column: 4, scope: !15119)
!15128 = !DILocation(line: 1727, column: 8, scope: !15119)
!15129 = !DILocation(line: 1727, column: 14, scope: !15119)
!15130 = !DILocation(line: 1727, column: 24, scope: !15119)
!15131 = !DILocation(line: 1728, column: 4, scope: !15119)
!15132 = !DILocation(line: 1730, column: 4, scope: !15119)
!15133 = !DILocation(line: 1730, column: 8, scope: !15119)
!15134 = !DILocation(line: 1730, column: 14, scope: !15119)
!15135 = !DILocation(line: 1730, column: 21, scope: !15119)
!15136 = !DILocation(line: 1731, column: 4, scope: !15119)
!15137 = !DILocation(line: 1738, column: 4, scope: !15119)
!15138 = !DILocation(line: 1738, column: 8, scope: !15119)
!15139 = !DILocation(line: 1738, column: 14, scope: !15119)
!15140 = !DILocation(line: 1738, column: 24, scope: !15119)
!15141 = !DILocation(line: 1739, column: 4, scope: !15119)
!15142 = !DILocation(line: 1741, column: 4, scope: !15119)
!15143 = !DILocation(line: 1741, column: 8, scope: !15119)
!15144 = !DILocation(line: 1741, column: 14, scope: !15119)
!15145 = !DILocation(line: 1741, column: 20, scope: !15119)
!15146 = !DILocation(line: 1742, column: 4, scope: !15119)
!15147 = !DILocation(line: 1744, column: 4, scope: !15119)
!15148 = !DILocation(line: 1744, column: 8, scope: !15119)
!15149 = !DILocation(line: 1744, column: 14, scope: !15119)
!15150 = !DILocation(line: 1744, column: 22, scope: !15119)
!15151 = !DILocation(line: 1745, column: 4, scope: !15119)
!15152 = !DILocation(line: 1750, column: 37, scope: !15119)
!15153 = !DILocation(line: 1750, column: 41, scope: !15119)
!15154 = !DILocation(line: 1750, column: 47, scope: !15119)
!15155 = !DILocation(line: 1750, column: 58, scope: !15119)
!15156 = !DILocation(line: 1750, column: 62, scope: !15119)
!15157 = !DILocation(line: 1750, column: 68, scope: !15119)
!15158 = !DILocation(line: 1750, column: 78, scope: !15119)
!15159 = !DILocation(line: 1750, column: 23, scope: !15119)
!15160 = !DILocation(line: 1750, column: 4, scope: !15119)
!15161 = !DILocation(line: 1750, column: 8, scope: !15119)
!15162 = !DILocation(line: 1750, column: 21, scope: !15119)
!15163 = !DILocation(line: 1751, column: 4, scope: !15119)
!15164 = !DILocation(line: 1751, column: 8, scope: !15119)
!15165 = !DILocation(line: 1751, column: 21, scope: !15119)
!15166 = !DILocation(line: 1752, column: 4, scope: !15119)
!15167 = !DILocation(line: 1752, column: 8, scope: !15119)
!15168 = !DILocation(line: 1752, column: 23, scope: !15119)
!15169 = !DILocation(line: 1753, column: 4, scope: !15119)
!15170 = !DILocation(line: 1758, column: 48, scope: !15119)
!15171 = !DILocation(line: 1758, column: 23, scope: !15119)
!15172 = !DILocation(line: 1758, column: 4, scope: !15119)
!15173 = !DILocation(line: 1758, column: 8, scope: !15119)
!15174 = !DILocation(line: 1758, column: 21, scope: !15119)
!15175 = !DILocation(line: 1759, column: 4, scope: !15119)
!15176 = !DILocation(line: 1759, column: 8, scope: !15119)
!15177 = !DILocation(line: 1759, column: 21, scope: !15119)
!15178 = !DILocation(line: 1760, column: 4, scope: !15119)
!15179 = !DILocation(line: 1760, column: 8, scope: !15119)
!15180 = !DILocation(line: 1760, column: 23, scope: !15119)
!15181 = !DILocation(line: 1761, column: 4, scope: !15119)
!15182 = !DILocation(line: 1766, column: 48, scope: !15119)
!15183 = !DILocation(line: 1766, column: 23, scope: !15119)
!15184 = !DILocation(line: 1766, column: 4, scope: !15119)
!15185 = !DILocation(line: 1766, column: 8, scope: !15119)
!15186 = !DILocation(line: 1766, column: 21, scope: !15119)
!15187 = !DILocation(line: 1767, column: 4, scope: !15119)
!15188 = !DILocation(line: 1767, column: 8, scope: !15119)
!15189 = !DILocation(line: 1767, column: 21, scope: !15119)
!15190 = !DILocation(line: 1768, column: 4, scope: !15119)
!15191 = !DILocation(line: 1768, column: 8, scope: !15119)
!15192 = !DILocation(line: 1768, column: 23, scope: !15119)
!15193 = !DILocation(line: 1769, column: 4, scope: !15119)
!15194 = !DILocation(line: 1771, column: 4, scope: !15119)
!15195 = !DILocation(line: 1771, column: 8, scope: !15119)
!15196 = !DILocation(line: 1771, column: 14, scope: !15119)
!15197 = !DILocation(line: 1771, column: 24, scope: !15119)
!15198 = !DILocation(line: 1772, column: 4, scope: !15119)
!15199 = !DILocation(line: 1774, column: 4, scope: !15119)
!15200 = !DILocation(line: 1774, column: 8, scope: !15119)
!15201 = !DILocation(line: 1774, column: 14, scope: !15119)
!15202 = !DILocation(line: 1774, column: 21, scope: !15119)
!15203 = !DILocation(line: 1775, column: 4, scope: !15119)
!15204 = !DILocation(line: 1777, column: 4, scope: !15119)
!15205 = !DILocation(line: 1777, column: 8, scope: !15119)
!15206 = !DILocation(line: 1777, column: 14, scope: !15119)
!15207 = !DILocation(line: 1777, column: 24, scope: !15119)
!15208 = !DILocation(line: 1778, column: 4, scope: !15119)
!15209 = !DILocation(line: 1780, column: 4, scope: !15119)
!15210 = !DILocation(line: 1780, column: 8, scope: !15119)
!15211 = !DILocation(line: 1780, column: 14, scope: !15119)
!15212 = !DILocation(line: 1780, column: 20, scope: !15119)
!15213 = !DILocation(line: 1781, column: 4, scope: !15119)
!15214 = !DILocation(line: 1783, column: 4, scope: !15119)
!15215 = !DILocation(line: 1783, column: 8, scope: !15119)
!15216 = !DILocation(line: 1783, column: 14, scope: !15119)
!15217 = !DILocation(line: 1783, column: 22, scope: !15119)
!15218 = !DILocation(line: 1784, column: 4, scope: !15119)
!15219 = !DILocation(line: 1786, column: 22, scope: !15119)
!15220 = !DILocation(line: 1786, column: 26, scope: !15119)
!15221 = !DILocation(line: 1786, column: 8, scope: !15119)
!15222 = !DILocation(line: 1786, column: 6, scope: !15119)
!15223 = !DILocation(line: 1787, column: 4, scope: !15119)
!15224 = !DILocation(line: 1789, column: 22, scope: !15119)
!15225 = !DILocation(line: 1789, column: 26, scope: !15119)
!15226 = !DILocation(line: 1789, column: 8, scope: !15119)
!15227 = !DILocation(line: 1789, column: 6, scope: !15119)
!15228 = !DILocation(line: 1790, column: 4, scope: !15119)
!15229 = !DILocation(line: 1792, column: 23, scope: !15119)
!15230 = !DILocation(line: 1792, column: 27, scope: !15119)
!15231 = !DILocation(line: 1792, column: 40, scope: !15119)
!15232 = !DILocation(line: 1793, column: 6, scope: !15119)
!15233 = !DILocation(line: 1793, column: 10, scope: !15119)
!15234 = !DILocation(line: 1793, column: 16, scope: !15119)
!15235 = !DILocation(line: 1793, column: 22, scope: !15119)
!15236 = !DILocation(line: 1792, column: 48, scope: !15119)
!15237 = !DILocation(line: 1792, column: 22, scope: !15119)
!15238 = !DILocation(line: 1792, column: 4, scope: !15119)
!15239 = !DILocation(line: 1792, column: 8, scope: !15119)
!15240 = !DILocation(line: 1792, column: 14, scope: !15119)
!15241 = !DILocation(line: 1792, column: 20, scope: !15119)
!15242 = !DILocation(line: 1794, column: 4, scope: !15119)
!15243 = !DILocation(line: 1796, column: 23, scope: !15119)
!15244 = !DILocation(line: 1796, column: 27, scope: !15119)
!15245 = !DILocation(line: 1796, column: 40, scope: !15119)
!15246 = !DILocation(line: 1797, column: 6, scope: !15119)
!15247 = !DILocation(line: 1797, column: 10, scope: !15119)
!15248 = !DILocation(line: 1797, column: 16, scope: !15119)
!15249 = !DILocation(line: 1797, column: 22, scope: !15119)
!15250 = !DILocation(line: 1796, column: 48, scope: !15119)
!15251 = !DILocation(line: 1796, column: 22, scope: !15119)
!15252 = !DILocation(line: 1796, column: 4, scope: !15119)
!15253 = !DILocation(line: 1796, column: 8, scope: !15119)
!15254 = !DILocation(line: 1796, column: 14, scope: !15119)
!15255 = !DILocation(line: 1796, column: 20, scope: !15119)
!15256 = !DILocation(line: 1798, column: 4, scope: !15119)
!15257 = !DILocation(line: 1800, column: 8, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15119, file: !3, line: 1800, column: 8)
!15259 = !DILocation(line: 1800, column: 12, scope: !15258)
!15260 = !DILocation(line: 1800, column: 19, scope: !15258)
!15261 = !DILocation(line: 1800, column: 22, scope: !15258)
!15262 = !DILocation(line: 1800, column: 28, scope: !15258)
!15263 = !DILocation(line: 1800, column: 31, scope: !15258)
!15264 = !DILocation(line: 1800, column: 35, scope: !15258)
!15265 = !DILocation(line: 1800, column: 42, scope: !15258)
!15266 = !DILocation(line: 1800, column: 45, scope: !15258)
!15267 = !DILocation(line: 1800, column: 8, scope: !15119)
!15268 = !DILocation(line: 1801, column: 9, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15270, file: !3, line: 1801, column: 9)
!15270 = distinct !DILexicalBlock(scope: !15258, file: !3, line: 1800, column: 53)
!15271 = !DILocation(line: 1801, column: 13, scope: !15269)
!15272 = !DILocation(line: 1801, column: 20, scope: !15269)
!15273 = !DILocation(line: 1801, column: 23, scope: !15269)
!15274 = !DILocation(line: 1801, column: 9, scope: !15270)
!15275 = !DILocation(line: 1802, column: 6, scope: !15269)
!15276 = !DILocation(line: 1802, column: 10, scope: !15269)
!15277 = !DILocation(line: 1802, column: 16, scope: !15269)
!15278 = !DILocation(line: 1802, column: 26, scope: !15269)
!15279 = !DILocation(line: 1803, column: 5, scope: !15270)
!15280 = !DILocation(line: 1803, column: 9, scope: !15270)
!15281 = !DILocation(line: 1803, column: 16, scope: !15270)
!15282 = !DILocation(line: 1803, column: 19, scope: !15270)
!15283 = !DILocation(line: 1804, column: 4, scope: !15270)
!15284 = !DILocation(line: 1805, column: 8, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15119, file: !3, line: 1805, column: 8)
!15286 = !DILocation(line: 1805, column: 12, scope: !15285)
!15287 = !DILocation(line: 1805, column: 19, scope: !15285)
!15288 = !DILocation(line: 1805, column: 22, scope: !15285)
!15289 = !DILocation(line: 1805, column: 28, scope: !15285)
!15290 = !DILocation(line: 1805, column: 31, scope: !15285)
!15291 = !DILocation(line: 1805, column: 35, scope: !15285)
!15292 = !DILocation(line: 1805, column: 42, scope: !15285)
!15293 = !DILocation(line: 1805, column: 45, scope: !15285)
!15294 = !DILocation(line: 1805, column: 8, scope: !15119)
!15295 = !DILocation(line: 1806, column: 35, scope: !15285)
!15296 = !DILocation(line: 1806, column: 39, scope: !15285)
!15297 = !DILocation(line: 1806, column: 46, scope: !15285)
!15298 = !DILocation(line: 1806, column: 49, scope: !15285)
!15299 = !DILocation(line: 1806, column: 23, scope: !15285)
!15300 = !DILocation(line: 1807, column: 9, scope: !15285)
!15301 = !DILocation(line: 1807, column: 13, scope: !15285)
!15302 = !DILocation(line: 1807, column: 19, scope: !15285)
!15303 = !DILocation(line: 1807, column: 25, scope: !15285)
!15304 = !DILocation(line: 1807, column: 6, scope: !15285)
!15305 = !DILocation(line: 1806, column: 5, scope: !15285)
!15306 = !DILocation(line: 1806, column: 9, scope: !15285)
!15307 = !DILocation(line: 1806, column: 15, scope: !15285)
!15308 = !DILocation(line: 1806, column: 21, scope: !15285)
!15309 = !DILocation(line: 1808, column: 13, scope: !15310)
!15310 = distinct !DILexicalBlock(scope: !15285, file: !3, line: 1808, column: 13)
!15311 = !DILocation(line: 1808, column: 17, scope: !15310)
!15312 = !DILocation(line: 1808, column: 24, scope: !15310)
!15313 = !DILocation(line: 1808, column: 27, scope: !15310)
!15314 = !DILocation(line: 1808, column: 33, scope: !15310)
!15315 = !DILocation(line: 1808, column: 36, scope: !15310)
!15316 = !DILocation(line: 1808, column: 40, scope: !15310)
!15317 = !DILocation(line: 1808, column: 47, scope: !15310)
!15318 = !DILocation(line: 1808, column: 50, scope: !15310)
!15319 = !DILocation(line: 1808, column: 13, scope: !15285)
!15320 = !DILocation(line: 1809, column: 36, scope: !15310)
!15321 = !DILocation(line: 1809, column: 40, scope: !15310)
!15322 = !DILocation(line: 1809, column: 47, scope: !15310)
!15323 = !DILocation(line: 1809, column: 50, scope: !15310)
!15324 = !DILocation(line: 1809, column: 24, scope: !15310)
!15325 = !DILocation(line: 1809, column: 56, scope: !15310)
!15326 = !DILocation(line: 1810, column: 9, scope: !15310)
!15327 = !DILocation(line: 1810, column: 13, scope: !15310)
!15328 = !DILocation(line: 1810, column: 19, scope: !15310)
!15329 = !DILocation(line: 1810, column: 25, scope: !15310)
!15330 = !DILocation(line: 1810, column: 6, scope: !15310)
!15331 = !DILocation(line: 1809, column: 23, scope: !15310)
!15332 = !DILocation(line: 1809, column: 5, scope: !15310)
!15333 = !DILocation(line: 1809, column: 9, scope: !15310)
!15334 = !DILocation(line: 1809, column: 15, scope: !15310)
!15335 = !DILocation(line: 1809, column: 21, scope: !15310)
!15336 = !DILocation(line: 1811, column: 4, scope: !15119)
!15337 = !DILocation(line: 1812, column: 3, scope: !15119)
!15338 = !DILocation(line: 1718, column: 33, scope: !15109)
!15339 = !DILocation(line: 1718, column: 2, scope: !15109)
!15340 = distinct !{!15340, !15113, !15341}
!15341 = !DILocation(line: 1812, column: 3, scope: !15106)
!15342 = !DILocation(line: 1813, column: 14, scope: !15100)
!15343 = !DILocation(line: 1813, column: 2, scope: !15100)
!15344 = !DILocation(line: 1814, column: 1, scope: !15100)
!15345 = distinct !DISubprogram(name: "csi_X", scope: !3, file: !3, line: 1602, type: !12206, scopeLine: 1603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15346 = !DILocalVariable(name: "vc", arg: 1, scope: !15345, file: !3, line: 1602, type: !220)
!15347 = !DILocation(line: 1602, column: 35, scope: !15345)
!15348 = !DILocalVariable(name: "vpar", arg: 2, scope: !15345, file: !3, line: 1602, type: !7)
!15349 = !DILocation(line: 1602, column: 52, scope: !15345)
!15350 = !DILocalVariable(name: "count", scope: !15345, file: !3, line: 1604, type: !7)
!15351 = !DILocation(line: 1604, column: 15, scope: !15345)
!15352 = !DILocation(line: 1606, column: 7, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15345, file: !3, line: 1606, column: 6)
!15354 = !DILocation(line: 1606, column: 6, scope: !15345)
!15355 = !DILocation(line: 1607, column: 7, scope: !15353)
!15356 = !DILocation(line: 1607, column: 3, scope: !15353)
!15357 = !DILocalVariable(name: "__UNIQUE_ID___x255", scope: !15358, file: !3, line: 1609, type: !7)
!15358 = distinct !DILexicalBlock(scope: !15345, file: !3, line: 1609, column: 10)
!15359 = !DILocation(line: 1609, column: 10, scope: !15358)
!15360 = !DILocalVariable(name: "__UNIQUE_ID___y256", scope: !15358, file: !3, line: 1609, type: !7)
!15361 = !DILocation(line: 1609, column: 8, scope: !15345)
!15362 = !DILocation(line: 1611, column: 23, scope: !15345)
!15363 = !DILocation(line: 1611, column: 27, scope: !15345)
!15364 = !DILocation(line: 1611, column: 31, scope: !15345)
!15365 = !DILocation(line: 1611, column: 37, scope: !15345)
!15366 = !DILocation(line: 1611, column: 40, scope: !15345)
!15367 = !DILocation(line: 1611, column: 2, scope: !15345)
!15368 = !DILocation(line: 1612, column: 32, scope: !15345)
!15369 = !DILocation(line: 1612, column: 36, scope: !15345)
!15370 = !DILocation(line: 1612, column: 14, scope: !15345)
!15371 = !DILocation(line: 1612, column: 44, scope: !15345)
!15372 = !DILocation(line: 1612, column: 48, scope: !15345)
!15373 = !DILocation(line: 1612, column: 73, scope: !15345)
!15374 = !DILocation(line: 1612, column: 71, scope: !15345)
!15375 = !DILocation(line: 1612, column: 2, scope: !15345)
!15376 = !DILocation(line: 1613, column: 24, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15345, file: !3, line: 1613, column: 6)
!15378 = !DILocation(line: 1613, column: 6, scope: !15377)
!15379 = !DILocation(line: 1613, column: 6, scope: !15345)
!15380 = !DILocation(line: 1614, column: 3, scope: !15377)
!15381 = !DILocation(line: 1614, column: 7, scope: !15377)
!15382 = !DILocation(line: 1614, column: 14, scope: !15377)
!15383 = !DILocation(line: 1614, column: 24, scope: !15377)
!15384 = !DILocation(line: 1614, column: 28, scope: !15377)
!15385 = !DILocation(line: 1614, column: 32, scope: !15377)
!15386 = !DILocation(line: 1614, column: 38, scope: !15377)
!15387 = !DILocation(line: 1614, column: 41, scope: !15377)
!15388 = !DILocation(line: 1614, column: 45, scope: !15377)
!15389 = !DILocation(line: 1614, column: 51, scope: !15377)
!15390 = !DILocation(line: 1614, column: 57, scope: !15377)
!15391 = !DILocation(line: 1615, column: 2, scope: !15345)
!15392 = !DILocation(line: 1615, column: 6, scope: !15345)
!15393 = !DILocation(line: 1615, column: 19, scope: !15345)
!15394 = !DILocation(line: 1616, column: 1, scope: !15345)
!15395 = distinct !DISubprogram(name: "csi_at", scope: !3, file: !3, line: 2001, type: !12206, scopeLine: 2002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15396 = !DILocalVariable(name: "vc", arg: 1, scope: !15395, file: !3, line: 2001, type: !220)
!15397 = !DILocation(line: 2001, column: 36, scope: !15395)
!15398 = !DILocalVariable(name: "nr", arg: 2, scope: !15395, file: !3, line: 2001, type: !7)
!15399 = !DILocation(line: 2001, column: 53, scope: !15395)
!15400 = !DILocation(line: 2003, column: 6, scope: !15401)
!15401 = distinct !DILexicalBlock(scope: !15395, file: !3, line: 2003, column: 6)
!15402 = !DILocation(line: 2003, column: 11, scope: !15401)
!15403 = !DILocation(line: 2003, column: 15, scope: !15401)
!15404 = !DILocation(line: 2003, column: 25, scope: !15401)
!15405 = !DILocation(line: 2003, column: 29, scope: !15401)
!15406 = !DILocation(line: 2003, column: 35, scope: !15401)
!15407 = !DILocation(line: 2003, column: 23, scope: !15401)
!15408 = !DILocation(line: 2003, column: 9, scope: !15401)
!15409 = !DILocation(line: 2003, column: 6, scope: !15395)
!15410 = !DILocation(line: 2004, column: 8, scope: !15401)
!15411 = !DILocation(line: 2004, column: 12, scope: !15401)
!15412 = !DILocation(line: 2004, column: 22, scope: !15401)
!15413 = !DILocation(line: 2004, column: 26, scope: !15401)
!15414 = !DILocation(line: 2004, column: 32, scope: !15401)
!15415 = !DILocation(line: 2004, column: 20, scope: !15401)
!15416 = !DILocation(line: 2004, column: 6, scope: !15401)
!15417 = !DILocation(line: 2004, column: 3, scope: !15401)
!15418 = !DILocation(line: 2005, column: 12, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15401, file: !3, line: 2005, column: 11)
!15420 = !DILocation(line: 2005, column: 11, scope: !15401)
!15421 = !DILocation(line: 2006, column: 6, scope: !15419)
!15422 = !DILocation(line: 2006, column: 3, scope: !15419)
!15423 = !DILocation(line: 2007, column: 14, scope: !15395)
!15424 = !DILocation(line: 2007, column: 18, scope: !15395)
!15425 = !DILocation(line: 2007, column: 2, scope: !15395)
!15426 = !DILocation(line: 2008, column: 1, scope: !15395)
!15427 = distinct !DISubprogram(name: "setterm_command", scope: !3, file: !3, line: 1936, type: !4246, scopeLine: 1937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15428 = !DILocalVariable(name: "m", arg: 1, scope: !15429, file: !15430, line: 363, type: !2913)
!15429 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !15430, file: !15430, line: 363, type: !15431, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15430 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!15431 = !DISubroutineType(types: !15432)
!15432 = !{!193, !2913}
!15433 = !DILocation(line: 363, column: 74, scope: !15429, inlinedAt: !15434)
!15434 = distinct !DILocation(line: 1973, column: 5, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 1971, column: 7)
!15436 = distinct !DILexicalBlock(scope: !15427, file: !3, line: 1938, column: 25)
!15437 = !DILocalVariable(name: "vc", arg: 1, scope: !15427, file: !3, line: 1936, type: !220)
!15438 = !DILocation(line: 1936, column: 45, scope: !15427)
!15439 = !DILocation(line: 1938, column: 10, scope: !15427)
!15440 = !DILocation(line: 1938, column: 14, scope: !15427)
!15441 = !DILocation(line: 1938, column: 2, scope: !15427)
!15442 = !DILocation(line: 1940, column: 7, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 1940, column: 7)
!15444 = !DILocation(line: 1940, column: 11, scope: !15443)
!15445 = !DILocation(line: 1940, column: 27, scope: !15443)
!15446 = !DILocation(line: 1940, column: 30, scope: !15443)
!15447 = !DILocation(line: 1940, column: 34, scope: !15443)
!15448 = !DILocation(line: 1940, column: 44, scope: !15443)
!15449 = !DILocation(line: 1940, column: 7, scope: !15436)
!15450 = !DILocation(line: 1941, column: 33, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !15443, file: !3, line: 1940, column: 50)
!15452 = !DILocation(line: 1941, column: 37, scope: !15451)
!15453 = !DILocation(line: 1941, column: 21, scope: !15451)
!15454 = !DILocation(line: 1941, column: 4, scope: !15451)
!15455 = !DILocation(line: 1941, column: 8, scope: !15451)
!15456 = !DILocation(line: 1941, column: 19, scope: !15451)
!15457 = !DILocation(line: 1942, column: 8, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15451, file: !3, line: 1942, column: 8)
!15459 = !DILocation(line: 1942, column: 12, scope: !15458)
!15460 = !DILocation(line: 1942, column: 18, scope: !15458)
!15461 = !DILocation(line: 1942, column: 8, scope: !15451)
!15462 = !DILocation(line: 1943, column: 17, scope: !15458)
!15463 = !DILocation(line: 1943, column: 5, scope: !15458)
!15464 = !DILocation(line: 1944, column: 3, scope: !15451)
!15465 = !DILocation(line: 1945, column: 3, scope: !15436)
!15466 = !DILocation(line: 1947, column: 7, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 1947, column: 7)
!15468 = !DILocation(line: 1947, column: 11, scope: !15467)
!15469 = !DILocation(line: 1947, column: 27, scope: !15467)
!15470 = !DILocation(line: 1947, column: 30, scope: !15467)
!15471 = !DILocation(line: 1947, column: 34, scope: !15467)
!15472 = !DILocation(line: 1947, column: 44, scope: !15467)
!15473 = !DILocation(line: 1947, column: 7, scope: !15436)
!15474 = !DILocation(line: 1948, column: 35, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15467, file: !3, line: 1947, column: 50)
!15476 = !DILocation(line: 1948, column: 39, scope: !15475)
!15477 = !DILocation(line: 1948, column: 23, scope: !15475)
!15478 = !DILocation(line: 1948, column: 4, scope: !15475)
!15479 = !DILocation(line: 1948, column: 8, scope: !15475)
!15480 = !DILocation(line: 1948, column: 21, scope: !15475)
!15481 = !DILocation(line: 1949, column: 8, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15475, file: !3, line: 1949, column: 8)
!15483 = !DILocation(line: 1949, column: 12, scope: !15482)
!15484 = !DILocation(line: 1949, column: 18, scope: !15482)
!15485 = !DILocation(line: 1949, column: 28, scope: !15482)
!15486 = !DILocation(line: 1949, column: 8, scope: !15475)
!15487 = !DILocation(line: 1950, column: 17, scope: !15482)
!15488 = !DILocation(line: 1950, column: 5, scope: !15482)
!15489 = !DILocation(line: 1951, column: 3, scope: !15475)
!15490 = !DILocation(line: 1952, column: 3, scope: !15436)
!15491 = !DILocation(line: 1954, column: 22, scope: !15436)
!15492 = !DILocation(line: 1954, column: 26, scope: !15436)
!15493 = !DILocation(line: 1954, column: 3, scope: !15436)
!15494 = !DILocation(line: 1954, column: 7, scope: !15436)
!15495 = !DILocation(line: 1954, column: 20, scope: !15436)
!15496 = !DILocation(line: 1955, column: 7, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 1955, column: 7)
!15498 = !DILocation(line: 1955, column: 11, scope: !15497)
!15499 = !DILocation(line: 1955, column: 27, scope: !15497)
!15500 = !DILocation(line: 1955, column: 7, scope: !15436)
!15501 = !DILocation(line: 1956, column: 4, scope: !15497)
!15502 = !DILocation(line: 1956, column: 8, scope: !15497)
!15503 = !DILocation(line: 1956, column: 21, scope: !15497)
!15504 = !DILocation(line: 1957, column: 16, scope: !15436)
!15505 = !DILocation(line: 1957, column: 3, scope: !15436)
!15506 = !DILocation(line: 1958, column: 15, scope: !15436)
!15507 = !DILocation(line: 1958, column: 3, scope: !15436)
!15508 = !DILocation(line: 1959, column: 3, scope: !15436)
!15509 = !DILocalVariable(name: "__UNIQUE_ID___x261", scope: !15510, file: !3, line: 1961, type: !7)
!15510 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 1961, column: 19)
!15511 = !DILocation(line: 1961, column: 19, scope: !15510)
!15512 = !DILocalVariable(name: "__UNIQUE_ID___y262", scope: !15510, file: !3, line: 1961, type: !7)
!15513 = !DILocation(line: 1961, column: 43, scope: !15436)
!15514 = !DILocation(line: 1961, column: 17, scope: !15436)
!15515 = !DILocation(line: 1962, column: 3, scope: !15436)
!15516 = !DILocation(line: 1963, column: 3, scope: !15436)
!15517 = !DILocation(line: 1965, column: 7, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 1965, column: 7)
!15519 = !DILocation(line: 1965, column: 11, scope: !15518)
!15520 = !DILocation(line: 1965, column: 19, scope: !15518)
!15521 = !DILocation(line: 1965, column: 7, scope: !15436)
!15522 = !DILocation(line: 1966, column: 24, scope: !15518)
!15523 = !DILocation(line: 1966, column: 28, scope: !15518)
!15524 = !DILocation(line: 1966, column: 4, scope: !15518)
!15525 = !DILocation(line: 1966, column: 8, scope: !15518)
!15526 = !DILocation(line: 1966, column: 22, scope: !15518)
!15527 = !DILocation(line: 1968, column: 4, scope: !15518)
!15528 = !DILocation(line: 1968, column: 8, scope: !15518)
!15529 = !DILocation(line: 1968, column: 22, scope: !15518)
!15530 = !DILocation(line: 1969, column: 3, scope: !15436)
!15531 = !DILocation(line: 1971, column: 7, scope: !15435)
!15532 = !DILocation(line: 1971, column: 11, scope: !15435)
!15533 = !DILocation(line: 1971, column: 19, scope: !15435)
!15534 = !DILocation(line: 1971, column: 7, scope: !15436)
!15535 = !DILocation(line: 1972, column: 28, scope: !15435)
!15536 = !DILocation(line: 1972, column: 32, scope: !15435)
!15537 = !DILocation(line: 1972, column: 42, scope: !15435)
!15538 = !DILocation(line: 1972, column: 27, scope: !15435)
!15539 = !DILocation(line: 1973, column: 22, scope: !15435)
!15540 = !DILocation(line: 1973, column: 26, scope: !15435)
!15541 = !DILocation(line: 365, column: 27, scope: !15542, inlinedAt: !15434)
!15542 = distinct !DILexicalBlock(scope: !15429, file: !15430, line: 365, column: 6)
!15543 = !DILocation(line: 365, column: 6, scope: !15542, inlinedAt: !15434)
!15544 = !DILocation(line: 365, column: 6, scope: !15429, inlinedAt: !15434)
!15545 = !DILocation(line: 366, column: 12, scope: !15546, inlinedAt: !15434)
!15546 = distinct !DILexicalBlock(scope: !15547, file: !15430, line: 366, column: 7)
!15547 = distinct !DILexicalBlock(scope: !15542, file: !15430, line: 365, column: 31)
!15548 = !DILocation(line: 366, column: 14, scope: !15546, inlinedAt: !15434)
!15549 = !DILocation(line: 366, column: 7, scope: !15547, inlinedAt: !15434)
!15550 = !DILocation(line: 367, column: 4, scope: !15546, inlinedAt: !15434)
!15551 = !DILocation(line: 368, column: 28, scope: !15547, inlinedAt: !15434)
!15552 = !DILocation(line: 368, column: 10, scope: !15547, inlinedAt: !15434)
!15553 = !DILocation(line: 368, column: 3, scope: !15547, inlinedAt: !15434)
!15554 = !DILocation(line: 370, column: 29, scope: !15555, inlinedAt: !15434)
!15555 = distinct !DILexicalBlock(scope: !15542, file: !15430, line: 369, column: 9)
!15556 = !DILocation(line: 370, column: 10, scope: !15555, inlinedAt: !15434)
!15557 = !DILocation(line: 370, column: 3, scope: !15555, inlinedAt: !15434)
!15558 = !DILocation(line: 372, column: 1, scope: !15429, inlinedAt: !15434)
!15559 = !DILocation(line: 1972, column: 4, scope: !15435)
!15560 = !DILocation(line: 1972, column: 8, scope: !15435)
!15561 = !DILocation(line: 1972, column: 25, scope: !15435)
!15562 = !DILocation(line: 1975, column: 4, scope: !15435)
!15563 = !DILocation(line: 1975, column: 8, scope: !15435)
!15564 = !DILocation(line: 1975, column: 25, scope: !15435)
!15565 = !DILocation(line: 1976, column: 3, scope: !15436)
!15566 = !DILocation(line: 1978, column: 7, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 1978, column: 7)
!15568 = !DILocation(line: 1978, column: 11, scope: !15567)
!15569 = !DILocation(line: 1978, column: 21, scope: !15567)
!15570 = !DILocation(line: 1978, column: 26, scope: !15567)
!15571 = !DILocation(line: 1978, column: 47, scope: !15567)
!15572 = !DILocation(line: 1978, column: 51, scope: !15567)
!15573 = !DILocation(line: 1978, column: 61, scope: !15567)
!15574 = !DILocation(line: 1978, column: 29, scope: !15567)
!15575 = !DILocation(line: 1978, column: 7, scope: !15436)
!15576 = !DILocation(line: 1979, column: 16, scope: !15567)
!15577 = !DILocation(line: 1979, column: 20, scope: !15567)
!15578 = !DILocation(line: 1979, column: 30, scope: !15567)
!15579 = !DILocation(line: 1979, column: 4, scope: !15567)
!15580 = !DILocation(line: 1980, column: 3, scope: !15436)
!15581 = !DILocation(line: 1982, column: 3, scope: !15436)
!15582 = !DILocation(line: 1983, column: 3, scope: !15436)
!15583 = !DILocalVariable(name: "__UNIQUE_ID___x263", scope: !15584, file: !3, line: 1985, type: !7)
!15584 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 1985, column: 23)
!15585 = !DILocation(line: 1985, column: 23, scope: !15584)
!15586 = !DILocalVariable(name: "__UNIQUE_ID___y264", scope: !15584, file: !3, line: 1985, type: !7)
!15587 = !DILocation(line: 1985, column: 47, scope: !15436)
!15588 = !DILocation(line: 1985, column: 52, scope: !15436)
!15589 = !DILocation(line: 1985, column: 21, scope: !15436)
!15590 = !DILocation(line: 1986, column: 3, scope: !15436)
!15591 = !DILocation(line: 1988, column: 15, scope: !15436)
!15592 = !DILocation(line: 1988, column: 3, scope: !15436)
!15593 = !DILocation(line: 1989, column: 3, scope: !15436)
!15594 = !DILocation(line: 1991, column: 7, scope: !15595)
!15595 = distinct !DILexicalBlock(scope: !15436, file: !3, line: 1991, column: 7)
!15596 = !DILocation(line: 1991, column: 11, scope: !15595)
!15597 = !DILocation(line: 1991, column: 19, scope: !15595)
!15598 = !DILocation(line: 1991, column: 24, scope: !15595)
!15599 = !DILocation(line: 1991, column: 27, scope: !15595)
!15600 = !DILocation(line: 1991, column: 31, scope: !15595)
!15601 = !DILocation(line: 1991, column: 41, scope: !15595)
!15602 = !DILocation(line: 1991, column: 47, scope: !15595)
!15603 = !DILocation(line: 1992, column: 5, scope: !15595)
!15604 = !DILocation(line: 1992, column: 9, scope: !15595)
!15605 = !DILocation(line: 1992, column: 19, scope: !15595)
!15606 = !DILocation(line: 1991, column: 7, scope: !15436)
!15607 = !DILocation(line: 1993, column: 26, scope: !15595)
!15608 = !DILocation(line: 1993, column: 30, scope: !15595)
!15609 = !DILocation(line: 1993, column: 4, scope: !15595)
!15610 = !DILocation(line: 1993, column: 8, scope: !15595)
!15611 = !DILocation(line: 1993, column: 24, scope: !15595)
!15612 = !DILocation(line: 1995, column: 4, scope: !15595)
!15613 = !DILocation(line: 1995, column: 8, scope: !15595)
!15614 = !DILocation(line: 1995, column: 24, scope: !15595)
!15615 = !DILocation(line: 1996, column: 3, scope: !15436)
!15616 = !DILocation(line: 1998, column: 1, scope: !15427)
!15617 = distinct !DISubprogram(name: "vc_setGx", scope: !3, file: !3, line: 2113, type: !15618, scopeLine: 2114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15618 = !DISubroutineType(types: !15619)
!15619 = !{null, !220, !7, !215}
!15620 = !DILocalVariable(name: "vc", arg: 1, scope: !15617, file: !3, line: 2113, type: !220)
!15621 = !DILocation(line: 2113, column: 38, scope: !15617)
!15622 = !DILocalVariable(name: "which", arg: 2, scope: !15617, file: !3, line: 2113, type: !7)
!15623 = !DILocation(line: 2113, column: 55, scope: !15617)
!15624 = !DILocalVariable(name: "c", arg: 3, scope: !15617, file: !3, line: 2113, type: !215)
!15625 = !DILocation(line: 2113, column: 66, scope: !15617)
!15626 = !DILocalVariable(name: "charset", scope: !15617, file: !3, line: 2115, type: !4083)
!15627 = !DILocation(line: 2115, column: 17, scope: !15617)
!15628 = !DILocation(line: 2115, column: 28, scope: !15617)
!15629 = !DILocation(line: 2115, column: 32, scope: !15617)
!15630 = !DILocation(line: 2115, column: 38, scope: !15617)
!15631 = !DILocation(line: 2115, column: 49, scope: !15617)
!15632 = !DILocation(line: 2117, column: 10, scope: !15617)
!15633 = !DILocation(line: 2117, column: 2, scope: !15617)
!15634 = !DILocation(line: 2119, column: 4, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15617, file: !3, line: 2117, column: 13)
!15636 = !DILocation(line: 2119, column: 12, scope: !15635)
!15637 = !DILocation(line: 2120, column: 3, scope: !15635)
!15638 = !DILocation(line: 2122, column: 4, scope: !15635)
!15639 = !DILocation(line: 2122, column: 12, scope: !15635)
!15640 = !DILocation(line: 2123, column: 3, scope: !15635)
!15641 = !DILocation(line: 2125, column: 4, scope: !15635)
!15642 = !DILocation(line: 2125, column: 12, scope: !15635)
!15643 = !DILocation(line: 2126, column: 3, scope: !15635)
!15644 = !DILocation(line: 2128, column: 4, scope: !15635)
!15645 = !DILocation(line: 2128, column: 12, scope: !15635)
!15646 = !DILocation(line: 2129, column: 3, scope: !15635)
!15647 = !DILocation(line: 2132, column: 6, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15617, file: !3, line: 2132, column: 6)
!15649 = !DILocation(line: 2132, column: 10, scope: !15648)
!15650 = !DILocation(line: 2132, column: 16, scope: !15648)
!15651 = !DILocation(line: 2132, column: 27, scope: !15648)
!15652 = !DILocation(line: 2132, column: 24, scope: !15648)
!15653 = !DILocation(line: 2132, column: 6, scope: !15617)
!15654 = !DILocation(line: 2133, column: 37, scope: !15648)
!15655 = !DILocation(line: 2133, column: 36, scope: !15648)
!15656 = !DILocation(line: 2133, column: 46, scope: !15648)
!15657 = !DILocation(line: 2133, column: 22, scope: !15648)
!15658 = !DILocation(line: 2133, column: 3, scope: !15648)
!15659 = !DILocation(line: 2133, column: 7, scope: !15648)
!15660 = !DILocation(line: 2133, column: 20, scope: !15648)
!15661 = !DILocation(line: 2134, column: 1, scope: !15617)
!15662 = distinct !DISubprogram(name: "delete_char", scope: !3, file: !3, line: 853, type: !12206, scopeLine: 854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15663 = !DILocalVariable(name: "vc", arg: 1, scope: !15662, file: !3, line: 853, type: !220)
!15664 = !DILocation(line: 853, column: 41, scope: !15662)
!15665 = !DILocalVariable(name: "nr", arg: 2, scope: !15662, file: !3, line: 853, type: !7)
!15666 = !DILocation(line: 853, column: 58, scope: !15662)
!15667 = !DILocalVariable(name: "p", scope: !15662, file: !3, line: 855, type: !191)
!15668 = !DILocation(line: 855, column: 18, scope: !15662)
!15669 = !DILocation(line: 855, column: 41, scope: !15662)
!15670 = !DILocation(line: 855, column: 45, scope: !15662)
!15671 = !DILocation(line: 855, column: 22, scope: !15662)
!15672 = !DILocation(line: 857, column: 19, scope: !15662)
!15673 = !DILocation(line: 857, column: 23, scope: !15662)
!15674 = !DILocation(line: 857, column: 2, scope: !15662)
!15675 = !DILocation(line: 858, column: 14, scope: !15662)
!15676 = !DILocation(line: 858, column: 17, scope: !15662)
!15677 = !DILocation(line: 858, column: 21, scope: !15662)
!15678 = !DILocation(line: 858, column: 19, scope: !15662)
!15679 = !DILocation(line: 858, column: 26, scope: !15662)
!15680 = !DILocation(line: 858, column: 30, scope: !15662)
!15681 = !DILocation(line: 858, column: 40, scope: !15662)
!15682 = !DILocation(line: 858, column: 44, scope: !15662)
!15683 = !DILocation(line: 858, column: 50, scope: !15662)
!15684 = !DILocation(line: 858, column: 38, scope: !15662)
!15685 = !DILocation(line: 858, column: 54, scope: !15662)
!15686 = !DILocation(line: 858, column: 52, scope: !15662)
!15687 = !DILocation(line: 858, column: 58, scope: !15662)
!15688 = !DILocation(line: 858, column: 2, scope: !15662)
!15689 = !DILocation(line: 859, column: 14, scope: !15662)
!15690 = !DILocation(line: 859, column: 18, scope: !15662)
!15691 = !DILocation(line: 859, column: 22, scope: !15662)
!15692 = !DILocation(line: 859, column: 16, scope: !15662)
!15693 = !DILocation(line: 859, column: 32, scope: !15662)
!15694 = !DILocation(line: 859, column: 36, scope: !15662)
!15695 = !DILocation(line: 859, column: 42, scope: !15662)
!15696 = !DILocation(line: 859, column: 30, scope: !15662)
!15697 = !DILocation(line: 859, column: 46, scope: !15662)
!15698 = !DILocation(line: 859, column: 44, scope: !15662)
!15699 = !DILocation(line: 859, column: 50, scope: !15662)
!15700 = !DILocation(line: 859, column: 54, scope: !15662)
!15701 = !DILocation(line: 860, column: 4, scope: !15662)
!15702 = !DILocation(line: 860, column: 7, scope: !15662)
!15703 = !DILocation(line: 859, column: 2, scope: !15662)
!15704 = !DILocation(line: 861, column: 2, scope: !15662)
!15705 = !DILocation(line: 861, column: 6, scope: !15662)
!15706 = !DILocation(line: 861, column: 19, scope: !15662)
!15707 = !DILocation(line: 862, column: 24, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15662, file: !3, line: 862, column: 6)
!15709 = !DILocation(line: 862, column: 6, scope: !15708)
!15710 = !DILocation(line: 862, column: 6, scope: !15662)
!15711 = !DILocation(line: 863, column: 20, scope: !15708)
!15712 = !DILocation(line: 863, column: 40, scope: !15708)
!15713 = !DILocation(line: 863, column: 24, scope: !15708)
!15714 = !DILocation(line: 864, column: 4, scope: !15708)
!15715 = !DILocation(line: 864, column: 8, scope: !15708)
!15716 = !DILocation(line: 864, column: 18, scope: !15708)
!15717 = !DILocation(line: 864, column: 22, scope: !15708)
!15718 = !DILocation(line: 864, column: 28, scope: !15708)
!15719 = !DILocation(line: 864, column: 16, scope: !15708)
!15720 = !DILocation(line: 863, column: 3, scope: !15708)
!15721 = !DILocation(line: 865, column: 1, scope: !15662)
!15722 = distinct !DISubprogram(name: "vc_uniscr_delete", scope: !3, file: !3, line: 393, type: !12206, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15723 = !DILocalVariable(name: "vc", arg: 1, scope: !15722, file: !3, line: 393, type: !220)
!15724 = !DILocation(line: 393, column: 46, scope: !15722)
!15725 = !DILocalVariable(name: "nr", arg: 2, scope: !15722, file: !3, line: 393, type: !7)
!15726 = !DILocation(line: 393, column: 63, scope: !15722)
!15727 = !DILocalVariable(name: "uniscr", scope: !15722, file: !3, line: 395, type: !4395)
!15728 = !DILocation(line: 395, column: 21, scope: !15722)
!15729 = !DILocation(line: 395, column: 30, scope: !15722)
!15730 = !DILocation(line: 397, column: 6, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15722, file: !3, line: 397, column: 6)
!15732 = !DILocation(line: 397, column: 6, scope: !15722)
!15733 = !DILocalVariable(name: "ln", scope: !15734, file: !3, line: 398, type: !4400)
!15734 = distinct !DILexicalBlock(scope: !15731, file: !3, line: 397, column: 14)
!15735 = !DILocation(line: 398, column: 13, scope: !15734)
!15736 = !DILocation(line: 398, column: 18, scope: !15734)
!15737 = !DILocation(line: 398, column: 26, scope: !15734)
!15738 = !DILocation(line: 398, column: 32, scope: !15734)
!15739 = !DILocation(line: 398, column: 36, scope: !15734)
!15740 = !DILocation(line: 398, column: 42, scope: !15734)
!15741 = !DILocalVariable(name: "x", scope: !15734, file: !3, line: 399, type: !7)
!15742 = !DILocation(line: 399, column: 16, scope: !15734)
!15743 = !DILocation(line: 399, column: 20, scope: !15734)
!15744 = !DILocation(line: 399, column: 24, scope: !15734)
!15745 = !DILocation(line: 399, column: 30, scope: !15734)
!15746 = !DILocalVariable(name: "cols", scope: !15734, file: !3, line: 399, type: !7)
!15747 = !DILocation(line: 399, column: 33, scope: !15734)
!15748 = !DILocation(line: 399, column: 40, scope: !15734)
!15749 = !DILocation(line: 399, column: 44, scope: !15734)
!15750 = !DILocation(line: 401, column: 11, scope: !15734)
!15751 = !DILocation(line: 401, column: 14, scope: !15734)
!15752 = !DILocation(line: 401, column: 3, scope: !15734)
!15753 = !DILocation(line: 401, column: 19, scope: !15734)
!15754 = !DILocation(line: 401, column: 22, scope: !15734)
!15755 = !DILocation(line: 401, column: 26, scope: !15734)
!15756 = !DILocation(line: 401, column: 24, scope: !15734)
!15757 = !DILocation(line: 401, column: 32, scope: !15734)
!15758 = !DILocation(line: 401, column: 39, scope: !15734)
!15759 = !DILocation(line: 401, column: 37, scope: !15734)
!15760 = !DILocation(line: 401, column: 43, scope: !15734)
!15761 = !DILocation(line: 401, column: 41, scope: !15734)
!15762 = !DILocation(line: 401, column: 31, scope: !15734)
!15763 = !DILocation(line: 401, column: 47, scope: !15734)
!15764 = !DILocation(line: 402, column: 13, scope: !15734)
!15765 = !DILocation(line: 402, column: 16, scope: !15734)
!15766 = !DILocation(line: 402, column: 23, scope: !15734)
!15767 = !DILocation(line: 402, column: 21, scope: !15734)
!15768 = !DILocation(line: 402, column: 33, scope: !15734)
!15769 = !DILocation(line: 402, column: 3, scope: !15734)
!15770 = !DILocation(line: 403, column: 2, scope: !15734)
!15771 = !DILocation(line: 404, column: 1, scope: !15722)
!15772 = distinct !DISubprogram(name: "vc_t416_color", scope: !3, file: !3, line: 1686, type: !15773, scopeLine: 1688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15773 = !DISubroutineType(types: !15774)
!15774 = !{!215, !220, !215, !15775}
!15775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15776, size: 64)
!15776 = !DISubroutineType(types: !15777)
!15777 = !{null, !220, !15778}
!15778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15779, size: 64)
!15779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15780)
!15780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rgb", file: !3, line: 1628, size: 24, elements: !15781)
!15781 = !{!15782, !15783, !15784}
!15782 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !15780, file: !3, line: 1628, baseType: !1454, size: 8)
!15783 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !15780, file: !3, line: 1628, baseType: !1454, size: 8, offset: 8)
!15784 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !15780, file: !3, line: 1628, baseType: !1454, size: 8, offset: 16)
!15785 = !DILocalVariable(name: "vc", arg: 1, scope: !15772, file: !3, line: 1686, type: !220)
!15786 = !DILocation(line: 1686, column: 42, scope: !15772)
!15787 = !DILocalVariable(name: "i", arg: 2, scope: !15772, file: !3, line: 1686, type: !215)
!15788 = !DILocation(line: 1686, column: 50, scope: !15772)
!15789 = !DILocalVariable(name: "set_color", arg: 3, scope: !15772, file: !3, line: 1687, type: !15775)
!15790 = !DILocation(line: 1687, column: 9, scope: !15772)
!15791 = !DILocalVariable(name: "c", scope: !15772, file: !3, line: 1689, type: !15780)
!15792 = !DILocation(line: 1689, column: 13, scope: !15772)
!15793 = !DILocation(line: 1691, column: 3, scope: !15772)
!15794 = !DILocation(line: 1692, column: 6, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15772, file: !3, line: 1692, column: 6)
!15796 = !DILocation(line: 1692, column: 10, scope: !15795)
!15797 = !DILocation(line: 1692, column: 14, scope: !15795)
!15798 = !DILocation(line: 1692, column: 8, scope: !15795)
!15799 = !DILocation(line: 1692, column: 6, scope: !15772)
!15800 = !DILocation(line: 1693, column: 10, scope: !15795)
!15801 = !DILocation(line: 1693, column: 3, scope: !15795)
!15802 = !DILocation(line: 1695, column: 6, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15772, file: !3, line: 1695, column: 6)
!15804 = !DILocation(line: 1695, column: 10, scope: !15803)
!15805 = !DILocation(line: 1695, column: 17, scope: !15803)
!15806 = !DILocation(line: 1695, column: 20, scope: !15803)
!15807 = !DILocation(line: 1695, column: 25, scope: !15803)
!15808 = !DILocation(line: 1695, column: 28, scope: !15803)
!15809 = !DILocation(line: 1695, column: 30, scope: !15803)
!15810 = !DILocation(line: 1695, column: 37, scope: !15803)
!15811 = !DILocation(line: 1695, column: 41, scope: !15803)
!15812 = !DILocation(line: 1695, column: 34, scope: !15803)
!15813 = !DILocation(line: 1695, column: 6, scope: !15772)
!15814 = !DILocation(line: 1697, column: 4, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15803, file: !3, line: 1695, column: 50)
!15816 = !DILocation(line: 1698, column: 16, scope: !15815)
!15817 = !DILocation(line: 1698, column: 20, scope: !15815)
!15818 = !DILocation(line: 1698, column: 27, scope: !15815)
!15819 = !DILocation(line: 1698, column: 3, scope: !15815)
!15820 = !DILocation(line: 1699, column: 2, scope: !15815)
!15821 = !DILocation(line: 1699, column: 13, scope: !15822)
!15822 = distinct !DILexicalBlock(scope: !15803, file: !3, line: 1699, column: 13)
!15823 = !DILocation(line: 1699, column: 17, scope: !15822)
!15824 = !DILocation(line: 1699, column: 24, scope: !15822)
!15825 = !DILocation(line: 1699, column: 27, scope: !15822)
!15826 = !DILocation(line: 1699, column: 32, scope: !15822)
!15827 = !DILocation(line: 1699, column: 35, scope: !15822)
!15828 = !DILocation(line: 1699, column: 37, scope: !15822)
!15829 = !DILocation(line: 1699, column: 44, scope: !15822)
!15830 = !DILocation(line: 1699, column: 48, scope: !15822)
!15831 = !DILocation(line: 1699, column: 41, scope: !15822)
!15832 = !DILocation(line: 1699, column: 13, scope: !15803)
!15833 = !DILocation(line: 1701, column: 9, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15822, file: !3, line: 1699, column: 57)
!15835 = !DILocation(line: 1701, column: 13, scope: !15834)
!15836 = !DILocation(line: 1701, column: 20, scope: !15834)
!15837 = !DILocation(line: 1701, column: 22, scope: !15834)
!15838 = !DILocation(line: 1701, column: 5, scope: !15834)
!15839 = !DILocation(line: 1701, column: 7, scope: !15834)
!15840 = !DILocation(line: 1702, column: 9, scope: !15834)
!15841 = !DILocation(line: 1702, column: 13, scope: !15834)
!15842 = !DILocation(line: 1702, column: 20, scope: !15834)
!15843 = !DILocation(line: 1702, column: 22, scope: !15834)
!15844 = !DILocation(line: 1702, column: 5, scope: !15834)
!15845 = !DILocation(line: 1702, column: 7, scope: !15834)
!15846 = !DILocation(line: 1703, column: 9, scope: !15834)
!15847 = !DILocation(line: 1703, column: 13, scope: !15834)
!15848 = !DILocation(line: 1703, column: 20, scope: !15834)
!15849 = !DILocation(line: 1703, column: 22, scope: !15834)
!15850 = !DILocation(line: 1703, column: 5, scope: !15834)
!15851 = !DILocation(line: 1703, column: 7, scope: !15834)
!15852 = !DILocation(line: 1704, column: 5, scope: !15834)
!15853 = !DILocation(line: 1705, column: 2, scope: !15834)
!15854 = !DILocation(line: 1706, column: 10, scope: !15822)
!15855 = !DILocation(line: 1706, column: 3, scope: !15822)
!15856 = !DILocation(line: 1708, column: 2, scope: !15772)
!15857 = !DILocation(line: 1708, column: 12, scope: !15772)
!15858 = !DILocation(line: 1710, column: 9, scope: !15772)
!15859 = !DILocation(line: 1710, column: 2, scope: !15772)
!15860 = !DILocation(line: 1711, column: 1, scope: !15772)
!15861 = distinct !DISubprogram(name: "rgb_foreground", scope: !3, file: !3, line: 1648, type: !15776, scopeLine: 1649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15862 = !DILocalVariable(name: "vc", arg: 1, scope: !15861, file: !3, line: 1648, type: !220)
!15863 = !DILocation(line: 1648, column: 44, scope: !15861)
!15864 = !DILocalVariable(name: "c", arg: 2, scope: !15861, file: !3, line: 1648, type: !15778)
!15865 = !DILocation(line: 1648, column: 66, scope: !15861)
!15866 = !DILocalVariable(name: "hue", scope: !15861, file: !3, line: 1650, type: !1454)
!15867 = !DILocation(line: 1650, column: 5, scope: !15861)
!15868 = !DILocalVariable(name: "max", scope: !15861, file: !3, line: 1650, type: !1454)
!15869 = !DILocation(line: 1650, column: 14, scope: !15861)
!15870 = !DILocalVariable(name: "__UNIQUE_ID___x259", scope: !15871, file: !3, line: 1650, type: !1454)
!15871 = distinct !DILexicalBlock(scope: !15861, file: !3, line: 1650, column: 20)
!15872 = !DILocation(line: 1650, column: 20, scope: !15871)
!15873 = !DILocalVariable(name: "__UNIQUE_ID___x257", scope: !15874, file: !3, line: 1650, type: !15875)
!15874 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1650, column: 20)
!15875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!15876 = !DILocation(line: 1650, column: 20, scope: !15874)
!15877 = !DILocalVariable(name: "__UNIQUE_ID___y258", scope: !15874, file: !3, line: 1650, type: !15875)
!15878 = !DILocalVariable(name: "__UNIQUE_ID___y260", scope: !15871, file: !3, line: 1650, type: !15875)
!15879 = !DILocation(line: 1650, column: 20, scope: !15861)
!15880 = !DILocation(line: 1652, column: 6, scope: !15881)
!15881 = distinct !DILexicalBlock(scope: !15861, file: !3, line: 1652, column: 6)
!15882 = !DILocation(line: 1652, column: 9, scope: !15881)
!15883 = !DILocation(line: 1652, column: 13, scope: !15881)
!15884 = !DILocation(line: 1652, column: 17, scope: !15881)
!15885 = !DILocation(line: 1652, column: 11, scope: !15881)
!15886 = !DILocation(line: 1652, column: 6, scope: !15861)
!15887 = !DILocation(line: 1653, column: 7, scope: !15881)
!15888 = !DILocation(line: 1653, column: 3, scope: !15881)
!15889 = !DILocation(line: 1654, column: 6, scope: !15890)
!15890 = distinct !DILexicalBlock(scope: !15861, file: !3, line: 1654, column: 6)
!15891 = !DILocation(line: 1654, column: 9, scope: !15890)
!15892 = !DILocation(line: 1654, column: 13, scope: !15890)
!15893 = !DILocation(line: 1654, column: 17, scope: !15890)
!15894 = !DILocation(line: 1654, column: 11, scope: !15890)
!15895 = !DILocation(line: 1654, column: 6, scope: !15861)
!15896 = !DILocation(line: 1655, column: 7, scope: !15890)
!15897 = !DILocation(line: 1655, column: 3, scope: !15890)
!15898 = !DILocation(line: 1656, column: 6, scope: !15899)
!15899 = distinct !DILexicalBlock(scope: !15861, file: !3, line: 1656, column: 6)
!15900 = !DILocation(line: 1656, column: 9, scope: !15899)
!15901 = !DILocation(line: 1656, column: 13, scope: !15899)
!15902 = !DILocation(line: 1656, column: 17, scope: !15899)
!15903 = !DILocation(line: 1656, column: 11, scope: !15899)
!15904 = !DILocation(line: 1656, column: 6, scope: !15861)
!15905 = !DILocation(line: 1657, column: 7, scope: !15899)
!15906 = !DILocation(line: 1657, column: 3, scope: !15899)
!15907 = !DILocation(line: 1659, column: 6, scope: !15908)
!15908 = distinct !DILexicalBlock(scope: !15861, file: !3, line: 1659, column: 6)
!15909 = !DILocation(line: 1659, column: 10, scope: !15908)
!15910 = !DILocation(line: 1659, column: 15, scope: !15908)
!15911 = !DILocation(line: 1659, column: 18, scope: !15908)
!15912 = !DILocation(line: 1659, column: 22, scope: !15908)
!15913 = !DILocation(line: 1659, column: 6, scope: !15861)
!15914 = !DILocation(line: 1660, column: 7, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15908, file: !3, line: 1659, column: 31)
!15916 = !DILocation(line: 1661, column: 3, scope: !15915)
!15917 = !DILocation(line: 1661, column: 7, scope: !15915)
!15918 = !DILocation(line: 1661, column: 13, scope: !15915)
!15919 = !DILocation(line: 1661, column: 23, scope: !15915)
!15920 = !DILocation(line: 1662, column: 2, scope: !15915)
!15921 = !DILocation(line: 1662, column: 13, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15908, file: !3, line: 1662, column: 13)
!15923 = !DILocation(line: 1662, column: 17, scope: !15922)
!15924 = !DILocation(line: 1662, column: 13, scope: !15908)
!15925 = !DILocation(line: 1663, column: 3, scope: !15922)
!15926 = !DILocation(line: 1663, column: 7, scope: !15922)
!15927 = !DILocation(line: 1663, column: 13, scope: !15922)
!15928 = !DILocation(line: 1663, column: 23, scope: !15922)
!15929 = !DILocation(line: 1665, column: 3, scope: !15922)
!15930 = !DILocation(line: 1665, column: 7, scope: !15922)
!15931 = !DILocation(line: 1665, column: 13, scope: !15922)
!15932 = !DILocation(line: 1665, column: 23, scope: !15922)
!15933 = !DILocation(line: 1667, column: 21, scope: !15861)
!15934 = !DILocation(line: 1667, column: 25, scope: !15861)
!15935 = !DILocation(line: 1667, column: 31, scope: !15861)
!15936 = !DILocation(line: 1667, column: 37, scope: !15861)
!15937 = !DILocation(line: 1667, column: 47, scope: !15861)
!15938 = !DILocation(line: 1667, column: 45, scope: !15861)
!15939 = !DILocation(line: 1667, column: 20, scope: !15861)
!15940 = !DILocation(line: 1667, column: 2, scope: !15861)
!15941 = !DILocation(line: 1667, column: 6, scope: !15861)
!15942 = !DILocation(line: 1667, column: 12, scope: !15861)
!15943 = !DILocation(line: 1667, column: 18, scope: !15861)
!15944 = !DILocation(line: 1668, column: 1, scope: !15861)
!15945 = distinct !DISubprogram(name: "rgb_background", scope: !3, file: !3, line: 1670, type: !15776, scopeLine: 1671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15946 = !DILocalVariable(name: "vc", arg: 1, scope: !15945, file: !3, line: 1670, type: !220)
!15947 = !DILocation(line: 1670, column: 44, scope: !15945)
!15948 = !DILocalVariable(name: "c", arg: 2, scope: !15945, file: !3, line: 1670, type: !15778)
!15949 = !DILocation(line: 1670, column: 66, scope: !15945)
!15950 = !DILocation(line: 1673, column: 21, scope: !15945)
!15951 = !DILocation(line: 1673, column: 25, scope: !15945)
!15952 = !DILocation(line: 1673, column: 31, scope: !15945)
!15953 = !DILocation(line: 1673, column: 37, scope: !15945)
!15954 = !DILocation(line: 1674, column: 6, scope: !15945)
!15955 = !DILocation(line: 1674, column: 9, scope: !15945)
!15956 = !DILocation(line: 1674, column: 10, scope: !15945)
!15957 = !DILocation(line: 1674, column: 17, scope: !15945)
!15958 = !DILocation(line: 1674, column: 3, scope: !15945)
!15959 = !DILocation(line: 1674, column: 25, scope: !15945)
!15960 = !DILocation(line: 1674, column: 28, scope: !15945)
!15961 = !DILocation(line: 1674, column: 29, scope: !15945)
!15962 = !DILocation(line: 1674, column: 36, scope: !15945)
!15963 = !DILocation(line: 1674, column: 22, scope: !15945)
!15964 = !DILocation(line: 1674, column: 44, scope: !15945)
!15965 = !DILocation(line: 1674, column: 47, scope: !15945)
!15966 = !DILocation(line: 1674, column: 48, scope: !15945)
!15967 = !DILocation(line: 1674, column: 55, scope: !15945)
!15968 = !DILocation(line: 1674, column: 41, scope: !15945)
!15969 = !DILocation(line: 1673, column: 20, scope: !15945)
!15970 = !DILocation(line: 1673, column: 2, scope: !15945)
!15971 = !DILocation(line: 1673, column: 6, scope: !15945)
!15972 = !DILocation(line: 1673, column: 12, scope: !15945)
!15973 = !DILocation(line: 1673, column: 18, scope: !15945)
!15974 = !DILocation(line: 1675, column: 1, scope: !15945)
!15975 = distinct !DISubprogram(name: "rgb_from_256", scope: !3, file: !3, line: 1630, type: !15976, scopeLine: 1631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!15976 = !DISubroutineType(types: !15977)
!15977 = !{null, !215, !15978}
!15978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15780, size: 64)
!15979 = !DILocalVariable(name: "i", arg: 1, scope: !15975, file: !3, line: 1630, type: !215)
!15980 = !DILocation(line: 1630, column: 30, scope: !15975)
!15981 = !DILocalVariable(name: "c", arg: 2, scope: !15975, file: !3, line: 1630, type: !15978)
!15982 = !DILocation(line: 1630, column: 45, scope: !15975)
!15983 = !DILocation(line: 1632, column: 6, scope: !15984)
!15984 = distinct !DILexicalBlock(scope: !15975, file: !3, line: 1632, column: 6)
!15985 = !DILocation(line: 1632, column: 8, scope: !15984)
!15986 = !DILocation(line: 1632, column: 6, scope: !15975)
!15987 = !DILocation(line: 1633, column: 10, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15984, file: !3, line: 1632, column: 13)
!15989 = !DILocation(line: 1633, column: 11, scope: !15988)
!15990 = !DILocation(line: 1633, column: 3, scope: !15988)
!15991 = !DILocation(line: 1633, column: 6, scope: !15988)
!15992 = !DILocation(line: 1633, column: 8, scope: !15988)
!15993 = !DILocation(line: 1634, column: 10, scope: !15988)
!15994 = !DILocation(line: 1634, column: 11, scope: !15988)
!15995 = !DILocation(line: 1634, column: 3, scope: !15988)
!15996 = !DILocation(line: 1634, column: 6, scope: !15988)
!15997 = !DILocation(line: 1634, column: 8, scope: !15988)
!15998 = !DILocation(line: 1635, column: 10, scope: !15988)
!15999 = !DILocation(line: 1635, column: 11, scope: !15988)
!16000 = !DILocation(line: 1635, column: 3, scope: !15988)
!16001 = !DILocation(line: 1635, column: 6, scope: !15988)
!16002 = !DILocation(line: 1635, column: 8, scope: !15988)
!16003 = !DILocation(line: 1636, column: 2, scope: !15988)
!16004 = !DILocation(line: 1636, column: 13, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !15984, file: !3, line: 1636, column: 13)
!16006 = !DILocation(line: 1636, column: 15, scope: !16005)
!16007 = !DILocation(line: 1636, column: 13, scope: !15984)
!16008 = !DILocation(line: 1637, column: 10, scope: !16009)
!16009 = distinct !DILexicalBlock(scope: !16005, file: !3, line: 1636, column: 21)
!16010 = !DILocation(line: 1637, column: 11, scope: !16009)
!16011 = !DILocation(line: 1637, column: 3, scope: !16009)
!16012 = !DILocation(line: 1637, column: 6, scope: !16009)
!16013 = !DILocation(line: 1637, column: 8, scope: !16009)
!16014 = !DILocation(line: 1638, column: 10, scope: !16009)
!16015 = !DILocation(line: 1638, column: 11, scope: !16009)
!16016 = !DILocation(line: 1638, column: 3, scope: !16009)
!16017 = !DILocation(line: 1638, column: 6, scope: !16009)
!16018 = !DILocation(line: 1638, column: 8, scope: !16009)
!16019 = !DILocation(line: 1639, column: 10, scope: !16009)
!16020 = !DILocation(line: 1639, column: 11, scope: !16009)
!16021 = !DILocation(line: 1639, column: 3, scope: !16009)
!16022 = !DILocation(line: 1639, column: 6, scope: !16009)
!16023 = !DILocation(line: 1639, column: 8, scope: !16009)
!16024 = !DILocation(line: 1640, column: 2, scope: !16009)
!16025 = !DILocation(line: 1640, column: 13, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !16005, file: !3, line: 1640, column: 13)
!16027 = !DILocation(line: 1640, column: 15, scope: !16026)
!16028 = !DILocation(line: 1640, column: 13, scope: !16005)
!16029 = !DILocation(line: 1641, column: 11, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 1640, column: 22)
!16031 = !DILocation(line: 1641, column: 13, scope: !16030)
!16032 = !DILocation(line: 1641, column: 19, scope: !16030)
!16033 = !DILocation(line: 1641, column: 24, scope: !16030)
!16034 = !DILocation(line: 1641, column: 29, scope: !16030)
!16035 = !DILocation(line: 1641, column: 10, scope: !16030)
!16036 = !DILocation(line: 1641, column: 3, scope: !16030)
!16037 = !DILocation(line: 1641, column: 6, scope: !16030)
!16038 = !DILocation(line: 1641, column: 8, scope: !16030)
!16039 = !DILocation(line: 1642, column: 11, scope: !16030)
!16040 = !DILocation(line: 1642, column: 13, scope: !16030)
!16041 = !DILocation(line: 1642, column: 19, scope: !16030)
!16042 = !DILocation(line: 1642, column: 23, scope: !16030)
!16043 = !DILocation(line: 1642, column: 27, scope: !16030)
!16044 = !DILocation(line: 1642, column: 32, scope: !16030)
!16045 = !DILocation(line: 1642, column: 10, scope: !16030)
!16046 = !DILocation(line: 1642, column: 3, scope: !16030)
!16047 = !DILocation(line: 1642, column: 6, scope: !16030)
!16048 = !DILocation(line: 1642, column: 8, scope: !16030)
!16049 = !DILocation(line: 1643, column: 11, scope: !16030)
!16050 = !DILocation(line: 1643, column: 13, scope: !16030)
!16051 = !DILocation(line: 1643, column: 19, scope: !16030)
!16052 = !DILocation(line: 1643, column: 23, scope: !16030)
!16053 = !DILocation(line: 1643, column: 28, scope: !16030)
!16054 = !DILocation(line: 1643, column: 10, scope: !16030)
!16055 = !DILocation(line: 1643, column: 3, scope: !16030)
!16056 = !DILocation(line: 1643, column: 6, scope: !16030)
!16057 = !DILocation(line: 1643, column: 8, scope: !16030)
!16058 = !DILocation(line: 1644, column: 2, scope: !16030)
!16059 = !DILocation(line: 1645, column: 24, scope: !16026)
!16060 = !DILocation(line: 1645, column: 26, scope: !16026)
!16061 = !DILocation(line: 1645, column: 31, scope: !16026)
!16062 = !DILocation(line: 1645, column: 17, scope: !16026)
!16063 = !DILocation(line: 1645, column: 20, scope: !16026)
!16064 = !DILocation(line: 1645, column: 22, scope: !16026)
!16065 = !DILocation(line: 1645, column: 10, scope: !16026)
!16066 = !DILocation(line: 1645, column: 13, scope: !16026)
!16067 = !DILocation(line: 1645, column: 15, scope: !16026)
!16068 = !DILocation(line: 1645, column: 3, scope: !16026)
!16069 = !DILocation(line: 1645, column: 6, scope: !16026)
!16070 = !DILocation(line: 1645, column: 8, scope: !16026)
!16071 = !DILocation(line: 1646, column: 1, scope: !15975)
!16072 = distinct !DISubprogram(name: "insert_char", scope: !3, file: !3, line: 840, type: !12206, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16073 = !DILocalVariable(name: "vc", arg: 1, scope: !16072, file: !3, line: 840, type: !220)
!16074 = !DILocation(line: 840, column: 41, scope: !16072)
!16075 = !DILocalVariable(name: "nr", arg: 2, scope: !16072, file: !3, line: 840, type: !7)
!16076 = !DILocation(line: 840, column: 58, scope: !16072)
!16077 = !DILocalVariable(name: "p", scope: !16072, file: !3, line: 842, type: !191)
!16078 = !DILocation(line: 842, column: 18, scope: !16072)
!16079 = !DILocation(line: 842, column: 41, scope: !16072)
!16080 = !DILocation(line: 842, column: 45, scope: !16072)
!16081 = !DILocation(line: 842, column: 22, scope: !16072)
!16082 = !DILocation(line: 844, column: 19, scope: !16072)
!16083 = !DILocation(line: 844, column: 23, scope: !16072)
!16084 = !DILocation(line: 844, column: 2, scope: !16072)
!16085 = !DILocation(line: 845, column: 15, scope: !16072)
!16086 = !DILocation(line: 845, column: 19, scope: !16072)
!16087 = !DILocation(line: 845, column: 17, scope: !16072)
!16088 = !DILocation(line: 845, column: 23, scope: !16072)
!16089 = !DILocation(line: 845, column: 27, scope: !16072)
!16090 = !DILocation(line: 845, column: 31, scope: !16072)
!16091 = !DILocation(line: 845, column: 41, scope: !16072)
!16092 = !DILocation(line: 845, column: 45, scope: !16072)
!16093 = !DILocation(line: 845, column: 51, scope: !16072)
!16094 = !DILocation(line: 845, column: 39, scope: !16072)
!16095 = !DILocation(line: 845, column: 55, scope: !16072)
!16096 = !DILocation(line: 845, column: 53, scope: !16072)
!16097 = !DILocation(line: 845, column: 59, scope: !16072)
!16098 = !DILocation(line: 845, column: 2, scope: !16072)
!16099 = !DILocation(line: 846, column: 14, scope: !16072)
!16100 = !DILocation(line: 846, column: 17, scope: !16072)
!16101 = !DILocation(line: 846, column: 21, scope: !16072)
!16102 = !DILocation(line: 846, column: 42, scope: !16072)
!16103 = !DILocation(line: 846, column: 45, scope: !16072)
!16104 = !DILocation(line: 846, column: 2, scope: !16072)
!16105 = !DILocation(line: 847, column: 2, scope: !16072)
!16106 = !DILocation(line: 847, column: 6, scope: !16072)
!16107 = !DILocation(line: 847, column: 19, scope: !16072)
!16108 = !DILocation(line: 848, column: 24, scope: !16109)
!16109 = distinct !DILexicalBlock(scope: !16072, file: !3, line: 848, column: 6)
!16110 = !DILocation(line: 848, column: 6, scope: !16109)
!16111 = !DILocation(line: 848, column: 6, scope: !16072)
!16112 = !DILocation(line: 849, column: 20, scope: !16109)
!16113 = !DILocation(line: 849, column: 40, scope: !16109)
!16114 = !DILocation(line: 849, column: 24, scope: !16109)
!16115 = !DILocation(line: 850, column: 4, scope: !16109)
!16116 = !DILocation(line: 850, column: 8, scope: !16109)
!16117 = !DILocation(line: 850, column: 18, scope: !16109)
!16118 = !DILocation(line: 850, column: 22, scope: !16109)
!16119 = !DILocation(line: 850, column: 28, scope: !16109)
!16120 = !DILocation(line: 850, column: 16, scope: !16109)
!16121 = !DILocation(line: 849, column: 3, scope: !16109)
!16122 = !DILocation(line: 851, column: 1, scope: !16072)
!16123 = distinct !DISubprogram(name: "vc_uniscr_insert", scope: !3, file: !3, line: 380, type: !12206, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16124 = !DILocalVariable(name: "vc", arg: 1, scope: !16123, file: !3, line: 380, type: !220)
!16125 = !DILocation(line: 380, column: 46, scope: !16123)
!16126 = !DILocalVariable(name: "nr", arg: 2, scope: !16123, file: !3, line: 380, type: !7)
!16127 = !DILocation(line: 380, column: 63, scope: !16123)
!16128 = !DILocalVariable(name: "uniscr", scope: !16123, file: !3, line: 382, type: !4395)
!16129 = !DILocation(line: 382, column: 21, scope: !16123)
!16130 = !DILocation(line: 382, column: 30, scope: !16123)
!16131 = !DILocation(line: 384, column: 6, scope: !16132)
!16132 = distinct !DILexicalBlock(scope: !16123, file: !3, line: 384, column: 6)
!16133 = !DILocation(line: 384, column: 6, scope: !16123)
!16134 = !DILocalVariable(name: "ln", scope: !16135, file: !3, line: 385, type: !4400)
!16135 = distinct !DILexicalBlock(scope: !16132, file: !3, line: 384, column: 14)
!16136 = !DILocation(line: 385, column: 13, scope: !16135)
!16137 = !DILocation(line: 385, column: 18, scope: !16135)
!16138 = !DILocation(line: 385, column: 26, scope: !16135)
!16139 = !DILocation(line: 385, column: 32, scope: !16135)
!16140 = !DILocation(line: 385, column: 36, scope: !16135)
!16141 = !DILocation(line: 385, column: 42, scope: !16135)
!16142 = !DILocalVariable(name: "x", scope: !16135, file: !3, line: 386, type: !7)
!16143 = !DILocation(line: 386, column: 16, scope: !16135)
!16144 = !DILocation(line: 386, column: 20, scope: !16135)
!16145 = !DILocation(line: 386, column: 24, scope: !16135)
!16146 = !DILocation(line: 386, column: 30, scope: !16135)
!16147 = !DILocalVariable(name: "cols", scope: !16135, file: !3, line: 386, type: !7)
!16148 = !DILocation(line: 386, column: 33, scope: !16135)
!16149 = !DILocation(line: 386, column: 40, scope: !16135)
!16150 = !DILocation(line: 386, column: 44, scope: !16135)
!16151 = !DILocation(line: 388, column: 12, scope: !16135)
!16152 = !DILocation(line: 388, column: 15, scope: !16135)
!16153 = !DILocation(line: 388, column: 19, scope: !16135)
!16154 = !DILocation(line: 388, column: 17, scope: !16135)
!16155 = !DILocation(line: 388, column: 3, scope: !16135)
!16156 = !DILocation(line: 388, column: 25, scope: !16135)
!16157 = !DILocation(line: 388, column: 28, scope: !16135)
!16158 = !DILocation(line: 388, column: 33, scope: !16135)
!16159 = !DILocation(line: 388, column: 40, scope: !16135)
!16160 = !DILocation(line: 388, column: 38, scope: !16135)
!16161 = !DILocation(line: 388, column: 44, scope: !16135)
!16162 = !DILocation(line: 388, column: 42, scope: !16135)
!16163 = !DILocation(line: 388, column: 32, scope: !16135)
!16164 = !DILocation(line: 388, column: 48, scope: !16135)
!16165 = !DILocation(line: 389, column: 13, scope: !16135)
!16166 = !DILocation(line: 389, column: 16, scope: !16135)
!16167 = !DILocation(line: 389, column: 25, scope: !16135)
!16168 = !DILocation(line: 389, column: 3, scope: !16135)
!16169 = !DILocation(line: 390, column: 2, scope: !16135)
!16170 = !DILocation(line: 391, column: 1, scope: !16123)
!16171 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !15430, file: !15430, line: 308, type: !15431, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16172 = !DILocalVariable(name: "m", arg: 1, scope: !16171, file: !15430, line: 308, type: !2913)
!16173 = !DILocation(line: 308, column: 66, scope: !16171)
!16174 = !DILocation(line: 310, column: 10, scope: !16171)
!16175 = !DILocation(line: 310, column: 12, scope: !16171)
!16176 = !DILocation(line: 310, column: 34, scope: !16171)
!16177 = !DILocation(line: 310, column: 39, scope: !16171)
!16178 = !DILocation(line: 310, column: 2, scope: !16171)
!16179 = !DILocalVariable(name: "ucs", arg: 1, scope: !4792, file: !3, line: 2551, type: !645)
!16180 = !DILocation(line: 2551, column: 37, scope: !4792)
!16181 = !DILocation(line: 2559, column: 6, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !4792, file: !3, line: 2559, column: 6)
!16183 = !DILocation(line: 2559, column: 28, scope: !16182)
!16184 = !DILocation(line: 2559, column: 10, scope: !16182)
!16185 = !DILocation(line: 2559, column: 34, scope: !16182)
!16186 = !DILocation(line: 2560, column: 6, scope: !16182)
!16187 = !DILocation(line: 2560, column: 55, scope: !16182)
!16188 = !DILocation(line: 2560, column: 10, scope: !16182)
!16189 = !DILocation(line: 2559, column: 6, scope: !4792)
!16190 = !DILocation(line: 2561, column: 3, scope: !16182)
!16191 = !DILocation(line: 2563, column: 17, scope: !4792)
!16192 = !DILocation(line: 2563, column: 9, scope: !4792)
!16193 = !DILocation(line: 2564, column: 38, scope: !4792)
!16194 = !DILocation(line: 2563, column: 2, scope: !4792)
!16195 = !DILocation(line: 2565, column: 1, scope: !4792)
!16196 = distinct !DISubprogram(name: "vc_invert_attr", scope: !3, file: !3, line: 2697, type: !16197, scopeLine: 2698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16197 = !DISubroutineType(types: !16198)
!16198 = !{!515, !4322}
!16199 = !DILocalVariable(name: "vc", arg: 1, scope: !16196, file: !3, line: 2697, type: !4322)
!16200 = !DILocation(line: 2697, column: 66, scope: !16196)
!16201 = !DILocation(line: 2699, column: 7, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16196, file: !3, line: 2699, column: 6)
!16203 = !DILocation(line: 2699, column: 11, scope: !16202)
!16204 = !DILocation(line: 2699, column: 6, scope: !16196)
!16205 = !DILocation(line: 2700, column: 10, scope: !16202)
!16206 = !DILocation(line: 2700, column: 14, scope: !16202)
!16207 = !DILocation(line: 2700, column: 22, scope: !16202)
!16208 = !DILocation(line: 2700, column: 3, scope: !16202)
!16209 = !DILocation(line: 2702, column: 6, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16196, file: !3, line: 2702, column: 6)
!16211 = !DILocation(line: 2702, column: 10, scope: !16210)
!16212 = !DILocation(line: 2702, column: 26, scope: !16210)
!16213 = !DILocation(line: 2702, column: 6, scope: !16196)
!16214 = !DILocation(line: 2703, column: 13, scope: !16210)
!16215 = !DILocation(line: 2703, column: 17, scope: !16210)
!16216 = !DILocation(line: 2703, column: 25, scope: !16210)
!16217 = !DILocation(line: 2704, column: 6, scope: !16210)
!16218 = !DILocation(line: 2704, column: 10, scope: !16210)
!16219 = !DILocation(line: 2704, column: 18, scope: !16210)
!16220 = !DILocation(line: 2704, column: 26, scope: !16210)
!16221 = !DILocation(line: 2703, column: 33, scope: !16210)
!16222 = !DILocation(line: 2705, column: 6, scope: !16210)
!16223 = !DILocation(line: 2705, column: 10, scope: !16210)
!16224 = !DILocation(line: 2705, column: 18, scope: !16210)
!16225 = !DILocation(line: 2705, column: 26, scope: !16210)
!16226 = !DILocation(line: 2704, column: 32, scope: !16210)
!16227 = !DILocation(line: 2703, column: 12, scope: !16210)
!16228 = !DILocation(line: 2703, column: 3, scope: !16210)
!16229 = !DILocation(line: 2707, column: 12, scope: !16196)
!16230 = !DILocation(line: 2707, column: 16, scope: !16196)
!16231 = !DILocation(line: 2707, column: 24, scope: !16196)
!16232 = !DILocation(line: 2708, column: 5, scope: !16196)
!16233 = !DILocation(line: 2708, column: 9, scope: !16196)
!16234 = !DILocation(line: 2708, column: 17, scope: !16196)
!16235 = !DILocation(line: 2708, column: 25, scope: !16196)
!16236 = !DILocation(line: 2707, column: 32, scope: !16196)
!16237 = !DILocation(line: 2709, column: 5, scope: !16196)
!16238 = !DILocation(line: 2709, column: 9, scope: !16196)
!16239 = !DILocation(line: 2709, column: 17, scope: !16196)
!16240 = !DILocation(line: 2709, column: 25, scope: !16196)
!16241 = !DILocation(line: 2708, column: 31, scope: !16196)
!16242 = !DILocation(line: 2707, column: 11, scope: !16196)
!16243 = !DILocation(line: 2707, column: 2, scope: !16196)
!16244 = !DILocation(line: 2710, column: 1, scope: !16196)
!16245 = distinct !DISubprogram(name: "ucs_cmp", scope: !3, file: !3, line: 2539, type: !16246, scopeLine: 2540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16246 = !DISubroutineType(types: !16247)
!16247 = !{!215, !2216, !2216}
!16248 = !DILocalVariable(name: "key", arg: 1, scope: !16245, file: !3, line: 2539, type: !2216)
!16249 = !DILocation(line: 2539, column: 32, scope: !16245)
!16250 = !DILocalVariable(name: "elt", arg: 2, scope: !16245, file: !3, line: 2539, type: !2216)
!16251 = !DILocation(line: 2539, column: 49, scope: !16245)
!16252 = !DILocalVariable(name: "ucs", scope: !16245, file: !3, line: 2541, type: !645)
!16253 = !DILocation(line: 2541, column: 11, scope: !16245)
!16254 = !DILocation(line: 2541, column: 30, scope: !16245)
!16255 = !DILocation(line: 2541, column: 18, scope: !16245)
!16256 = !DILocation(line: 2541, column: 17, scope: !16245)
!16257 = !DILocalVariable(name: "e", scope: !16245, file: !3, line: 2542, type: !4414)
!16258 = !DILocation(line: 2542, column: 18, scope: !16245)
!16259 = !DILocation(line: 2542, column: 43, scope: !16245)
!16260 = !DILocation(line: 2542, column: 23, scope: !16245)
!16261 = !DILocation(line: 2542, column: 22, scope: !16245)
!16262 = !DILocation(line: 2544, column: 6, scope: !16263)
!16263 = distinct !DILexicalBlock(scope: !16245, file: !3, line: 2544, column: 6)
!16264 = !DILocation(line: 2544, column: 14, scope: !16263)
!16265 = !DILocation(line: 2544, column: 10, scope: !16263)
!16266 = !DILocation(line: 2544, column: 6, scope: !16245)
!16267 = !DILocation(line: 2545, column: 3, scope: !16263)
!16268 = !DILocation(line: 2546, column: 11, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16263, file: !3, line: 2546, column: 11)
!16270 = !DILocation(line: 2546, column: 19, scope: !16269)
!16271 = !DILocation(line: 2546, column: 15, scope: !16269)
!16272 = !DILocation(line: 2546, column: 11, scope: !16263)
!16273 = !DILocation(line: 2547, column: 3, scope: !16269)
!16274 = !DILocation(line: 2548, column: 2, scope: !16245)
!16275 = !DILocation(line: 2549, column: 1, scope: !16245)
!16276 = distinct !DISubprogram(name: "con_driver_unregister_callback", scope: !3, file: !3, line: 4189, type: !275, scopeLine: 4190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16277 = !DILocalVariable(name: "ignored", arg: 1, scope: !16276, file: !3, line: 4189, type: !277)
!16278 = !DILocation(line: 4189, column: 64, scope: !16276)
!16279 = !DILocalVariable(name: "i", scope: !16276, file: !3, line: 4191, type: !215)
!16280 = !DILocation(line: 4191, column: 6, scope: !16276)
!16281 = !DILocation(line: 4193, column: 2, scope: !16276)
!16282 = !DILocation(line: 4195, column: 9, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16276, file: !3, line: 4195, column: 2)
!16284 = !DILocation(line: 4195, column: 7, scope: !16283)
!16285 = !DILocation(line: 4195, column: 14, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16283, file: !3, line: 4195, column: 2)
!16287 = !DILocation(line: 4195, column: 16, scope: !16286)
!16288 = !DILocation(line: 4195, column: 2, scope: !16283)
!16289 = !DILocalVariable(name: "con_driver", scope: !16290, file: !3, line: 4196, type: !7948)
!16290 = distinct !DILexicalBlock(scope: !16286, file: !3, line: 4195, column: 42)
!16291 = !DILocation(line: 4196, column: 22, scope: !16290)
!16292 = !DILocation(line: 4196, column: 58, scope: !16290)
!16293 = !DILocation(line: 4196, column: 36, scope: !16290)
!16294 = !DILocation(line: 4198, column: 9, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16290, file: !3, line: 4198, column: 7)
!16296 = !DILocation(line: 4198, column: 21, scope: !16295)
!16297 = !DILocation(line: 4198, column: 26, scope: !16295)
!16298 = !DILocation(line: 4198, column: 7, scope: !16290)
!16299 = !DILocation(line: 4199, column: 4, scope: !16295)
!16300 = !DILocation(line: 4201, column: 3, scope: !16290)
!16301 = !DILocation(line: 4203, column: 27, scope: !16290)
!16302 = !DILocation(line: 4203, column: 3, scope: !16290)
!16303 = !DILocation(line: 4204, column: 18, scope: !16290)
!16304 = !DILocation(line: 4204, column: 35, scope: !16290)
!16305 = !DILocation(line: 4204, column: 3, scope: !16290)
!16306 = !DILocation(line: 4206, column: 3, scope: !16290)
!16307 = !DILocalVariable(name: "__ret_warn_on", scope: !16308, file: !3, line: 4208, type: !215)
!16308 = distinct !DILexicalBlock(scope: !16309, file: !3, line: 4208, column: 7)
!16309 = distinct !DILexicalBlock(scope: !16290, file: !3, line: 4208, column: 7)
!16310 = !DILocation(line: 4208, column: 7, scope: !16308)
!16311 = !DILocation(line: 4208, column: 7, scope: !16312)
!16312 = distinct !DILexicalBlock(scope: !16308, file: !3, line: 4208, column: 7)
!16313 = !DILocation(line: 4208, column: 7, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16312, file: !3, line: 4208, column: 7)
!16315 = !DILocation(line: 4208, column: 7, scope: !16316)
!16316 = distinct !DILexicalBlock(scope: !16314, file: !3, line: 4208, column: 7)
!16317 = !DILocation(line: 4208, column: 7, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16314, file: !3, line: 4208, column: 7)
!16319 = !{i32 -2141692742, i32 -2141692713, i32 -2141692667, i32 -2141692609, i32 -2141692555, i32 -2141692501, i32 -2141692446, i32 -2141692415}
!16320 = !DILocation(line: 4208, column: 7, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16314, file: !3, line: 4208, column: 7)
!16322 = !{i32 -2141692002, i32 -2141691995, i32 -2141691943, i32 -2141691912, i32 -2141691882}
!16323 = !DILocation(line: 4208, column: 7, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16314, file: !3, line: 4208, column: 7)
!16325 = !DILocation(line: 4208, column: 7, scope: !16309)
!16326 = !DILocation(line: 4208, column: 7, scope: !16290)
!16327 = !DILocation(line: 4209, column: 4, scope: !16309)
!16328 = !DILocation(line: 4209, column: 16, scope: !16309)
!16329 = !DILocation(line: 4209, column: 20, scope: !16309)
!16330 = !DILocation(line: 4210, column: 3, scope: !16290)
!16331 = !DILocation(line: 4210, column: 15, scope: !16290)
!16332 = !DILocation(line: 4210, column: 20, scope: !16290)
!16333 = !DILocation(line: 4211, column: 3, scope: !16290)
!16334 = !DILocation(line: 4211, column: 15, scope: !16290)
!16335 = !DILocation(line: 4211, column: 19, scope: !16290)
!16336 = !DILocation(line: 4212, column: 3, scope: !16290)
!16337 = !DILocation(line: 4212, column: 15, scope: !16290)
!16338 = !DILocation(line: 4212, column: 20, scope: !16290)
!16339 = !DILocalVariable(name: "__ret_warn_on", scope: !16340, file: !3, line: 4213, type: !215)
!16340 = distinct !DILexicalBlock(scope: !16290, file: !3, line: 4213, column: 3)
!16341 = !DILocation(line: 4213, column: 3, scope: !16340)
!16342 = !DILocation(line: 4213, column: 3, scope: !16343)
!16343 = distinct !DILexicalBlock(scope: !16340, file: !3, line: 4213, column: 3)
!16344 = !DILocation(line: 4213, column: 3, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16343, file: !3, line: 4213, column: 3)
!16346 = !DILocation(line: 4213, column: 3, scope: !16347)
!16347 = distinct !DILexicalBlock(scope: !16345, file: !3, line: 4213, column: 3)
!16348 = !DILocation(line: 4213, column: 3, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16345, file: !3, line: 4213, column: 3)
!16350 = !{i32 -2141691223, i32 -2141691194, i32 -2141691148, i32 -2141691090, i32 -2141691036, i32 -2141690982, i32 -2141690927, i32 -2141690896}
!16351 = !DILocation(line: 4213, column: 3, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16345, file: !3, line: 4213, column: 3)
!16353 = !{i32 -2141690483, i32 -2141690476, i32 -2141690424, i32 -2141690393, i32 -2141690363}
!16354 = !DILocation(line: 4213, column: 3, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16345, file: !3, line: 4213, column: 3)
!16356 = !DILocation(line: 4214, column: 3, scope: !16290)
!16357 = !DILocation(line: 4214, column: 15, scope: !16290)
!16358 = !DILocation(line: 4214, column: 20, scope: !16290)
!16359 = !DILocation(line: 4215, column: 3, scope: !16290)
!16360 = !DILocation(line: 4215, column: 15, scope: !16290)
!16361 = !DILocation(line: 4215, column: 21, scope: !16290)
!16362 = !DILocation(line: 4216, column: 3, scope: !16290)
!16363 = !DILocation(line: 4216, column: 15, scope: !16290)
!16364 = !DILocation(line: 4216, column: 20, scope: !16290)
!16365 = !DILocation(line: 4217, column: 2, scope: !16290)
!16366 = !DILocation(line: 4195, column: 38, scope: !16286)
!16367 = !DILocation(line: 4195, column: 2, scope: !16286)
!16368 = distinct !{!16368, !16288, !16369}
!16369 = !DILocation(line: 4217, column: 2, scope: !16283)
!16370 = !DILocation(line: 4219, column: 2, scope: !16276)
!16371 = !DILocation(line: 4220, column: 1, scope: !16276)
!16372 = distinct !DISubprogram(name: "vtconsole_deinit_device", scope: !3, file: !3, line: 3941, type: !16373, scopeLine: 3942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16373 = !DISubroutineType(types: !16374)
!16374 = !{null, !7948}
!16375 = !DILocalVariable(name: "con", arg: 1, scope: !16372, file: !3, line: 3941, type: !7948)
!16376 = !DILocation(line: 3941, column: 56, scope: !16372)
!16377 = !DILocation(line: 3943, column: 2, scope: !16372)
!16378 = !DILocation(line: 3943, column: 7, scope: !16372)
!16379 = !DILocation(line: 3943, column: 12, scope: !16372)
!16380 = !DILocation(line: 3944, column: 1, scope: !16372)
!16381 = distinct !DISubprogram(name: "PTR_ERR", scope: !8151, file: !8151, line: 29, type: !16382, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16382 = !DISubroutineType(types: !16383)
!16383 = !{!112, !2216}
!16384 = !DILocalVariable(name: "ptr", arg: 1, scope: !16381, file: !8151, line: 29, type: !2216)
!16385 = !DILocation(line: 29, column: 61, scope: !16381)
!16386 = !DILocation(line: 31, column: 16, scope: !16381)
!16387 = !DILocation(line: 31, column: 9, scope: !16381)
!16388 = !DILocation(line: 31, column: 2, scope: !16381)
!16389 = distinct !DISubprogram(name: "vtconsole_init_device", scope: !3, file: !3, line: 3935, type: !16390, scopeLine: 3936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16390 = !DISubroutineType(types: !16391)
!16391 = !{!215, !7948}
!16392 = !DILocalVariable(name: "con", arg: 1, scope: !16389, file: !3, line: 3935, type: !7948)
!16393 = !DILocation(line: 3935, column: 53, scope: !16389)
!16394 = !DILocation(line: 3937, column: 2, scope: !16389)
!16395 = !DILocation(line: 3937, column: 7, scope: !16389)
!16396 = !DILocation(line: 3937, column: 12, scope: !16389)
!16397 = !DILocation(line: 3938, column: 2, scope: !16389)
!16398 = distinct !DISubprogram(name: "show_bind", scope: !3, file: !3, line: 3900, type: !4756, scopeLine: 3902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16399 = !DILocalVariable(name: "dev", arg: 1, scope: !16398, file: !3, line: 3900, type: !328)
!16400 = !DILocation(line: 3900, column: 41, scope: !16398)
!16401 = !DILocalVariable(name: "attr", arg: 2, scope: !16398, file: !3, line: 3900, type: !4758)
!16402 = !DILocation(line: 3900, column: 71, scope: !16398)
!16403 = !DILocalVariable(name: "buf", arg: 3, scope: !16398, file: !3, line: 3901, type: !202)
!16404 = !DILocation(line: 3901, column: 11, scope: !16398)
!16405 = !DILocalVariable(name: "con", scope: !16398, file: !3, line: 3903, type: !7948)
!16406 = !DILocation(line: 3903, column: 21, scope: !16398)
!16407 = !DILocation(line: 3903, column: 43, scope: !16398)
!16408 = !DILocation(line: 3903, column: 27, scope: !16398)
!16409 = !DILocalVariable(name: "bind", scope: !16398, file: !3, line: 3904, type: !215)
!16410 = !DILocation(line: 3904, column: 6, scope: !16398)
!16411 = !DILocation(line: 3906, column: 2, scope: !16398)
!16412 = !DILocation(line: 3907, column: 22, scope: !16398)
!16413 = !DILocation(line: 3907, column: 27, scope: !16398)
!16414 = !DILocation(line: 3907, column: 9, scope: !16398)
!16415 = !DILocation(line: 3907, column: 7, scope: !16398)
!16416 = !DILocation(line: 3908, column: 2, scope: !16398)
!16417 = !DILocation(line: 3910, column: 18, scope: !16398)
!16418 = !DILocation(line: 3910, column: 42, scope: !16398)
!16419 = !DILocation(line: 3910, column: 9, scope: !16398)
!16420 = !DILocation(line: 3910, column: 2, scope: !16398)
!16421 = distinct !DISubprogram(name: "store_bind", scope: !3, file: !3, line: 3882, type: !4761, scopeLine: 3884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16422 = !DILocalVariable(name: "dev", arg: 1, scope: !16421, file: !3, line: 3882, type: !328)
!16423 = !DILocation(line: 3882, column: 42, scope: !16421)
!16424 = !DILocalVariable(name: "attr", arg: 2, scope: !16421, file: !3, line: 3882, type: !4758)
!16425 = !DILocation(line: 3882, column: 72, scope: !16421)
!16426 = !DILocalVariable(name: "buf", arg: 3, scope: !16421, file: !3, line: 3883, type: !336)
!16427 = !DILocation(line: 3883, column: 18, scope: !16421)
!16428 = !DILocalVariable(name: "count", arg: 4, scope: !16421, file: !3, line: 3883, type: !417)
!16429 = !DILocation(line: 3883, column: 30, scope: !16421)
!16430 = !DILocalVariable(name: "con", scope: !16421, file: !3, line: 3885, type: !7948)
!16431 = !DILocation(line: 3885, column: 21, scope: !16421)
!16432 = !DILocation(line: 3885, column: 43, scope: !16421)
!16433 = !DILocation(line: 3885, column: 27, scope: !16421)
!16434 = !DILocalVariable(name: "bind", scope: !16421, file: !3, line: 3886, type: !215)
!16435 = !DILocation(line: 3886, column: 6, scope: !16421)
!16436 = !DILocation(line: 3886, column: 28, scope: !16421)
!16437 = !DILocation(line: 3886, column: 13, scope: !16421)
!16438 = !DILocation(line: 3888, column: 2, scope: !16421)
!16439 = !DILocation(line: 3890, column: 6, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16421, file: !3, line: 3890, column: 6)
!16441 = !DILocation(line: 3890, column: 6, scope: !16421)
!16442 = !DILocation(line: 3891, column: 11, scope: !16440)
!16443 = !DILocation(line: 3891, column: 3, scope: !16440)
!16444 = !DILocation(line: 3893, column: 13, scope: !16440)
!16445 = !DILocation(line: 3893, column: 3, scope: !16440)
!16446 = !DILocation(line: 3895, column: 2, scope: !16421)
!16447 = !DILocation(line: 3897, column: 9, scope: !16421)
!16448 = !DILocation(line: 3897, column: 2, scope: !16421)
!16449 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !16450, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16450 = !DISubroutineType(types: !16451)
!16451 = !{!216, !3768}
!16452 = !DILocalVariable(name: "dev", arg: 1, scope: !16449, file: !73, line: 655, type: !3768)
!16453 = !DILocation(line: 655, column: 58, scope: !16449)
!16454 = !DILocation(line: 657, column: 9, scope: !16449)
!16455 = !DILocation(line: 657, column: 14, scope: !16449)
!16456 = !DILocation(line: 657, column: 2, scope: !16449)
!16457 = distinct !DISubprogram(name: "vt_bind", scope: !3, file: !3, line: 3780, type: !16390, scopeLine: 3781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16458 = !DILocalVariable(name: "con", arg: 1, scope: !16457, file: !3, line: 3780, type: !7948)
!16459 = !DILocation(line: 3780, column: 39, scope: !16457)
!16460 = !DILocalVariable(name: "defcsw", scope: !16457, file: !3, line: 3782, type: !4231)
!16461 = !DILocation(line: 3782, column: 22, scope: !16457)
!16462 = !DILocalVariable(name: "csw", scope: !16457, file: !3, line: 3782, type: !4231)
!16463 = !DILocation(line: 3782, column: 38, scope: !16457)
!16464 = !DILocalVariable(name: "i", scope: !16457, file: !3, line: 3783, type: !215)
!16465 = !DILocation(line: 3783, column: 6, scope: !16457)
!16466 = !DILocalVariable(name: "more", scope: !16457, file: !3, line: 3783, type: !215)
!16467 = !DILocation(line: 3783, column: 9, scope: !16457)
!16468 = !DILocalVariable(name: "first", scope: !16457, file: !3, line: 3783, type: !215)
!16469 = !DILocation(line: 3783, column: 19, scope: !16457)
!16470 = !DILocalVariable(name: "last", scope: !16457, file: !3, line: 3783, type: !215)
!16471 = !DILocation(line: 3783, column: 31, scope: !16457)
!16472 = !DILocalVariable(name: "deflt", scope: !16457, file: !3, line: 3783, type: !215)
!16473 = !DILocation(line: 3783, column: 42, scope: !16457)
!16474 = !DILocation(line: 3785, column: 8, scope: !16475)
!16475 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 3785, column: 7)
!16476 = !DILocation(line: 3785, column: 13, scope: !16475)
!16477 = !DILocation(line: 3785, column: 17, scope: !16475)
!16478 = !DILocation(line: 3785, column: 22, scope: !16475)
!16479 = !DILocation(line: 3785, column: 27, scope: !16475)
!16480 = !DILocation(line: 3785, column: 32, scope: !16475)
!16481 = !DILocation(line: 3785, column: 7, scope: !16457)
!16482 = !DILocation(line: 3786, column: 3, scope: !16475)
!16483 = !DILocation(line: 3788, column: 8, scope: !16457)
!16484 = !DILocation(line: 3788, column: 13, scope: !16457)
!16485 = !DILocation(line: 3788, column: 6, scope: !16457)
!16486 = !DILocation(line: 3790, column: 9, scope: !16487)
!16487 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 3790, column: 2)
!16488 = !DILocation(line: 3790, column: 7, scope: !16487)
!16489 = !DILocation(line: 3790, column: 14, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16487, file: !3, line: 3790, column: 2)
!16491 = !DILocation(line: 3790, column: 16, scope: !16490)
!16492 = !DILocation(line: 3790, column: 2, scope: !16487)
!16493 = !DILocalVariable(name: "con", scope: !16494, file: !3, line: 3791, type: !7948)
!16494 = distinct !DILexicalBlock(scope: !16490, file: !3, line: 3790, column: 42)
!16495 = !DILocation(line: 3791, column: 22, scope: !16494)
!16496 = !DILocation(line: 3791, column: 51, scope: !16494)
!16497 = !DILocation(line: 3791, column: 29, scope: !16494)
!16498 = !DILocation(line: 3793, column: 7, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !16494, file: !3, line: 3793, column: 7)
!16500 = !DILocation(line: 3793, column: 12, scope: !16499)
!16501 = !DILocation(line: 3793, column: 16, scope: !16499)
!16502 = !DILocation(line: 3793, column: 21, scope: !16499)
!16503 = !DILocation(line: 3793, column: 26, scope: !16499)
!16504 = !DILocation(line: 3793, column: 31, scope: !16499)
!16505 = !DILocation(line: 3793, column: 7, scope: !16494)
!16506 = !DILocation(line: 3794, column: 13, scope: !16507)
!16507 = distinct !DILexicalBlock(scope: !16499, file: !3, line: 3793, column: 58)
!16508 = !DILocation(line: 3794, column: 18, scope: !16507)
!16509 = !DILocation(line: 3794, column: 11, scope: !16507)
!16510 = !DILocation(line: 3795, column: 4, scope: !16507)
!16511 = !DILocation(line: 3797, column: 2, scope: !16494)
!16512 = !DILocation(line: 3790, column: 38, scope: !16490)
!16513 = !DILocation(line: 3790, column: 2, scope: !16490)
!16514 = distinct !{!16514, !16492, !16515}
!16515 = !DILocation(line: 3797, column: 2, scope: !16487)
!16516 = !DILocation(line: 3799, column: 7, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 3799, column: 6)
!16518 = !DILocation(line: 3799, column: 6, scope: !16457)
!16519 = !DILocation(line: 3800, column: 3, scope: !16517)
!16520 = !DILocation(line: 3802, column: 2, scope: !16457)
!16521 = !DILocation(line: 3802, column: 9, scope: !16457)
!16522 = !DILocation(line: 3803, column: 8, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 3802, column: 15)
!16524 = !DILocation(line: 3805, column: 12, scope: !16525)
!16525 = distinct !DILexicalBlock(scope: !16523, file: !3, line: 3805, column: 3)
!16526 = !DILocation(line: 3805, column: 17, scope: !16525)
!16527 = !DILocation(line: 3805, column: 10, scope: !16525)
!16528 = !DILocation(line: 3805, column: 8, scope: !16525)
!16529 = !DILocation(line: 3805, column: 24, scope: !16530)
!16530 = distinct !DILexicalBlock(scope: !16525, file: !3, line: 3805, column: 3)
!16531 = !DILocation(line: 3805, column: 29, scope: !16530)
!16532 = !DILocation(line: 3805, column: 34, scope: !16530)
!16533 = !DILocation(line: 3805, column: 26, scope: !16530)
!16534 = !DILocation(line: 3805, column: 3, scope: !16525)
!16535 = !DILocation(line: 3806, column: 23, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16537, file: !3, line: 3806, column: 8)
!16537 = distinct !DILexicalBlock(scope: !16530, file: !3, line: 3805, column: 45)
!16538 = !DILocation(line: 3806, column: 8, scope: !16536)
!16539 = !DILocation(line: 3806, column: 29, scope: !16536)
!16540 = !DILocation(line: 3806, column: 26, scope: !16536)
!16541 = !DILocation(line: 3806, column: 8, scope: !16537)
!16542 = !DILocation(line: 3807, column: 9, scope: !16543)
!16543 = distinct !DILexicalBlock(scope: !16544, file: !3, line: 3807, column: 9)
!16544 = distinct !DILexicalBlock(scope: !16536, file: !3, line: 3806, column: 37)
!16545 = !DILocation(line: 3807, column: 15, scope: !16543)
!16546 = !DILocation(line: 3807, column: 9, scope: !16544)
!16547 = !DILocation(line: 3808, column: 14, scope: !16543)
!16548 = !DILocation(line: 3808, column: 12, scope: !16543)
!16549 = !DILocation(line: 3808, column: 6, scope: !16543)
!16550 = !DILocation(line: 3809, column: 12, scope: !16544)
!16551 = !DILocation(line: 3809, column: 10, scope: !16544)
!16552 = !DILocation(line: 3810, column: 10, scope: !16544)
!16553 = !DILocation(line: 3811, column: 4, scope: !16544)
!16554 = !DILocation(line: 3811, column: 15, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16536, file: !3, line: 3811, column: 15)
!16556 = !DILocation(line: 3811, column: 21, scope: !16555)
!16557 = !DILocation(line: 3811, column: 15, scope: !16536)
!16558 = !DILocation(line: 3812, column: 5, scope: !16555)
!16559 = !DILocation(line: 3813, column: 3, scope: !16537)
!16560 = !DILocation(line: 3805, column: 41, scope: !16530)
!16561 = !DILocation(line: 3805, column: 3, scope: !16530)
!16562 = distinct !{!16562, !16534, !16563}
!16563 = !DILocation(line: 3813, column: 3, scope: !16525)
!16564 = !DILocation(line: 3815, column: 7, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16523, file: !3, line: 3815, column: 7)
!16566 = !DILocation(line: 3815, column: 13, scope: !16565)
!16567 = !DILocation(line: 3815, column: 18, scope: !16565)
!16568 = !DILocation(line: 3815, column: 21, scope: !16565)
!16569 = !DILocation(line: 3815, column: 26, scope: !16565)
!16570 = !DILocation(line: 3815, column: 7, scope: !16523)
!16571 = !DILocation(line: 3816, column: 10, scope: !16565)
!16572 = !DILocation(line: 3816, column: 4, scope: !16565)
!16573 = !DILocation(line: 3818, column: 7, scope: !16574)
!16574 = distinct !DILexicalBlock(scope: !16523, file: !3, line: 3818, column: 7)
!16575 = !DILocation(line: 3818, column: 13, scope: !16574)
!16576 = !DILocation(line: 3818, column: 7, scope: !16523)
!16577 = !DILocation(line: 3819, column: 23, scope: !16574)
!16578 = !DILocation(line: 3819, column: 28, scope: !16574)
!16579 = !DILocation(line: 3819, column: 35, scope: !16574)
!16580 = !DILocation(line: 3819, column: 41, scope: !16574)
!16581 = !DILocation(line: 3819, column: 4, scope: !16574)
!16582 = !DILocation(line: 3821, column: 9, scope: !16523)
!16583 = !DILocation(line: 3822, column: 8, scope: !16523)
!16584 = !DILocation(line: 3823, column: 9, scope: !16523)
!16585 = distinct !{!16585, !16520, !16586}
!16586 = !DILocation(line: 3824, column: 2, scope: !16457)
!16587 = !DILabel(scope: !16457, name: "err", file: !3, line: 3826)
!16588 = !DILocation(line: 3826, column: 1, scope: !16457)
!16589 = !DILocation(line: 3827, column: 2, scope: !16457)
!16590 = distinct !DISubprogram(name: "vt_unbind", scope: !3, file: !3, line: 3830, type: !16390, scopeLine: 3831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16591 = !DILocalVariable(name: "con", arg: 1, scope: !16590, file: !3, line: 3830, type: !7948)
!16592 = !DILocation(line: 3830, column: 41, scope: !16590)
!16593 = !DILocalVariable(name: "csw", scope: !16590, file: !3, line: 3832, type: !4231)
!16594 = !DILocation(line: 3832, column: 22, scope: !16590)
!16595 = !DILocalVariable(name: "i", scope: !16590, file: !3, line: 3833, type: !215)
!16596 = !DILocation(line: 3833, column: 6, scope: !16590)
!16597 = !DILocalVariable(name: "more", scope: !16590, file: !3, line: 3833, type: !215)
!16598 = !DILocation(line: 3833, column: 9, scope: !16590)
!16599 = !DILocalVariable(name: "first", scope: !16590, file: !3, line: 3833, type: !215)
!16600 = !DILocation(line: 3833, column: 19, scope: !16590)
!16601 = !DILocalVariable(name: "last", scope: !16590, file: !3, line: 3833, type: !215)
!16602 = !DILocation(line: 3833, column: 31, scope: !16590)
!16603 = !DILocalVariable(name: "deflt", scope: !16590, file: !3, line: 3833, type: !215)
!16604 = !DILocation(line: 3833, column: 42, scope: !16590)
!16605 = !DILocalVariable(name: "ret", scope: !16590, file: !3, line: 3834, type: !215)
!16606 = !DILocation(line: 3834, column: 6, scope: !16590)
!16607 = !DILocation(line: 3836, column: 8, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16590, file: !3, line: 3836, column: 7)
!16609 = !DILocation(line: 3836, column: 13, scope: !16608)
!16610 = !DILocation(line: 3836, column: 17, scope: !16608)
!16611 = !DILocation(line: 3836, column: 22, scope: !16608)
!16612 = !DILocation(line: 3836, column: 27, scope: !16608)
!16613 = !DILocation(line: 3836, column: 32, scope: !16608)
!16614 = !DILocation(line: 3836, column: 7, scope: !16590)
!16615 = !DILocation(line: 3837, column: 3, scope: !16608)
!16616 = !DILocation(line: 3839, column: 8, scope: !16590)
!16617 = !DILocation(line: 3839, column: 13, scope: !16590)
!16618 = !DILocation(line: 3839, column: 6, scope: !16590)
!16619 = !DILocation(line: 3841, column: 2, scope: !16590)
!16620 = !DILocation(line: 3841, column: 9, scope: !16590)
!16621 = !DILocation(line: 3842, column: 8, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16590, file: !3, line: 3841, column: 15)
!16623 = !DILocation(line: 3844, column: 12, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16622, file: !3, line: 3844, column: 3)
!16625 = !DILocation(line: 3844, column: 17, scope: !16624)
!16626 = !DILocation(line: 3844, column: 10, scope: !16624)
!16627 = !DILocation(line: 3844, column: 8, scope: !16624)
!16628 = !DILocation(line: 3844, column: 24, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16624, file: !3, line: 3844, column: 3)
!16630 = !DILocation(line: 3844, column: 29, scope: !16629)
!16631 = !DILocation(line: 3844, column: 34, scope: !16629)
!16632 = !DILocation(line: 3844, column: 26, scope: !16629)
!16633 = !DILocation(line: 3844, column: 3, scope: !16624)
!16634 = !DILocation(line: 3845, column: 23, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16636, file: !3, line: 3845, column: 8)
!16636 = distinct !DILexicalBlock(scope: !16629, file: !3, line: 3844, column: 45)
!16637 = !DILocation(line: 3845, column: 8, scope: !16635)
!16638 = !DILocation(line: 3845, column: 29, scope: !16635)
!16639 = !DILocation(line: 3845, column: 26, scope: !16635)
!16640 = !DILocation(line: 3845, column: 8, scope: !16636)
!16641 = !DILocation(line: 3846, column: 9, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16643, file: !3, line: 3846, column: 9)
!16643 = distinct !DILexicalBlock(scope: !16635, file: !3, line: 3845, column: 34)
!16644 = !DILocation(line: 3846, column: 15, scope: !16642)
!16645 = !DILocation(line: 3846, column: 9, scope: !16643)
!16646 = !DILocation(line: 3847, column: 14, scope: !16642)
!16647 = !DILocation(line: 3847, column: 12, scope: !16642)
!16648 = !DILocation(line: 3847, column: 6, scope: !16642)
!16649 = !DILocation(line: 3848, column: 12, scope: !16643)
!16650 = !DILocation(line: 3848, column: 10, scope: !16643)
!16651 = !DILocation(line: 3849, column: 10, scope: !16643)
!16652 = !DILocation(line: 3850, column: 4, scope: !16643)
!16653 = !DILocation(line: 3850, column: 15, scope: !16654)
!16654 = distinct !DILexicalBlock(scope: !16635, file: !3, line: 3850, column: 15)
!16655 = !DILocation(line: 3850, column: 21, scope: !16654)
!16656 = !DILocation(line: 3850, column: 15, scope: !16635)
!16657 = !DILocation(line: 3851, column: 5, scope: !16654)
!16658 = !DILocation(line: 3852, column: 3, scope: !16636)
!16659 = !DILocation(line: 3844, column: 41, scope: !16629)
!16660 = !DILocation(line: 3844, column: 3, scope: !16629)
!16661 = distinct !{!16661, !16633, !16662}
!16662 = !DILocation(line: 3852, column: 3, scope: !16624)
!16663 = !DILocation(line: 3854, column: 7, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16622, file: !3, line: 3854, column: 7)
!16665 = !DILocation(line: 3854, column: 13, scope: !16664)
!16666 = !DILocation(line: 3854, column: 18, scope: !16664)
!16667 = !DILocation(line: 3854, column: 21, scope: !16664)
!16668 = !DILocation(line: 3854, column: 26, scope: !16664)
!16669 = !DILocation(line: 3854, column: 7, scope: !16622)
!16670 = !DILocation(line: 3855, column: 10, scope: !16664)
!16671 = !DILocation(line: 3855, column: 4, scope: !16664)
!16672 = !DILocation(line: 3857, column: 7, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16622, file: !3, line: 3857, column: 7)
!16674 = !DILocation(line: 3857, column: 13, scope: !16673)
!16675 = !DILocation(line: 3857, column: 7, scope: !16622)
!16676 = !DILocation(line: 3858, column: 31, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16673, file: !3, line: 3857, column: 20)
!16678 = !DILocation(line: 3858, column: 36, scope: !16677)
!16679 = !DILocation(line: 3858, column: 43, scope: !16677)
!16680 = !DILocation(line: 3858, column: 49, scope: !16677)
!16681 = !DILocation(line: 3858, column: 10, scope: !16677)
!16682 = !DILocation(line: 3858, column: 8, scope: !16677)
!16683 = !DILocation(line: 3859, column: 8, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16677, file: !3, line: 3859, column: 8)
!16685 = !DILocation(line: 3859, column: 12, scope: !16684)
!16686 = !DILocation(line: 3859, column: 8, scope: !16677)
!16687 = !DILocation(line: 3860, column: 12, scope: !16684)
!16688 = !DILocation(line: 3860, column: 5, scope: !16684)
!16689 = !DILocation(line: 3861, column: 3, scope: !16677)
!16690 = !DILocation(line: 3863, column: 9, scope: !16622)
!16691 = !DILocation(line: 3864, column: 8, scope: !16622)
!16692 = !DILocation(line: 3865, column: 9, scope: !16622)
!16693 = distinct !{!16693, !16619, !16694}
!16694 = !DILocation(line: 3866, column: 2, scope: !16590)
!16695 = !DILabel(scope: !16590, name: "err", file: !3, line: 3868)
!16696 = !DILocation(line: 3868, column: 1, scope: !16590)
!16697 = !DILocation(line: 3869, column: 2, scope: !16590)
!16698 = !DILocation(line: 3870, column: 1, scope: !16590)
!16699 = distinct !DISubprogram(name: "show_name", scope: !3, file: !3, line: 3913, type: !4756, scopeLine: 3915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16700 = !DILocalVariable(name: "dev", arg: 1, scope: !16699, file: !3, line: 3913, type: !328)
!16701 = !DILocation(line: 3913, column: 41, scope: !16699)
!16702 = !DILocalVariable(name: "attr", arg: 2, scope: !16699, file: !3, line: 3913, type: !4758)
!16703 = !DILocation(line: 3913, column: 71, scope: !16699)
!16704 = !DILocalVariable(name: "buf", arg: 3, scope: !16699, file: !3, line: 3914, type: !202)
!16705 = !DILocation(line: 3914, column: 11, scope: !16699)
!16706 = !DILocalVariable(name: "con", scope: !16699, file: !3, line: 3916, type: !7948)
!16707 = !DILocation(line: 3916, column: 21, scope: !16699)
!16708 = !DILocation(line: 3916, column: 43, scope: !16699)
!16709 = !DILocation(line: 3916, column: 27, scope: !16699)
!16710 = !DILocation(line: 3918, column: 18, scope: !16699)
!16711 = !DILocation(line: 3919, column: 5, scope: !16699)
!16712 = !DILocation(line: 3919, column: 10, scope: !16699)
!16713 = !DILocation(line: 3919, column: 15, scope: !16699)
!16714 = !DILocation(line: 3919, column: 4, scope: !16699)
!16715 = !DILocation(line: 3920, column: 5, scope: !16699)
!16716 = !DILocation(line: 3920, column: 10, scope: !16699)
!16717 = !DILocation(line: 3918, column: 9, scope: !16699)
!16718 = !DILocation(line: 3918, column: 2, scope: !16699)
!16719 = distinct !DISubprogram(name: "blank_screen_t", scope: !3, file: !3, line: 4433, type: !3629, scopeLine: 4434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16720 = !DILocalVariable(name: "unused", arg: 1, scope: !16719, file: !3, line: 4433, type: !3631)
!16721 = !DILocation(line: 4433, column: 47, scope: !16719)
!16722 = !DILocation(line: 4435, column: 22, scope: !16719)
!16723 = !DILocation(line: 4436, column: 2, scope: !16719)
!16724 = !DILocation(line: 4437, column: 1, scope: !16719)
!16725 = distinct !DISubprogram(name: "copy_overflow", scope: !9296, file: !9296, line: 132, type: !16726, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16726 = !DISubroutineType(types: !16727)
!16727 = !{null, !215, !193}
!16728 = !DILocalVariable(name: "size", arg: 1, scope: !16725, file: !9296, line: 132, type: !215)
!16729 = !DILocation(line: 132, column: 38, scope: !16725)
!16730 = !DILocalVariable(name: "count", arg: 2, scope: !16725, file: !9296, line: 132, type: !193)
!16731 = !DILocation(line: 132, column: 58, scope: !16725)
!16732 = !DILocalVariable(name: "__ret_warn_on", scope: !16733, file: !9296, line: 134, type: !215)
!16733 = distinct !DILexicalBlock(scope: !16725, file: !9296, line: 134, column: 2)
!16734 = !DILocation(line: 134, column: 2, scope: !16733)
!16735 = !DILocation(line: 134, column: 2, scope: !16736)
!16736 = distinct !DILexicalBlock(scope: !16733, file: !9296, line: 134, column: 2)
!16737 = !DILocation(line: 134, column: 2, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !16736, file: !9296, line: 134, column: 2)
!16739 = !DILocation(line: 134, column: 2, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16738, file: !9296, line: 134, column: 2)
!16741 = !DILocation(line: 134, column: 2, scope: !16742)
!16742 = distinct !DILexicalBlock(scope: !16738, file: !9296, line: 134, column: 2)
!16743 = !DILocation(line: 134, column: 2, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16742, file: !9296, line: 134, column: 2)
!16745 = !DILocation(line: 134, column: 2, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16742, file: !9296, line: 134, column: 2)
!16747 = !{i32 -2145446102, i32 -2145446073, i32 -2145446027, i32 -2145445969, i32 -2145445915, i32 -2145445861, i32 -2145445806, i32 -2145445775}
!16748 = !DILocation(line: 134, column: 2, scope: !16749)
!16749 = distinct !DILexicalBlock(scope: !16742, file: !9296, line: 134, column: 2)
!16750 = !{i32 -2145445355, i32 -2145445348, i32 -2145445296, i32 -2145445265, i32 -2145445235}
!16751 = !DILocation(line: 134, column: 2, scope: !16752)
!16752 = distinct !DILexicalBlock(scope: !16742, file: !9296, line: 134, column: 2)
!16753 = !DILocation(line: 134, column: 2, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !16738, file: !9296, line: 134, column: 2)
!16755 = !DILocation(line: 135, column: 1, scope: !16725)
!16756 = distinct !DISubprogram(name: "check_object_size", scope: !9296, file: !9296, line: 122, type: !16757, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !298)
!16757 = !DISubroutineType(types: !16758)
!16758 = !{null, !2216, !193, !578}
!16759 = !DILocalVariable(name: "ptr", arg: 1, scope: !16756, file: !9296, line: 122, type: !2216)
!16760 = !DILocation(line: 122, column: 50, scope: !16756)
!16761 = !DILocalVariable(name: "n", arg: 2, scope: !16756, file: !9296, line: 122, type: !193)
!16762 = !DILocation(line: 122, column: 69, scope: !16756)
!16763 = !DILocalVariable(name: "to_user", arg: 3, scope: !16756, file: !9296, line: 123, type: !578)
!16764 = !DILocation(line: 123, column: 15, scope: !16756)
!16765 = !DILocation(line: 124, column: 3, scope: !16756)
