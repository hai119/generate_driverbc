; ModuleID = '../bcout/drivers/tty/vt/keyboard.llvm.bc'
source_filename = "drivers/tty/vt/keyboard.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.vt_spawn_console = type { %struct.spinlock, %struct.pid*, i32 }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.atomic_notifier_head = type { %struct.spinlock, %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.input_handler = type { i8*, void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)*, i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handler*, %struct.input_dev*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, void (%struct.input_handle*)*, void (%struct.input_handle*)*, i8, i32, i8*, %struct.input_device_id*, %struct.list_head, %struct.list_head }
%struct.input_handle = type { i8*, i32, i8*, %struct.input_dev*, %struct.input_handler*, %struct.list_head, %struct.list_head }
%struct.input_dev = type { i8*, i8*, i8*, %struct.input_id, [1 x i64], [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i32, i32, i32, i8*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, %struct.ff_device*, %struct.input_dev_poller*, i32, %struct.timer_list, [2 x i32], %struct.input_mt*, %struct.input_absinfo*, [12 x i64], [1 x i64], [1 x i64], [1 x i64], i32 (%struct.input_dev*)*, void (%struct.input_dev*)*, i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, i32, i32, i32)*, %struct.input_handle*, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, %struct.input_value*, i8, [3 x i64] }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.input_keymap_entry = type { i8, i8, i16, i32, [32 x i8] }
%struct.ff_device = type { i32 (%struct.input_dev*, %struct.ff_effect*, %struct.ff_effect*)*, i32 (%struct.input_dev*, i32)*, i32 (%struct.input_dev*, i32, i32)*, void (%struct.input_dev*, i16)*, void (%struct.input_dev*, i16)*, void (%struct.ff_device*)*, i8*, [2 x i64], %struct.mutex, i32, %struct.ff_effect*, [0 x %struct.file*] }
%struct.ff_effect = type { i16, i16, i16, %struct.ff_trigger, %struct.ff_replay, %union.anon.0 }
%struct.ff_trigger = type { i16, i16 }
%struct.ff_replay = type { i16, i16 }
%union.anon.0 = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.ff_envelope, i32, i16* }
%struct.ff_envelope = type { i16, i16, i16, i16 }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.65, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.63 }
%union.anon.63 = type { %struct.anon.64 }
%struct.anon.64 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.3, %union.anon.57, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.57 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.58, i32 }
%union.anon.58 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.50, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.kref = type { %struct.refcount_struct }
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.32, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.32 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.proc_dir_entry = type opaque
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.serial_icounter_struct = type opaque
%struct.serial_struct = type opaque
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.tty_buffer = type { %union.anon.35, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.35 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.36, %union.anon.37, i32 }
%struct.request_queue = type opaque
%union.anon.36 = type { %struct.list_head }
%union.anon.37 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.42 }
%struct.anon.42 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.49, i32, [12 x i8] }
%union.anon.49 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.50 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type opaque
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.51, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.54 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, i64 }
%union.anon.54 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.65 = type { %struct.list_head }
%union.anon.66 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.59, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.60, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.61, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.62, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.59 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.60 = type { %struct.callback_head }
%union.anon.61 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.62 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.33 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.33 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.input_dev_poller = type opaque
%struct.input_mt = type opaque
%struct.input_absinfo = type { i32, i32, i32, i32, i32, i32 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type opaque
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.input_value = type { i16, i16, i32 }
%struct.input_device_id = type { i64, i16, i16, i16, i16, [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], [1 x i64], i64 }
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.67 }
%union.anon.67 = type { i8* }
%struct.kbd_struct = type { i8, i8, i8, i8, i8 }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.68, i64 }
%union.anon.68 = type { void (i64)* }
%struct.kbdiacruc = type { i32, i32, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.vc = type { %struct.vc_data*, %struct.work_struct }
%struct.vc_data = type { %struct.tty_port, %struct.vc_state, %struct.vc_state, i16, i32, i32, i32, i32, i64, i64, i64, i32, i32, %struct.consw*, i16*, i32, i8, i8, i8, i8, i8, i8, i32, i16, i16, i64, i16, %struct.console_font, i16, i32, i32, [16 x i32], %struct.vt_mode, %struct.pid*, i32, %struct.wait_queue_head, i16, i8, i32, [4 x i64], [48 x i8], i16*, i32, i32, i32, i16, %struct.vc_data**, %struct.uni_pagedir*, %struct.uni_pagedir**, %struct.uni_screen* }
%struct.vc_state = type { i32, i32, i8, [2 x i8], i8, i32, i8, i8, i8, i8 }
%struct.consw = type opaque
%struct.console_font = type { i32, i32, i32, i8* }
%struct.vt_mode = type { i8, i8, i16, i16, i16 }
%struct.uni_pagedir = type opaque
%struct.uni_screen = type opaque
%struct.pt_regs = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.boot_params = type { %struct.screen_info, %struct.apm_bios_info, [4 x i8], i64, %struct.ist_info, i64, [8 x i8], [16 x i8], [16 x i8], %struct.sys_desc_table, %struct.olpc_ofw_header, i32, i32, i32, [116 x i8], %struct.edid_info, %struct.efi_info, i32, i32, i8, i8, i8, i8, i8, [2 x i8], i8, [1 x i8], %struct.setup_header, [36 x i8], [16 x i32], [128 x %struct.boot_e820_entry], [48 x i8], [6 x %struct.edd_info], [276 x i8] }
%struct.screen_info = type <{ i8, i8, i16, i16, i8, i8, i8, i8, i16, i16, i8, i8, i16, i16, i16, i16, i32, i32, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, i16, i16, i32, i32, [2 x i8] }>
%struct.apm_bios_info = type { i16, i16, i32, i16, i16, i16, i16, i16, i16 }
%struct.ist_info = type { i32, i32, i32, i32 }
%struct.sys_desc_table = type { i16, [14 x i8] }
%struct.olpc_ofw_header = type { i32, i32, i32, i32 }
%struct.edid_info = type { [128 x i8] }
%struct.efi_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.setup_header = type <{ i8, i16, i32, i16, i16, i16, i16, i16, i32, i16, i32, i16, i16, i8, i8, i16, i32, i32, i32, i32, i16, i8, i8, i32, i32, i32, i8, i8, i16, i32, i32, i64, i32, i32, i64, i64, i32, i32, i32 }>
%struct.boot_e820_entry = type <{ i64, i64, i32 }>
%struct.edd_info = type { i8, i8, i16, i16, i8, i8, %struct.edd_device_params }
%struct.edd_device_params = type <{ i16, i16, i32, i32, i32, i64, i16, i32, i16, i8, i8, i16, [4 x i8], [8 x i8], %union.anon.69, %union.anon.76, i8, i8 }>
%union.anon.69 = type { %struct.anon.72 }
%struct.anon.72 = type { i64 }
%union.anon.76 = type { %struct.anon.77 }
%struct.anon.77 = type { i8, i8, i16, i32, i64 }
%struct.kmem_cache = type opaque
%struct.kbd_repeat = type { i32, i32 }
%struct.kbdiacrs = type { i32, [256 x %struct.kbdiacr] }
%struct.kbdiacr = type { i8, i8, i8 }
%struct.kbdiacrsuc = type { i32, [256 x %struct.kbdiacruc] }
%struct.kbkeycode = type { i32, i32 }
%struct.getset_keycode_data = type { %struct.input_keymap_entry, i32 }
%struct.kbentry = type { i8, i8, i16 }
%struct.kbsentry = type { i8, [512 x i8] }
%struct.keyboard_notifier_param = type { %struct.vc_data*, i32, i32, i32, i32 }
%struct.nodemask_t = type { [1 x i64] }

@vt_spawn_con = dso_local global %struct.vt_spawn_console { %struct.spinlock undef, %struct.pid* null, i32 0 }, align 8, !dbg !0
@keyboard_notifier_list = internal global %struct.atomic_notifier_head { %struct.spinlock undef, %struct.notifier_block* null }, align 8, !dbg !326
@kd_mksound_timer = internal global %struct.timer_list { %struct.hlist_node { %struct.hlist_node* inttoptr (i64 -2401263026318605568 to %struct.hlist_node*), %struct.hlist_node** null }, i64 0, void (%struct.timer_list*)* @kd_nosound, i32 0 }, align 8, !dbg !358
@kbd_handler = internal global %struct.input_handler { i8* null, void (%struct.input_handle*, i32, i32, i32)* @kbd_event, void (%struct.input_handle*, %struct.input_value*, i32)* null, i1 (%struct.input_handle*, i32, i32, i32)* null, i1 (%struct.input_handler*, %struct.input_dev*)* @kbd_match, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)* @kbd_connect, void (%struct.input_handle*)* @kbd_disconnect, void (%struct.input_handle*)* @kbd_start, i8 0, i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), %struct.input_device_id* getelementptr inbounds ([3 x %struct.input_device_id], [3 x %struct.input_device_id]* @kbd_ids, i32 0, i32 0), %struct.list_head zeroinitializer, %struct.list_head zeroinitializer }, align 8, !dbg !415
@jiffies = external dso_local global i64, align 8
@kbd_event_lock = internal global %struct.spinlock undef, align 1, !dbg !382
@__UNIQUE_ID_brl_timeout232 = internal constant [95 x i8] c"keyboard.parm=brl_timeout:Braille keys release delay in ms (0 for commit on first key release)\00", section ".modinfo", align 1, !dbg !193
@__param_str_brl_timeout = internal constant [21 x i8] c"keyboard.brl_timeout\00", align 16, !dbg !394
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@brl_timeout = internal global i32 300, align 4, !dbg !399
@__param_brl_timeout = internal constant %struct.kernel_param { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__param_str_brl_timeout, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.67 { i8* bitcast (i32* @brl_timeout to i8*) } }, section "__param", align 8, !dbg !199
@__UNIQUE_ID_brl_timeouttype233 = internal constant [35 x i8] c"keyboard.parmtype=brl_timeout:uint\00", section ".modinfo", align 1, !dbg !265
@__UNIQUE_ID_brl_nbchords234 = internal constant [95 x i8] c"keyboard.parm=brl_nbchords:Number of chords that produce a braille pattern (0 for dead chords)\00", section ".modinfo", align 1, !dbg !270
@__param_str_brl_nbchords = internal constant [22 x i8] c"keyboard.brl_nbchords\00", align 16, !dbg !401
@brl_nbchords = internal global i32 1, align 4, !dbg !406
@__param_brl_nbchords = internal constant %struct.kernel_param { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__param_str_brl_nbchords, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.67 { i8* bitcast (i32* @brl_nbchords to i8*) } }, section "__param", align 8, !dbg !272
@__UNIQUE_ID_brl_nbchordstype235 = internal constant [36 x i8] c"keyboard.parmtype=brl_nbchords:uint\00", section ".modinfo", align 1, !dbg !274
@led_lock = internal global %struct.spinlock undef, align 1, !dbg !408
@ledioctl = internal global i8 0, align 1, !dbg !324
@kbd_table = internal global [63 x %struct.kbd_struct] zeroinitializer, align 16, !dbg !309
@keyboard_tasklet = dso_local global %struct.tasklet_struct { %struct.tasklet_struct* null, i64 0, %struct.atomic_t { i32 1 }, i8 0, %union.anon.68 { void (i64)* @kbd_bh }, i64 0 }, align 8, !dbg !279
@default_utf8 = external dso_local global i32, align 4
@accent_table_size = external dso_local global i32, align 4
@accent_table = external dso_local global [0 x %struct.kbdiacruc], align 4
@key_maps = external dso_local global [256 x i16*], align 16
@keymap_count = external dso_local global i32, align 4
@max_vals = internal constant [15 x i32] [i32 255, i32 255, i32 19, i32 19, i32 26, i32 255, i32 3, i32 8, i32 255, i32 25, i32 8, i32 255, i32 8, i32 255, i32 10], align 16, !dbg !4687
@func_buf_lock = internal global %struct.spinlock undef, align 1, !dbg !4692
@func_table = external dso_local global [256 x i8*], align 16
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@funcbufptr = external dso_local global i8*, align 8
@funcbufsize = external dso_local global i32, align 4
@funcbufleft = external dso_local global i32, align 4
@func_buf = external dso_local global [0 x i8], align 1
@shift_state = internal global i32 0, align 4, !dbg !4694
@kd_nosound.zero = internal global i32 0, align 4, !dbg !379
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@shift_down = internal global [9 x i8] zeroinitializer, align 1, !dbg !384
@key_down = internal global [12 x i64] zeroinitializer, align 16, !dbg !389
@kbd = internal global %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i32 0, i32 0), align 8, !dbg !410
@ledstate = internal global i32 -1, align 4, !dbg !413
@fg_console = external dso_local global i32, align 4
@.str.1 = private unnamed_addr constant [4 x i8] c"kbd\00", align 1
@kbd_ids = internal constant [3 x %struct.input_device_id] [%struct.input_device_id { i64 16, i16 0, i16 0, i16 0, i16 0, [1 x i64] [i64 2], [12 x i64] zeroinitializer, [1 x i64] zeroinitializer, [1 x i64] zeroinitializer, [1 x i64] zeroinitializer, [1 x i64] zeroinitializer, [1 x i64] zeroinitializer, [2 x i64] zeroinitializer, [1 x i64] zeroinitializer, [1 x i64] zeroinitializer, i64 0 }, %struct.input_device_id { i64 16, i16 0, i16 0, i16 0, i16 0, [1 x i64] [i64 262144], [12 x i64] zeroinitializer, [1 x i64] zeroinitializer, [1 x i64] zeroinitializer, [1 x i64] zeroinitializer, [1 x i64] zeroinitializer, [1 x i64] zeroinitializer, [2 x i64] zeroinitializer, [1 x i64] zeroinitializer, [1 x i64] zeroinitializer, i64 0 }, %struct.input_device_id zeroinitializer], align 16, !dbg !4684
@do_poke_blanked_console = external dso_local global i32, align 4
@vc_cons = external dso_local global [63 x %struct.vc], align 16
@rep = internal global i8 0, align 1, !dbg !4512
@__func__.kbd_keycode = private unnamed_addr constant [12 x i8] c"kbd_keycode\00", align 1
@.str.2 = private unnamed_addr constant [50 x i8] c"\014keyboard: can't emulate rawmode for keycode %d\0A\00", align 1
@k_handler = internal global [16 x void (%struct.vc_data*, i8, i8)*] [void (%struct.vc_data*, i8, i8)* @k_self, void (%struct.vc_data*, i8, i8)* @k_fn, void (%struct.vc_data*, i8, i8)* @k_spec, void (%struct.vc_data*, i8, i8)* @k_pad, void (%struct.vc_data*, i8, i8)* @k_dead, void (%struct.vc_data*, i8, i8)* @k_cons, void (%struct.vc_data*, i8, i8)* @k_cur, void (%struct.vc_data*, i8, i8)* @k_shift, void (%struct.vc_data*, i8, i8)* @k_meta, void (%struct.vc_data*, i8, i8)* @k_ascii, void (%struct.vc_data*, i8, i8)* @k_lock, void (%struct.vc_data*, i8, i8)* @k_lowercase, void (%struct.vc_data*, i8, i8)* @k_slock, void (%struct.vc_data*, i8, i8)* @k_dead2, void (%struct.vc_data*, i8, i8)* @k_brl, void (%struct.vc_data*, i8, i8)* @k_ignore], align 16, !dbg !4524
@x86_keycodes = internal constant <{ [240 x i16], [16 x i16] }> <{ [240 x i16] [i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 15, i16 16, i16 17, i16 18, i16 19, i16 20, i16 21, i16 22, i16 23, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 118, i16 86, i16 87, i16 88, i16 115, i16 120, i16 119, i16 121, i16 112, i16 123, i16 92, i16 284, i16 285, i16 309, i16 0, i16 312, i16 91, i16 327, i16 328, i16 329, i16 331, i16 333, i16 335, i16 336, i16 337, i16 338, i16 339, i16 367, i16 288, i16 302, i16 304, i16 350, i16 89, i16 334, i16 326, i16 267, i16 126, i16 268, i16 269, i16 125, i16 347, i16 348, i16 349, i16 360, i16 261, i16 262, i16 263, i16 268, i16 376, i16 100, i16 101, i16 321, i16 316, i16 373, i16 286, i16 289, i16 102, i16 351, i16 355, i16 103, i16 104, i16 105, i16 275, i16 287, i16 279, i16 258, i16 106, i16 274, i16 107, i16 294, i16 364, i16 358, i16 363, i16 362, i16 361, i16 291, i16 108, i16 381, i16 281, i16 290, i16 272, i16 292, i16 305, i16 280, i16 99, i16 112, i16 257, i16 306, i16 359, i16 113, i16 114, i16 264, i16 117, i16 271, i16 374, i16 379, i16 265, i16 266, i16 93, i16 94, i16 95, i16 85, i16 259, i16 375, i16 260, i16 90, i16 116, i16 377, i16 109, i16 111, i16 277, i16 278, i16 282, i16 283, i16 295, i16 296, i16 297, i16 299, i16 300, i16 301, i16 293, i16 303, i16 307, i16 308, i16 310, i16 313, i16 314, i16 315, i16 317, i16 318, i16 319, i16 320, i16 357, i16 322, i16 323, i16 324, i16 325, i16 276, i16 330, i16 332, i16 340, i16 365, i16 342, i16 343, i16 344, i16 345, i16 346, i16 356, i16 270, i16 341, i16 368, i16 369, i16 370, i16 371, i16 372], [16 x i16] zeroinitializer }>, align 16, !dbg !4514
@diacr = internal global i32 0, align 4, !dbg !4520
@dead_key_next = internal global i8 0, align 1, !dbg !4522
@.str.4 = private unnamed_addr constant [39 x i8] c"\013keyboard: k_fn called with value=%d\0A\00", align 1
@fn_handler = internal global [20 x void (%struct.vc_data*)*] [void (%struct.vc_data*)* @fn_null, void (%struct.vc_data*)* @fn_enter, void (%struct.vc_data*)* @fn_show_ptregs, void (%struct.vc_data*)* @fn_show_mem, void (%struct.vc_data*)* @fn_show_state, void (%struct.vc_data*)* @fn_send_intr, void (%struct.vc_data*)* @fn_lastcons, void (%struct.vc_data*)* @fn_caps_toggle, void (%struct.vc_data*)* @fn_num, void (%struct.vc_data*)* @fn_hold, void (%struct.vc_data*)* @fn_scroll_forw, void (%struct.vc_data*)* @fn_scroll_back, void (%struct.vc_data*)* @fn_boot_it, void (%struct.vc_data*)* @fn_caps_on, void (%struct.vc_data*)* @fn_compose, void (%struct.vc_data*)* @fn_SAK, void (%struct.vc_data*)* @fn_dec_console, void (%struct.vc_data*)* @fn_inc_console, void (%struct.vc_data*)* @fn_spawn_con, void (%struct.vc_data*)* @fn_bare_num], align 16, !dbg !4638
@.str.5 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@__irq_regs = external dso_local global %struct.pt_regs*, section ".data", align 8
@last_console = external dso_local global i32, align 4
@applkey.buf = internal global [4 x i8] c"\1BO\00\00", align 1, !dbg !4645
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@want_console = external dso_local global i32, align 4
@k_pad.pad_chars = internal constant [22 x i8] c"0123456789+-*/\0D,.?()#\00", align 16, !dbg !4651
@k_pad.app_map = internal constant [22 x i8] c"pqrstuvwxylSRQMnnmPQS\00", align 16, !dbg !4654
@k_dead.ret_diacr = internal constant [27 x i8] c"`'^~\22,_U.*=cki#o!?+-)(:n;$@", align 16, !dbg !4656
@k_cur.cur_chars = internal constant [5 x i8] c"BDCA\00", align 1, !dbg !4662
@npadch_active = internal global i8 0, align 1, !dbg !4666
@npadch_value = internal global i32 0, align 4, !dbg !4668
@.str.6 = private unnamed_addr constant [49 x i8] c"\013keyboard: k_lowercase was called - impossible\0A\00", align 1
@k_brl.pressed = internal global i32 0, align 4, !dbg !4670
@k_brl.committing = internal global i32 0, align 4, !dbg !4673
@k_brl.releasestart = internal global i64 0, align 8, !dbg !4675
@.str.7 = private unnamed_addr constant [64 x i8] c"\014keyboard: keyboard mode must be unicode for braille patterns\0A\00", align 1
@k_brlcommit.chords = internal global i64 0, align 8, !dbg !4677
@k_brlcommit.committed = internal global i32 0, align 4, !dbg !4682
@boot_params = external dso_local global %struct.boot_params, align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.10 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@llvm.used = appending global [6 x i8*] [i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__UNIQUE_ID_brl_timeout232, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_brl_timeout to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_brl_timeouttype233, i32 0, i32 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__UNIQUE_ID_brl_nbchords234, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_brl_nbchords to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_brl_nbchordstype235, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @register_keyboard_notifier(%struct.notifier_block* %nb) #0 !dbg !4708 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !4711, metadata !DIExpression()), !dbg !4712
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !4713
  %call = call i32 @atomic_notifier_chain_register(%struct.atomic_notifier_head* @keyboard_notifier_list, %struct.notifier_block* %0) #11, !dbg !4714
  ret i32 %call, !dbg !4715
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local i32 @atomic_notifier_chain_register(%struct.atomic_notifier_head*, %struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @unregister_keyboard_notifier(%struct.notifier_block* %nb) #0 !dbg !4716 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !4717, metadata !DIExpression()), !dbg !4718
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !4719
  %call = call i32 @atomic_notifier_chain_unregister(%struct.atomic_notifier_head* @keyboard_notifier_list, %struct.notifier_block* %0) #11, !dbg !4720
  ret i32 %call, !dbg !4721
}

; Function Attrs: noredzone
declare dso_local i32 @atomic_notifier_chain_unregister(%struct.atomic_notifier_head*, %struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @kd_mksound(i32 %hz, i32 %ticks) #0 !dbg !4722 {
entry:
  %hz.addr = alloca i32, align 4
  %ticks.addr = alloca i32, align 4
  store i32 %hz, i32* %hz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hz.addr, metadata !4725, metadata !DIExpression()), !dbg !4726
  store i32 %ticks, i32* %ticks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ticks.addr, metadata !4727, metadata !DIExpression()), !dbg !4728
  %call = call i32 @del_timer(%struct.timer_list* @kd_mksound_timer) #11, !dbg !4729
  %0 = bitcast i32* %hz.addr to i8*, !dbg !4730
  %call1 = call i32 @input_handler_for_each_handle(%struct.input_handler* @kbd_handler, i8* %0, i32 (%struct.input_handle*, i8*)* @kd_sound_helper) #11, !dbg !4731
  %1 = load i32, i32* %hz.addr, align 4, !dbg !4732
  %tobool = icmp ne i32 %1, 0, !dbg !4732
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4734

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %ticks.addr, align 4, !dbg !4735
  %tobool2 = icmp ne i32 %2, 0, !dbg !4735
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4736

if.then:                                          ; preds = %land.lhs.true
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !4737
  %4 = load i32, i32* %ticks.addr, align 4, !dbg !4738
  %conv = zext i32 %4 to i64, !dbg !4738
  %add = add i64 %3, %conv, !dbg !4739
  %call3 = call i32 @mod_timer(%struct.timer_list* @kd_mksound_timer, i64 %add) #11, !dbg !4740
  br label %if.end, !dbg !4740

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !4741
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: noredzone
declare dso_local i32 @input_handler_for_each_handle(%struct.input_handler*, i8*, i32 (%struct.input_handle*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kd_sound_helper(%struct.input_handle* %handle, i8* %data) #0 !dbg !4742 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca %struct.input_handle*, align 8
  %data.addr = alloca i8*, align 8
  %hz = alloca i32*, align 8
  %dev = alloca %struct.input_dev*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !4745, metadata !DIExpression()), !dbg !4746
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4747, metadata !DIExpression()), !dbg !4748
  call void @llvm.dbg.declare(metadata i32** %hz, metadata !4749, metadata !DIExpression()), !dbg !4750
  %0 = load i8*, i8** %data.addr, align 8, !dbg !4751
  %1 = bitcast i8* %0 to i32*, !dbg !4751
  store i32* %1, i32** %hz, align 8, !dbg !4750
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4752, metadata !DIExpression()), !dbg !4753
  %2 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4754
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %2, i32 0, i32 3, !dbg !4755
  %3 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4755
  store %struct.input_dev* %3, %struct.input_dev** %dev, align 8, !dbg !4753
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4756
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 5, !dbg !4758
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !4756
  %call = call zeroext i1 @test_bit(i64 18, i64* %arraydecay) #11, !dbg !4759
  br i1 %call, label %if.then, label %if.end13, !dbg !4760

if.then:                                          ; preds = %entry
  %5 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4761
  %sndbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 11, !dbg !4764
  %arraydecay2 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit, i64 0, i64 0, !dbg !4761
  %call3 = call zeroext i1 @test_bit(i64 2, i64* %arraydecay2) #11, !dbg !4765
  br i1 %call3, label %if.then4, label %if.end6, !dbg !4766

if.then4:                                         ; preds = %if.then
  %6 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4767
  %7 = load i32*, i32** %hz, align 8, !dbg !4769
  %8 = load i32, i32* %7, align 4, !dbg !4770
  call void @input_inject_event(%struct.input_handle* %6, i32 18, i32 2, i32 %8) #11, !dbg !4771
  %9 = load i32*, i32** %hz, align 8, !dbg !4772
  %10 = load i32, i32* %9, align 4, !dbg !4774
  %tobool = icmp ne i32 %10, 0, !dbg !4774
  br i1 %tobool, label %if.then5, label %if.end, !dbg !4775

if.then5:                                         ; preds = %if.then4
  store i32 0, i32* %retval, align 4, !dbg !4776
  br label %return, !dbg !4776

if.end:                                           ; preds = %if.then4
  br label %if.end6, !dbg !4777

if.end6:                                          ; preds = %if.end, %if.then
  %11 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4778
  %sndbit7 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 11, !dbg !4780
  %arraydecay8 = getelementptr inbounds [1 x i64], [1 x i64]* %sndbit7, i64 0, i64 0, !dbg !4778
  %call9 = call zeroext i1 @test_bit(i64 1, i64* %arraydecay8) #11, !dbg !4781
  br i1 %call9, label %if.then10, label %if.end12, !dbg !4782

if.then10:                                        ; preds = %if.end6
  %12 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4783
  %13 = load i32*, i32** %hz, align 8, !dbg !4784
  %14 = load i32, i32* %13, align 4, !dbg !4785
  %tobool11 = icmp ne i32 %14, 0, !dbg !4785
  %15 = zext i1 %tobool11 to i64, !dbg !4785
  %cond = select i1 %tobool11, i32 1, i32 0, !dbg !4785
  call void @input_inject_event(%struct.input_handle* %12, i32 18, i32 1, i32 %cond) #11, !dbg !4786
  br label %if.end12, !dbg !4786

if.end12:                                         ; preds = %if.then10, %if.end6
  br label %if.end13, !dbg !4787

if.end13:                                         ; preds = %if.end12, %entry
  store i32 0, i32* %retval, align 4, !dbg !4788
  br label %return, !dbg !4788

return:                                           ; preds = %if.end13, %if.then5
  %16 = load i32, i32* %retval, align 4, !dbg !4789
  ret i32 %16, !dbg !4789
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @kbd_rate(%struct.kbd_repeat* %rpt) #0 !dbg !4790 {
entry:
  %rpt.addr = alloca %struct.kbd_repeat*, align 8
  %data = alloca [2 x %struct.kbd_repeat], align 16
  store %struct.kbd_repeat* %rpt, %struct.kbd_repeat** %rpt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_repeat** %rpt.addr, metadata !4798, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.declare(metadata [2 x %struct.kbd_repeat]* %data, metadata !4800, metadata !DIExpression()), !dbg !4802
  %arrayinit.begin = getelementptr inbounds [2 x %struct.kbd_repeat], [2 x %struct.kbd_repeat]* %data, i64 0, i64 0, !dbg !4803
  %0 = load %struct.kbd_repeat*, %struct.kbd_repeat** %rpt.addr, align 8, !dbg !4804
  %1 = bitcast %struct.kbd_repeat* %arrayinit.begin to i8*, !dbg !4805
  %2 = bitcast %struct.kbd_repeat* %0 to i8*, !dbg !4805
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 4 %2, i64 8, i1 false), !dbg !4805
  %arrayinit.start = getelementptr inbounds %struct.kbd_repeat, %struct.kbd_repeat* %arrayinit.begin, i64 1, !dbg !4803
  %arrayinit.end = getelementptr inbounds %struct.kbd_repeat, %struct.kbd_repeat* %arrayinit.begin, i64 2, !dbg !4803
  br label %arrayinit.body, !dbg !4803

arrayinit.body:                                   ; preds = %arrayinit.body, %entry
  %arrayinit.cur = phi %struct.kbd_repeat* [ %arrayinit.start, %entry ], [ %arrayinit.next, %arrayinit.body ], !dbg !4803
  %3 = bitcast %struct.kbd_repeat* %arrayinit.cur to i8*, !dbg !4803
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 8, i1 false), !dbg !4803
  %arrayinit.next = getelementptr inbounds %struct.kbd_repeat, %struct.kbd_repeat* %arrayinit.cur, i64 1, !dbg !4803
  %arrayinit.done = icmp eq %struct.kbd_repeat* %arrayinit.next, %arrayinit.end, !dbg !4803
  br i1 %arrayinit.done, label %arrayinit.end1, label %arrayinit.body, !dbg !4803

arrayinit.end1:                                   ; preds = %arrayinit.body
  %arraydecay = getelementptr inbounds [2 x %struct.kbd_repeat], [2 x %struct.kbd_repeat]* %data, i64 0, i64 0, !dbg !4806
  %4 = bitcast %struct.kbd_repeat* %arraydecay to i8*, !dbg !4806
  %call = call i32 @input_handler_for_each_handle(%struct.input_handler* @kbd_handler, i8* %4, i32 (%struct.input_handle*, i8*)* @kbd_rate_helper) #11, !dbg !4807
  %5 = load %struct.kbd_repeat*, %struct.kbd_repeat** %rpt.addr, align 8, !dbg !4808
  %arrayidx = getelementptr [2 x %struct.kbd_repeat], [2 x %struct.kbd_repeat]* %data, i64 0, i64 1, !dbg !4809
  %6 = bitcast %struct.kbd_repeat* %5 to i8*, !dbg !4809
  %7 = bitcast %struct.kbd_repeat* %arrayidx to i8*, !dbg !4809
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 8 %7, i64 8, i1 false), !dbg !4809
  ret i32 0, !dbg !4810
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kbd_rate_helper(%struct.input_handle* %handle, i8* %data) #0 !dbg !4811 {
entry:
  %handle.addr = alloca %struct.input_handle*, align 8
  %data.addr = alloca i8*, align 8
  %dev = alloca %struct.input_dev*, align 8
  %rpt = alloca %struct.kbd_repeat*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !4812, metadata !DIExpression()), !dbg !4813
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4814, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev, metadata !4816, metadata !DIExpression()), !dbg !4817
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4818
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %0, i32 0, i32 3, !dbg !4819
  %1 = load %struct.input_dev*, %struct.input_dev** %dev1, align 8, !dbg !4819
  store %struct.input_dev* %1, %struct.input_dev** %dev, align 8, !dbg !4817
  call void @llvm.dbg.declare(metadata %struct.kbd_repeat** %rpt, metadata !4820, metadata !DIExpression()), !dbg !4821
  %2 = load i8*, i8** %data.addr, align 8, !dbg !4822
  %3 = bitcast i8* %2 to %struct.kbd_repeat*, !dbg !4822
  store %struct.kbd_repeat* %3, %struct.kbd_repeat** %rpt, align 8, !dbg !4821
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4823
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 5, !dbg !4825
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !4823
  %call = call zeroext i1 @test_bit(i64 20, i64* %arraydecay) #11, !dbg !4826
  br i1 %call, label %if.then, label %if.end18, !dbg !4827

if.then:                                          ; preds = %entry
  %5 = load %struct.kbd_repeat*, %struct.kbd_repeat** %rpt, align 8, !dbg !4828
  %arrayidx = getelementptr %struct.kbd_repeat, %struct.kbd_repeat* %5, i64 0, !dbg !4828
  %delay = getelementptr inbounds %struct.kbd_repeat, %struct.kbd_repeat* %arrayidx, i32 0, i32 0, !dbg !4831
  %6 = load i32, i32* %delay, align 4, !dbg !4831
  %cmp = icmp sgt i32 %6, 0, !dbg !4832
  br i1 %cmp, label %if.then2, label %if.end, !dbg !4833

if.then2:                                         ; preds = %if.then
  %7 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4834
  %8 = load %struct.kbd_repeat*, %struct.kbd_repeat** %rpt, align 8, !dbg !4835
  %arrayidx3 = getelementptr %struct.kbd_repeat, %struct.kbd_repeat* %8, i64 0, !dbg !4835
  %delay4 = getelementptr inbounds %struct.kbd_repeat, %struct.kbd_repeat* %arrayidx3, i32 0, i32 0, !dbg !4836
  %9 = load i32, i32* %delay4, align 4, !dbg !4836
  call void @input_inject_event(%struct.input_handle* %7, i32 20, i32 0, i32 %9) #11, !dbg !4837
  br label %if.end, !dbg !4837

if.end:                                           ; preds = %if.then2, %if.then
  %10 = load %struct.kbd_repeat*, %struct.kbd_repeat** %rpt, align 8, !dbg !4838
  %arrayidx5 = getelementptr %struct.kbd_repeat, %struct.kbd_repeat* %10, i64 0, !dbg !4838
  %period = getelementptr inbounds %struct.kbd_repeat, %struct.kbd_repeat* %arrayidx5, i32 0, i32 1, !dbg !4840
  %11 = load i32, i32* %period, align 4, !dbg !4840
  %cmp6 = icmp sgt i32 %11, 0, !dbg !4841
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !4842

if.then7:                                         ; preds = %if.end
  %12 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !4843
  %13 = load %struct.kbd_repeat*, %struct.kbd_repeat** %rpt, align 8, !dbg !4844
  %arrayidx8 = getelementptr %struct.kbd_repeat, %struct.kbd_repeat* %13, i64 0, !dbg !4844
  %period9 = getelementptr inbounds %struct.kbd_repeat, %struct.kbd_repeat* %arrayidx8, i32 0, i32 1, !dbg !4845
  %14 = load i32, i32* %period9, align 4, !dbg !4845
  call void @input_inject_event(%struct.input_handle* %12, i32 20, i32 1, i32 %14) #11, !dbg !4846
  br label %if.end10, !dbg !4846

if.end10:                                         ; preds = %if.then7, %if.end
  %15 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4847
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 24, !dbg !4848
  %arrayidx11 = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 0, !dbg !4847
  %16 = load i32, i32* %arrayidx11, align 8, !dbg !4847
  %17 = load %struct.kbd_repeat*, %struct.kbd_repeat** %rpt, align 8, !dbg !4849
  %arrayidx12 = getelementptr %struct.kbd_repeat, %struct.kbd_repeat* %17, i64 1, !dbg !4849
  %delay13 = getelementptr inbounds %struct.kbd_repeat, %struct.kbd_repeat* %arrayidx12, i32 0, i32 0, !dbg !4850
  store i32 %16, i32* %delay13, align 4, !dbg !4851
  %18 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !4852
  %rep14 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 24, !dbg !4853
  %arrayidx15 = getelementptr [2 x i32], [2 x i32]* %rep14, i64 0, i64 1, !dbg !4852
  %19 = load i32, i32* %arrayidx15, align 4, !dbg !4852
  %20 = load %struct.kbd_repeat*, %struct.kbd_repeat** %rpt, align 8, !dbg !4854
  %arrayidx16 = getelementptr %struct.kbd_repeat, %struct.kbd_repeat* %20, i64 1, !dbg !4854
  %period17 = getelementptr inbounds %struct.kbd_repeat, %struct.kbd_repeat* %arrayidx16, i32 0, i32 1, !dbg !4855
  store i32 %19, i32* %period17, align 4, !dbg !4856
  br label %if.end18, !dbg !4857

if.end18:                                         ; preds = %if.end10, %entry
  ret i32 0, !dbg !4858
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @compute_shiftstate() #0 !dbg !4859 {
entry:
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !4860, metadata !DIExpression()), !dbg !4865
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !4868
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !4874
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4881, metadata !DIExpression()), !dbg !4882
  br label %do.body, !dbg !4883

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4884

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4885, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4888, metadata !DIExpression()), !dbg !4887
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4887
  %conv = zext i1 %cmp to i32, !dbg !4887
  store i32 1, i32* %tmp, align 4, !dbg !4887
  %0 = load i32, i32* %tmp, align 4, !dbg !4887
  br label %do.body2, !dbg !4889

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4890

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4891

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !4893, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !4897, metadata !DIExpression()), !dbg !4896
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !4896
  %conv8 = zext i1 %cmp7 to i32, !dbg !4896
  store i32 1, i32* %tmp9, align 4, !dbg !4896
  %1 = load i32, i32* %tmp9, align 4, !dbg !4896
  %call = call i64 @arch_local_irq_save() #11, !dbg !4898
  store i64 %call, i64* %flags, align 8, !dbg !4898
  br label %do.end, !dbg !4898

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !4891

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !4890

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4899, !srcloc !4900
  br label %do.body12, !dbg !4899

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4901
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !4902
  %rlock.i = bitcast %union.anon* %3 to %struct.raw_spinlock*, !dbg !4902
  br label %do.end14, !dbg !4903

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !4899

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !4890

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4889

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4884

do.end18:                                         ; preds = %do.end17
  call void @do_compute_shiftstate() #11, !dbg !4904
  %4 = load i64, i64* %flags, align 8, !dbg !4905
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i19, align 8
  store i64 %4, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !4909
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !4909
  store i32 1, i32* %tmp.i, align 4, !dbg !4909
  %5 = load i32, i32* %tmp.i, align 4, !dbg !4909
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !4916
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !4916
  store i32 1, i32* %tmp8.i, align 4, !dbg !4916
  %6 = load i32, i32* %tmp8.i, align 4, !dbg !4916
  %7 = load i64, i64* %flags.addr.i, align 8, !dbg !4918
  call void @arch_local_irq_restore(i64 %7) #12, !dbg !4918
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !4919, !srcloc !4921
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !4922
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !4922
  %rlock.i20 = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !4922
  ret void, !dbg !4924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !4925 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !4929, metadata !DIExpression()), !dbg !4930
  %call = call i64 @arch_local_save_flags() #11, !dbg !4931
  store i64 %call, i64* %f, align 8, !dbg !4932
  call void @arch_local_irq_disable() #11, !dbg !4933
  %0 = load i64, i64* %f, align 8, !dbg !4934
  ret i64 %0, !dbg !4935
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_compute_shiftstate() #0 !dbg !4936 {
entry:
  %k = alloca i32, align 4
  %sym = alloca i32, align 4
  %val = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4937, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.declare(metadata i32* %sym, metadata !4939, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.declare(metadata i32* %val, metadata !4941, metadata !DIExpression()), !dbg !4942
  store i32 0, i32* @shift_state, align 4, !dbg !4943
  call void @llvm.memset.p0i8.i64(i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @shift_down, i64 0, i64 0), i8 0, i64 9, i1 false), !dbg !4944
  %call = call i64 @find_first_bit(i64* getelementptr inbounds ([12 x i64], [12 x i64]* @key_down, i64 0, i64 0), i64 256) #11, !dbg !4945
  %conv = trunc i64 %call to i32, !dbg !4945
  store i32 %conv, i32* %k, align 4, !dbg !4945
  br label %for.cond, !dbg !4945

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %k, align 4, !dbg !4947
  %cmp = icmp ult i32 %0, 256, !dbg !4947
  br i1 %cmp, label %for.body, label %for.end, !dbg !4945

for.body:                                         ; preds = %for.cond
  %1 = load i16*, i16** getelementptr inbounds ([256 x i16*], [256 x i16*]* @key_maps, i64 0, i64 0), align 16, !dbg !4949
  %2 = load i32, i32* %k, align 4, !dbg !4949
  %idxprom = zext i32 %2 to i64, !dbg !4949
  %arrayidx = getelementptr i16, i16* %1, i64 %idxprom, !dbg !4949
  %3 = load i16, i16* %arrayidx, align 2, !dbg !4949
  %conv2 = zext i16 %3 to i32, !dbg !4949
  %xor = xor i32 %conv2, 61440, !dbg !4949
  store i32 %xor, i32* %sym, align 4, !dbg !4951
  %4 = load i32, i32* %sym, align 4, !dbg !4952
  %shr = lshr i32 %4, 8, !dbg !4952
  %cmp3 = icmp ne i32 %shr, 7, !dbg !4954
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !4955

land.lhs.true:                                    ; preds = %for.body
  %5 = load i32, i32* %sym, align 4, !dbg !4956
  %shr5 = lshr i32 %5, 8, !dbg !4956
  %cmp6 = icmp ne i32 %shr5, 12, !dbg !4957
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4958

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !4959

if.end:                                           ; preds = %land.lhs.true, %for.body
  %6 = load i32, i32* %sym, align 4, !dbg !4960
  %and = and i32 %6, 255, !dbg !4960
  store i32 %and, i32* %val, align 4, !dbg !4961
  %7 = load i32, i32* %val, align 4, !dbg !4962
  %cmp8 = icmp eq i32 %7, 8, !dbg !4964
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !4965

if.then10:                                        ; preds = %if.end
  store i32 0, i32* %val, align 4, !dbg !4966
  br label %if.end11, !dbg !4967

if.end11:                                         ; preds = %if.then10, %if.end
  %8 = load i32, i32* %val, align 4, !dbg !4968
  %idxprom12 = zext i32 %8 to i64, !dbg !4969
  %arrayidx13 = getelementptr [9 x i8], [9 x i8]* @shift_down, i64 0, i64 %idxprom12, !dbg !4969
  %9 = load i8, i8* %arrayidx13, align 1, !dbg !4970
  %inc = add i8 %9, 1, !dbg !4970
  store i8 %inc, i8* %arrayidx13, align 1, !dbg !4970
  %10 = load i32, i32* %val, align 4, !dbg !4971
  %sh_prom = zext i32 %10 to i64, !dbg !4971
  %shl = shl i64 1, %sh_prom, !dbg !4971
  %11 = load i32, i32* @shift_state, align 4, !dbg !4972
  %conv14 = sext i32 %11 to i64, !dbg !4972
  %or = or i64 %conv14, %shl, !dbg !4972
  %conv15 = trunc i64 %or to i32, !dbg !4972
  store i32 %conv15, i32* @shift_state, align 4, !dbg !4972
  br label %for.inc, !dbg !4973

for.inc:                                          ; preds = %if.end11, %if.then
  %12 = load i32, i32* %k, align 4, !dbg !4947
  %add = add i32 %12, 1, !dbg !4947
  %conv16 = zext i32 %add to i64, !dbg !4947
  %call17 = call i64 @find_next_bit(i64* getelementptr inbounds ([12 x i64], [12 x i64]* @key_down, i64 0, i64 0), i64 256, i64 %conv16) #11, !dbg !4947
  %conv18 = trunc i64 %call17 to i32, !dbg !4947
  store i32 %conv18, i32* %k, align 4, !dbg !4947
  br label %for.cond, !dbg !4947, !llvm.loop !4974

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @setledstate(%struct.kbd_struct* %kb, i32 %led) #0 !dbg !4977 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !4860, metadata !DIExpression()), !dbg !4980
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !4982
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !4983
  %kb.addr = alloca %struct.kbd_struct*, align 8
  %led.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.kbd_struct* %kb, %struct.kbd_struct** %kb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb.addr, metadata !4990, metadata !DIExpression()), !dbg !4991
  store i32 %led, i32* %led.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %led.addr, metadata !4992, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4994, metadata !DIExpression()), !dbg !4995
  br label %do.body, !dbg !4996

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4997

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4998, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5001, metadata !DIExpression()), !dbg !5000
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5000
  %conv = zext i1 %cmp to i32, !dbg !5000
  store i32 1, i32* %tmp, align 4, !dbg !5000
  %0 = load i32, i32* %tmp, align 4, !dbg !5000
  br label %do.body2, !dbg !5002

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5003

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5004

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5006, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5010, metadata !DIExpression()), !dbg !5009
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5009
  %conv8 = zext i1 %cmp7 to i32, !dbg !5009
  store i32 1, i32* %tmp9, align 4, !dbg !5009
  %1 = load i32, i32* %tmp9, align 4, !dbg !5009
  %call = call i64 @arch_local_irq_save() #11, !dbg !5011
  store i64 %call, i64* %flags, align 8, !dbg !5011
  br label %do.end, !dbg !5011

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5004

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5003

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5012, !srcloc !5013
  br label %do.body12, !dbg !5012

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5014
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !5015
  %rlock.i = bitcast %union.anon* %3 to %struct.raw_spinlock*, !dbg !5015
  br label %do.end14, !dbg !5016

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5012

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5003

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5002

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4997

do.end18:                                         ; preds = %do.end17
  %4 = load i32, i32* %led.addr, align 4, !dbg !5017
  %and = and i32 %4, -8, !dbg !5019
  %tobool = icmp ne i32 %and, 0, !dbg !5019
  br i1 %tobool, label %if.else, label %if.then, !dbg !5020

if.then:                                          ; preds = %do.end18
  %5 = load i32, i32* %led.addr, align 4, !dbg !5021
  %conv19 = trunc i32 %5 to i8, !dbg !5021
  store i8 %conv19, i8* @ledioctl, align 1, !dbg !5023
  %6 = load %struct.kbd_struct*, %struct.kbd_struct** %kb.addr, align 8, !dbg !5024
  %ledmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %6, i32 0, i32 2, !dbg !5025
  %bf.load = load i8, i8* %ledmode, align 1, !dbg !5026
  %bf.clear = and i8 %bf.load, -2, !dbg !5026
  %bf.set = or i8 %bf.clear, 1, !dbg !5026
  store i8 %bf.set, i8* %ledmode, align 1, !dbg !5026
  br label %if.end, !dbg !5027

if.else:                                          ; preds = %do.end18
  %7 = load %struct.kbd_struct*, %struct.kbd_struct** %kb.addr, align 8, !dbg !5028
  %ledmode20 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %7, i32 0, i32 2, !dbg !5029
  %bf.load21 = load i8, i8* %ledmode20, align 1, !dbg !5030
  %bf.clear22 = and i8 %bf.load21, -2, !dbg !5030
  store i8 %bf.clear22, i8* %ledmode20, align 1, !dbg !5030
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @set_leds() #11, !dbg !5031
  %8 = load i64, i64* %flags, align 8, !dbg !5032
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !5033
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !5033
  store i32 1, i32* %tmp.i, align 4, !dbg !5033
  %9 = load i32, i32* %tmp.i, align 4, !dbg !5033
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !5034
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !5034
  store i32 1, i32* %tmp8.i, align 4, !dbg !5034
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !5034
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !5035
  call void @arch_local_irq_restore(i64 %11) #12, !dbg !5035
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5036, !srcloc !4921
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !5037
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !5037
  %rlock.i24 = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !5037
  ret void, !dbg !5038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_leds() #0 !dbg !5039 {
entry:
  call void @tasklet_schedule(%struct.tasklet_struct* @keyboard_tasklet) #11, !dbg !5040
  ret void, !dbg !5041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_get_leds(i32 %console, i32 %flag) #0 !dbg !5042 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !4860, metadata !DIExpression()), !dbg !5045
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !5047
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !5048
  %console.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !5055, metadata !DIExpression()), !dbg !5056
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !5057, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !5059, metadata !DIExpression()), !dbg !5060
  %0 = load i32, i32* %console.addr, align 4, !dbg !5061
  %idx.ext = sext i32 %0 to i64, !dbg !5062
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !5062
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !5060
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5063, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5065, metadata !DIExpression()), !dbg !5066
  br label %do.body, !dbg !5067

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5068

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5069, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5072, metadata !DIExpression()), !dbg !5071
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5071
  %conv = zext i1 %cmp to i32, !dbg !5071
  store i32 1, i32* %tmp, align 4, !dbg !5071
  %1 = load i32, i32* %tmp, align 4, !dbg !5071
  br label %do.body2, !dbg !5073

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5074

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5075

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5077, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5081, metadata !DIExpression()), !dbg !5080
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5080
  %conv8 = zext i1 %cmp7 to i32, !dbg !5080
  store i32 1, i32* %tmp9, align 4, !dbg !5080
  %2 = load i32, i32* %tmp9, align 4, !dbg !5080
  %call = call i64 @arch_local_irq_save() #11, !dbg !5082
  store i64 %call, i64* %flags, align 8, !dbg !5082
  br label %do.end, !dbg !5082

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5075

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5074

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5083, !srcloc !5084
  br label %do.body12, !dbg !5083

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5085
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !5086
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !5086
  br label %do.end14, !dbg !5087

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5083

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5074

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5073

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5068

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !5088
  %6 = load i32, i32* %flag.addr, align 4, !dbg !5089
  %call19 = call i32 @vc_kbd_led(%struct.kbd_struct* %5, i32 %6) #11, !dbg !5090
  store i32 %call19, i32* %ret, align 4, !dbg !5091
  %7 = load i64, i64* %flags, align 8, !dbg !5092
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !5093
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !5093
  store i32 1, i32* %tmp.i, align 4, !dbg !5093
  %8 = load i32, i32* %tmp.i, align 4, !dbg !5093
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !5094
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !5094
  store i32 1, i32* %tmp8.i, align 4, !dbg !5094
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !5094
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !5095
  call void @arch_local_irq_restore(i64 %10) #12, !dbg !5095
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5096, !srcloc !4921
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !5097
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !5097
  %rlock.i21 = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !5097
  %13 = load i32, i32* %ret, align 4, !dbg !5098
  ret i32 %13, !dbg !5099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vc_kbd_led(%struct.kbd_struct* %kbd, i32 %flag) #0 !dbg !5100 {
entry:
  %kbd.addr = alloca %struct.kbd_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.kbd_struct* %kbd, %struct.kbd_struct** %kbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kbd.addr, metadata !5103, metadata !DIExpression()), !dbg !5104
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !5105, metadata !DIExpression()), !dbg !5106
  %0 = load %struct.kbd_struct*, %struct.kbd_struct** %kbd.addr, align 8, !dbg !5107
  %ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %0, i32 0, i32 2, !dbg !5108
  %bf.load = load i8, i8* %ledflagstate, align 1, !dbg !5108
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !5108
  %bf.clear = and i8 %bf.lshr, 15, !dbg !5108
  %conv = zext i8 %bf.clear to i32, !dbg !5107
  %1 = load i32, i32* %flag.addr, align 4, !dbg !5109
  %shr = ashr i32 %conv, %1, !dbg !5110
  %and = and i32 %shr, 1, !dbg !5111
  ret i32 %and, !dbg !5112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vt_set_led_state(i32 %console, i32 %leds) #0 !dbg !5113 {
entry:
  %console.addr = alloca i32, align 4
  %leds.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !5116, metadata !DIExpression()), !dbg !5117
  store i32 %leds, i32* %leds.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %leds.addr, metadata !5118, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !5120, metadata !DIExpression()), !dbg !5121
  %0 = load i32, i32* %console.addr, align 4, !dbg !5122
  %idx.ext = sext i32 %0 to i64, !dbg !5123
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !5123
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !5121
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !5124
  %2 = load i32, i32* %leds.addr, align 4, !dbg !5125
  call void @setledstate(%struct.kbd_struct* %1, i32 %2) #11, !dbg !5126
  ret void, !dbg !5127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vt_kbd_con_start(i32 %console) #0 !dbg !5128 {
entry:
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !4860, metadata !DIExpression()), !dbg !5129
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !5131
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !5132
  %console.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !5139, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !5141, metadata !DIExpression()), !dbg !5142
  %0 = load i32, i32* %console.addr, align 4, !dbg !5143
  %idx.ext = sext i32 %0 to i64, !dbg !5144
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !5144
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !5142
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5145, metadata !DIExpression()), !dbg !5146
  br label %do.body, !dbg !5147

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5148

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5149, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5152, metadata !DIExpression()), !dbg !5151
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5151
  %conv = zext i1 %cmp to i32, !dbg !5151
  store i32 1, i32* %tmp, align 4, !dbg !5151
  %1 = load i32, i32* %tmp, align 4, !dbg !5151
  br label %do.body2, !dbg !5153

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5154

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5155

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5157, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5161, metadata !DIExpression()), !dbg !5160
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5160
  %conv8 = zext i1 %cmp7 to i32, !dbg !5160
  store i32 1, i32* %tmp9, align 4, !dbg !5160
  %2 = load i32, i32* %tmp9, align 4, !dbg !5160
  %call = call i64 @arch_local_irq_save() #11, !dbg !5162
  store i64 %call, i64* %flags, align 8, !dbg !5162
  br label %do.end, !dbg !5162

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5155

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5154

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5163, !srcloc !5164
  br label %do.body12, !dbg !5163

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5165
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !5166
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !5166
  br label %do.end14, !dbg !5167

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5163

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5154

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5153

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5148

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !5168
  call void @clr_vc_kbd_led(%struct.kbd_struct* %5, i32 0) #11, !dbg !5169
  call void @set_leds() #11, !dbg !5170
  %6 = load i64, i64* %flags, align 8, !dbg !5171
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i19, align 8
  store i64 %6, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !5172
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !5172
  store i32 1, i32* %tmp.i, align 4, !dbg !5172
  %7 = load i32, i32* %tmp.i, align 4, !dbg !5172
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !5173
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !5173
  store i32 1, i32* %tmp8.i, align 4, !dbg !5173
  %8 = load i32, i32* %tmp8.i, align 4, !dbg !5173
  %9 = load i64, i64* %flags.addr.i, align 8, !dbg !5174
  call void @arch_local_irq_restore(i64 %9) #12, !dbg !5174
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5175, !srcloc !4921
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !5176
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !5176
  %rlock.i20 = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !5176
  ret void, !dbg !5177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clr_vc_kbd_led(%struct.kbd_struct* %kbd, i32 %flag) #0 !dbg !5178 {
entry:
  %kbd.addr = alloca %struct.kbd_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.kbd_struct* %kbd, %struct.kbd_struct** %kbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kbd.addr, metadata !5181, metadata !DIExpression()), !dbg !5182
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !5183, metadata !DIExpression()), !dbg !5184
  %0 = load i32, i32* %flag.addr, align 4, !dbg !5185
  %shl = shl i32 1, %0, !dbg !5186
  %neg = xor i32 %shl, -1, !dbg !5187
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kbd.addr, align 8, !dbg !5188
  %ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %1, i32 0, i32 2, !dbg !5189
  %bf.load = load i8, i8* %ledflagstate, align 1, !dbg !5190
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !5190
  %bf.clear = and i8 %bf.lshr, 15, !dbg !5190
  %conv = zext i8 %bf.clear to i32, !dbg !5190
  %and = and i32 %conv, %neg, !dbg !5190
  %conv1 = trunc i32 %and to i8, !dbg !5190
  %bf.load2 = load i8, i8* %ledflagstate, align 1, !dbg !5190
  %bf.value = and i8 %conv1, 15, !dbg !5190
  %bf.shl = shl i8 %bf.value, 1, !dbg !5190
  %bf.clear3 = and i8 %bf.load2, -31, !dbg !5190
  %bf.set = or i8 %bf.clear3, %bf.shl, !dbg !5190
  store i8 %bf.set, i8* %ledflagstate, align 1, !dbg !5190
  ret void, !dbg !5191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vt_kbd_con_stop(i32 %console) #0 !dbg !5192 {
entry:
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !4860, metadata !DIExpression()), !dbg !5193
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !5195
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !5196
  %console.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !5203, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !5205, metadata !DIExpression()), !dbg !5206
  %0 = load i32, i32* %console.addr, align 4, !dbg !5207
  %idx.ext = sext i32 %0 to i64, !dbg !5208
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !5208
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !5206
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5209, metadata !DIExpression()), !dbg !5210
  br label %do.body, !dbg !5211

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5212

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5213, metadata !DIExpression()), !dbg !5215
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5216, metadata !DIExpression()), !dbg !5215
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5215
  %conv = zext i1 %cmp to i32, !dbg !5215
  store i32 1, i32* %tmp, align 4, !dbg !5215
  %1 = load i32, i32* %tmp, align 4, !dbg !5215
  br label %do.body2, !dbg !5217

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5218

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5219

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5221, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5225, metadata !DIExpression()), !dbg !5224
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5224
  %conv8 = zext i1 %cmp7 to i32, !dbg !5224
  store i32 1, i32* %tmp9, align 4, !dbg !5224
  %2 = load i32, i32* %tmp9, align 4, !dbg !5224
  %call = call i64 @arch_local_irq_save() #11, !dbg !5226
  store i64 %call, i64* %flags, align 8, !dbg !5226
  br label %do.end, !dbg !5226

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5219

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5218

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5227, !srcloc !5228
  br label %do.body12, !dbg !5227

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5229
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !5230
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !5230
  br label %do.end14, !dbg !5231

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5227

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5218

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5217

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5212

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !5232
  call void @set_vc_kbd_led(%struct.kbd_struct* %5, i32 0) #11, !dbg !5233
  call void @set_leds() #11, !dbg !5234
  %6 = load i64, i64* %flags, align 8, !dbg !5235
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i19, align 8
  store i64 %6, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !5236
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !5236
  store i32 1, i32* %tmp.i, align 4, !dbg !5236
  %7 = load i32, i32* %tmp.i, align 4, !dbg !5236
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !5237
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !5237
  store i32 1, i32* %tmp8.i, align 4, !dbg !5237
  %8 = load i32, i32* %tmp8.i, align 4, !dbg !5237
  %9 = load i64, i64* %flags.addr.i, align 8, !dbg !5238
  call void @arch_local_irq_restore(i64 %9) #12, !dbg !5238
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5239, !srcloc !4921
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !5240
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !5240
  %rlock.i20 = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !5240
  ret void, !dbg !5241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_vc_kbd_led(%struct.kbd_struct* %kbd, i32 %flag) #0 !dbg !5242 {
entry:
  %kbd.addr = alloca %struct.kbd_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.kbd_struct* %kbd, %struct.kbd_struct** %kbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kbd.addr, metadata !5243, metadata !DIExpression()), !dbg !5244
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !5245, metadata !DIExpression()), !dbg !5246
  %0 = load i32, i32* %flag.addr, align 4, !dbg !5247
  %shl = shl i32 1, %0, !dbg !5248
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kbd.addr, align 8, !dbg !5249
  %ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %1, i32 0, i32 2, !dbg !5250
  %bf.load = load i8, i8* %ledflagstate, align 1, !dbg !5251
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !5251
  %bf.clear = and i8 %bf.lshr, 15, !dbg !5251
  %conv = zext i8 %bf.clear to i32, !dbg !5251
  %or = or i32 %conv, %shl, !dbg !5251
  %conv1 = trunc i32 %or to i8, !dbg !5251
  %bf.load2 = load i8, i8* %ledflagstate, align 1, !dbg !5251
  %bf.value = and i8 %conv1, 15, !dbg !5251
  %bf.shl = shl i8 %bf.value, 1, !dbg !5251
  %bf.clear3 = and i8 %bf.load2, -31, !dbg !5251
  %bf.set = or i8 %bf.clear3, %bf.shl, !dbg !5251
  store i8 %bf.set, i8* %ledflagstate, align 1, !dbg !5251
  ret void, !dbg !5252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kbd_bh(i64 %dummy) #0 !dbg !5253 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !4860, metadata !DIExpression()), !dbg !5254
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !5256
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !5257
  %dummy.addr = alloca i64, align 8
  %leds = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i64 %dummy, i64* %dummy.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dummy.addr, metadata !5264, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.declare(metadata i32* %leds, metadata !5266, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5268, metadata !DIExpression()), !dbg !5269
  br label %do.body, !dbg !5270

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5271

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5272, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5275, metadata !DIExpression()), !dbg !5274
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5274
  %conv = zext i1 %cmp to i32, !dbg !5274
  store i32 1, i32* %tmp, align 4, !dbg !5274
  %0 = load i32, i32* %tmp, align 4, !dbg !5274
  br label %do.body2, !dbg !5276

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5277

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5278

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5280, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5284, metadata !DIExpression()), !dbg !5283
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5283
  %conv8 = zext i1 %cmp7 to i32, !dbg !5283
  store i32 1, i32* %tmp9, align 4, !dbg !5283
  %1 = load i32, i32* %tmp9, align 4, !dbg !5283
  %call = call i64 @arch_local_irq_save() #11, !dbg !5285
  store i64 %call, i64* %flags, align 8, !dbg !5285
  br label %do.end, !dbg !5285

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5278

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5277

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5286, !srcloc !5287
  br label %do.body12, !dbg !5286

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5288
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !5289
  %rlock.i = bitcast %union.anon* %3 to %struct.raw_spinlock*, !dbg !5289
  br label %do.end14, !dbg !5290

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5286

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5277

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5276

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5271

do.end18:                                         ; preds = %do.end17
  %call19 = call zeroext i8 @getleds() #11, !dbg !5291
  %conv20 = zext i8 %call19 to i32, !dbg !5291
  store i32 %conv20, i32* %leds, align 4, !dbg !5292
  %4 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !5293
  %lockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %4, i32 0, i32 0, !dbg !5294
  %5 = load i8, i8* %lockstate, align 1, !dbg !5294
  %conv21 = zext i8 %5 to i32, !dbg !5295
  %shl = shl i32 %conv21, 8, !dbg !5296
  %6 = load i32, i32* %leds, align 4, !dbg !5297
  %or = or i32 %6, %shl, !dbg !5297
  store i32 %or, i32* %leds, align 4, !dbg !5297
  %7 = load i64, i64* %flags, align 8, !dbg !5298
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !5299
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !5299
  store i32 1, i32* %tmp.i, align 4, !dbg !5299
  %8 = load i32, i32* %tmp.i, align 4, !dbg !5299
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !5300
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !5300
  store i32 1, i32* %tmp8.i, align 4, !dbg !5300
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !5300
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !5301
  call void @arch_local_irq_restore(i64 %10) #12, !dbg !5301
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5302, !srcloc !4921
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !5303
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !5303
  %rlock.i25 = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !5303
  %13 = load i32, i32* %leds, align 4, !dbg !5304
  %14 = load i32, i32* @ledstate, align 4, !dbg !5306
  %cmp22 = icmp ne i32 %13, %14, !dbg !5307
  br i1 %cmp22, label %if.then, label %if.end, !dbg !5308

if.then:                                          ; preds = %do.end18
  %15 = load i32, i32* @ledstate, align 4, !dbg !5309
  %16 = load i32, i32* %leds, align 4, !dbg !5311
  call void @kbd_propagate_led_state(i32 %15, i32 %16) #11, !dbg !5312
  %17 = load i32, i32* %leds, align 4, !dbg !5313
  store i32 %17, i32* @ledstate, align 4, !dbg !5314
  br label %if.end, !dbg !5315

if.end:                                           ; preds = %if.then, %do.end18
  ret void, !dbg !5316
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local i32 @kbd_init() #4 section ".init.text" !dbg !5317 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %error = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5320, metadata !DIExpression()), !dbg !5321
  call void @llvm.dbg.declare(metadata i32* %error, metadata !5322, metadata !DIExpression()), !dbg !5323
  store i32 0, i32* %i, align 4, !dbg !5324
  br label %for.cond, !dbg !5326

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5327
  %cmp = icmp slt i32 %0, 63, !dbg !5329
  br i1 %cmp, label %for.body, label %for.end, !dbg !5330

for.body:                                         ; preds = %for.cond
  %call = call i32 @kbd_defleds() #11, !dbg !5331
  %conv = trunc i32 %call to i8, !dbg !5331
  %1 = load i32, i32* %i, align 4, !dbg !5333
  %idxprom = sext i32 %1 to i64, !dbg !5334
  %arrayidx = getelementptr [63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 %idxprom, !dbg !5334
  %ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %arrayidx, i32 0, i32 2, !dbg !5335
  %bf.load = load i8, i8* %ledflagstate, align 1, !dbg !5336
  %bf.value = and i8 %conv, 15, !dbg !5336
  %bf.shl = shl i8 %bf.value, 1, !dbg !5336
  %bf.clear = and i8 %bf.load, -31, !dbg !5336
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !5336
  store i8 %bf.set, i8* %ledflagstate, align 1, !dbg !5336
  %call1 = call i32 @kbd_defleds() #11, !dbg !5337
  %conv2 = trunc i32 %call1 to i8, !dbg !5337
  %2 = load i32, i32* %i, align 4, !dbg !5338
  %idxprom3 = sext i32 %2 to i64, !dbg !5339
  %arrayidx4 = getelementptr [63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 %idxprom3, !dbg !5339
  %default_ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %arrayidx4, i32 0, i32 3, !dbg !5340
  %bf.load5 = load i8, i8* %default_ledflagstate, align 1, !dbg !5341
  %bf.value6 = and i8 %conv2, 15, !dbg !5341
  %bf.clear7 = and i8 %bf.load5, -16, !dbg !5341
  %bf.set8 = or i8 %bf.clear7, %bf.value6, !dbg !5341
  store i8 %bf.set8, i8* %default_ledflagstate, align 1, !dbg !5341
  %3 = load i32, i32* %i, align 4, !dbg !5342
  %idxprom9 = sext i32 %3 to i64, !dbg !5343
  %arrayidx10 = getelementptr [63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 %idxprom9, !dbg !5343
  %ledmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %arrayidx10, i32 0, i32 2, !dbg !5344
  %bf.load11 = load i8, i8* %ledmode, align 1, !dbg !5345
  %bf.clear12 = and i8 %bf.load11, -2, !dbg !5345
  store i8 %bf.clear12, i8* %ledmode, align 1, !dbg !5345
  %4 = load i32, i32* %i, align 4, !dbg !5346
  %idxprom13 = sext i32 %4 to i64, !dbg !5347
  %arrayidx14 = getelementptr [63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 %idxprom13, !dbg !5347
  %lockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %arrayidx14, i32 0, i32 0, !dbg !5348
  store i8 0, i8* %lockstate, align 1, !dbg !5349
  %5 = load i32, i32* %i, align 4, !dbg !5350
  %idxprom15 = sext i32 %5 to i64, !dbg !5351
  %arrayidx16 = getelementptr [63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 %idxprom15, !dbg !5351
  %slockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %arrayidx16, i32 0, i32 1, !dbg !5352
  store i8 0, i8* %slockstate, align 1, !dbg !5353
  %6 = load i32, i32* %i, align 4, !dbg !5354
  %idxprom17 = sext i32 %6 to i64, !dbg !5355
  %arrayidx18 = getelementptr [63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 %idxprom17, !dbg !5355
  %modeflags = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %arrayidx18, i32 0, i32 4, !dbg !5356
  %bf.load19 = load i8, i8* %modeflags, align 1, !dbg !5357
  %bf.clear20 = and i8 %bf.load19, -32, !dbg !5357
  %bf.set21 = or i8 %bf.clear20, 20, !dbg !5357
  store i8 %bf.set21, i8* %modeflags, align 1, !dbg !5357
  %7 = load i32, i32* @default_utf8, align 4, !dbg !5358
  %tobool = icmp ne i32 %7, 0, !dbg !5358
  %8 = zext i1 %tobool to i64, !dbg !5358
  %cond = select i1 %tobool, i32 3, i32 0, !dbg !5358
  %conv22 = trunc i32 %cond to i8, !dbg !5358
  %9 = load i32, i32* %i, align 4, !dbg !5359
  %idxprom23 = sext i32 %9 to i64, !dbg !5360
  %arrayidx24 = getelementptr [63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 %idxprom23, !dbg !5360
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %arrayidx24, i32 0, i32 3, !dbg !5361
  %bf.load25 = load i8, i8* %kbdmode, align 1, !dbg !5362
  %bf.value26 = and i8 %conv22, 7, !dbg !5362
  %bf.shl27 = shl i8 %bf.value26, 4, !dbg !5362
  %bf.clear28 = and i8 %bf.load25, -113, !dbg !5362
  %bf.set29 = or i8 %bf.clear28, %bf.shl27, !dbg !5362
  store i8 %bf.set29, i8* %kbdmode, align 1, !dbg !5362
  br label %for.inc, !dbg !5363

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !5364
  %inc = add i32 %10, 1, !dbg !5364
  store i32 %inc, i32* %i, align 4, !dbg !5364
  br label %for.cond, !dbg !5365, !llvm.loop !5366

for.end:                                          ; preds = %for.cond
  call void @kbd_init_leds() #11, !dbg !5368
  %call30 = call i32 @input_register_handler(%struct.input_handler* @kbd_handler) #11, !dbg !5369
  store i32 %call30, i32* %error, align 4, !dbg !5370
  %11 = load i32, i32* %error, align 4, !dbg !5371
  %tobool31 = icmp ne i32 %11, 0, !dbg !5371
  br i1 %tobool31, label %if.then, label %if.end, !dbg !5373

if.then:                                          ; preds = %for.end
  %12 = load i32, i32* %error, align 4, !dbg !5374
  store i32 %12, i32* %retval, align 4, !dbg !5375
  br label %return, !dbg !5375

if.end:                                           ; preds = %for.end
  call void @tasklet_enable(%struct.tasklet_struct* @keyboard_tasklet) #11, !dbg !5376
  call void @tasklet_schedule(%struct.tasklet_struct* @keyboard_tasklet) #11, !dbg !5377
  store i32 0, i32* %retval, align 4, !dbg !5378
  br label %return, !dbg !5378

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !5379
  ret i32 %13, !dbg !5379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kbd_defleds() #0 !dbg !5380 {
entry:
  %0 = load i8, i8* getelementptr inbounds (%struct.boot_params, %struct.boot_params* @boot_params, i32 0, i32 22), align 1, !dbg !5382
  %conv = zext i8 %0 to i32, !dbg !5383
  %and = and i32 %conv, 32, !dbg !5384
  %tobool = icmp ne i32 %and, 0, !dbg !5383
  %1 = zext i1 %tobool to i64, !dbg !5383
  %cond = select i1 %tobool, i32 2, i32 0, !dbg !5383
  ret i32 %cond, !dbg !5385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kbd_init_leds() #0 !dbg !5386 {
entry:
  ret void, !dbg !5387
}

; Function Attrs: noredzone
declare dso_local i32 @input_register_handler(%struct.input_handler*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_enable(%struct.tasklet_struct* %t) #0 !dbg !5388 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5389, metadata !DIExpression()), !dbg !5395
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5400, metadata !DIExpression()), !dbg !5408
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5410, metadata !DIExpression()), !dbg !5411
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5412, metadata !DIExpression()), !dbg !5413
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !5414, metadata !DIExpression()), !dbg !5415
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5416, !srcloc !5417
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !5418
  %count = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 2, !dbg !5419
  store %struct.atomic_t* %count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5420
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !5420
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5421
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !5422
  %conv.i.i = trunc i64 %4 to i32, !dbg !5422
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #12, !dbg !5423
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5424
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !5424
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !5424
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5425
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5426
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !5427
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !5428, !srcloc !5429
  ret void, !dbg !5430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #0 !dbg !5431 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !5432, metadata !DIExpression()), !dbg !5433
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !5434
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !5436
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #11, !dbg !5437
  br i1 %call, label %if.end, label %if.then, !dbg !5438

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !5439
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #11, !dbg !5440
  br label %if.end, !dbg !5440

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_do_diacrit(i32 %cmd, i8* %udp, i32 %perm) #0 !dbg !5442 {
entry:
  %lock.addr.i335 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i335, metadata !4869, metadata !DIExpression()), !dbg !5445
  %lock.addr.i330 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i330, metadata !4860, metadata !DIExpression()), !dbg !5454
  %flags.addr.i331 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i331, metadata !4867, metadata !DIExpression()), !dbg !5457
  %tmp.i332 = alloca i32, align 4
  %tmp8.i333 = alloca i32, align 4
  %lock.addr.i328 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i328, metadata !4869, metadata !DIExpression()), !dbg !5458
  %retval.i.i277 = alloca i1, align 1
  %addr.addr.i.i278 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i278, metadata !5465, metadata !DIExpression()), !dbg !5470
  %bytes.addr.i.i279 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i279, metadata !5481, metadata !DIExpression()), !dbg !5482
  %is_source.addr.i.i280 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i280, metadata !5483, metadata !DIExpression()), !dbg !5484
  %sz.i.i281 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i281, metadata !5485, metadata !DIExpression()), !dbg !5486
  %__ret_warn_on.i.i282 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i282, metadata !5487, metadata !DIExpression()), !dbg !5490
  %tmp.i.i283 = alloca i64, align 8
  %to.addr.i284 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i284, metadata !5491, metadata !DIExpression()), !dbg !5492
  %from.addr.i285 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i285, metadata !5493, metadata !DIExpression()), !dbg !5494
  %n.addr.i286 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i286, metadata !5495, metadata !DIExpression()), !dbg !5496
  %lock.addr.i272 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i272, metadata !4860, metadata !DIExpression()), !dbg !5497
  %flags.addr.i273 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i273, metadata !4867, metadata !DIExpression()), !dbg !5499
  %tmp.i274 = alloca i32, align 4
  %tmp8.i275 = alloca i32, align 4
  %lock.addr.i270 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i270, metadata !4869, metadata !DIExpression()), !dbg !5500
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5465, metadata !DIExpression()), !dbg !5507
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5481, metadata !DIExpression()), !dbg !5513
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5483, metadata !DIExpression()), !dbg !5514
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5485, metadata !DIExpression()), !dbg !5515
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5487, metadata !DIExpression()), !dbg !5516
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5491, metadata !DIExpression()), !dbg !5517
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5493, metadata !DIExpression()), !dbg !5518
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5495, metadata !DIExpression()), !dbg !5519
  %lock.addr.i265 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i265, metadata !4860, metadata !DIExpression()), !dbg !5520
  %flags.addr.i266 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i266, metadata !4867, metadata !DIExpression()), !dbg !5522
  %tmp.i267 = alloca i32, align 4
  %tmp8.i268 = alloca i32, align 4
  %lock.addr.i263 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i263, metadata !4860, metadata !DIExpression()), !dbg !5523
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !5525
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !5526
  %retval = alloca i32, align 4
  %cmd.addr = alloca i32, align 4
  %udp.addr = alloca i8*, align 8
  %perm.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %asize = alloca i32, align 4
  %ret = alloca i32, align 4
  %a = alloca %struct.kbdiacrs*, align 8
  %dia = alloca %struct.kbdiacr*, align 8
  %i = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp41 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp43 = alloca i64, align 8
  %a54 = alloca %struct.kbdiacrsuc*, align 8
  %buf = alloca i8*, align 8
  %__dummy62 = alloca i64, align 8
  %__dummy263 = alloca i64, align 8
  %tmp66 = alloca i32, align 4
  %__dummy70 = alloca i64, align 8
  %__dummy271 = alloca i64, align 8
  %tmp74 = alloca i32, align 4
  %tmp88 = alloca i64, align 8
  %__ret_pu89 = alloca i32, align 4
  %__ptr_pu90 = alloca i8*, align 8
  %__val_pu91 = alloca i32, align 4
  %tmp95 = alloca i64, align 8
  %a109 = alloca %struct.kbdiacrs*, align 8
  %dia110 = alloca %struct.kbdiacr*, align 8
  %ct = alloca i32, align 4
  %i111 = alloca i32, align 4
  %tmp115 = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp120 = alloca i64, align 8
  %__dummy144 = alloca i64, align 8
  %__dummy2145 = alloca i64, align 8
  %tmp148 = alloca i32, align 4
  %__dummy152 = alloca i64, align 8
  %__dummy2153 = alloca i64, align 8
  %tmp156 = alloca i32, align 4
  %a197 = alloca %struct.kbdiacrsuc*, align 8
  %ct198 = alloca i32, align 4
  %buf199 = alloca i8*, align 8
  %tmp203 = alloca i64, align 8
  %__ret_gu204 = alloca i32, align 4
  %__val_gu205 = alloca i32, align 4
  %tmp210 = alloca i64, align 8
  %__dummy234 = alloca i64, align 8
  %__dummy2235 = alloca i64, align 8
  %tmp238 = alloca i32, align 4
  %__dummy242 = alloca i64, align 8
  %__dummy2243 = alloca i64, align 8
  %tmp246 = alloca i32, align 4
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !5533, metadata !DIExpression()), !dbg !5534
  store i8* %udp, i8** %udp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %udp.addr, metadata !5535, metadata !DIExpression()), !dbg !5536
  store i32 %perm, i32* %perm.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %perm.addr, metadata !5537, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5539, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.declare(metadata i32* %asize, metadata !5541, metadata !DIExpression()), !dbg !5542
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5543, metadata !DIExpression()), !dbg !5544
  store i32 0, i32* %ret, align 4, !dbg !5544
  %0 = load i32, i32* %cmd.addr, align 4, !dbg !5545
  switch i32 %0, label %sw.epilog [
    i32 19274, label %sw.bb
    i32 19450, label %sw.bb53
    i32 19275, label %sw.bb108
    i32 19451, label %sw.bb196
  ], !dbg !5546

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.kbdiacrs** %a, metadata !5547, metadata !DIExpression()), !dbg !5559
  %1 = load i8*, i8** %udp.addr, align 8, !dbg !5560
  %2 = bitcast i8* %1 to %struct.kbdiacrs*, !dbg !5560
  store %struct.kbdiacrs* %2, %struct.kbdiacrs** %a, align 8, !dbg !5559
  call void @llvm.dbg.declare(metadata %struct.kbdiacr** %dia, metadata !5561, metadata !DIExpression()), !dbg !5563
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5564, metadata !DIExpression()), !dbg !5565
  %call = call i8* @kmalloc_array(i64 256, i64 3, i32 3264) #11, !dbg !5566
  %3 = bitcast i8* %call to %struct.kbdiacr*, !dbg !5566
  store %struct.kbdiacr* %3, %struct.kbdiacr** %dia, align 8, !dbg !5567
  %4 = load %struct.kbdiacr*, %struct.kbdiacr** %dia, align 8, !dbg !5568
  %tobool = icmp ne %struct.kbdiacr* %4, null, !dbg !5568
  br i1 %tobool, label %if.end, label %if.then, !dbg !5570

if.then:                                          ; preds = %sw.bb
  store i32 -12, i32* %retval, align 4, !dbg !5571
  br label %return, !dbg !5571

if.end:                                           ; preds = %sw.bb
  br label %do.body, !dbg !5572

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !5573

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5574, metadata !DIExpression()), !dbg !5576
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5577, metadata !DIExpression()), !dbg !5576
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5576
  %conv = zext i1 %cmp to i32, !dbg !5576
  store i32 1, i32* %tmp, align 4, !dbg !5576
  %5 = load i32, i32* %tmp, align 4, !dbg !5576
  br label %do.body2, !dbg !5578

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5579

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5580

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5582, metadata !DIExpression()), !dbg !5585
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5586, metadata !DIExpression()), !dbg !5585
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5585
  %conv8 = zext i1 %cmp7 to i32, !dbg !5585
  store i32 1, i32* %tmp9, align 4, !dbg !5585
  %6 = load i32, i32* %tmp9, align 4, !dbg !5585
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !5587
  store i64 %call10, i64* %flags, align 8, !dbg !5587
  br label %do.end, !dbg !5587

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !5580

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !5579

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5588, !srcloc !5589
  br label %do.body13, !dbg !5588

do.body13:                                        ; preds = %do.body12
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5590
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !5591
  %rlock.i = bitcast %union.anon* %8 to %struct.raw_spinlock*, !dbg !5591
  br label %do.end15, !dbg !5592

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !5588

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5579

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5578

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !5573

do.end19:                                         ; preds = %do.end18
  %9 = load i32, i32* @accent_table_size, align 4, !dbg !5593
  store i32 %9, i32* %asize, align 4, !dbg !5594
  store i32 0, i32* %i, align 4, !dbg !5595
  br label %for.cond, !dbg !5597

for.cond:                                         ; preds = %for.inc, %do.end19
  %10 = load i32, i32* %i, align 4, !dbg !5598
  %11 = load i32, i32* %asize, align 4, !dbg !5600
  %cmp20 = icmp slt i32 %10, %11, !dbg !5601
  br i1 %cmp20, label %for.body, label %for.end, !dbg !5602

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !5603
  %idxprom = sext i32 %12 to i64, !dbg !5605
  %arrayidx = getelementptr [0 x %struct.kbdiacruc], [0 x %struct.kbdiacruc]* @accent_table, i64 0, i64 %idxprom, !dbg !5605
  %diacr = getelementptr inbounds %struct.kbdiacruc, %struct.kbdiacruc* %arrayidx, i32 0, i32 0, !dbg !5606
  %13 = load i32, i32* %diacr, align 4, !dbg !5606
  %call22 = call i32 @conv_uni_to_8bit(i32 %13) #11, !dbg !5607
  %conv23 = trunc i32 %call22 to i8, !dbg !5607
  %14 = load %struct.kbdiacr*, %struct.kbdiacr** %dia, align 8, !dbg !5608
  %15 = load i32, i32* %i, align 4, !dbg !5609
  %idxprom24 = sext i32 %15 to i64, !dbg !5608
  %arrayidx25 = getelementptr %struct.kbdiacr, %struct.kbdiacr* %14, i64 %idxprom24, !dbg !5608
  %diacr26 = getelementptr inbounds %struct.kbdiacr, %struct.kbdiacr* %arrayidx25, i32 0, i32 0, !dbg !5610
  store i8 %conv23, i8* %diacr26, align 1, !dbg !5611
  %16 = load i32, i32* %i, align 4, !dbg !5612
  %idxprom27 = sext i32 %16 to i64, !dbg !5613
  %arrayidx28 = getelementptr [0 x %struct.kbdiacruc], [0 x %struct.kbdiacruc]* @accent_table, i64 0, i64 %idxprom27, !dbg !5613
  %base = getelementptr inbounds %struct.kbdiacruc, %struct.kbdiacruc* %arrayidx28, i32 0, i32 1, !dbg !5614
  %17 = load i32, i32* %base, align 4, !dbg !5614
  %call29 = call i32 @conv_uni_to_8bit(i32 %17) #11, !dbg !5615
  %conv30 = trunc i32 %call29 to i8, !dbg !5615
  %18 = load %struct.kbdiacr*, %struct.kbdiacr** %dia, align 8, !dbg !5616
  %19 = load i32, i32* %i, align 4, !dbg !5617
  %idxprom31 = sext i32 %19 to i64, !dbg !5616
  %arrayidx32 = getelementptr %struct.kbdiacr, %struct.kbdiacr* %18, i64 %idxprom31, !dbg !5616
  %base33 = getelementptr inbounds %struct.kbdiacr, %struct.kbdiacr* %arrayidx32, i32 0, i32 1, !dbg !5618
  store i8 %conv30, i8* %base33, align 1, !dbg !5619
  %20 = load i32, i32* %i, align 4, !dbg !5620
  %idxprom34 = sext i32 %20 to i64, !dbg !5621
  %arrayidx35 = getelementptr [0 x %struct.kbdiacruc], [0 x %struct.kbdiacruc]* @accent_table, i64 0, i64 %idxprom34, !dbg !5621
  %result = getelementptr inbounds %struct.kbdiacruc, %struct.kbdiacruc* %arrayidx35, i32 0, i32 2, !dbg !5622
  %21 = load i32, i32* %result, align 4, !dbg !5622
  %call36 = call i32 @conv_uni_to_8bit(i32 %21) #11, !dbg !5623
  %conv37 = trunc i32 %call36 to i8, !dbg !5623
  %22 = load %struct.kbdiacr*, %struct.kbdiacr** %dia, align 8, !dbg !5624
  %23 = load i32, i32* %i, align 4, !dbg !5625
  %idxprom38 = sext i32 %23 to i64, !dbg !5624
  %arrayidx39 = getelementptr %struct.kbdiacr, %struct.kbdiacr* %22, i64 %idxprom38, !dbg !5624
  %result40 = getelementptr inbounds %struct.kbdiacr, %struct.kbdiacr* %arrayidx39, i32 0, i32 2, !dbg !5626
  store i8 %conv37, i8* %result40, align 1, !dbg !5627
  br label %for.inc, !dbg !5628

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !5629
  %inc = add i32 %24, 1, !dbg !5629
  store i32 %inc, i32* %i, align 4, !dbg !5629
  br label %for.cond, !dbg !5630, !llvm.loop !5631

for.end:                                          ; preds = %for.cond
  %25 = load i64, i64* %flags, align 8, !dbg !5633
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i265, align 8
  store i64 %25, i64* %flags.addr.i266, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !5634
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !5634
  store i32 1, i32* %tmp.i267, align 4, !dbg !5634
  %26 = load i32, i32* %tmp.i267, align 4, !dbg !5634
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !5635
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !5635
  store i32 1, i32* %tmp8.i268, align 4, !dbg !5635
  %27 = load i32, i32* %tmp8.i268, align 4, !dbg !5635
  %28 = load i64, i64* %flags.addr.i266, align 8, !dbg !5636
  call void @arch_local_irq_restore(i64 %28) #12, !dbg !5636
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5637, !srcloc !4921
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i265, align 8, !dbg !5638
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !5638
  %rlock.i269 = bitcast %union.anon* %30 to %struct.raw_spinlock*, !dbg !5638
  call void @might_fault() #11, !dbg !5639
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !5641, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !5644, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !5645, metadata !DIExpression()), !dbg !5643
  %31 = load %struct.kbdiacrs*, %struct.kbdiacrs** %a, align 8, !dbg !5643
  %kb_cnt = getelementptr inbounds %struct.kbdiacrs, %struct.kbdiacrs* %31, i32 0, i32 0, !dbg !5643
  %32 = bitcast i32* %kb_cnt to i8*, !dbg !5643
  store i8* %32, i8** %__ptr_pu, align 8, !dbg !5643
  %33 = load i32, i32* %asize, align 4, !dbg !5643
  store i32 %33, i32* %__val_pu, align 4, !dbg !5643
  %34 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !5643
  %35 = load i8*, i8** %__ptr_pu, align 8, !dbg !5643
  %36 = load i32, i32* %__val_pu, align 4, !dbg !5643
  %37 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %35, i32 %36, i64 4, i64 %34) #6, !dbg !5643, !srcloc !5646
  %asmresult = extractvalue { i8*, i64 } %37, 0, !dbg !5643
  %asmresult42 = extractvalue { i8*, i64 } %37, 1, !dbg !5643
  %38 = ptrtoint i8* %asmresult to i64, !dbg !5643
  %39 = trunc i64 %38 to i32, !dbg !5643
  store i32 %39, i32* %__ret_pu, align 4, !dbg !5643
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult42), !dbg !5643
  %40 = load i32, i32* %__ret_pu, align 4, !dbg !5643
  %conv44 = sext i32 %40 to i64, !dbg !5643
  store i64 %conv44, i64* %tmp43, align 8, !dbg !5643
  %41 = load i64, i64* %tmp43, align 8, !dbg !5643
  store i64 %41, i64* %tmp41, align 8, !dbg !5639
  %42 = load i64, i64* %tmp41, align 8, !dbg !5639
  %tobool45 = icmp ne i64 %42, 0, !dbg !5647
  br i1 %tobool45, label %if.then46, label %if.else, !dbg !5648

if.then46:                                        ; preds = %for.end
  store i32 -14, i32* %ret, align 4, !dbg !5649
  br label %if.end52, !dbg !5650

if.else:                                          ; preds = %for.end
  %43 = load %struct.kbdiacrs*, %struct.kbdiacrs** %a, align 8, !dbg !5651
  %kbdiacr = getelementptr inbounds %struct.kbdiacrs, %struct.kbdiacrs* %43, i32 0, i32 1, !dbg !5652
  %arraydecay = getelementptr inbounds [256 x %struct.kbdiacr], [256 x %struct.kbdiacr]* %kbdiacr, i64 0, i64 0, !dbg !5651
  %44 = bitcast %struct.kbdiacr* %arraydecay to i8*, !dbg !5651
  %45 = load %struct.kbdiacr*, %struct.kbdiacr** %dia, align 8, !dbg !5653
  %46 = bitcast %struct.kbdiacr* %45 to i8*, !dbg !5653
  %47 = load i32, i32* %asize, align 4, !dbg !5654
  %conv47 = sext i32 %47 to i64, !dbg !5654
  %mul = mul i64 %conv47, 3, !dbg !5655
  store i8* %44, i8** %to.addr.i, align 8
  store i8* %46, i8** %from.addr.i, align 8
  store i64 %mul, i64* %n.addr.i, align 8
  %48 = load i8*, i8** %from.addr.i, align 8, !dbg !5656
  %49 = load i64, i64* %n.addr.i, align 8, !dbg !5656
  store i8* %48, i8** %addr.addr.i.i, align 8
  store i64 %49, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !5515
  %50 = load i32, i32* %sz.i.i, align 4, !dbg !5657
  %cmp.i.i = icmp sge i32 %50, 0, !dbg !5657
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !5657

land.rhs.i.i:                                     ; preds = %if.else
  %51 = load i32, i32* %sz.i.i, align 4, !dbg !5657
  %conv.i.i = sext i32 %51 to i64, !dbg !5657
  %52 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5657
  %cmp1.i.i = icmp ult i64 %conv.i.i, %52, !dbg !5657
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.else
  %53 = phi i1 [ false, %if.else ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !5659
  %lnot.i.i = xor i1 %53, true, !dbg !5657
  %lnot.ext.i.i = zext i1 %53 to i32, !dbg !5657
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5657
  br i1 %53, label %if.then.i.i, label %if.end10.i.i, !dbg !5660

if.then.i.i:                                      ; preds = %land.end.i.i
  %54 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5661
  %55 = call i1 @llvm.is.constant.i64(i64 %54) #6, !dbg !5664
  br i1 %55, label %if.else.i.i, label %if.then5.i.i, !dbg !5665

if.then5.i.i:                                     ; preds = %if.then.i.i
  %56 = load i32, i32* %sz.i.i, align 4, !dbg !5666
  %57 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5667
  call void @copy_overflow(i32 %56, i64 %57) #12, !dbg !5668
  br label %if.end9.i.i, !dbg !5668

if.else.i.i:                                      ; preds = %if.then.i.i
  %58 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !5669
  %tobool6.i.i = trunc i8 %58 to i1, !dbg !5669
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !5671

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !5672
  br label %if.end.i.i, !dbg !5672

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !5673
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !5674
  br label %check_copy_size.exit.i, !dbg !5674

if.end10.i.i:                                     ; preds = %land.end.i.i
  %59 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5516
  %cmp11.i.i = icmp ugt i64 %59, 2147483647, !dbg !5516
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !5516
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !5516
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !5516
  %60 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !5675
  %tobool17.i.i = icmp ne i32 %60, 0, !dbg !5675
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !5675
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !5675
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !5675
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !5516

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !5677, !srcloc !5680
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #6, !dbg !5681, !srcloc !5683
  br label %if.end31.i.i, !dbg !5684

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %61 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !5516
  %tobool32.i.i = icmp ne i32 %61, 0, !dbg !5516
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !5516
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !5516
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !5516
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !5675
  %62 = load i64, i64* %tmp.i.i, align 8, !dbg !5516
  %tobool38.i.i = icmp ne i64 %62, 0, !dbg !5685
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !5686

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !5687
  br label %check_copy_size.exit.i, !dbg !5687

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %63 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !5688
  %64 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5689
  %65 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !5690
  %tobool41.i.i = trunc i8 %65 to i1, !dbg !5690
  call void @check_object_size(i8* %63, i64 %64, i1 zeroext %tobool41.i.i) #12, !dbg !5691
  store i1 true, i1* %retval.i.i, align 1, !dbg !5692
  br label %check_copy_size.exit.i, !dbg !5692

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %66 = load i1, i1* %retval.i.i, align 1, !dbg !5693
  %lnot.i = xor i1 %66, true, !dbg !5656
  %lnot.ext.i = zext i1 %66 to i32, !dbg !5656
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !5656
  br i1 %66, label %if.then.i, label %copy_to_user.exit, !dbg !5694

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %67 = load i8*, i8** %to.addr.i, align 8, !dbg !5695
  %68 = load i8*, i8** %from.addr.i, align 8, !dbg !5696
  %69 = load i64, i64* %n.addr.i, align 8, !dbg !5697
  %call2.i = call i64 @_copy_to_user(i8* %67, i8* %68, i64 %69) #12, !dbg !5698
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !5699
  br label %copy_to_user.exit, !dbg !5700

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %70 = load i64, i64* %n.addr.i, align 8, !dbg !5701
  %tobool49 = icmp ne i64 %70, 0, !dbg !5702
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !5703

if.then50:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !5704
  br label %if.end51, !dbg !5705

if.end51:                                         ; preds = %if.then50, %copy_to_user.exit
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then46
  %71 = load %struct.kbdiacr*, %struct.kbdiacr** %dia, align 8, !dbg !5706
  %72 = bitcast %struct.kbdiacr* %71 to i8*, !dbg !5706
  call void @kfree(i8* %72) #11, !dbg !5707
  %73 = load i32, i32* %ret, align 4, !dbg !5708
  store i32 %73, i32* %retval, align 4, !dbg !5709
  br label %return, !dbg !5709

sw.bb53:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.kbdiacrsuc** %a54, metadata !5710, metadata !DIExpression()), !dbg !5722
  %74 = load i8*, i8** %udp.addr, align 8, !dbg !5723
  %75 = bitcast i8* %74 to %struct.kbdiacrsuc*, !dbg !5723
  store %struct.kbdiacrsuc* %75, %struct.kbdiacrsuc** %a54, align 8, !dbg !5722
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5724, metadata !DIExpression()), !dbg !5725
  %call55 = call i8* @kmalloc_array(i64 256, i64 12, i32 3264) #11, !dbg !5726
  store i8* %call55, i8** %buf, align 8, !dbg !5727
  %76 = load i8*, i8** %buf, align 8, !dbg !5728
  %cmp56 = icmp eq i8* %76, null, !dbg !5730
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !5731

if.then58:                                        ; preds = %sw.bb53
  store i32 -12, i32* %retval, align 4, !dbg !5732
  br label %return, !dbg !5732

if.end59:                                         ; preds = %sw.bb53
  br label %do.body60, !dbg !5733

do.body60:                                        ; preds = %if.end59
  br label %do.body61, !dbg !5734

do.body61:                                        ; preds = %do.body60
  call void @llvm.dbg.declare(metadata i64* %__dummy62, metadata !5735, metadata !DIExpression()), !dbg !5737
  call void @llvm.dbg.declare(metadata i64* %__dummy263, metadata !5738, metadata !DIExpression()), !dbg !5737
  %cmp64 = icmp eq i64* %__dummy62, %__dummy263, !dbg !5737
  %conv65 = zext i1 %cmp64 to i32, !dbg !5737
  store i32 1, i32* %tmp66, align 4, !dbg !5737
  %77 = load i32, i32* %tmp66, align 4, !dbg !5737
  br label %do.body67, !dbg !5739

do.body67:                                        ; preds = %do.body61
  br label %do.body68, !dbg !5740

do.body68:                                        ; preds = %do.body67
  br label %do.body69, !dbg !5741

do.body69:                                        ; preds = %do.body68
  call void @llvm.dbg.declare(metadata i64* %__dummy70, metadata !5743, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.declare(metadata i64* %__dummy271, metadata !5747, metadata !DIExpression()), !dbg !5746
  %cmp72 = icmp eq i64* %__dummy70, %__dummy271, !dbg !5746
  %conv73 = zext i1 %cmp72 to i32, !dbg !5746
  store i32 1, i32* %tmp74, align 4, !dbg !5746
  %78 = load i32, i32* %tmp74, align 4, !dbg !5746
  %call75 = call i64 @arch_local_irq_save() #11, !dbg !5748
  store i64 %call75, i64* %flags, align 8, !dbg !5748
  br label %do.end76, !dbg !5748

do.end76:                                         ; preds = %do.body69
  br label %do.end77, !dbg !5741

do.end77:                                         ; preds = %do.end76
  br label %do.body78, !dbg !5740

do.body78:                                        ; preds = %do.end77
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5749, !srcloc !5750
  br label %do.body79, !dbg !5749

do.body79:                                        ; preds = %do.body78
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i270, align 8
  %79 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i270, align 8, !dbg !5751
  %80 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %79, i32 0, i32 0, !dbg !5752
  %rlock.i271 = bitcast %union.anon* %80 to %struct.raw_spinlock*, !dbg !5752
  br label %do.end81, !dbg !5753

do.end81:                                         ; preds = %do.body79
  br label %do.end82, !dbg !5749

do.end82:                                         ; preds = %do.end81
  br label %do.end83, !dbg !5740

do.end83:                                         ; preds = %do.end82
  br label %do.end84, !dbg !5739

do.end84:                                         ; preds = %do.end83
  br label %do.end85, !dbg !5734

do.end85:                                         ; preds = %do.end84
  %81 = load i32, i32* @accent_table_size, align 4, !dbg !5754
  store i32 %81, i32* %asize, align 4, !dbg !5755
  %82 = load i8*, i8** %buf, align 8, !dbg !5756
  %83 = load i32, i32* %asize, align 4, !dbg !5757
  %conv86 = sext i32 %83 to i64, !dbg !5757
  %mul87 = mul i64 %conv86, 12, !dbg !5758
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %82, i8* align 4 bitcast ([0 x %struct.kbdiacruc]* @accent_table to i8*), i64 %mul87, i1 false), !dbg !5759
  %84 = load i64, i64* %flags, align 8, !dbg !5760
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i272, align 8
  store i64 %84, i64* %flags.addr.i273, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !5761
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !5761
  store i32 1, i32* %tmp.i274, align 4, !dbg !5761
  %85 = load i32, i32* %tmp.i274, align 4, !dbg !5761
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !5762
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !5762
  store i32 1, i32* %tmp8.i275, align 4, !dbg !5762
  %86 = load i32, i32* %tmp8.i275, align 4, !dbg !5762
  %87 = load i64, i64* %flags.addr.i273, align 8, !dbg !5763
  call void @arch_local_irq_restore(i64 %87) #12, !dbg !5763
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5764, !srcloc !4921
  %88 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i272, align 8, !dbg !5765
  %89 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %88, i32 0, i32 0, !dbg !5765
  %rlock.i276 = bitcast %union.anon* %89 to %struct.raw_spinlock*, !dbg !5765
  call void @might_fault() #11, !dbg !5766
  call void @llvm.dbg.declare(metadata i32* %__ret_pu89, metadata !5768, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu90, metadata !5771, metadata !DIExpression()), !dbg !5770
  call void @llvm.dbg.declare(metadata i32* %__val_pu91, metadata !5772, metadata !DIExpression()), !dbg !5770
  %90 = load %struct.kbdiacrsuc*, %struct.kbdiacrsuc** %a54, align 8, !dbg !5770
  %kb_cnt92 = getelementptr inbounds %struct.kbdiacrsuc, %struct.kbdiacrsuc* %90, i32 0, i32 0, !dbg !5770
  %91 = bitcast i32* %kb_cnt92 to i8*, !dbg !5770
  store i8* %91, i8** %__ptr_pu90, align 8, !dbg !5770
  %92 = load i32, i32* %asize, align 4, !dbg !5770
  store i32 %92, i32* %__val_pu91, align 4, !dbg !5770
  %93 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !5770
  %94 = load i8*, i8** %__ptr_pu90, align 8, !dbg !5770
  %95 = load i32, i32* %__val_pu91, align 4, !dbg !5770
  %96 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %94, i32 %95, i64 4, i64 %93) #6, !dbg !5770, !srcloc !5773
  %asmresult93 = extractvalue { i8*, i64 } %96, 0, !dbg !5770
  %asmresult94 = extractvalue { i8*, i64 } %96, 1, !dbg !5770
  %97 = ptrtoint i8* %asmresult93 to i64, !dbg !5770
  %98 = trunc i64 %97 to i32, !dbg !5770
  store i32 %98, i32* %__ret_pu89, align 4, !dbg !5770
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult94), !dbg !5770
  %99 = load i32, i32* %__ret_pu89, align 4, !dbg !5770
  %conv96 = sext i32 %99 to i64, !dbg !5770
  store i64 %conv96, i64* %tmp95, align 8, !dbg !5770
  %100 = load i64, i64* %tmp95, align 8, !dbg !5770
  store i64 %100, i64* %tmp88, align 8, !dbg !5766
  %101 = load i64, i64* %tmp88, align 8, !dbg !5766
  %tobool97 = icmp ne i64 %101, 0, !dbg !5774
  br i1 %tobool97, label %if.then98, label %if.else99, !dbg !5775

if.then98:                                        ; preds = %do.end85
  store i32 -14, i32* %ret, align 4, !dbg !5776
  br label %if.end107, !dbg !5777

if.else99:                                        ; preds = %do.end85
  %102 = load %struct.kbdiacrsuc*, %struct.kbdiacrsuc** %a54, align 8, !dbg !5778
  %kbdiacruc = getelementptr inbounds %struct.kbdiacrsuc, %struct.kbdiacrsuc* %102, i32 0, i32 1, !dbg !5779
  %arraydecay100 = getelementptr inbounds [256 x %struct.kbdiacruc], [256 x %struct.kbdiacruc]* %kbdiacruc, i64 0, i64 0, !dbg !5778
  %103 = bitcast %struct.kbdiacruc* %arraydecay100 to i8*, !dbg !5778
  %104 = load i8*, i8** %buf, align 8, !dbg !5780
  %105 = load i32, i32* %asize, align 4, !dbg !5781
  %conv101 = sext i32 %105 to i64, !dbg !5781
  %mul102 = mul i64 %conv101, 12, !dbg !5782
  store i8* %103, i8** %to.addr.i284, align 8
  store i8* %104, i8** %from.addr.i285, align 8
  store i64 %mul102, i64* %n.addr.i286, align 8
  %106 = load i8*, i8** %from.addr.i285, align 8, !dbg !5783
  %107 = load i64, i64* %n.addr.i286, align 8, !dbg !5783
  store i8* %106, i8** %addr.addr.i.i278, align 8
  store i64 %107, i64* %bytes.addr.i.i279, align 8
  store i8 1, i8* %is_source.addr.i.i280, align 1
  store i32 -1, i32* %sz.i.i281, align 4, !dbg !5486
  %108 = load i32, i32* %sz.i.i281, align 4, !dbg !5784
  %cmp.i.i287 = icmp sge i32 %108, 0, !dbg !5784
  br i1 %cmp.i.i287, label %land.rhs.i.i290, label %land.end.i.i294, !dbg !5784

land.rhs.i.i290:                                  ; preds = %if.else99
  %109 = load i32, i32* %sz.i.i281, align 4, !dbg !5784
  %conv.i.i288 = sext i32 %109 to i64, !dbg !5784
  %110 = load i64, i64* %bytes.addr.i.i279, align 8, !dbg !5784
  %cmp1.i.i289 = icmp ult i64 %conv.i.i288, %110, !dbg !5784
  br label %land.end.i.i294

land.end.i.i294:                                  ; preds = %land.rhs.i.i290, %if.else99
  %111 = phi i1 [ false, %if.else99 ], [ %cmp1.i.i289, %land.rhs.i.i290 ], !dbg !5785
  %lnot.i.i291 = xor i1 %111, true, !dbg !5784
  %lnot.ext.i.i292 = zext i1 %111 to i32, !dbg !5784
  %conv4.i.i293 = sext i32 %lnot.ext.i.i292 to i64, !dbg !5784
  br i1 %111, label %if.then.i.i295, label %if.end10.i.i310, !dbg !5786

if.then.i.i295:                                   ; preds = %land.end.i.i294
  %112 = load i64, i64* %bytes.addr.i.i279, align 8, !dbg !5787
  %113 = call i1 @llvm.is.constant.i64(i64 %112) #6, !dbg !5788
  br i1 %113, label %if.else.i.i298, label %if.then5.i.i296, !dbg !5789

if.then5.i.i296:                                  ; preds = %if.then.i.i295
  %114 = load i32, i32* %sz.i.i281, align 4, !dbg !5790
  %115 = load i64, i64* %bytes.addr.i.i279, align 8, !dbg !5791
  call void @copy_overflow(i32 %114, i64 %115) #12, !dbg !5792
  br label %if.end9.i.i302, !dbg !5792

if.else.i.i298:                                   ; preds = %if.then.i.i295
  %116 = load i8, i8* %is_source.addr.i.i280, align 1, !dbg !5793
  %tobool6.i.i297 = trunc i8 %116 to i1, !dbg !5793
  br i1 %tobool6.i.i297, label %if.then7.i.i299, label %if.else8.i.i300, !dbg !5794

if.then7.i.i299:                                  ; preds = %if.else.i.i298
  call void @__bad_copy_from() #12, !dbg !5795
  br label %if.end.i.i301, !dbg !5795

if.else8.i.i300:                                  ; preds = %if.else.i.i298
  call void @__bad_copy_to() #12, !dbg !5796
  br label %if.end.i.i301

if.end.i.i301:                                    ; preds = %if.else8.i.i300, %if.then7.i.i299
  br label %if.end9.i.i302

if.end9.i.i302:                                   ; preds = %if.end.i.i301, %if.then5.i.i296
  store i1 false, i1* %retval.i.i277, align 1, !dbg !5797
  br label %check_copy_size.exit.i324, !dbg !5797

if.end10.i.i310:                                  ; preds = %land.end.i.i294
  %117 = load i64, i64* %bytes.addr.i.i279, align 8, !dbg !5490
  %cmp11.i.i303 = icmp ugt i64 %117, 2147483647, !dbg !5490
  %lnot13.i.i304 = xor i1 %cmp11.i.i303, true, !dbg !5490
  %lnot.ext16.i.i305 = zext i1 %cmp11.i.i303 to i32, !dbg !5490
  store i32 %lnot.ext16.i.i305, i32* %__ret_warn_on.i.i282, align 4, !dbg !5490
  %118 = load i32, i32* %__ret_warn_on.i.i282, align 4, !dbg !5798
  %tobool17.i.i306 = icmp ne i32 %118, 0, !dbg !5798
  %lnot18.i.i307 = xor i1 %tobool17.i.i306, true, !dbg !5798
  %lnot.ext21.i.i308 = zext i1 %tobool17.i.i306 to i32, !dbg !5798
  %conv22.i.i309 = sext i32 %lnot.ext21.i.i308 to i64, !dbg !5798
  br i1 %tobool17.i.i306, label %if.then24.i.i311, label %if.end31.i.i317, !dbg !5490

if.then24.i.i311:                                 ; preds = %if.end10.i.i310
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !5799, !srcloc !5680
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #6, !dbg !5800, !srcloc !5683
  br label %if.end31.i.i317, !dbg !5801

if.end31.i.i317:                                  ; preds = %if.then24.i.i311, %if.end10.i.i310
  %119 = load i32, i32* %__ret_warn_on.i.i282, align 4, !dbg !5490
  %tobool32.i.i312 = icmp ne i32 %119, 0, !dbg !5490
  %lnot33.i.i313 = xor i1 %tobool32.i.i312, true, !dbg !5490
  %lnot.ext36.i.i314 = zext i1 %tobool32.i.i312 to i32, !dbg !5490
  %conv37.i.i315 = sext i32 %lnot.ext36.i.i314 to i64, !dbg !5490
  store i64 %conv37.i.i315, i64* %tmp.i.i283, align 8, !dbg !5798
  %120 = load i64, i64* %tmp.i.i283, align 8, !dbg !5490
  %tobool38.i.i316 = icmp ne i64 %120, 0, !dbg !5802
  br i1 %tobool38.i.i316, label %if.then39.i.i318, label %if.end40.i.i320, !dbg !5803

if.then39.i.i318:                                 ; preds = %if.end31.i.i317
  store i1 false, i1* %retval.i.i277, align 1, !dbg !5804
  br label %check_copy_size.exit.i324, !dbg !5804

if.end40.i.i320:                                  ; preds = %if.end31.i.i317
  %121 = load i8*, i8** %addr.addr.i.i278, align 8, !dbg !5805
  %122 = load i64, i64* %bytes.addr.i.i279, align 8, !dbg !5806
  %123 = load i8, i8* %is_source.addr.i.i280, align 1, !dbg !5807
  %tobool41.i.i319 = trunc i8 %123 to i1, !dbg !5807
  call void @check_object_size(i8* %121, i64 %122, i1 zeroext %tobool41.i.i319) #12, !dbg !5808
  store i1 true, i1* %retval.i.i277, align 1, !dbg !5809
  br label %check_copy_size.exit.i324, !dbg !5809

check_copy_size.exit.i324:                        ; preds = %if.end40.i.i320, %if.then39.i.i318, %if.end9.i.i302
  %124 = load i1, i1* %retval.i.i277, align 1, !dbg !5810
  %lnot.i321 = xor i1 %124, true, !dbg !5783
  %lnot.ext.i322 = zext i1 %124 to i32, !dbg !5783
  %conv.i323 = sext i32 %lnot.ext.i322 to i64, !dbg !5783
  br i1 %124, label %if.then.i326, label %copy_to_user.exit327, !dbg !5811

if.then.i326:                                     ; preds = %check_copy_size.exit.i324
  %125 = load i8*, i8** %to.addr.i284, align 8, !dbg !5812
  %126 = load i8*, i8** %from.addr.i285, align 8, !dbg !5813
  %127 = load i64, i64* %n.addr.i286, align 8, !dbg !5814
  %call2.i325 = call i64 @_copy_to_user(i8* %125, i8* %126, i64 %127) #12, !dbg !5815
  store i64 %call2.i325, i64* %n.addr.i286, align 8, !dbg !5816
  br label %copy_to_user.exit327, !dbg !5817

copy_to_user.exit327:                             ; preds = %check_copy_size.exit.i324, %if.then.i326
  %128 = load i64, i64* %n.addr.i286, align 8, !dbg !5818
  %tobool104 = icmp ne i64 %128, 0, !dbg !5819
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !5820

if.then105:                                       ; preds = %copy_to_user.exit327
  store i32 -14, i32* %ret, align 4, !dbg !5821
  br label %if.end106, !dbg !5822

if.end106:                                        ; preds = %if.then105, %copy_to_user.exit327
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.then98
  %129 = load i8*, i8** %buf, align 8, !dbg !5823
  call void @kfree(i8* %129) #11, !dbg !5824
  %130 = load i32, i32* %ret, align 4, !dbg !5825
  store i32 %130, i32* %retval, align 4, !dbg !5826
  br label %return, !dbg !5826

sw.bb108:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.kbdiacrs** %a109, metadata !5827, metadata !DIExpression()), !dbg !5828
  %131 = load i8*, i8** %udp.addr, align 8, !dbg !5829
  %132 = bitcast i8* %131 to %struct.kbdiacrs*, !dbg !5829
  store %struct.kbdiacrs* %132, %struct.kbdiacrs** %a109, align 8, !dbg !5828
  call void @llvm.dbg.declare(metadata %struct.kbdiacr** %dia110, metadata !5830, metadata !DIExpression()), !dbg !5831
  store %struct.kbdiacr* null, %struct.kbdiacr** %dia110, align 8, !dbg !5831
  call void @llvm.dbg.declare(metadata i32* %ct, metadata !5832, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.declare(metadata i32* %i111, metadata !5834, metadata !DIExpression()), !dbg !5835
  %133 = load i32, i32* %perm.addr, align 4, !dbg !5836
  %tobool112 = icmp ne i32 %133, 0, !dbg !5836
  br i1 %tobool112, label %if.end114, label %if.then113, !dbg !5838

if.then113:                                       ; preds = %sw.bb108
  store i32 -1, i32* %retval, align 4, !dbg !5839
  br label %return, !dbg !5839

if.end114:                                        ; preds = %sw.bb108
  call void @might_fault() #11, !dbg !5840
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !5843, metadata !DIExpression()), !dbg !5845
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !5846, metadata !DIExpression()), !dbg !5845
  %134 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !5845
  %135 = load %struct.kbdiacrs*, %struct.kbdiacrs** %a109, align 8, !dbg !5845
  %kb_cnt116 = getelementptr inbounds %struct.kbdiacrs, %struct.kbdiacrs* %135, i32 0, i32 0, !dbg !5845
  %136 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %kb_cnt116, i64 4, i64 %134) #6, !dbg !5845, !srcloc !5847
  %asmresult117 = extractvalue { i32*, i32, i64 } %136, 0, !dbg !5845
  %asmresult118 = extractvalue { i32*, i32, i64 } %136, 1, !dbg !5845
  %asmresult119 = extractvalue { i32*, i32, i64 } %136, 2, !dbg !5845
  %137 = ptrtoint i32* %asmresult117 to i64, !dbg !5845
  %138 = trunc i64 %137 to i32, !dbg !5845
  store i32 %138, i32* %__ret_gu, align 4, !dbg !5845
  store i32 %asmresult118, i32* %__val_gu, align 4, !dbg !5845
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult119), !dbg !5845
  %139 = load i32, i32* %__val_gu, align 4, !dbg !5845
  store i32 %139, i32* %ct, align 4, !dbg !5845
  %140 = load i32, i32* %__ret_gu, align 4, !dbg !5845
  %conv121 = sext i32 %140 to i64, !dbg !5845
  store i64 %conv121, i64* %tmp120, align 8, !dbg !5845
  %141 = load i64, i64* %tmp120, align 8, !dbg !5845
  store i64 %141, i64* %tmp115, align 8, !dbg !5840
  %142 = load i64, i64* %tmp115, align 8, !dbg !5840
  %tobool122 = icmp ne i64 %142, 0, !dbg !5848
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !5849

if.then123:                                       ; preds = %if.end114
  store i32 -14, i32* %retval, align 4, !dbg !5850
  br label %return, !dbg !5850

if.end124:                                        ; preds = %if.end114
  %143 = load i32, i32* %ct, align 4, !dbg !5851
  %cmp125 = icmp uge i32 %143, 256, !dbg !5853
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !5854

if.then127:                                       ; preds = %if.end124
  store i32 -22, i32* %retval, align 4, !dbg !5855
  br label %return, !dbg !5855

if.end128:                                        ; preds = %if.end124
  %144 = load i32, i32* %ct, align 4, !dbg !5856
  %tobool129 = icmp ne i32 %144, 0, !dbg !5856
  br i1 %tobool129, label %if.then130, label %if.end141, !dbg !5858

if.then130:                                       ; preds = %if.end128
  %145 = load %struct.kbdiacrs*, %struct.kbdiacrs** %a109, align 8, !dbg !5859
  %kbdiacr131 = getelementptr inbounds %struct.kbdiacrs, %struct.kbdiacrs* %145, i32 0, i32 1, !dbg !5861
  %arraydecay132 = getelementptr inbounds [256 x %struct.kbdiacr], [256 x %struct.kbdiacr]* %kbdiacr131, i64 0, i64 0, !dbg !5859
  %146 = bitcast %struct.kbdiacr* %arraydecay132 to i8*, !dbg !5859
  %147 = load i32, i32* %ct, align 4, !dbg !5862
  %conv133 = zext i32 %147 to i64, !dbg !5862
  %mul134 = mul i64 3, %conv133, !dbg !5863
  %call135 = call i8* @memdup_user(i8* %146, i64 %mul134) #11, !dbg !5864
  %148 = bitcast i8* %call135 to %struct.kbdiacr*, !dbg !5864
  store %struct.kbdiacr* %148, %struct.kbdiacr** %dia110, align 8, !dbg !5865
  %149 = load %struct.kbdiacr*, %struct.kbdiacr** %dia110, align 8, !dbg !5866
  %150 = bitcast %struct.kbdiacr* %149 to i8*, !dbg !5866
  %call136 = call zeroext i1 @IS_ERR(i8* %150) #11, !dbg !5868
  br i1 %call136, label %if.then137, label %if.end140, !dbg !5869

if.then137:                                       ; preds = %if.then130
  %151 = load %struct.kbdiacr*, %struct.kbdiacr** %dia110, align 8, !dbg !5870
  %152 = bitcast %struct.kbdiacr* %151 to i8*, !dbg !5870
  %call138 = call i64 @PTR_ERR(i8* %152) #11, !dbg !5871
  %conv139 = trunc i64 %call138 to i32, !dbg !5871
  store i32 %conv139, i32* %retval, align 4, !dbg !5872
  br label %return, !dbg !5872

if.end140:                                        ; preds = %if.then130
  br label %if.end141, !dbg !5873

if.end141:                                        ; preds = %if.end140, %if.end128
  br label %do.body142, !dbg !5874

do.body142:                                       ; preds = %if.end141
  br label %do.body143, !dbg !5875

do.body143:                                       ; preds = %do.body142
  call void @llvm.dbg.declare(metadata i64* %__dummy144, metadata !5876, metadata !DIExpression()), !dbg !5878
  call void @llvm.dbg.declare(metadata i64* %__dummy2145, metadata !5879, metadata !DIExpression()), !dbg !5878
  %cmp146 = icmp eq i64* %__dummy144, %__dummy2145, !dbg !5878
  %conv147 = zext i1 %cmp146 to i32, !dbg !5878
  store i32 1, i32* %tmp148, align 4, !dbg !5878
  %153 = load i32, i32* %tmp148, align 4, !dbg !5878
  br label %do.body149, !dbg !5880

do.body149:                                       ; preds = %do.body143
  br label %do.body150, !dbg !5881

do.body150:                                       ; preds = %do.body149
  br label %do.body151, !dbg !5882

do.body151:                                       ; preds = %do.body150
  call void @llvm.dbg.declare(metadata i64* %__dummy152, metadata !5884, metadata !DIExpression()), !dbg !5887
  call void @llvm.dbg.declare(metadata i64* %__dummy2153, metadata !5888, metadata !DIExpression()), !dbg !5887
  %cmp154 = icmp eq i64* %__dummy152, %__dummy2153, !dbg !5887
  %conv155 = zext i1 %cmp154 to i32, !dbg !5887
  store i32 1, i32* %tmp156, align 4, !dbg !5887
  %154 = load i32, i32* %tmp156, align 4, !dbg !5887
  %call157 = call i64 @arch_local_irq_save() #11, !dbg !5889
  store i64 %call157, i64* %flags, align 8, !dbg !5889
  br label %do.end158, !dbg !5889

do.end158:                                        ; preds = %do.body151
  br label %do.end159, !dbg !5882

do.end159:                                        ; preds = %do.end158
  br label %do.body160, !dbg !5881

do.body160:                                       ; preds = %do.end159
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5890, !srcloc !5891
  br label %do.body161, !dbg !5890

do.body161:                                       ; preds = %do.body160
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i328, align 8
  %155 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i328, align 8, !dbg !5892
  %156 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %155, i32 0, i32 0, !dbg !5893
  %rlock.i329 = bitcast %union.anon* %156 to %struct.raw_spinlock*, !dbg !5893
  br label %do.end163, !dbg !5894

do.end163:                                        ; preds = %do.body161
  br label %do.end164, !dbg !5890

do.end164:                                        ; preds = %do.end163
  br label %do.end165, !dbg !5881

do.end165:                                        ; preds = %do.end164
  br label %do.end166, !dbg !5880

do.end166:                                        ; preds = %do.end165
  br label %do.end167, !dbg !5875

do.end167:                                        ; preds = %do.end166
  %157 = load i32, i32* %ct, align 4, !dbg !5895
  store i32 %157, i32* @accent_table_size, align 4, !dbg !5896
  store i32 0, i32* %i111, align 4, !dbg !5897
  br label %for.cond168, !dbg !5899

for.cond168:                                      ; preds = %for.inc193, %do.end167
  %158 = load i32, i32* %i111, align 4, !dbg !5900
  %159 = load i32, i32* %ct, align 4, !dbg !5902
  %cmp169 = icmp ult i32 %158, %159, !dbg !5903
  br i1 %cmp169, label %for.body171, label %for.end195, !dbg !5904

for.body171:                                      ; preds = %for.cond168
  %160 = load %struct.kbdiacr*, %struct.kbdiacr** %dia110, align 8, !dbg !5905
  %161 = load i32, i32* %i111, align 4, !dbg !5907
  %idxprom172 = sext i32 %161 to i64, !dbg !5905
  %arrayidx173 = getelementptr %struct.kbdiacr, %struct.kbdiacr* %160, i64 %idxprom172, !dbg !5905
  %diacr174 = getelementptr inbounds %struct.kbdiacr, %struct.kbdiacr* %arrayidx173, i32 0, i32 0, !dbg !5908
  %162 = load i8, i8* %diacr174, align 1, !dbg !5908
  %call175 = call i32 @conv_8bit_to_uni(i8 zeroext %162) #11, !dbg !5909
  %163 = load i32, i32* %i111, align 4, !dbg !5910
  %idxprom176 = sext i32 %163 to i64, !dbg !5911
  %arrayidx177 = getelementptr [0 x %struct.kbdiacruc], [0 x %struct.kbdiacruc]* @accent_table, i64 0, i64 %idxprom176, !dbg !5911
  %diacr178 = getelementptr inbounds %struct.kbdiacruc, %struct.kbdiacruc* %arrayidx177, i32 0, i32 0, !dbg !5912
  store i32 %call175, i32* %diacr178, align 4, !dbg !5913
  %164 = load %struct.kbdiacr*, %struct.kbdiacr** %dia110, align 8, !dbg !5914
  %165 = load i32, i32* %i111, align 4, !dbg !5915
  %idxprom179 = sext i32 %165 to i64, !dbg !5914
  %arrayidx180 = getelementptr %struct.kbdiacr, %struct.kbdiacr* %164, i64 %idxprom179, !dbg !5914
  %base181 = getelementptr inbounds %struct.kbdiacr, %struct.kbdiacr* %arrayidx180, i32 0, i32 1, !dbg !5916
  %166 = load i8, i8* %base181, align 1, !dbg !5916
  %call182 = call i32 @conv_8bit_to_uni(i8 zeroext %166) #11, !dbg !5917
  %167 = load i32, i32* %i111, align 4, !dbg !5918
  %idxprom183 = sext i32 %167 to i64, !dbg !5919
  %arrayidx184 = getelementptr [0 x %struct.kbdiacruc], [0 x %struct.kbdiacruc]* @accent_table, i64 0, i64 %idxprom183, !dbg !5919
  %base185 = getelementptr inbounds %struct.kbdiacruc, %struct.kbdiacruc* %arrayidx184, i32 0, i32 1, !dbg !5920
  store i32 %call182, i32* %base185, align 4, !dbg !5921
  %168 = load %struct.kbdiacr*, %struct.kbdiacr** %dia110, align 8, !dbg !5922
  %169 = load i32, i32* %i111, align 4, !dbg !5923
  %idxprom186 = sext i32 %169 to i64, !dbg !5922
  %arrayidx187 = getelementptr %struct.kbdiacr, %struct.kbdiacr* %168, i64 %idxprom186, !dbg !5922
  %result188 = getelementptr inbounds %struct.kbdiacr, %struct.kbdiacr* %arrayidx187, i32 0, i32 2, !dbg !5924
  %170 = load i8, i8* %result188, align 1, !dbg !5924
  %call189 = call i32 @conv_8bit_to_uni(i8 zeroext %170) #11, !dbg !5925
  %171 = load i32, i32* %i111, align 4, !dbg !5926
  %idxprom190 = sext i32 %171 to i64, !dbg !5927
  %arrayidx191 = getelementptr [0 x %struct.kbdiacruc], [0 x %struct.kbdiacruc]* @accent_table, i64 0, i64 %idxprom190, !dbg !5927
  %result192 = getelementptr inbounds %struct.kbdiacruc, %struct.kbdiacruc* %arrayidx191, i32 0, i32 2, !dbg !5928
  store i32 %call189, i32* %result192, align 4, !dbg !5929
  br label %for.inc193, !dbg !5930

for.inc193:                                       ; preds = %for.body171
  %172 = load i32, i32* %i111, align 4, !dbg !5931
  %inc194 = add i32 %172, 1, !dbg !5931
  store i32 %inc194, i32* %i111, align 4, !dbg !5931
  br label %for.cond168, !dbg !5932, !llvm.loop !5933

for.end195:                                       ; preds = %for.cond168
  %173 = load i64, i64* %flags, align 8, !dbg !5935
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i330, align 8
  store i64 %173, i64* %flags.addr.i331, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !5936
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !5936
  store i32 1, i32* %tmp.i332, align 4, !dbg !5936
  %174 = load i32, i32* %tmp.i332, align 4, !dbg !5936
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !5937
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !5937
  store i32 1, i32* %tmp8.i333, align 4, !dbg !5937
  %175 = load i32, i32* %tmp8.i333, align 4, !dbg !5937
  %176 = load i64, i64* %flags.addr.i331, align 8, !dbg !5938
  call void @arch_local_irq_restore(i64 %176) #12, !dbg !5938
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5939, !srcloc !4921
  %177 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i330, align 8, !dbg !5940
  %178 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %177, i32 0, i32 0, !dbg !5940
  %rlock.i334 = bitcast %union.anon* %178 to %struct.raw_spinlock*, !dbg !5940
  %179 = load %struct.kbdiacr*, %struct.kbdiacr** %dia110, align 8, !dbg !5941
  %180 = bitcast %struct.kbdiacr* %179 to i8*, !dbg !5941
  call void @kfree(i8* %180) #11, !dbg !5942
  store i32 0, i32* %retval, align 4, !dbg !5943
  br label %return, !dbg !5943

sw.bb196:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.kbdiacrsuc** %a197, metadata !5944, metadata !DIExpression()), !dbg !5945
  %181 = load i8*, i8** %udp.addr, align 8, !dbg !5946
  %182 = bitcast i8* %181 to %struct.kbdiacrsuc*, !dbg !5946
  store %struct.kbdiacrsuc* %182, %struct.kbdiacrsuc** %a197, align 8, !dbg !5945
  call void @llvm.dbg.declare(metadata i32* %ct198, metadata !5947, metadata !DIExpression()), !dbg !5948
  call void @llvm.dbg.declare(metadata i8** %buf199, metadata !5949, metadata !DIExpression()), !dbg !5950
  store i8* null, i8** %buf199, align 8, !dbg !5950
  %183 = load i32, i32* %perm.addr, align 4, !dbg !5951
  %tobool200 = icmp ne i32 %183, 0, !dbg !5951
  br i1 %tobool200, label %if.end202, label %if.then201, !dbg !5953

if.then201:                                       ; preds = %sw.bb196
  store i32 -1, i32* %retval, align 4, !dbg !5954
  br label %return, !dbg !5954

if.end202:                                        ; preds = %sw.bb196
  call void @might_fault() #11, !dbg !5955
  call void @llvm.dbg.declare(metadata i32* %__ret_gu204, metadata !5958, metadata !DIExpression()), !dbg !5960
  call void @llvm.dbg.declare(metadata i32* %__val_gu205, metadata !5961, metadata !DIExpression()), !dbg !5960
  %184 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !5960
  %185 = load %struct.kbdiacrsuc*, %struct.kbdiacrsuc** %a197, align 8, !dbg !5960
  %kb_cnt206 = getelementptr inbounds %struct.kbdiacrsuc, %struct.kbdiacrsuc* %185, i32 0, i32 0, !dbg !5960
  %186 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %kb_cnt206, i64 4, i64 %184) #6, !dbg !5960, !srcloc !5962
  %asmresult207 = extractvalue { i32*, i32, i64 } %186, 0, !dbg !5960
  %asmresult208 = extractvalue { i32*, i32, i64 } %186, 1, !dbg !5960
  %asmresult209 = extractvalue { i32*, i32, i64 } %186, 2, !dbg !5960
  %187 = ptrtoint i32* %asmresult207 to i64, !dbg !5960
  %188 = trunc i64 %187 to i32, !dbg !5960
  store i32 %188, i32* %__ret_gu204, align 4, !dbg !5960
  store i32 %asmresult208, i32* %__val_gu205, align 4, !dbg !5960
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult209), !dbg !5960
  %189 = load i32, i32* %__val_gu205, align 4, !dbg !5960
  store i32 %189, i32* %ct198, align 4, !dbg !5960
  %190 = load i32, i32* %__ret_gu204, align 4, !dbg !5960
  %conv211 = sext i32 %190 to i64, !dbg !5960
  store i64 %conv211, i64* %tmp210, align 8, !dbg !5960
  %191 = load i64, i64* %tmp210, align 8, !dbg !5960
  store i64 %191, i64* %tmp203, align 8, !dbg !5955
  %192 = load i64, i64* %tmp203, align 8, !dbg !5955
  %tobool212 = icmp ne i64 %192, 0, !dbg !5963
  br i1 %tobool212, label %if.then213, label %if.end214, !dbg !5964

if.then213:                                       ; preds = %if.end202
  store i32 -14, i32* %retval, align 4, !dbg !5965
  br label %return, !dbg !5965

if.end214:                                        ; preds = %if.end202
  %193 = load i32, i32* %ct198, align 4, !dbg !5966
  %cmp215 = icmp uge i32 %193, 256, !dbg !5968
  br i1 %cmp215, label %if.then217, label %if.end218, !dbg !5969

if.then217:                                       ; preds = %if.end214
  store i32 -22, i32* %retval, align 4, !dbg !5970
  br label %return, !dbg !5970

if.end218:                                        ; preds = %if.end214
  %194 = load i32, i32* %ct198, align 4, !dbg !5971
  %tobool219 = icmp ne i32 %194, 0, !dbg !5971
  br i1 %tobool219, label %if.then220, label %if.end231, !dbg !5973

if.then220:                                       ; preds = %if.end218
  %195 = load %struct.kbdiacrsuc*, %struct.kbdiacrsuc** %a197, align 8, !dbg !5974
  %kbdiacruc221 = getelementptr inbounds %struct.kbdiacrsuc, %struct.kbdiacrsuc* %195, i32 0, i32 1, !dbg !5976
  %arraydecay222 = getelementptr inbounds [256 x %struct.kbdiacruc], [256 x %struct.kbdiacruc]* %kbdiacruc221, i64 0, i64 0, !dbg !5974
  %196 = bitcast %struct.kbdiacruc* %arraydecay222 to i8*, !dbg !5974
  %197 = load i32, i32* %ct198, align 4, !dbg !5977
  %conv223 = zext i32 %197 to i64, !dbg !5977
  %mul224 = mul i64 %conv223, 12, !dbg !5978
  %call225 = call i8* @memdup_user(i8* %196, i64 %mul224) #11, !dbg !5979
  store i8* %call225, i8** %buf199, align 8, !dbg !5980
  %198 = load i8*, i8** %buf199, align 8, !dbg !5981
  %call226 = call zeroext i1 @IS_ERR(i8* %198) #11, !dbg !5983
  br i1 %call226, label %if.then227, label %if.end230, !dbg !5984

if.then227:                                       ; preds = %if.then220
  %199 = load i8*, i8** %buf199, align 8, !dbg !5985
  %call228 = call i64 @PTR_ERR(i8* %199) #11, !dbg !5986
  %conv229 = trunc i64 %call228 to i32, !dbg !5986
  store i32 %conv229, i32* %retval, align 4, !dbg !5987
  br label %return, !dbg !5987

if.end230:                                        ; preds = %if.then220
  br label %if.end231, !dbg !5988

if.end231:                                        ; preds = %if.end230, %if.end218
  br label %do.body232, !dbg !5989

do.body232:                                       ; preds = %if.end231
  br label %do.body233, !dbg !5990

do.body233:                                       ; preds = %do.body232
  call void @llvm.dbg.declare(metadata i64* %__dummy234, metadata !5991, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.declare(metadata i64* %__dummy2235, metadata !5994, metadata !DIExpression()), !dbg !5993
  %cmp236 = icmp eq i64* %__dummy234, %__dummy2235, !dbg !5993
  %conv237 = zext i1 %cmp236 to i32, !dbg !5993
  store i32 1, i32* %tmp238, align 4, !dbg !5993
  %200 = load i32, i32* %tmp238, align 4, !dbg !5993
  br label %do.body239, !dbg !5995

do.body239:                                       ; preds = %do.body233
  br label %do.body240, !dbg !5996

do.body240:                                       ; preds = %do.body239
  br label %do.body241, !dbg !5997

do.body241:                                       ; preds = %do.body240
  call void @llvm.dbg.declare(metadata i64* %__dummy242, metadata !5999, metadata !DIExpression()), !dbg !6002
  call void @llvm.dbg.declare(metadata i64* %__dummy2243, metadata !6003, metadata !DIExpression()), !dbg !6002
  %cmp244 = icmp eq i64* %__dummy242, %__dummy2243, !dbg !6002
  %conv245 = zext i1 %cmp244 to i32, !dbg !6002
  store i32 1, i32* %tmp246, align 4, !dbg !6002
  %201 = load i32, i32* %tmp246, align 4, !dbg !6002
  %call247 = call i64 @arch_local_irq_save() #11, !dbg !6004
  store i64 %call247, i64* %flags, align 8, !dbg !6004
  br label %do.end248, !dbg !6004

do.end248:                                        ; preds = %do.body241
  br label %do.end249, !dbg !5997

do.end249:                                        ; preds = %do.end248
  br label %do.body250, !dbg !5996

do.body250:                                       ; preds = %do.end249
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6005, !srcloc !6006
  br label %do.body251, !dbg !6005

do.body251:                                       ; preds = %do.body250
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i335, align 8
  %202 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i335, align 8, !dbg !6007
  %203 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %202, i32 0, i32 0, !dbg !6008
  %rlock.i336 = bitcast %union.anon* %203 to %struct.raw_spinlock*, !dbg !6008
  br label %do.end253, !dbg !6009

do.end253:                                        ; preds = %do.body251
  br label %do.end254, !dbg !6005

do.end254:                                        ; preds = %do.end253
  br label %do.end255, !dbg !5996

do.end255:                                        ; preds = %do.end254
  br label %do.end256, !dbg !5995

do.end256:                                        ; preds = %do.end255
  br label %do.end257, !dbg !5990

do.end257:                                        ; preds = %do.end256
  %204 = load i32, i32* %ct198, align 4, !dbg !6010
  %tobool258 = icmp ne i32 %204, 0, !dbg !6010
  br i1 %tobool258, label %if.then259, label %if.end262, !dbg !6012

if.then259:                                       ; preds = %do.end257
  %205 = load i8*, i8** %buf199, align 8, !dbg !6013
  %206 = load i32, i32* %ct198, align 4, !dbg !6014
  %conv260 = zext i32 %206 to i64, !dbg !6014
  %mul261 = mul i64 %conv260, 12, !dbg !6015
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 bitcast ([0 x %struct.kbdiacruc]* @accent_table to i8*), i8* align 1 %205, i64 %mul261, i1 false), !dbg !6016
  br label %if.end262, !dbg !6016

if.end262:                                        ; preds = %if.then259, %do.end257
  %207 = load i32, i32* %ct198, align 4, !dbg !6017
  store i32 %207, i32* @accent_table_size, align 4, !dbg !6018
  %208 = load i64, i64* %flags, align 8, !dbg !6019
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i263, align 8
  store i64 %208, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !6020
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !6020
  store i32 1, i32* %tmp.i, align 4, !dbg !6020
  %209 = load i32, i32* %tmp.i, align 4, !dbg !6020
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !6021
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !6021
  store i32 1, i32* %tmp8.i, align 4, !dbg !6021
  %210 = load i32, i32* %tmp8.i, align 4, !dbg !6021
  %211 = load i64, i64* %flags.addr.i, align 8, !dbg !6022
  call void @arch_local_irq_restore(i64 %211) #12, !dbg !6022
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6023, !srcloc !4921
  %212 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i263, align 8, !dbg !6024
  %213 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %212, i32 0, i32 0, !dbg !6024
  %rlock.i264 = bitcast %union.anon* %213 to %struct.raw_spinlock*, !dbg !6024
  %214 = load i8*, i8** %buf199, align 8, !dbg !6025
  call void @kfree(i8* %214) #11, !dbg !6026
  store i32 0, i32* %retval, align 4, !dbg !6027
  br label %return, !dbg !6027

sw.epilog:                                        ; preds = %entry
  %215 = load i32, i32* %ret, align 4, !dbg !6028
  store i32 %215, i32* %retval, align 4, !dbg !6029
  br label %return, !dbg !6029

return:                                           ; preds = %sw.epilog, %if.end262, %if.then227, %if.then217, %if.then213, %if.then201, %for.end195, %if.then137, %if.then127, %if.then123, %if.then113, %if.end107, %if.then58, %if.end52, %if.then
  %216 = load i32, i32* %retval, align 4, !dbg !6030
  ret i32 %216, !dbg !6030
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !6031 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6034, metadata !DIExpression()), !dbg !6038
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6047, metadata !DIExpression()), !dbg !6048
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6049, metadata !DIExpression()), !dbg !6050
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6051, metadata !DIExpression()), !dbg !6052
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6053, metadata !DIExpression()), !dbg !6057
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6059, metadata !DIExpression()), !dbg !6063
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6065, metadata !DIExpression()), !dbg !6069
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6074, metadata !DIExpression()), !dbg !6075
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6076, metadata !DIExpression()), !dbg !6077
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6078, metadata !DIExpression()), !dbg !6079
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6080, metadata !DIExpression()), !dbg !6081
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6082, metadata !DIExpression()), !dbg !6083
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6084, metadata !DIExpression()), !dbg !6085
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6086, metadata !DIExpression()), !dbg !6087
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6088, metadata !DIExpression()), !dbg !6089
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6090, metadata !DIExpression()), !dbg !6091
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6092, metadata !DIExpression()), !dbg !6093
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6094, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !6096, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !6098, metadata !DIExpression()), !dbg !6101
  %0 = load i64, i64* %n.addr, align 8, !dbg !6101
  store i64 %0, i64* %__a, align 8, !dbg !6101
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !6102, metadata !DIExpression()), !dbg !6101
  %1 = load i64, i64* %size.addr, align 8, !dbg !6101
  store i64 %1, i64* %__b, align 8, !dbg !6101
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !6103, metadata !DIExpression()), !dbg !6101
  store i64* %bytes, i64** %__d, align 8, !dbg !6101
  %cmp = icmp eq i64* %__a, %__b, !dbg !6101
  %conv = zext i1 %cmp to i32, !dbg !6101
  %2 = load i64*, i64** %__d, align 8, !dbg !6101
  %cmp1 = icmp eq i64* %__a, %2, !dbg !6101
  %conv2 = zext i1 %cmp1 to i32, !dbg !6101
  %3 = load i64, i64* %__a, align 8, !dbg !6101
  %4 = load i64, i64* %__b, align 8, !dbg !6101
  %5 = load i64*, i64** %__d, align 8, !dbg !6101
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !6101
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !6101
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !6101
  store i64 %8, i64* %5, align 8, !dbg !6101
  %frombool = zext i1 %7 to i8, !dbg !6101
  store i8 %frombool, i8* %tmp, align 1, !dbg !6101
  %9 = load i8, i8* %tmp, align 1, !dbg !6101
  %tobool = trunc i8 %9 to i1, !dbg !6101
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !6105
  %lnot = xor i1 %call, true, !dbg !6105
  %lnot3 = xor i1 %lnot, true, !dbg !6105
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6105
  %conv4 = sext i32 %lnot.ext to i64, !dbg !6105
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !6105
  br i1 %tobool5, label %if.then, label %if.end, !dbg !6106

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !6107
  br label %return, !dbg !6107

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !6108
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !6109
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !6110

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !6111
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !6112
  br i1 %13, label %if.then6, label %if.end8, !dbg !6113

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !6114
  %15 = load i32, i32* %flags.addr, align 4, !dbg !6115
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !6116
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #6, !dbg !6117
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !6118

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !6119
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !6120
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6121

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !6122
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !6123
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !6124
  %call.i.i = call i32 @get_order(i64 %21) #13, !dbg !6125
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6083
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !6126
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6127
  %24 = load i32, i32* %order.i.i, align 4, !dbg !6128
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6129
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6130
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6131
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !6132
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6132
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6132
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6132
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !6132
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6133
  br label %kmalloc.exit, !dbg !6133

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !6134
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6135
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !6135
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6137

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6138
  br label %kmalloc_index.exit.i, !dbg !6138

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6139
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !6141
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6142

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6143
  br label %kmalloc_index.exit.i, !dbg !6143

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6144
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !6146
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6147

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6148
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !6149
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6150

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6151
  br label %kmalloc_index.exit.i, !dbg !6151

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6152
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !6154
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6155

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6156
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !6157
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6158

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6159
  br label %kmalloc_index.exit.i, !dbg !6159

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6160
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !6162
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6163

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6164
  br label %kmalloc_index.exit.i, !dbg !6164

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6165
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !6167
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6168

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6169
  br label %kmalloc_index.exit.i, !dbg !6169

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6170
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !6172
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6173

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6174
  br label %kmalloc_index.exit.i, !dbg !6174

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6175
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !6177
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6178

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6179
  br label %kmalloc_index.exit.i, !dbg !6179

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6180
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !6182
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6183

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6184
  br label %kmalloc_index.exit.i, !dbg !6184

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6185
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !6187
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6188

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6189
  br label %kmalloc_index.exit.i, !dbg !6189

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6190
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !6192
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6193

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6194
  br label %kmalloc_index.exit.i, !dbg !6194

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6195
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !6197
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6198

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6199
  br label %kmalloc_index.exit.i, !dbg !6199

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6200
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !6202
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6203

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6204
  br label %kmalloc_index.exit.i, !dbg !6204

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6205
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !6207
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6208

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6209
  br label %kmalloc_index.exit.i, !dbg !6209

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6210
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !6212
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6213

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6214
  br label %kmalloc_index.exit.i, !dbg !6214

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6215
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !6217
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6218

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6219
  br label %kmalloc_index.exit.i, !dbg !6219

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6220
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !6222
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6223

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6224
  br label %kmalloc_index.exit.i, !dbg !6224

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6225
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !6227
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6228

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6229
  br label %kmalloc_index.exit.i, !dbg !6229

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6230
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !6232
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6233

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6234
  br label %kmalloc_index.exit.i, !dbg !6234

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6235
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !6237
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6238

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6239
  br label %kmalloc_index.exit.i, !dbg !6239

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6240
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !6242
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6243

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6244
  br label %kmalloc_index.exit.i, !dbg !6244

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6245
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !6247
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6248

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6249
  br label %kmalloc_index.exit.i, !dbg !6249

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6250
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !6252
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6253

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6254
  br label %kmalloc_index.exit.i, !dbg !6254

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6255
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !6257
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6258

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6259
  br label %kmalloc_index.exit.i, !dbg !6259

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6260
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !6262
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6263

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6264
  br label %kmalloc_index.exit.i, !dbg !6264

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6265
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !6267
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6268

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6269
  br label %kmalloc_index.exit.i, !dbg !6269

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6270
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !6272
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6273

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6274
  br label %kmalloc_index.exit.i, !dbg !6274

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6275
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !6277
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6278

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6279
  br label %kmalloc_index.exit.i, !dbg !6279

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !6280, !srcloc !6283
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 228) #6, !dbg !6284, !srcloc !6287
  unreachable, !dbg !6288

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !6289
  store i32 %59, i32* %index.i, align 4, !dbg !6290
  %60 = load i32, i32* %index.i, align 4, !dbg !6291
  %tobool.i = icmp ne i32 %60, 0, !dbg !6291
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6293

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6294
  br label %kmalloc.exit, !dbg !6294

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !6295
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6296
  %and.i.i = and i32 %62, 17, !dbg !6296
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6296
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6296
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6296
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6296
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6298

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6299
  br label %kmalloc_type.exit.i, !dbg !6299

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6300
  %and2.i.i = and i32 %63, 1, !dbg !6301
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6300
  %64 = zext i1 %tobool3.i.i to i64, !dbg !6300
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6300
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6302
  br label %kmalloc_type.exit.i, !dbg !6302

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !6303
  %idxprom.i = zext i32 %65 to i64, !dbg !6304
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6304
  %66 = load i32, i32* %index.i, align 4, !dbg !6305
  %idxprom6.i = zext i32 %66 to i64, !dbg !6304
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6304
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6304
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !6306
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !6307
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6308
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6309
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !6310
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6310
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6310
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6310
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !6310
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6052
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6311
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !6312
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6313
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6314
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !6315
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6316
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !6317
  store i8* %76, i8** %retval.i, align 8, !dbg !6318
  br label %kmalloc.exit, !dbg !6318

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !6319
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !6320
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !6321
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6321
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6321
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6321
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !6321
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6322
  br label %kmalloc.exit, !dbg !6322

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !6323
  store i8* %79, i8** %retval, align 8, !dbg !6324
  br label %return, !dbg !6324

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !6325
  %81 = load i32, i32* %flags.addr, align 4, !dbg !6326
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !6327
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !6327
  %maskedptr = and i64 %ptrint, 7, !dbg !6327
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !6327
  call void @llvm.assume(i1 %maskcond), !dbg !6327
  store i8* %call9, i8** %retval, align 8, !dbg !6328
  br label %return, !dbg !6328

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !6329
  ret i8* %82, !dbg !6329
}

; Function Attrs: noredzone
declare dso_local i32 @conv_uni_to_8bit(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #0 !dbg !6330 {
entry:
  ret void, !dbg !6332
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @memdup_user(i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !6333 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6339
  %1 = ptrtoint i8* %0 to i64, !dbg !6339
  %2 = inttoptr i64 %1 to i8*, !dbg !6339
  %3 = ptrtoint i8* %2 to i64, !dbg !6339
  %cmp = icmp uge i64 %3, -4095, !dbg !6339
  %lnot = xor i1 %cmp, true, !dbg !6339
  %lnot1 = xor i1 %lnot, true, !dbg !6339
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6339
  %conv = sext i32 %lnot.ext to i64, !dbg !6339
  %tobool = icmp ne i64 %conv, 0, !dbg !6339
  ret i1 %tobool, !dbg !6340
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !6341 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6344, metadata !DIExpression()), !dbg !6345
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6346
  %1 = ptrtoint i8* %0 to i64, !dbg !6347
  ret i64 %1, !dbg !6348
}

; Function Attrs: noredzone
declare dso_local i32 @conv_8bit_to_uni(i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_do_kdskbmode(i32 %console, i32 %arg) #0 !dbg !6349 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !4860, metadata !DIExpression()), !dbg !6352
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !6354
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !6355
  %console.addr = alloca i32, align 4
  %arg.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !6362, metadata !DIExpression()), !dbg !6363
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !6364, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !6366, metadata !DIExpression()), !dbg !6367
  %0 = load i32, i32* %console.addr, align 4, !dbg !6368
  %idx.ext = sext i32 %0 to i64, !dbg !6369
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !6369
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !6367
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6370, metadata !DIExpression()), !dbg !6371
  store i32 0, i32* %ret, align 4, !dbg !6371
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6372, metadata !DIExpression()), !dbg !6373
  br label %do.body, !dbg !6374

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6375

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6376, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6379, metadata !DIExpression()), !dbg !6378
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6378
  %conv = zext i1 %cmp to i32, !dbg !6378
  store i32 1, i32* %tmp, align 4, !dbg !6378
  %1 = load i32, i32* %tmp, align 4, !dbg !6378
  br label %do.body2, !dbg !6380

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6381

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6382

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6384, metadata !DIExpression()), !dbg !6387
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6388, metadata !DIExpression()), !dbg !6387
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6387
  %conv8 = zext i1 %cmp7 to i32, !dbg !6387
  store i32 1, i32* %tmp9, align 4, !dbg !6387
  %2 = load i32, i32* %tmp9, align 4, !dbg !6387
  %call = call i64 @arch_local_irq_save() #11, !dbg !6389
  store i64 %call, i64* %flags, align 8, !dbg !6389
  br label %do.end, !dbg !6389

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6382

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6381

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6390, !srcloc !6391
  br label %do.body12, !dbg !6390

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6392
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !6393
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !6393
  br label %do.end14, !dbg !6394

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6390

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6381

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6380

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6375

do.end18:                                         ; preds = %do.end17
  %5 = load i32, i32* %arg.addr, align 4, !dbg !6395
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb19
    i32 1, label %sw.bb24
    i32 3, label %sw.bb28
    i32 4, label %sw.bb33
  ], !dbg !6396

sw.bb:                                            ; preds = %do.end18
  %6 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !6397
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %6, i32 0, i32 3, !dbg !6399
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !6400
  %bf.clear = and i8 %bf.load, -113, !dbg !6400
  %bf.set = or i8 %bf.clear, 32, !dbg !6400
  store i8 %bf.set, i8* %kbdmode, align 1, !dbg !6400
  br label %sw.epilog, !dbg !6401

sw.bb19:                                          ; preds = %do.end18
  %7 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !6402
  %kbdmode20 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %7, i32 0, i32 3, !dbg !6403
  %bf.load21 = load i8, i8* %kbdmode20, align 1, !dbg !6404
  %bf.clear22 = and i8 %bf.load21, -113, !dbg !6404
  %bf.set23 = or i8 %bf.clear22, 16, !dbg !6404
  store i8 %bf.set23, i8* %kbdmode20, align 1, !dbg !6404
  br label %sw.epilog, !dbg !6405

sw.bb24:                                          ; preds = %do.end18
  %8 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !6406
  %kbdmode25 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %8, i32 0, i32 3, !dbg !6407
  %bf.load26 = load i8, i8* %kbdmode25, align 1, !dbg !6408
  %bf.clear27 = and i8 %bf.load26, -113, !dbg !6408
  store i8 %bf.clear27, i8* %kbdmode25, align 1, !dbg !6408
  call void @do_compute_shiftstate() #11, !dbg !6409
  br label %sw.epilog, !dbg !6410

sw.bb28:                                          ; preds = %do.end18
  %9 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !6411
  %kbdmode29 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %9, i32 0, i32 3, !dbg !6412
  %bf.load30 = load i8, i8* %kbdmode29, align 1, !dbg !6413
  %bf.clear31 = and i8 %bf.load30, -113, !dbg !6413
  %bf.set32 = or i8 %bf.clear31, 48, !dbg !6413
  store i8 %bf.set32, i8* %kbdmode29, align 1, !dbg !6413
  call void @do_compute_shiftstate() #11, !dbg !6414
  br label %sw.epilog, !dbg !6415

sw.bb33:                                          ; preds = %do.end18
  %10 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !6416
  %kbdmode34 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %10, i32 0, i32 3, !dbg !6417
  %bf.load35 = load i8, i8* %kbdmode34, align 1, !dbg !6418
  %bf.clear36 = and i8 %bf.load35, -113, !dbg !6418
  %bf.set37 = or i8 %bf.clear36, 64, !dbg !6418
  store i8 %bf.set37, i8* %kbdmode34, align 1, !dbg !6418
  br label %sw.epilog, !dbg !6419

sw.default:                                       ; preds = %do.end18
  store i32 -22, i32* %ret, align 4, !dbg !6420
  br label %sw.epilog, !dbg !6421

sw.epilog:                                        ; preds = %sw.default, %sw.bb33, %sw.bb28, %sw.bb24, %sw.bb19, %sw.bb
  %11 = load i64, i64* %flags, align 8, !dbg !6422
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !6423
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !6423
  store i32 1, i32* %tmp.i, align 4, !dbg !6423
  %12 = load i32, i32* %tmp.i, align 4, !dbg !6423
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !6424
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !6424
  store i32 1, i32* %tmp8.i, align 4, !dbg !6424
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !6424
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !6425
  call void @arch_local_irq_restore(i64 %14) #12, !dbg !6425
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6426, !srcloc !4921
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !6427
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !6427
  %rlock.i39 = bitcast %union.anon* %16 to %struct.raw_spinlock*, !dbg !6427
  %17 = load i32, i32* %ret, align 4, !dbg !6428
  ret i32 %17, !dbg !6429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_do_kdskbmeta(i32 %console, i32 %arg) #0 !dbg !6430 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !4860, metadata !DIExpression()), !dbg !6431
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !6433
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !6434
  %console.addr = alloca i32, align 4
  %arg.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !6441, metadata !DIExpression()), !dbg !6442
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !6443, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !6445, metadata !DIExpression()), !dbg !6446
  %0 = load i32, i32* %console.addr, align 4, !dbg !6447
  %idx.ext = sext i32 %0 to i64, !dbg !6448
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !6448
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !6446
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6449, metadata !DIExpression()), !dbg !6450
  store i32 0, i32* %ret, align 4, !dbg !6450
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6451, metadata !DIExpression()), !dbg !6452
  br label %do.body, !dbg !6453

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6454

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6455, metadata !DIExpression()), !dbg !6457
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6458, metadata !DIExpression()), !dbg !6457
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6457
  %conv = zext i1 %cmp to i32, !dbg !6457
  store i32 1, i32* %tmp, align 4, !dbg !6457
  %1 = load i32, i32* %tmp, align 4, !dbg !6457
  br label %do.body2, !dbg !6459

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6460

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6461

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6463, metadata !DIExpression()), !dbg !6466
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6467, metadata !DIExpression()), !dbg !6466
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6466
  %conv8 = zext i1 %cmp7 to i32, !dbg !6466
  store i32 1, i32* %tmp9, align 4, !dbg !6466
  %2 = load i32, i32* %tmp9, align 4, !dbg !6466
  %call = call i64 @arch_local_irq_save() #11, !dbg !6468
  store i64 %call, i64* %flags, align 8, !dbg !6468
  br label %do.end, !dbg !6468

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6461

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6460

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6469, !srcloc !6470
  br label %do.body12, !dbg !6469

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6471
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !6472
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !6472
  br label %do.end14, !dbg !6473

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6469

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6460

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6459

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6454

do.end18:                                         ; preds = %do.end17
  %5 = load i32, i32* %arg.addr, align 4, !dbg !6474
  switch i32 %5, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb19
  ], !dbg !6475

sw.bb:                                            ; preds = %do.end18
  %6 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !6476
  call void @clr_vc_kbd_mode(%struct.kbd_struct* %6, i32 4) #11, !dbg !6478
  br label %sw.epilog, !dbg !6479

sw.bb19:                                          ; preds = %do.end18
  %7 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !6480
  call void @set_vc_kbd_mode(%struct.kbd_struct* %7, i32 4) #11, !dbg !6481
  br label %sw.epilog, !dbg !6482

sw.default:                                       ; preds = %do.end18
  store i32 -22, i32* %ret, align 4, !dbg !6483
  br label %sw.epilog, !dbg !6484

sw.epilog:                                        ; preds = %sw.default, %sw.bb19, %sw.bb
  %8 = load i64, i64* %flags, align 8, !dbg !6485
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !6486
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !6486
  store i32 1, i32* %tmp.i, align 4, !dbg !6486
  %9 = load i32, i32* %tmp.i, align 4, !dbg !6486
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !6487
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !6487
  store i32 1, i32* %tmp8.i, align 4, !dbg !6487
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !6487
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !6488
  call void @arch_local_irq_restore(i64 %11) #12, !dbg !6488
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6489, !srcloc !4921
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !6490
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !6490
  %rlock.i21 = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !6490
  %14 = load i32, i32* %ret, align 4, !dbg !6491
  ret i32 %14, !dbg !6492
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clr_vc_kbd_mode(%struct.kbd_struct* %kbd, i32 %flag) #0 !dbg !6493 {
entry:
  %kbd.addr = alloca %struct.kbd_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.kbd_struct* %kbd, %struct.kbd_struct** %kbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kbd.addr, metadata !6494, metadata !DIExpression()), !dbg !6495
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !6496, metadata !DIExpression()), !dbg !6497
  %0 = load i32, i32* %flag.addr, align 4, !dbg !6498
  %shl = shl i32 1, %0, !dbg !6499
  %neg = xor i32 %shl, -1, !dbg !6500
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kbd.addr, align 8, !dbg !6501
  %modeflags = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %1, i32 0, i32 4, !dbg !6502
  %bf.load = load i8, i8* %modeflags, align 1, !dbg !6503
  %bf.clear = and i8 %bf.load, 31, !dbg !6503
  %conv = zext i8 %bf.clear to i32, !dbg !6503
  %and = and i32 %conv, %neg, !dbg !6503
  %conv1 = trunc i32 %and to i8, !dbg !6503
  %bf.load2 = load i8, i8* %modeflags, align 1, !dbg !6503
  %bf.value = and i8 %conv1, 31, !dbg !6503
  %bf.clear3 = and i8 %bf.load2, -32, !dbg !6503
  %bf.set = or i8 %bf.clear3, %bf.value, !dbg !6503
  store i8 %bf.set, i8* %modeflags, align 1, !dbg !6503
  ret void, !dbg !6504
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_vc_kbd_mode(%struct.kbd_struct* %kbd, i32 %flag) #0 !dbg !6505 {
entry:
  %kbd.addr = alloca %struct.kbd_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.kbd_struct* %kbd, %struct.kbd_struct** %kbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kbd.addr, metadata !6506, metadata !DIExpression()), !dbg !6507
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  %0 = load i32, i32* %flag.addr, align 4, !dbg !6510
  %shl = shl i32 1, %0, !dbg !6511
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kbd.addr, align 8, !dbg !6512
  %modeflags = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %1, i32 0, i32 4, !dbg !6513
  %bf.load = load i8, i8* %modeflags, align 1, !dbg !6514
  %bf.clear = and i8 %bf.load, 31, !dbg !6514
  %conv = zext i8 %bf.clear to i32, !dbg !6514
  %or = or i32 %conv, %shl, !dbg !6514
  %conv1 = trunc i32 %or to i8, !dbg !6514
  %bf.load2 = load i8, i8* %modeflags, align 1, !dbg !6514
  %bf.value = and i8 %conv1, 31, !dbg !6514
  %bf.clear3 = and i8 %bf.load2, -32, !dbg !6514
  %bf.set = or i8 %bf.clear3, %bf.value, !dbg !6514
  store i8 %bf.set, i8* %modeflags, align 1, !dbg !6514
  ret void, !dbg !6515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_do_kbkeycode_ioctl(i32 %cmd, %struct.kbkeycode* %user_kbkc, i32 %perm) #0 !dbg !6516 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5465, metadata !DIExpression()), !dbg !6524
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5481, metadata !DIExpression()), !dbg !6530
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5483, metadata !DIExpression()), !dbg !6531
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5485, metadata !DIExpression()), !dbg !6532
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5487, metadata !DIExpression()), !dbg !6533
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6534, metadata !DIExpression()), !dbg !6535
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6536, metadata !DIExpression()), !dbg !6537
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6538, metadata !DIExpression()), !dbg !6539
  %retval = alloca i32, align 4
  %cmd.addr = alloca i32, align 4
  %user_kbkc.addr = alloca %struct.kbkeycode*, align 8
  %perm.addr = alloca i32, align 4
  %tmp = alloca %struct.kbkeycode, align 4
  %kc = alloca i32, align 4
  %tmp3 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp5 = alloca i64, align 8
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !6540, metadata !DIExpression()), !dbg !6541
  store %struct.kbkeycode* %user_kbkc, %struct.kbkeycode** %user_kbkc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbkeycode** %user_kbkc.addr, metadata !6542, metadata !DIExpression()), !dbg !6543
  store i32 %perm, i32* %perm.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %perm.addr, metadata !6544, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.declare(metadata %struct.kbkeycode* %tmp, metadata !6546, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.declare(metadata i32* %kc, metadata !6548, metadata !DIExpression()), !dbg !6549
  store i32 0, i32* %kc, align 4, !dbg !6549
  %0 = bitcast %struct.kbkeycode* %tmp to i8*, !dbg !6550
  %1 = load %struct.kbkeycode*, %struct.kbkeycode** %user_kbkc.addr, align 8, !dbg !6551
  %2 = bitcast %struct.kbkeycode* %1 to i8*, !dbg !6551
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %2, i8** %from.addr.i, align 8
  store i64 8, i64* %n.addr.i, align 8
  %3 = load i8*, i8** %to.addr.i, align 8, !dbg !6552
  %4 = load i64, i64* %n.addr.i, align 8, !dbg !6552
  store i8* %3, i8** %addr.addr.i.i, align 8
  store i64 %4, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !6532
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !6553
  %cmp.i.i = icmp sge i32 %5, 0, !dbg !6553
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !6553

land.rhs.i.i:                                     ; preds = %entry
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !6553
  %conv.i.i = sext i32 %6 to i64, !dbg !6553
  %7 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6553
  %cmp1.i.i = icmp ult i64 %conv.i.i, %7, !dbg !6553
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !6554
  %lnot.i.i = xor i1 %8, true, !dbg !6553
  %lnot.ext.i.i = zext i1 %8 to i32, !dbg !6553
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6553
  br i1 %8, label %if.then.i.i, label %if.end10.i.i, !dbg !6555

if.then.i.i:                                      ; preds = %land.end.i.i
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6556
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #6, !dbg !6557
  br i1 %10, label %if.else.i.i, label %if.then5.i.i, !dbg !6558

if.then5.i.i:                                     ; preds = %if.then.i.i
  %11 = load i32, i32* %sz.i.i, align 4, !dbg !6559
  %12 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6560
  call void @copy_overflow(i32 %11, i64 %12) #12, !dbg !6561
  br label %if.end9.i.i, !dbg !6561

if.else.i.i:                                      ; preds = %if.then.i.i
  %13 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6562
  %tobool6.i.i = trunc i8 %13 to i1, !dbg !6562
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !6563

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !6564
  br label %if.end.i.i, !dbg !6564

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !6565
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6566
  br label %check_copy_size.exit.i, !dbg !6566

if.end10.i.i:                                     ; preds = %land.end.i.i
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6533
  %cmp11.i.i = icmp ugt i64 %14, 2147483647, !dbg !6533
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !6533
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !6533
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !6533
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6567
  %tobool17.i.i = icmp ne i32 %15, 0, !dbg !6567
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !6567
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !6567
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !6567
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !6533

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !6568, !srcloc !5680
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #6, !dbg !6569, !srcloc !5683
  br label %if.end31.i.i, !dbg !6570

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6533
  %tobool32.i.i = icmp ne i32 %16, 0, !dbg !6533
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !6533
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !6533
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !6533
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !6567
  %17 = load i64, i64* %tmp.i.i, align 8, !dbg !6533
  %tobool38.i.i = icmp ne i64 %17, 0, !dbg !6571
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !6572

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6573
  br label %check_copy_size.exit.i, !dbg !6573

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %18 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !6574
  %19 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6575
  %20 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6576
  %tobool41.i.i = trunc i8 %20 to i1, !dbg !6576
  call void @check_object_size(i8* %18, i64 %19, i1 zeroext %tobool41.i.i) #12, !dbg !6577
  store i1 true, i1* %retval.i.i, align 1, !dbg !6578
  br label %check_copy_size.exit.i, !dbg !6578

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %21 = load i1, i1* %retval.i.i, align 1, !dbg !6579
  %lnot.i = xor i1 %21, true, !dbg !6552
  %lnot.ext.i = zext i1 %21 to i32, !dbg !6552
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !6552
  br i1 %21, label %if.then.i, label %copy_from_user.exit, !dbg !6580

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %22 = load i8*, i8** %to.addr.i, align 8, !dbg !6581
  %23 = load i8*, i8** %from.addr.i, align 8, !dbg !6582
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !6583
  %call2.i = call i64 @_copy_from_user(i8* %22, i8* %23, i64 %24) #12, !dbg !6584
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !6585
  br label %copy_from_user.exit, !dbg !6586

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !6587
  %tobool = icmp ne i64 %25, 0, !dbg !6588
  br i1 %tobool, label %if.then, label %if.end, !dbg !6589

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !6590
  br label %return, !dbg !6590

if.end:                                           ; preds = %copy_from_user.exit
  %26 = load i32, i32* %cmd.addr, align 4, !dbg !6591
  switch i32 %26, label %sw.epilog [
    i32 19276, label %sw.bb
    i32 19277, label %sw.bb8
  ], !dbg !6592

sw.bb:                                            ; preds = %if.end
  %scancode = getelementptr inbounds %struct.kbkeycode, %struct.kbkeycode* %tmp, i32 0, i32 0, !dbg !6593
  %27 = load i32, i32* %scancode, align 4, !dbg !6593
  %call1 = call i32 @getkeycode(i32 %27) #11, !dbg !6595
  store i32 %call1, i32* %kc, align 4, !dbg !6596
  %28 = load i32, i32* %kc, align 4, !dbg !6597
  %cmp = icmp sge i32 %28, 0, !dbg !6599
  br i1 %cmp, label %if.then2, label %if.end7, !dbg !6600

if.then2:                                         ; preds = %sw.bb
  call void @might_fault() #11, !dbg !6601
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !6603, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !6606, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !6607, metadata !DIExpression()), !dbg !6605
  %29 = load %struct.kbkeycode*, %struct.kbkeycode** %user_kbkc.addr, align 8, !dbg !6605
  %keycode = getelementptr inbounds %struct.kbkeycode, %struct.kbkeycode* %29, i32 0, i32 1, !dbg !6605
  %30 = bitcast i32* %keycode to i8*, !dbg !6605
  store i8* %30, i8** %__ptr_pu, align 8, !dbg !6605
  %31 = load i32, i32* %kc, align 4, !dbg !6605
  store i32 %31, i32* %__val_pu, align 4, !dbg !6605
  %32 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !6605
  %33 = load i8*, i8** %__ptr_pu, align 8, !dbg !6605
  %34 = load i32, i32* %__val_pu, align 4, !dbg !6605
  %35 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %33, i32 %34, i64 4, i64 %32) #6, !dbg !6605, !srcloc !6608
  %asmresult = extractvalue { i8*, i64 } %35, 0, !dbg !6605
  %asmresult4 = extractvalue { i8*, i64 } %35, 1, !dbg !6605
  %36 = ptrtoint i8* %asmresult to i64, !dbg !6605
  %37 = trunc i64 %36 to i32, !dbg !6605
  store i32 %37, i32* %__ret_pu, align 4, !dbg !6605
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult4), !dbg !6605
  %38 = load i32, i32* %__ret_pu, align 4, !dbg !6605
  %conv = sext i32 %38 to i64, !dbg !6605
  store i64 %conv, i64* %tmp5, align 8, !dbg !6605
  %39 = load i64, i64* %tmp5, align 8, !dbg !6605
  store i64 %39, i64* %tmp3, align 8, !dbg !6601
  %40 = load i64, i64* %tmp3, align 8, !dbg !6601
  %conv6 = trunc i64 %40 to i32, !dbg !6609
  store i32 %conv6, i32* %kc, align 4, !dbg !6610
  br label %if.end7, !dbg !6611

if.end7:                                          ; preds = %if.then2, %sw.bb
  br label %sw.epilog, !dbg !6612

sw.bb8:                                           ; preds = %if.end
  %41 = load i32, i32* %perm.addr, align 4, !dbg !6613
  %tobool9 = icmp ne i32 %41, 0, !dbg !6613
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6615

if.then10:                                        ; preds = %sw.bb8
  store i32 -1, i32* %retval, align 4, !dbg !6616
  br label %return, !dbg !6616

if.end11:                                         ; preds = %sw.bb8
  %scancode12 = getelementptr inbounds %struct.kbkeycode, %struct.kbkeycode* %tmp, i32 0, i32 0, !dbg !6617
  %42 = load i32, i32* %scancode12, align 4, !dbg !6617
  %keycode13 = getelementptr inbounds %struct.kbkeycode, %struct.kbkeycode* %tmp, i32 0, i32 1, !dbg !6618
  %43 = load i32, i32* %keycode13, align 4, !dbg !6618
  %call14 = call i32 @setkeycode(i32 %42, i32 %43) #11, !dbg !6619
  store i32 %call14, i32* %kc, align 4, !dbg !6620
  br label %sw.epilog, !dbg !6621

sw.epilog:                                        ; preds = %if.end, %if.end11, %if.end7
  %44 = load i32, i32* %kc, align 4, !dbg !6622
  store i32 %44, i32* %retval, align 4, !dbg !6623
  br label %return, !dbg !6623

return:                                           ; preds = %sw.epilog, %if.then10, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !6624
  ret i32 %45, !dbg !6624
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @getkeycode(i32 %scancode) #0 !dbg !6625 {
entry:
  %scancode.addr = alloca i32, align 4
  %d = alloca %struct.getset_keycode_data, align 4
  store i32 %scancode, i32* %scancode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scancode.addr, metadata !6628, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.declare(metadata %struct.getset_keycode_data* %d, metadata !6630, metadata !DIExpression()), !dbg !6635
  %0 = bitcast %struct.getset_keycode_data* %d to i8*, !dbg !6635
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 44, i1 false), !dbg !6635
  %1 = bitcast i8* %0 to %struct.getset_keycode_data*, !dbg !6635
  %2 = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %1, i32 0, i32 0, !dbg !6635
  %3 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %2, i32 0, i32 1, !dbg !6635
  store i8 4, i8* %3, align 1, !dbg !6635
  %4 = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %1, i32 0, i32 1, !dbg !6635
  store i32 -19, i32* %4, align 4, !dbg !6635
  %ke = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %d, i32 0, i32 0, !dbg !6636
  %scancode1 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %ke, i32 0, i32 4, !dbg !6637
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %scancode1, i64 0, i64 0, !dbg !6638
  %5 = bitcast i32* %scancode.addr to i8*, !dbg !6638
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 4 %5, i64 4, i1 false), !dbg !6638
  %6 = bitcast %struct.getset_keycode_data* %d to i8*, !dbg !6639
  %call = call i32 @input_handler_for_each_handle(%struct.input_handler* @kbd_handler, i8* %6, i32 (%struct.input_handle*, i8*)* @getkeycode_helper) #11, !dbg !6640
  %error = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %d, i32 0, i32 1, !dbg !6641
  %7 = load i32, i32* %error, align 4, !dbg !6641
  %tobool = icmp ne i32 %7, 0, !dbg !6642
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6642

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6642

cond.false:                                       ; preds = %entry
  %ke2 = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %d, i32 0, i32 0, !dbg !6643
  %keycode = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %ke2, i32 0, i32 3, !dbg !6644
  %8 = load i32, i32* %keycode, align 4, !dbg !6644
  br label %cond.end, !dbg !6642

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !6642
  ret i32 %cond, !dbg !6645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @setkeycode(i32 %scancode, i32 %keycode) #0 !dbg !6646 {
entry:
  %scancode.addr = alloca i32, align 4
  %keycode.addr = alloca i32, align 4
  %d = alloca %struct.getset_keycode_data, align 4
  store i32 %scancode, i32* %scancode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scancode.addr, metadata !6649, metadata !DIExpression()), !dbg !6650
  store i32 %keycode, i32* %keycode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keycode.addr, metadata !6651, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.declare(metadata %struct.getset_keycode_data* %d, metadata !6653, metadata !DIExpression()), !dbg !6654
  %0 = bitcast %struct.getset_keycode_data* %d to i8*, !dbg !6654
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 44, i1 false), !dbg !6654
  %ke = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %d, i32 0, i32 0, !dbg !6655
  %flags = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %ke, i32 0, i32 0, !dbg !6656
  store i8 0, i8* %flags, align 4, !dbg !6656
  %len = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %ke, i32 0, i32 1, !dbg !6656
  store i8 4, i8* %len, align 1, !dbg !6656
  %keycode1 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %ke, i32 0, i32 3, !dbg !6656
  %1 = load i32, i32* %keycode.addr, align 4, !dbg !6657
  store i32 %1, i32* %keycode1, align 4, !dbg !6656
  %error = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %d, i32 0, i32 1, !dbg !6655
  store i32 -19, i32* %error, align 4, !dbg !6655
  %ke3 = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %d, i32 0, i32 0, !dbg !6658
  %scancode4 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %ke3, i32 0, i32 4, !dbg !6659
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %scancode4, i64 0, i64 0, !dbg !6660
  %2 = bitcast i32* %scancode.addr to i8*, !dbg !6660
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 4 %2, i64 4, i1 false), !dbg !6660
  %3 = bitcast %struct.getset_keycode_data* %d to i8*, !dbg !6661
  %call = call i32 @input_handler_for_each_handle(%struct.input_handler* @kbd_handler, i8* %3, i32 (%struct.input_handle*, i8*)* @setkeycode_helper) #11, !dbg !6662
  %error5 = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %d, i32 0, i32 1, !dbg !6663
  %4 = load i32, i32* %error5, align 4, !dbg !6663
  ret i32 %4, !dbg !6664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_do_kdsk_ioctl(i32 %cmd, %struct.kbentry* %user_kbe, i32 %perm, i32 %console) #0 !dbg !6665 {
entry:
  %lock.addr.i268 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i268, metadata !4860, metadata !DIExpression()), !dbg !6674
  %flags.addr.i269 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i269, metadata !4867, metadata !DIExpression()), !dbg !6677
  %tmp.i270 = alloca i32, align 4
  %tmp8.i271 = alloca i32, align 4
  %lock.addr.i263 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i263, metadata !4860, metadata !DIExpression()), !dbg !6678
  %flags.addr.i264 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i264, metadata !4867, metadata !DIExpression()), !dbg !6682
  %tmp.i265 = alloca i32, align 4
  %tmp8.i266 = alloca i32, align 4
  %lock.addr.i258 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i258, metadata !4860, metadata !DIExpression()), !dbg !6683
  %flags.addr.i259 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i259, metadata !4867, metadata !DIExpression()), !dbg !6689
  %tmp.i260 = alloca i32, align 4
  %tmp8.i261 = alloca i32, align 4
  %lock.addr.i256 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i256, metadata !4869, metadata !DIExpression()), !dbg !6690
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6034, metadata !DIExpression()), !dbg !6697
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6047, metadata !DIExpression()), !dbg !6700
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6049, metadata !DIExpression()), !dbg !6701
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6051, metadata !DIExpression()), !dbg !6702
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6053, metadata !DIExpression()), !dbg !6703
  %retval.i.i246 = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6059, metadata !DIExpression()), !dbg !6705
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6065, metadata !DIExpression()), !dbg !6707
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6074, metadata !DIExpression()), !dbg !6710
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6076, metadata !DIExpression()), !dbg !6711
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6078, metadata !DIExpression()), !dbg !6712
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6080, metadata !DIExpression()), !dbg !6713
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6082, metadata !DIExpression()), !dbg !6714
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6084, metadata !DIExpression()), !dbg !6715
  %flags.addr.i247 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i247, metadata !6086, metadata !DIExpression()), !dbg !6716
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6088, metadata !DIExpression()), !dbg !6717
  %lock.addr.i241 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i241, metadata !4860, metadata !DIExpression()), !dbg !6718
  %flags.addr.i242 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i242, metadata !4867, metadata !DIExpression()), !dbg !6722
  %tmp.i243 = alloca i32, align 4
  %tmp8.i244 = alloca i32, align 4
  %lock.addr.i239 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i239, metadata !4869, metadata !DIExpression()), !dbg !6723
  %lock.addr.i237 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i237, metadata !4860, metadata !DIExpression()), !dbg !6730
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !6732
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !6733
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5465, metadata !DIExpression()), !dbg !6740
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5481, metadata !DIExpression()), !dbg !6744
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5483, metadata !DIExpression()), !dbg !6745
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5485, metadata !DIExpression()), !dbg !6746
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5487, metadata !DIExpression()), !dbg !6747
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6534, metadata !DIExpression()), !dbg !6748
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6536, metadata !DIExpression()), !dbg !6749
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6538, metadata !DIExpression()), !dbg !6750
  %retval = alloca i32, align 4
  %cmd.addr = alloca i32, align 4
  %user_kbe.addr = alloca %struct.kbentry*, align 8
  %perm.addr = alloca i32, align 4
  %console.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  %tmp = alloca %struct.kbentry, align 2
  %key_map = alloca i16*, align 8
  %new_map = alloca i16*, align 8
  %val = alloca i16, align 2
  %ov = alloca i16, align 2
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp5 = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %tmp43 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i16, align 2
  %tmp45 = alloca i64, align 8
  %__dummy62 = alloca i64, align 8
  %__dummy263 = alloca i64, align 8
  %tmp66 = alloca i32, align 4
  %__dummy70 = alloca i64, align 8
  %__dummy271 = alloca i64, align 8
  %tmp74 = alloca i32, align 4
  %__dummy144 = alloca i64, align 8
  %__dummy2145 = alloca i64, align 8
  %tmp148 = alloca i32, align 4
  %__dummy152 = alloca i64, align 8
  %__dummy2153 = alloca i64, align 8
  %tmp156 = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !6751, metadata !DIExpression()), !dbg !6752
  store %struct.kbentry* %user_kbe, %struct.kbentry** %user_kbe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbentry** %user_kbe.addr, metadata !6753, metadata !DIExpression()), !dbg !6754
  store i32 %perm, i32* %perm.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %perm.addr, metadata !6755, metadata !DIExpression()), !dbg !6756
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !6757, metadata !DIExpression()), !dbg !6758
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !6759, metadata !DIExpression()), !dbg !6760
  %0 = load i32, i32* %console.addr, align 4, !dbg !6761
  %idx.ext = sext i32 %0 to i64, !dbg !6762
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !6762
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !6760
  call void @llvm.dbg.declare(metadata %struct.kbentry* %tmp, metadata !6763, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.declare(metadata i16** %key_map, metadata !6765, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.declare(metadata i16** %new_map, metadata !6769, metadata !DIExpression()), !dbg !6770
  call void @llvm.dbg.declare(metadata i16* %val, metadata !6771, metadata !DIExpression()), !dbg !6772
  call void @llvm.dbg.declare(metadata i16* %ov, metadata !6773, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6775, metadata !DIExpression()), !dbg !6776
  %1 = bitcast %struct.kbentry* %tmp to i8*, !dbg !6777
  %2 = load %struct.kbentry*, %struct.kbentry** %user_kbe.addr, align 8, !dbg !6778
  %3 = bitcast %struct.kbentry* %2 to i8*, !dbg !6778
  store i8* %1, i8** %to.addr.i, align 8
  store i8* %3, i8** %from.addr.i, align 8
  store i64 4, i64* %n.addr.i, align 8
  %4 = load i8*, i8** %to.addr.i, align 8, !dbg !6779
  %5 = load i64, i64* %n.addr.i, align 8, !dbg !6779
  store i8* %4, i8** %addr.addr.i.i, align 8
  store i64 %5, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !6746
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !6780
  %cmp.i.i = icmp sge i32 %6, 0, !dbg !6780
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !6780

land.rhs.i.i:                                     ; preds = %entry
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !6780
  %conv.i.i = sext i32 %7 to i64, !dbg !6780
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6780
  %cmp1.i.i = icmp ult i64 %conv.i.i, %8, !dbg !6780
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !6781
  %lnot.i.i = xor i1 %9, true, !dbg !6780
  %lnot.ext.i.i = zext i1 %9 to i32, !dbg !6780
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6780
  br i1 %9, label %if.then.i.i, label %if.end10.i.i, !dbg !6782

if.then.i.i:                                      ; preds = %land.end.i.i
  %10 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6783
  %11 = call i1 @llvm.is.constant.i64(i64 %10) #6, !dbg !6784
  br i1 %11, label %if.else.i.i, label %if.then5.i.i, !dbg !6785

if.then5.i.i:                                     ; preds = %if.then.i.i
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !6786
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6787
  call void @copy_overflow(i32 %12, i64 %13) #12, !dbg !6788
  br label %if.end9.i.i, !dbg !6788

if.else.i.i:                                      ; preds = %if.then.i.i
  %14 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6789
  %tobool6.i.i = trunc i8 %14 to i1, !dbg !6789
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !6790

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !6791
  br label %if.end.i.i, !dbg !6791

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !6792
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6793
  br label %check_copy_size.exit.i, !dbg !6793

if.end10.i.i:                                     ; preds = %land.end.i.i
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6747
  %cmp11.i.i = icmp ugt i64 %15, 2147483647, !dbg !6747
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !6747
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !6747
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !6747
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6794
  %tobool17.i.i = icmp ne i32 %16, 0, !dbg !6794
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !6794
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !6794
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !6794
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !6747

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !6795, !srcloc !5680
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #6, !dbg !6796, !srcloc !5683
  br label %if.end31.i.i, !dbg !6797

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6747
  %tobool32.i.i = icmp ne i32 %17, 0, !dbg !6747
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !6747
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !6747
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !6747
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !6794
  %18 = load i64, i64* %tmp.i.i, align 8, !dbg !6747
  %tobool38.i.i = icmp ne i64 %18, 0, !dbg !6798
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !6799

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6800
  br label %check_copy_size.exit.i, !dbg !6800

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %19 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !6801
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6802
  %21 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6803
  %tobool41.i.i = trunc i8 %21 to i1, !dbg !6803
  call void @check_object_size(i8* %19, i64 %20, i1 zeroext %tobool41.i.i) #12, !dbg !6804
  store i1 true, i1* %retval.i.i, align 1, !dbg !6805
  br label %check_copy_size.exit.i, !dbg !6805

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %22 = load i1, i1* %retval.i.i, align 1, !dbg !6806
  %lnot.i = xor i1 %22, true, !dbg !6779
  %lnot.ext.i = zext i1 %22 to i32, !dbg !6779
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !6779
  br i1 %22, label %if.then.i, label %copy_from_user.exit, !dbg !6807

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %23 = load i8*, i8** %to.addr.i, align 8, !dbg !6808
  %24 = load i8*, i8** %from.addr.i, align 8, !dbg !6809
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !6810
  %call2.i = call i64 @_copy_from_user(i8* %23, i8* %24, i64 %25) #12, !dbg !6811
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !6812
  br label %copy_from_user.exit, !dbg !6813

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !6814
  %tobool = icmp ne i64 %26, 0, !dbg !6815
  br i1 %tobool, label %if.then, label %if.end, !dbg !6816

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !6817
  br label %return, !dbg !6817

if.end:                                           ; preds = %copy_from_user.exit
  %call1 = call zeroext i1 @capable(i32 26) #11, !dbg !6818
  br i1 %call1, label %if.end3, label %if.then2, !dbg !6820

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %perm.addr, align 4, !dbg !6821
  br label %if.end3, !dbg !6822

if.end3:                                          ; preds = %if.then2, %if.end
  %27 = load i32, i32* %cmd.addr, align 4, !dbg !6823
  switch i32 %27, label %sw.epilog [
    i32 19270, label %sw.bb
    i32 19271, label %sw.bb48
  ], !dbg !6824

sw.bb:                                            ; preds = %if.end3
  br label %do.body, !dbg !6825

do.body:                                          ; preds = %sw.bb
  br label %do.body4, !dbg !6826

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6827, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6830, metadata !DIExpression()), !dbg !6829
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6829
  %conv = zext i1 %cmp to i32, !dbg !6829
  store i32 1, i32* %tmp5, align 4, !dbg !6829
  %28 = load i32, i32* %tmp5, align 4, !dbg !6829
  br label %do.body6, !dbg !6831

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !6832

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !6833

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !6835, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !6839, metadata !DIExpression()), !dbg !6838
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !6838
  %conv12 = zext i1 %cmp11 to i32, !dbg !6838
  store i32 1, i32* %tmp13, align 4, !dbg !6838
  %29 = load i32, i32* %tmp13, align 4, !dbg !6838
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !6840
  store i64 %call14, i64* %flags, align 8, !dbg !6840
  br label %do.end, !dbg !6840

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !6833

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !6832

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6841, !srcloc !6842
  br label %do.body17, !dbg !6841

do.body17:                                        ; preds = %do.body16
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6843
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !6844
  %rlock.i = bitcast %union.anon* %31 to %struct.raw_spinlock*, !dbg !6844
  br label %do.end19, !dbg !6845

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !6841

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6832

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !6831

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !6826

do.end23:                                         ; preds = %do.end22
  %kb_table = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 0, !dbg !6846
  %32 = load i8, i8* %kb_table, align 2, !dbg !6846
  %idxprom = zext i8 %32 to i64, !dbg !6847
  %arrayidx = getelementptr [256 x i16*], [256 x i16*]* @key_maps, i64 0, i64 %idxprom, !dbg !6847
  %33 = load i16*, i16** %arrayidx, align 8, !dbg !6847
  store i16* %33, i16** %key_map, align 8, !dbg !6848
  %34 = load i16*, i16** %key_map, align 8, !dbg !6849
  %tobool24 = icmp ne i16* %34, null, !dbg !6849
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !6851

if.then25:                                        ; preds = %do.end23
  %35 = load i16*, i16** %key_map, align 8, !dbg !6852
  %kb_index = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 1, !dbg !6852
  %36 = load i8, i8* %kb_index, align 1, !dbg !6852
  %idxprom26 = zext i8 %36 to i64, !dbg !6852
  %arrayidx27 = getelementptr i16, i16* %35, i64 %idxprom26, !dbg !6852
  %37 = load i16, i16* %arrayidx27, align 2, !dbg !6852
  %conv28 = zext i16 %37 to i32, !dbg !6852
  %xor = xor i32 %conv28, 61440, !dbg !6852
  %conv29 = trunc i32 %xor to i16, !dbg !6852
  store i16 %conv29, i16* %val, align 2, !dbg !6854
  %38 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !6855
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %38, i32 0, i32 3, !dbg !6857
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !6857
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !6857
  %bf.clear = and i8 %bf.lshr, 7, !dbg !6857
  %conv30 = zext i8 %bf.clear to i32, !dbg !6855
  %cmp31 = icmp ne i32 %conv30, 3, !dbg !6858
  br i1 %cmp31, label %land.lhs.true, label %if.end37, !dbg !6859

land.lhs.true:                                    ; preds = %if.then25
  %39 = load i16, i16* %val, align 2, !dbg !6860
  %conv33 = zext i16 %39 to i32, !dbg !6860
  %shr = ashr i32 %conv33, 8, !dbg !6860
  %cmp34 = icmp sge i32 %shr, 15, !dbg !6861
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !6862

if.then36:                                        ; preds = %land.lhs.true
  store i16 512, i16* %val, align 2, !dbg !6863
  br label %if.end37, !dbg !6864

if.end37:                                         ; preds = %if.then36, %land.lhs.true, %if.then25
  br label %if.end42, !dbg !6865

if.else:                                          ; preds = %do.end23
  %kb_index38 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 1, !dbg !6866
  %40 = load i8, i8* %kb_index38, align 1, !dbg !6866
  %conv39 = zext i8 %40 to i32, !dbg !6866
  %tobool40 = icmp ne i32 %conv39, 0, !dbg !6866
  %41 = zext i1 %tobool40 to i64, !dbg !6866
  %cond = select i1 %tobool40, i32 512, i32 639, !dbg !6866
  %conv41 = trunc i32 %cond to i16, !dbg !6867
  store i16 %conv41, i16* %val, align 2, !dbg !6868
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.end37
  %42 = load i64, i64* %flags, align 8, !dbg !6869
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i237, align 8
  store i64 %42, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !6870
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !6870
  store i32 1, i32* %tmp.i, align 4, !dbg !6870
  %43 = load i32, i32* %tmp.i, align 4, !dbg !6870
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !6871
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !6871
  store i32 1, i32* %tmp8.i, align 4, !dbg !6871
  %44 = load i32, i32* %tmp8.i, align 4, !dbg !6871
  %45 = load i64, i64* %flags.addr.i, align 8, !dbg !6872
  call void @arch_local_irq_restore(i64 %45) #12, !dbg !6872
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6873, !srcloc !4921
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i237, align 8, !dbg !6874
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !6874
  %rlock.i238 = bitcast %union.anon* %47 to %struct.raw_spinlock*, !dbg !6874
  call void @might_fault() #11, !dbg !6875
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !6877, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !6880, metadata !DIExpression()), !dbg !6879
  call void @llvm.dbg.declare(metadata i16* %__val_pu, metadata !6881, metadata !DIExpression()), !dbg !6879
  %48 = load %struct.kbentry*, %struct.kbentry** %user_kbe.addr, align 8, !dbg !6879
  %kb_value = getelementptr inbounds %struct.kbentry, %struct.kbentry* %48, i32 0, i32 2, !dbg !6879
  %49 = bitcast i16* %kb_value to i8*, !dbg !6879
  store i8* %49, i8** %__ptr_pu, align 8, !dbg !6879
  %50 = load i16, i16* %val, align 2, !dbg !6879
  store i16 %50, i16* %__val_pu, align 2, !dbg !6879
  %51 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !6879
  %52 = load i8*, i8** %__ptr_pu, align 8, !dbg !6879
  %53 = load i16, i16* %__val_pu, align 2, !dbg !6879
  %54 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %52, i16 %53, i64 2, i64 %51) #6, !dbg !6879, !srcloc !6882
  %asmresult = extractvalue { i8*, i64 } %54, 0, !dbg !6879
  %asmresult44 = extractvalue { i8*, i64 } %54, 1, !dbg !6879
  %55 = ptrtoint i8* %asmresult to i64, !dbg !6879
  %56 = trunc i64 %55 to i32, !dbg !6879
  store i32 %56, i32* %__ret_pu, align 4, !dbg !6879
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult44), !dbg !6879
  %57 = load i32, i32* %__ret_pu, align 4, !dbg !6879
  %conv46 = sext i32 %57 to i64, !dbg !6879
  store i64 %conv46, i64* %tmp45, align 8, !dbg !6879
  %58 = load i64, i64* %tmp45, align 8, !dbg !6879
  store i64 %58, i64* %tmp43, align 8, !dbg !6875
  %59 = load i64, i64* %tmp43, align 8, !dbg !6875
  %conv47 = trunc i64 %59 to i32, !dbg !6883
  store i32 %conv47, i32* %retval, align 4, !dbg !6884
  br label %return, !dbg !6884

sw.bb48:                                          ; preds = %if.end3
  %60 = load i32, i32* %perm.addr, align 4, !dbg !6885
  %tobool49 = icmp ne i32 %60, 0, !dbg !6885
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !6887

if.then50:                                        ; preds = %sw.bb48
  store i32 -1, i32* %retval, align 4, !dbg !6888
  br label %return, !dbg !6888

if.end51:                                         ; preds = %sw.bb48
  %kb_index52 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 1, !dbg !6889
  %61 = load i8, i8* %kb_index52, align 1, !dbg !6889
  %tobool53 = icmp ne i8 %61, 0, !dbg !6889
  br i1 %tobool53, label %if.end105, label %land.lhs.true54, !dbg !6890

land.lhs.true54:                                  ; preds = %if.end51
  %kb_value55 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 2, !dbg !6891
  %62 = load i16, i16* %kb_value55, align 2, !dbg !6891
  %conv56 = zext i16 %62 to i32, !dbg !6891
  %cmp57 = icmp eq i32 %conv56, 639, !dbg !6892
  br i1 %cmp57, label %if.then59, label %if.end105, !dbg !6893

if.then59:                                        ; preds = %land.lhs.true54
  br label %do.body60, !dbg !6894

do.body60:                                        ; preds = %if.then59
  br label %do.body61, !dbg !6895

do.body61:                                        ; preds = %do.body60
  call void @llvm.dbg.declare(metadata i64* %__dummy62, metadata !6896, metadata !DIExpression()), !dbg !6898
  call void @llvm.dbg.declare(metadata i64* %__dummy263, metadata !6899, metadata !DIExpression()), !dbg !6898
  %cmp64 = icmp eq i64* %__dummy62, %__dummy263, !dbg !6898
  %conv65 = zext i1 %cmp64 to i32, !dbg !6898
  store i32 1, i32* %tmp66, align 4, !dbg !6898
  %63 = load i32, i32* %tmp66, align 4, !dbg !6898
  br label %do.body67, !dbg !6900

do.body67:                                        ; preds = %do.body61
  br label %do.body68, !dbg !6901

do.body68:                                        ; preds = %do.body67
  br label %do.body69, !dbg !6902

do.body69:                                        ; preds = %do.body68
  call void @llvm.dbg.declare(metadata i64* %__dummy70, metadata !6904, metadata !DIExpression()), !dbg !6907
  call void @llvm.dbg.declare(metadata i64* %__dummy271, metadata !6908, metadata !DIExpression()), !dbg !6907
  %cmp72 = icmp eq i64* %__dummy70, %__dummy271, !dbg !6907
  %conv73 = zext i1 %cmp72 to i32, !dbg !6907
  store i32 1, i32* %tmp74, align 4, !dbg !6907
  %64 = load i32, i32* %tmp74, align 4, !dbg !6907
  %call75 = call i64 @arch_local_irq_save() #11, !dbg !6909
  store i64 %call75, i64* %flags, align 8, !dbg !6909
  br label %do.end76, !dbg !6909

do.end76:                                         ; preds = %do.body69
  br label %do.end77, !dbg !6902

do.end77:                                         ; preds = %do.end76
  br label %do.body78, !dbg !6901

do.body78:                                        ; preds = %do.end77
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6910, !srcloc !6911
  br label %do.body79, !dbg !6910

do.body79:                                        ; preds = %do.body78
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i239, align 8
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i239, align 8, !dbg !6912
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !6913
  %rlock.i240 = bitcast %union.anon* %66 to %struct.raw_spinlock*, !dbg !6913
  br label %do.end81, !dbg !6914

do.end81:                                         ; preds = %do.body79
  br label %do.end82, !dbg !6910

do.end82:                                         ; preds = %do.end81
  br label %do.end83, !dbg !6901

do.end83:                                         ; preds = %do.end82
  br label %do.end84, !dbg !6900

do.end84:                                         ; preds = %do.end83
  br label %do.end85, !dbg !6895

do.end85:                                         ; preds = %do.end84
  %kb_table86 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 0, !dbg !6915
  %67 = load i8, i8* %kb_table86, align 2, !dbg !6915
  %idxprom87 = zext i8 %67 to i64, !dbg !6916
  %arrayidx88 = getelementptr [256 x i16*], [256 x i16*]* @key_maps, i64 0, i64 %idxprom87, !dbg !6916
  %68 = load i16*, i16** %arrayidx88, align 8, !dbg !6916
  store i16* %68, i16** %key_map, align 8, !dbg !6917
  %kb_table89 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 0, !dbg !6918
  %69 = load i8, i8* %kb_table89, align 2, !dbg !6918
  %conv90 = zext i8 %69 to i32, !dbg !6918
  %tobool91 = icmp ne i32 %conv90, 0, !dbg !6918
  br i1 %tobool91, label %land.lhs.true92, label %if.end104, !dbg !6920

land.lhs.true92:                                  ; preds = %do.end85
  %70 = load i16*, i16** %key_map, align 8, !dbg !6921
  %tobool93 = icmp ne i16* %70, null, !dbg !6921
  br i1 %tobool93, label %if.then94, label %if.end104, !dbg !6922

if.then94:                                        ; preds = %land.lhs.true92
  %kb_table95 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 0, !dbg !6923
  %71 = load i8, i8* %kb_table95, align 2, !dbg !6923
  %idxprom96 = zext i8 %71 to i64, !dbg !6925
  %arrayidx97 = getelementptr [256 x i16*], [256 x i16*]* @key_maps, i64 0, i64 %idxprom96, !dbg !6925
  store i16* null, i16** %arrayidx97, align 8, !dbg !6926
  %72 = load i16*, i16** %key_map, align 8, !dbg !6927
  %arrayidx98 = getelementptr i16, i16* %72, i64 0, !dbg !6927
  %73 = load i16, i16* %arrayidx98, align 2, !dbg !6927
  %conv99 = zext i16 %73 to i32, !dbg !6927
  %cmp100 = icmp eq i32 %conv99, 62078, !dbg !6929
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !6930

if.then102:                                       ; preds = %if.then94
  %74 = load i16*, i16** %key_map, align 8, !dbg !6931
  %75 = bitcast i16* %74 to i8*, !dbg !6931
  call void @kfree(i8* %75) #11, !dbg !6933
  %76 = load i32, i32* @keymap_count, align 4, !dbg !6934
  %dec = add i32 %76, -1, !dbg !6934
  store i32 %dec, i32* @keymap_count, align 4, !dbg !6934
  br label %if.end103, !dbg !6935

if.end103:                                        ; preds = %if.then102, %if.then94
  br label %if.end104, !dbg !6936

if.end104:                                        ; preds = %if.end103, %land.lhs.true92, %do.end85
  %77 = load i64, i64* %flags, align 8, !dbg !6937
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i241, align 8
  store i64 %77, i64* %flags.addr.i242, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !6938
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !6938
  store i32 1, i32* %tmp.i243, align 4, !dbg !6938
  %78 = load i32, i32* %tmp.i243, align 4, !dbg !6938
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !6939
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !6939
  store i32 1, i32* %tmp8.i244, align 4, !dbg !6939
  %79 = load i32, i32* %tmp8.i244, align 4, !dbg !6939
  %80 = load i64, i64* %flags.addr.i242, align 8, !dbg !6940
  call void @arch_local_irq_restore(i64 %80) #12, !dbg !6940
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6941, !srcloc !4921
  %81 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i241, align 8, !dbg !6942
  %82 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %81, i32 0, i32 0, !dbg !6942
  %rlock.i245 = bitcast %union.anon* %82 to %struct.raw_spinlock*, !dbg !6942
  br label %sw.epilog, !dbg !6943

if.end105:                                        ; preds = %land.lhs.true54, %if.end51
  %kb_value106 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 2, !dbg !6944
  %83 = load i16, i16* %kb_value106, align 2, !dbg !6944
  %conv107 = zext i16 %83 to i32, !dbg !6944
  %shr108 = ashr i32 %conv107, 8, !dbg !6944
  %cmp109 = icmp slt i32 %shr108, 15, !dbg !6946
  br i1 %cmp109, label %if.then111, label %if.else123, !dbg !6947

if.then111:                                       ; preds = %if.end105
  %kb_value112 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 2, !dbg !6948
  %84 = load i16, i16* %kb_value112, align 2, !dbg !6948
  %conv113 = zext i16 %84 to i32, !dbg !6948
  %and = and i32 %conv113, 255, !dbg !6948
  %kb_value114 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 2, !dbg !6951
  %85 = load i16, i16* %kb_value114, align 2, !dbg !6951
  %conv115 = zext i16 %85 to i32, !dbg !6951
  %shr116 = ashr i32 %conv115, 8, !dbg !6951
  %idxprom117 = sext i32 %shr116 to i64, !dbg !6952
  %arrayidx118 = getelementptr [15 x i32], [15 x i32]* @max_vals, i64 0, i64 %idxprom117, !dbg !6952
  %86 = load i32, i32* %arrayidx118, align 4, !dbg !6952
  %cmp119 = icmp sgt i32 %and, %86, !dbg !6953
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !6954

if.then121:                                       ; preds = %if.then111
  store i32 -22, i32* %retval, align 4, !dbg !6955
  br label %return, !dbg !6955

if.end122:                                        ; preds = %if.then111
  br label %if.end133, !dbg !6956

if.else123:                                       ; preds = %if.end105
  %87 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !6957
  %kbdmode124 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %87, i32 0, i32 3, !dbg !6959
  %bf.load125 = load i8, i8* %kbdmode124, align 1, !dbg !6959
  %bf.lshr126 = lshr i8 %bf.load125, 4, !dbg !6959
  %bf.clear127 = and i8 %bf.lshr126, 7, !dbg !6959
  %conv128 = zext i8 %bf.clear127 to i32, !dbg !6957
  %cmp129 = icmp ne i32 %conv128, 3, !dbg !6960
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !6961

if.then131:                                       ; preds = %if.else123
  store i32 -22, i32* %retval, align 4, !dbg !6962
  br label %return, !dbg !6962

if.end132:                                        ; preds = %if.else123
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end122
  %kb_index134 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 1, !dbg !6963
  %88 = load i8, i8* %kb_index134, align 1, !dbg !6963
  %tobool135 = icmp ne i8 %88, 0, !dbg !6963
  br i1 %tobool135, label %if.end137, label %if.then136, !dbg !6965

if.then136:                                       ; preds = %if.end133
  br label %sw.epilog, !dbg !6966

if.end137:                                        ; preds = %if.end133
  store i64 512, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i247, align 4
  %89 = load i64, i64* %size.addr.i, align 8, !dbg !6967
  %90 = call i1 @llvm.is.constant.i64(i64 %89) #6, !dbg !6968
  br i1 %90, label %if.then.i248, label %if.end9.i, !dbg !6969

if.then.i248:                                     ; preds = %if.end137
  %91 = load i64, i64* %size.addr.i, align 8, !dbg !6970
  %cmp.i = icmp ugt i64 %91, 8192, !dbg !6971
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6972

if.then1.i:                                       ; preds = %if.then.i248
  %92 = load i64, i64* %size.addr.i, align 8, !dbg !6973
  %93 = load i32, i32* %flags.addr.i247, align 4, !dbg !6974
  store i64 %92, i64* %size.addr.i.i, align 8
  store i32 %93, i32* %flags.addr.i.i, align 4
  %94 = load i64, i64* %size.addr.i.i, align 8, !dbg !6975
  %call.i.i = call i32 @get_order(i64 %94) #13, !dbg !6976
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6714
  %95 = load i64, i64* %size.addr.i.i, align 8, !dbg !6977
  %96 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6978
  %97 = load i32, i32* %order.i.i, align 4, !dbg !6979
  store i64 %95, i64* %size.addr.i.i.i, align 8
  store i32 %96, i32* %flags.addr.i.i.i, align 4
  store i32 %97, i32* %order.addr.i.i.i, align 4
  %98 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6980
  %99 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6981
  %100 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6982
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %98, i32 %99, i32 %100) #12, !dbg !6983
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6983
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6983
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6983
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !6983
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6984
  br label %kmalloc.exit, !dbg !6984

if.end.i:                                         ; preds = %if.then.i248
  %101 = load i64, i64* %size.addr.i, align 8, !dbg !6985
  store i64 %101, i64* %size.addr.i11.i, align 8
  %102 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6986
  %tobool.i.i = icmp ne i64 %102, 0, !dbg !6986
  br i1 %tobool.i.i, label %if.end.i.i251, label %if.then.i.i249, !dbg !6987

if.then.i.i249:                                   ; preds = %if.end.i
  store i32 0, i32* %retval.i.i246, align 4, !dbg !6988
  br label %kmalloc_index.exit.i, !dbg !6988

if.end.i.i251:                                    ; preds = %if.end.i
  %103 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6989
  %cmp.i.i250 = icmp ule i64 %103, 8, !dbg !6990
  br i1 %cmp.i.i250, label %if.then1.i.i, label %if.end2.i.i, !dbg !6991

if.then1.i.i:                                     ; preds = %if.end.i.i251
  store i32 3, i32* %retval.i.i246, align 4, !dbg !6992
  br label %kmalloc_index.exit.i, !dbg !6992

if.end2.i.i:                                      ; preds = %if.end.i.i251
  %104 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6993
  %cmp3.i.i = icmp ugt i64 %104, 64, !dbg !6994
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6995

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %105 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6996
  %cmp4.i.i = icmp ule i64 %105, 96, !dbg !6997
  br i1 %cmp4.i.i, label %if.then5.i.i252, label %if.end6.i.i, !dbg !6998

if.then5.i.i252:                                  ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i246, align 4, !dbg !6999
  br label %kmalloc_index.exit.i, !dbg !6999

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %106 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7000
  %cmp7.i.i = icmp ugt i64 %106, 128, !dbg !7001
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7002

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %107 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7003
  %cmp9.i.i = icmp ule i64 %107, 192, !dbg !7004
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7005

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i246, align 4, !dbg !7006
  br label %kmalloc_index.exit.i, !dbg !7006

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %108 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7007
  %cmp12.i.i = icmp ule i64 %108, 8, !dbg !7008
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7009

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i246, align 4, !dbg !7010
  br label %kmalloc_index.exit.i, !dbg !7010

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %109 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7011
  %cmp15.i.i = icmp ule i64 %109, 16, !dbg !7012
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7013

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i246, align 4, !dbg !7014
  br label %kmalloc_index.exit.i, !dbg !7014

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %110 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7015
  %cmp18.i.i = icmp ule i64 %110, 32, !dbg !7016
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7017

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i246, align 4, !dbg !7018
  br label %kmalloc_index.exit.i, !dbg !7018

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %111 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7019
  %cmp21.i.i = icmp ule i64 %111, 64, !dbg !7020
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7021

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i246, align 4, !dbg !7022
  br label %kmalloc_index.exit.i, !dbg !7022

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %112 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7023
  %cmp24.i.i = icmp ule i64 %112, 128, !dbg !7024
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7025

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i246, align 4, !dbg !7026
  br label %kmalloc_index.exit.i, !dbg !7026

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %113 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7027
  %cmp27.i.i = icmp ule i64 %113, 256, !dbg !7028
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7029

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i246, align 4, !dbg !7030
  br label %kmalloc_index.exit.i, !dbg !7030

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %114 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7031
  %cmp30.i.i = icmp ule i64 %114, 512, !dbg !7032
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7033

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i246, align 4, !dbg !7034
  br label %kmalloc_index.exit.i, !dbg !7034

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %115 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7035
  %cmp33.i.i = icmp ule i64 %115, 1024, !dbg !7036
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7037

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i246, align 4, !dbg !7038
  br label %kmalloc_index.exit.i, !dbg !7038

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %116 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7039
  %cmp36.i.i = icmp ule i64 %116, 2048, !dbg !7040
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7041

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i246, align 4, !dbg !7042
  br label %kmalloc_index.exit.i, !dbg !7042

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %117 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7043
  %cmp39.i.i = icmp ule i64 %117, 4096, !dbg !7044
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7045

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i246, align 4, !dbg !7046
  br label %kmalloc_index.exit.i, !dbg !7046

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %118 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7047
  %cmp42.i.i = icmp ule i64 %118, 8192, !dbg !7048
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7049

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i246, align 4, !dbg !7050
  br label %kmalloc_index.exit.i, !dbg !7050

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %119 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7051
  %cmp45.i.i = icmp ule i64 %119, 16384, !dbg !7052
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7053

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i246, align 4, !dbg !7054
  br label %kmalloc_index.exit.i, !dbg !7054

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %120 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7055
  %cmp48.i.i = icmp ule i64 %120, 32768, !dbg !7056
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7057

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i246, align 4, !dbg !7058
  br label %kmalloc_index.exit.i, !dbg !7058

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %121 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7059
  %cmp51.i.i = icmp ule i64 %121, 65536, !dbg !7060
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7061

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i246, align 4, !dbg !7062
  br label %kmalloc_index.exit.i, !dbg !7062

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %122 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7063
  %cmp54.i.i = icmp ule i64 %122, 131072, !dbg !7064
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7065

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i246, align 4, !dbg !7066
  br label %kmalloc_index.exit.i, !dbg !7066

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %123 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7067
  %cmp57.i.i = icmp ule i64 %123, 262144, !dbg !7068
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7069

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i246, align 4, !dbg !7070
  br label %kmalloc_index.exit.i, !dbg !7070

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %124 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7071
  %cmp60.i.i = icmp ule i64 %124, 524288, !dbg !7072
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7073

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i246, align 4, !dbg !7074
  br label %kmalloc_index.exit.i, !dbg !7074

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %125 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7075
  %cmp63.i.i = icmp ule i64 %125, 1048576, !dbg !7076
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7077

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i246, align 4, !dbg !7078
  br label %kmalloc_index.exit.i, !dbg !7078

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %126 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7079
  %cmp66.i.i = icmp ule i64 %126, 2097152, !dbg !7080
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7081

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i246, align 4, !dbg !7082
  br label %kmalloc_index.exit.i, !dbg !7082

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %127 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7083
  %cmp69.i.i = icmp ule i64 %127, 4194304, !dbg !7084
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7085

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i246, align 4, !dbg !7086
  br label %kmalloc_index.exit.i, !dbg !7086

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %128 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7087
  %cmp72.i.i = icmp ule i64 %128, 8388608, !dbg !7088
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7089

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i246, align 4, !dbg !7090
  br label %kmalloc_index.exit.i, !dbg !7090

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %129 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7091
  %cmp75.i.i = icmp ule i64 %129, 16777216, !dbg !7092
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7093

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i246, align 4, !dbg !7094
  br label %kmalloc_index.exit.i, !dbg !7094

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %130 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7095
  %cmp78.i.i = icmp ule i64 %130, 33554432, !dbg !7096
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7097

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i246, align 4, !dbg !7098
  br label %kmalloc_index.exit.i, !dbg !7098

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %131 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7099
  %cmp81.i.i = icmp ule i64 %131, 67108864, !dbg !7100
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7101

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i246, align 4, !dbg !7102
  br label %kmalloc_index.exit.i, !dbg !7102

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !7103, !srcloc !6283
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 228) #6, !dbg !7104, !srcloc !6287
  unreachable, !dbg !7105

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i252, %if.then1.i.i, %if.then.i.i249
  %132 = load i32, i32* %retval.i.i246, align 4, !dbg !7106
  store i32 %132, i32* %index.i, align 4, !dbg !7107
  %133 = load i32, i32* %index.i, align 4, !dbg !7108
  %tobool.i = icmp ne i32 %133, 0, !dbg !7108
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7109

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7110
  br label %kmalloc.exit, !dbg !7110

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %134 = load i32, i32* %flags.addr.i247, align 4, !dbg !7111
  store i32 %134, i32* %flags.addr.i13.i, align 4
  %135 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7112
  %and.i.i = and i32 %135, 17, !dbg !7112
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7112
  %lnot.i.i253 = xor i1 %cmp.i14.i, true, !dbg !7112
  %lnot.ext.i.i254 = zext i1 %cmp.i14.i to i32, !dbg !7112
  %conv.i.i255 = sext i32 %lnot.ext.i.i254 to i64, !dbg !7112
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7113

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7114
  br label %kmalloc_type.exit.i, !dbg !7114

if.end.i16.i:                                     ; preds = %if.end4.i
  %136 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7115
  %and2.i.i = and i32 %136, 1, !dbg !7116
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7115
  %137 = zext i1 %tobool3.i.i to i64, !dbg !7115
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7115
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7117
  br label %kmalloc_type.exit.i, !dbg !7117

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %138 = load i32, i32* %retval.i12.i, align 4, !dbg !7118
  %idxprom.i = zext i32 %138 to i64, !dbg !7119
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7119
  %139 = load i32, i32* %index.i, align 4, !dbg !7120
  %idxprom6.i = zext i32 %139 to i64, !dbg !7119
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7119
  %140 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7119
  %141 = load i32, i32* %flags.addr.i247, align 4, !dbg !7121
  %142 = load i64, i64* %size.addr.i, align 8, !dbg !7122
  store %struct.kmem_cache* %140, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %141, i32* %flags.addr.i17.i, align 4
  store i64 %142, i64* %size.addr.i18.i, align 8
  %143 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7123
  %144 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7124
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %143, i32 %144) #12, !dbg !7125
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7125
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7125
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7125
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !7125
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6702
  %145 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7126
  %146 = load i8*, i8** %ret.i.i, align 8, !dbg !7127
  %147 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7128
  %148 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7129
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %145, i8* %146, i64 %147, i32 %148) #12, !dbg !7130
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7131
  %149 = load i8*, i8** %ret.i.i, align 8, !dbg !7132
  store i8* %149, i8** %retval.i, align 8, !dbg !7133
  br label %kmalloc.exit, !dbg !7133

if.end9.i:                                        ; preds = %if.end137
  %150 = load i64, i64* %size.addr.i, align 8, !dbg !7134
  %151 = load i32, i32* %flags.addr.i247, align 4, !dbg !7135
  %call10.i = call noalias i8* @__kmalloc(i64 %150, i32 %151) #12, !dbg !7136
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7136
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7136
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7136
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !7136
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7137
  br label %kmalloc.exit, !dbg !7137

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %152 = load i8*, i8** %retval.i, align 8, !dbg !7138
  %153 = bitcast i8* %152 to i16*, !dbg !7139
  store i16* %153, i16** %new_map, align 8, !dbg !7140
  %154 = load i16*, i16** %new_map, align 8, !dbg !7141
  %tobool139 = icmp ne i16* %154, null, !dbg !7141
  br i1 %tobool139, label %if.end141, label %if.then140, !dbg !7143

if.then140:                                       ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !7144
  br label %return, !dbg !7144

if.end141:                                        ; preds = %kmalloc.exit
  br label %do.body142, !dbg !7145

do.body142:                                       ; preds = %if.end141
  br label %do.body143, !dbg !7146

do.body143:                                       ; preds = %do.body142
  call void @llvm.dbg.declare(metadata i64* %__dummy144, metadata !7147, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.declare(metadata i64* %__dummy2145, metadata !7150, metadata !DIExpression()), !dbg !7149
  %cmp146 = icmp eq i64* %__dummy144, %__dummy2145, !dbg !7149
  %conv147 = zext i1 %cmp146 to i32, !dbg !7149
  store i32 1, i32* %tmp148, align 4, !dbg !7149
  %155 = load i32, i32* %tmp148, align 4, !dbg !7149
  br label %do.body149, !dbg !7151

do.body149:                                       ; preds = %do.body143
  br label %do.body150, !dbg !7152

do.body150:                                       ; preds = %do.body149
  br label %do.body151, !dbg !7153

do.body151:                                       ; preds = %do.body150
  call void @llvm.dbg.declare(metadata i64* %__dummy152, metadata !7155, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.declare(metadata i64* %__dummy2153, metadata !7159, metadata !DIExpression()), !dbg !7158
  %cmp154 = icmp eq i64* %__dummy152, %__dummy2153, !dbg !7158
  %conv155 = zext i1 %cmp154 to i32, !dbg !7158
  store i32 1, i32* %tmp156, align 4, !dbg !7158
  %156 = load i32, i32* %tmp156, align 4, !dbg !7158
  %call157 = call i64 @arch_local_irq_save() #11, !dbg !7160
  store i64 %call157, i64* %flags, align 8, !dbg !7160
  br label %do.end158, !dbg !7160

do.end158:                                        ; preds = %do.body151
  br label %do.end159, !dbg !7153

do.end159:                                        ; preds = %do.end158
  br label %do.body160, !dbg !7152

do.body160:                                       ; preds = %do.end159
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7161, !srcloc !7162
  br label %do.body161, !dbg !7161

do.body161:                                       ; preds = %do.body160
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i256, align 8
  %157 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i256, align 8, !dbg !7163
  %158 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %157, i32 0, i32 0, !dbg !7164
  %rlock.i257 = bitcast %union.anon* %158 to %struct.raw_spinlock*, !dbg !7164
  br label %do.end163, !dbg !7165

do.end163:                                        ; preds = %do.body161
  br label %do.end164, !dbg !7161

do.end164:                                        ; preds = %do.end163
  br label %do.end165, !dbg !7152

do.end165:                                        ; preds = %do.end164
  br label %do.end166, !dbg !7151

do.end166:                                        ; preds = %do.end165
  br label %do.end167, !dbg !7146

do.end167:                                        ; preds = %do.end166
  %kb_table168 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 0, !dbg !7166
  %159 = load i8, i8* %kb_table168, align 2, !dbg !7166
  %idxprom169 = zext i8 %159 to i64, !dbg !7167
  %arrayidx170 = getelementptr [256 x i16*], [256 x i16*]* @key_maps, i64 0, i64 %idxprom169, !dbg !7167
  %160 = load i16*, i16** %arrayidx170, align 8, !dbg !7167
  store i16* %160, i16** %key_map, align 8, !dbg !7168
  %161 = load i16*, i16** %key_map, align 8, !dbg !7169
  %cmp171 = icmp eq i16* %161, null, !dbg !7170
  br i1 %cmp171, label %if.then173, label %if.else189, !dbg !7171

if.then173:                                       ; preds = %do.end167
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7172, metadata !DIExpression()), !dbg !7173
  %162 = load i32, i32* @keymap_count, align 4, !dbg !7174
  %cmp174 = icmp uge i32 %162, 256, !dbg !7175
  br i1 %cmp174, label %land.lhs.true176, label %if.end179, !dbg !7176

land.lhs.true176:                                 ; preds = %if.then173
  %call177 = call zeroext i1 @capable(i32 24) #11, !dbg !7177
  br i1 %call177, label %if.end179, label %if.then178, !dbg !7178

if.then178:                                       ; preds = %land.lhs.true176
  %163 = load i64, i64* %flags, align 8, !dbg !7179
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i258, align 8
  store i64 %163, i64* %flags.addr.i259, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !7180
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !7180
  store i32 1, i32* %tmp.i260, align 4, !dbg !7180
  %164 = load i32, i32* %tmp.i260, align 4, !dbg !7180
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !7181
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !7181
  store i32 1, i32* %tmp8.i261, align 4, !dbg !7181
  %165 = load i32, i32* %tmp8.i261, align 4, !dbg !7181
  %166 = load i64, i64* %flags.addr.i259, align 8, !dbg !7182
  call void @arch_local_irq_restore(i64 %166) #12, !dbg !7182
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7183, !srcloc !4921
  %167 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i258, align 8, !dbg !7184
  %168 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %167, i32 0, i32 0, !dbg !7184
  %rlock.i262 = bitcast %union.anon* %168 to %struct.raw_spinlock*, !dbg !7184
  %169 = load i16*, i16** %new_map, align 8, !dbg !7185
  %170 = bitcast i16* %169 to i8*, !dbg !7185
  call void @kfree(i8* %170) #11, !dbg !7186
  store i32 -1, i32* %retval, align 4, !dbg !7187
  br label %return, !dbg !7187

if.end179:                                        ; preds = %land.lhs.true176, %if.then173
  %171 = load i16*, i16** %new_map, align 8, !dbg !7188
  %kb_table180 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 0, !dbg !7189
  %172 = load i8, i8* %kb_table180, align 2, !dbg !7189
  %idxprom181 = zext i8 %172 to i64, !dbg !7190
  %arrayidx182 = getelementptr [256 x i16*], [256 x i16*]* @key_maps, i64 0, i64 %idxprom181, !dbg !7190
  store i16* %171, i16** %arrayidx182, align 8, !dbg !7191
  %173 = load i16*, i16** %new_map, align 8, !dbg !7192
  store i16* %173, i16** %key_map, align 8, !dbg !7193
  %174 = load i16*, i16** %key_map, align 8, !dbg !7194
  %arrayidx183 = getelementptr i16, i16* %174, i64 0, !dbg !7194
  store i16 -3458, i16* %arrayidx183, align 2, !dbg !7195
  store i32 1, i32* %j, align 4, !dbg !7196
  br label %for.cond, !dbg !7198

for.cond:                                         ; preds = %for.inc, %if.end179
  %175 = load i32, i32* %j, align 4, !dbg !7199
  %cmp184 = icmp slt i32 %175, 256, !dbg !7201
  br i1 %cmp184, label %for.body, label %for.end, !dbg !7202

for.body:                                         ; preds = %for.cond
  %176 = load i16*, i16** %key_map, align 8, !dbg !7203
  %177 = load i32, i32* %j, align 4, !dbg !7204
  %idxprom186 = sext i32 %177 to i64, !dbg !7203
  %arrayidx187 = getelementptr i16, i16* %176, i64 %idxprom186, !dbg !7203
  store i16 -3584, i16* %arrayidx187, align 2, !dbg !7205
  br label %for.inc, !dbg !7203

for.inc:                                          ; preds = %for.body
  %178 = load i32, i32* %j, align 4, !dbg !7206
  %inc = add i32 %178, 1, !dbg !7206
  store i32 %inc, i32* %j, align 4, !dbg !7206
  br label %for.cond, !dbg !7207, !llvm.loop !7208

for.end:                                          ; preds = %for.cond
  %179 = load i32, i32* @keymap_count, align 4, !dbg !7210
  %inc188 = add i32 %179, 1, !dbg !7210
  store i32 %inc188, i32* @keymap_count, align 4, !dbg !7210
  br label %if.end190, !dbg !7211

if.else189:                                       ; preds = %do.end167
  %180 = load i16*, i16** %new_map, align 8, !dbg !7212
  %181 = bitcast i16* %180 to i8*, !dbg !7212
  call void @kfree(i8* %181) #11, !dbg !7213
  br label %if.end190

if.end190:                                        ; preds = %if.else189, %for.end
  %182 = load i16*, i16** %key_map, align 8, !dbg !7214
  %kb_index191 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 1, !dbg !7214
  %183 = load i8, i8* %kb_index191, align 1, !dbg !7214
  %idxprom192 = zext i8 %183 to i64, !dbg !7214
  %arrayidx193 = getelementptr i16, i16* %182, i64 %idxprom192, !dbg !7214
  %184 = load i16, i16* %arrayidx193, align 2, !dbg !7214
  %conv194 = zext i16 %184 to i32, !dbg !7214
  %xor195 = xor i32 %conv194, 61440, !dbg !7214
  %conv196 = trunc i32 %xor195 to i16, !dbg !7214
  store i16 %conv196, i16* %ov, align 2, !dbg !7215
  %kb_value197 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 2, !dbg !7216
  %185 = load i16, i16* %kb_value197, align 2, !dbg !7216
  %conv198 = zext i16 %185 to i32, !dbg !7216
  %186 = load i16, i16* %ov, align 2, !dbg !7218
  %conv199 = zext i16 %186 to i32, !dbg !7218
  %cmp200 = icmp eq i32 %conv198, %conv199, !dbg !7219
  br i1 %cmp200, label %if.then202, label %if.end203, !dbg !7220

if.then202:                                       ; preds = %if.end190
  br label %out, !dbg !7221

if.end203:                                        ; preds = %if.end190
  %187 = load i16, i16* %ov, align 2, !dbg !7222
  %conv204 = zext i16 %187 to i32, !dbg !7222
  %cmp205 = icmp eq i32 %conv204, 527, !dbg !7223
  br i1 %cmp205, label %land.lhs.true211, label %lor.lhs.false, !dbg !7224

lor.lhs.false:                                    ; preds = %if.end203
  %kb_value207 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 2, !dbg !7225
  %188 = load i16, i16* %kb_value207, align 2, !dbg !7225
  %conv208 = zext i16 %188 to i32, !dbg !7225
  %cmp209 = icmp eq i32 %conv208, 527, !dbg !7226
  br i1 %cmp209, label %land.lhs.true211, label %if.end214, !dbg !7227

land.lhs.true211:                                 ; preds = %lor.lhs.false, %if.end203
  %call212 = call zeroext i1 @capable(i32 21) #11, !dbg !7228
  br i1 %call212, label %if.end214, label %if.then213, !dbg !7229

if.then213:                                       ; preds = %land.lhs.true211
  %189 = load i64, i64* %flags, align 8, !dbg !7230
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i263, align 8
  store i64 %189, i64* %flags.addr.i264, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !7231
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !7231
  store i32 1, i32* %tmp.i265, align 4, !dbg !7231
  %190 = load i32, i32* %tmp.i265, align 4, !dbg !7231
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !7232
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !7232
  store i32 1, i32* %tmp8.i266, align 4, !dbg !7232
  %191 = load i32, i32* %tmp8.i266, align 4, !dbg !7232
  %192 = load i64, i64* %flags.addr.i264, align 8, !dbg !7233
  call void @arch_local_irq_restore(i64 %192) #12, !dbg !7233
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7234, !srcloc !4921
  %193 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i263, align 8, !dbg !7235
  %194 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %193, i32 0, i32 0, !dbg !7235
  %rlock.i267 = bitcast %union.anon* %194 to %struct.raw_spinlock*, !dbg !7235
  store i32 -1, i32* %retval, align 4, !dbg !7236
  br label %return, !dbg !7236

if.end214:                                        ; preds = %land.lhs.true211, %lor.lhs.false
  %kb_value215 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 2, !dbg !7237
  %195 = load i16, i16* %kb_value215, align 2, !dbg !7237
  %conv216 = zext i16 %195 to i32, !dbg !7237
  %xor217 = xor i32 %conv216, 61440, !dbg !7237
  %conv218 = trunc i32 %xor217 to i16, !dbg !7237
  %196 = load i16*, i16** %key_map, align 8, !dbg !7238
  %kb_index219 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 1, !dbg !7239
  %197 = load i8, i8* %kb_index219, align 1, !dbg !7239
  %idxprom220 = zext i8 %197 to i64, !dbg !7238
  %arrayidx221 = getelementptr i16, i16* %196, i64 %idxprom220, !dbg !7238
  store i16 %conv218, i16* %arrayidx221, align 2, !dbg !7240
  %kb_table222 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 0, !dbg !7241
  %198 = load i8, i8* %kb_table222, align 2, !dbg !7241
  %tobool223 = icmp ne i8 %198, 0, !dbg !7241
  br i1 %tobool223, label %if.end236, label %land.lhs.true224, !dbg !7243

land.lhs.true224:                                 ; preds = %if.end214
  %199 = load i16, i16* %ov, align 2, !dbg !7244
  %conv225 = zext i16 %199 to i32, !dbg !7244
  %shr226 = ashr i32 %conv225, 8, !dbg !7244
  %cmp227 = icmp eq i32 %shr226, 7, !dbg !7245
  br i1 %cmp227, label %if.then235, label %lor.lhs.false229, !dbg !7246

lor.lhs.false229:                                 ; preds = %land.lhs.true224
  %kb_value230 = getelementptr inbounds %struct.kbentry, %struct.kbentry* %tmp, i32 0, i32 2, !dbg !7247
  %200 = load i16, i16* %kb_value230, align 2, !dbg !7247
  %conv231 = zext i16 %200 to i32, !dbg !7247
  %shr232 = ashr i32 %conv231, 8, !dbg !7247
  %cmp233 = icmp eq i32 %shr232, 7, !dbg !7248
  br i1 %cmp233, label %if.then235, label %if.end236, !dbg !7249

if.then235:                                       ; preds = %lor.lhs.false229, %land.lhs.true224
  call void @do_compute_shiftstate() #11, !dbg !7250
  br label %if.end236, !dbg !7250

if.end236:                                        ; preds = %if.then235, %lor.lhs.false229, %if.end214
  br label %out, !dbg !7251

out:                                              ; preds = %if.end236, %if.then202
  call void @llvm.dbg.label(metadata !7252), !dbg !7253
  %201 = load i64, i64* %flags, align 8, !dbg !7254
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i268, align 8
  store i64 %201, i64* %flags.addr.i269, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !7255
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !7255
  store i32 1, i32* %tmp.i270, align 4, !dbg !7255
  %202 = load i32, i32* %tmp.i270, align 4, !dbg !7255
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !7256
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !7256
  store i32 1, i32* %tmp8.i271, align 4, !dbg !7256
  %203 = load i32, i32* %tmp8.i271, align 4, !dbg !7256
  %204 = load i64, i64* %flags.addr.i269, align 8, !dbg !7257
  call void @arch_local_irq_restore(i64 %204) #12, !dbg !7257
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7258, !srcloc !4921
  %205 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i268, align 8, !dbg !7259
  %206 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %205, i32 0, i32 0, !dbg !7259
  %rlock.i272 = bitcast %union.anon* %206 to %struct.raw_spinlock*, !dbg !7259
  br label %sw.epilog, !dbg !7260

sw.epilog:                                        ; preds = %if.end3, %out, %if.then136, %if.end104
  store i32 0, i32* %retval, align 4, !dbg !7261
  br label %return, !dbg !7261

return:                                           ; preds = %sw.epilog, %if.then213, %if.then178, %if.then140, %if.then131, %if.then121, %if.then50, %if.end42, %if.then
  %207 = load i32, i32* %retval, align 4, !dbg !7262
  ret i32 %207, !dbg !7262
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_do_kdgkb_ioctl(i32 %cmd, %struct.kbsentry* %user_kdgkb, i32 %perm) #0 !dbg !7263 {
entry:
  %lock.addr.i446 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i446, metadata !4860, metadata !DIExpression()), !dbg !7274
  %flags.addr.i447 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i447, metadata !4867, metadata !DIExpression()), !dbg !7277
  %tmp.i448 = alloca i32, align 4
  %tmp8.i449 = alloca i32, align 4
  %s.addr.i.i301 = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i301, metadata !6034, metadata !DIExpression()), !dbg !7278
  %flags.addr.i17.i302 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i302, metadata !6047, metadata !DIExpression()), !dbg !7285
  %size.addr.i18.i303 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i303, metadata !6049, metadata !DIExpression()), !dbg !7286
  %ret.i.i304 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i304, metadata !6051, metadata !DIExpression()), !dbg !7287
  %retval.i12.i305 = alloca i32, align 4
  %flags.addr.i13.i306 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i306, metadata !6053, metadata !DIExpression()), !dbg !7288
  %retval.i.i307 = alloca i32, align 4
  %size.addr.i11.i308 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i308, metadata !6059, metadata !DIExpression()), !dbg !7290
  %size.addr.i.i.i309 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i309, metadata !6065, metadata !DIExpression()), !dbg !7292
  %flags.addr.i.i.i310 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i310, metadata !6074, metadata !DIExpression()), !dbg !7295
  %order.addr.i.i.i311 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i311, metadata !6076, metadata !DIExpression()), !dbg !7296
  %size.addr.i.i312 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i312, metadata !6078, metadata !DIExpression()), !dbg !7297
  %flags.addr.i.i313 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i313, metadata !6080, metadata !DIExpression()), !dbg !7298
  %order.i.i314 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i314, metadata !6082, metadata !DIExpression()), !dbg !7299
  %retval.i315 = alloca i8*, align 8
  %size.addr.i316 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i316, metadata !6084, metadata !DIExpression()), !dbg !7300
  %flags.addr.i317 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i317, metadata !6086, metadata !DIExpression()), !dbg !7301
  %index.i318 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i318, metadata !6088, metadata !DIExpression()), !dbg !7302
  %lock.addr.i296 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i296, metadata !4860, metadata !DIExpression()), !dbg !7303
  %flags.addr.i297 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i297, metadata !4867, metadata !DIExpression()), !dbg !7305
  %tmp.i298 = alloca i32, align 4
  %tmp8.i299 = alloca i32, align 4
  %lock.addr.i294 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i294, metadata !4869, metadata !DIExpression()), !dbg !7306
  %retval.i.i243 = alloca i1, align 1
  %addr.addr.i.i244 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i244, metadata !5465, metadata !DIExpression()), !dbg !7313
  %bytes.addr.i.i245 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i245, metadata !5481, metadata !DIExpression()), !dbg !7317
  %is_source.addr.i.i246 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i246, metadata !5483, metadata !DIExpression()), !dbg !7318
  %sz.i.i247 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i247, metadata !5485, metadata !DIExpression()), !dbg !7319
  %__ret_warn_on.i.i248 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i248, metadata !5487, metadata !DIExpression()), !dbg !7320
  %tmp.i.i249 = alloca i64, align 8
  %to.addr.i250 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i250, metadata !5491, metadata !DIExpression()), !dbg !7321
  %from.addr.i251 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i251, metadata !5493, metadata !DIExpression()), !dbg !7322
  %n.addr.i252 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i252, metadata !5495, metadata !DIExpression()), !dbg !7323
  %lock.addr.i240 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i240, metadata !4860, metadata !DIExpression()), !dbg !7324
  %flags.addr.i241 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i241, metadata !4867, metadata !DIExpression()), !dbg !7326
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !7327
  %retval.i.i230 = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5465, metadata !DIExpression()), !dbg !7334
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5481, metadata !DIExpression()), !dbg !7338
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5483, metadata !DIExpression()), !dbg !7339
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5485, metadata !DIExpression()), !dbg !7340
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5487, metadata !DIExpression()), !dbg !7341
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6534, metadata !DIExpression()), !dbg !7342
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6536, metadata !DIExpression()), !dbg !7343
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6538, metadata !DIExpression()), !dbg !7344
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6034, metadata !DIExpression()), !dbg !7345
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6047, metadata !DIExpression()), !dbg !7348
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6049, metadata !DIExpression()), !dbg !7349
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6051, metadata !DIExpression()), !dbg !7350
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6053, metadata !DIExpression()), !dbg !7351
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6059, metadata !DIExpression()), !dbg !7353
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6065, metadata !DIExpression()), !dbg !7355
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6074, metadata !DIExpression()), !dbg !7358
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6076, metadata !DIExpression()), !dbg !7359
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6078, metadata !DIExpression()), !dbg !7360
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6080, metadata !DIExpression()), !dbg !7361
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6082, metadata !DIExpression()), !dbg !7362
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6084, metadata !DIExpression()), !dbg !7363
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6086, metadata !DIExpression()), !dbg !7364
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6088, metadata !DIExpression()), !dbg !7365
  %cmd.addr = alloca i32, align 4
  %user_kdgkb.addr = alloca %struct.kbsentry*, align 8
  %perm.addr = alloca i32, align 4
  %kbs = alloca %struct.kbsentry*, align 8
  %q = alloca i8*, align 8
  %sz = alloca i32, align 4
  %fnw_sz = alloca i32, align 4
  %delta = alloca i32, align 4
  %first_free = alloca i8*, align 8
  %fj = alloca i8*, align 8
  %fnw = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %_i = alloca i8, align 1
  %_s = alloca i32, align 4
  %_mask = alloca i64, align 8
  %tmp = alloca i8, align 1
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  %__dummy55 = alloca i64, align 8
  %__dummy256 = alloca i64, align 8
  %tmp59 = alloca i32, align 4
  %__dummy63 = alloca i64, align 8
  %__dummy264 = alloca i64, align 8
  %tmp67 = alloca i32, align 4
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !7366, metadata !DIExpression()), !dbg !7367
  store %struct.kbsentry* %user_kdgkb, %struct.kbsentry** %user_kdgkb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbsentry** %user_kdgkb.addr, metadata !7368, metadata !DIExpression()), !dbg !7369
  store i32 %perm, i32* %perm.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %perm.addr, metadata !7370, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.declare(metadata %struct.kbsentry** %kbs, metadata !7372, metadata !DIExpression()), !dbg !7373
  call void @llvm.dbg.declare(metadata i8** %q, metadata !7374, metadata !DIExpression()), !dbg !7377
  call void @llvm.dbg.declare(metadata i32* %sz, metadata !7378, metadata !DIExpression()), !dbg !7379
  call void @llvm.dbg.declare(metadata i32* %fnw_sz, metadata !7380, metadata !DIExpression()), !dbg !7381
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !7382, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.declare(metadata i8** %first_free, metadata !7384, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.declare(metadata i8** %fj, metadata !7386, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.declare(metadata i8** %fnw, metadata !7388, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7390, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7392, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7394, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7396, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7398, metadata !DIExpression()), !dbg !7399
  %call = call zeroext i1 @capable(i32 26) #11, !dbg !7400
  br i1 %call, label %if.end, label %if.then, !dbg !7402

if.then:                                          ; preds = %entry
  store i32 0, i32* %perm.addr, align 4, !dbg !7403
  br label %if.end, !dbg !7404

if.end:                                           ; preds = %if.then, %entry
  store i64 513, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !7405
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #6, !dbg !7406
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !7407

if.then.i:                                        ; preds = %if.end
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7408
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !7409
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7410

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !7411
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !7412
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7413
  %call.i.i = call i32 @get_order(i64 %5) #13, !dbg !7414
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7362
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !7415
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7416
  %8 = load i32, i32* %order.i.i, align 4, !dbg !7417
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7418
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7419
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7420
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #12, !dbg !7421
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7421
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7421
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7421
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !7421
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7422
  br label %kmalloc.exit, !dbg !7422

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !7423
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7424
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !7424
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7425

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7426
  br label %kmalloc_index.exit.i, !dbg !7426

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7427
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !7428
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7429

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7430
  br label %kmalloc_index.exit.i, !dbg !7430

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7431
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !7432
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7433

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7434
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !7435
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7436

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7437
  br label %kmalloc_index.exit.i, !dbg !7437

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7438
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !7439
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7440

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7441
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !7442
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7443

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7444
  br label %kmalloc_index.exit.i, !dbg !7444

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7445
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !7446
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7447

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7448
  br label %kmalloc_index.exit.i, !dbg !7448

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7449
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !7450
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7451

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7452
  br label %kmalloc_index.exit.i, !dbg !7452

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7453
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !7454
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7455

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7456
  br label %kmalloc_index.exit.i, !dbg !7456

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7457
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !7458
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7459

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7460
  br label %kmalloc_index.exit.i, !dbg !7460

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7461
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !7462
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7463

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7464
  br label %kmalloc_index.exit.i, !dbg !7464

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7465
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !7466
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7467

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7468
  br label %kmalloc_index.exit.i, !dbg !7468

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7469
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !7470
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7471

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7472
  br label %kmalloc_index.exit.i, !dbg !7472

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7473
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !7474
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7475

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7476
  br label %kmalloc_index.exit.i, !dbg !7476

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7477
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !7478
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7479

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7480
  br label %kmalloc_index.exit.i, !dbg !7480

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7481
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !7482
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7483

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7484
  br label %kmalloc_index.exit.i, !dbg !7484

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7485
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !7486
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7487

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7488
  br label %kmalloc_index.exit.i, !dbg !7488

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7489
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !7490
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7491

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7492
  br label %kmalloc_index.exit.i, !dbg !7492

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7493
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !7494
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7495

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7496
  br label %kmalloc_index.exit.i, !dbg !7496

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7497
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !7498
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7499

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7500
  br label %kmalloc_index.exit.i, !dbg !7500

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7501
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !7502
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7503

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7504
  br label %kmalloc_index.exit.i, !dbg !7504

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7505
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !7506
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7507

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7508
  br label %kmalloc_index.exit.i, !dbg !7508

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7509
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !7510
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7511

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7512
  br label %kmalloc_index.exit.i, !dbg !7512

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7513
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !7514
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7515

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7516
  br label %kmalloc_index.exit.i, !dbg !7516

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7517
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !7518
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7519

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7520
  br label %kmalloc_index.exit.i, !dbg !7520

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7521
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !7522
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7523

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7524
  br label %kmalloc_index.exit.i, !dbg !7524

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7525
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !7526
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7527

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7528
  br label %kmalloc_index.exit.i, !dbg !7528

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7529
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !7530
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7531

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7532
  br label %kmalloc_index.exit.i, !dbg !7532

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7533
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !7534
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7535

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7536
  br label %kmalloc_index.exit.i, !dbg !7536

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7537
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !7538
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7539

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7540
  br label %kmalloc_index.exit.i, !dbg !7540

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !7541, !srcloc !6283
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 228) #6, !dbg !7542, !srcloc !6287
  unreachable, !dbg !7543

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !7544
  store i32 %43, i32* %index.i, align 4, !dbg !7545
  %44 = load i32, i32* %index.i, align 4, !dbg !7546
  %tobool.i = icmp ne i32 %44, 0, !dbg !7546
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7547

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7548
  br label %kmalloc.exit, !dbg !7548

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !7549
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7550
  %and.i.i = and i32 %46, 17, !dbg !7550
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7550
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7550
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7550
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7550
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7551

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7552
  br label %kmalloc_type.exit.i, !dbg !7552

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7553
  %and2.i.i = and i32 %47, 1, !dbg !7554
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7553
  %48 = zext i1 %tobool3.i.i to i64, !dbg !7553
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7553
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7555
  br label %kmalloc_type.exit.i, !dbg !7555

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !7556
  %idxprom.i = zext i32 %49 to i64, !dbg !7557
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7557
  %50 = load i32, i32* %index.i, align 4, !dbg !7558
  %idxprom6.i = zext i32 %50 to i64, !dbg !7557
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7557
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7557
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !7559
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !7560
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7561
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7562
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #12, !dbg !7563
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7563
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7563
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7563
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !7563
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7350
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7564
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !7565
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7566
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7567
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #12, !dbg !7568
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7569
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !7570
  store i8* %60, i8** %retval.i, align 8, !dbg !7571
  br label %kmalloc.exit, !dbg !7571

if.end9.i:                                        ; preds = %if.end
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !7572
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !7573
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #12, !dbg !7574
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7574
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7574
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7574
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !7574
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7575
  br label %kmalloc.exit, !dbg !7575

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !7576
  %64 = bitcast i8* %63 to %struct.kbsentry*, !dbg !7577
  store %struct.kbsentry* %64, %struct.kbsentry** %kbs, align 8, !dbg !7578
  %65 = load %struct.kbsentry*, %struct.kbsentry** %kbs, align 8, !dbg !7579
  %tobool = icmp ne %struct.kbsentry* %65, null, !dbg !7579
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !7581

if.then2:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %ret, align 4, !dbg !7582
  br label %reterr, !dbg !7584

if.end3:                                          ; preds = %kmalloc.exit
  %66 = load %struct.kbsentry*, %struct.kbsentry** %kbs, align 8, !dbg !7585
  %67 = bitcast %struct.kbsentry* %66 to i8*, !dbg !7585
  %68 = load %struct.kbsentry*, %struct.kbsentry** %user_kdgkb.addr, align 8, !dbg !7586
  %69 = bitcast %struct.kbsentry* %68 to i8*, !dbg !7586
  store i8* %67, i8** %to.addr.i, align 8
  store i8* %69, i8** %from.addr.i, align 8
  store i64 513, i64* %n.addr.i, align 8
  %70 = load i8*, i8** %to.addr.i, align 8, !dbg !7587
  %71 = load i64, i64* %n.addr.i, align 8, !dbg !7587
  store i8* %70, i8** %addr.addr.i.i, align 8
  store i64 %71, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7340
  %72 = load i32, i32* %sz.i.i, align 4, !dbg !7588
  %cmp.i.i231 = icmp sge i32 %72, 0, !dbg !7588
  br i1 %cmp.i.i231, label %land.rhs.i.i, label %land.end.i.i, !dbg !7588

land.rhs.i.i:                                     ; preds = %if.end3
  %73 = load i32, i32* %sz.i.i, align 4, !dbg !7588
  %conv.i.i232 = sext i32 %73 to i64, !dbg !7588
  %74 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7588
  %cmp1.i.i = icmp ult i64 %conv.i.i232, %74, !dbg !7588
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end3
  %75 = phi i1 [ false, %if.end3 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7589
  %lnot.i.i233 = xor i1 %75, true, !dbg !7588
  %lnot.ext.i.i234 = zext i1 %75 to i32, !dbg !7588
  %conv4.i.i = sext i32 %lnot.ext.i.i234 to i64, !dbg !7588
  br i1 %75, label %if.then.i.i235, label %if.end10.i.i, !dbg !7590

if.then.i.i235:                                   ; preds = %land.end.i.i
  %76 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7591
  %77 = call i1 @llvm.is.constant.i64(i64 %76) #6, !dbg !7592
  br i1 %77, label %if.else.i.i, label %if.then5.i.i236, !dbg !7593

if.then5.i.i236:                                  ; preds = %if.then.i.i235
  %78 = load i32, i32* %sz.i.i, align 4, !dbg !7594
  %79 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7595
  call void @copy_overflow(i32 %78, i64 %79) #12, !dbg !7596
  br label %if.end9.i.i, !dbg !7596

if.else.i.i:                                      ; preds = %if.then.i.i235
  %80 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7597
  %tobool6.i.i = trunc i8 %80 to i1, !dbg !7597
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7598

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !7599
  br label %if.end.i.i237, !dbg !7599

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !7600
  br label %if.end.i.i237

if.end.i.i237:                                    ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i237, %if.then5.i.i236
  store i1 false, i1* %retval.i.i230, align 1, !dbg !7601
  br label %check_copy_size.exit.i, !dbg !7601

if.end10.i.i:                                     ; preds = %land.end.i.i
  %81 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7341
  %cmp11.i.i = icmp ugt i64 %81, 2147483647, !dbg !7341
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7341
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7341
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7341
  %82 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7602
  %tobool17.i.i = icmp ne i32 %82, 0, !dbg !7602
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7602
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7602
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7602
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7341

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !7603, !srcloc !5680
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #6, !dbg !7604, !srcloc !5683
  br label %if.end31.i.i, !dbg !7605

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %83 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7341
  %tobool32.i.i = icmp ne i32 %83, 0, !dbg !7341
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7341
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7341
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7341
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7602
  %84 = load i64, i64* %tmp.i.i, align 8, !dbg !7341
  %tobool38.i.i = icmp ne i64 %84, 0, !dbg !7606
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7607

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i230, align 1, !dbg !7608
  br label %check_copy_size.exit.i, !dbg !7608

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %85 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7609
  %86 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7610
  %87 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7611
  %tobool41.i.i = trunc i8 %87 to i1, !dbg !7611
  call void @check_object_size(i8* %85, i64 %86, i1 zeroext %tobool41.i.i) #12, !dbg !7612
  store i1 true, i1* %retval.i.i230, align 1, !dbg !7613
  br label %check_copy_size.exit.i, !dbg !7613

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %88 = load i1, i1* %retval.i.i230, align 1, !dbg !7614
  %lnot.i = xor i1 %88, true, !dbg !7587
  %lnot.ext.i = zext i1 %88 to i32, !dbg !7587
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7587
  br i1 %88, label %if.then.i238, label %copy_from_user.exit, !dbg !7615

if.then.i238:                                     ; preds = %check_copy_size.exit.i
  %89 = load i8*, i8** %to.addr.i, align 8, !dbg !7616
  %90 = load i8*, i8** %from.addr.i, align 8, !dbg !7617
  %91 = load i64, i64* %n.addr.i, align 8, !dbg !7618
  %call2.i = call i64 @_copy_from_user(i8* %89, i8* %90, i64 %91) #12, !dbg !7619
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7620
  br label %copy_from_user.exit, !dbg !7621

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i238
  %92 = load i64, i64* %n.addr.i, align 8, !dbg !7622
  %tobool5 = icmp ne i64 %92, 0, !dbg !7623
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7624

if.then6:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !7625
  br label %reterr, !dbg !7627

if.end7:                                          ; preds = %copy_from_user.exit
  %93 = load %struct.kbsentry*, %struct.kbsentry** %kbs, align 8, !dbg !7628
  %kb_string = getelementptr inbounds %struct.kbsentry, %struct.kbsentry* %93, i32 0, i32 1, !dbg !7629
  %arrayidx = getelementptr [512 x i8], [512 x i8]* %kb_string, i64 0, i64 511, !dbg !7628
  store i8 0, i8* %arrayidx, align 1, !dbg !7630
  call void @llvm.dbg.declare(metadata i8* %_i, metadata !7631, metadata !DIExpression()), !dbg !7633
  %94 = load %struct.kbsentry*, %struct.kbsentry** %kbs, align 8, !dbg !7633
  %kb_func = getelementptr inbounds %struct.kbsentry, %struct.kbsentry* %94, i32 0, i32 0, !dbg !7633
  %95 = load i8, i8* %kb_func, align 1, !dbg !7633
  store i8 %95, i8* %_i, align 1, !dbg !7633
  call void @llvm.dbg.declare(metadata i32* %_s, metadata !7634, metadata !DIExpression()), !dbg !7633
  store i32 256, i32* %_s, align 4, !dbg !7633
  call void @llvm.dbg.declare(metadata i64* %_mask, metadata !7635, metadata !DIExpression()), !dbg !7633
  %96 = load i8, i8* %_i, align 1, !dbg !7633
  %conv = zext i8 %96 to i64, !dbg !7633
  %97 = load i32, i32* %_s, align 4, !dbg !7633
  %conv8 = sext i32 %97 to i64, !dbg !7633
  %call9 = call i64 @array_index_mask_nospec(i64 %conv, i64 %conv8) #11, !dbg !7633
  store i64 %call9, i64* %_mask, align 8, !dbg !7633
  br label %do.body, !dbg !7633

do.body:                                          ; preds = %if.end7
  br label %do.end, !dbg !7636

do.end:                                           ; preds = %do.body
  br label %do.body10, !dbg !7633

do.body10:                                        ; preds = %do.end
  br label %do.end11, !dbg !7638

do.end11:                                         ; preds = %do.body10
  %98 = load i8, i8* %_i, align 1, !dbg !7633
  %conv12 = zext i8 %98 to i64, !dbg !7633
  %99 = load i64, i64* %_mask, align 8, !dbg !7633
  %and = and i64 %conv12, %99, !dbg !7633
  %conv13 = trunc i64 %and to i8, !dbg !7633
  store i8 %conv13, i8* %tmp, align 1, !dbg !7638
  %100 = load i8, i8* %tmp, align 1, !dbg !7633
  %conv14 = zext i8 %100 to i32, !dbg !7640
  store i32 %conv14, i32* %i, align 4, !dbg !7641
  %101 = load i32, i32* %cmd.addr, align 4, !dbg !7642
  switch i32 %101, label %sw.epilog [
    i32 19272, label %sw.bb
    i32 19273, label %sw.bb49
  ], !dbg !7643

sw.bb:                                            ; preds = %do.end11
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7644, metadata !DIExpression()), !dbg !7645
  store i64 512, i64* %len, align 8, !dbg !7645
  br label %do.body15, !dbg !7646

do.body15:                                        ; preds = %sw.bb
  br label %do.body16, !dbg !7647

do.body16:                                        ; preds = %do.body15
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7648, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7651, metadata !DIExpression()), !dbg !7650
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7650
  %conv17 = zext i1 %cmp to i32, !dbg !7650
  store i32 1, i32* %tmp18, align 4, !dbg !7650
  %102 = load i32, i32* %tmp18, align 4, !dbg !7650
  br label %do.body19, !dbg !7652

do.body19:                                        ; preds = %do.body16
  br label %do.body20, !dbg !7653

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !7654

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !7656, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !7660, metadata !DIExpression()), !dbg !7659
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !7659
  %conv25 = zext i1 %cmp24 to i32, !dbg !7659
  store i32 1, i32* %tmp26, align 4, !dbg !7659
  %103 = load i32, i32* %tmp26, align 4, !dbg !7659
  %call27 = call i64 @arch_local_irq_save() #11, !dbg !7661
  store i64 %call27, i64* %flags, align 8, !dbg !7661
  br label %do.end28, !dbg !7661

do.end28:                                         ; preds = %do.body21
  br label %do.end29, !dbg !7654

do.end29:                                         ; preds = %do.end28
  br label %do.body30, !dbg !7653

do.body30:                                        ; preds = %do.end29
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7662, !srcloc !7663
  br label %do.body31, !dbg !7662

do.body31:                                        ; preds = %do.body30
  store %struct.spinlock* @func_buf_lock, %struct.spinlock** %lock.addr.i, align 8
  %104 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7664
  %105 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %104, i32 0, i32 0, !dbg !7665
  %rlock.i = bitcast %union.anon* %105 to %struct.raw_spinlock*, !dbg !7665
  br label %do.end33, !dbg !7666

do.end33:                                         ; preds = %do.body31
  br label %do.end34, !dbg !7662

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !7653

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !7652

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !7647

do.end37:                                         ; preds = %do.end36
  %106 = load %struct.kbsentry*, %struct.kbsentry** %kbs, align 8, !dbg !7667
  %kb_string38 = getelementptr inbounds %struct.kbsentry, %struct.kbsentry* %106, i32 0, i32 1, !dbg !7668
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %kb_string38, i64 0, i64 0, !dbg !7667
  %107 = load i32, i32* %i, align 4, !dbg !7669
  %idxprom = sext i32 %107 to i64, !dbg !7670
  %arrayidx39 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom, !dbg !7670
  %108 = load i8*, i8** %arrayidx39, align 8, !dbg !7670
  %tobool40 = icmp ne i8* %108, null, !dbg !7670
  br i1 %tobool40, label %cond.true, label %cond.false, !dbg !7670

cond.true:                                        ; preds = %do.end37
  br label %cond.end, !dbg !7670

cond.false:                                       ; preds = %do.end37
  br label %cond.end, !dbg !7670

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %108, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), %cond.false ], !dbg !7670
  %109 = load i64, i64* %len, align 8, !dbg !7671
  %call41 = call i64 @strlcpy(i8* %arraydecay, i8* %cond, i64 %109) #11, !dbg !7672
  store i64 %call41, i64* %len, align 8, !dbg !7673
  %110 = load i64, i64* %flags, align 8, !dbg !7674
  store %struct.spinlock* @func_buf_lock, %struct.spinlock** %lock.addr.i240, align 8
  store i64 %110, i64* %flags.addr.i241, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !7675
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !7675
  store i32 1, i32* %tmp.i, align 4, !dbg !7675
  %111 = load i32, i32* %tmp.i, align 4, !dbg !7675
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !7676
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !7676
  store i32 1, i32* %tmp8.i, align 4, !dbg !7676
  %112 = load i32, i32* %tmp8.i, align 4, !dbg !7676
  %113 = load i64, i64* %flags.addr.i241, align 8, !dbg !7677
  call void @arch_local_irq_restore(i64 %113) #12, !dbg !7677
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7678, !srcloc !4921
  %114 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i240, align 8, !dbg !7679
  %115 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %114, i32 0, i32 0, !dbg !7679
  %rlock.i242 = bitcast %union.anon* %115 to %struct.raw_spinlock*, !dbg !7679
  %116 = load %struct.kbsentry*, %struct.kbsentry** %user_kdgkb.addr, align 8, !dbg !7680
  %kb_string42 = getelementptr inbounds %struct.kbsentry, %struct.kbsentry* %116, i32 0, i32 1, !dbg !7681
  %arraydecay43 = getelementptr inbounds [512 x i8], [512 x i8]* %kb_string42, i64 0, i64 0, !dbg !7680
  %117 = load %struct.kbsentry*, %struct.kbsentry** %kbs, align 8, !dbg !7682
  %kb_string44 = getelementptr inbounds %struct.kbsentry, %struct.kbsentry* %117, i32 0, i32 1, !dbg !7683
  %arraydecay45 = getelementptr inbounds [512 x i8], [512 x i8]* %kb_string44, i64 0, i64 0, !dbg !7682
  %118 = load i64, i64* %len, align 8, !dbg !7684
  %add = add i64 %118, 1, !dbg !7685
  store i8* %arraydecay43, i8** %to.addr.i250, align 8
  store i8* %arraydecay45, i8** %from.addr.i251, align 8
  store i64 %add, i64* %n.addr.i252, align 8
  %119 = load i8*, i8** %from.addr.i251, align 8, !dbg !7686
  %120 = load i64, i64* %n.addr.i252, align 8, !dbg !7686
  store i8* %119, i8** %addr.addr.i.i244, align 8
  store i64 %120, i64* %bytes.addr.i.i245, align 8
  store i8 1, i8* %is_source.addr.i.i246, align 1
  store i32 -1, i32* %sz.i.i247, align 4, !dbg !7319
  %121 = load i32, i32* %sz.i.i247, align 4, !dbg !7687
  %cmp.i.i253 = icmp sge i32 %121, 0, !dbg !7687
  br i1 %cmp.i.i253, label %land.rhs.i.i256, label %land.end.i.i260, !dbg !7687

land.rhs.i.i256:                                  ; preds = %cond.end
  %122 = load i32, i32* %sz.i.i247, align 4, !dbg !7687
  %conv.i.i254 = sext i32 %122 to i64, !dbg !7687
  %123 = load i64, i64* %bytes.addr.i.i245, align 8, !dbg !7687
  %cmp1.i.i255 = icmp ult i64 %conv.i.i254, %123, !dbg !7687
  br label %land.end.i.i260

land.end.i.i260:                                  ; preds = %land.rhs.i.i256, %cond.end
  %124 = phi i1 [ false, %cond.end ], [ %cmp1.i.i255, %land.rhs.i.i256 ], !dbg !7688
  %lnot.i.i257 = xor i1 %124, true, !dbg !7687
  %lnot.ext.i.i258 = zext i1 %124 to i32, !dbg !7687
  %conv4.i.i259 = sext i32 %lnot.ext.i.i258 to i64, !dbg !7687
  br i1 %124, label %if.then.i.i261, label %if.end10.i.i276, !dbg !7689

if.then.i.i261:                                   ; preds = %land.end.i.i260
  %125 = load i64, i64* %bytes.addr.i.i245, align 8, !dbg !7690
  %126 = call i1 @llvm.is.constant.i64(i64 %125) #6, !dbg !7691
  br i1 %126, label %if.else.i.i264, label %if.then5.i.i262, !dbg !7692

if.then5.i.i262:                                  ; preds = %if.then.i.i261
  %127 = load i32, i32* %sz.i.i247, align 4, !dbg !7693
  %128 = load i64, i64* %bytes.addr.i.i245, align 8, !dbg !7694
  call void @copy_overflow(i32 %127, i64 %128) #12, !dbg !7695
  br label %if.end9.i.i268, !dbg !7695

if.else.i.i264:                                   ; preds = %if.then.i.i261
  %129 = load i8, i8* %is_source.addr.i.i246, align 1, !dbg !7696
  %tobool6.i.i263 = trunc i8 %129 to i1, !dbg !7696
  br i1 %tobool6.i.i263, label %if.then7.i.i265, label %if.else8.i.i266, !dbg !7697

if.then7.i.i265:                                  ; preds = %if.else.i.i264
  call void @__bad_copy_from() #12, !dbg !7698
  br label %if.end.i.i267, !dbg !7698

if.else8.i.i266:                                  ; preds = %if.else.i.i264
  call void @__bad_copy_to() #12, !dbg !7699
  br label %if.end.i.i267

if.end.i.i267:                                    ; preds = %if.else8.i.i266, %if.then7.i.i265
  br label %if.end9.i.i268

if.end9.i.i268:                                   ; preds = %if.end.i.i267, %if.then5.i.i262
  store i1 false, i1* %retval.i.i243, align 1, !dbg !7700
  br label %check_copy_size.exit.i290, !dbg !7700

if.end10.i.i276:                                  ; preds = %land.end.i.i260
  %130 = load i64, i64* %bytes.addr.i.i245, align 8, !dbg !7320
  %cmp11.i.i269 = icmp ugt i64 %130, 2147483647, !dbg !7320
  %lnot13.i.i270 = xor i1 %cmp11.i.i269, true, !dbg !7320
  %lnot.ext16.i.i271 = zext i1 %cmp11.i.i269 to i32, !dbg !7320
  store i32 %lnot.ext16.i.i271, i32* %__ret_warn_on.i.i248, align 4, !dbg !7320
  %131 = load i32, i32* %__ret_warn_on.i.i248, align 4, !dbg !7701
  %tobool17.i.i272 = icmp ne i32 %131, 0, !dbg !7701
  %lnot18.i.i273 = xor i1 %tobool17.i.i272, true, !dbg !7701
  %lnot.ext21.i.i274 = zext i1 %tobool17.i.i272 to i32, !dbg !7701
  %conv22.i.i275 = sext i32 %lnot.ext21.i.i274 to i64, !dbg !7701
  br i1 %tobool17.i.i272, label %if.then24.i.i277, label %if.end31.i.i283, !dbg !7320

if.then24.i.i277:                                 ; preds = %if.end10.i.i276
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !7702, !srcloc !5680
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #6, !dbg !7703, !srcloc !5683
  br label %if.end31.i.i283, !dbg !7704

if.end31.i.i283:                                  ; preds = %if.then24.i.i277, %if.end10.i.i276
  %132 = load i32, i32* %__ret_warn_on.i.i248, align 4, !dbg !7320
  %tobool32.i.i278 = icmp ne i32 %132, 0, !dbg !7320
  %lnot33.i.i279 = xor i1 %tobool32.i.i278, true, !dbg !7320
  %lnot.ext36.i.i280 = zext i1 %tobool32.i.i278 to i32, !dbg !7320
  %conv37.i.i281 = sext i32 %lnot.ext36.i.i280 to i64, !dbg !7320
  store i64 %conv37.i.i281, i64* %tmp.i.i249, align 8, !dbg !7701
  %133 = load i64, i64* %tmp.i.i249, align 8, !dbg !7320
  %tobool38.i.i282 = icmp ne i64 %133, 0, !dbg !7705
  br i1 %tobool38.i.i282, label %if.then39.i.i284, label %if.end40.i.i286, !dbg !7706

if.then39.i.i284:                                 ; preds = %if.end31.i.i283
  store i1 false, i1* %retval.i.i243, align 1, !dbg !7707
  br label %check_copy_size.exit.i290, !dbg !7707

if.end40.i.i286:                                  ; preds = %if.end31.i.i283
  %134 = load i8*, i8** %addr.addr.i.i244, align 8, !dbg !7708
  %135 = load i64, i64* %bytes.addr.i.i245, align 8, !dbg !7709
  %136 = load i8, i8* %is_source.addr.i.i246, align 1, !dbg !7710
  %tobool41.i.i285 = trunc i8 %136 to i1, !dbg !7710
  call void @check_object_size(i8* %134, i64 %135, i1 zeroext %tobool41.i.i285) #12, !dbg !7711
  store i1 true, i1* %retval.i.i243, align 1, !dbg !7712
  br label %check_copy_size.exit.i290, !dbg !7712

check_copy_size.exit.i290:                        ; preds = %if.end40.i.i286, %if.then39.i.i284, %if.end9.i.i268
  %137 = load i1, i1* %retval.i.i243, align 1, !dbg !7713
  %lnot.i287 = xor i1 %137, true, !dbg !7686
  %lnot.ext.i288 = zext i1 %137 to i32, !dbg !7686
  %conv.i289 = sext i32 %lnot.ext.i288 to i64, !dbg !7686
  br i1 %137, label %if.then.i292, label %copy_to_user.exit, !dbg !7714

if.then.i292:                                     ; preds = %check_copy_size.exit.i290
  %138 = load i8*, i8** %to.addr.i250, align 8, !dbg !7715
  %139 = load i8*, i8** %from.addr.i251, align 8, !dbg !7716
  %140 = load i64, i64* %n.addr.i252, align 8, !dbg !7717
  %call2.i291 = call i64 @_copy_to_user(i8* %138, i8* %139, i64 %140) #12, !dbg !7718
  store i64 %call2.i291, i64* %n.addr.i252, align 8, !dbg !7719
  br label %copy_to_user.exit, !dbg !7720

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i290, %if.then.i292
  %141 = load i64, i64* %n.addr.i252, align 8, !dbg !7721
  %tobool47 = icmp ne i64 %141, 0, !dbg !7722
  %142 = zext i1 %tobool47 to i64, !dbg !7722
  %cond48 = select i1 %tobool47, i32 -14, i32 0, !dbg !7722
  store i32 %cond48, i32* %ret, align 4, !dbg !7723
  br label %reterr, !dbg !7724

sw.bb49:                                          ; preds = %do.end11
  %143 = load i32, i32* %perm.addr, align 4, !dbg !7725
  %tobool50 = icmp ne i32 %143, 0, !dbg !7725
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !7727

if.then51:                                        ; preds = %sw.bb49
  store i32 -1, i32* %ret, align 4, !dbg !7728
  br label %reterr, !dbg !7730

if.end52:                                         ; preds = %sw.bb49
  store i8* null, i8** %fnw, align 8, !dbg !7731
  store i32 0, i32* %fnw_sz, align 4, !dbg !7732
  br label %again, !dbg !7733

again:                                            ; preds = %if.end148, %if.end52
  call void @llvm.dbg.label(metadata !7734), !dbg !7735
  br label %do.body53, !dbg !7736

do.body53:                                        ; preds = %again
  br label %do.body54, !dbg !7737

do.body54:                                        ; preds = %do.body53
  call void @llvm.dbg.declare(metadata i64* %__dummy55, metadata !7738, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.declare(metadata i64* %__dummy256, metadata !7741, metadata !DIExpression()), !dbg !7740
  %cmp57 = icmp eq i64* %__dummy55, %__dummy256, !dbg !7740
  %conv58 = zext i1 %cmp57 to i32, !dbg !7740
  store i32 1, i32* %tmp59, align 4, !dbg !7740
  %144 = load i32, i32* %tmp59, align 4, !dbg !7740
  br label %do.body60, !dbg !7742

do.body60:                                        ; preds = %do.body54
  br label %do.body61, !dbg !7743

do.body61:                                        ; preds = %do.body60
  br label %do.body62, !dbg !7744

do.body62:                                        ; preds = %do.body61
  call void @llvm.dbg.declare(metadata i64* %__dummy63, metadata !7746, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.declare(metadata i64* %__dummy264, metadata !7750, metadata !DIExpression()), !dbg !7749
  %cmp65 = icmp eq i64* %__dummy63, %__dummy264, !dbg !7749
  %conv66 = zext i1 %cmp65 to i32, !dbg !7749
  store i32 1, i32* %tmp67, align 4, !dbg !7749
  %145 = load i32, i32* %tmp67, align 4, !dbg !7749
  %call68 = call i64 @arch_local_irq_save() #11, !dbg !7751
  store i64 %call68, i64* %flags, align 8, !dbg !7751
  br label %do.end69, !dbg !7751

do.end69:                                         ; preds = %do.body62
  br label %do.end70, !dbg !7744

do.end70:                                         ; preds = %do.end69
  br label %do.body71, !dbg !7743

do.body71:                                        ; preds = %do.end70
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7752, !srcloc !7753
  br label %do.body72, !dbg !7752

do.body72:                                        ; preds = %do.body71
  store %struct.spinlock* @func_buf_lock, %struct.spinlock** %lock.addr.i294, align 8
  %146 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i294, align 8, !dbg !7754
  %147 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %146, i32 0, i32 0, !dbg !7755
  %rlock.i295 = bitcast %union.anon* %147 to %struct.raw_spinlock*, !dbg !7755
  br label %do.end74, !dbg !7756

do.end74:                                         ; preds = %do.body72
  br label %do.end75, !dbg !7752

do.end75:                                         ; preds = %do.end74
  br label %do.end76, !dbg !7743

do.end76:                                         ; preds = %do.end75
  br label %do.end77, !dbg !7742

do.end77:                                         ; preds = %do.end76
  br label %do.end78, !dbg !7737

do.end78:                                         ; preds = %do.end77
  %148 = load i32, i32* %i, align 4, !dbg !7757
  %idxprom79 = sext i32 %148 to i64, !dbg !7758
  %arrayidx80 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom79, !dbg !7758
  %149 = load i8*, i8** %arrayidx80, align 8, !dbg !7758
  store i8* %149, i8** %q, align 8, !dbg !7759
  %150 = load i8*, i8** @funcbufptr, align 8, !dbg !7760
  %151 = load i32, i32* @funcbufsize, align 4, !dbg !7761
  %152 = load i32, i32* @funcbufleft, align 4, !dbg !7762
  %sub = sub i32 %151, %152, !dbg !7763
  %idx.ext = sext i32 %sub to i64, !dbg !7764
  %add.ptr = getelementptr i8, i8* %150, i64 %idx.ext, !dbg !7764
  store i8* %add.ptr, i8** %first_free, align 8, !dbg !7765
  %153 = load i32, i32* %i, align 4, !dbg !7766
  %add81 = add i32 %153, 1, !dbg !7768
  store i32 %add81, i32* %j, align 4, !dbg !7769
  br label %for.cond, !dbg !7770

for.cond:                                         ; preds = %for.inc, %do.end78
  %154 = load i32, i32* %j, align 4, !dbg !7771
  %cmp82 = icmp slt i32 %154, 256, !dbg !7773
  br i1 %cmp82, label %land.rhs, label %land.end, !dbg !7774

land.rhs:                                         ; preds = %for.cond
  %155 = load i32, i32* %j, align 4, !dbg !7775
  %idxprom84 = sext i32 %155 to i64, !dbg !7776
  %arrayidx85 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom84, !dbg !7776
  %156 = load i8*, i8** %arrayidx85, align 8, !dbg !7776
  %tobool86 = icmp ne i8* %156, null, !dbg !7777
  %lnot = xor i1 %tobool86, true, !dbg !7777
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %157 = phi i1 [ false, %for.cond ], [ %lnot, %land.rhs ], !dbg !7778
  br i1 %157, label %for.body, label %for.end, !dbg !7779

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !7779

for.inc:                                          ; preds = %for.body
  %158 = load i32, i32* %j, align 4, !dbg !7780
  %inc = add i32 %158, 1, !dbg !7780
  store i32 %inc, i32* %j, align 4, !dbg !7780
  br label %for.cond, !dbg !7781, !llvm.loop !7782

for.end:                                          ; preds = %land.end
  %159 = load i32, i32* %j, align 4, !dbg !7784
  %cmp87 = icmp slt i32 %159, 256, !dbg !7786
  br i1 %cmp87, label %if.then89, label %if.else, !dbg !7787

if.then89:                                        ; preds = %for.end
  %160 = load i32, i32* %j, align 4, !dbg !7788
  %idxprom90 = sext i32 %160 to i64, !dbg !7789
  %arrayidx91 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom90, !dbg !7789
  %161 = load i8*, i8** %arrayidx91, align 8, !dbg !7789
  store i8* %161, i8** %fj, align 8, !dbg !7790
  br label %if.end92, !dbg !7791

if.else:                                          ; preds = %for.end
  %162 = load i8*, i8** %first_free, align 8, !dbg !7792
  store i8* %162, i8** %fj, align 8, !dbg !7793
  br label %if.end92

if.end92:                                         ; preds = %if.else, %if.then89
  %163 = load i8*, i8** %q, align 8, !dbg !7794
  %tobool93 = icmp ne i8* %163, null, !dbg !7794
  br i1 %tobool93, label %cond.true94, label %cond.false97, !dbg !7794

cond.true94:                                      ; preds = %if.end92
  %164 = load i8*, i8** %q, align 8, !dbg !7795
  %call95 = call i64 @strlen(i8* %164) #11, !dbg !7796
  %sub96 = sub i64 0, %call95, !dbg !7797
  br label %cond.end98, !dbg !7794

cond.false97:                                     ; preds = %if.end92
  br label %cond.end98, !dbg !7794

cond.end98:                                       ; preds = %cond.false97, %cond.true94
  %cond99 = phi i64 [ %sub96, %cond.true94 ], [ 1, %cond.false97 ], !dbg !7794
  %165 = load %struct.kbsentry*, %struct.kbsentry** %kbs, align 8, !dbg !7798
  %kb_string100 = getelementptr inbounds %struct.kbsentry, %struct.kbsentry* %165, i32 0, i32 1, !dbg !7799
  %arraydecay101 = getelementptr inbounds [512 x i8], [512 x i8]* %kb_string100, i64 0, i64 0, !dbg !7798
  %call102 = call i64 @strlen(i8* %arraydecay101) #11, !dbg !7800
  %add103 = add i64 %cond99, %call102, !dbg !7801
  %conv104 = trunc i64 %add103 to i32, !dbg !7802
  store i32 %conv104, i32* %delta, align 4, !dbg !7803
  %166 = load i32, i32* %delta, align 4, !dbg !7804
  %167 = load i32, i32* @funcbufleft, align 4, !dbg !7805
  %cmp105 = icmp sle i32 %166, %167, !dbg !7806
  br i1 %cmp105, label %if.then107, label %if.else136, !dbg !7807

if.then107:                                       ; preds = %cond.end98
  %168 = load i32, i32* %j, align 4, !dbg !7808
  %cmp108 = icmp slt i32 %168, 256, !dbg !7811
  br i1 %cmp108, label %if.then110, label %if.end129, !dbg !7812

if.then110:                                       ; preds = %if.then107
  %169 = load i8*, i8** %fj, align 8, !dbg !7813
  %170 = load i32, i32* %delta, align 4, !dbg !7815
  %idx.ext111 = sext i32 %170 to i64, !dbg !7816
  %add.ptr112 = getelementptr i8, i8* %169, i64 %idx.ext111, !dbg !7816
  %171 = load i8*, i8** %fj, align 8, !dbg !7817
  %172 = load i8*, i8** %first_free, align 8, !dbg !7818
  %173 = load i8*, i8** %fj, align 8, !dbg !7819
  %sub.ptr.lhs.cast = ptrtoint i8* %172 to i64, !dbg !7820
  %sub.ptr.rhs.cast = ptrtoint i8* %173 to i64, !dbg !7820
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7820
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr112, i8* align 1 %171, i64 %sub.ptr.sub, i1 false), !dbg !7821
  %174 = load i32, i32* %j, align 4, !dbg !7822
  store i32 %174, i32* %k, align 4, !dbg !7824
  br label %for.cond113, !dbg !7825

for.cond113:                                      ; preds = %for.inc126, %if.then110
  %175 = load i32, i32* %k, align 4, !dbg !7826
  %cmp114 = icmp slt i32 %175, 256, !dbg !7828
  br i1 %cmp114, label %for.body116, label %for.end128, !dbg !7829

for.body116:                                      ; preds = %for.cond113
  %176 = load i32, i32* %k, align 4, !dbg !7830
  %idxprom117 = sext i32 %176 to i64, !dbg !7832
  %arrayidx118 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom117, !dbg !7832
  %177 = load i8*, i8** %arrayidx118, align 8, !dbg !7832
  %tobool119 = icmp ne i8* %177, null, !dbg !7832
  br i1 %tobool119, label %if.then120, label %if.end125, !dbg !7833

if.then120:                                       ; preds = %for.body116
  %178 = load i32, i32* %delta, align 4, !dbg !7834
  %179 = load i32, i32* %k, align 4, !dbg !7835
  %idxprom121 = sext i32 %179 to i64, !dbg !7836
  %arrayidx122 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom121, !dbg !7836
  %180 = load i8*, i8** %arrayidx122, align 8, !dbg !7837
  %idx.ext123 = sext i32 %178 to i64, !dbg !7837
  %add.ptr124 = getelementptr i8, i8* %180, i64 %idx.ext123, !dbg !7837
  store i8* %add.ptr124, i8** %arrayidx122, align 8, !dbg !7837
  br label %if.end125, !dbg !7836

if.end125:                                        ; preds = %if.then120, %for.body116
  br label %for.inc126, !dbg !7838

for.inc126:                                       ; preds = %if.end125
  %181 = load i32, i32* %k, align 4, !dbg !7839
  %inc127 = add i32 %181, 1, !dbg !7839
  store i32 %inc127, i32* %k, align 4, !dbg !7839
  br label %for.cond113, !dbg !7840, !llvm.loop !7841

for.end128:                                       ; preds = %for.cond113
  br label %if.end129, !dbg !7843

if.end129:                                        ; preds = %for.end128, %if.then107
  %182 = load i8*, i8** %q, align 8, !dbg !7844
  %tobool130 = icmp ne i8* %182, null, !dbg !7844
  br i1 %tobool130, label %if.end134, label %if.then131, !dbg !7846

if.then131:                                       ; preds = %if.end129
  %183 = load i8*, i8** %fj, align 8, !dbg !7847
  %184 = load i32, i32* %i, align 4, !dbg !7848
  %idxprom132 = sext i32 %184 to i64, !dbg !7849
  %arrayidx133 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom132, !dbg !7849
  store i8* %183, i8** %arrayidx133, align 8, !dbg !7850
  br label %if.end134, !dbg !7849

if.end134:                                        ; preds = %if.then131, %if.end129
  %185 = load i32, i32* %delta, align 4, !dbg !7851
  %186 = load i32, i32* @funcbufleft, align 4, !dbg !7852
  %sub135 = sub i32 %186, %185, !dbg !7852
  store i32 %sub135, i32* @funcbufleft, align 4, !dbg !7852
  br label %if.end224, !dbg !7853

if.else136:                                       ; preds = %cond.end98
  store i32 256, i32* %sz, align 4, !dbg !7854
  br label %while.cond, !dbg !7855

while.cond:                                       ; preds = %while.body, %if.else136
  %187 = load i32, i32* %sz, align 4, !dbg !7856
  %188 = load i32, i32* @funcbufsize, align 4, !dbg !7857
  %189 = load i32, i32* @funcbufleft, align 4, !dbg !7858
  %sub137 = sub i32 %188, %189, !dbg !7859
  %190 = load i32, i32* %delta, align 4, !dbg !7860
  %add138 = add i32 %sub137, %190, !dbg !7861
  %cmp139 = icmp slt i32 %187, %add138, !dbg !7862
  br i1 %cmp139, label %while.body, label %while.end, !dbg !7855

while.body:                                       ; preds = %while.cond
  %191 = load i32, i32* %sz, align 4, !dbg !7863
  %shl = shl i32 %191, 1, !dbg !7863
  store i32 %shl, i32* %sz, align 4, !dbg !7863
  br label %while.cond, !dbg !7855, !llvm.loop !7864

while.end:                                        ; preds = %while.cond
  %192 = load i32, i32* %fnw_sz, align 4, !dbg !7866
  %193 = load i32, i32* %sz, align 4, !dbg !7867
  %cmp141 = icmp ne i32 %192, %193, !dbg !7868
  br i1 %cmp141, label %if.then143, label %if.end149, !dbg !7869

if.then143:                                       ; preds = %while.end
  %194 = load i64, i64* %flags, align 8, !dbg !7870
  store %struct.spinlock* @func_buf_lock, %struct.spinlock** %lock.addr.i296, align 8
  store i64 %194, i64* %flags.addr.i297, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !7871
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !7871
  store i32 1, i32* %tmp.i298, align 4, !dbg !7871
  %195 = load i32, i32* %tmp.i298, align 4, !dbg !7871
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !7872
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !7872
  store i32 1, i32* %tmp8.i299, align 4, !dbg !7872
  %196 = load i32, i32* %tmp8.i299, align 4, !dbg !7872
  %197 = load i64, i64* %flags.addr.i297, align 8, !dbg !7873
  call void @arch_local_irq_restore(i64 %197) #12, !dbg !7873
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7874, !srcloc !4921
  %198 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i296, align 8, !dbg !7875
  %199 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %198, i32 0, i32 0, !dbg !7875
  %rlock.i300 = bitcast %union.anon* %199 to %struct.raw_spinlock*, !dbg !7875
  %200 = load i8*, i8** %fnw, align 8, !dbg !7876
  call void @kfree(i8* %200) #11, !dbg !7877
  %201 = load i32, i32* %sz, align 4, !dbg !7878
  %conv144 = sext i32 %201 to i64, !dbg !7878
  store i64 %conv144, i64* %size.addr.i316, align 8
  store i32 3264, i32* %flags.addr.i317, align 4
  %202 = load i64, i64* %size.addr.i316, align 8, !dbg !7879
  %203 = call i1 @llvm.is.constant.i64(i64 %202) #6, !dbg !7880
  br i1 %203, label %if.then.i320, label %if.end9.i444, !dbg !7881

if.then.i320:                                     ; preds = %if.then143
  %204 = load i64, i64* %size.addr.i316, align 8, !dbg !7882
  %cmp.i319 = icmp ugt i64 %204, 8192, !dbg !7883
  br i1 %cmp.i319, label %if.then1.i326, label %if.end.i328, !dbg !7884

if.then1.i326:                                    ; preds = %if.then.i320
  %205 = load i64, i64* %size.addr.i316, align 8, !dbg !7885
  %206 = load i32, i32* %flags.addr.i317, align 4, !dbg !7886
  store i64 %205, i64* %size.addr.i.i312, align 8
  store i32 %206, i32* %flags.addr.i.i313, align 4
  %207 = load i64, i64* %size.addr.i.i312, align 8, !dbg !7887
  %call.i.i321 = call i32 @get_order(i64 %207) #13, !dbg !7888
  store i32 %call.i.i321, i32* %order.i.i314, align 4, !dbg !7299
  %208 = load i64, i64* %size.addr.i.i312, align 8, !dbg !7889
  %209 = load i32, i32* %flags.addr.i.i313, align 4, !dbg !7890
  %210 = load i32, i32* %order.i.i314, align 4, !dbg !7891
  store i64 %208, i64* %size.addr.i.i.i309, align 8
  store i32 %209, i32* %flags.addr.i.i.i310, align 4
  store i32 %210, i32* %order.addr.i.i.i311, align 4
  %211 = load i64, i64* %size.addr.i.i.i309, align 8, !dbg !7892
  %212 = load i32, i32* %flags.addr.i.i.i310, align 4, !dbg !7893
  %213 = load i32, i32* %order.addr.i.i.i311, align 4, !dbg !7894
  %call.i.i.i322 = call noalias i8* @kmalloc_order(i64 %211, i32 %212, i32 %213) #12, !dbg !7895
  %ptrint.i.i.i323 = ptrtoint i8* %call.i.i.i322 to i64, !dbg !7895
  %maskedptr.i.i.i324 = and i64 %ptrint.i.i.i323, 4095, !dbg !7895
  %maskcond.i.i.i325 = icmp eq i64 %maskedptr.i.i.i324, 0, !dbg !7895
  call void @llvm.assume(i1 %maskcond.i.i.i325) #6, !dbg !7895
  store i8* %call.i.i.i322, i8** %retval.i315, align 8, !dbg !7896
  br label %kmalloc.exit445, !dbg !7896

if.end.i328:                                      ; preds = %if.then.i320
  %214 = load i64, i64* %size.addr.i316, align 8, !dbg !7897
  store i64 %214, i64* %size.addr.i11.i308, align 8
  %215 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7898
  %tobool.i.i327 = icmp ne i64 %215, 0, !dbg !7898
  br i1 %tobool.i.i327, label %if.end.i.i331, label %if.then.i.i329, !dbg !7899

if.then.i.i329:                                   ; preds = %if.end.i328
  store i32 0, i32* %retval.i.i307, align 4, !dbg !7900
  br label %kmalloc_index.exit.i417, !dbg !7900

if.end.i.i331:                                    ; preds = %if.end.i328
  %216 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7901
  %cmp.i.i330 = icmp ule i64 %216, 8, !dbg !7902
  br i1 %cmp.i.i330, label %if.then1.i.i332, label %if.end2.i.i334, !dbg !7903

if.then1.i.i332:                                  ; preds = %if.end.i.i331
  store i32 3, i32* %retval.i.i307, align 4, !dbg !7904
  br label %kmalloc_index.exit.i417, !dbg !7904

if.end2.i.i334:                                   ; preds = %if.end.i.i331
  %217 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7905
  %cmp3.i.i333 = icmp ugt i64 %217, 64, !dbg !7906
  br i1 %cmp3.i.i333, label %land.lhs.true.i.i336, label %if.end6.i.i339, !dbg !7907

land.lhs.true.i.i336:                             ; preds = %if.end2.i.i334
  %218 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7908
  %cmp4.i.i335 = icmp ule i64 %218, 96, !dbg !7909
  br i1 %cmp4.i.i335, label %if.then5.i.i337, label %if.end6.i.i339, !dbg !7910

if.then5.i.i337:                                  ; preds = %land.lhs.true.i.i336
  store i32 1, i32* %retval.i.i307, align 4, !dbg !7911
  br label %kmalloc_index.exit.i417, !dbg !7911

if.end6.i.i339:                                   ; preds = %land.lhs.true.i.i336, %if.end2.i.i334
  %219 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7912
  %cmp7.i.i338 = icmp ugt i64 %219, 128, !dbg !7913
  br i1 %cmp7.i.i338, label %land.lhs.true8.i.i341, label %if.end11.i.i344, !dbg !7914

land.lhs.true8.i.i341:                            ; preds = %if.end6.i.i339
  %220 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7915
  %cmp9.i.i340 = icmp ule i64 %220, 192, !dbg !7916
  br i1 %cmp9.i.i340, label %if.then10.i.i342, label %if.end11.i.i344, !dbg !7917

if.then10.i.i342:                                 ; preds = %land.lhs.true8.i.i341
  store i32 2, i32* %retval.i.i307, align 4, !dbg !7918
  br label %kmalloc_index.exit.i417, !dbg !7918

if.end11.i.i344:                                  ; preds = %land.lhs.true8.i.i341, %if.end6.i.i339
  %221 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7919
  %cmp12.i.i343 = icmp ule i64 %221, 8, !dbg !7920
  br i1 %cmp12.i.i343, label %if.then13.i.i345, label %if.end14.i.i347, !dbg !7921

if.then13.i.i345:                                 ; preds = %if.end11.i.i344
  store i32 3, i32* %retval.i.i307, align 4, !dbg !7922
  br label %kmalloc_index.exit.i417, !dbg !7922

if.end14.i.i347:                                  ; preds = %if.end11.i.i344
  %222 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7923
  %cmp15.i.i346 = icmp ule i64 %222, 16, !dbg !7924
  br i1 %cmp15.i.i346, label %if.then16.i.i348, label %if.end17.i.i350, !dbg !7925

if.then16.i.i348:                                 ; preds = %if.end14.i.i347
  store i32 4, i32* %retval.i.i307, align 4, !dbg !7926
  br label %kmalloc_index.exit.i417, !dbg !7926

if.end17.i.i350:                                  ; preds = %if.end14.i.i347
  %223 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7927
  %cmp18.i.i349 = icmp ule i64 %223, 32, !dbg !7928
  br i1 %cmp18.i.i349, label %if.then19.i.i351, label %if.end20.i.i353, !dbg !7929

if.then19.i.i351:                                 ; preds = %if.end17.i.i350
  store i32 5, i32* %retval.i.i307, align 4, !dbg !7930
  br label %kmalloc_index.exit.i417, !dbg !7930

if.end20.i.i353:                                  ; preds = %if.end17.i.i350
  %224 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7931
  %cmp21.i.i352 = icmp ule i64 %224, 64, !dbg !7932
  br i1 %cmp21.i.i352, label %if.then22.i.i354, label %if.end23.i.i356, !dbg !7933

if.then22.i.i354:                                 ; preds = %if.end20.i.i353
  store i32 6, i32* %retval.i.i307, align 4, !dbg !7934
  br label %kmalloc_index.exit.i417, !dbg !7934

if.end23.i.i356:                                  ; preds = %if.end20.i.i353
  %225 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7935
  %cmp24.i.i355 = icmp ule i64 %225, 128, !dbg !7936
  br i1 %cmp24.i.i355, label %if.then25.i.i357, label %if.end26.i.i359, !dbg !7937

if.then25.i.i357:                                 ; preds = %if.end23.i.i356
  store i32 7, i32* %retval.i.i307, align 4, !dbg !7938
  br label %kmalloc_index.exit.i417, !dbg !7938

if.end26.i.i359:                                  ; preds = %if.end23.i.i356
  %226 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7939
  %cmp27.i.i358 = icmp ule i64 %226, 256, !dbg !7940
  br i1 %cmp27.i.i358, label %if.then28.i.i360, label %if.end29.i.i362, !dbg !7941

if.then28.i.i360:                                 ; preds = %if.end26.i.i359
  store i32 8, i32* %retval.i.i307, align 4, !dbg !7942
  br label %kmalloc_index.exit.i417, !dbg !7942

if.end29.i.i362:                                  ; preds = %if.end26.i.i359
  %227 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7943
  %cmp30.i.i361 = icmp ule i64 %227, 512, !dbg !7944
  br i1 %cmp30.i.i361, label %if.then31.i.i363, label %if.end32.i.i365, !dbg !7945

if.then31.i.i363:                                 ; preds = %if.end29.i.i362
  store i32 9, i32* %retval.i.i307, align 4, !dbg !7946
  br label %kmalloc_index.exit.i417, !dbg !7946

if.end32.i.i365:                                  ; preds = %if.end29.i.i362
  %228 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7947
  %cmp33.i.i364 = icmp ule i64 %228, 1024, !dbg !7948
  br i1 %cmp33.i.i364, label %if.then34.i.i366, label %if.end35.i.i368, !dbg !7949

if.then34.i.i366:                                 ; preds = %if.end32.i.i365
  store i32 10, i32* %retval.i.i307, align 4, !dbg !7950
  br label %kmalloc_index.exit.i417, !dbg !7950

if.end35.i.i368:                                  ; preds = %if.end32.i.i365
  %229 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7951
  %cmp36.i.i367 = icmp ule i64 %229, 2048, !dbg !7952
  br i1 %cmp36.i.i367, label %if.then37.i.i369, label %if.end38.i.i371, !dbg !7953

if.then37.i.i369:                                 ; preds = %if.end35.i.i368
  store i32 11, i32* %retval.i.i307, align 4, !dbg !7954
  br label %kmalloc_index.exit.i417, !dbg !7954

if.end38.i.i371:                                  ; preds = %if.end35.i.i368
  %230 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7955
  %cmp39.i.i370 = icmp ule i64 %230, 4096, !dbg !7956
  br i1 %cmp39.i.i370, label %if.then40.i.i372, label %if.end41.i.i374, !dbg !7957

if.then40.i.i372:                                 ; preds = %if.end38.i.i371
  store i32 12, i32* %retval.i.i307, align 4, !dbg !7958
  br label %kmalloc_index.exit.i417, !dbg !7958

if.end41.i.i374:                                  ; preds = %if.end38.i.i371
  %231 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7959
  %cmp42.i.i373 = icmp ule i64 %231, 8192, !dbg !7960
  br i1 %cmp42.i.i373, label %if.then43.i.i375, label %if.end44.i.i377, !dbg !7961

if.then43.i.i375:                                 ; preds = %if.end41.i.i374
  store i32 13, i32* %retval.i.i307, align 4, !dbg !7962
  br label %kmalloc_index.exit.i417, !dbg !7962

if.end44.i.i377:                                  ; preds = %if.end41.i.i374
  %232 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7963
  %cmp45.i.i376 = icmp ule i64 %232, 16384, !dbg !7964
  br i1 %cmp45.i.i376, label %if.then46.i.i378, label %if.end47.i.i380, !dbg !7965

if.then46.i.i378:                                 ; preds = %if.end44.i.i377
  store i32 14, i32* %retval.i.i307, align 4, !dbg !7966
  br label %kmalloc_index.exit.i417, !dbg !7966

if.end47.i.i380:                                  ; preds = %if.end44.i.i377
  %233 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7967
  %cmp48.i.i379 = icmp ule i64 %233, 32768, !dbg !7968
  br i1 %cmp48.i.i379, label %if.then49.i.i381, label %if.end50.i.i383, !dbg !7969

if.then49.i.i381:                                 ; preds = %if.end47.i.i380
  store i32 15, i32* %retval.i.i307, align 4, !dbg !7970
  br label %kmalloc_index.exit.i417, !dbg !7970

if.end50.i.i383:                                  ; preds = %if.end47.i.i380
  %234 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7971
  %cmp51.i.i382 = icmp ule i64 %234, 65536, !dbg !7972
  br i1 %cmp51.i.i382, label %if.then52.i.i384, label %if.end53.i.i386, !dbg !7973

if.then52.i.i384:                                 ; preds = %if.end50.i.i383
  store i32 16, i32* %retval.i.i307, align 4, !dbg !7974
  br label %kmalloc_index.exit.i417, !dbg !7974

if.end53.i.i386:                                  ; preds = %if.end50.i.i383
  %235 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7975
  %cmp54.i.i385 = icmp ule i64 %235, 131072, !dbg !7976
  br i1 %cmp54.i.i385, label %if.then55.i.i387, label %if.end56.i.i389, !dbg !7977

if.then55.i.i387:                                 ; preds = %if.end53.i.i386
  store i32 17, i32* %retval.i.i307, align 4, !dbg !7978
  br label %kmalloc_index.exit.i417, !dbg !7978

if.end56.i.i389:                                  ; preds = %if.end53.i.i386
  %236 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7979
  %cmp57.i.i388 = icmp ule i64 %236, 262144, !dbg !7980
  br i1 %cmp57.i.i388, label %if.then58.i.i390, label %if.end59.i.i392, !dbg !7981

if.then58.i.i390:                                 ; preds = %if.end56.i.i389
  store i32 18, i32* %retval.i.i307, align 4, !dbg !7982
  br label %kmalloc_index.exit.i417, !dbg !7982

if.end59.i.i392:                                  ; preds = %if.end56.i.i389
  %237 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7983
  %cmp60.i.i391 = icmp ule i64 %237, 524288, !dbg !7984
  br i1 %cmp60.i.i391, label %if.then61.i.i393, label %if.end62.i.i395, !dbg !7985

if.then61.i.i393:                                 ; preds = %if.end59.i.i392
  store i32 19, i32* %retval.i.i307, align 4, !dbg !7986
  br label %kmalloc_index.exit.i417, !dbg !7986

if.end62.i.i395:                                  ; preds = %if.end59.i.i392
  %238 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7987
  %cmp63.i.i394 = icmp ule i64 %238, 1048576, !dbg !7988
  br i1 %cmp63.i.i394, label %if.then64.i.i396, label %if.end65.i.i398, !dbg !7989

if.then64.i.i396:                                 ; preds = %if.end62.i.i395
  store i32 20, i32* %retval.i.i307, align 4, !dbg !7990
  br label %kmalloc_index.exit.i417, !dbg !7990

if.end65.i.i398:                                  ; preds = %if.end62.i.i395
  %239 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7991
  %cmp66.i.i397 = icmp ule i64 %239, 2097152, !dbg !7992
  br i1 %cmp66.i.i397, label %if.then67.i.i399, label %if.end68.i.i401, !dbg !7993

if.then67.i.i399:                                 ; preds = %if.end65.i.i398
  store i32 21, i32* %retval.i.i307, align 4, !dbg !7994
  br label %kmalloc_index.exit.i417, !dbg !7994

if.end68.i.i401:                                  ; preds = %if.end65.i.i398
  %240 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7995
  %cmp69.i.i400 = icmp ule i64 %240, 4194304, !dbg !7996
  br i1 %cmp69.i.i400, label %if.then70.i.i402, label %if.end71.i.i404, !dbg !7997

if.then70.i.i402:                                 ; preds = %if.end68.i.i401
  store i32 22, i32* %retval.i.i307, align 4, !dbg !7998
  br label %kmalloc_index.exit.i417, !dbg !7998

if.end71.i.i404:                                  ; preds = %if.end68.i.i401
  %241 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !7999
  %cmp72.i.i403 = icmp ule i64 %241, 8388608, !dbg !8000
  br i1 %cmp72.i.i403, label %if.then73.i.i405, label %if.end74.i.i407, !dbg !8001

if.then73.i.i405:                                 ; preds = %if.end71.i.i404
  store i32 23, i32* %retval.i.i307, align 4, !dbg !8002
  br label %kmalloc_index.exit.i417, !dbg !8002

if.end74.i.i407:                                  ; preds = %if.end71.i.i404
  %242 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !8003
  %cmp75.i.i406 = icmp ule i64 %242, 16777216, !dbg !8004
  br i1 %cmp75.i.i406, label %if.then76.i.i408, label %if.end77.i.i410, !dbg !8005

if.then76.i.i408:                                 ; preds = %if.end74.i.i407
  store i32 24, i32* %retval.i.i307, align 4, !dbg !8006
  br label %kmalloc_index.exit.i417, !dbg !8006

if.end77.i.i410:                                  ; preds = %if.end74.i.i407
  %243 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !8007
  %cmp78.i.i409 = icmp ule i64 %243, 33554432, !dbg !8008
  br i1 %cmp78.i.i409, label %if.then79.i.i411, label %if.end80.i.i413, !dbg !8009

if.then79.i.i411:                                 ; preds = %if.end77.i.i410
  store i32 25, i32* %retval.i.i307, align 4, !dbg !8010
  br label %kmalloc_index.exit.i417, !dbg !8010

if.end80.i.i413:                                  ; preds = %if.end77.i.i410
  %244 = load i64, i64* %size.addr.i11.i308, align 8, !dbg !8011
  %cmp81.i.i412 = icmp ule i64 %244, 67108864, !dbg !8012
  br i1 %cmp81.i.i412, label %if.then82.i.i414, label %if.end83.i.i415, !dbg !8013

if.then82.i.i414:                                 ; preds = %if.end80.i.i413
  store i32 26, i32* %retval.i.i307, align 4, !dbg !8014
  br label %kmalloc_index.exit.i417, !dbg !8014

if.end83.i.i415:                                  ; preds = %if.end80.i.i413
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !8015, !srcloc !6283
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 228) #6, !dbg !8016, !srcloc !6287
  unreachable, !dbg !8017

kmalloc_index.exit.i417:                          ; preds = %if.then82.i.i414, %if.then79.i.i411, %if.then76.i.i408, %if.then73.i.i405, %if.then70.i.i402, %if.then67.i.i399, %if.then64.i.i396, %if.then61.i.i393, %if.then58.i.i390, %if.then55.i.i387, %if.then52.i.i384, %if.then49.i.i381, %if.then46.i.i378, %if.then43.i.i375, %if.then40.i.i372, %if.then37.i.i369, %if.then34.i.i366, %if.then31.i.i363, %if.then28.i.i360, %if.then25.i.i357, %if.then22.i.i354, %if.then19.i.i351, %if.then16.i.i348, %if.then13.i.i345, %if.then10.i.i342, %if.then5.i.i337, %if.then1.i.i332, %if.then.i.i329
  %245 = load i32, i32* %retval.i.i307, align 4, !dbg !8018
  store i32 %245, i32* %index.i318, align 4, !dbg !8019
  %246 = load i32, i32* %index.i318, align 4, !dbg !8020
  %tobool.i416 = icmp ne i32 %246, 0, !dbg !8020
  br i1 %tobool.i416, label %if.end4.i424, label %if.then3.i418, !dbg !8021

if.then3.i418:                                    ; preds = %kmalloc_index.exit.i417
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i315, align 8, !dbg !8022
  br label %kmalloc.exit445, !dbg !8022

if.end4.i424:                                     ; preds = %kmalloc_index.exit.i417
  %247 = load i32, i32* %flags.addr.i317, align 4, !dbg !8023
  store i32 %247, i32* %flags.addr.i13.i306, align 4
  %248 = load i32, i32* %flags.addr.i13.i306, align 4, !dbg !8024
  %and.i.i419 = and i32 %248, 17, !dbg !8024
  %cmp.i14.i420 = icmp eq i32 %and.i.i419, 0, !dbg !8024
  %lnot.i.i421 = xor i1 %cmp.i14.i420, true, !dbg !8024
  %lnot.ext.i.i422 = zext i1 %cmp.i14.i420 to i32, !dbg !8024
  %conv.i.i423 = sext i32 %lnot.ext.i.i422 to i64, !dbg !8024
  br i1 %cmp.i14.i420, label %if.then.i15.i425, label %if.end.i16.i429, !dbg !8025

if.then.i15.i425:                                 ; preds = %if.end4.i424
  store i32 0, i32* %retval.i12.i305, align 4, !dbg !8026
  br label %kmalloc_type.exit.i439, !dbg !8026

if.end.i16.i429:                                  ; preds = %if.end4.i424
  %249 = load i32, i32* %flags.addr.i13.i306, align 4, !dbg !8027
  %and2.i.i426 = and i32 %249, 1, !dbg !8028
  %tobool3.i.i427 = icmp ne i32 %and2.i.i426, 0, !dbg !8027
  %250 = zext i1 %tobool3.i.i427 to i64, !dbg !8027
  %cond.i.i428 = select i1 %tobool3.i.i427, i32 2, i32 1, !dbg !8027
  store i32 %cond.i.i428, i32* %retval.i12.i305, align 4, !dbg !8029
  br label %kmalloc_type.exit.i439, !dbg !8029

kmalloc_type.exit.i439:                           ; preds = %if.end.i16.i429, %if.then.i15.i425
  %251 = load i32, i32* %retval.i12.i305, align 4, !dbg !8030
  %idxprom.i430 = zext i32 %251 to i64, !dbg !8031
  %arrayidx.i431 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i430, !dbg !8031
  %252 = load i32, i32* %index.i318, align 4, !dbg !8032
  %idxprom6.i432 = zext i32 %252 to i64, !dbg !8031
  %arrayidx7.i433 = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i431, i64 0, i64 %idxprom6.i432, !dbg !8031
  %253 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i433, align 8, !dbg !8031
  %254 = load i32, i32* %flags.addr.i317, align 4, !dbg !8033
  %255 = load i64, i64* %size.addr.i316, align 8, !dbg !8034
  store %struct.kmem_cache* %253, %struct.kmem_cache** %s.addr.i.i301, align 8
  store i32 %254, i32* %flags.addr.i17.i302, align 4
  store i64 %255, i64* %size.addr.i18.i303, align 8
  %256 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i301, align 8, !dbg !8035
  %257 = load i32, i32* %flags.addr.i17.i302, align 4, !dbg !8036
  %call.i19.i434 = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %256, i32 %257) #12, !dbg !8037
  %ptrint.i.i435 = ptrtoint i8* %call.i19.i434 to i64, !dbg !8037
  %maskedptr.i.i436 = and i64 %ptrint.i.i435, 7, !dbg !8037
  %maskcond.i.i437 = icmp eq i64 %maskedptr.i.i436, 0, !dbg !8037
  call void @llvm.assume(i1 %maskcond.i.i437) #6, !dbg !8037
  store i8* %call.i19.i434, i8** %ret.i.i304, align 8, !dbg !7287
  %258 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i301, align 8, !dbg !8038
  %259 = load i8*, i8** %ret.i.i304, align 8, !dbg !8039
  %260 = load i64, i64* %size.addr.i18.i303, align 8, !dbg !8040
  %261 = load i32, i32* %flags.addr.i17.i302, align 4, !dbg !8041
  %call1.i.i438 = call i8* @kasan_kmalloc(%struct.kmem_cache* %258, i8* %259, i64 %260, i32 %261) #12, !dbg !8042
  store i8* %call1.i.i438, i8** %ret.i.i304, align 8, !dbg !8043
  %262 = load i8*, i8** %ret.i.i304, align 8, !dbg !8044
  store i8* %262, i8** %retval.i315, align 8, !dbg !8045
  br label %kmalloc.exit445, !dbg !8045

if.end9.i444:                                     ; preds = %if.then143
  %263 = load i64, i64* %size.addr.i316, align 8, !dbg !8046
  %264 = load i32, i32* %flags.addr.i317, align 4, !dbg !8047
  %call10.i440 = call noalias i8* @__kmalloc(i64 %263, i32 %264) #12, !dbg !8048
  %ptrint.i441 = ptrtoint i8* %call10.i440 to i64, !dbg !8048
  %maskedptr.i442 = and i64 %ptrint.i441, 7, !dbg !8048
  %maskcond.i443 = icmp eq i64 %maskedptr.i442, 0, !dbg !8048
  call void @llvm.assume(i1 %maskcond.i443) #6, !dbg !8048
  store i8* %call10.i440, i8** %retval.i315, align 8, !dbg !8049
  br label %kmalloc.exit445, !dbg !8049

kmalloc.exit445:                                  ; preds = %if.then1.i326, %if.then3.i418, %kmalloc_type.exit.i439, %if.end9.i444
  %265 = load i8*, i8** %retval.i315, align 8, !dbg !8050
  store i8* %265, i8** %fnw, align 8, !dbg !8051
  %266 = load i32, i32* %sz, align 4, !dbg !8052
  store i32 %266, i32* %fnw_sz, align 4, !dbg !8053
  %267 = load i8*, i8** %fnw, align 8, !dbg !8054
  %tobool146 = icmp ne i8* %267, null, !dbg !8054
  br i1 %tobool146, label %if.end148, label %if.then147, !dbg !8056

if.then147:                                       ; preds = %kmalloc.exit445
  store i32 -12, i32* %ret, align 4, !dbg !8057
  br label %reterr, !dbg !8059

if.end148:                                        ; preds = %kmalloc.exit445
  br label %again, !dbg !8060

if.end149:                                        ; preds = %while.end
  %268 = load i8*, i8** %q, align 8, !dbg !8061
  %tobool150 = icmp ne i8* %268, null, !dbg !8061
  br i1 %tobool150, label %if.end154, label %if.then151, !dbg !8063

if.then151:                                       ; preds = %if.end149
  %269 = load i8*, i8** %fj, align 8, !dbg !8064
  %270 = load i32, i32* %i, align 4, !dbg !8065
  %idxprom152 = sext i32 %270 to i64, !dbg !8066
  %arrayidx153 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom152, !dbg !8066
  store i8* %269, i8** %arrayidx153, align 8, !dbg !8067
  br label %if.end154, !dbg !8066

if.end154:                                        ; preds = %if.then151, %if.end149
  %271 = load i8*, i8** %fj, align 8, !dbg !8068
  %272 = load i8*, i8** @funcbufptr, align 8, !dbg !8070
  %cmp155 = icmp ugt i8* %271, %272, !dbg !8071
  br i1 %cmp155, label %if.then157, label %if.end161, !dbg !8072

if.then157:                                       ; preds = %if.end154
  %273 = load i8*, i8** %fnw, align 8, !dbg !8073
  %274 = load i8*, i8** @funcbufptr, align 8, !dbg !8074
  %275 = load i8*, i8** %fj, align 8, !dbg !8075
  %276 = load i8*, i8** @funcbufptr, align 8, !dbg !8076
  %sub.ptr.lhs.cast158 = ptrtoint i8* %275 to i64, !dbg !8077
  %sub.ptr.rhs.cast159 = ptrtoint i8* %276 to i64, !dbg !8077
  %sub.ptr.sub160 = sub i64 %sub.ptr.lhs.cast158, %sub.ptr.rhs.cast159, !dbg !8077
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %273, i8* align 1 %274, i64 %sub.ptr.sub160, i1 false), !dbg !8078
  br label %if.end161, !dbg !8078

if.end161:                                        ; preds = %if.then157, %if.end154
  store i32 0, i32* %k, align 4, !dbg !8079
  br label %for.cond162, !dbg !8081

for.cond162:                                      ; preds = %for.inc179, %if.end161
  %277 = load i32, i32* %k, align 4, !dbg !8082
  %278 = load i32, i32* %j, align 4, !dbg !8084
  %cmp163 = icmp slt i32 %277, %278, !dbg !8085
  br i1 %cmp163, label %for.body165, label %for.end181, !dbg !8086

for.body165:                                      ; preds = %for.cond162
  %279 = load i32, i32* %k, align 4, !dbg !8087
  %idxprom166 = sext i32 %279 to i64, !dbg !8089
  %arrayidx167 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom166, !dbg !8089
  %280 = load i8*, i8** %arrayidx167, align 8, !dbg !8089
  %tobool168 = icmp ne i8* %280, null, !dbg !8089
  br i1 %tobool168, label %if.then169, label %if.end178, !dbg !8090

if.then169:                                       ; preds = %for.body165
  %281 = load i8*, i8** %fnw, align 8, !dbg !8091
  %282 = load i32, i32* %k, align 4, !dbg !8092
  %idxprom170 = sext i32 %282 to i64, !dbg !8093
  %arrayidx171 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom170, !dbg !8093
  %283 = load i8*, i8** %arrayidx171, align 8, !dbg !8093
  %284 = load i8*, i8** @funcbufptr, align 8, !dbg !8094
  %sub.ptr.lhs.cast172 = ptrtoint i8* %283 to i64, !dbg !8095
  %sub.ptr.rhs.cast173 = ptrtoint i8* %284 to i64, !dbg !8095
  %sub.ptr.sub174 = sub i64 %sub.ptr.lhs.cast172, %sub.ptr.rhs.cast173, !dbg !8095
  %add.ptr175 = getelementptr i8, i8* %281, i64 %sub.ptr.sub174, !dbg !8096
  %285 = load i32, i32* %k, align 4, !dbg !8097
  %idxprom176 = sext i32 %285 to i64, !dbg !8098
  %arrayidx177 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom176, !dbg !8098
  store i8* %add.ptr175, i8** %arrayidx177, align 8, !dbg !8099
  br label %if.end178, !dbg !8098

if.end178:                                        ; preds = %if.then169, %for.body165
  br label %for.inc179, !dbg !8100

for.inc179:                                       ; preds = %if.end178
  %286 = load i32, i32* %k, align 4, !dbg !8101
  %inc180 = add i32 %286, 1, !dbg !8101
  store i32 %inc180, i32* %k, align 4, !dbg !8101
  br label %for.cond162, !dbg !8102, !llvm.loop !8103

for.end181:                                       ; preds = %for.cond162
  %287 = load i8*, i8** %first_free, align 8, !dbg !8105
  %288 = load i8*, i8** %fj, align 8, !dbg !8107
  %cmp182 = icmp ugt i8* %287, %288, !dbg !8108
  br i1 %cmp182, label %if.then184, label %if.end216, !dbg !8109

if.then184:                                       ; preds = %for.end181
  %289 = load i8*, i8** %fnw, align 8, !dbg !8110
  %290 = load i8*, i8** %fj, align 8, !dbg !8112
  %291 = load i8*, i8** @funcbufptr, align 8, !dbg !8113
  %sub.ptr.lhs.cast185 = ptrtoint i8* %290 to i64, !dbg !8114
  %sub.ptr.rhs.cast186 = ptrtoint i8* %291 to i64, !dbg !8114
  %sub.ptr.sub187 = sub i64 %sub.ptr.lhs.cast185, %sub.ptr.rhs.cast186, !dbg !8114
  %add.ptr188 = getelementptr i8, i8* %289, i64 %sub.ptr.sub187, !dbg !8115
  %292 = load i32, i32* %delta, align 4, !dbg !8116
  %idx.ext189 = sext i32 %292 to i64, !dbg !8117
  %add.ptr190 = getelementptr i8, i8* %add.ptr188, i64 %idx.ext189, !dbg !8117
  %293 = load i8*, i8** %fj, align 8, !dbg !8118
  %294 = load i8*, i8** %first_free, align 8, !dbg !8119
  %295 = load i8*, i8** %fj, align 8, !dbg !8120
  %sub.ptr.lhs.cast191 = ptrtoint i8* %294 to i64, !dbg !8121
  %sub.ptr.rhs.cast192 = ptrtoint i8* %295 to i64, !dbg !8121
  %sub.ptr.sub193 = sub i64 %sub.ptr.lhs.cast191, %sub.ptr.rhs.cast192, !dbg !8121
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %add.ptr190, i8* align 1 %293, i64 %sub.ptr.sub193, i1 false), !dbg !8122
  %296 = load i32, i32* %j, align 4, !dbg !8123
  store i32 %296, i32* %k, align 4, !dbg !8125
  br label %for.cond194, !dbg !8126

for.cond194:                                      ; preds = %for.inc213, %if.then184
  %297 = load i32, i32* %k, align 4, !dbg !8127
  %cmp195 = icmp slt i32 %297, 256, !dbg !8129
  br i1 %cmp195, label %for.body197, label %for.end215, !dbg !8130

for.body197:                                      ; preds = %for.cond194
  %298 = load i32, i32* %k, align 4, !dbg !8131
  %idxprom198 = sext i32 %298 to i64, !dbg !8133
  %arrayidx199 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom198, !dbg !8133
  %299 = load i8*, i8** %arrayidx199, align 8, !dbg !8133
  %tobool200 = icmp ne i8* %299, null, !dbg !8133
  br i1 %tobool200, label %if.then201, label %if.end212, !dbg !8134

if.then201:                                       ; preds = %for.body197
  %300 = load i8*, i8** %fnw, align 8, !dbg !8135
  %301 = load i32, i32* %k, align 4, !dbg !8136
  %idxprom202 = sext i32 %301 to i64, !dbg !8137
  %arrayidx203 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom202, !dbg !8137
  %302 = load i8*, i8** %arrayidx203, align 8, !dbg !8137
  %303 = load i8*, i8** @funcbufptr, align 8, !dbg !8138
  %sub.ptr.lhs.cast204 = ptrtoint i8* %302 to i64, !dbg !8139
  %sub.ptr.rhs.cast205 = ptrtoint i8* %303 to i64, !dbg !8139
  %sub.ptr.sub206 = sub i64 %sub.ptr.lhs.cast204, %sub.ptr.rhs.cast205, !dbg !8139
  %add.ptr207 = getelementptr i8, i8* %300, i64 %sub.ptr.sub206, !dbg !8140
  %304 = load i32, i32* %delta, align 4, !dbg !8141
  %idx.ext208 = sext i32 %304 to i64, !dbg !8142
  %add.ptr209 = getelementptr i8, i8* %add.ptr207, i64 %idx.ext208, !dbg !8142
  %305 = load i32, i32* %k, align 4, !dbg !8143
  %idxprom210 = sext i32 %305 to i64, !dbg !8144
  %arrayidx211 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom210, !dbg !8144
  store i8* %add.ptr209, i8** %arrayidx211, align 8, !dbg !8145
  br label %if.end212, !dbg !8144

if.end212:                                        ; preds = %if.then201, %for.body197
  br label %for.inc213, !dbg !8146

for.inc213:                                       ; preds = %if.end212
  %306 = load i32, i32* %k, align 4, !dbg !8147
  %inc214 = add i32 %306, 1, !dbg !8147
  store i32 %inc214, i32* %k, align 4, !dbg !8147
  br label %for.cond194, !dbg !8148, !llvm.loop !8149

for.end215:                                       ; preds = %for.cond194
  br label %if.end216, !dbg !8151

if.end216:                                        ; preds = %for.end215, %for.end181
  %307 = load i8*, i8** @funcbufptr, align 8, !dbg !8152
  %cmp217 = icmp ne i8* %307, getelementptr inbounds ([0 x i8], [0 x i8]* @func_buf, i64 0, i64 0), !dbg !8154
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !8155

if.then219:                                       ; preds = %if.end216
  %308 = load i8*, i8** @funcbufptr, align 8, !dbg !8156
  call void @kfree(i8* %308) #11, !dbg !8157
  br label %if.end220, !dbg !8157

if.end220:                                        ; preds = %if.then219, %if.end216
  %309 = load i8*, i8** %fnw, align 8, !dbg !8158
  store i8* %309, i8** @funcbufptr, align 8, !dbg !8159
  %310 = load i32, i32* @funcbufleft, align 4, !dbg !8160
  %311 = load i32, i32* %delta, align 4, !dbg !8161
  %sub221 = sub i32 %310, %311, !dbg !8162
  %312 = load i32, i32* %sz, align 4, !dbg !8163
  %add222 = add i32 %sub221, %312, !dbg !8164
  %313 = load i32, i32* @funcbufsize, align 4, !dbg !8165
  %sub223 = sub i32 %add222, %313, !dbg !8166
  store i32 %sub223, i32* @funcbufleft, align 4, !dbg !8167
  %314 = load i32, i32* %sz, align 4, !dbg !8168
  store i32 %314, i32* @funcbufsize, align 4, !dbg !8169
  br label %if.end224

if.end224:                                        ; preds = %if.end220, %if.end134
  %315 = load i32, i32* %i, align 4, !dbg !8170
  %idxprom225 = sext i32 %315 to i64, !dbg !8171
  %arrayidx226 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom225, !dbg !8171
  %316 = load i8*, i8** %arrayidx226, align 8, !dbg !8171
  %317 = load %struct.kbsentry*, %struct.kbsentry** %kbs, align 8, !dbg !8172
  %kb_string227 = getelementptr inbounds %struct.kbsentry, %struct.kbsentry* %317, i32 0, i32 1, !dbg !8173
  %arraydecay228 = getelementptr inbounds [512 x i8], [512 x i8]* %kb_string227, i64 0, i64 0, !dbg !8172
  %call229 = call i8* @strcpy(i8* %316, i8* %arraydecay228) #11, !dbg !8174
  %318 = load i64, i64* %flags, align 8, !dbg !8175
  store %struct.spinlock* @func_buf_lock, %struct.spinlock** %lock.addr.i446, align 8
  store i64 %318, i64* %flags.addr.i447, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !8176
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !8176
  store i32 1, i32* %tmp.i448, align 4, !dbg !8176
  %319 = load i32, i32* %tmp.i448, align 4, !dbg !8176
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !8177
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !8177
  store i32 1, i32* %tmp8.i449, align 4, !dbg !8177
  %320 = load i32, i32* %tmp8.i449, align 4, !dbg !8177
  %321 = load i64, i64* %flags.addr.i447, align 8, !dbg !8178
  call void @arch_local_irq_restore(i64 %321) #12, !dbg !8178
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8179, !srcloc !4921
  %322 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i446, align 8, !dbg !8180
  %323 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %322, i32 0, i32 0, !dbg !8180
  %rlock.i450 = bitcast %union.anon* %323 to %struct.raw_spinlock*, !dbg !8180
  br label %sw.epilog, !dbg !8181

sw.epilog:                                        ; preds = %do.end11, %if.end224
  store i32 0, i32* %ret, align 4, !dbg !8182
  br label %reterr, !dbg !8183

reterr:                                           ; preds = %sw.epilog, %if.then147, %if.then51, %copy_to_user.exit, %if.then6, %if.then2
  call void @llvm.dbg.label(metadata !8184), !dbg !8185
  %324 = load %struct.kbsentry*, %struct.kbsentry** %kbs, align 8, !dbg !8186
  %325 = bitcast %struct.kbsentry* %324 to i8*, !dbg !8186
  call void @kfree(i8* %325) #11, !dbg !8187
  %326 = load i32, i32* %ret, align 4, !dbg !8188
  ret i32 %326, !dbg !8189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @array_index_mask_nospec(i64 %index, i64 %size) #0 !dbg !8190 {
entry:
  %index.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %mask = alloca i64, align 8
  store i64 %index, i64* %index.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !8194, metadata !DIExpression()), !dbg !8195
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8196, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !8198, metadata !DIExpression()), !dbg !8199
  %0 = load i64, i64* %size.addr, align 8, !dbg !8200
  %1 = load i64, i64* %index.addr, align 8, !dbg !8201
  %2 = call i64 asm sideeffect "cmp $1,$2; sbb $0,$0;", "=r,imr,r,~{cc},~{dirflag},~{fpsr},~{flags}"(i64 %0, i64 %1) #6, !dbg !8202, !srcloc !8203
  store i64 %2, i64* %mask, align 8, !dbg !8202
  %3 = load i64, i64* %mask, align 8, !dbg !8204
  ret i64 %3, !dbg !8205
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_do_kdskled(i32 %console, i32 %cmd, i64 %arg, i32 %perm) #0 !dbg !8206 {
entry:
  %lock.addr.i91 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i91, metadata !4860, metadata !DIExpression()), !dbg !8209
  %flags.addr.i92 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i92, metadata !4867, metadata !DIExpression()), !dbg !8212
  %tmp.i93 = alloca i32, align 4
  %tmp8.i94 = alloca i32, align 4
  %lock.addr.i89 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i89, metadata !4869, metadata !DIExpression()), !dbg !8213
  %lock.addr.i87 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i87, metadata !4860, metadata !DIExpression()), !dbg !8220
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !8222
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !8223
  %retval = alloca i32, align 4
  %console.addr = alloca i32, align 4
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %perm.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  %flags = alloca i64, align 8
  %ucval = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp24 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i8, align 1
  %tmp26 = alloca i64, align 8
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  %__dummy43 = alloca i64, align 8
  %__dummy244 = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  %tmp73 = alloca i64, align 8
  %__ret_pu74 = alloca i32, align 4
  %__ptr_pu75 = alloca i8*, align 8
  %__val_pu76 = alloca i8, align 1
  %tmp79 = alloca i64, align 8
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !8230, metadata !DIExpression()), !dbg !8231
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !8232, metadata !DIExpression()), !dbg !8233
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !8234, metadata !DIExpression()), !dbg !8235
  store i32 %perm, i32* %perm.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %perm.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !8238, metadata !DIExpression()), !dbg !8239
  %0 = load i32, i32* %console.addr, align 4, !dbg !8240
  %idx.ext = sext i32 %0 to i64, !dbg !8241
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !8241
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !8239
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8242, metadata !DIExpression()), !dbg !8243
  call void @llvm.dbg.declare(metadata i8* %ucval, metadata !8244, metadata !DIExpression()), !dbg !8245
  %1 = load i32, i32* %cmd.addr, align 4, !dbg !8246
  switch i32 %1, label %sw.epilog [
    i32 19300, label %sw.bb
    i32 19301, label %sw.bb29
    i32 19249, label %sw.bb71
    i32 19250, label %sw.bb82
  ], !dbg !8247

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !8248

do.body:                                          ; preds = %sw.bb
  br label %do.body1, !dbg !8249

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8250, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8253, metadata !DIExpression()), !dbg !8252
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8252
  %conv = zext i1 %cmp to i32, !dbg !8252
  store i32 1, i32* %tmp, align 4, !dbg !8252
  %2 = load i32, i32* %tmp, align 4, !dbg !8252
  br label %do.body2, !dbg !8254

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8255

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8256

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8258, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8262, metadata !DIExpression()), !dbg !8261
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8261
  %conv8 = zext i1 %cmp7 to i32, !dbg !8261
  store i32 1, i32* %tmp9, align 4, !dbg !8261
  %3 = load i32, i32* %tmp9, align 4, !dbg !8261
  %call = call i64 @arch_local_irq_save() #11, !dbg !8263
  store i64 %call, i64* %flags, align 8, !dbg !8263
  br label %do.end, !dbg !8263

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8256

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8255

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8264, !srcloc !8265
  br label %do.body12, !dbg !8264

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8266
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !8267
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !8267
  br label %do.end14, !dbg !8268

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8264

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8255

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8254

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8249

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8269
  %ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %6, i32 0, i32 2, !dbg !8270
  %bf.load = load i8, i8* %ledflagstate, align 1, !dbg !8270
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !8270
  %bf.clear = and i8 %bf.lshr, 15, !dbg !8270
  %conv19 = zext i8 %bf.clear to i32, !dbg !8269
  %7 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8271
  %default_ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %7, i32 0, i32 3, !dbg !8272
  %bf.load20 = load i8, i8* %default_ledflagstate, align 1, !dbg !8272
  %bf.clear21 = and i8 %bf.load20, 15, !dbg !8272
  %conv22 = zext i8 %bf.clear21 to i32, !dbg !8271
  %shl = shl i32 %conv22, 4, !dbg !8273
  %or = or i32 %conv19, %shl, !dbg !8274
  %conv23 = trunc i32 %or to i8, !dbg !8269
  store i8 %conv23, i8* %ucval, align 1, !dbg !8275
  %8 = load i64, i64* %flags, align 8, !dbg !8276
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i87, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !8277
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !8277
  store i32 1, i32* %tmp.i, align 4, !dbg !8277
  %9 = load i32, i32* %tmp.i, align 4, !dbg !8277
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !8278
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !8278
  store i32 1, i32* %tmp8.i, align 4, !dbg !8278
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !8278
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !8279
  call void @arch_local_irq_restore(i64 %11) #12, !dbg !8279
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8280, !srcloc !4921
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i87, align 8, !dbg !8281
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !8281
  %rlock.i88 = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !8281
  call void @might_fault() #11, !dbg !8282
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !8284, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !8287, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.declare(metadata i8* %__val_pu, metadata !8288, metadata !DIExpression()), !dbg !8286
  %14 = load i64, i64* %arg.addr, align 8, !dbg !8286
  %15 = inttoptr i64 %14 to i8*, !dbg !8286
  store i8* %15, i8** %__ptr_pu, align 8, !dbg !8286
  %16 = load i8, i8* %ucval, align 1, !dbg !8286
  store i8 %16, i8* %__val_pu, align 1, !dbg !8286
  %17 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !8286
  %18 = load i8*, i8** %__ptr_pu, align 8, !dbg !8286
  %19 = load i8, i8* %__val_pu, align 1, !dbg !8286
  %20 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %18, i8 %19, i64 1, i64 %17) #6, !dbg !8286, !srcloc !8289
  %asmresult = extractvalue { i8*, i64 } %20, 0, !dbg !8286
  %asmresult25 = extractvalue { i8*, i64 } %20, 1, !dbg !8286
  %21 = ptrtoint i8* %asmresult to i64, !dbg !8286
  %22 = trunc i64 %21 to i32, !dbg !8286
  store i32 %22, i32* %__ret_pu, align 4, !dbg !8286
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult25), !dbg !8286
  %23 = load i32, i32* %__ret_pu, align 4, !dbg !8286
  %conv27 = sext i32 %23 to i64, !dbg !8286
  store i64 %conv27, i64* %tmp26, align 8, !dbg !8286
  %24 = load i64, i64* %tmp26, align 8, !dbg !8286
  store i64 %24, i64* %tmp24, align 8, !dbg !8282
  %25 = load i64, i64* %tmp24, align 8, !dbg !8282
  %conv28 = trunc i64 %25 to i32, !dbg !8290
  store i32 %conv28, i32* %retval, align 4, !dbg !8291
  br label %return, !dbg !8291

sw.bb29:                                          ; preds = %entry
  %26 = load i32, i32* %perm.addr, align 4, !dbg !8292
  %tobool = icmp ne i32 %26, 0, !dbg !8292
  br i1 %tobool, label %if.end, label %if.then, !dbg !8294

if.then:                                          ; preds = %sw.bb29
  store i32 -1, i32* %retval, align 4, !dbg !8295
  br label %return, !dbg !8295

if.end:                                           ; preds = %sw.bb29
  %27 = load i64, i64* %arg.addr, align 8, !dbg !8296
  %and = and i64 %27, -120, !dbg !8298
  %tobool30 = icmp ne i64 %and, 0, !dbg !8298
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !8299

if.then31:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8300
  br label %return, !dbg !8300

if.end32:                                         ; preds = %if.end
  br label %do.body33, !dbg !8301

do.body33:                                        ; preds = %if.end32
  br label %do.body34, !dbg !8302

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !8303, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !8306, metadata !DIExpression()), !dbg !8305
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !8305
  %conv38 = zext i1 %cmp37 to i32, !dbg !8305
  store i32 1, i32* %tmp39, align 4, !dbg !8305
  %28 = load i32, i32* %tmp39, align 4, !dbg !8305
  br label %do.body40, !dbg !8307

do.body40:                                        ; preds = %do.body34
  br label %do.body41, !dbg !8308

do.body41:                                        ; preds = %do.body40
  br label %do.body42, !dbg !8309

do.body42:                                        ; preds = %do.body41
  call void @llvm.dbg.declare(metadata i64* %__dummy43, metadata !8311, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !8315, metadata !DIExpression()), !dbg !8314
  %cmp45 = icmp eq i64* %__dummy43, %__dummy244, !dbg !8314
  %conv46 = zext i1 %cmp45 to i32, !dbg !8314
  store i32 1, i32* %tmp47, align 4, !dbg !8314
  %29 = load i32, i32* %tmp47, align 4, !dbg !8314
  %call48 = call i64 @arch_local_irq_save() #11, !dbg !8316
  store i64 %call48, i64* %flags, align 8, !dbg !8316
  br label %do.end49, !dbg !8316

do.end49:                                         ; preds = %do.body42
  br label %do.end50, !dbg !8309

do.end50:                                         ; preds = %do.end49
  br label %do.body51, !dbg !8308

do.body51:                                        ; preds = %do.end50
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8317, !srcloc !8318
  br label %do.body52, !dbg !8317

do.body52:                                        ; preds = %do.body51
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i89, align 8
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i89, align 8, !dbg !8319
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !8320
  %rlock.i90 = bitcast %union.anon* %31 to %struct.raw_spinlock*, !dbg !8320
  br label %do.end54, !dbg !8321

do.end54:                                         ; preds = %do.body52
  br label %do.end55, !dbg !8317

do.end55:                                         ; preds = %do.end54
  br label %do.end56, !dbg !8308

do.end56:                                         ; preds = %do.end55
  br label %do.end57, !dbg !8307

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !8302

do.end58:                                         ; preds = %do.end57
  %32 = load i64, i64* %arg.addr, align 8, !dbg !8322
  %and59 = and i64 %32, 7, !dbg !8323
  %conv60 = trunc i64 %and59 to i8, !dbg !8324
  %33 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8325
  %ledflagstate61 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %33, i32 0, i32 2, !dbg !8326
  %bf.load62 = load i8, i8* %ledflagstate61, align 1, !dbg !8327
  %bf.value = and i8 %conv60, 15, !dbg !8327
  %bf.shl = shl i8 %bf.value, 1, !dbg !8327
  %bf.clear63 = and i8 %bf.load62, -31, !dbg !8327
  %bf.set = or i8 %bf.clear63, %bf.shl, !dbg !8327
  store i8 %bf.set, i8* %ledflagstate61, align 1, !dbg !8327
  %34 = load i64, i64* %arg.addr, align 8, !dbg !8328
  %shr = lshr i64 %34, 4, !dbg !8329
  %and64 = and i64 %shr, 7, !dbg !8330
  %conv65 = trunc i64 %and64 to i8, !dbg !8331
  %35 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8332
  %default_ledflagstate66 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %35, i32 0, i32 3, !dbg !8333
  %bf.load67 = load i8, i8* %default_ledflagstate66, align 1, !dbg !8334
  %bf.value68 = and i8 %conv65, 15, !dbg !8334
  %bf.clear69 = and i8 %bf.load67, -16, !dbg !8334
  %bf.set70 = or i8 %bf.clear69, %bf.value68, !dbg !8334
  store i8 %bf.set70, i8* %default_ledflagstate66, align 1, !dbg !8334
  call void @set_leds() #11, !dbg !8335
  %36 = load i64, i64* %flags, align 8, !dbg !8336
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i91, align 8
  store i64 %36, i64* %flags.addr.i92, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !8337
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !8337
  store i32 1, i32* %tmp.i93, align 4, !dbg !8337
  %37 = load i32, i32* %tmp.i93, align 4, !dbg !8337
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !8338
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !8338
  store i32 1, i32* %tmp8.i94, align 4, !dbg !8338
  %38 = load i32, i32* %tmp8.i94, align 4, !dbg !8338
  %39 = load i64, i64* %flags.addr.i92, align 8, !dbg !8339
  call void @arch_local_irq_restore(i64 %39) #12, !dbg !8339
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8340, !srcloc !4921
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i91, align 8, !dbg !8341
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !8341
  %rlock.i95 = bitcast %union.anon* %41 to %struct.raw_spinlock*, !dbg !8341
  store i32 0, i32* %retval, align 4, !dbg !8342
  br label %return, !dbg !8342

sw.bb71:                                          ; preds = %entry
  %call72 = call zeroext i8 @getledstate() #11, !dbg !8343
  store i8 %call72, i8* %ucval, align 1, !dbg !8344
  call void @might_fault() #11, !dbg !8345
  call void @llvm.dbg.declare(metadata i32* %__ret_pu74, metadata !8347, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu75, metadata !8350, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.declare(metadata i8* %__val_pu76, metadata !8351, metadata !DIExpression()), !dbg !8349
  %42 = load i64, i64* %arg.addr, align 8, !dbg !8349
  %43 = inttoptr i64 %42 to i8*, !dbg !8349
  store i8* %43, i8** %__ptr_pu75, align 8, !dbg !8349
  %44 = load i8, i8* %ucval, align 1, !dbg !8349
  store i8 %44, i8* %__val_pu76, align 1, !dbg !8349
  %45 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !8349
  %46 = load i8*, i8** %__ptr_pu75, align 8, !dbg !8349
  %47 = load i8, i8* %__val_pu76, align 1, !dbg !8349
  %48 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %46, i8 %47, i64 1, i64 %45) #6, !dbg !8349, !srcloc !8352
  %asmresult77 = extractvalue { i8*, i64 } %48, 0, !dbg !8349
  %asmresult78 = extractvalue { i8*, i64 } %48, 1, !dbg !8349
  %49 = ptrtoint i8* %asmresult77 to i64, !dbg !8349
  %50 = trunc i64 %49 to i32, !dbg !8349
  store i32 %50, i32* %__ret_pu74, align 4, !dbg !8349
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult78), !dbg !8349
  %51 = load i32, i32* %__ret_pu74, align 4, !dbg !8349
  %conv80 = sext i32 %51 to i64, !dbg !8349
  store i64 %conv80, i64* %tmp79, align 8, !dbg !8349
  %52 = load i64, i64* %tmp79, align 8, !dbg !8349
  store i64 %52, i64* %tmp73, align 8, !dbg !8345
  %53 = load i64, i64* %tmp73, align 8, !dbg !8345
  %conv81 = trunc i64 %53 to i32, !dbg !8353
  store i32 %conv81, i32* %retval, align 4, !dbg !8354
  br label %return, !dbg !8354

sw.bb82:                                          ; preds = %entry
  %54 = load i32, i32* %perm.addr, align 4, !dbg !8355
  %tobool83 = icmp ne i32 %54, 0, !dbg !8355
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !8357

if.then84:                                        ; preds = %sw.bb82
  store i32 -1, i32* %retval, align 4, !dbg !8358
  br label %return, !dbg !8358

if.end85:                                         ; preds = %sw.bb82
  %55 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8359
  %56 = load i64, i64* %arg.addr, align 8, !dbg !8360
  %conv86 = trunc i64 %56 to i32, !dbg !8360
  call void @setledstate(%struct.kbd_struct* %55, i32 %conv86) #11, !dbg !8361
  store i32 0, i32* %retval, align 4, !dbg !8362
  br label %return, !dbg !8362

sw.epilog:                                        ; preds = %entry
  store i32 -515, i32* %retval, align 4, !dbg !8363
  br label %return, !dbg !8363

return:                                           ; preds = %sw.epilog, %if.end85, %if.then84, %sw.bb71, %do.end58, %if.then31, %if.then, %do.end18
  %57 = load i32, i32* %retval, align 4, !dbg !8364
  ret i32 %57, !dbg !8364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @getledstate() #0 !dbg !8365 {
entry:
  %0 = load i32, i32* @ledstate, align 4, !dbg !8368
  %and = and i32 %0, 255, !dbg !8369
  %conv = trunc i32 %and to i8, !dbg !8368
  ret i8 %conv, !dbg !8370
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_do_kdgkbmode(i32 %console) #0 !dbg !8371 {
entry:
  %retval = alloca i32, align 4
  %console.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !8374, metadata !DIExpression()), !dbg !8375
  %0 = load i32, i32* %console.addr, align 4, !dbg !8376
  %idx.ext = sext i32 %0 to i64, !dbg !8377
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !8377
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !8375
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8378
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %1, i32 0, i32 3, !dbg !8379
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !8379
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !8379
  %bf.clear = and i8 %bf.lshr, 7, !dbg !8379
  %conv = zext i8 %bf.clear to i32, !dbg !8378
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
  ], !dbg !8380

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8381
  br label %return, !dbg !8381

sw.bb1:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !8383
  br label %return, !dbg !8383

sw.bb2:                                           ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !8384
  br label %return, !dbg !8384

sw.bb3:                                           ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !8385
  br label %return, !dbg !8385

sw.default:                                       ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8386
  br label %return, !dbg !8386

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !8387
  ret i32 %2, !dbg !8387
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_do_kdgkbmeta(i32 %console) #0 !dbg !8388 {
entry:
  %console.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !8389, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !8391, metadata !DIExpression()), !dbg !8392
  %0 = load i32, i32* %console.addr, align 4, !dbg !8393
  %idx.ext = sext i32 %0 to i64, !dbg !8394
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !8394
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !8392
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8395
  %call = call i32 @vc_kbd_mode(%struct.kbd_struct* %1, i32 4) #11, !dbg !8396
  %tobool = icmp ne i32 %call, 0, !dbg !8396
  %2 = zext i1 %tobool to i64, !dbg !8396
  %cond = select i1 %tobool, i32 4, i32 3, !dbg !8396
  ret i32 %cond, !dbg !8397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vc_kbd_mode(%struct.kbd_struct* %kbd, i32 %flag) #0 !dbg !8398 {
entry:
  %kbd.addr = alloca %struct.kbd_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.kbd_struct* %kbd, %struct.kbd_struct** %kbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kbd.addr, metadata !8399, metadata !DIExpression()), !dbg !8400
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !8401, metadata !DIExpression()), !dbg !8402
  %0 = load %struct.kbd_struct*, %struct.kbd_struct** %kbd.addr, align 8, !dbg !8403
  %modeflags = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %0, i32 0, i32 4, !dbg !8404
  %bf.load = load i8, i8* %modeflags, align 1, !dbg !8404
  %bf.clear = and i8 %bf.load, 31, !dbg !8404
  %conv = zext i8 %bf.clear to i32, !dbg !8403
  %1 = load i32, i32* %flag.addr, align 4, !dbg !8405
  %shr = ashr i32 %conv, %1, !dbg !8406
  %and = and i32 %shr, 1, !dbg !8407
  ret i32 %and, !dbg !8408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vt_reset_unicode(i32 %console) #0 !dbg !8409 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !4860, metadata !DIExpression()), !dbg !8410
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !8412
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !8413
  %console.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !8420, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8422, metadata !DIExpression()), !dbg !8423
  br label %do.body, !dbg !8424

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8425

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8426, metadata !DIExpression()), !dbg !8428
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8429, metadata !DIExpression()), !dbg !8428
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8428
  %conv = zext i1 %cmp to i32, !dbg !8428
  store i32 1, i32* %tmp, align 4, !dbg !8428
  %0 = load i32, i32* %tmp, align 4, !dbg !8428
  br label %do.body2, !dbg !8430

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8431

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8432

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8434, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8438, metadata !DIExpression()), !dbg !8437
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8437
  %conv8 = zext i1 %cmp7 to i32, !dbg !8437
  store i32 1, i32* %tmp9, align 4, !dbg !8437
  %1 = load i32, i32* %tmp9, align 4, !dbg !8437
  %call = call i64 @arch_local_irq_save() #11, !dbg !8439
  store i64 %call, i64* %flags, align 8, !dbg !8439
  br label %do.end, !dbg !8439

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8432

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8431

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8440, !srcloc !8441
  br label %do.body12, !dbg !8440

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8442
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !8443
  %rlock.i = bitcast %union.anon* %3 to %struct.raw_spinlock*, !dbg !8443
  br label %do.end14, !dbg !8444

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8440

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8431

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8430

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8425

do.end18:                                         ; preds = %do.end17
  %4 = load i32, i32* @default_utf8, align 4, !dbg !8445
  %tobool = icmp ne i32 %4, 0, !dbg !8445
  %5 = zext i1 %tobool to i64, !dbg !8445
  %cond = select i1 %tobool, i32 3, i32 0, !dbg !8445
  %conv19 = trunc i32 %cond to i8, !dbg !8445
  %6 = load i32, i32* %console.addr, align 4, !dbg !8446
  %idxprom = sext i32 %6 to i64, !dbg !8447
  %arrayidx = getelementptr [63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 %idxprom, !dbg !8447
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %arrayidx, i32 0, i32 3, !dbg !8448
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !8449
  %bf.value = and i8 %conv19, 7, !dbg !8449
  %bf.shl = shl i8 %bf.value, 4, !dbg !8449
  %bf.clear = and i8 %bf.load, -113, !dbg !8449
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !8449
  store i8 %bf.set, i8* %kbdmode, align 1, !dbg !8449
  %7 = load i64, i64* %flags, align 8, !dbg !8450
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !8451
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !8451
  store i32 1, i32* %tmp.i, align 4, !dbg !8451
  %8 = load i32, i32* %tmp.i, align 4, !dbg !8451
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !8452
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !8452
  store i32 1, i32* %tmp8.i, align 4, !dbg !8452
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !8452
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !8453
  call void @arch_local_irq_restore(i64 %10) #12, !dbg !8453
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8454, !srcloc !4921
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !8455
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !8455
  %rlock.i21 = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !8455
  ret void, !dbg !8456
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_get_shift_state() #0 !dbg !8457 {
entry:
  %0 = load i32, i32* @shift_state, align 4, !dbg !8458
  ret i32 %0, !dbg !8459
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vt_reset_keyboard(i32 %console) #0 !dbg !8460 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !8461, metadata !DIExpression()), !dbg !8465
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !8467, metadata !DIExpression()), !dbg !8469
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !4860, metadata !DIExpression()), !dbg !8471
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !8473
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !8474
  %console.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !8481, metadata !DIExpression()), !dbg !8482
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !8483, metadata !DIExpression()), !dbg !8484
  %0 = load i32, i32* %console.addr, align 4, !dbg !8485
  %idx.ext = sext i32 %0 to i64, !dbg !8486
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !8486
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !8484
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8487, metadata !DIExpression()), !dbg !8488
  br label %do.body, !dbg !8489

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8490

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8491, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8494, metadata !DIExpression()), !dbg !8493
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8493
  %conv = zext i1 %cmp to i32, !dbg !8493
  store i32 1, i32* %tmp, align 4, !dbg !8493
  %1 = load i32, i32* %tmp, align 4, !dbg !8493
  br label %do.body2, !dbg !8495

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8496

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8497

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8499, metadata !DIExpression()), !dbg !8502
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8503, metadata !DIExpression()), !dbg !8502
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8502
  %conv8 = zext i1 %cmp7 to i32, !dbg !8502
  store i32 1, i32* %tmp9, align 4, !dbg !8502
  %2 = load i32, i32* %tmp9, align 4, !dbg !8502
  %call = call i64 @arch_local_irq_save() #11, !dbg !8504
  store i64 %call, i64* %flags, align 8, !dbg !8504
  br label %do.end, !dbg !8504

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8497

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8496

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8505, !srcloc !8506
  br label %do.body12, !dbg !8505

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8507
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8508
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !8508
  br label %do.end14, !dbg !8509

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8505

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8496

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8495

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8490

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8510
  call void @set_vc_kbd_mode(%struct.kbd_struct* %5, i32 2) #11, !dbg !8511
  %6 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8512
  call void @clr_vc_kbd_mode(%struct.kbd_struct* %6, i32 1) #11, !dbg !8513
  %7 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8514
  call void @clr_vc_kbd_mode(%struct.kbd_struct* %7, i32 0) #11, !dbg !8515
  %8 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8516
  call void @clr_vc_kbd_mode(%struct.kbd_struct* %8, i32 3) #11, !dbg !8517
  %9 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8518
  %lockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %9, i32 0, i32 0, !dbg !8519
  store i8 0, i8* %lockstate, align 1, !dbg !8520
  %10 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8521
  %slockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %10, i32 0, i32 1, !dbg !8522
  store i8 0, i8* %slockstate, align 1, !dbg !8523
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i25, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8524, !srcloc !8526
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !8527
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !8527
  %rlock.i26 = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !8527
  %13 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8529
  %ledmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %13, i32 0, i32 2, !dbg !8530
  %bf.load = load i8, i8* %ledmode, align 1, !dbg !8531
  %bf.clear = and i8 %bf.load, -2, !dbg !8531
  store i8 %bf.clear, i8* %ledmode, align 1, !dbg !8531
  %14 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8532
  %default_ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %14, i32 0, i32 3, !dbg !8533
  %bf.load19 = load i8, i8* %default_ledflagstate, align 1, !dbg !8533
  %bf.clear20 = and i8 %bf.load19, 15, !dbg !8533
  %15 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8534
  %ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %15, i32 0, i32 2, !dbg !8535
  %bf.load21 = load i8, i8* %ledflagstate, align 1, !dbg !8536
  %bf.value = and i8 %bf.clear20, 15, !dbg !8536
  %bf.shl = shl i8 %bf.value, 1, !dbg !8536
  %bf.clear22 = and i8 %bf.load21, -31, !dbg !8536
  %bf.set = or i8 %bf.clear22, %bf.shl, !dbg !8536
  store i8 %bf.set, i8* %ledflagstate, align 1, !dbg !8536
  store %struct.spinlock* @led_lock, %struct.spinlock** %lock.addr.i27, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8537, !srcloc !8539
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !8540
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !8540
  %rlock.i28 = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !8540
  %18 = load i64, i64* %flags, align 8, !dbg !8542
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !8543
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !8543
  store i32 1, i32* %tmp.i, align 4, !dbg !8543
  %19 = load i32, i32* %tmp.i, align 4, !dbg !8543
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !8544
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !8544
  store i32 1, i32* %tmp8.i, align 4, !dbg !8544
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !8544
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !8545
  call void @arch_local_irq_restore(i64 %21) #12, !dbg !8545
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8546, !srcloc !4921
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !8547
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !8547
  %rlock.i24 = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !8547
  ret void, !dbg !8548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vt_get_kbd_mode_bit(i32 %console, i32 %bit) #0 !dbg !8549 {
entry:
  %console.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !8552, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !8554, metadata !DIExpression()), !dbg !8555
  %0 = load i32, i32* %console.addr, align 4, !dbg !8556
  %idx.ext = sext i32 %0 to i64, !dbg !8557
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !8557
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !8555
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8558
  %2 = load i32, i32* %bit.addr, align 4, !dbg !8559
  %call = call i32 @vc_kbd_mode(%struct.kbd_struct* %1, i32 %2) #11, !dbg !8560
  ret i32 %call, !dbg !8561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vt_set_kbd_mode_bit(i32 %console, i32 %bit) #0 !dbg !8562 {
entry:
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !4860, metadata !DIExpression()), !dbg !8563
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !8565
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !8566
  %console.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !8573, metadata !DIExpression()), !dbg !8574
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !8575, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !8577, metadata !DIExpression()), !dbg !8578
  %0 = load i32, i32* %console.addr, align 4, !dbg !8579
  %idx.ext = sext i32 %0 to i64, !dbg !8580
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !8580
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !8578
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8581, metadata !DIExpression()), !dbg !8582
  br label %do.body, !dbg !8583

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8584

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8585, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8588, metadata !DIExpression()), !dbg !8587
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8587
  %conv = zext i1 %cmp to i32, !dbg !8587
  store i32 1, i32* %tmp, align 4, !dbg !8587
  %1 = load i32, i32* %tmp, align 4, !dbg !8587
  br label %do.body2, !dbg !8589

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8590

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8591

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8593, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8597, metadata !DIExpression()), !dbg !8596
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8596
  %conv8 = zext i1 %cmp7 to i32, !dbg !8596
  store i32 1, i32* %tmp9, align 4, !dbg !8596
  %2 = load i32, i32* %tmp9, align 4, !dbg !8596
  %call = call i64 @arch_local_irq_save() #11, !dbg !8598
  store i64 %call, i64* %flags, align 8, !dbg !8598
  br label %do.end, !dbg !8598

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8591

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8590

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8599, !srcloc !8600
  br label %do.body12, !dbg !8599

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8601
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8602
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !8602
  br label %do.end14, !dbg !8603

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8599

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8590

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8589

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8584

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8604
  %6 = load i32, i32* %bit.addr, align 4, !dbg !8605
  call void @set_vc_kbd_mode(%struct.kbd_struct* %5, i32 %6) #11, !dbg !8606
  %7 = load i64, i64* %flags, align 8, !dbg !8607
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i19, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !8608
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !8608
  store i32 1, i32* %tmp.i, align 4, !dbg !8608
  %8 = load i32, i32* %tmp.i, align 4, !dbg !8608
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !8609
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !8609
  store i32 1, i32* %tmp8.i, align 4, !dbg !8609
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !8609
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !8610
  call void @arch_local_irq_restore(i64 %10) #12, !dbg !8610
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8611, !srcloc !4921
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !8612
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !8612
  %rlock.i20 = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !8612
  ret void, !dbg !8613
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vt_clr_kbd_mode_bit(i32 %console, i32 %bit) #0 !dbg !8614 {
entry:
  %lock.addr.i19 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i19, metadata !4860, metadata !DIExpression()), !dbg !8615
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !8617
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !8618
  %console.addr = alloca i32, align 4
  %bit.addr = alloca i32, align 4
  %kb = alloca %struct.kbd_struct*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %console, i32* %console.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %console.addr, metadata !8625, metadata !DIExpression()), !dbg !8626
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !8627, metadata !DIExpression()), !dbg !8628
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !8629, metadata !DIExpression()), !dbg !8630
  %0 = load i32, i32* %console.addr, align 4, !dbg !8631
  %idx.ext = sext i32 %0 to i64, !dbg !8632
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !8632
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !8630
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8633, metadata !DIExpression()), !dbg !8634
  br label %do.body, !dbg !8635

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8636

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8637, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8640, metadata !DIExpression()), !dbg !8639
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8639
  %conv = zext i1 %cmp to i32, !dbg !8639
  store i32 1, i32* %tmp, align 4, !dbg !8639
  %1 = load i32, i32* %tmp, align 4, !dbg !8639
  br label %do.body2, !dbg !8641

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8642

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8643

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8645, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8649, metadata !DIExpression()), !dbg !8648
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8648
  %conv8 = zext i1 %cmp7 to i32, !dbg !8648
  store i32 1, i32* %tmp9, align 4, !dbg !8648
  %2 = load i32, i32* %tmp9, align 4, !dbg !8648
  %call = call i64 @arch_local_irq_save() #11, !dbg !8650
  store i64 %call, i64* %flags, align 8, !dbg !8650
  br label %do.end, !dbg !8650

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8643

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8642

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8651, !srcloc !8652
  br label %do.body12, !dbg !8651

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8653
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8654
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !8654
  br label %do.end14, !dbg !8655

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8651

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8642

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8641

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8636

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8656
  %6 = load i32, i32* %bit.addr, align 4, !dbg !8657
  call void @clr_vc_kbd_mode(%struct.kbd_struct* %5, i32 %6) #11, !dbg !8658
  %7 = load i64, i64* %flags, align 8, !dbg !8659
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i19, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !8660
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !8660
  store i32 1, i32* %tmp.i, align 4, !dbg !8660
  %8 = load i32, i32* %tmp.i, align 4, !dbg !8660
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !8661
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !8661
  store i32 1, i32* %tmp8.i, align 4, !dbg !8661
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !8661
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !8662
  call void @arch_local_irq_restore(i64 %10) #12, !dbg !8662
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8663, !srcloc !4921
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i19, align 8, !dbg !8664
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !8664
  %rlock.i20 = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kd_nosound(%struct.timer_list* %unused) #0 !dbg !381 {
entry:
  %unused.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %unused, %struct.timer_list** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %unused.addr, metadata !8666, metadata !DIExpression()), !dbg !8667
  %call = call i32 @input_handler_for_each_handle(%struct.input_handler* @kbd_handler, i8* bitcast (i32* @kd_nosound.zero to i8*), i32 (%struct.input_handle*, i8*)* @kd_sound_helper) #11, !dbg !8668
  ret void, !dbg !8669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !8670 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !8677, metadata !DIExpression()), !dbg !8680
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !8682, metadata !DIExpression()), !dbg !8683
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !8684, metadata !DIExpression()), !dbg !8685
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8686, metadata !DIExpression()), !dbg !8688
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8690, metadata !DIExpression()), !dbg !8691
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8692, metadata !DIExpression()), !dbg !8694
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8696, metadata !DIExpression()), !dbg !8697
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8698, metadata !DIExpression()), !dbg !8699
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8702
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8703
  %div = sdiv i64 %1, 64, !dbg !8703
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8704
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8702
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8705
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8706
  %conv.i = trunc i64 %4 to i32, !dbg !8706
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !8707
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8708
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8708
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !8708
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8709
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !8709
  br i1 %8, label %cond.true, label %cond.false, !dbg !8709

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !8709
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !8709
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !8710
  %and.i = and i64 %11, 63, !dbg !8711
  %shl.i = shl i64 1, %and.i, !dbg !8712
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !8713
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8714
  %shr.i = ashr i64 %13, 6, !dbg !8715
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !8713
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !8713
  %and1.i = and i64 %shl.i, %14, !dbg !8716
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !8717
  %conv = zext i1 %cmp.i to i32, !dbg !8709
  br label %cond.end, !dbg !8709

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !8709
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !8709
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !8718
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !8719
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #6, !dbg !8720, !srcloc !8721
  store i8 %19, i8* %oldbit.i, align 1, !dbg !8720
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !8722
  %tobool.i = trunc i8 %20 to i1, !dbg !8722
  %conv2 = zext i1 %tobool.i to i32, !dbg !8709
  br label %cond.end, !dbg !8709

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !8709
  %tobool = icmp ne i32 %cond, 0, !dbg !8709
  ret i1 %tobool, !dbg !8723
}

; Function Attrs: noredzone
declare dso_local void @input_inject_event(%struct.input_handle*, i32, i32, i32) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !8724 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8728, metadata !DIExpression()), !dbg !8729
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8730, metadata !DIExpression()), !dbg !8731
  ret i1 true, !dbg !8732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !8733 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8737, metadata !DIExpression()), !dbg !8738
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8739, metadata !DIExpression()), !dbg !8740
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8741, metadata !DIExpression()), !dbg !8742
  ret void, !dbg !8743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !8744 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !8745, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8748, metadata !DIExpression()), !dbg !8747
  %0 = load i64, i64* %__edi, align 8, !dbg !8747
  store i64 %0, i64* %__edi, align 8, !dbg !8747
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8749, metadata !DIExpression()), !dbg !8747
  %1 = load i64, i64* %__esi, align 8, !dbg !8747
  store i64 %1, i64* %__esi, align 8, !dbg !8747
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8750, metadata !DIExpression()), !dbg !8747
  %2 = load i64, i64* %__edx, align 8, !dbg !8747
  store i64 %2, i64* %__edx, align 8, !dbg !8747
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8751, metadata !DIExpression()), !dbg !8747
  %3 = load i64, i64* %__ecx, align 8, !dbg !8747
  store i64 %3, i64* %__ecx, align 8, !dbg !8747
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8752, metadata !DIExpression()), !dbg !8747
  %4 = load i64, i64* %__eax, align 8, !dbg !8747
  store i64 %4, i64* %__eax, align 8, !dbg !8747
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !8747
  %6 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !8753
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !8753, !srcloc !8756
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8753
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8753
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8753
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult1), !dbg !8753
  %8 = load i64, i64* %__eax, align 8, !dbg !8753
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !8757, metadata !DIExpression()), !dbg !8759
  store i64 -1, i64* %__mask, align 8, !dbg !8759
  %9 = load i64, i64* %__mask, align 8, !dbg !8759
  store i64 %9, i64* %tmp, align 8, !dbg !8759
  %10 = load i64, i64* %tmp, align 8, !dbg !8759
  %and = and i64 %8, %10, !dbg !8753
  store i64 %and, i64* %__ret, align 8, !dbg !8753
  %11 = load i64, i64* %__ret, align 8, !dbg !8747
  store i64 %11, i64* %tmp2, align 8, !dbg !8760
  %12 = load i64, i64* %tmp2, align 8, !dbg !8747
  ret i64 %12, !dbg !8761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !8762 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8763, metadata !DIExpression()), !dbg !8765
  %0 = load i64, i64* %__edi, align 8, !dbg !8765
  store i64 %0, i64* %__edi, align 8, !dbg !8765
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8766, metadata !DIExpression()), !dbg !8765
  %1 = load i64, i64* %__esi, align 8, !dbg !8765
  store i64 %1, i64* %__esi, align 8, !dbg !8765
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8767, metadata !DIExpression()), !dbg !8765
  %2 = load i64, i64* %__edx, align 8, !dbg !8765
  store i64 %2, i64* %__edx, align 8, !dbg !8765
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8768, metadata !DIExpression()), !dbg !8765
  %3 = load i64, i64* %__ecx, align 8, !dbg !8765
  store i64 %3, i64* %__ecx, align 8, !dbg !8765
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8769, metadata !DIExpression()), !dbg !8765
  %4 = load i64, i64* %__eax, align 8, !dbg !8765
  store i64 %4, i64* %__eax, align 8, !dbg !8765
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !8765
  %6 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !8765
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !8765, !srcloc !8770
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8765
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8765
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8765
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult1), !dbg !8765
  ret void, !dbg !8771
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !8772 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !8773, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8775, metadata !DIExpression()), !dbg !8777
  %0 = load i64, i64* %__edi, align 8, !dbg !8777
  store i64 %0, i64* %__edi, align 8, !dbg !8777
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8778, metadata !DIExpression()), !dbg !8777
  %1 = load i64, i64* %__esi, align 8, !dbg !8777
  store i64 %1, i64* %__esi, align 8, !dbg !8777
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8779, metadata !DIExpression()), !dbg !8777
  %2 = load i64, i64* %__edx, align 8, !dbg !8777
  store i64 %2, i64* %__edx, align 8, !dbg !8777
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8780, metadata !DIExpression()), !dbg !8777
  %3 = load i64, i64* %__ecx, align 8, !dbg !8777
  store i64 %3, i64* %__ecx, align 8, !dbg !8777
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8781, metadata !DIExpression()), !dbg !8777
  %4 = load i64, i64* %__eax, align 8, !dbg !8777
  store i64 %4, i64* %__eax, align 8, !dbg !8777
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !8777
  %6 = call i64 @llvm.read_register.i64(metadata !4702), !dbg !8777
  %7 = load i64, i64* %f.addr, align 8, !dbg !8777
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !8777, !srcloc !8782
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !8777
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !8777
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8777
  call void @llvm.write_register.i64(metadata !4702, i64 %asmresult1), !dbg !8777
  ret void, !dbg !8783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @getleds() #0 !dbg !8784 {
entry:
  %retval = alloca i8, align 1
  %kb = alloca %struct.kbd_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kb, metadata !8785, metadata !DIExpression()), !dbg !8786
  %0 = load i32, i32* @fg_console, align 4, !dbg !8787
  %idx.ext = sext i32 %0 to i64, !dbg !8788
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !8788
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** %kb, align 8, !dbg !8786
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8789
  %ledmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %1, i32 0, i32 2, !dbg !8791
  %bf.load = load i8, i8* %ledmode, align 1, !dbg !8791
  %bf.clear = and i8 %bf.load, 1, !dbg !8791
  %conv = zext i8 %bf.clear to i32, !dbg !8789
  %cmp = icmp eq i32 %conv, 1, !dbg !8792
  br i1 %cmp, label %if.then, label %if.end, !dbg !8793

if.then:                                          ; preds = %entry
  %2 = load i8, i8* @ledioctl, align 1, !dbg !8794
  store i8 %2, i8* %retval, align 1, !dbg !8795
  br label %return, !dbg !8795

if.end:                                           ; preds = %entry
  %3 = load %struct.kbd_struct*, %struct.kbd_struct** %kb, align 8, !dbg !8796
  %ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %3, i32 0, i32 2, !dbg !8797
  %bf.load2 = load i8, i8* %ledflagstate, align 1, !dbg !8797
  %bf.lshr = lshr i8 %bf.load2, 1, !dbg !8797
  %bf.clear3 = and i8 %bf.lshr, 15, !dbg !8797
  store i8 %bf.clear3, i8* %retval, align 1, !dbg !8798
  br label %return, !dbg !8798

return:                                           ; preds = %if.end, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !8799
  ret i8 %4, !dbg !8799
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kbd_propagate_led_state(i32 %old_state, i32 %new_state) #0 !dbg !8800 {
entry:
  %old_state.addr = alloca i32, align 4
  %new_state.addr = alloca i32, align 4
  store i32 %old_state, i32* %old_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_state.addr, metadata !8801, metadata !DIExpression()), !dbg !8802
  store i32 %new_state, i32* %new_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_state.addr, metadata !8803, metadata !DIExpression()), !dbg !8804
  %0 = bitcast i32* %new_state.addr to i8*, !dbg !8805
  %call = call i32 @input_handler_for_each_handle(%struct.input_handler* @kbd_handler, i8* %0, i32 (%struct.input_handle*, i8*)* @kbd_update_leds_helper) #11, !dbg !8806
  ret void, !dbg !8807
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kbd_update_leds_helper(%struct.input_handle* %handle, i8* %data) #0 !dbg !8808 {
entry:
  %handle.addr = alloca %struct.input_handle*, align 8
  %data.addr = alloca i8*, align 8
  %leds = alloca i32, align 4
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !8809, metadata !DIExpression()), !dbg !8810
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  call void @llvm.dbg.declare(metadata i32* %leds, metadata !8813, metadata !DIExpression()), !dbg !8814
  %0 = load i8*, i8** %data.addr, align 8, !dbg !8815
  %1 = bitcast i8* %0 to i32*, !dbg !8816
  %2 = load i32, i32* %1, align 4, !dbg !8817
  store i32 %2, i32* %leds, align 4, !dbg !8814
  %3 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8818
  %dev = getelementptr inbounds %struct.input_handle, %struct.input_handle* %3, i32 0, i32 3, !dbg !8820
  %4 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8820
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 5, !dbg !8821
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !8818
  %call = call zeroext i1 @test_bit(i64 17, i64* %arraydecay) #11, !dbg !8822
  br i1 %call, label %if.then, label %if.end, !dbg !8823

if.then:                                          ; preds = %entry
  %5 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8824
  %6 = load i32, i32* %leds, align 4, !dbg !8826
  %and = and i32 %6, 1, !dbg !8827
  %tobool = icmp ne i32 %and, 0, !dbg !8828
  %lnot = xor i1 %tobool, true, !dbg !8828
  %lnot1 = xor i1 %lnot, true, !dbg !8829
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8829
  call void @input_inject_event(%struct.input_handle* %5, i32 17, i32 2, i32 %lnot.ext) #11, !dbg !8830
  %7 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8831
  %8 = load i32, i32* %leds, align 4, !dbg !8832
  %and2 = and i32 %8, 2, !dbg !8833
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8834
  %lnot4 = xor i1 %tobool3, true, !dbg !8834
  %lnot6 = xor i1 %lnot4, true, !dbg !8835
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8835
  call void @input_inject_event(%struct.input_handle* %7, i32 17, i32 0, i32 %lnot.ext7) #11, !dbg !8836
  %9 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8837
  %10 = load i32, i32* %leds, align 4, !dbg !8838
  %and8 = and i32 %10, 4, !dbg !8839
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8840
  %lnot10 = xor i1 %tobool9, true, !dbg !8840
  %lnot12 = xor i1 %lnot10, true, !dbg !8841
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !8841
  call void @input_inject_event(%struct.input_handle* %9, i32 17, i32 1, i32 %lnot.ext13) #11, !dbg !8842
  %11 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8843
  call void @input_inject_event(%struct.input_handle* %11, i32 0, i32 0, i32 0) #11, !dbg !8844
  br label %if.end, !dbg !8845

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !8846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kbd_event(%struct.input_handle* %handle, i32 %event_type, i32 %event_code, i32 %value) #0 !dbg !8847 {
entry:
  %lock.addr.i62 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i62, metadata !8461, metadata !DIExpression()), !dbg !8848
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8467, metadata !DIExpression()), !dbg !8850
  %handle.addr = alloca %struct.input_handle*, align 8
  %event_type.addr = alloca i32, align 4
  %event_code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  store i32 %event_type, i32* %event_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event_type.addr, metadata !8854, metadata !DIExpression()), !dbg !8855
  store i32 %event_code, i32* %event_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event_code.addr, metadata !8856, metadata !DIExpression()), !dbg !8857
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !8858, metadata !DIExpression()), !dbg !8859
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8860, !srcloc !8526
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8861
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !8861
  %rlock.i = bitcast %union.anon* %1 to %struct.raw_spinlock*, !dbg !8861
  %2 = load i32, i32* %event_type.addr, align 4, !dbg !8862
  %cmp = icmp eq i32 %2, 4, !dbg !8864
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8865

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %event_code.addr, align 4, !dbg !8866
  %cmp1 = icmp eq i32 %3, 3, !dbg !8867
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !8868

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8869
  %dev = getelementptr inbounds %struct.input_handle, %struct.input_handle* %4, i32 0, i32 3, !dbg !8869
  %5 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !8869
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %5, i32 0, i32 5, !dbg !8869
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !8869
  %call = call zeroext i1 @test_bit(i64 4, i64* %arraydecay) #11, !dbg !8869
  br i1 %call, label %land.lhs.true3, label %if.end, !dbg !8869

land.lhs.true3:                                   ; preds = %land.lhs.true2
  %6 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8869
  %dev4 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %6, i32 0, i32 3, !dbg !8869
  %7 = load %struct.input_dev*, %struct.input_dev** %dev4, align 8, !dbg !8869
  %mscbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 9, !dbg !8869
  %arraydecay5 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !8869
  %call6 = call zeroext i1 @test_bit(i64 3, i64* %arraydecay5) #11, !dbg !8869
  br i1 %call6, label %land.lhs.true7, label %if.end, !dbg !8869

land.lhs.true7:                                   ; preds = %land.lhs.true3
  %8 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8869
  %dev8 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %8, i32 0, i32 3, !dbg !8869
  %9 = load %struct.input_dev*, %struct.input_dev** %dev8, align 8, !dbg !8869
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 3, !dbg !8869
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 0, !dbg !8869
  %10 = load i16, i16* %bustype, align 8, !dbg !8869
  %conv = zext i16 %10 to i32, !dbg !8869
  %cmp9 = icmp eq i32 %conv, 17, !dbg !8869
  br i1 %cmp9, label %land.lhs.true11, label %if.end, !dbg !8869

land.lhs.true11:                                  ; preds = %land.lhs.true7
  %11 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8869
  %dev12 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %11, i32 0, i32 3, !dbg !8869
  %12 = load %struct.input_dev*, %struct.input_dev** %dev12, align 8, !dbg !8869
  %id13 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 3, !dbg !8869
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id13, i32 0, i32 1, !dbg !8869
  %13 = load i16, i16* %vendor, align 2, !dbg !8869
  %conv14 = zext i16 %13 to i32, !dbg !8869
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !8869
  br i1 %cmp15, label %land.lhs.true17, label %if.end, !dbg !8869

land.lhs.true17:                                  ; preds = %land.lhs.true11
  %14 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8869
  %dev18 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %14, i32 0, i32 3, !dbg !8869
  %15 = load %struct.input_dev*, %struct.input_dev** %dev18, align 8, !dbg !8869
  %id19 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %15, i32 0, i32 3, !dbg !8869
  %product = getelementptr inbounds %struct.input_id, %struct.input_id* %id19, i32 0, i32 2, !dbg !8869
  %16 = load i16, i16* %product, align 4, !dbg !8869
  %conv20 = zext i16 %16 to i32, !dbg !8869
  %cmp21 = icmp eq i32 %conv20, 1, !dbg !8869
  br i1 %cmp21, label %if.then, label %if.end, !dbg !8870

if.then:                                          ; preds = %land.lhs.true17
  %17 = load i32, i32* %value.addr, align 4, !dbg !8871
  %conv23 = trunc i32 %17 to i8, !dbg !8871
  call void @kbd_rawcode(i8 zeroext %conv23) #11, !dbg !8872
  br label %if.end, !dbg !8872

if.end:                                           ; preds = %if.then, %land.lhs.true17, %land.lhs.true11, %land.lhs.true7, %land.lhs.true3, %land.lhs.true2, %land.lhs.true, %entry
  %18 = load i32, i32* %event_type.addr, align 4, !dbg !8873
  %cmp24 = icmp eq i32 %18, 1, !dbg !8875
  br i1 %cmp24, label %land.lhs.true26, label %if.end61, !dbg !8876

land.lhs.true26:                                  ; preds = %if.end
  %19 = load i32, i32* %event_code.addr, align 4, !dbg !8877
  %cmp27 = icmp ule i32 %19, 767, !dbg !8878
  br i1 %cmp27, label %if.then29, label %if.end61, !dbg !8879

if.then29:                                        ; preds = %land.lhs.true26
  %20 = load i32, i32* %event_code.addr, align 4, !dbg !8880
  %21 = load i32, i32* %value.addr, align 4, !dbg !8881
  %22 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8882
  %dev30 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %22, i32 0, i32 3, !dbg !8882
  %23 = load %struct.input_dev*, %struct.input_dev** %dev30, align 8, !dbg !8882
  %evbit31 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %23, i32 0, i32 5, !dbg !8882
  %arraydecay32 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit31, i64 0, i64 0, !dbg !8882
  %call33 = call zeroext i1 @test_bit(i64 4, i64* %arraydecay32) #11, !dbg !8882
  br i1 %call33, label %land.lhs.true35, label %land.end, !dbg !8882

land.lhs.true35:                                  ; preds = %if.then29
  %24 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8882
  %dev36 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %24, i32 0, i32 3, !dbg !8882
  %25 = load %struct.input_dev*, %struct.input_dev** %dev36, align 8, !dbg !8882
  %mscbit37 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %25, i32 0, i32 9, !dbg !8882
  %arraydecay38 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit37, i64 0, i64 0, !dbg !8882
  %call39 = call zeroext i1 @test_bit(i64 3, i64* %arraydecay38) #11, !dbg !8882
  br i1 %call39, label %land.lhs.true41, label %land.end, !dbg !8882

land.lhs.true41:                                  ; preds = %land.lhs.true35
  %26 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8882
  %dev42 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %26, i32 0, i32 3, !dbg !8882
  %27 = load %struct.input_dev*, %struct.input_dev** %dev42, align 8, !dbg !8882
  %id43 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %27, i32 0, i32 3, !dbg !8882
  %bustype44 = getelementptr inbounds %struct.input_id, %struct.input_id* %id43, i32 0, i32 0, !dbg !8882
  %28 = load i16, i16* %bustype44, align 8, !dbg !8882
  %conv45 = zext i16 %28 to i32, !dbg !8882
  %cmp46 = icmp eq i32 %conv45, 17, !dbg !8882
  br i1 %cmp46, label %land.lhs.true48, label %land.end, !dbg !8882

land.lhs.true48:                                  ; preds = %land.lhs.true41
  %29 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8882
  %dev49 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %29, i32 0, i32 3, !dbg !8882
  %30 = load %struct.input_dev*, %struct.input_dev** %dev49, align 8, !dbg !8882
  %id50 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %30, i32 0, i32 3, !dbg !8882
  %vendor51 = getelementptr inbounds %struct.input_id, %struct.input_id* %id50, i32 0, i32 1, !dbg !8882
  %31 = load i16, i16* %vendor51, align 2, !dbg !8882
  %conv52 = zext i16 %31 to i32, !dbg !8882
  %cmp53 = icmp eq i32 %conv52, 1, !dbg !8882
  br i1 %cmp53, label %land.rhs, label %land.end, !dbg !8882

land.rhs:                                         ; preds = %land.lhs.true48
  %32 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !8882
  %dev55 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %32, i32 0, i32 3, !dbg !8882
  %33 = load %struct.input_dev*, %struct.input_dev** %dev55, align 8, !dbg !8882
  %id56 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 3, !dbg !8882
  %product57 = getelementptr inbounds %struct.input_id, %struct.input_id* %id56, i32 0, i32 2, !dbg !8882
  %34 = load i16, i16* %product57, align 4, !dbg !8882
  %conv58 = zext i16 %34 to i32, !dbg !8882
  %cmp59 = icmp eq i32 %conv58, 1, !dbg !8882
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true48, %land.lhs.true41, %land.lhs.true35, %if.then29
  %35 = phi i1 [ false, %land.lhs.true48 ], [ false, %land.lhs.true41 ], [ false, %land.lhs.true35 ], [ false, %if.then29 ], [ %cmp59, %land.rhs ], !dbg !8883
  %land.ext = zext i1 %35 to i32, !dbg !8882
  call void @kbd_keycode(i32 %20, i32 %21, i32 %land.ext) #11, !dbg !8884
  br label %if.end61, !dbg !8884

if.end61:                                         ; preds = %land.end, %land.lhs.true26, %if.end
  store %struct.spinlock* @kbd_event_lock, %struct.spinlock** %lock.addr.i62, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8885, !srcloc !8539
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i62, align 8, !dbg !8886
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !8886
  %rlock.i63 = bitcast %union.anon* %37 to %struct.raw_spinlock*, !dbg !8886
  call void @tasklet_schedule(%struct.tasklet_struct* @keyboard_tasklet) #11, !dbg !8887
  store i32 1, i32* @do_poke_blanked_console, align 4, !dbg !8888
  call void @schedule_console_callback() #11, !dbg !8889
  ret void, !dbg !8890
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kbd_match(%struct.input_handler* %handler, %struct.input_dev* %dev) #0 !dbg !8891 {
entry:
  %retval = alloca i1, align 1
  %handler.addr = alloca %struct.input_handler*, align 8
  %dev.addr = alloca %struct.input_dev*, align 8
  %i = alloca i32, align 4
  store %struct.input_handler* %handler, %struct.input_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler.addr, metadata !8892, metadata !DIExpression()), !dbg !8893
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !8894, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8896, metadata !DIExpression()), !dbg !8897
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8898
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 5, !dbg !8900
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !8898
  %call = call zeroext i1 @test_bit(i64 18, i64* %arraydecay) #11, !dbg !8901
  br i1 %call, label %if.then, label %if.end, !dbg !8902

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !8903
  br label %return, !dbg !8903

if.end:                                           ; preds = %entry
  %1 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8904
  %evbit1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %1, i32 0, i32 5, !dbg !8906
  %arraydecay2 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit1, i64 0, i64 0, !dbg !8904
  %call3 = call zeroext i1 @test_bit(i64 1, i64* %arraydecay2) #11, !dbg !8907
  br i1 %call3, label %if.then4, label %if.end22, !dbg !8908

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8909
  br label %for.cond, !dbg !8912

for.cond:                                         ; preds = %for.inc, %if.then4
  %2 = load i32, i32* %i, align 4, !dbg !8913
  %cmp = icmp slt i32 %2, 256, !dbg !8915
  br i1 %cmp, label %for.body, label %for.end, !dbg !8916

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !8917
  %conv = sext i32 %3 to i64, !dbg !8917
  %4 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8919
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %4, i32 0, i32 6, !dbg !8920
  %arraydecay5 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !8919
  %call6 = call zeroext i1 @test_bit(i64 %conv, i64* %arraydecay5) #11, !dbg !8921
  br i1 %call6, label %if.then7, label %if.end8, !dbg !8922

if.then7:                                         ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !8923
  br label %return, !dbg !8923

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !8924

for.inc:                                          ; preds = %if.end8
  %5 = load i32, i32* %i, align 4, !dbg !8925
  %inc = add i32 %5, 1, !dbg !8925
  store i32 %inc, i32* %i, align 4, !dbg !8925
  br label %for.cond, !dbg !8926, !llvm.loop !8927

for.end:                                          ; preds = %for.cond
  store i32 497, i32* %i, align 4, !dbg !8929
  br label %for.cond9, !dbg !8931

for.cond9:                                        ; preds = %for.inc19, %for.end
  %6 = load i32, i32* %i, align 4, !dbg !8932
  %cmp10 = icmp sle i32 %6, 506, !dbg !8934
  br i1 %cmp10, label %for.body12, label %for.end21, !dbg !8935

for.body12:                                       ; preds = %for.cond9
  %7 = load i32, i32* %i, align 4, !dbg !8936
  %conv13 = sext i32 %7 to i64, !dbg !8936
  %8 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8938
  %keybit14 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %8, i32 0, i32 6, !dbg !8939
  %arraydecay15 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit14, i64 0, i64 0, !dbg !8938
  %call16 = call zeroext i1 @test_bit(i64 %conv13, i64* %arraydecay15) #11, !dbg !8940
  br i1 %call16, label %if.then17, label %if.end18, !dbg !8941

if.then17:                                        ; preds = %for.body12
  store i1 true, i1* %retval, align 1, !dbg !8942
  br label %return, !dbg !8942

if.end18:                                         ; preds = %for.body12
  br label %for.inc19, !dbg !8943

for.inc19:                                        ; preds = %if.end18
  %9 = load i32, i32* %i, align 4, !dbg !8944
  %inc20 = add i32 %9, 1, !dbg !8944
  store i32 %inc20, i32* %i, align 4, !dbg !8944
  br label %for.cond9, !dbg !8945, !llvm.loop !8946

for.end21:                                        ; preds = %for.cond9
  br label %if.end22, !dbg !8948

if.end22:                                         ; preds = %for.end21, %if.end
  store i1 false, i1* %retval, align 1, !dbg !8949
  br label %return, !dbg !8949

return:                                           ; preds = %if.end22, %if.then17, %if.then7, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !8950
  ret i1 %10, !dbg !8950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kbd_connect(%struct.input_handler* %handler, %struct.input_dev* %dev, %struct.input_device_id* %id) #0 !dbg !8951 {
entry:
  %retval = alloca i32, align 4
  %handler.addr = alloca %struct.input_handler*, align 8
  %dev.addr = alloca %struct.input_dev*, align 8
  %id.addr = alloca %struct.input_device_id*, align 8
  %handle = alloca %struct.input_handle*, align 8
  %error = alloca i32, align 4
  store %struct.input_handler* %handler, %struct.input_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handler** %handler.addr, metadata !8952, metadata !DIExpression()), !dbg !8953
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !8954, metadata !DIExpression()), !dbg !8955
  store %struct.input_device_id* %id, %struct.input_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_device_id** %id.addr, metadata !8956, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle, metadata !8958, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.declare(metadata i32* %error, metadata !8960, metadata !DIExpression()), !dbg !8961
  %call = call i8* @kzalloc(i64 72, i32 3264) #11, !dbg !8962
  %0 = bitcast i8* %call to %struct.input_handle*, !dbg !8962
  store %struct.input_handle* %0, %struct.input_handle** %handle, align 8, !dbg !8963
  %1 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !8964
  %tobool = icmp ne %struct.input_handle* %1, null, !dbg !8964
  br i1 %tobool, label %if.end, label %if.then, !dbg !8966

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8967
  br label %return, !dbg !8967

if.end:                                           ; preds = %entry
  %2 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !8968
  %3 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !8969
  %dev1 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %3, i32 0, i32 3, !dbg !8970
  store %struct.input_dev* %2, %struct.input_dev** %dev1, align 8, !dbg !8971
  %4 = load %struct.input_handler*, %struct.input_handler** %handler.addr, align 8, !dbg !8972
  %5 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !8973
  %handler2 = getelementptr inbounds %struct.input_handle, %struct.input_handle* %5, i32 0, i32 4, !dbg !8974
  store %struct.input_handler* %4, %struct.input_handler** %handler2, align 8, !dbg !8975
  %6 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !8976
  %name = getelementptr inbounds %struct.input_handle, %struct.input_handle* %6, i32 0, i32 2, !dbg !8977
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %name, align 8, !dbg !8978
  %7 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !8979
  %call3 = call i32 @input_register_handle(%struct.input_handle* %7) #11, !dbg !8980
  store i32 %call3, i32* %error, align 4, !dbg !8981
  %8 = load i32, i32* %error, align 4, !dbg !8982
  %tobool4 = icmp ne i32 %8, 0, !dbg !8982
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !8984

if.then5:                                         ; preds = %if.end
  br label %err_free_handle, !dbg !8985

if.end6:                                          ; preds = %if.end
  %9 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !8986
  %call7 = call i32 @input_open_device(%struct.input_handle* %9) #11, !dbg !8987
  store i32 %call7, i32* %error, align 4, !dbg !8988
  %10 = load i32, i32* %error, align 4, !dbg !8989
  %tobool8 = icmp ne i32 %10, 0, !dbg !8989
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8991

if.then9:                                         ; preds = %if.end6
  br label %err_unregister_handle, !dbg !8992

if.end10:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !8993
  br label %return, !dbg !8993

err_unregister_handle:                            ; preds = %if.then9
  call void @llvm.dbg.label(metadata !8994), !dbg !8995
  %11 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !8996
  call void @input_unregister_handle(%struct.input_handle* %11) #11, !dbg !8997
  br label %err_free_handle, !dbg !8997

err_free_handle:                                  ; preds = %err_unregister_handle, %if.then5
  call void @llvm.dbg.label(metadata !8998), !dbg !8999
  %12 = load %struct.input_handle*, %struct.input_handle** %handle, align 8, !dbg !9000
  %13 = bitcast %struct.input_handle* %12 to i8*, !dbg !9000
  call void @kfree(i8* %13) #11, !dbg !9001
  %14 = load i32, i32* %error, align 4, !dbg !9002
  store i32 %14, i32* %retval, align 4, !dbg !9003
  br label %return, !dbg !9003

return:                                           ; preds = %err_free_handle, %if.end10, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !9004
  ret i32 %15, !dbg !9004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kbd_disconnect(%struct.input_handle* %handle) #0 !dbg !9005 {
entry:
  %handle.addr = alloca %struct.input_handle*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !9006, metadata !DIExpression()), !dbg !9007
  %0 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !9008
  call void @input_close_device(%struct.input_handle* %0) #11, !dbg !9009
  %1 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !9010
  call void @input_unregister_handle(%struct.input_handle* %1) #11, !dbg !9011
  %2 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !9012
  %3 = bitcast %struct.input_handle* %2 to i8*, !dbg !9012
  call void @kfree(i8* %3) #11, !dbg !9013
  ret void, !dbg !9014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kbd_start(%struct.input_handle* %handle) #0 !dbg !9015 {
entry:
  %handle.addr = alloca %struct.input_handle*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !9016, metadata !DIExpression()), !dbg !9017
  call void @tasklet_disable(%struct.tasklet_struct* @keyboard_tasklet) #11, !dbg !9018
  %0 = load i32, i32* @ledstate, align 4, !dbg !9019
  %cmp = icmp ne i32 %0, -1, !dbg !9021
  br i1 %cmp, label %if.then, label %if.end, !dbg !9022

if.then:                                          ; preds = %entry
  %1 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !9023
  %call = call i32 @kbd_update_leds_helper(%struct.input_handle* %1, i8* bitcast (i32* @ledstate to i8*)) #11, !dbg !9024
  br label %if.end, !dbg !9024

if.end:                                           ; preds = %if.then, %entry
  call void @tasklet_enable(%struct.tasklet_struct* @keyboard_tasklet) #11, !dbg !9025
  ret void, !dbg !9026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kbd_rawcode(i8 zeroext %data) #0 !dbg !9027 {
entry:
  %data.addr = alloca i8, align 1
  %vc = alloca %struct.vc_data*, align 8
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !9030, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !9032, metadata !DIExpression()), !dbg !9033
  %0 = load i32, i32* @fg_console, align 4, !dbg !9034
  %idxprom = sext i32 %0 to i64, !dbg !9035
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !9035
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !9036
  %1 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !9036
  store %struct.vc_data* %1, %struct.vc_data** %vc, align 8, !dbg !9033
  %2 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9037
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 3, !dbg !9038
  %3 = load i16, i16* %vc_num, align 8, !dbg !9038
  %conv = zext i16 %3 to i32, !dbg !9037
  %idx.ext = sext i32 %conv to i64, !dbg !9039
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !9039
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** @kbd, align 8, !dbg !9040
  %4 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9041
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %4, i32 0, i32 3, !dbg !9043
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !9043
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !9043
  %bf.clear = and i8 %bf.lshr, 7, !dbg !9043
  %conv1 = zext i8 %bf.clear to i32, !dbg !9041
  %cmp = icmp eq i32 %conv1, 2, !dbg !9044
  br i1 %cmp, label %if.then, label %if.end, !dbg !9045

if.then:                                          ; preds = %entry
  %5 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9046
  %6 = load i8, i8* %data.addr, align 1, !dbg !9047
  %conv3 = zext i8 %6 to i32, !dbg !9047
  call void @put_queue(%struct.vc_data* %5, i32 %conv3) #11, !dbg !9048
  br label %if.end, !dbg !9048

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kbd_keycode(i32 %keycode, i32 %down, i32 %hw_raw) #0 !dbg !9050 {
entry:
  %keycode.addr = alloca i32, align 4
  %down.addr = alloca i32, align 4
  %hw_raw.addr = alloca i32, align 4
  %vc = alloca %struct.vc_data*, align 8
  %keysym = alloca i16, align 2
  %key_map = alloca i16*, align 8
  %type = alloca i8, align 1
  %raw_mode = alloca i8, align 1
  %tty = alloca %struct.tty_struct*, align 8
  %shift_final = alloca i32, align 4
  %param = alloca %struct.keyboard_notifier_param, align 8
  %rc = alloca i32, align 4
  store i32 %keycode, i32* %keycode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keycode.addr, metadata !9053, metadata !DIExpression()), !dbg !9054
  store i32 %down, i32* %down.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %down.addr, metadata !9055, metadata !DIExpression()), !dbg !9056
  store i32 %hw_raw, i32* %hw_raw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hw_raw.addr, metadata !9057, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc, metadata !9059, metadata !DIExpression()), !dbg !9060
  %0 = load i32, i32* @fg_console, align 4, !dbg !9061
  %idxprom = sext i32 %0 to i64, !dbg !9062
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !9062
  %d = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 0, !dbg !9063
  %1 = load %struct.vc_data*, %struct.vc_data** %d, align 8, !dbg !9063
  store %struct.vc_data* %1, %struct.vc_data** %vc, align 8, !dbg !9060
  call void @llvm.dbg.declare(metadata i16* %keysym, metadata !9064, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.declare(metadata i16** %key_map, metadata !9066, metadata !DIExpression()), !dbg !9067
  call void @llvm.dbg.declare(metadata i8* %type, metadata !9068, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.declare(metadata i8* %raw_mode, metadata !9070, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !9072, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.declare(metadata i32* %shift_final, metadata !9074, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.declare(metadata %struct.keyboard_notifier_param* %param, metadata !9076, metadata !DIExpression()), !dbg !9085
  %vc1 = getelementptr inbounds %struct.keyboard_notifier_param, %struct.keyboard_notifier_param* %param, i32 0, i32 0, !dbg !9086
  %2 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9087
  store %struct.vc_data* %2, %struct.vc_data** %vc1, align 8, !dbg !9086
  %down2 = getelementptr inbounds %struct.keyboard_notifier_param, %struct.keyboard_notifier_param* %param, i32 0, i32 1, !dbg !9086
  %3 = load i32, i32* %down.addr, align 4, !dbg !9088
  store i32 %3, i32* %down2, align 8, !dbg !9086
  %shift = getelementptr inbounds %struct.keyboard_notifier_param, %struct.keyboard_notifier_param* %param, i32 0, i32 2, !dbg !9086
  store i32 0, i32* %shift, align 4, !dbg !9086
  %ledstate = getelementptr inbounds %struct.keyboard_notifier_param, %struct.keyboard_notifier_param* %param, i32 0, i32 3, !dbg !9086
  store i32 0, i32* %ledstate, align 8, !dbg !9086
  %value = getelementptr inbounds %struct.keyboard_notifier_param, %struct.keyboard_notifier_param* %param, i32 0, i32 4, !dbg !9086
  %4 = load i32, i32* %keycode.addr, align 4, !dbg !9089
  store i32 %4, i32* %value, align 4, !dbg !9086
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9090, metadata !DIExpression()), !dbg !9091
  %5 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9092
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %5, i32 0, i32 0, !dbg !9093
  %tty3 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !9094
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty3, align 8, !dbg !9094
  store %struct.tty_struct* %6, %struct.tty_struct** %tty, align 8, !dbg !9095
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !9096
  %tobool = icmp ne %struct.tty_struct* %7, null, !dbg !9096
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9098

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !9099
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %8, i32 0, i32 37, !dbg !9100
  %9 = load i8*, i8** %driver_data, align 8, !dbg !9100
  %tobool4 = icmp ne i8* %9, null, !dbg !9099
  br i1 %tobool4, label %if.end, label %if.then, !dbg !9101

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9102
  %11 = bitcast %struct.vc_data* %10 to i8*, !dbg !9102
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !9104
  %driver_data5 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %12, i32 0, i32 37, !dbg !9105
  store i8* %11, i8** %driver_data5, align 8, !dbg !9106
  br label %if.end, !dbg !9107

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %13 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9108
  %vc_num = getelementptr inbounds %struct.vc_data, %struct.vc_data* %13, i32 0, i32 3, !dbg !9109
  %14 = load i16, i16* %vc_num, align 8, !dbg !9109
  %conv = zext i16 %14 to i32, !dbg !9108
  %idx.ext = sext i32 %conv to i64, !dbg !9110
  %add.ptr = getelementptr %struct.kbd_struct, %struct.kbd_struct* getelementptr inbounds ([63 x %struct.kbd_struct], [63 x %struct.kbd_struct]* @kbd_table, i64 0, i64 0), i64 %idx.ext, !dbg !9110
  store %struct.kbd_struct* %add.ptr, %struct.kbd_struct** @kbd, align 8, !dbg !9111
  %15 = load i32, i32* %down.addr, align 4, !dbg !9112
  %cmp = icmp eq i32 %15, 2, !dbg !9113
  %conv6 = zext i1 %cmp to i32, !dbg !9113
  %conv7 = trunc i32 %conv6 to i8, !dbg !9114
  store i8 %conv7, i8* @rep, align 1, !dbg !9115
  %16 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9116
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %16, i32 0, i32 3, !dbg !9117
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !9117
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !9117
  %bf.clear = and i8 %bf.lshr, 7, !dbg !9117
  %conv8 = zext i8 %bf.clear to i32, !dbg !9116
  %cmp9 = icmp eq i32 %conv8, 2, !dbg !9118
  %frombool = zext i1 %cmp9 to i8, !dbg !9119
  store i8 %frombool, i8* %raw_mode, align 1, !dbg !9119
  %17 = load i8, i8* %raw_mode, align 1, !dbg !9120
  %tobool11 = trunc i8 %17 to i1, !dbg !9120
  br i1 %tobool11, label %land.lhs.true13, label %if.end29, !dbg !9122

land.lhs.true13:                                  ; preds = %if.end
  %18 = load i32, i32* %hw_raw.addr, align 4, !dbg !9123
  %tobool14 = icmp ne i32 %18, 0, !dbg !9123
  br i1 %tobool14, label %if.end29, label %if.then15, !dbg !9124

if.then15:                                        ; preds = %land.lhs.true13
  %19 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9125
  %20 = load i32, i32* %keycode.addr, align 4, !dbg !9127
  %21 = load i32, i32* %down.addr, align 4, !dbg !9128
  %tobool16 = icmp ne i32 %21, 0, !dbg !9129
  %lnot = xor i1 %tobool16, true, !dbg !9129
  %lnot.ext = zext i1 %lnot to i32, !dbg !9129
  %shl = shl i32 %lnot.ext, 7, !dbg !9130
  %conv17 = trunc i32 %shl to i8, !dbg !9129
  %call = call i32 @emulate_raw(%struct.vc_data* %19, i32 %20, i8 zeroext %conv17) #11, !dbg !9131
  %tobool18 = icmp ne i32 %call, 0, !dbg !9131
  br i1 %tobool18, label %if.then19, label %if.end28, !dbg !9132

if.then19:                                        ; preds = %if.then15
  %22 = load i32, i32* %keycode.addr, align 4, !dbg !9133
  %cmp20 = icmp ult i32 %22, 256, !dbg !9135
  br i1 %cmp20, label %land.lhs.true22, label %if.end27, !dbg !9136

land.lhs.true22:                                  ; preds = %if.then19
  %call23 = call i32 @__printk_ratelimit(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.kbd_keycode, i64 0, i64 0)) #11, !dbg !9137
  %tobool24 = icmp ne i32 %call23, 0, !dbg !9137
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !9138

if.then25:                                        ; preds = %land.lhs.true22
  %23 = load i32, i32* %keycode.addr, align 4, !dbg !9139
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i64 0, i64 0), i32 %23) #14, !dbg !9139
  br label %if.end27, !dbg !9139

if.end27:                                         ; preds = %if.then25, %land.lhs.true22, %if.then19
  br label %if.end28, !dbg !9137

if.end28:                                         ; preds = %if.end27, %if.then15
  br label %if.end29, !dbg !9140

if.end29:                                         ; preds = %if.end28, %land.lhs.true13, %if.end
  %24 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9141
  %kbdmode30 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %24, i32 0, i32 3, !dbg !9143
  %bf.load31 = load i8, i8* %kbdmode30, align 1, !dbg !9143
  %bf.lshr32 = lshr i8 %bf.load31, 4, !dbg !9143
  %bf.clear33 = and i8 %bf.lshr32, 7, !dbg !9143
  %conv34 = zext i8 %bf.clear33 to i32, !dbg !9141
  %cmp35 = icmp eq i32 %conv34, 1, !dbg !9144
  br i1 %cmp35, label %if.then37, label %if.end52, !dbg !9145

if.then37:                                        ; preds = %if.end29
  %25 = load i32, i32* %keycode.addr, align 4, !dbg !9146
  %cmp38 = icmp ult i32 %25, 128, !dbg !9149
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !9150

if.then40:                                        ; preds = %if.then37
  %26 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9151
  %27 = load i32, i32* %keycode.addr, align 4, !dbg !9153
  %28 = load i32, i32* %down.addr, align 4, !dbg !9154
  %tobool41 = icmp ne i32 %28, 0, !dbg !9155
  %lnot42 = xor i1 %tobool41, true, !dbg !9155
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !9155
  %shl44 = shl i32 %lnot.ext43, 7, !dbg !9156
  %or = or i32 %27, %shl44, !dbg !9157
  call void @put_queue(%struct.vc_data* %26, i32 %or) #11, !dbg !9158
  br label %if.end51, !dbg !9159

if.else:                                          ; preds = %if.then37
  %29 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9160
  %30 = load i32, i32* %down.addr, align 4, !dbg !9162
  %tobool45 = icmp ne i32 %30, 0, !dbg !9163
  %lnot46 = xor i1 %tobool45, true, !dbg !9163
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !9163
  %shl48 = shl i32 %lnot.ext47, 7, !dbg !9164
  call void @put_queue(%struct.vc_data* %29, i32 %shl48) #11, !dbg !9165
  %31 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9166
  %32 = load i32, i32* %keycode.addr, align 4, !dbg !9167
  %shr = lshr i32 %32, 7, !dbg !9168
  %or49 = or i32 %shr, 128, !dbg !9169
  call void @put_queue(%struct.vc_data* %31, i32 %or49) #11, !dbg !9170
  %33 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9171
  %34 = load i32, i32* %keycode.addr, align 4, !dbg !9172
  %or50 = or i32 %34, 128, !dbg !9173
  call void @put_queue(%struct.vc_data* %33, i32 %or50) #11, !dbg !9174
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then40
  store i8 1, i8* %raw_mode, align 1, !dbg !9175
  br label %if.end52, !dbg !9176

if.end52:                                         ; preds = %if.end51, %if.end29
  %35 = load i32, i32* %down.addr, align 4, !dbg !9177
  %tobool53 = icmp ne i32 %35, 0, !dbg !9177
  br i1 %tobool53, label %if.then54, label %if.else56, !dbg !9179

if.then54:                                        ; preds = %if.end52
  %36 = load i32, i32* %keycode.addr, align 4, !dbg !9180
  %conv55 = zext i32 %36 to i64, !dbg !9180
  call void @set_bit(i64 %conv55, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @key_down, i64 0, i64 0)) #11, !dbg !9181
  br label %if.end58, !dbg !9181

if.else56:                                        ; preds = %if.end52
  %37 = load i32, i32* %keycode.addr, align 4, !dbg !9182
  %conv57 = zext i32 %37 to i64, !dbg !9182
  call void @clear_bit(i64 %conv57, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @key_down, i64 0, i64 0)) #11, !dbg !9183
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.then54
  %38 = load i8, i8* @rep, align 1, !dbg !9184
  %conv59 = sext i8 %38 to i32, !dbg !9184
  %tobool60 = icmp ne i32 %conv59, 0, !dbg !9184
  br i1 %tobool60, label %land.lhs.true61, label %if.end71, !dbg !9186

land.lhs.true61:                                  ; preds = %if.end58
  %39 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9187
  %call62 = call i32 @vc_kbd_mode(%struct.kbd_struct* %39, i32 2) #11, !dbg !9188
  %tobool63 = icmp ne i32 %call62, 0, !dbg !9188
  br i1 %tobool63, label %lor.lhs.false, label %if.then70, !dbg !9189

lor.lhs.false:                                    ; preds = %land.lhs.true61
  %40 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !9190
  %tobool64 = icmp ne %struct.tty_struct* %40, null, !dbg !9190
  br i1 %tobool64, label %land.lhs.true65, label %if.end71, !dbg !9191

land.lhs.true65:                                  ; preds = %lor.lhs.false
  %41 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !9192
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %41, i32 0, i32 15, !dbg !9192
  %c_lflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 3, !dbg !9192
  %42 = load i32, i32* %c_lflag, align 4, !dbg !9192
  %and = and i32 %42, 8, !dbg !9192
  %tobool66 = icmp ne i32 %and, 0, !dbg !9192
  br i1 %tobool66, label %if.end71, label %land.lhs.true67, !dbg !9193

land.lhs.true67:                                  ; preds = %land.lhs.true65
  %43 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !9194
  %call68 = call i32 @tty_chars_in_buffer(%struct.tty_struct* %43) #11, !dbg !9195
  %tobool69 = icmp ne i32 %call68, 0, !dbg !9195
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !9196

if.then70:                                        ; preds = %land.lhs.true67, %land.lhs.true61
  br label %if.end203, !dbg !9197

if.end71:                                         ; preds = %land.lhs.true67, %land.lhs.true65, %lor.lhs.false, %if.end58
  %44 = load i32, i32* @shift_state, align 4, !dbg !9199
  %45 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9200
  %slockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %45, i32 0, i32 1, !dbg !9201
  %46 = load i8, i8* %slockstate, align 1, !dbg !9201
  %conv72 = zext i8 %46 to i32, !dbg !9200
  %or73 = or i32 %44, %conv72, !dbg !9202
  %47 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9203
  %lockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %47, i32 0, i32 0, !dbg !9204
  %48 = load i8, i8* %lockstate, align 1, !dbg !9204
  %conv74 = zext i8 %48 to i32, !dbg !9203
  %xor = xor i32 %or73, %conv74, !dbg !9205
  store i32 %xor, i32* %shift_final, align 4, !dbg !9206
  %shift75 = getelementptr inbounds %struct.keyboard_notifier_param, %struct.keyboard_notifier_param* %param, i32 0, i32 2, !dbg !9207
  store i32 %xor, i32* %shift75, align 4, !dbg !9208
  %49 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9209
  %ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %49, i32 0, i32 2, !dbg !9210
  %bf.load76 = load i8, i8* %ledflagstate, align 1, !dbg !9210
  %bf.lshr77 = lshr i8 %bf.load76, 1, !dbg !9210
  %bf.clear78 = and i8 %bf.lshr77, 15, !dbg !9210
  %conv79 = zext i8 %bf.clear78 to i32, !dbg !9209
  %ledstate80 = getelementptr inbounds %struct.keyboard_notifier_param, %struct.keyboard_notifier_param* %param, i32 0, i32 3, !dbg !9211
  store i32 %conv79, i32* %ledstate80, align 8, !dbg !9212
  %50 = load i32, i32* %shift_final, align 4, !dbg !9213
  %idxprom81 = sext i32 %50 to i64, !dbg !9214
  %arrayidx82 = getelementptr [256 x i16*], [256 x i16*]* @key_maps, i64 0, i64 %idxprom81, !dbg !9214
  %51 = load i16*, i16** %arrayidx82, align 8, !dbg !9214
  store i16* %51, i16** %key_map, align 8, !dbg !9215
  %52 = bitcast %struct.keyboard_notifier_param* %param to i8*, !dbg !9216
  %call83 = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head* @keyboard_notifier_list, i64 1, i8* %52) #11, !dbg !9217
  store i32 %call83, i32* %rc, align 4, !dbg !9218
  %53 = load i32, i32* %rc, align 4, !dbg !9219
  %cmp84 = icmp eq i32 %53, 32769, !dbg !9221
  br i1 %cmp84, label %if.then88, label %lor.lhs.false86, !dbg !9222

lor.lhs.false86:                                  ; preds = %if.end71
  %54 = load i16*, i16** %key_map, align 8, !dbg !9223
  %tobool87 = icmp ne i16* %54, null, !dbg !9223
  br i1 %tobool87, label %if.end91, label %if.then88, !dbg !9224

if.then88:                                        ; preds = %lor.lhs.false86, %if.end71
  %55 = bitcast %struct.keyboard_notifier_param* %param to i8*, !dbg !9225
  %call89 = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head* @keyboard_notifier_list, i64 2, i8* %55) #11, !dbg !9227
  call void @do_compute_shiftstate() #11, !dbg !9228
  %56 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9229
  %slockstate90 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %56, i32 0, i32 1, !dbg !9230
  store i8 0, i8* %slockstate90, align 1, !dbg !9231
  br label %if.end203, !dbg !9232

if.end91:                                         ; preds = %lor.lhs.false86
  %57 = load i32, i32* %keycode.addr, align 4, !dbg !9233
  %cmp92 = icmp ult i32 %57, 256, !dbg !9235
  br i1 %cmp92, label %if.then94, label %if.else97, !dbg !9236

if.then94:                                        ; preds = %if.end91
  %58 = load i16*, i16** %key_map, align 8, !dbg !9237
  %59 = load i32, i32* %keycode.addr, align 4, !dbg !9238
  %idxprom95 = zext i32 %59 to i64, !dbg !9237
  %arrayidx96 = getelementptr i16, i16* %58, i64 %idxprom95, !dbg !9237
  %60 = load i16, i16* %arrayidx96, align 2, !dbg !9237
  store i16 %60, i16* %keysym, align 2, !dbg !9239
  br label %if.end109, !dbg !9240

if.else97:                                        ; preds = %if.end91
  %61 = load i32, i32* %keycode.addr, align 4, !dbg !9241
  %cmp98 = icmp uge i32 %61, 497, !dbg !9243
  br i1 %cmp98, label %land.lhs.true100, label %if.else107, !dbg !9244

land.lhs.true100:                                 ; preds = %if.else97
  %62 = load i32, i32* %keycode.addr, align 4, !dbg !9245
  %cmp101 = icmp ule i32 %62, 504, !dbg !9246
  br i1 %cmp101, label %if.then103, label %if.else107, !dbg !9247

if.then103:                                       ; preds = %land.lhs.true100
  %63 = load i32, i32* %keycode.addr, align 4, !dbg !9248
  %sub = sub i32 %63, 497, !dbg !9248
  %add = add i32 %sub, 1, !dbg !9248
  %or104 = or i32 3584, %add, !dbg !9248
  %xor105 = xor i32 %or104, 61440, !dbg !9248
  %conv106 = trunc i32 %xor105 to i16, !dbg !9248
  store i16 %conv106, i16* %keysym, align 2, !dbg !9249
  br label %if.end108, !dbg !9250

if.else107:                                       ; preds = %land.lhs.true100, %if.else97
  br label %if.end203, !dbg !9251

if.end108:                                        ; preds = %if.then103
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then94
  %64 = load i16, i16* %keysym, align 2, !dbg !9252
  %conv110 = zext i16 %64 to i32, !dbg !9252
  %shr111 = ashr i32 %conv110, 8, !dbg !9252
  %conv112 = trunc i32 %shr111 to i8, !dbg !9252
  store i8 %conv112, i8* %type, align 1, !dbg !9253
  %65 = load i8, i8* %type, align 1, !dbg !9254
  %conv113 = zext i8 %65 to i32, !dbg !9254
  %cmp114 = icmp slt i32 %conv113, 240, !dbg !9256
  br i1 %cmp114, label %if.then116, label %if.end134, !dbg !9257

if.then116:                                       ; preds = %if.end109
  %66 = load i16, i16* %keysym, align 2, !dbg !9258
  %conv117 = zext i16 %66 to i32, !dbg !9258
  %value118 = getelementptr inbounds %struct.keyboard_notifier_param, %struct.keyboard_notifier_param* %param, i32 0, i32 4, !dbg !9260
  store i32 %conv117, i32* %value118, align 4, !dbg !9261
  %67 = bitcast %struct.keyboard_notifier_param* %param to i8*, !dbg !9262
  %call119 = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head* @keyboard_notifier_list, i64 3, i8* %67) #11, !dbg !9263
  store i32 %call119, i32* %rc, align 4, !dbg !9264
  %68 = load i32, i32* %rc, align 4, !dbg !9265
  %cmp120 = icmp ne i32 %68, 32769, !dbg !9267
  br i1 %cmp120, label %if.then122, label %if.end133, !dbg !9268

if.then122:                                       ; preds = %if.then116
  %69 = load i32, i32* %down.addr, align 4, !dbg !9269
  %tobool123 = icmp ne i32 %69, 0, !dbg !9269
  br i1 %tobool123, label %land.lhs.true124, label %if.end132, !dbg !9271

land.lhs.true124:                                 ; preds = %if.then122
  %70 = load i8, i8* %raw_mode, align 1, !dbg !9272
  %tobool125 = trunc i8 %70 to i1, !dbg !9272
  br i1 %tobool125, label %if.end132, label %if.then126, !dbg !9273

if.then126:                                       ; preds = %land.lhs.true124
  %71 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9274
  %72 = load i16, i16* %keysym, align 2, !dbg !9275
  %conv127 = zext i16 %72 to i32, !dbg !9275
  %73 = load i32, i32* %down.addr, align 4, !dbg !9276
  %tobool128 = icmp ne i32 %73, 0, !dbg !9277
  %lnot129 = xor i1 %tobool128, true, !dbg !9277
  %lnot.ext130 = zext i1 %lnot129 to i32, !dbg !9277
  %conv131 = trunc i32 %lnot.ext130 to i8, !dbg !9277
  call void @k_unicode(%struct.vc_data* %71, i32 %conv127, i8 signext %conv131) #11, !dbg !9278
  br label %if.end132, !dbg !9278

if.end132:                                        ; preds = %if.then126, %land.lhs.true124, %if.then122
  br label %if.end133, !dbg !9272

if.end133:                                        ; preds = %if.end132, %if.then116
  br label %if.end203, !dbg !9279

if.end134:                                        ; preds = %if.end109
  %74 = load i8, i8* %type, align 1, !dbg !9280
  %conv135 = zext i8 %74 to i32, !dbg !9280
  %sub136 = sub i32 %conv135, 240, !dbg !9280
  %conv137 = trunc i32 %sub136 to i8, !dbg !9280
  store i8 %conv137, i8* %type, align 1, !dbg !9280
  %75 = load i8, i8* %type, align 1, !dbg !9281
  %conv138 = zext i8 %75 to i32, !dbg !9281
  %cmp139 = icmp eq i32 %conv138, 11, !dbg !9283
  br i1 %cmp139, label %if.then141, label %if.end154, !dbg !9284

if.then141:                                       ; preds = %if.end134
  store i8 0, i8* %type, align 1, !dbg !9285
  %76 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9287
  %call142 = call i32 @vc_kbd_led(%struct.kbd_struct* %76, i32 2) #11, !dbg !9289
  %tobool143 = icmp ne i32 %call142, 0, !dbg !9289
  br i1 %tobool143, label %if.then144, label %if.end153, !dbg !9290

if.then144:                                       ; preds = %if.then141
  %77 = load i32, i32* %shift_final, align 4, !dbg !9291
  %xor145 = xor i32 %77, 1, !dbg !9293
  %idxprom146 = sext i32 %xor145 to i64, !dbg !9294
  %arrayidx147 = getelementptr [256 x i16*], [256 x i16*]* @key_maps, i64 0, i64 %idxprom146, !dbg !9294
  %78 = load i16*, i16** %arrayidx147, align 8, !dbg !9294
  store i16* %78, i16** %key_map, align 8, !dbg !9295
  %79 = load i16*, i16** %key_map, align 8, !dbg !9296
  %tobool148 = icmp ne i16* %79, null, !dbg !9296
  br i1 %tobool148, label %if.then149, label %if.end152, !dbg !9298

if.then149:                                       ; preds = %if.then144
  %80 = load i16*, i16** %key_map, align 8, !dbg !9299
  %81 = load i32, i32* %keycode.addr, align 4, !dbg !9300
  %idxprom150 = zext i32 %81 to i64, !dbg !9299
  %arrayidx151 = getelementptr i16, i16* %80, i64 %idxprom150, !dbg !9299
  %82 = load i16, i16* %arrayidx151, align 2, !dbg !9299
  store i16 %82, i16* %keysym, align 2, !dbg !9301
  br label %if.end152, !dbg !9302

if.end152:                                        ; preds = %if.then149, %if.then144
  br label %if.end153, !dbg !9303

if.end153:                                        ; preds = %if.end152, %if.then141
  br label %if.end154, !dbg !9304

if.end154:                                        ; preds = %if.end153, %if.end134
  %83 = load i16, i16* %keysym, align 2, !dbg !9305
  %conv155 = zext i16 %83 to i32, !dbg !9305
  %value156 = getelementptr inbounds %struct.keyboard_notifier_param, %struct.keyboard_notifier_param* %param, i32 0, i32 4, !dbg !9306
  store i32 %conv155, i32* %value156, align 4, !dbg !9307
  %84 = bitcast %struct.keyboard_notifier_param* %param to i8*, !dbg !9308
  %call157 = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head* @keyboard_notifier_list, i64 4, i8* %84) #11, !dbg !9309
  store i32 %call157, i32* %rc, align 4, !dbg !9310
  %85 = load i32, i32* %rc, align 4, !dbg !9311
  %cmp158 = icmp eq i32 %85, 32769, !dbg !9313
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !9314

if.then160:                                       ; preds = %if.end154
  br label %if.end203, !dbg !9315

if.end161:                                        ; preds = %if.end154
  %86 = load i8, i8* %raw_mode, align 1, !dbg !9316
  %tobool162 = trunc i8 %86 to i1, !dbg !9316
  br i1 %tobool162, label %land.lhs.true172, label %lor.lhs.false164, !dbg !9318

lor.lhs.false164:                                 ; preds = %if.end161
  %87 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9319
  %kbdmode165 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %87, i32 0, i32 3, !dbg !9320
  %bf.load166 = load i8, i8* %kbdmode165, align 1, !dbg !9320
  %bf.lshr167 = lshr i8 %bf.load166, 4, !dbg !9320
  %bf.clear168 = and i8 %bf.lshr167, 7, !dbg !9320
  %conv169 = zext i8 %bf.clear168 to i32, !dbg !9319
  %cmp170 = icmp eq i32 %conv169, 4, !dbg !9321
  br i1 %cmp170, label %land.lhs.true172, label %if.end181, !dbg !9322

land.lhs.true172:                                 ; preds = %lor.lhs.false164, %if.end161
  %88 = load i8, i8* %type, align 1, !dbg !9323
  %conv173 = zext i8 %88 to i32, !dbg !9323
  %cmp174 = icmp ne i32 %conv173, 2, !dbg !9324
  br i1 %cmp174, label %land.lhs.true176, label %if.end181, !dbg !9325

land.lhs.true176:                                 ; preds = %land.lhs.true172
  %89 = load i8, i8* %type, align 1, !dbg !9326
  %conv177 = zext i8 %89 to i32, !dbg !9326
  %cmp178 = icmp ne i32 %conv177, 7, !dbg !9327
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !9328

if.then180:                                       ; preds = %land.lhs.true176
  br label %if.end203, !dbg !9329

if.end181:                                        ; preds = %land.lhs.true176, %land.lhs.true172, %lor.lhs.false164
  %90 = load i8, i8* %type, align 1, !dbg !9330
  %idxprom182 = zext i8 %90 to i64, !dbg !9331
  %arrayidx183 = getelementptr [16 x void (%struct.vc_data*, i8, i8)*], [16 x void (%struct.vc_data*, i8, i8)*]* @k_handler, i64 0, i64 %idxprom182, !dbg !9331
  %91 = load void (%struct.vc_data*, i8, i8)*, void (%struct.vc_data*, i8, i8)** %arrayidx183, align 8, !dbg !9331
  %92 = load %struct.vc_data*, %struct.vc_data** %vc, align 8, !dbg !9332
  %93 = load i16, i16* %keysym, align 2, !dbg !9333
  %conv184 = zext i16 %93 to i32, !dbg !9333
  %and185 = and i32 %conv184, 255, !dbg !9334
  %conv186 = trunc i32 %and185 to i8, !dbg !9333
  %94 = load i32, i32* %down.addr, align 4, !dbg !9335
  %tobool187 = icmp ne i32 %94, 0, !dbg !9336
  %lnot188 = xor i1 %tobool187, true, !dbg !9336
  %lnot.ext189 = zext i1 %lnot188 to i32, !dbg !9336
  %conv190 = trunc i32 %lnot.ext189 to i8, !dbg !9336
  call void %91(%struct.vc_data* %92, i8 zeroext %conv186, i8 signext %conv190) #11, !dbg !9337
  %95 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9338
  %ledflagstate191 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %95, i32 0, i32 2, !dbg !9339
  %bf.load192 = load i8, i8* %ledflagstate191, align 1, !dbg !9339
  %bf.lshr193 = lshr i8 %bf.load192, 1, !dbg !9339
  %bf.clear194 = and i8 %bf.lshr193, 15, !dbg !9339
  %conv195 = zext i8 %bf.clear194 to i32, !dbg !9338
  %ledstate196 = getelementptr inbounds %struct.keyboard_notifier_param, %struct.keyboard_notifier_param* %param, i32 0, i32 3, !dbg !9340
  store i32 %conv195, i32* %ledstate196, align 8, !dbg !9341
  %96 = bitcast %struct.keyboard_notifier_param* %param to i8*, !dbg !9342
  %call197 = call i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head* @keyboard_notifier_list, i64 5, i8* %96) #11, !dbg !9343
  %97 = load i8, i8* %type, align 1, !dbg !9344
  %conv198 = zext i8 %97 to i32, !dbg !9344
  %cmp199 = icmp ne i32 %conv198, 12, !dbg !9346
  br i1 %cmp199, label %if.then201, label %if.end203, !dbg !9347

if.then201:                                       ; preds = %if.end181
  %98 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9348
  %slockstate202 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %98, i32 0, i32 1, !dbg !9349
  store i8 0, i8* %slockstate202, align 1, !dbg !9350
  br label %if.end203, !dbg !9348

if.end203:                                        ; preds = %if.then70, %if.then88, %if.else107, %if.end133, %if.then160, %if.then180, %if.then201, %if.end181
  ret void, !dbg !9351
}

; Function Attrs: noredzone
declare dso_local void @schedule_console_callback() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_queue(%struct.vc_data* %vc, i32 %ch) #0 !dbg !9352 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %ch.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9355, metadata !DIExpression()), !dbg !9356
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !9357, metadata !DIExpression()), !dbg !9358
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9359
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 0, !dbg !9360
  %1 = load i32, i32* %ch.addr, align 4, !dbg !9361
  %conv = trunc i32 %1 to i8, !dbg !9361
  %call = call i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext %conv, i8 signext 0) #11, !dbg !9362
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9363
  %port1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 0, !dbg !9364
  call void @tty_schedule_flip(%struct.tty_port* %port1) #11, !dbg !9365
  ret void, !dbg !9366
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext %ch, i8 signext %flag) #0 !dbg !9367 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %ch.addr = alloca i8, align 1
  %flag.addr = alloca i8, align 1
  %tb = alloca %struct.tty_buffer*, align 8
  %change = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !9371, metadata !DIExpression()), !dbg !9372
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !9373, metadata !DIExpression()), !dbg !9374
  store i8 %flag, i8* %flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flag.addr, metadata !9375, metadata !DIExpression()), !dbg !9376
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %tb, metadata !9377, metadata !DIExpression()), !dbg !9378
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9379
  %buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 0, !dbg !9380
  %tail = getelementptr inbounds %struct.tty_bufhead, %struct.tty_bufhead* %buf, i32 0, i32 8, !dbg !9381
  %1 = load %struct.tty_buffer*, %struct.tty_buffer** %tail, align 8, !dbg !9381
  store %struct.tty_buffer* %1, %struct.tty_buffer** %tb, align 8, !dbg !9378
  call void @llvm.dbg.declare(metadata i32* %change, metadata !9382, metadata !DIExpression()), !dbg !9383
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !9384
  %flags = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 5, !dbg !9385
  %3 = load i32, i32* %flags, align 8, !dbg !9385
  %and = and i32 %3, 1, !dbg !9386
  %tobool = icmp ne i32 %and, 0, !dbg !9386
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9387

land.rhs:                                         ; preds = %entry
  %4 = load i8, i8* %flag.addr, align 1, !dbg !9388
  %conv = sext i8 %4 to i32, !dbg !9388
  %cmp = icmp ne i32 %conv, 0, !dbg !9389
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !9390
  %land.ext = zext i1 %5 to i32, !dbg !9387
  store i32 %land.ext, i32* %change, align 4, !dbg !9391
  %6 = load i32, i32* %change, align 4, !dbg !9392
  %tobool2 = icmp ne i32 %6, 0, !dbg !9392
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !9394

land.lhs.true:                                    ; preds = %land.end
  %7 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !9395
  %used = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %7, i32 0, i32 1, !dbg !9396
  %8 = load i32, i32* %used, align 8, !dbg !9396
  %9 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !9397
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %9, i32 0, i32 2, !dbg !9398
  %10 = load i32, i32* %size, align 4, !dbg !9398
  %cmp3 = icmp slt i32 %8, %10, !dbg !9399
  br i1 %cmp3, label %if.then, label %if.end12, !dbg !9400

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !9401
  %flags5 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %11, i32 0, i32 5, !dbg !9404
  %12 = load i32, i32* %flags5, align 8, !dbg !9404
  %neg = xor i32 %12, -1, !dbg !9405
  %and6 = and i32 %neg, 1, !dbg !9406
  %tobool7 = icmp ne i32 %and6, 0, !dbg !9406
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !9407

if.then8:                                         ; preds = %if.then
  %13 = load i8, i8* %flag.addr, align 1, !dbg !9408
  %14 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !9409
  %15 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !9410
  %used9 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %15, i32 0, i32 1, !dbg !9411
  %16 = load i32, i32* %used9, align 8, !dbg !9411
  %call = call i8* @flag_buf_ptr(%struct.tty_buffer* %14, i32 %16) #11, !dbg !9412
  store i8 %13, i8* %call, align 1, !dbg !9413
  br label %if.end, !dbg !9414

if.end:                                           ; preds = %if.then8, %if.then
  %17 = load i8, i8* %ch.addr, align 1, !dbg !9415
  %18 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !9416
  %19 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !9417
  %used10 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %19, i32 0, i32 1, !dbg !9418
  %20 = load i32, i32* %used10, align 8, !dbg !9419
  %inc = add i32 %20, 1, !dbg !9419
  store i32 %inc, i32* %used10, align 8, !dbg !9419
  %call11 = call i8* @char_buf_ptr(%struct.tty_buffer* %18, i32 %20) #11, !dbg !9420
  store i8 %17, i8* %call11, align 1, !dbg !9421
  store i32 1, i32* %retval, align 4, !dbg !9422
  br label %return, !dbg !9422

if.end12:                                         ; preds = %land.lhs.true, %land.end
  %21 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !9423
  %22 = load i8, i8* %ch.addr, align 1, !dbg !9424
  %23 = load i8, i8* %flag.addr, align 1, !dbg !9425
  %call13 = call i32 @__tty_insert_flip_char(%struct.tty_port* %21, i8 zeroext %22, i8 signext %23) #11, !dbg !9426
  store i32 %call13, i32* %retval, align 4, !dbg !9427
  br label %return, !dbg !9427

return:                                           ; preds = %if.end12, %if.end
  %24 = load i32, i32* %retval, align 4, !dbg !9428
  ret i32 %24, !dbg !9428
}

; Function Attrs: noredzone
declare dso_local void @tty_schedule_flip(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @flag_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #0 !dbg !9429 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !9432, metadata !DIExpression()), !dbg !9433
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !9434, metadata !DIExpression()), !dbg !9435
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !9436
  %1 = load i32, i32* %ofs.addr, align 4, !dbg !9437
  %call = call i8* @char_buf_ptr(%struct.tty_buffer* %0, i32 %1) #11, !dbg !9438
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !9439
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 2, !dbg !9440
  %3 = load i32, i32* %size, align 4, !dbg !9440
  %idx.ext = sext i32 %3 to i64, !dbg !9441
  %add.ptr = getelementptr i8, i8* %call, i64 %idx.ext, !dbg !9441
  ret i8* %add.ptr, !dbg !9442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @char_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #0 !dbg !9443 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !9446, metadata !DIExpression()), !dbg !9447
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !9448, metadata !DIExpression()), !dbg !9449
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !9450
  %data = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %0, i32 0, i32 6, !dbg !9451
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %data, i64 0, i64 0, !dbg !9450
  %1 = bitcast i64* %arraydecay to i8*, !dbg !9452
  %2 = load i32, i32* %ofs.addr, align 4, !dbg !9453
  %idx.ext = sext i32 %2 to i64, !dbg !9454
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !9454
  ret i8* %add.ptr, !dbg !9455
}

; Function Attrs: noredzone
declare dso_local i32 @__tty_insert_flip_char(%struct.tty_port*, i8 zeroext, i8 signext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @emulate_raw(%struct.vc_data* %vc, i32 %keycode, i8 zeroext %up_flag) #0 !dbg !9456 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %keycode.addr = alloca i32, align 4
  %up_flag.addr = alloca i8, align 1
  %code = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9459, metadata !DIExpression()), !dbg !9460
  store i32 %keycode, i32* %keycode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keycode.addr, metadata !9461, metadata !DIExpression()), !dbg !9462
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !9463, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.declare(metadata i32* %code, metadata !9465, metadata !DIExpression()), !dbg !9466
  %0 = load i32, i32* %keycode.addr, align 4, !dbg !9467
  switch i32 %0, label %sw.default [
    i32 119, label %sw.bb
    i32 122, label %sw.bb3
    i32 123, label %sw.bb4
    i32 99, label %sw.bb8
  ], !dbg !9468

sw.bb:                                            ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9469
  call void @put_queue(%struct.vc_data* %1, i32 225) #11, !dbg !9471
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9472
  %3 = load i8, i8* %up_flag.addr, align 1, !dbg !9473
  %conv = zext i8 %3 to i32, !dbg !9473
  %or = or i32 29, %conv, !dbg !9474
  call void @put_queue(%struct.vc_data* %2, i32 %or) #11, !dbg !9475
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9476
  %5 = load i8, i8* %up_flag.addr, align 1, !dbg !9477
  %conv1 = zext i8 %5 to i32, !dbg !9477
  %or2 = or i32 69, %conv1, !dbg !9478
  call void @put_queue(%struct.vc_data* %4, i32 %or2) #11, !dbg !9479
  br label %sw.epilog, !dbg !9480

sw.bb3:                                           ; preds = %entry
  %6 = load i8, i8* %up_flag.addr, align 1, !dbg !9481
  %tobool = icmp ne i8 %6, 0, !dbg !9481
  br i1 %tobool, label %if.end, label %if.then, !dbg !9483

if.then:                                          ; preds = %sw.bb3
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9484
  call void @put_queue(%struct.vc_data* %7, i32 242) #11, !dbg !9485
  br label %if.end, !dbg !9485

if.end:                                           ; preds = %if.then, %sw.bb3
  br label %sw.epilog, !dbg !9486

sw.bb4:                                           ; preds = %entry
  %8 = load i8, i8* %up_flag.addr, align 1, !dbg !9487
  %tobool5 = icmp ne i8 %8, 0, !dbg !9487
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9489

if.then6:                                         ; preds = %sw.bb4
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9490
  call void @put_queue(%struct.vc_data* %9, i32 241) #11, !dbg !9491
  br label %if.end7, !dbg !9491

if.end7:                                          ; preds = %if.then6, %sw.bb4
  br label %sw.epilog, !dbg !9492

sw.bb8:                                           ; preds = %entry
  %call = call zeroext i1 @test_bit(i64 56, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @key_down, i64 0, i64 0)) #11, !dbg !9493
  br i1 %call, label %if.then12, label %lor.lhs.false, !dbg !9495

lor.lhs.false:                                    ; preds = %sw.bb8
  %call10 = call zeroext i1 @test_bit(i64 100, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @key_down, i64 0, i64 0)) #11, !dbg !9496
  br i1 %call10, label %if.then12, label %if.else, !dbg !9497

if.then12:                                        ; preds = %lor.lhs.false, %sw.bb8
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9498
  %11 = load i8, i8* %up_flag.addr, align 1, !dbg !9500
  %conv13 = zext i8 %11 to i32, !dbg !9500
  %or14 = or i32 84, %conv13, !dbg !9501
  call void @put_queue(%struct.vc_data* %10, i32 %or14) #11, !dbg !9502
  br label %if.end19, !dbg !9503

if.else:                                          ; preds = %lor.lhs.false
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9504
  call void @put_queue(%struct.vc_data* %12, i32 224) #11, !dbg !9506
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9507
  %14 = load i8, i8* %up_flag.addr, align 1, !dbg !9508
  %conv15 = zext i8 %14 to i32, !dbg !9508
  %or16 = or i32 42, %conv15, !dbg !9509
  call void @put_queue(%struct.vc_data* %13, i32 %or16) #11, !dbg !9510
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9511
  call void @put_queue(%struct.vc_data* %15, i32 224) #11, !dbg !9512
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9513
  %17 = load i8, i8* %up_flag.addr, align 1, !dbg !9514
  %conv17 = zext i8 %17 to i32, !dbg !9514
  %or18 = or i32 55, %conv17, !dbg !9515
  call void @put_queue(%struct.vc_data* %16, i32 %or18) #11, !dbg !9516
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then12
  br label %sw.epilog, !dbg !9517

sw.default:                                       ; preds = %entry
  %18 = load i32, i32* %keycode.addr, align 4, !dbg !9518
  %cmp = icmp ugt i32 %18, 255, !dbg !9520
  br i1 %cmp, label %if.then21, label %if.end22, !dbg !9521

if.then21:                                        ; preds = %sw.default
  store i32 -1, i32* %retval, align 4, !dbg !9522
  br label %return, !dbg !9522

if.end22:                                         ; preds = %sw.default
  %19 = load i32, i32* %keycode.addr, align 4, !dbg !9523
  %idxprom = zext i32 %19 to i64, !dbg !9524
  %arrayidx = getelementptr [256 x i16], [256 x i16]* bitcast (<{ [240 x i16], [16 x i16] }>* @x86_keycodes to [256 x i16]*), i64 0, i64 %idxprom, !dbg !9524
  %20 = load i16, i16* %arrayidx, align 2, !dbg !9524
  %conv23 = zext i16 %20 to i32, !dbg !9524
  store i32 %conv23, i32* %code, align 4, !dbg !9525
  %21 = load i32, i32* %code, align 4, !dbg !9526
  %tobool24 = icmp ne i32 %21, 0, !dbg !9526
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !9528

if.then25:                                        ; preds = %if.end22
  store i32 -1, i32* %retval, align 4, !dbg !9529
  br label %return, !dbg !9529

if.end26:                                         ; preds = %if.end22
  %22 = load i32, i32* %code, align 4, !dbg !9530
  %and = and i32 %22, 256, !dbg !9532
  %tobool27 = icmp ne i32 %and, 0, !dbg !9532
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !9533

if.then28:                                        ; preds = %if.end26
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9534
  call void @put_queue(%struct.vc_data* %23, i32 224) #11, !dbg !9535
  br label %if.end29, !dbg !9535

if.end29:                                         ; preds = %if.then28, %if.end26
  %24 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9536
  %25 = load i32, i32* %code, align 4, !dbg !9537
  %and30 = and i32 %25, 127, !dbg !9538
  %26 = load i8, i8* %up_flag.addr, align 1, !dbg !9539
  %conv31 = zext i8 %26 to i32, !dbg !9539
  %or32 = or i32 %and30, %conv31, !dbg !9540
  call void @put_queue(%struct.vc_data* %24, i32 %or32) #11, !dbg !9541
  br label %sw.epilog, !dbg !9542

sw.epilog:                                        ; preds = %if.end29, %if.end19, %if.end7, %if.end, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !9543
  br label %return, !dbg !9543

return:                                           ; preds = %sw.epilog, %if.then25, %if.then21
  %27 = load i32, i32* %retval, align 4, !dbg !9544
  ret i32 %27, !dbg !9544
}

; Function Attrs: noredzone
declare dso_local i32 @__printk_ratelimit(i8*) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !9545 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9550, metadata !DIExpression()), !dbg !9552
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9554, metadata !DIExpression()), !dbg !9555
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9556, metadata !DIExpression()), !dbg !9558
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9560, metadata !DIExpression()), !dbg !9561
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9562, metadata !DIExpression()), !dbg !9563
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9564, metadata !DIExpression()), !dbg !9565
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9566
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9567
  %div = sdiv i64 %1, 64, !dbg !9567
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9568
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9566
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9569
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9570
  %conv.i = trunc i64 %4 to i32, !dbg !9570
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !9571
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9572
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9572
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !9572
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9573
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9574
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9575
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #6, !dbg !9577
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9578

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9579
  %12 = bitcast i64* %11 to i8*, !dbg !9579
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9579
  %shr.i = ashr i64 %13, 3, !dbg !9579
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9579
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9581
  %and.i = and i64 %14, 7, !dbg !9581
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9581
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9581
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #6, !dbg !9582, !srcloc !9583
  br label %arch_set_bit.exit, !dbg !9584

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9585
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9587
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #6, !dbg !9588, !srcloc !9589
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !9591 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9592, metadata !DIExpression()), !dbg !9594
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9596, metadata !DIExpression()), !dbg !9597
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9556, metadata !DIExpression()), !dbg !9598
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9560, metadata !DIExpression()), !dbg !9600
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9601, metadata !DIExpression()), !dbg !9602
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9603, metadata !DIExpression()), !dbg !9604
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9605
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9606
  %div = sdiv i64 %1, 64, !dbg !9606
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9607
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9605
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9608
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9609
  %conv.i = trunc i64 %4 to i32, !dbg !9609
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !9610
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9611
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9611
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !9611
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9612
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9613
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9614
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #6, !dbg !9616
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9617

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9618
  %12 = bitcast i64* %11 to i8*, !dbg !9618
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9618
  %shr.i = ashr i64 %13, 3, !dbg !9618
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9618
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9620
  %and.i = and i64 %14, 7, !dbg !9620
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9620
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9620
  %neg.i = xor i32 %shl.i, -1, !dbg !9621
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #6, !dbg !9622, !srcloc !9623
  br label %arch_clear_bit.exit, !dbg !9624

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9625
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9627
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #6, !dbg !9628, !srcloc !9629
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9630
}

; Function Attrs: noredzone
declare dso_local i32 @tty_chars_in_buffer(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local i32 @atomic_notifier_call_chain(%struct.atomic_notifier_head*, i64, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_unicode(%struct.vc_data* %vc, i32 %value, i8 signext %up_flag) #0 !dbg !9631 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i32, align 4
  %up_flag.addr = alloca i8, align 1
  %c = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9632, metadata !DIExpression()), !dbg !9633
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9634, metadata !DIExpression()), !dbg !9635
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !9636, metadata !DIExpression()), !dbg !9637
  %0 = load i8, i8* %up_flag.addr, align 1, !dbg !9638
  %tobool = icmp ne i8 %0, 0, !dbg !9638
  br i1 %tobool, label %if.then, label %if.end, !dbg !9640

if.then:                                          ; preds = %entry
  br label %if.end14, !dbg !9641

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @diacr, align 4, !dbg !9642
  %tobool1 = icmp ne i32 %1, 0, !dbg !9642
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9644

if.then2:                                         ; preds = %if.end
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9645
  %3 = load i32, i32* %value.addr, align 4, !dbg !9646
  %call = call i32 @handle_diacr(%struct.vc_data* %2, i32 %3) #11, !dbg !9647
  store i32 %call, i32* %value.addr, align 4, !dbg !9648
  br label %if.end3, !dbg !9649

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load i8, i8* @dead_key_next, align 1, !dbg !9650
  %tobool4 = trunc i8 %4 to i1, !dbg !9650
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9652

if.then5:                                         ; preds = %if.end3
  store i8 0, i8* @dead_key_next, align 1, !dbg !9653
  %5 = load i32, i32* %value.addr, align 4, !dbg !9655
  store i32 %5, i32* @diacr, align 4, !dbg !9656
  br label %if.end14, !dbg !9657

if.end6:                                          ; preds = %if.end3
  %6 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9658
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %6, i32 0, i32 3, !dbg !9660
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !9660
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !9660
  %bf.clear = and i8 %bf.lshr, 7, !dbg !9660
  %conv = zext i8 %bf.clear to i32, !dbg !9658
  %cmp = icmp eq i32 %conv, 3, !dbg !9661
  br i1 %cmp, label %if.then8, label %if.else, !dbg !9662

if.then8:                                         ; preds = %if.end6
  %7 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9663
  %8 = load i32, i32* %value.addr, align 4, !dbg !9664
  call void @to_utf8(%struct.vc_data* %7, i32 %8) #11, !dbg !9665
  br label %if.end14, !dbg !9665

if.else:                                          ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %c, metadata !9666, metadata !DIExpression()), !dbg !9668
  %9 = load i32, i32* %value.addr, align 4, !dbg !9669
  %call9 = call i32 @conv_uni_to_8bit(i32 %9) #11, !dbg !9670
  store i32 %call9, i32* %c, align 4, !dbg !9668
  %10 = load i32, i32* %c, align 4, !dbg !9671
  %cmp10 = icmp ne i32 %10, -1, !dbg !9673
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9674

if.then12:                                        ; preds = %if.else
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9675
  %12 = load i32, i32* %c, align 4, !dbg !9676
  call void @put_queue(%struct.vc_data* %11, i32 %12) #11, !dbg !9677
  br label %if.end13, !dbg !9677

if.end13:                                         ; preds = %if.then12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.then, %if.then5, %if.end13, %if.then8
  ret void, !dbg !9678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !9679 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9680, metadata !DIExpression()), !dbg !9681
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9682, metadata !DIExpression()), !dbg !9683
  ret i1 true, !dbg !9684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handle_diacr(%struct.vc_data* %vc, i32 %ch) #0 !dbg !9685 {
entry:
  %retval = alloca i32, align 4
  %vc.addr = alloca %struct.vc_data*, align 8
  %ch.addr = alloca i32, align 4
  %d = alloca i32, align 4
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9688, metadata !DIExpression()), !dbg !9689
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !9690, metadata !DIExpression()), !dbg !9691
  call void @llvm.dbg.declare(metadata i32* %d, metadata !9692, metadata !DIExpression()), !dbg !9693
  %0 = load i32, i32* @diacr, align 4, !dbg !9694
  store i32 %0, i32* %d, align 4, !dbg !9693
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9695, metadata !DIExpression()), !dbg !9696
  store i32 0, i32* @diacr, align 4, !dbg !9697
  %1 = load i32, i32* %d, align 4, !dbg !9698
  %and = and i32 %1, -256, !dbg !9700
  %cmp = icmp eq i32 %and, 10240, !dbg !9701
  br i1 %cmp, label %if.then, label %if.else, !dbg !9702

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ch.addr, align 4, !dbg !9703
  %and1 = and i32 %2, -256, !dbg !9706
  %cmp2 = icmp eq i32 %and1, 10240, !dbg !9707
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !9708

if.then3:                                         ; preds = %if.then
  %3 = load i32, i32* %d, align 4, !dbg !9709
  %4 = load i32, i32* %ch.addr, align 4, !dbg !9710
  %or = or i32 %3, %4, !dbg !9711
  store i32 %or, i32* %retval, align 4, !dbg !9712
  br label %return, !dbg !9712

if.end:                                           ; preds = %if.then
  br label %if.end13, !dbg !9713

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9714
  br label %for.cond, !dbg !9717

for.cond:                                         ; preds = %for.inc, %if.else
  %5 = load i32, i32* %i, align 4, !dbg !9718
  %6 = load i32, i32* @accent_table_size, align 4, !dbg !9720
  %cmp4 = icmp ult i32 %5, %6, !dbg !9721
  br i1 %cmp4, label %for.body, label %for.end, !dbg !9722

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !9723
  %idxprom = zext i32 %7 to i64, !dbg !9725
  %arrayidx = getelementptr [0 x %struct.kbdiacruc], [0 x %struct.kbdiacruc]* @accent_table, i64 0, i64 %idxprom, !dbg !9725
  %diacr = getelementptr inbounds %struct.kbdiacruc, %struct.kbdiacruc* %arrayidx, i32 0, i32 0, !dbg !9726
  %8 = load i32, i32* %diacr, align 4, !dbg !9726
  %9 = load i32, i32* %d, align 4, !dbg !9727
  %cmp5 = icmp eq i32 %8, %9, !dbg !9728
  br i1 %cmp5, label %land.lhs.true, label %if.end12, !dbg !9729

land.lhs.true:                                    ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !9730
  %idxprom6 = zext i32 %10 to i64, !dbg !9731
  %arrayidx7 = getelementptr [0 x %struct.kbdiacruc], [0 x %struct.kbdiacruc]* @accent_table, i64 0, i64 %idxprom6, !dbg !9731
  %base = getelementptr inbounds %struct.kbdiacruc, %struct.kbdiacruc* %arrayidx7, i32 0, i32 1, !dbg !9732
  %11 = load i32, i32* %base, align 4, !dbg !9732
  %12 = load i32, i32* %ch.addr, align 4, !dbg !9733
  %cmp8 = icmp eq i32 %11, %12, !dbg !9734
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !9735

if.then9:                                         ; preds = %land.lhs.true
  %13 = load i32, i32* %i, align 4, !dbg !9736
  %idxprom10 = zext i32 %13 to i64, !dbg !9737
  %arrayidx11 = getelementptr [0 x %struct.kbdiacruc], [0 x %struct.kbdiacruc]* @accent_table, i64 0, i64 %idxprom10, !dbg !9737
  %result = getelementptr inbounds %struct.kbdiacruc, %struct.kbdiacruc* %arrayidx11, i32 0, i32 2, !dbg !9738
  %14 = load i32, i32* %result, align 4, !dbg !9738
  store i32 %14, i32* %retval, align 4, !dbg !9739
  br label %return, !dbg !9739

if.end12:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !9733

for.inc:                                          ; preds = %if.end12
  %15 = load i32, i32* %i, align 4, !dbg !9740
  %inc = add i32 %15, 1, !dbg !9740
  store i32 %inc, i32* %i, align 4, !dbg !9740
  br label %for.cond, !dbg !9741, !llvm.loop !9742

for.end:                                          ; preds = %for.cond
  br label %if.end13

if.end13:                                         ; preds = %for.end, %if.end
  %16 = load i32, i32* %ch.addr, align 4, !dbg !9744
  %cmp14 = icmp eq i32 %16, 32, !dbg !9746
  br i1 %cmp14, label %if.then18, label %lor.lhs.false, !dbg !9747

lor.lhs.false:                                    ; preds = %if.end13
  %17 = load i32, i32* %ch.addr, align 4, !dbg !9748
  %cmp15 = icmp eq i32 %17, 10240, !dbg !9749
  br i1 %cmp15, label %if.then18, label %lor.lhs.false16, !dbg !9750

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %18 = load i32, i32* %ch.addr, align 4, !dbg !9751
  %19 = load i32, i32* %d, align 4, !dbg !9752
  %cmp17 = icmp eq i32 %18, %19, !dbg !9753
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !9754

if.then18:                                        ; preds = %lor.lhs.false16, %lor.lhs.false, %if.end13
  %20 = load i32, i32* %d, align 4, !dbg !9755
  store i32 %20, i32* %retval, align 4, !dbg !9756
  br label %return, !dbg !9756

if.end19:                                         ; preds = %lor.lhs.false16
  %21 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9757
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %21, i32 0, i32 3, !dbg !9759
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !9759
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !9759
  %bf.clear = and i8 %bf.lshr, 7, !dbg !9759
  %conv = zext i8 %bf.clear to i32, !dbg !9757
  %cmp20 = icmp eq i32 %conv, 3, !dbg !9760
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !9761

if.then22:                                        ; preds = %if.end19
  %22 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9762
  %23 = load i32, i32* %d, align 4, !dbg !9763
  call void @to_utf8(%struct.vc_data* %22, i32 %23) #11, !dbg !9764
  br label %if.end28, !dbg !9764

if.else23:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %c, metadata !9765, metadata !DIExpression()), !dbg !9767
  %24 = load i32, i32* %d, align 4, !dbg !9768
  %call = call i32 @conv_uni_to_8bit(i32 %24) #11, !dbg !9769
  store i32 %call, i32* %c, align 4, !dbg !9767
  %25 = load i32, i32* %c, align 4, !dbg !9770
  %cmp24 = icmp ne i32 %25, -1, !dbg !9772
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !9773

if.then26:                                        ; preds = %if.else23
  %26 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9774
  %27 = load i32, i32* %c, align 4, !dbg !9775
  call void @put_queue(%struct.vc_data* %26, i32 %27) #11, !dbg !9776
  br label %if.end27, !dbg !9776

if.end27:                                         ; preds = %if.then26, %if.else23
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then22
  %28 = load i32, i32* %ch.addr, align 4, !dbg !9777
  store i32 %28, i32* %retval, align 4, !dbg !9778
  br label %return, !dbg !9778

return:                                           ; preds = %if.end28, %if.then18, %if.then9, %if.then3
  %29 = load i32, i32* %retval, align 4, !dbg !9779
  ret i32 %29, !dbg !9779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @to_utf8(%struct.vc_data* %vc, i32 %c) #0 !dbg !9780 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %c.addr = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9784, metadata !DIExpression()), !dbg !9785
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !9786, metadata !DIExpression()), !dbg !9787
  %0 = load i32, i32* %c.addr, align 4, !dbg !9788
  %cmp = icmp ult i32 %0, 128, !dbg !9790
  br i1 %cmp, label %if.then, label %if.else, !dbg !9791

if.then:                                          ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9792
  %2 = load i32, i32* %c.addr, align 4, !dbg !9793
  call void @put_queue(%struct.vc_data* %1, i32 %2) #11, !dbg !9794
  br label %if.end36, !dbg !9794

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %c.addr, align 4, !dbg !9795
  %cmp1 = icmp ult i32 %3, 2048, !dbg !9797
  br i1 %cmp1, label %if.then2, label %if.else4, !dbg !9798

if.then2:                                         ; preds = %if.else
  %4 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9799
  %5 = load i32, i32* %c.addr, align 4, !dbg !9801
  %shr = lshr i32 %5, 6, !dbg !9802
  %or = or i32 192, %shr, !dbg !9803
  call void @put_queue(%struct.vc_data* %4, i32 %or) #11, !dbg !9804
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9805
  %7 = load i32, i32* %c.addr, align 4, !dbg !9806
  %and = and i32 %7, 63, !dbg !9807
  %or3 = or i32 128, %and, !dbg !9808
  call void @put_queue(%struct.vc_data* %6, i32 %or3) #11, !dbg !9809
  br label %if.end35, !dbg !9810

if.else4:                                         ; preds = %if.else
  %8 = load i32, i32* %c.addr, align 4, !dbg !9811
  %cmp5 = icmp ult i32 %8, 65536, !dbg !9813
  br i1 %cmp5, label %if.then6, label %if.else20, !dbg !9814

if.then6:                                         ; preds = %if.else4
  %9 = load i32, i32* %c.addr, align 4, !dbg !9815
  %cmp7 = icmp uge i32 %9, 55296, !dbg !9818
  br i1 %cmp7, label %land.lhs.true, label %if.end, !dbg !9819

land.lhs.true:                                    ; preds = %if.then6
  %10 = load i32, i32* %c.addr, align 4, !dbg !9820
  %cmp8 = icmp ult i32 %10, 57344, !dbg !9821
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !9822

if.then9:                                         ; preds = %land.lhs.true
  br label %if.end36, !dbg !9823

if.end:                                           ; preds = %land.lhs.true, %if.then6
  %11 = load i32, i32* %c.addr, align 4, !dbg !9824
  %cmp10 = icmp eq i32 %11, 65535, !dbg !9826
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9827

if.then11:                                        ; preds = %if.end
  br label %if.end36, !dbg !9828

if.end12:                                         ; preds = %if.end
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9829
  %13 = load i32, i32* %c.addr, align 4, !dbg !9830
  %shr13 = lshr i32 %13, 12, !dbg !9831
  %or14 = or i32 224, %shr13, !dbg !9832
  call void @put_queue(%struct.vc_data* %12, i32 %or14) #11, !dbg !9833
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9834
  %15 = load i32, i32* %c.addr, align 4, !dbg !9835
  %shr15 = lshr i32 %15, 6, !dbg !9836
  %and16 = and i32 %shr15, 63, !dbg !9837
  %or17 = or i32 128, %and16, !dbg !9838
  call void @put_queue(%struct.vc_data* %14, i32 %or17) #11, !dbg !9839
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9840
  %17 = load i32, i32* %c.addr, align 4, !dbg !9841
  %and18 = and i32 %17, 63, !dbg !9842
  %or19 = or i32 128, %and18, !dbg !9843
  call void @put_queue(%struct.vc_data* %16, i32 %or19) #11, !dbg !9844
  br label %if.end34, !dbg !9845

if.else20:                                        ; preds = %if.else4
  %18 = load i32, i32* %c.addr, align 4, !dbg !9846
  %cmp21 = icmp ult i32 %18, 1114112, !dbg !9848
  br i1 %cmp21, label %if.then22, label %if.end33, !dbg !9849

if.then22:                                        ; preds = %if.else20
  %19 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9850
  %20 = load i32, i32* %c.addr, align 4, !dbg !9852
  %shr23 = lshr i32 %20, 18, !dbg !9853
  %or24 = or i32 240, %shr23, !dbg !9854
  call void @put_queue(%struct.vc_data* %19, i32 %or24) #11, !dbg !9855
  %21 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9856
  %22 = load i32, i32* %c.addr, align 4, !dbg !9857
  %shr25 = lshr i32 %22, 12, !dbg !9858
  %and26 = and i32 %shr25, 63, !dbg !9859
  %or27 = or i32 128, %and26, !dbg !9860
  call void @put_queue(%struct.vc_data* %21, i32 %or27) #11, !dbg !9861
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9862
  %24 = load i32, i32* %c.addr, align 4, !dbg !9863
  %shr28 = lshr i32 %24, 6, !dbg !9864
  %and29 = and i32 %shr28, 63, !dbg !9865
  %or30 = or i32 128, %and29, !dbg !9866
  call void @put_queue(%struct.vc_data* %23, i32 %or30) #11, !dbg !9867
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9868
  %26 = load i32, i32* %c.addr, align 4, !dbg !9869
  %and31 = and i32 %26, 63, !dbg !9870
  %or32 = or i32 128, %and31, !dbg !9871
  call void @put_queue(%struct.vc_data* %25, i32 %or32) #11, !dbg !9872
  br label %if.end33, !dbg !9873

if.end33:                                         ; preds = %if.then22, %if.else20
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end12
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then2
  br label %if.end36

if.end36:                                         ; preds = %if.then9, %if.then11, %if.end35, %if.then
  ret void, !dbg !9874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_self(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !9875 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9876, metadata !DIExpression()), !dbg !9877
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !9878, metadata !DIExpression()), !dbg !9879
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !9880, metadata !DIExpression()), !dbg !9881
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9882
  %1 = load i8, i8* %value.addr, align 1, !dbg !9883
  %call = call i32 @conv_8bit_to_uni(i8 zeroext %1) #11, !dbg !9884
  %2 = load i8, i8* %up_flag.addr, align 1, !dbg !9885
  call void @k_unicode(%struct.vc_data* %0, i32 %call, i8 signext %2) #11, !dbg !9886
  ret void, !dbg !9887
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_fn(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !9888 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !4860, metadata !DIExpression()), !dbg !9889
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4867, metadata !DIExpression()), !dbg !9893
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4869, metadata !DIExpression()), !dbg !9894
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !9903, metadata !DIExpression()), !dbg !9904
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !9905, metadata !DIExpression()), !dbg !9906
  %0 = load i8, i8* %up_flag.addr, align 1, !dbg !9907
  %tobool = icmp ne i8 %0, 0, !dbg !9907
  br i1 %tobool, label %if.then, label %if.end, !dbg !9909

if.then:                                          ; preds = %entry
  br label %if.end31, !dbg !9910

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %value.addr, align 1, !dbg !9911
  %conv = zext i8 %1 to i32, !dbg !9912
  %conv1 = zext i32 %conv to i64, !dbg !9912
  %cmp = icmp ult i64 %conv1, 256, !dbg !9913
  br i1 %cmp, label %if.then3, label %if.else, !dbg !9914

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9915, metadata !DIExpression()), !dbg !9916
  br label %do.body, !dbg !9917

do.body:                                          ; preds = %if.then3
  br label %do.body4, !dbg !9918

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9919, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9922, metadata !DIExpression()), !dbg !9921
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !9921
  %conv6 = zext i1 %cmp5 to i32, !dbg !9921
  store i32 1, i32* %tmp, align 4, !dbg !9921
  %2 = load i32, i32* %tmp, align 4, !dbg !9921
  br label %do.body7, !dbg !9923

do.body7:                                         ; preds = %do.body4
  br label %do.body8, !dbg !9924

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !9925

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !9927, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !9931, metadata !DIExpression()), !dbg !9930
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !9930
  %conv13 = zext i1 %cmp12 to i32, !dbg !9930
  store i32 1, i32* %tmp14, align 4, !dbg !9930
  %3 = load i32, i32* %tmp14, align 4, !dbg !9930
  %call = call i64 @arch_local_irq_save() #11, !dbg !9932
  store i64 %call, i64* %flags, align 8, !dbg !9932
  br label %do.end, !dbg !9932

do.end:                                           ; preds = %do.body9
  br label %do.end15, !dbg !9925

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !9924

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9933, !srcloc !9934
  br label %do.body17, !dbg !9933

do.body17:                                        ; preds = %do.body16
  store %struct.spinlock* @func_buf_lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9935
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !9936
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !9936
  br label %do.end19, !dbg !9937

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !9933

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9924

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9923

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !9918

do.end23:                                         ; preds = %do.end22
  %6 = load i8, i8* %value.addr, align 1, !dbg !9938
  %idxprom = zext i8 %6 to i64, !dbg !9940
  %arrayidx = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom, !dbg !9940
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !9940
  %tobool24 = icmp ne i8* %7, null, !dbg !9940
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !9941

if.then25:                                        ; preds = %do.end23
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9942
  %9 = load i8, i8* %value.addr, align 1, !dbg !9943
  %idxprom26 = zext i8 %9 to i64, !dbg !9944
  %arrayidx27 = getelementptr [256 x i8*], [256 x i8*]* @func_table, i64 0, i64 %idxprom26, !dbg !9944
  %10 = load i8*, i8** %arrayidx27, align 8, !dbg !9944
  call void @puts_queue(%struct.vc_data* %8, i8* %10) #11, !dbg !9945
  br label %if.end28, !dbg !9945

if.end28:                                         ; preds = %if.then25, %do.end23
  %11 = load i64, i64* %flags, align 8, !dbg !9946
  store %struct.spinlock* @func_buf_lock, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !346, metadata !4906, metadata !DIExpression()) #6, !dbg !9947
  call void @llvm.dbg.declare(metadata !346, metadata !4910, metadata !DIExpression()) #6, !dbg !9947
  store i32 1, i32* %tmp.i, align 4, !dbg !9947
  %12 = load i32, i32* %tmp.i, align 4, !dbg !9947
  call void @llvm.dbg.declare(metadata !346, metadata !4911, metadata !DIExpression()) #6, !dbg !9948
  call void @llvm.dbg.declare(metadata !346, metadata !4917, metadata !DIExpression()) #6, !dbg !9948
  store i32 1, i32* %tmp8.i, align 4, !dbg !9948
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !9948
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !9949
  call void @arch_local_irq_restore(i64 %14) #12, !dbg !9949
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9950, !srcloc !4921
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !9951
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !9951
  %rlock.i33 = bitcast %union.anon* %16 to %struct.raw_spinlock*, !dbg !9951
  br label %if.end31, !dbg !9952

if.else:                                          ; preds = %if.end
  %17 = load i8, i8* %value.addr, align 1, !dbg !9953
  %conv29 = zext i8 %17 to i32, !dbg !9953
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0), i32 %conv29) #14, !dbg !9953
  br label %if.end31

if.end31:                                         ; preds = %if.then, %if.else, %if.end28
  ret void, !dbg !9954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_spec(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !9955 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9956, metadata !DIExpression()), !dbg !9957
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !9958, metadata !DIExpression()), !dbg !9959
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !9960, metadata !DIExpression()), !dbg !9961
  %0 = load i8, i8* %up_flag.addr, align 1, !dbg !9962
  %tobool = icmp ne i8 %0, 0, !dbg !9962
  br i1 %tobool, label %if.then, label %if.end, !dbg !9964

if.then:                                          ; preds = %entry
  br label %return, !dbg !9965

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %value.addr, align 1, !dbg !9966
  %conv = zext i8 %1 to i64, !dbg !9966
  %cmp = icmp uge i64 %conv, 20, !dbg !9968
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9969

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !9970

if.end3:                                          ; preds = %if.end
  %2 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9971
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %2, i32 0, i32 3, !dbg !9973
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !9973
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !9973
  %bf.clear = and i8 %bf.lshr, 7, !dbg !9973
  %conv4 = zext i8 %bf.clear to i32, !dbg !9971
  %cmp5 = icmp eq i32 %conv4, 2, !dbg !9974
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false, !dbg !9975

lor.lhs.false:                                    ; preds = %if.end3
  %3 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9976
  %kbdmode7 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %3, i32 0, i32 3, !dbg !9977
  %bf.load8 = load i8, i8* %kbdmode7, align 1, !dbg !9977
  %bf.lshr9 = lshr i8 %bf.load8, 4, !dbg !9977
  %bf.clear10 = and i8 %bf.lshr9, 7, !dbg !9977
  %conv11 = zext i8 %bf.clear10 to i32, !dbg !9976
  %cmp12 = icmp eq i32 %conv11, 1, !dbg !9978
  br i1 %cmp12, label %land.lhs.true, label %lor.lhs.false14, !dbg !9979

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %4 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !9980
  %kbdmode15 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %4, i32 0, i32 3, !dbg !9981
  %bf.load16 = load i8, i8* %kbdmode15, align 1, !dbg !9981
  %bf.lshr17 = lshr i8 %bf.load16, 4, !dbg !9981
  %bf.clear18 = and i8 %bf.lshr17, 7, !dbg !9981
  %conv19 = zext i8 %bf.clear18 to i32, !dbg !9980
  %cmp20 = icmp eq i32 %conv19, 4, !dbg !9982
  br i1 %cmp20, label %land.lhs.true, label %if.end26, !dbg !9983

land.lhs.true:                                    ; preds = %lor.lhs.false14, %lor.lhs.false, %if.end3
  %5 = load i8, i8* %value.addr, align 1, !dbg !9984
  %conv22 = zext i8 %5 to i32, !dbg !9984
  %cmp23 = icmp ne i32 %conv22, 15, !dbg !9985
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !9986

if.then25:                                        ; preds = %land.lhs.true
  br label %return, !dbg !9987

if.end26:                                         ; preds = %land.lhs.true, %lor.lhs.false14
  %6 = load i8, i8* %value.addr, align 1, !dbg !9988
  %idxprom = zext i8 %6 to i64, !dbg !9989
  %arrayidx = getelementptr [20 x void (%struct.vc_data*)*], [20 x void (%struct.vc_data*)*]* @fn_handler, i64 0, i64 %idxprom, !dbg !9989
  %7 = load void (%struct.vc_data*)*, void (%struct.vc_data*)** %arrayidx, align 8, !dbg !9989
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !9990
  call void %7(%struct.vc_data* %8) #11, !dbg !9989
  br label %return, !dbg !9991

return:                                           ; preds = %if.end26, %if.then25, %if.then2, %if.then
  ret void, !dbg !9991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_pad(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !4653 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !9992, metadata !DIExpression()), !dbg !9993
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !9994, metadata !DIExpression()), !dbg !9995
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !9996, metadata !DIExpression()), !dbg !9997
  %0 = load i8, i8* %up_flag.addr, align 1, !dbg !9998
  %tobool = icmp ne i8 %0, 0, !dbg !9998
  br i1 %tobool, label %if.then, label %if.end, !dbg !10000

if.then:                                          ; preds = %entry
  br label %if.end31, !dbg !10001

if.end:                                           ; preds = %entry
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10002
  %call = call i32 @vc_kbd_mode(%struct.kbd_struct* %1, i32 0) #11, !dbg !10004
  %tobool1 = icmp ne i32 %call, 0, !dbg !10004
  br i1 %tobool1, label %land.lhs.true, label %if.end4, !dbg !10005

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @shift_down, i64 0, i64 0), align 1, !dbg !10006
  %tobool2 = icmp ne i8 %2, 0, !dbg !10006
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !10007

if.then3:                                         ; preds = %land.lhs.true
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10008
  %4 = load i8, i8* %value.addr, align 1, !dbg !10010
  %idxprom = zext i8 %4 to i64, !dbg !10011
  %arrayidx = getelementptr [22 x i8], [22 x i8]* @k_pad.app_map, i64 0, i64 %idxprom, !dbg !10011
  %5 = load i8, i8* %arrayidx, align 1, !dbg !10011
  %conv = sext i8 %5 to i32, !dbg !10011
  call void @applkey(%struct.vc_data* %3, i32 %conv, i8 signext 1) #11, !dbg !10012
  br label %if.end31, !dbg !10013

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %6 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10014
  %call5 = call i32 @vc_kbd_led(%struct.kbd_struct* %6, i32 1) #11, !dbg !10016
  %tobool6 = icmp ne i32 %call5, 0, !dbg !10016
  br i1 %tobool6, label %if.end21, label %if.then7, !dbg !10017

if.then7:                                         ; preds = %if.end4
  %7 = load i8, i8* %value.addr, align 1, !dbg !10018
  %conv8 = zext i8 %7 to i32, !dbg !10018
  switch i32 %conv8, label %sw.epilog [
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 0, label %sw.bb9
    i32 1, label %sw.bb10
    i32 2, label %sw.bb11
    i32 3, label %sw.bb12
    i32 4, label %sw.bb13
    i32 6, label %sw.bb14
    i32 7, label %sw.bb15
    i32 8, label %sw.bb16
    i32 9, label %sw.bb17
    i32 5, label %sw.bb18
  ], !dbg !10020

sw.bb:                                            ; preds = %if.then7, %if.then7
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10021
  call void @k_fn(%struct.vc_data* %8, i8 zeroext 22, i8 signext 0) #11, !dbg !10023
  br label %if.end31, !dbg !10024

sw.bb9:                                           ; preds = %if.then7
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10025
  call void @k_fn(%struct.vc_data* %9, i8 zeroext 21, i8 signext 0) #11, !dbg !10026
  br label %if.end31, !dbg !10027

sw.bb10:                                          ; preds = %if.then7
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10028
  call void @k_fn(%struct.vc_data* %10, i8 zeroext 23, i8 signext 0) #11, !dbg !10029
  br label %if.end31, !dbg !10030

sw.bb11:                                          ; preds = %if.then7
  %11 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10031
  call void @k_cur(%struct.vc_data* %11, i8 zeroext 0, i8 signext 0) #11, !dbg !10032
  br label %if.end31, !dbg !10033

sw.bb12:                                          ; preds = %if.then7
  %12 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10034
  call void @k_fn(%struct.vc_data* %12, i8 zeroext 25, i8 signext 0) #11, !dbg !10035
  br label %if.end31, !dbg !10036

sw.bb13:                                          ; preds = %if.then7
  %13 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10037
  call void @k_cur(%struct.vc_data* %13, i8 zeroext 1, i8 signext 0) #11, !dbg !10038
  br label %if.end31, !dbg !10039

sw.bb14:                                          ; preds = %if.then7
  %14 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10040
  call void @k_cur(%struct.vc_data* %14, i8 zeroext 2, i8 signext 0) #11, !dbg !10041
  br label %if.end31, !dbg !10042

sw.bb15:                                          ; preds = %if.then7
  %15 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10043
  call void @k_fn(%struct.vc_data* %15, i8 zeroext 20, i8 signext 0) #11, !dbg !10044
  br label %if.end31, !dbg !10045

sw.bb16:                                          ; preds = %if.then7
  %16 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10046
  call void @k_cur(%struct.vc_data* %16, i8 zeroext 3, i8 signext 0) #11, !dbg !10047
  br label %if.end31, !dbg !10048

sw.bb17:                                          ; preds = %if.then7
  %17 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10049
  call void @k_fn(%struct.vc_data* %17, i8 zeroext 24, i8 signext 0) #11, !dbg !10050
  br label %if.end31, !dbg !10051

sw.bb18:                                          ; preds = %if.then7
  %18 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10052
  %19 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10053
  %call19 = call i32 @vc_kbd_mode(%struct.kbd_struct* %19, i32 0) #11, !dbg !10054
  %conv20 = trunc i32 %call19 to i8, !dbg !10054
  call void @applkey(%struct.vc_data* %18, i32 71, i8 signext %conv20) #11, !dbg !10055
  br label %if.end31, !dbg !10056

sw.epilog:                                        ; preds = %if.then7
  br label %if.end21, !dbg !10057

if.end21:                                         ; preds = %sw.epilog, %if.end4
  %20 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10058
  %21 = load i8, i8* %value.addr, align 1, !dbg !10059
  %idxprom22 = zext i8 %21 to i64, !dbg !10060
  %arrayidx23 = getelementptr [22 x i8], [22 x i8]* @k_pad.pad_chars, i64 0, i64 %idxprom22, !dbg !10060
  %22 = load i8, i8* %arrayidx23, align 1, !dbg !10060
  %conv24 = sext i8 %22 to i32, !dbg !10060
  call void @put_queue(%struct.vc_data* %20, i32 %conv24) #11, !dbg !10061
  %23 = load i8, i8* %value.addr, align 1, !dbg !10062
  %conv25 = zext i8 %23 to i32, !dbg !10062
  %cmp = icmp eq i32 %conv25, 14, !dbg !10064
  br i1 %cmp, label %land.lhs.true27, label %if.end31, !dbg !10065

land.lhs.true27:                                  ; preds = %if.end21
  %24 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10066
  %call28 = call i32 @vc_kbd_mode(%struct.kbd_struct* %24, i32 3) #11, !dbg !10067
  %tobool29 = icmp ne i32 %call28, 0, !dbg !10067
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !10068

if.then30:                                        ; preds = %land.lhs.true27
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10069
  call void @put_queue(%struct.vc_data* %25, i32 10) #11, !dbg !10070
  br label %if.end31, !dbg !10070

if.end31:                                         ; preds = %if.then, %if.then3, %sw.bb, %sw.bb9, %sw.bb10, %sw.bb11, %sw.bb12, %sw.bb13, %sw.bb14, %sw.bb15, %sw.bb16, %sw.bb17, %sw.bb18, %if.then30, %land.lhs.true27, %if.end21
  ret void, !dbg !10071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_dead(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !4658 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10072, metadata !DIExpression()), !dbg !10073
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10076, metadata !DIExpression()), !dbg !10077
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10078
  %1 = load i8, i8* %value.addr, align 1, !dbg !10079
  %idxprom = zext i8 %1 to i64, !dbg !10080
  %arrayidx = getelementptr [27 x i8], [27 x i8]* @k_dead.ret_diacr, i64 0, i64 %idxprom, !dbg !10080
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10080
  %conv = zext i8 %2 to i32, !dbg !10080
  %3 = load i8, i8* %up_flag.addr, align 1, !dbg !10081
  call void @k_deadunicode(%struct.vc_data* %0, i32 %conv, i8 signext %3) #11, !dbg !10082
  ret void, !dbg !10083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_cons(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !10084 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10085, metadata !DIExpression()), !dbg !10086
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10087, metadata !DIExpression()), !dbg !10088
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10089, metadata !DIExpression()), !dbg !10090
  %0 = load i8, i8* %up_flag.addr, align 1, !dbg !10091
  %tobool = icmp ne i8 %0, 0, !dbg !10091
  br i1 %tobool, label %if.then, label %if.end, !dbg !10093

if.then:                                          ; preds = %entry
  br label %return, !dbg !10094

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %value.addr, align 1, !dbg !10095
  %conv = zext i8 %1 to i32, !dbg !10095
  %call = call i32 @set_console(i32 %conv) #11, !dbg !10096
  br label %return, !dbg !10097

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_cur(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !4664 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10098, metadata !DIExpression()), !dbg !10099
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10100, metadata !DIExpression()), !dbg !10101
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10102, metadata !DIExpression()), !dbg !10103
  %0 = load i8, i8* %up_flag.addr, align 1, !dbg !10104
  %tobool = icmp ne i8 %0, 0, !dbg !10104
  br i1 %tobool, label %if.then, label %if.end, !dbg !10106

if.then:                                          ; preds = %entry
  br label %return, !dbg !10107

if.end:                                           ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10108
  %2 = load i8, i8* %value.addr, align 1, !dbg !10109
  %idxprom = zext i8 %2 to i64, !dbg !10110
  %arrayidx = getelementptr [5 x i8], [5 x i8]* @k_cur.cur_chars, i64 0, i64 %idxprom, !dbg !10110
  %3 = load i8, i8* %arrayidx, align 1, !dbg !10110
  %conv = sext i8 %3 to i32, !dbg !10110
  %4 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10111
  %call = call i32 @vc_kbd_mode(%struct.kbd_struct* %4, i32 1) #11, !dbg !10112
  %conv1 = trunc i32 %call to i8, !dbg !10112
  call void @applkey(%struct.vc_data* %1, i32 %conv, i8 signext %conv1) #11, !dbg !10113
  br label %return, !dbg !10114

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_shift(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !10115 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  %old_state = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10116, metadata !DIExpression()), !dbg !10117
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10118, metadata !DIExpression()), !dbg !10119
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10120, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.declare(metadata i32* %old_state, metadata !10122, metadata !DIExpression()), !dbg !10123
  %0 = load i32, i32* @shift_state, align 4, !dbg !10124
  store i32 %0, i32* %old_state, align 4, !dbg !10123
  %1 = load i8, i8* @rep, align 1, !dbg !10125
  %tobool = icmp ne i8 %1, 0, !dbg !10125
  br i1 %tobool, label %if.then, label %if.end, !dbg !10127

if.then:                                          ; preds = %entry
  br label %if.end41, !dbg !10128

if.end:                                           ; preds = %entry
  %2 = load i8, i8* %value.addr, align 1, !dbg !10129
  %conv = zext i8 %2 to i32, !dbg !10129
  %cmp = icmp eq i32 %conv, 8, !dbg !10131
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !10132

if.then2:                                         ; preds = %if.end
  store i8 0, i8* %value.addr, align 1, !dbg !10133
  %3 = load i8, i8* %up_flag.addr, align 1, !dbg !10135
  %tobool3 = icmp ne i8 %3, 0, !dbg !10135
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !10137

if.then4:                                         ; preds = %if.then2
  %4 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10138
  call void @clr_vc_kbd_led(%struct.kbd_struct* %4, i32 2) #11, !dbg !10139
  br label %if.end5, !dbg !10139

if.end5:                                          ; preds = %if.then4, %if.then2
  br label %if.end6, !dbg !10140

if.end6:                                          ; preds = %if.end5, %if.end
  %5 = load i8, i8* %up_flag.addr, align 1, !dbg !10141
  %tobool7 = icmp ne i8 %5, 0, !dbg !10141
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !10143

if.then8:                                         ; preds = %if.end6
  %6 = load i8, i8* %value.addr, align 1, !dbg !10144
  %idxprom = zext i8 %6 to i64, !dbg !10147
  %arrayidx = getelementptr [9 x i8], [9 x i8]* @shift_down, i64 0, i64 %idxprom, !dbg !10147
  %7 = load i8, i8* %arrayidx, align 1, !dbg !10147
  %tobool9 = icmp ne i8 %7, 0, !dbg !10147
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !10148

if.then10:                                        ; preds = %if.then8
  %8 = load i8, i8* %value.addr, align 1, !dbg !10149
  %idxprom11 = zext i8 %8 to i64, !dbg !10150
  %arrayidx12 = getelementptr [9 x i8], [9 x i8]* @shift_down, i64 0, i64 %idxprom11, !dbg !10150
  %9 = load i8, i8* %arrayidx12, align 1, !dbg !10151
  %dec = add i8 %9, -1, !dbg !10151
  store i8 %dec, i8* %arrayidx12, align 1, !dbg !10151
  br label %if.end13, !dbg !10150

if.end13:                                         ; preds = %if.then10, %if.then8
  br label %if.end16, !dbg !10152

if.else:                                          ; preds = %if.end6
  %10 = load i8, i8* %value.addr, align 1, !dbg !10153
  %idxprom14 = zext i8 %10 to i64, !dbg !10154
  %arrayidx15 = getelementptr [9 x i8], [9 x i8]* @shift_down, i64 0, i64 %idxprom14, !dbg !10154
  %11 = load i8, i8* %arrayidx15, align 1, !dbg !10155
  %inc = add i8 %11, 1, !dbg !10155
  store i8 %inc, i8* %arrayidx15, align 1, !dbg !10155
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.end13
  %12 = load i8, i8* %value.addr, align 1, !dbg !10156
  %idxprom17 = zext i8 %12 to i64, !dbg !10158
  %arrayidx18 = getelementptr [9 x i8], [9 x i8]* @shift_down, i64 0, i64 %idxprom17, !dbg !10158
  %13 = load i8, i8* %arrayidx18, align 1, !dbg !10158
  %tobool19 = icmp ne i8 %13, 0, !dbg !10158
  br i1 %tobool19, label %if.then20, label %if.else22, !dbg !10159

if.then20:                                        ; preds = %if.end16
  %14 = load i8, i8* %value.addr, align 1, !dbg !10160
  %conv21 = zext i8 %14 to i32, !dbg !10160
  %shl = shl i32 1, %conv21, !dbg !10161
  %15 = load i32, i32* @shift_state, align 4, !dbg !10162
  %or = or i32 %15, %shl, !dbg !10162
  store i32 %or, i32* @shift_state, align 4, !dbg !10162
  br label %if.end25, !dbg !10163

if.else22:                                        ; preds = %if.end16
  %16 = load i8, i8* %value.addr, align 1, !dbg !10164
  %conv23 = zext i8 %16 to i32, !dbg !10164
  %shl24 = shl i32 1, %conv23, !dbg !10165
  %neg = xor i32 %shl24, -1, !dbg !10166
  %17 = load i32, i32* @shift_state, align 4, !dbg !10167
  %and = and i32 %17, %neg, !dbg !10167
  store i32 %and, i32* @shift_state, align 4, !dbg !10167
  br label %if.end25

if.end25:                                         ; preds = %if.else22, %if.then20
  %18 = load i8, i8* %up_flag.addr, align 1, !dbg !10168
  %conv26 = sext i8 %18 to i32, !dbg !10168
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !10168
  br i1 %tobool27, label %land.lhs.true, label %if.end41, !dbg !10170

land.lhs.true:                                    ; preds = %if.end25
  %19 = load i32, i32* @shift_state, align 4, !dbg !10171
  %20 = load i32, i32* %old_state, align 4, !dbg !10172
  %cmp28 = icmp ne i32 %19, %20, !dbg !10173
  br i1 %cmp28, label %land.lhs.true30, label %if.end41, !dbg !10174

land.lhs.true30:                                  ; preds = %land.lhs.true
  %21 = load i8, i8* @npadch_active, align 1, !dbg !10175
  %tobool31 = trunc i8 %21 to i1, !dbg !10175
  br i1 %tobool31, label %if.then33, label %if.end41, !dbg !10176

if.then33:                                        ; preds = %land.lhs.true30
  %22 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10177
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %22, i32 0, i32 3, !dbg !10180
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !10180
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !10180
  %bf.clear = and i8 %bf.lshr, 7, !dbg !10180
  %conv34 = zext i8 %bf.clear to i32, !dbg !10177
  %cmp35 = icmp eq i32 %conv34, 3, !dbg !10181
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !10182

if.then37:                                        ; preds = %if.then33
  %23 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10183
  %24 = load i32, i32* @npadch_value, align 4, !dbg !10184
  call void @to_utf8(%struct.vc_data* %23, i32 %24) #11, !dbg !10185
  br label %if.end40, !dbg !10185

if.else38:                                        ; preds = %if.then33
  %25 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10186
  %26 = load i32, i32* @npadch_value, align 4, !dbg !10187
  %and39 = and i32 %26, 255, !dbg !10188
  call void @put_queue(%struct.vc_data* %25, i32 %and39) #11, !dbg !10189
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %if.then37
  store i8 0, i8* @npadch_active, align 1, !dbg !10190
  br label %if.end41, !dbg !10191

if.end41:                                         ; preds = %if.then, %if.end40, %land.lhs.true30, %land.lhs.true, %if.end25
  ret void, !dbg !10192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_meta(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !10193 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10196, metadata !DIExpression()), !dbg !10197
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10198, metadata !DIExpression()), !dbg !10199
  %0 = load i8, i8* %up_flag.addr, align 1, !dbg !10200
  %tobool = icmp ne i8 %0, 0, !dbg !10200
  br i1 %tobool, label %if.then, label %if.end, !dbg !10202

if.then:                                          ; preds = %entry
  br label %if.end4, !dbg !10203

if.end:                                           ; preds = %entry
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10204
  %call = call i32 @vc_kbd_mode(%struct.kbd_struct* %1, i32 4) #11, !dbg !10206
  %tobool1 = icmp ne i32 %call, 0, !dbg !10206
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !10207

if.then2:                                         ; preds = %if.end
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10208
  call void @put_queue(%struct.vc_data* %2, i32 27) #11, !dbg !10210
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10211
  %4 = load i8, i8* %value.addr, align 1, !dbg !10212
  %conv = zext i8 %4 to i32, !dbg !10212
  call void @put_queue(%struct.vc_data* %3, i32 %conv) #11, !dbg !10213
  br label %if.end4, !dbg !10214

if.else:                                          ; preds = %if.end
  %5 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10215
  %6 = load i8, i8* %value.addr, align 1, !dbg !10216
  %conv3 = zext i8 %6 to i32, !dbg !10216
  %or = or i32 %conv3, 128, !dbg !10217
  call void @put_queue(%struct.vc_data* %5, i32 %or) #11, !dbg !10218
  br label %if.end4

if.end4:                                          ; preds = %if.then, %if.else, %if.then2
  ret void, !dbg !10219
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_ascii(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !10220 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  %base = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10221, metadata !DIExpression()), !dbg !10222
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10223, metadata !DIExpression()), !dbg !10224
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10225, metadata !DIExpression()), !dbg !10226
  call void @llvm.dbg.declare(metadata i32* %base, metadata !10227, metadata !DIExpression()), !dbg !10228
  %0 = load i8, i8* %up_flag.addr, align 1, !dbg !10229
  %tobool = icmp ne i8 %0, 0, !dbg !10229
  br i1 %tobool, label %if.then, label %if.end, !dbg !10231

if.then:                                          ; preds = %entry
  br label %return, !dbg !10232

if.end:                                           ; preds = %entry
  %1 = load i8, i8* %value.addr, align 1, !dbg !10233
  %conv = zext i8 %1 to i32, !dbg !10233
  %cmp = icmp slt i32 %conv, 10, !dbg !10235
  br i1 %cmp, label %if.then2, label %if.else, !dbg !10236

if.then2:                                         ; preds = %if.end
  store i32 10, i32* %base, align 4, !dbg !10237
  br label %if.end5, !dbg !10239

if.else:                                          ; preds = %if.end
  %2 = load i8, i8* %value.addr, align 1, !dbg !10240
  %conv3 = zext i8 %2 to i32, !dbg !10240
  %sub = sub i32 %conv3, 10, !dbg !10240
  %conv4 = trunc i32 %sub to i8, !dbg !10240
  store i8 %conv4, i8* %value.addr, align 1, !dbg !10240
  store i32 16, i32* %base, align 4, !dbg !10242
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %3 = load i8, i8* @npadch_active, align 1, !dbg !10243
  %tobool6 = trunc i8 %3 to i1, !dbg !10243
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !10245

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* @npadch_value, align 4, !dbg !10246
  store i8 1, i8* @npadch_active, align 1, !dbg !10248
  br label %if.end8, !dbg !10249

if.end8:                                          ; preds = %if.then7, %if.end5
  %4 = load i32, i32* @npadch_value, align 4, !dbg !10250
  %5 = load i32, i32* %base, align 4, !dbg !10251
  %mul = mul i32 %4, %5, !dbg !10252
  %6 = load i8, i8* %value.addr, align 1, !dbg !10253
  %conv9 = zext i8 %6 to i32, !dbg !10253
  %add = add i32 %mul, %conv9, !dbg !10254
  store i32 %add, i32* @npadch_value, align 4, !dbg !10255
  br label %return, !dbg !10256

return:                                           ; preds = %if.end8, %if.then
  ret void, !dbg !10256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_lock(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !10257 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10258, metadata !DIExpression()), !dbg !10259
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10260, metadata !DIExpression()), !dbg !10261
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10262, metadata !DIExpression()), !dbg !10263
  %0 = load i8, i8* %up_flag.addr, align 1, !dbg !10264
  %conv = sext i8 %0 to i32, !dbg !10264
  %tobool = icmp ne i32 %conv, 0, !dbg !10264
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10266

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* @rep, align 1, !dbg !10267
  %conv1 = sext i8 %1 to i32, !dbg !10267
  %tobool2 = icmp ne i32 %conv1, 0, !dbg !10267
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10268

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !10269

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10270
  %3 = load i8, i8* %value.addr, align 1, !dbg !10271
  %conv3 = zext i8 %3 to i32, !dbg !10271
  call void @chg_vc_kbd_lock(%struct.kbd_struct* %2, i32 %conv3) #11, !dbg !10272
  br label %return, !dbg !10273

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10273
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_lowercase(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !10274 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10275, metadata !DIExpression()), !dbg !10276
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10277, metadata !DIExpression()), !dbg !10278
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10279, metadata !DIExpression()), !dbg !10280
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0)) #14, !dbg !10281
  ret void, !dbg !10282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_slock(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !10283 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10284, metadata !DIExpression()), !dbg !10285
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10286, metadata !DIExpression()), !dbg !10287
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10288, metadata !DIExpression()), !dbg !10289
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10290
  %1 = load i8, i8* %value.addr, align 1, !dbg !10291
  %2 = load i8, i8* %up_flag.addr, align 1, !dbg !10292
  call void @k_shift(%struct.vc_data* %0, i8 zeroext %1, i8 signext %2) #11, !dbg !10293
  %3 = load i8, i8* %up_flag.addr, align 1, !dbg !10294
  %conv = sext i8 %3 to i32, !dbg !10294
  %tobool = icmp ne i32 %conv, 0, !dbg !10294
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10296

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* @rep, align 1, !dbg !10297
  %conv1 = sext i8 %4 to i32, !dbg !10297
  %tobool2 = icmp ne i32 %conv1, 0, !dbg !10297
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10298

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end10, !dbg !10299

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10300
  %6 = load i8, i8* %value.addr, align 1, !dbg !10301
  %conv3 = zext i8 %6 to i32, !dbg !10301
  call void @chg_vc_kbd_slock(%struct.kbd_struct* %5, i32 %conv3) #11, !dbg !10302
  %7 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10303
  %lockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %7, i32 0, i32 0, !dbg !10305
  %8 = load i8, i8* %lockstate, align 1, !dbg !10305
  %conv4 = zext i8 %8 to i32, !dbg !10303
  %9 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10306
  %slockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %9, i32 0, i32 1, !dbg !10307
  %10 = load i8, i8* %slockstate, align 1, !dbg !10307
  %conv5 = zext i8 %10 to i32, !dbg !10306
  %xor = xor i32 %conv4, %conv5, !dbg !10308
  %idxprom = sext i32 %xor to i64, !dbg !10309
  %arrayidx = getelementptr [256 x i16*], [256 x i16*]* @key_maps, i64 0, i64 %idxprom, !dbg !10309
  %11 = load i16*, i16** %arrayidx, align 8, !dbg !10309
  %tobool6 = icmp ne i16* %11, null, !dbg !10309
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !10310

if.then7:                                         ; preds = %if.end
  %12 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10311
  %slockstate8 = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %12, i32 0, i32 1, !dbg !10313
  store i8 0, i8* %slockstate8, align 1, !dbg !10314
  %13 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10315
  %14 = load i8, i8* %value.addr, align 1, !dbg !10316
  %conv9 = zext i8 %14 to i32, !dbg !10316
  call void @chg_vc_kbd_slock(%struct.kbd_struct* %13, i32 %conv9) #11, !dbg !10317
  br label %if.end10, !dbg !10318

if.end10:                                         ; preds = %if.then, %if.then7, %if.end
  ret void, !dbg !10319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_dead2(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !10320 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10321, metadata !DIExpression()), !dbg !10322
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10323, metadata !DIExpression()), !dbg !10324
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10325, metadata !DIExpression()), !dbg !10326
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10327
  %1 = load i8, i8* %value.addr, align 1, !dbg !10328
  %conv = zext i8 %1 to i32, !dbg !10328
  %2 = load i8, i8* %up_flag.addr, align 1, !dbg !10329
  call void @k_deadunicode(%struct.vc_data* %0, i32 %conv, i8 signext %2) #11, !dbg !10330
  ret void, !dbg !10331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_brl(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !4672 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !10332, metadata !DIExpression()), !dbg !10337
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10343, metadata !DIExpression()), !dbg !10344
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10345, metadata !DIExpression()), !dbg !10346
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10347, metadata !DIExpression()), !dbg !10348
  %0 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10349
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %0, i32 0, i32 3, !dbg !10351
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !10351
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !10351
  %bf.clear = and i8 %bf.lshr, 7, !dbg !10351
  %conv = zext i8 %bf.clear to i32, !dbg !10349
  %cmp = icmp ne i32 %conv, 3, !dbg !10352
  br i1 %cmp, label %if.then, label %if.end3, !dbg !10353

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %up_flag.addr, align 1, !dbg !10354
  %tobool = icmp ne i8 %1, 0, !dbg !10354
  br i1 %tobool, label %if.end, label %if.then2, !dbg !10357

if.then2:                                         ; preds = %if.then
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0)) #14, !dbg !10358
  br label %if.end, !dbg !10358

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end44, !dbg !10359

if.end3:                                          ; preds = %entry
  %2 = load i8, i8* %value.addr, align 1, !dbg !10360
  %tobool4 = icmp ne i8 %2, 0, !dbg !10360
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !10362

if.then5:                                         ; preds = %if.end3
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10363
  %4 = load i8, i8* %up_flag.addr, align 1, !dbg !10365
  call void @k_unicode(%struct.vc_data* %3, i32 10240, i8 signext %4) #11, !dbg !10366
  br label %if.end44, !dbg !10367

if.end6:                                          ; preds = %if.end3
  %5 = load i8, i8* %value.addr, align 1, !dbg !10368
  %conv7 = zext i8 %5 to i32, !dbg !10368
  %cmp8 = icmp sgt i32 %conv7, 8, !dbg !10370
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !10371

if.then10:                                        ; preds = %if.end6
  br label %if.end44, !dbg !10372

if.end11:                                         ; preds = %if.end6
  %6 = load i8, i8* %up_flag.addr, align 1, !dbg !10373
  %tobool12 = icmp ne i8 %6, 0, !dbg !10373
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !10374

if.then13:                                        ; preds = %if.end11
  %7 = load i8, i8* %value.addr, align 1, !dbg !10375
  %conv14 = zext i8 %7 to i32, !dbg !10375
  %sub = sub i32 %conv14, 1, !dbg !10377
  %shl = shl i32 1, %sub, !dbg !10378
  %8 = load i32, i32* @k_brl.pressed, align 4, !dbg !10379
  %or = or i32 %8, %shl, !dbg !10379
  store i32 %or, i32* @k_brl.pressed, align 4, !dbg !10379
  %9 = load i32, i32* @brl_timeout, align 4, !dbg !10380
  %tobool15 = icmp ne i32 %9, 0, !dbg !10380
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !10382

if.then16:                                        ; preds = %if.then13
  %10 = load i32, i32* @k_brl.pressed, align 4, !dbg !10383
  store i32 %10, i32* @k_brl.committing, align 4, !dbg !10384
  br label %if.end17, !dbg !10385

if.end17:                                         ; preds = %if.then16, %if.then13
  br label %if.end44, !dbg !10386

if.else:                                          ; preds = %if.end11
  %11 = load i32, i32* @brl_timeout, align 4, !dbg !10387
  %tobool18 = icmp ne i32 %11, 0, !dbg !10387
  br i1 %tobool18, label %if.then19, label %if.else34, !dbg !10388

if.then19:                                        ; preds = %if.else
  %12 = load i32, i32* @k_brl.committing, align 4, !dbg !10389
  %tobool20 = icmp ne i32 %12, 0, !dbg !10389
  br i1 %tobool20, label %lor.lhs.false, label %if.then25, !dbg !10390

lor.lhs.false:                                    ; preds = %if.then19
  %13 = load i64, i64* @k_brl.releasestart, align 8, !dbg !10391
  %14 = load i32, i32* @brl_timeout, align 4, !dbg !10391
  store i32 %14, i32* %m.addr.i, align 4
  %15 = load i32, i32* %m.addr.i, align 4, !dbg !10392
  %16 = call i1 @llvm.is.constant.i32(i32 %15) #6, !dbg !10394
  br i1 %16, label %if.then.i, label %if.else.i, !dbg !10395

if.then.i:                                        ; preds = %lor.lhs.false
  %17 = load i32, i32* %m.addr.i, align 4, !dbg !10396
  %cmp.i = icmp slt i32 %17, 0, !dbg !10399
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10400

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !10401
  br label %msecs_to_jiffies.exit, !dbg !10401

if.end.i:                                         ; preds = %if.then.i
  %18 = load i32, i32* %m.addr.i, align 4, !dbg !10402
  %call.i = call i64 @_msecs_to_jiffies(i32 %18) #12, !dbg !10403
  store i64 %call.i, i64* %retval.i, align 8, !dbg !10404
  br label %msecs_to_jiffies.exit, !dbg !10404

if.else.i:                                        ; preds = %lor.lhs.false
  %19 = load i32, i32* %m.addr.i, align 4, !dbg !10405
  %call2.i = call i64 @__msecs_to_jiffies(i32 %19) #12, !dbg !10407
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !10408
  br label %msecs_to_jiffies.exit, !dbg !10408

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %20 = load i64, i64* %retval.i, align 8, !dbg !10409
  %add = add i64 %13, %20, !dbg !10391
  %21 = load volatile i64, i64* @jiffies, align 8, !dbg !10391
  %sub22 = sub i64 %add, %21, !dbg !10391
  %cmp23 = icmp slt i64 %sub22, 0, !dbg !10391
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !10410

if.then25:                                        ; preds = %msecs_to_jiffies.exit, %if.then19
  %22 = load i32, i32* @k_brl.pressed, align 4, !dbg !10411
  store i32 %22, i32* @k_brl.committing, align 4, !dbg !10413
  %23 = load volatile i64, i64* @jiffies, align 8, !dbg !10414
  store i64 %23, i64* @k_brl.releasestart, align 8, !dbg !10415
  br label %if.end26, !dbg !10416

if.end26:                                         ; preds = %if.then25, %msecs_to_jiffies.exit
  %24 = load i8, i8* %value.addr, align 1, !dbg !10417
  %conv27 = zext i8 %24 to i32, !dbg !10417
  %sub28 = sub i32 %conv27, 1, !dbg !10418
  %shl29 = shl i32 1, %sub28, !dbg !10419
  %neg = xor i32 %shl29, -1, !dbg !10420
  %25 = load i32, i32* @k_brl.pressed, align 4, !dbg !10421
  %and = and i32 %25, %neg, !dbg !10421
  store i32 %and, i32* @k_brl.pressed, align 4, !dbg !10421
  %26 = load i32, i32* @k_brl.pressed, align 4, !dbg !10422
  %tobool30 = icmp ne i32 %26, 0, !dbg !10422
  br i1 %tobool30, label %if.end33, label %land.lhs.true, !dbg !10424

land.lhs.true:                                    ; preds = %if.end26
  %27 = load i32, i32* @k_brl.committing, align 4, !dbg !10425
  %tobool31 = icmp ne i32 %27, 0, !dbg !10425
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !10426

if.then32:                                        ; preds = %land.lhs.true
  %28 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10427
  %29 = load i32, i32* @k_brl.committing, align 4, !dbg !10429
  call void @k_brlcommit(%struct.vc_data* %28, i32 %29, i8 signext 0) #11, !dbg !10430
  store i32 0, i32* @k_brl.committing, align 4, !dbg !10431
  br label %if.end33, !dbg !10432

if.end33:                                         ; preds = %if.then32, %land.lhs.true, %if.end26
  br label %if.end43, !dbg !10433

if.else34:                                        ; preds = %if.else
  %30 = load i32, i32* @k_brl.committing, align 4, !dbg !10434
  %tobool35 = icmp ne i32 %30, 0, !dbg !10434
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !10437

if.then36:                                        ; preds = %if.else34
  %31 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10438
  %32 = load i32, i32* @k_brl.committing, align 4, !dbg !10440
  call void @k_brlcommit(%struct.vc_data* %31, i32 %32, i8 signext 0) #11, !dbg !10441
  store i32 0, i32* @k_brl.committing, align 4, !dbg !10442
  br label %if.end37, !dbg !10443

if.end37:                                         ; preds = %if.then36, %if.else34
  %33 = load i8, i8* %value.addr, align 1, !dbg !10444
  %conv38 = zext i8 %33 to i32, !dbg !10444
  %sub39 = sub i32 %conv38, 1, !dbg !10445
  %shl40 = shl i32 1, %sub39, !dbg !10446
  %neg41 = xor i32 %shl40, -1, !dbg !10447
  %34 = load i32, i32* @k_brl.pressed, align 4, !dbg !10448
  %and42 = and i32 %34, %neg41, !dbg !10448
  store i32 %and42, i32* @k_brl.pressed, align 4, !dbg !10448
  br label %if.end43

if.end43:                                         ; preds = %if.end37, %if.end33
  br label %if.end44

if.end44:                                         ; preds = %if.end, %if.then5, %if.then10, %if.end43, %if.end17
  ret void, !dbg !10449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_ignore(%struct.vc_data* %vc, i8 zeroext %value, i8 signext %up_flag) #0 !dbg !10450 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i8, align 1
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10451, metadata !DIExpression()), !dbg !10452
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10453, metadata !DIExpression()), !dbg !10454
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10455, metadata !DIExpression()), !dbg !10456
  ret void, !dbg !10457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @puts_queue(%struct.vc_data* %vc, i8* %cp) #0 !dbg !10458 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %cp.addr = alloca i8*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10461, metadata !DIExpression()), !dbg !10462
  store i8* %cp, i8** %cp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cp.addr, metadata !10463, metadata !DIExpression()), !dbg !10464
  br label %while.cond, !dbg !10465

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %cp.addr, align 8, !dbg !10466
  %1 = load i8, i8* %0, align 1, !dbg !10467
  %tobool = icmp ne i8 %1, 0, !dbg !10465
  br i1 %tobool, label %while.body, label %while.end, !dbg !10465

while.body:                                       ; preds = %while.cond
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10468
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %2, i32 0, i32 0, !dbg !10470
  %3 = load i8*, i8** %cp.addr, align 8, !dbg !10471
  %4 = load i8, i8* %3, align 1, !dbg !10472
  %call = call i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext %4, i8 signext 0) #11, !dbg !10473
  %5 = load i8*, i8** %cp.addr, align 8, !dbg !10474
  %incdec.ptr = getelementptr i8, i8* %5, i32 1, !dbg !10474
  store i8* %incdec.ptr, i8** %cp.addr, align 8, !dbg !10474
  br label %while.cond, !dbg !10465, !llvm.loop !10475

while.end:                                        ; preds = %while.cond
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10477
  %port1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %6, i32 0, i32 0, !dbg !10478
  call void @tty_schedule_flip(%struct.tty_port* %port1) #11, !dbg !10479
  ret void, !dbg !10480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_null(%struct.vc_data* %vc) #0 !dbg !10481 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10482, metadata !DIExpression()), !dbg !10483
  call void @do_compute_shiftstate() #11, !dbg !10484
  ret void, !dbg !10485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_enter(%struct.vc_data* %vc) #0 !dbg !10486 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %c = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10487, metadata !DIExpression()), !dbg !10488
  %0 = load i32, i32* @diacr, align 4, !dbg !10489
  %tobool = icmp ne i32 %0, 0, !dbg !10489
  br i1 %tobool, label %if.then, label %if.end7, !dbg !10491

if.then:                                          ; preds = %entry
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10492
  %kbdmode = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %1, i32 0, i32 3, !dbg !10495
  %bf.load = load i8, i8* %kbdmode, align 1, !dbg !10495
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !10495
  %bf.clear = and i8 %bf.lshr, 7, !dbg !10495
  %conv = zext i8 %bf.clear to i32, !dbg !10492
  %cmp = icmp eq i32 %conv, 3, !dbg !10496
  br i1 %cmp, label %if.then2, label %if.else, !dbg !10497

if.then2:                                         ; preds = %if.then
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10498
  %3 = load i32, i32* @diacr, align 4, !dbg !10499
  call void @to_utf8(%struct.vc_data* %2, i32 %3) #11, !dbg !10500
  br label %if.end6, !dbg !10500

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %c, metadata !10501, metadata !DIExpression()), !dbg !10503
  %4 = load i32, i32* @diacr, align 4, !dbg !10504
  %call = call i32 @conv_uni_to_8bit(i32 %4) #11, !dbg !10505
  store i32 %call, i32* %c, align 4, !dbg !10503
  %5 = load i32, i32* %c, align 4, !dbg !10506
  %cmp3 = icmp ne i32 %5, -1, !dbg !10508
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !10509

if.then5:                                         ; preds = %if.else
  %6 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10510
  %7 = load i32, i32* %c, align 4, !dbg !10511
  call void @put_queue(%struct.vc_data* %6, i32 %7) #11, !dbg !10512
  br label %if.end, !dbg !10512

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then2
  store i32 0, i32* @diacr, align 4, !dbg !10513
  br label %if.end7, !dbg !10514

if.end7:                                          ; preds = %if.end6, %entry
  %8 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10515
  call void @put_queue(%struct.vc_data* %8, i32 13) #11, !dbg !10516
  %9 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10517
  %call8 = call i32 @vc_kbd_mode(%struct.kbd_struct* %9, i32 3) #11, !dbg !10519
  %tobool9 = icmp ne i32 %call8, 0, !dbg !10519
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !10520

if.then10:                                        ; preds = %if.end7
  %10 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10521
  call void @put_queue(%struct.vc_data* %10, i32 10) #11, !dbg !10522
  br label %if.end11, !dbg !10522

if.end11:                                         ; preds = %if.then10, %if.end7
  ret void, !dbg !10523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_show_ptregs(%struct.vc_data* %vc) #0 !dbg !10524 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %regs = alloca %struct.pt_regs*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10525, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %regs, metadata !10527, metadata !DIExpression()), !dbg !10528
  %call = call %struct.pt_regs* @get_irq_regs() #11, !dbg !10529
  store %struct.pt_regs* %call, %struct.pt_regs** %regs, align 8, !dbg !10528
  %0 = load %struct.pt_regs*, %struct.pt_regs** %regs, align 8, !dbg !10530
  %tobool = icmp ne %struct.pt_regs* %0, null, !dbg !10530
  br i1 %tobool, label %if.then, label %if.end, !dbg !10532

if.then:                                          ; preds = %entry
  %1 = load %struct.pt_regs*, %struct.pt_regs** %regs, align 8, !dbg !10533
  call void @show_regs(%struct.pt_regs* %1) #11, !dbg !10534
  br label %if.end, !dbg !10534

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_show_mem(%struct.vc_data* %vc) #0 !dbg !10536 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10537, metadata !DIExpression()), !dbg !10538
  call void @show_mem(i32 0, %struct.nodemask_t* null) #11, !dbg !10539
  ret void, !dbg !10540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_show_state(%struct.vc_data* %vc) #0 !dbg !10541 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10542, metadata !DIExpression()), !dbg !10543
  call void @show_state() #11, !dbg !10544
  ret void, !dbg !10545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_send_intr(%struct.vc_data* %vc) #0 !dbg !10546 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10547, metadata !DIExpression()), !dbg !10548
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10549
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 0, !dbg !10550
  %call = call i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext 0, i8 signext 1) #11, !dbg !10551
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10552
  %port1 = getelementptr inbounds %struct.vc_data, %struct.vc_data* %1, i32 0, i32 0, !dbg !10553
  call void @tty_schedule_flip(%struct.tty_port* %port1) #11, !dbg !10554
  ret void, !dbg !10555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_lastcons(%struct.vc_data* %vc) #0 !dbg !10556 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10557, metadata !DIExpression()), !dbg !10558
  %0 = load i32, i32* @last_console, align 4, !dbg !10559
  %call = call i32 @set_console(i32 %0) #11, !dbg !10560
  ret void, !dbg !10561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_caps_toggle(%struct.vc_data* %vc) #0 !dbg !10562 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10563, metadata !DIExpression()), !dbg !10564
  %0 = load i8, i8* @rep, align 1, !dbg !10565
  %tobool = icmp ne i8 %0, 0, !dbg !10565
  br i1 %tobool, label %if.then, label %if.end, !dbg !10567

if.then:                                          ; preds = %entry
  br label %return, !dbg !10568

if.end:                                           ; preds = %entry
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10569
  call void @chg_vc_kbd_led(%struct.kbd_struct* %1, i32 2) #11, !dbg !10570
  br label %return, !dbg !10571

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10571
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_num(%struct.vc_data* %vc) #0 !dbg !10572 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10573, metadata !DIExpression()), !dbg !10574
  %0 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10575
  %call = call i32 @vc_kbd_mode(%struct.kbd_struct* %0, i32 0) #11, !dbg !10577
  %tobool = icmp ne i32 %call, 0, !dbg !10577
  br i1 %tobool, label %if.then, label %if.else, !dbg !10578

if.then:                                          ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10579
  call void @applkey(%struct.vc_data* %1, i32 80, i8 signext 1) #11, !dbg !10580
  br label %if.end, !dbg !10580

if.else:                                          ; preds = %entry
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10581
  call void @fn_bare_num(%struct.vc_data* %2) #11, !dbg !10582
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_hold(%struct.vc_data* %vc) #0 !dbg !10584 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10585, metadata !DIExpression()), !dbg !10586
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !10587, metadata !DIExpression()), !dbg !10588
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10589
  %port = getelementptr inbounds %struct.vc_data, %struct.vc_data* %0, i32 0, i32 0, !dbg !10590
  %tty1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !10591
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty1, align 8, !dbg !10591
  store %struct.tty_struct* %1, %struct.tty_struct** %tty, align 8, !dbg !10588
  %2 = load i8, i8* @rep, align 1, !dbg !10592
  %conv = sext i8 %2 to i32, !dbg !10592
  %tobool = icmp ne i32 %conv, 0, !dbg !10592
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10594

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !10595
  %tobool2 = icmp ne %struct.tty_struct* %3, null, !dbg !10595
  br i1 %tobool2, label %if.end, label %if.then, !dbg !10596

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end5, !dbg !10597

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !10598
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 24, !dbg !10600
  %bf.load = load i8, i8* %stopped, align 4, !dbg !10600
  %bf.clear = and i8 %bf.load, 1, !dbg !10600
  %bf.cast = zext i8 %bf.clear to i64, !dbg !10600
  %tobool3 = icmp ne i64 %bf.cast, 0, !dbg !10598
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !10601

if.then4:                                         ; preds = %if.end
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !10602
  call void @start_tty(%struct.tty_struct* %5) #11, !dbg !10603
  br label %if.end5, !dbg !10603

if.else:                                          ; preds = %if.end
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !10604
  call void @stop_tty(%struct.tty_struct* %6) #11, !dbg !10605
  br label %if.end5

if.end5:                                          ; preds = %if.then, %if.else, %if.then4
  ret void, !dbg !10606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_scroll_forw(%struct.vc_data* %vc) #0 !dbg !10607 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10608, metadata !DIExpression()), !dbg !10609
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10610
  call void @scrollfront(%struct.vc_data* %0, i32 0) #11, !dbg !10611
  ret void, !dbg !10612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_scroll_back(%struct.vc_data* %vc) #0 !dbg !10613 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10614, metadata !DIExpression()), !dbg !10615
  %0 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10616
  call void @scrollback(%struct.vc_data* %0) #11, !dbg !10617
  ret void, !dbg !10618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_boot_it(%struct.vc_data* %vc) #0 !dbg !10619 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10620, metadata !DIExpression()), !dbg !10621
  call void @ctrl_alt_del() #11, !dbg !10622
  ret void, !dbg !10623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_caps_on(%struct.vc_data* %vc) #0 !dbg !10624 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10625, metadata !DIExpression()), !dbg !10626
  %0 = load i8, i8* @rep, align 1, !dbg !10627
  %tobool = icmp ne i8 %0, 0, !dbg !10627
  br i1 %tobool, label %if.then, label %if.end, !dbg !10629

if.then:                                          ; preds = %entry
  br label %return, !dbg !10630

if.end:                                           ; preds = %entry
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10631
  call void @set_vc_kbd_led(%struct.kbd_struct* %1, i32 2) #11, !dbg !10632
  br label %return, !dbg !10633

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10633
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_compose(%struct.vc_data* %vc) #0 !dbg !10634 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10635, metadata !DIExpression()), !dbg !10636
  store i8 1, i8* @dead_key_next, align 1, !dbg !10637
  ret void, !dbg !10638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_SAK(%struct.vc_data* %vc) #0 !dbg !10639 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %SAK_work = alloca %struct.work_struct*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.declare(metadata %struct.work_struct** %SAK_work, metadata !10642, metadata !DIExpression()), !dbg !10643
  %0 = load i32, i32* @fg_console, align 4, !dbg !10644
  %idxprom = sext i32 %0 to i64, !dbg !10645
  %arrayidx = getelementptr [63 x %struct.vc], [63 x %struct.vc]* @vc_cons, i64 0, i64 %idxprom, !dbg !10645
  %SAK_work1 = getelementptr inbounds %struct.vc, %struct.vc* %arrayidx, i32 0, i32 1, !dbg !10646
  store %struct.work_struct* %SAK_work1, %struct.work_struct** %SAK_work, align 8, !dbg !10643
  %1 = load %struct.work_struct*, %struct.work_struct** %SAK_work, align 8, !dbg !10647
  %call = call zeroext i1 @schedule_work(%struct.work_struct* %1) #11, !dbg !10648
  ret void, !dbg !10649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_dec_console(%struct.vc_data* %vc) #0 !dbg !10650 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %i = alloca i32, align 4
  %cur = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10651, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10653, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.declare(metadata i32* %cur, metadata !10655, metadata !DIExpression()), !dbg !10656
  %0 = load i32, i32* @fg_console, align 4, !dbg !10657
  store i32 %0, i32* %cur, align 4, !dbg !10656
  %1 = load i32, i32* @want_console, align 4, !dbg !10658
  %cmp = icmp ne i32 %1, -1, !dbg !10660
  br i1 %cmp, label %if.then, label %if.end, !dbg !10661

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @want_console, align 4, !dbg !10662
  store i32 %2, i32* %cur, align 4, !dbg !10663
  br label %if.end, !dbg !10664

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %cur, align 4, !dbg !10665
  %sub = sub i32 %3, 1, !dbg !10667
  store i32 %sub, i32* %i, align 4, !dbg !10668
  br label %for.cond, !dbg !10669

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !10670
  %5 = load i32, i32* %cur, align 4, !dbg !10672
  %cmp1 = icmp ne i32 %4, %5, !dbg !10673
  br i1 %cmp1, label %for.body, label %for.end, !dbg !10674

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !10675
  %cmp2 = icmp eq i32 %6, -1, !dbg !10678
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10679

if.then3:                                         ; preds = %for.body
  store i32 62, i32* %i, align 4, !dbg !10680
  br label %if.end4, !dbg !10681

if.end4:                                          ; preds = %if.then3, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !10682
  %call = call i32 @vc_cons_allocated(i32 %7) #11, !dbg !10684
  %tobool = icmp ne i32 %call, 0, !dbg !10684
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !10685

if.then5:                                         ; preds = %if.end4
  br label %for.end, !dbg !10686

if.end6:                                          ; preds = %if.end4
  br label %for.inc, !dbg !10687

for.inc:                                          ; preds = %if.end6
  %8 = load i32, i32* %i, align 4, !dbg !10688
  %dec = add i32 %8, -1, !dbg !10688
  store i32 %dec, i32* %i, align 4, !dbg !10688
  br label %for.cond, !dbg !10689, !llvm.loop !10690

for.end:                                          ; preds = %if.then5, %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !10692
  %call7 = call i32 @set_console(i32 %9) #11, !dbg !10693
  ret void, !dbg !10694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_inc_console(%struct.vc_data* %vc) #0 !dbg !10695 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %i = alloca i32, align 4
  %cur = alloca i32, align 4
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10696, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10698, metadata !DIExpression()), !dbg !10699
  call void @llvm.dbg.declare(metadata i32* %cur, metadata !10700, metadata !DIExpression()), !dbg !10701
  %0 = load i32, i32* @fg_console, align 4, !dbg !10702
  store i32 %0, i32* %cur, align 4, !dbg !10701
  %1 = load i32, i32* @want_console, align 4, !dbg !10703
  %cmp = icmp ne i32 %1, -1, !dbg !10705
  br i1 %cmp, label %if.then, label %if.end, !dbg !10706

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @want_console, align 4, !dbg !10707
  store i32 %2, i32* %cur, align 4, !dbg !10708
  br label %if.end, !dbg !10709

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %cur, align 4, !dbg !10710
  %add = add i32 %3, 1, !dbg !10712
  store i32 %add, i32* %i, align 4, !dbg !10713
  br label %for.cond, !dbg !10714

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !10715
  %5 = load i32, i32* %cur, align 4, !dbg !10717
  %cmp1 = icmp ne i32 %4, %5, !dbg !10718
  br i1 %cmp1, label %for.body, label %for.end, !dbg !10719

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !10720
  %cmp2 = icmp eq i32 %6, 63, !dbg !10723
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10724

if.then3:                                         ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !10725
  br label %if.end4, !dbg !10726

if.end4:                                          ; preds = %if.then3, %for.body
  %7 = load i32, i32* %i, align 4, !dbg !10727
  %call = call i32 @vc_cons_allocated(i32 %7) #11, !dbg !10729
  %tobool = icmp ne i32 %call, 0, !dbg !10729
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !10730

if.then5:                                         ; preds = %if.end4
  br label %for.end, !dbg !10731

if.end6:                                          ; preds = %if.end4
  br label %for.inc, !dbg !10732

for.inc:                                          ; preds = %if.end6
  %8 = load i32, i32* %i, align 4, !dbg !10733
  %inc = add i32 %8, 1, !dbg !10733
  store i32 %inc, i32* %i, align 4, !dbg !10733
  br label %for.cond, !dbg !10734, !llvm.loop !10735

for.end:                                          ; preds = %if.then5, %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !10737
  %call7 = call i32 @set_console(i32 %9) #11, !dbg !10738
  ret void, !dbg !10739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_spawn_con(%struct.vc_data* %vc) #0 !dbg !10740 {
entry:
  %lock.addr.i4 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i4, metadata !8461, metadata !DIExpression()), !dbg !10741
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8467, metadata !DIExpression()), !dbg !10743
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10745, metadata !DIExpression()), !dbg !10746
  store %struct.spinlock* getelementptr inbounds (%struct.vt_spawn_console, %struct.vt_spawn_console* @vt_spawn_con, i32 0, i32 0), %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10747, !srcloc !8526
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10748
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !10748
  %rlock.i = bitcast %union.anon* %1 to %struct.raw_spinlock*, !dbg !10748
  %2 = load %struct.pid*, %struct.pid** getelementptr inbounds (%struct.vt_spawn_console, %struct.vt_spawn_console* @vt_spawn_con, i32 0, i32 1), align 8, !dbg !10749
  %tobool = icmp ne %struct.pid* %2, null, !dbg !10751
  br i1 %tobool, label %if.then, label %if.end3, !dbg !10752

if.then:                                          ; preds = %entry
  %3 = load %struct.pid*, %struct.pid** getelementptr inbounds (%struct.vt_spawn_console, %struct.vt_spawn_console* @vt_spawn_con, i32 0, i32 1), align 8, !dbg !10753
  %4 = load i32, i32* getelementptr inbounds (%struct.vt_spawn_console, %struct.vt_spawn_console* @vt_spawn_con, i32 0, i32 2), align 8, !dbg !10755
  %call = call i32 @kill_pid(%struct.pid* %3, i32 %4, i32 1) #11, !dbg !10756
  %tobool1 = icmp ne i32 %call, 0, !dbg !10756
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !10757

if.then2:                                         ; preds = %if.then
  %5 = load %struct.pid*, %struct.pid** getelementptr inbounds (%struct.vt_spawn_console, %struct.vt_spawn_console* @vt_spawn_con, i32 0, i32 1), align 8, !dbg !10758
  call void @put_pid(%struct.pid* %5) #11, !dbg !10760
  store %struct.pid* null, %struct.pid** getelementptr inbounds (%struct.vt_spawn_console, %struct.vt_spawn_console* @vt_spawn_con, i32 0, i32 1), align 8, !dbg !10761
  br label %if.end, !dbg !10762

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !10763

if.end3:                                          ; preds = %if.end, %entry
  store %struct.spinlock* getelementptr inbounds (%struct.vt_spawn_console, %struct.vt_spawn_console* @vt_spawn_con, i32 0, i32 0), %struct.spinlock** %lock.addr.i4, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !10764, !srcloc !8539
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i4, align 8, !dbg !10765
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !10765
  %rlock.i5 = bitcast %union.anon* %7 to %struct.raw_spinlock*, !dbg !10765
  ret void, !dbg !10766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fn_bare_num(%struct.vc_data* %vc) #0 !dbg !10767 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10768, metadata !DIExpression()), !dbg !10769
  %0 = load i8, i8* @rep, align 1, !dbg !10770
  %tobool = icmp ne i8 %0, 0, !dbg !10770
  br i1 %tobool, label %if.end, label %if.then, !dbg !10772

if.then:                                          ; preds = %entry
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** @kbd, align 8, !dbg !10773
  call void @chg_vc_kbd_led(%struct.kbd_struct* %1, i32 1) #11, !dbg !10774
  br label %if.end, !dbg !10774

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10775
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pt_regs* @get_irq_regs() #0 !dbg !10776 {
entry:
  %tmp = alloca %struct.pt_regs*, align 8
  %pscr_ret__ = alloca %struct.pt_regs*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pfo_val__ = alloca i64, align 8
  %tmp1 = alloca %struct.pt_regs*, align 8
  %tmp2 = alloca %struct.pt_regs*, align 8
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #11, !dbg !10780
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %pscr_ret__, metadata !10782, metadata !DIExpression()), !dbg !10784
  br label %do.body, !dbg !10784

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !10785, metadata !DIExpression()), !dbg !10787
  store i8* null, i8** %__vpp_verify, align 8, !dbg !10787
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !10787
  br label %do.end, !dbg !10787

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %pfo_val__, metadata !10788, metadata !DIExpression()), !dbg !10790
  %1 = call i64 asm "movq $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(%struct.pt_regs** @__irq_regs) #5, !dbg !10790, !srcloc !10791
  store i64 %1, i64* %pfo_val__, align 8, !dbg !10790
  %2 = load i64, i64* %pfo_val__, align 8, !dbg !10790
  %3 = inttoptr i64 %2 to %struct.pt_regs*, !dbg !10790
  store %struct.pt_regs* %3, %struct.pt_regs** %tmp1, align 8, !dbg !10790
  %4 = load %struct.pt_regs*, %struct.pt_regs** %tmp1, align 8, !dbg !10790
  store %struct.pt_regs* %4, %struct.pt_regs** %pscr_ret__, align 8, !dbg !10784
  %5 = load %struct.pt_regs*, %struct.pt_regs** %pscr_ret__, align 8, !dbg !10784
  store %struct.pt_regs* %5, %struct.pt_regs** %tmp2, align 8, !dbg !10784
  %6 = load %struct.pt_regs*, %struct.pt_regs** %tmp2, align 8, !dbg !10784
  store %struct.pt_regs* %6, %struct.pt_regs** %tmp, align 8, !dbg !10780
  %7 = load %struct.pt_regs*, %struct.pt_regs** %tmp, align 8, !dbg !10780
  ret %struct.pt_regs* %7, !dbg !10792
}

; Function Attrs: noredzone
declare dso_local void @show_regs(%struct.pt_regs*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__this_cpu_preempt_check(i8* %op) #0 !dbg !10793 {
entry:
  %op.addr = alloca i8*, align 8
  store i8* %op, i8** %op.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %op.addr, metadata !10797, metadata !DIExpression()), !dbg !10798
  ret void, !dbg !10799
}

; Function Attrs: noredzone
declare dso_local void @show_mem(i32, %struct.nodemask_t*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @show_state() #0 !dbg !10800 {
entry:
  call void @show_state_filter(i64 0) #11, !dbg !10802
  ret void, !dbg !10803
}

; Function Attrs: noredzone
declare dso_local void @show_state_filter(i64) #2

; Function Attrs: noredzone
declare dso_local i32 @set_console(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @chg_vc_kbd_led(%struct.kbd_struct* %kbd, i32 %flag) #0 !dbg !10804 {
entry:
  %kbd.addr = alloca %struct.kbd_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.kbd_struct* %kbd, %struct.kbd_struct** %kbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kbd.addr, metadata !10805, metadata !DIExpression()), !dbg !10806
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10807, metadata !DIExpression()), !dbg !10808
  %0 = load i32, i32* %flag.addr, align 4, !dbg !10809
  %shl = shl i32 1, %0, !dbg !10810
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kbd.addr, align 8, !dbg !10811
  %ledflagstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %1, i32 0, i32 2, !dbg !10812
  %bf.load = load i8, i8* %ledflagstate, align 1, !dbg !10813
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !10813
  %bf.clear = and i8 %bf.lshr, 15, !dbg !10813
  %conv = zext i8 %bf.clear to i32, !dbg !10813
  %xor = xor i32 %conv, %shl, !dbg !10813
  %conv1 = trunc i32 %xor to i8, !dbg !10813
  %bf.load2 = load i8, i8* %ledflagstate, align 1, !dbg !10813
  %bf.value = and i8 %conv1, 15, !dbg !10813
  %bf.shl = shl i8 %bf.value, 1, !dbg !10813
  %bf.clear3 = and i8 %bf.load2, -31, !dbg !10813
  %bf.set = or i8 %bf.clear3, %bf.shl, !dbg !10813
  store i8 %bf.set, i8* %ledflagstate, align 1, !dbg !10813
  ret void, !dbg !10814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @applkey(%struct.vc_data* %vc, i32 %key, i8 signext %mode) #0 !dbg !4647 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %key.addr = alloca i32, align 4
  %mode.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  store i32 %key, i32* %key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key.addr, metadata !10817, metadata !DIExpression()), !dbg !10818
  store i8 %mode, i8* %mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mode.addr, metadata !10819, metadata !DIExpression()), !dbg !10820
  %0 = load i8, i8* %mode.addr, align 1, !dbg !10821
  %conv = sext i8 %0 to i32, !dbg !10821
  %tobool = icmp ne i32 %conv, 0, !dbg !10821
  %1 = zext i1 %tobool to i64, !dbg !10821
  %cond = select i1 %tobool, i32 79, i32 91, !dbg !10821
  %conv1 = trunc i32 %cond to i8, !dbg !10822
  store i8 %conv1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @applkey.buf, i64 0, i64 1), align 1, !dbg !10823
  %2 = load i32, i32* %key.addr, align 4, !dbg !10824
  %conv2 = trunc i32 %2 to i8, !dbg !10824
  store i8 %conv2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @applkey.buf, i64 0, i64 2), align 1, !dbg !10825
  %3 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10826
  call void @puts_queue(%struct.vc_data* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @applkey.buf, i64 0, i64 0)) #11, !dbg !10827
  ret void, !dbg !10828
}

; Function Attrs: noredzone
declare dso_local void @start_tty(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local void @stop_tty(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local void @scrollfront(%struct.vc_data*, i32) #2

; Function Attrs: noredzone
declare dso_local void @scrollback(%struct.vc_data*) #2

; Function Attrs: noredzone
declare dso_local void @ctrl_alt_del() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #0 !dbg !10829 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !10832, metadata !DIExpression()), !dbg !10833
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !10834
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !10835
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !10836
  ret i1 %call, !dbg !10837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !10838 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !10841, metadata !DIExpression()), !dbg !10842
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !10843, metadata !DIExpression()), !dbg !10844
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !10845
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !10846
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !10847
  ret i1 %call, !dbg !10848
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #2

; Function Attrs: noredzone
declare dso_local i32 @vc_cons_allocated(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @kill_pid(%struct.pid*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @put_pid(%struct.pid*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_deadunicode(%struct.vc_data* %vc, i32 %value, i8 signext %up_flag) #0 !dbg !10849 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %value.addr = alloca i32, align 4
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10850, metadata !DIExpression()), !dbg !10851
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10852, metadata !DIExpression()), !dbg !10853
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10854, metadata !DIExpression()), !dbg !10855
  %0 = load i8, i8* %up_flag.addr, align 1, !dbg !10856
  %tobool = icmp ne i8 %0, 0, !dbg !10856
  br i1 %tobool, label %if.then, label %if.end, !dbg !10858

if.then:                                          ; preds = %entry
  br label %return, !dbg !10859

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @diacr, align 4, !dbg !10860
  %tobool1 = icmp ne i32 %1, 0, !dbg !10860
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !10860

cond.true:                                        ; preds = %if.end
  %2 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10861
  %3 = load i32, i32* %value.addr, align 4, !dbg !10862
  %call = call i32 @handle_diacr(%struct.vc_data* %2, i32 %3) #11, !dbg !10863
  br label %cond.end, !dbg !10860

cond.false:                                       ; preds = %if.end
  %4 = load i32, i32* %value.addr, align 4, !dbg !10864
  br label %cond.end, !dbg !10860

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %4, %cond.false ], !dbg !10860
  store i32 %cond, i32* @diacr, align 4, !dbg !10865
  br label %return, !dbg !10866

return:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !10866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @chg_vc_kbd_lock(%struct.kbd_struct* %kbd, i32 %flag) #0 !dbg !10867 {
entry:
  %kbd.addr = alloca %struct.kbd_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.kbd_struct* %kbd, %struct.kbd_struct** %kbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kbd.addr, metadata !10868, metadata !DIExpression()), !dbg !10869
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10870, metadata !DIExpression()), !dbg !10871
  %0 = load i32, i32* %flag.addr, align 4, !dbg !10872
  %shl = shl i32 1, %0, !dbg !10873
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kbd.addr, align 8, !dbg !10874
  %lockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %1, i32 0, i32 0, !dbg !10875
  %2 = load i8, i8* %lockstate, align 1, !dbg !10876
  %conv = zext i8 %2 to i32, !dbg !10876
  %xor = xor i32 %conv, %shl, !dbg !10876
  %conv1 = trunc i32 %xor to i8, !dbg !10876
  store i8 %conv1, i8* %lockstate, align 1, !dbg !10876
  ret void, !dbg !10877
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @chg_vc_kbd_slock(%struct.kbd_struct* %kbd, i32 %flag) #0 !dbg !10878 {
entry:
  %kbd.addr = alloca %struct.kbd_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.kbd_struct* %kbd, %struct.kbd_struct** %kbd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kbd_struct** %kbd.addr, metadata !10879, metadata !DIExpression()), !dbg !10880
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10881, metadata !DIExpression()), !dbg !10882
  %0 = load i32, i32* %flag.addr, align 4, !dbg !10883
  %shl = shl i32 1, %0, !dbg !10884
  %1 = load %struct.kbd_struct*, %struct.kbd_struct** %kbd.addr, align 8, !dbg !10885
  %slockstate = getelementptr inbounds %struct.kbd_struct, %struct.kbd_struct* %1, i32 0, i32 1, !dbg !10886
  %2 = load i8, i8* %slockstate, align 1, !dbg !10887
  %conv = zext i8 %2 to i32, !dbg !10887
  %xor = xor i32 %conv, %shl, !dbg !10887
  %conv1 = trunc i32 %xor to i8, !dbg !10887
  store i8 %conv1, i8* %slockstate, align 1, !dbg !10887
  ret void, !dbg !10888
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @k_brlcommit(%struct.vc_data* %vc, i32 %pattern, i8 signext %up_flag) #0 !dbg !4679 {
entry:
  %vc.addr = alloca %struct.vc_data*, align 8
  %pattern.addr = alloca i32, align 4
  %up_flag.addr = alloca i8, align 1
  store %struct.vc_data* %vc, %struct.vc_data** %vc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vc_data** %vc.addr, metadata !10889, metadata !DIExpression()), !dbg !10890
  store i32 %pattern, i32* %pattern.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pattern.addr, metadata !10891, metadata !DIExpression()), !dbg !10892
  store i8 %up_flag, i8* %up_flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up_flag.addr, metadata !10893, metadata !DIExpression()), !dbg !10894
  %0 = load i32, i32* @brl_nbchords, align 4, !dbg !10895
  %tobool = icmp ne i32 %0, 0, !dbg !10895
  br i1 %tobool, label %if.else, label %if.then, !dbg !10897

if.then:                                          ; preds = %entry
  %1 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10898
  %2 = load i32, i32* %pattern.addr, align 4, !dbg !10899
  %or = or i32 10240, %2, !dbg !10900
  %3 = load i8, i8* %up_flag.addr, align 1, !dbg !10901
  call void @k_deadunicode(%struct.vc_data* %1, i32 %or, i8 signext %3) #11, !dbg !10902
  br label %if.end5, !dbg !10902

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %pattern.addr, align 4, !dbg !10903
  %5 = load i32, i32* @k_brlcommit.committed, align 4, !dbg !10905
  %or1 = or i32 %5, %4, !dbg !10905
  store i32 %or1, i32* @k_brlcommit.committed, align 4, !dbg !10905
  %6 = load i64, i64* @k_brlcommit.chords, align 8, !dbg !10906
  %inc = add i64 %6, 1, !dbg !10906
  store i64 %inc, i64* @k_brlcommit.chords, align 8, !dbg !10906
  %7 = load i64, i64* @k_brlcommit.chords, align 8, !dbg !10907
  %8 = load i32, i32* @brl_nbchords, align 4, !dbg !10909
  %conv = zext i32 %8 to i64, !dbg !10909
  %cmp = icmp eq i64 %7, %conv, !dbg !10910
  br i1 %cmp, label %if.then3, label %if.end, !dbg !10911

if.then3:                                         ; preds = %if.else
  %9 = load %struct.vc_data*, %struct.vc_data** %vc.addr, align 8, !dbg !10912
  %10 = load i32, i32* @k_brlcommit.committed, align 4, !dbg !10914
  %or4 = or i32 10240, %10, !dbg !10915
  %11 = load i8, i8* %up_flag.addr, align 1, !dbg !10916
  call void @k_unicode(%struct.vc_data* %9, i32 %or4, i8 signext %11) #11, !dbg !10917
  store i64 0, i64* @k_brlcommit.chords, align 8, !dbg !10918
  store i32 0, i32* @k_brlcommit.committed, align 4, !dbg !10919
  br label %if.end, !dbg !10920

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  ret void, !dbg !10921
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !10922 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !10923, metadata !DIExpression()), !dbg !10924
  %0 = load i32, i32* %m.addr, align 4, !dbg !10925
  %conv = zext i32 %0 to i64, !dbg !10925
  %add = add i64 %conv, 4, !dbg !10926
  %sub = sub i64 %add, 1, !dbg !10927
  %div = sdiv i64 %sub, 4, !dbg !10928
  ret i64 %div, !dbg !10929
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !10930 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6034, metadata !DIExpression()), !dbg !10931
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6047, metadata !DIExpression()), !dbg !10934
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6049, metadata !DIExpression()), !dbg !10935
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6051, metadata !DIExpression()), !dbg !10936
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6053, metadata !DIExpression()), !dbg !10937
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6059, metadata !DIExpression()), !dbg !10939
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6065, metadata !DIExpression()), !dbg !10941
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6074, metadata !DIExpression()), !dbg !10944
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6076, metadata !DIExpression()), !dbg !10945
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6078, metadata !DIExpression()), !dbg !10946
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6080, metadata !DIExpression()), !dbg !10947
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6082, metadata !DIExpression()), !dbg !10948
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6084, metadata !DIExpression()), !dbg !10949
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6086, metadata !DIExpression()), !dbg !10950
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6088, metadata !DIExpression()), !dbg !10951
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10952, metadata !DIExpression()), !dbg !10953
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10954, metadata !DIExpression()), !dbg !10955
  %0 = load i64, i64* %size.addr, align 8, !dbg !10956
  %1 = load i32, i32* %flags.addr, align 4, !dbg !10957
  %or = or i32 %1, 256, !dbg !10958
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !10959
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #6, !dbg !10960
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !10961

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10962
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !10963
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10964

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !10965
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !10966
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10967
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !10968
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10948
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !10969
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10970
  %10 = load i32, i32* %order.i.i, align 4, !dbg !10971
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10972
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10973
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10974
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !10975
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10975
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10975
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10975
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !10975
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10976
  br label %kmalloc.exit, !dbg !10976

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !10977
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10978
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !10978
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10979

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10980
  br label %kmalloc_index.exit.i, !dbg !10980

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10981
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !10982
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10983

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10984
  br label %kmalloc_index.exit.i, !dbg !10984

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10985
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !10986
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10987

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10988
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !10989
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10990

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10991
  br label %kmalloc_index.exit.i, !dbg !10991

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10992
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !10993
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10994

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10995
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !10996
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10997

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10998
  br label %kmalloc_index.exit.i, !dbg !10998

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10999
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !11000
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11001

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11002
  br label %kmalloc_index.exit.i, !dbg !11002

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11003
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !11004
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11005

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11006
  br label %kmalloc_index.exit.i, !dbg !11006

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11007
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !11008
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11009

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11010
  br label %kmalloc_index.exit.i, !dbg !11010

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11011
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !11012
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11013

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11014
  br label %kmalloc_index.exit.i, !dbg !11014

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11015
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !11016
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11017

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11018
  br label %kmalloc_index.exit.i, !dbg !11018

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11019
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !11020
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11021

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11022
  br label %kmalloc_index.exit.i, !dbg !11022

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11023
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !11024
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11025

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11026
  br label %kmalloc_index.exit.i, !dbg !11026

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11027
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !11028
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11029

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11030
  br label %kmalloc_index.exit.i, !dbg !11030

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11031
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !11032
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11033

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11034
  br label %kmalloc_index.exit.i, !dbg !11034

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11035
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !11036
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11037

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11038
  br label %kmalloc_index.exit.i, !dbg !11038

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11039
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !11040
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11041

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11042
  br label %kmalloc_index.exit.i, !dbg !11042

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11043
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !11044
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11045

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11046
  br label %kmalloc_index.exit.i, !dbg !11046

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11047
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !11048
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11049

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11050
  br label %kmalloc_index.exit.i, !dbg !11050

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11051
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !11052
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11053

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11054
  br label %kmalloc_index.exit.i, !dbg !11054

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11055
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !11056
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11057

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11058
  br label %kmalloc_index.exit.i, !dbg !11058

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11059
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !11060
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11061

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11062
  br label %kmalloc_index.exit.i, !dbg !11062

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11063
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !11064
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11065

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11066
  br label %kmalloc_index.exit.i, !dbg !11066

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11067
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !11068
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11069

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11070
  br label %kmalloc_index.exit.i, !dbg !11070

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11071
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !11072
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11073

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11074
  br label %kmalloc_index.exit.i, !dbg !11074

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11075
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !11076
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11077

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11078
  br label %kmalloc_index.exit.i, !dbg !11078

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11079
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !11080
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11081

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11082
  br label %kmalloc_index.exit.i, !dbg !11082

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11083
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !11084
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11085

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11086
  br label %kmalloc_index.exit.i, !dbg !11086

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11087
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !11088
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11089

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11090
  br label %kmalloc_index.exit.i, !dbg !11090

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11091
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !11092
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11093

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11094
  br label %kmalloc_index.exit.i, !dbg !11094

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !11095, !srcloc !6283
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 228) #6, !dbg !11096, !srcloc !6287
  unreachable, !dbg !11097

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !11098
  store i32 %45, i32* %index.i, align 4, !dbg !11099
  %46 = load i32, i32* %index.i, align 4, !dbg !11100
  %tobool.i = icmp ne i32 %46, 0, !dbg !11100
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11101

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11102
  br label %kmalloc.exit, !dbg !11102

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !11103
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11104
  %and.i.i = and i32 %48, 17, !dbg !11104
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11104
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11104
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11104
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11104
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11105

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11106
  br label %kmalloc_type.exit.i, !dbg !11106

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11107
  %and2.i.i = and i32 %49, 1, !dbg !11108
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11107
  %50 = zext i1 %tobool3.i.i to i64, !dbg !11107
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11107
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11109
  br label %kmalloc_type.exit.i, !dbg !11109

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !11110
  %idxprom.i = zext i32 %51 to i64, !dbg !11111
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11111
  %52 = load i32, i32* %index.i, align 4, !dbg !11112
  %idxprom6.i = zext i32 %52 to i64, !dbg !11111
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11111
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11111
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !11113
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !11114
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11115
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11116
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !11117
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11117
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11117
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11117
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !11117
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10936
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11118
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !11119
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11120
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11121
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !11122
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11123
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !11124
  store i8* %62, i8** %retval.i, align 8, !dbg !11125
  br label %kmalloc.exit, !dbg !11125

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !11126
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !11127
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !11128
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11128
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11128
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11128
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !11128
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11129
  br label %kmalloc.exit, !dbg !11129

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !11130
  ret i8* %65, !dbg !11131
}

; Function Attrs: noredzone
declare dso_local i32 @input_register_handle(%struct.input_handle*) #2

; Function Attrs: noredzone
declare dso_local i32 @input_open_device(%struct.input_handle*) #2

; Function Attrs: noredzone
declare dso_local void @input_unregister_handle(%struct.input_handle*) #2

; Function Attrs: noredzone
declare dso_local void @input_close_device(%struct.input_handle*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_disable(%struct.tasklet_struct* %t) #0 !dbg !11132 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !11133, metadata !DIExpression()), !dbg !11134
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !11135
  call void @tasklet_disable_nosync(%struct.tasklet_struct* %0) #11, !dbg !11136
  br label %do.body, !dbg !11137

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11138

do.end:                                           ; preds = %do.body
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11140, !srcloc !11141
  ret void, !dbg !11142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_disable_nosync(%struct.tasklet_struct* %t) #0 !dbg !11143 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !11144, metadata !DIExpression()), !dbg !11146
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5400, metadata !DIExpression()), !dbg !11150
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5410, metadata !DIExpression()), !dbg !11152
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !11153, metadata !DIExpression()), !dbg !11154
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !11155, metadata !DIExpression()), !dbg !11156
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !11157
  %count = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 2, !dbg !11158
  store %struct.atomic_t* %count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11159
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !11159
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11160
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !11161
  %conv.i.i = trunc i64 %4 to i32, !dbg !11161
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #12, !dbg !11162
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11163
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !11163
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !11163
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11164
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11165
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !11166
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !11167, !srcloc !11168
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !11169, !srcloc !11170
  ret void, !dbg !11171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !11172 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11175, metadata !DIExpression()), !dbg !11177
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11179, metadata !DIExpression()), !dbg !11180
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !11181, metadata !DIExpression()), !dbg !11183
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5400, metadata !DIExpression()), !dbg !11184
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5410, metadata !DIExpression()), !dbg !11186
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11187, metadata !DIExpression()), !dbg !11188
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11189, metadata !DIExpression()), !dbg !11190
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11191
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11192
  %div = sdiv i64 %1, 64, !dbg !11192
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11193
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11191
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11194
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11195
  %conv.i = trunc i64 %4 to i32, !dbg !11195
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !11196
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11197
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11197
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !11197
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11198
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11199
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !11183
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !11183
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #6, !dbg !11183, !srcloc !11200
  store i8 %11, i8* %c.i, align 1, !dbg !11183
  %12 = load i8, i8* %c.i, align 1, !dbg !11183
  %tobool.i = trunc i8 %12 to i1, !dbg !11183
  %frombool.i = zext i1 %tobool.i to i8, !dbg !11183
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !11183
  %13 = load i8, i8* %tmp.i, align 1, !dbg !11183
  %tobool1.i = trunc i8 %13 to i1, !dbg !11183
  ret i1 %tobool1.i, !dbg !11201
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !11202 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !11206, metadata !DIExpression()), !dbg !11207
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !11208
  %tobool = trunc i8 %0 to i1, !dbg !11208
  %lnot = xor i1 %tobool, true, !dbg !11208
  %lnot1 = xor i1 %lnot, true, !dbg !11208
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11208
  %conv = sext i32 %lnot.ext to i64, !dbg !11208
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11208
  ret i1 %tobool2, !dbg !11209
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !11210 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11213, metadata !DIExpression()), !dbg !11214
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11215, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11217, metadata !DIExpression()), !dbg !11219
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !11219
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !11220
  %tobool = icmp ne i32 %0, 0, !dbg !11220
  %lnot = xor i1 %tobool, true, !dbg !11220
  %lnot1 = xor i1 %lnot, true, !dbg !11220
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11220
  %conv = sext i32 %lnot.ext to i64, !dbg !11220
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11220
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11219

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11220

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !11222

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !11224

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !11222
  %2 = load i64, i64* %count.addr, align 8, !dbg !11222
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !11222
  br label %do.body4, !dbg !11222

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !11226

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !11228

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !11226

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i32 134, i32 2313, i64 12) #6, !dbg !11230, !srcloc !11232
  br label %do.end8, !dbg !11230

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #6, !dbg !11233, !srcloc !11235
  br label %do.body9, !dbg !11226

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !11236

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !11226

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !11222

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !11238

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !11222

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !11222

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !11219
  %tobool15 = icmp ne i32 %3, 0, !dbg !11219
  %lnot16 = xor i1 %tobool15, true, !dbg !11219
  %lnot18 = xor i1 %lnot16, true, !dbg !11219
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !11219
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !11219
  store i64 %conv20, i64* %tmp, align 8, !dbg !11220
  %4 = load i64, i64* %tmp, align 8, !dbg !11219
  ret void, !dbg !11240
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !11241 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11244, metadata !DIExpression()), !dbg !11245
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11246, metadata !DIExpression()), !dbg !11247
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !11248, metadata !DIExpression()), !dbg !11249
  ret void, !dbg !11250
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @getkeycode_helper(%struct.input_handle* %handle, i8* %data) #0 !dbg !11251 {
entry:
  %handle.addr = alloca %struct.input_handle*, align 8
  %data.addr = alloca i8*, align 8
  %d = alloca %struct.getset_keycode_data*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !11252, metadata !DIExpression()), !dbg !11253
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11254, metadata !DIExpression()), !dbg !11255
  call void @llvm.dbg.declare(metadata %struct.getset_keycode_data** %d, metadata !11256, metadata !DIExpression()), !dbg !11258
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11259
  %1 = bitcast i8* %0 to %struct.getset_keycode_data*, !dbg !11259
  store %struct.getset_keycode_data* %1, %struct.getset_keycode_data** %d, align 8, !dbg !11258
  %2 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !11260
  %dev = getelementptr inbounds %struct.input_handle, %struct.input_handle* %2, i32 0, i32 3, !dbg !11261
  %3 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !11261
  %4 = load %struct.getset_keycode_data*, %struct.getset_keycode_data** %d, align 8, !dbg !11262
  %ke = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %4, i32 0, i32 0, !dbg !11263
  %call = call i32 @input_get_keycode(%struct.input_dev* %3, %struct.input_keymap_entry* %ke) #11, !dbg !11264
  %5 = load %struct.getset_keycode_data*, %struct.getset_keycode_data** %d, align 8, !dbg !11265
  %error = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %5, i32 0, i32 1, !dbg !11266
  store i32 %call, i32* %error, align 4, !dbg !11267
  %6 = load %struct.getset_keycode_data*, %struct.getset_keycode_data** %d, align 8, !dbg !11268
  %error1 = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %6, i32 0, i32 1, !dbg !11269
  %7 = load i32, i32* %error1, align 4, !dbg !11269
  %cmp = icmp eq i32 %7, 0, !dbg !11270
  %conv = zext i1 %cmp to i32, !dbg !11270
  ret i32 %conv, !dbg !11271
}

; Function Attrs: noredzone
declare dso_local i32 @input_get_keycode(%struct.input_dev*, %struct.input_keymap_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @setkeycode_helper(%struct.input_handle* %handle, i8* %data) #0 !dbg !11272 {
entry:
  %handle.addr = alloca %struct.input_handle*, align 8
  %data.addr = alloca i8*, align 8
  %d = alloca %struct.getset_keycode_data*, align 8
  store %struct.input_handle* %handle, %struct.input_handle** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_handle** %handle.addr, metadata !11273, metadata !DIExpression()), !dbg !11274
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11275, metadata !DIExpression()), !dbg !11276
  call void @llvm.dbg.declare(metadata %struct.getset_keycode_data** %d, metadata !11277, metadata !DIExpression()), !dbg !11278
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11279
  %1 = bitcast i8* %0 to %struct.getset_keycode_data*, !dbg !11279
  store %struct.getset_keycode_data* %1, %struct.getset_keycode_data** %d, align 8, !dbg !11278
  %2 = load %struct.input_handle*, %struct.input_handle** %handle.addr, align 8, !dbg !11280
  %dev = getelementptr inbounds %struct.input_handle, %struct.input_handle* %2, i32 0, i32 3, !dbg !11281
  %3 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !11281
  %4 = load %struct.getset_keycode_data*, %struct.getset_keycode_data** %d, align 8, !dbg !11282
  %ke = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %4, i32 0, i32 0, !dbg !11283
  %call = call i32 @input_set_keycode(%struct.input_dev* %3, %struct.input_keymap_entry* %ke) #11, !dbg !11284
  %5 = load %struct.getset_keycode_data*, %struct.getset_keycode_data** %d, align 8, !dbg !11285
  %error = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %5, i32 0, i32 1, !dbg !11286
  store i32 %call, i32* %error, align 4, !dbg !11287
  %6 = load %struct.getset_keycode_data*, %struct.getset_keycode_data** %d, align 8, !dbg !11288
  %error1 = getelementptr inbounds %struct.getset_keycode_data, %struct.getset_keycode_data* %6, i32 0, i32 1, !dbg !11289
  %7 = load i32, i32* %error1, align 4, !dbg !11289
  %cmp = icmp eq i32 %7, 0, !dbg !11290
  %conv = zext i1 %cmp to i32, !dbg !11290
  ret i32 %conv, !dbg !11291
}

; Function Attrs: noredzone
declare dso_local i32 @input_set_keycode(%struct.input_dev*, %struct.input_keymap_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !11292 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11296, metadata !DIExpression()), !dbg !11300
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11302, metadata !DIExpression()), !dbg !11303
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11304, metadata !DIExpression()), !dbg !11305
  %0 = load i64, i64* %size.addr, align 8, !dbg !11306
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11308
  br i1 %1, label %if.then, label %if.end447, !dbg !11309

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11310
  %tobool = icmp ne i64 %2, 0, !dbg !11310
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11313

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11314
  br label %return, !dbg !11314

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11315
  %cmp = icmp ult i64 %3, 4096, !dbg !11317
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11318

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11319
  br label %return, !dbg !11319

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub = sub i64 %4, 1, !dbg !11320
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11320
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11320

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub4 = sub i64 %6, 1, !dbg !11320
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11320
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11320

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub6 = sub i64 %8, 1, !dbg !11320
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11320
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11320

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11320

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub9 = sub i64 %9, 1, !dbg !11320
  %and = and i64 %sub9, -9223372036854775808, !dbg !11320
  %tobool10 = icmp ne i64 %and, 0, !dbg !11320
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11320

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11320

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub13 = sub i64 %10, 1, !dbg !11320
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11320
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11320
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11320

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11320

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub18 = sub i64 %11, 1, !dbg !11320
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11320
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11320
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11320

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11320

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub23 = sub i64 %12, 1, !dbg !11320
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11320
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11320
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11320

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11320

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub28 = sub i64 %13, 1, !dbg !11320
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11320
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11320
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11320

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11320

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub33 = sub i64 %14, 1, !dbg !11320
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11320
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11320
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11320

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11320

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub38 = sub i64 %15, 1, !dbg !11320
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11320
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11320
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11320

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11320

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub43 = sub i64 %16, 1, !dbg !11320
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11320
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11320
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11320

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11320

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub48 = sub i64 %17, 1, !dbg !11320
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11320
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11320
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11320

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11320

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub53 = sub i64 %18, 1, !dbg !11320
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11320
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11320
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11320

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11320

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub58 = sub i64 %19, 1, !dbg !11320
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11320
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11320
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11320

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11320

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub63 = sub i64 %20, 1, !dbg !11320
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11320
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11320
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11320

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11320

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub68 = sub i64 %21, 1, !dbg !11320
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11320
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11320
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11320

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11320

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub73 = sub i64 %22, 1, !dbg !11320
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11320
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11320
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11320

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11320

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub78 = sub i64 %23, 1, !dbg !11320
  %and79 = and i64 %sub78, 562949953421312, !dbg !11320
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11320
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11320

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11320

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub83 = sub i64 %24, 1, !dbg !11320
  %and84 = and i64 %sub83, 281474976710656, !dbg !11320
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11320
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11320

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11320

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub88 = sub i64 %25, 1, !dbg !11320
  %and89 = and i64 %sub88, 140737488355328, !dbg !11320
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11320
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11320

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11320

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub93 = sub i64 %26, 1, !dbg !11320
  %and94 = and i64 %sub93, 70368744177664, !dbg !11320
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11320
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11320

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11320

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub98 = sub i64 %27, 1, !dbg !11320
  %and99 = and i64 %sub98, 35184372088832, !dbg !11320
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11320
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11320

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11320

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub103 = sub i64 %28, 1, !dbg !11320
  %and104 = and i64 %sub103, 17592186044416, !dbg !11320
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11320
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11320

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11320

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub108 = sub i64 %29, 1, !dbg !11320
  %and109 = and i64 %sub108, 8796093022208, !dbg !11320
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11320
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11320

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11320

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub113 = sub i64 %30, 1, !dbg !11320
  %and114 = and i64 %sub113, 4398046511104, !dbg !11320
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11320
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11320

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11320

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub118 = sub i64 %31, 1, !dbg !11320
  %and119 = and i64 %sub118, 2199023255552, !dbg !11320
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11320
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11320

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11320

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub123 = sub i64 %32, 1, !dbg !11320
  %and124 = and i64 %sub123, 1099511627776, !dbg !11320
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11320
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11320

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11320

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub128 = sub i64 %33, 1, !dbg !11320
  %and129 = and i64 %sub128, 549755813888, !dbg !11320
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11320
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11320

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11320

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub133 = sub i64 %34, 1, !dbg !11320
  %and134 = and i64 %sub133, 274877906944, !dbg !11320
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11320
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11320

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11320

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub138 = sub i64 %35, 1, !dbg !11320
  %and139 = and i64 %sub138, 137438953472, !dbg !11320
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11320
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11320

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11320

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub143 = sub i64 %36, 1, !dbg !11320
  %and144 = and i64 %sub143, 68719476736, !dbg !11320
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11320
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11320

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11320

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub148 = sub i64 %37, 1, !dbg !11320
  %and149 = and i64 %sub148, 34359738368, !dbg !11320
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11320
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11320

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11320

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub153 = sub i64 %38, 1, !dbg !11320
  %and154 = and i64 %sub153, 17179869184, !dbg !11320
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11320
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11320

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11320

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub158 = sub i64 %39, 1, !dbg !11320
  %and159 = and i64 %sub158, 8589934592, !dbg !11320
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11320
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11320

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11320

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub163 = sub i64 %40, 1, !dbg !11320
  %and164 = and i64 %sub163, 4294967296, !dbg !11320
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11320
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11320

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11320

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub168 = sub i64 %41, 1, !dbg !11320
  %and169 = and i64 %sub168, 2147483648, !dbg !11320
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11320
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11320

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11320

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub173 = sub i64 %42, 1, !dbg !11320
  %and174 = and i64 %sub173, 1073741824, !dbg !11320
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11320
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11320

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11320

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub178 = sub i64 %43, 1, !dbg !11320
  %and179 = and i64 %sub178, 536870912, !dbg !11320
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11320
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11320

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11320

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub183 = sub i64 %44, 1, !dbg !11320
  %and184 = and i64 %sub183, 268435456, !dbg !11320
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11320
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11320

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11320

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub188 = sub i64 %45, 1, !dbg !11320
  %and189 = and i64 %sub188, 134217728, !dbg !11320
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11320
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11320

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11320

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub193 = sub i64 %46, 1, !dbg !11320
  %and194 = and i64 %sub193, 67108864, !dbg !11320
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11320
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11320

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11320

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub198 = sub i64 %47, 1, !dbg !11320
  %and199 = and i64 %sub198, 33554432, !dbg !11320
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11320
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11320

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11320

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub203 = sub i64 %48, 1, !dbg !11320
  %and204 = and i64 %sub203, 16777216, !dbg !11320
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11320
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11320

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11320

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub208 = sub i64 %49, 1, !dbg !11320
  %and209 = and i64 %sub208, 8388608, !dbg !11320
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11320
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11320

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11320

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub213 = sub i64 %50, 1, !dbg !11320
  %and214 = and i64 %sub213, 4194304, !dbg !11320
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11320
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11320

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11320

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub218 = sub i64 %51, 1, !dbg !11320
  %and219 = and i64 %sub218, 2097152, !dbg !11320
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11320
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11320

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11320

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub223 = sub i64 %52, 1, !dbg !11320
  %and224 = and i64 %sub223, 1048576, !dbg !11320
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11320
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11320

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11320

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub228 = sub i64 %53, 1, !dbg !11320
  %and229 = and i64 %sub228, 524288, !dbg !11320
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11320
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11320

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11320

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub233 = sub i64 %54, 1, !dbg !11320
  %and234 = and i64 %sub233, 262144, !dbg !11320
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11320
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11320

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11320

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub238 = sub i64 %55, 1, !dbg !11320
  %and239 = and i64 %sub238, 131072, !dbg !11320
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11320
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11320

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11320

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub243 = sub i64 %56, 1, !dbg !11320
  %and244 = and i64 %sub243, 65536, !dbg !11320
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11320
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11320

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11320

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub248 = sub i64 %57, 1, !dbg !11320
  %and249 = and i64 %sub248, 32768, !dbg !11320
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11320
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11320

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11320

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub253 = sub i64 %58, 1, !dbg !11320
  %and254 = and i64 %sub253, 16384, !dbg !11320
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11320
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11320

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11320

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub258 = sub i64 %59, 1, !dbg !11320
  %and259 = and i64 %sub258, 8192, !dbg !11320
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11320
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11320

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11320

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub263 = sub i64 %60, 1, !dbg !11320
  %and264 = and i64 %sub263, 4096, !dbg !11320
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11320
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11320

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11320

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub268 = sub i64 %61, 1, !dbg !11320
  %and269 = and i64 %sub268, 2048, !dbg !11320
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11320
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11320

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11320

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub273 = sub i64 %62, 1, !dbg !11320
  %and274 = and i64 %sub273, 1024, !dbg !11320
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11320
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11320

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11320

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub278 = sub i64 %63, 1, !dbg !11320
  %and279 = and i64 %sub278, 512, !dbg !11320
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11320
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11320

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11320

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub283 = sub i64 %64, 1, !dbg !11320
  %and284 = and i64 %sub283, 256, !dbg !11320
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11320
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11320

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11320

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub288 = sub i64 %65, 1, !dbg !11320
  %and289 = and i64 %sub288, 128, !dbg !11320
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11320
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11320

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11320

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub293 = sub i64 %66, 1, !dbg !11320
  %and294 = and i64 %sub293, 64, !dbg !11320
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11320
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11320

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11320

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub298 = sub i64 %67, 1, !dbg !11320
  %and299 = and i64 %sub298, 32, !dbg !11320
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11320
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11320

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11320

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub303 = sub i64 %68, 1, !dbg !11320
  %and304 = and i64 %sub303, 16, !dbg !11320
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11320
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11320

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11320

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub308 = sub i64 %69, 1, !dbg !11320
  %and309 = and i64 %sub308, 8, !dbg !11320
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11320
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11320

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11320

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub313 = sub i64 %70, 1, !dbg !11320
  %and314 = and i64 %sub313, 4, !dbg !11320
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11320
  %71 = zext i1 %tobool315 to i64, !dbg !11320
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11320
  br label %cond.end, !dbg !11320

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11320
  br label %cond.end317, !dbg !11320

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11320
  br label %cond.end319, !dbg !11320

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11320
  br label %cond.end321, !dbg !11320

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11320
  br label %cond.end323, !dbg !11320

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11320
  br label %cond.end325, !dbg !11320

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11320
  br label %cond.end327, !dbg !11320

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11320
  br label %cond.end329, !dbg !11320

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11320
  br label %cond.end331, !dbg !11320

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11320
  br label %cond.end333, !dbg !11320

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11320
  br label %cond.end335, !dbg !11320

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11320
  br label %cond.end337, !dbg !11320

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11320
  br label %cond.end339, !dbg !11320

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11320
  br label %cond.end341, !dbg !11320

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11320
  br label %cond.end343, !dbg !11320

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11320
  br label %cond.end345, !dbg !11320

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11320
  br label %cond.end347, !dbg !11320

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11320
  br label %cond.end349, !dbg !11320

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11320
  br label %cond.end351, !dbg !11320

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11320
  br label %cond.end353, !dbg !11320

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11320
  br label %cond.end355, !dbg !11320

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11320
  br label %cond.end357, !dbg !11320

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11320
  br label %cond.end359, !dbg !11320

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11320
  br label %cond.end361, !dbg !11320

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11320
  br label %cond.end363, !dbg !11320

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11320
  br label %cond.end365, !dbg !11320

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11320
  br label %cond.end367, !dbg !11320

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11320
  br label %cond.end369, !dbg !11320

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11320
  br label %cond.end371, !dbg !11320

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11320
  br label %cond.end373, !dbg !11320

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11320
  br label %cond.end375, !dbg !11320

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11320
  br label %cond.end377, !dbg !11320

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11320
  br label %cond.end379, !dbg !11320

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11320
  br label %cond.end381, !dbg !11320

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11320
  br label %cond.end383, !dbg !11320

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11320
  br label %cond.end385, !dbg !11320

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11320
  br label %cond.end387, !dbg !11320

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11320
  br label %cond.end389, !dbg !11320

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11320
  br label %cond.end391, !dbg !11320

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11320
  br label %cond.end393, !dbg !11320

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11320
  br label %cond.end395, !dbg !11320

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11320
  br label %cond.end397, !dbg !11320

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11320
  br label %cond.end399, !dbg !11320

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11320
  br label %cond.end401, !dbg !11320

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11320
  br label %cond.end403, !dbg !11320

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11320
  br label %cond.end405, !dbg !11320

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11320
  br label %cond.end407, !dbg !11320

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11320
  br label %cond.end409, !dbg !11320

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11320
  br label %cond.end411, !dbg !11320

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11320
  br label %cond.end413, !dbg !11320

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11320
  br label %cond.end415, !dbg !11320

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11320
  br label %cond.end417, !dbg !11320

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11320
  br label %cond.end419, !dbg !11320

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11320
  br label %cond.end421, !dbg !11320

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11320
  br label %cond.end423, !dbg !11320

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11320
  br label %cond.end425, !dbg !11320

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11320
  br label %cond.end427, !dbg !11320

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11320
  br label %cond.end429, !dbg !11320

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11320
  br label %cond.end431, !dbg !11320

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11320
  br label %cond.end433, !dbg !11320

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11320
  br label %cond.end435, !dbg !11320

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11320
  br label %cond.end437, !dbg !11320

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11320
  br label %cond.end440, !dbg !11320

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11320

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11320
  br label %cond.end444, !dbg !11320

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11320
  %sub443 = sub i64 %72, 1, !dbg !11320
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !11320
  br label %cond.end444, !dbg !11320

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11320
  %sub446 = sub i32 %cond445, 12, !dbg !11321
  %add = add i32 %sub446, 1, !dbg !11322
  store i32 %add, i32* %retval, align 4, !dbg !11323
  br label %return, !dbg !11323

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11324
  %dec = add i64 %73, -1, !dbg !11324
  store i64 %dec, i64* %size.addr, align 8, !dbg !11324
  %74 = load i64, i64* %size.addr, align 8, !dbg !11325
  %shr = lshr i64 %74, 12, !dbg !11325
  store i64 %shr, i64* %size.addr, align 8, !dbg !11325
  %75 = load i64, i64* %size.addr, align 8, !dbg !11326
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11303
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11327
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11328
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #5, !dbg !11327, !srcloc !11329
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11327
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11330
  %add.i = add i32 %79, 1, !dbg !11331
  store i32 %add.i, i32* %retval, align 4, !dbg !11332
  br label %return, !dbg !11332

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11333
  ret i32 %80, !dbg !11333
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !11334 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11296, metadata !DIExpression()), !dbg !11338
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11302, metadata !DIExpression()), !dbg !11340
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11341, metadata !DIExpression()), !dbg !11342
  %0 = load i64, i64* %n.addr, align 8, !dbg !11343
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11340
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11344
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11345
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #5, !dbg !11344, !srcloc !11329
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11344
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11346
  %add.i = add i32 %4, 1, !dbg !11347
  %sub = sub i32 %add.i, 1, !dbg !11348
  ret i32 %sub, !dbg !11349
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !11350 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11354, metadata !DIExpression()), !dbg !11355
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11356, metadata !DIExpression()), !dbg !11357
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11358, metadata !DIExpression()), !dbg !11359
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11360, metadata !DIExpression()), !dbg !11361
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11362
  ret i8* %0, !dbg !11363
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { cold noredzone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4702}
!llvm.module.flags = !{!4703, !4704, !4705, !4706}
!llvm.ident = !{!4707}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "vt_spawn_con", scope: !2, file: !3, line: 101, type: !4696, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !150, globals: !192, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/tty/vt/keyboard.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !36, !42, !49, !57, !63, !70, !76, !85, !93, !98, !105, !138, !143}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !31, line: 26, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35}
!33 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !37, line: 44, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41}
!39 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !43, line: 343, baseType: !7, size: 32, elements: !44)
!43 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!44 = !{!45, !46, !47, !48}
!45 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!46 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!47 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!48 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!49 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !50, line: 524, baseType: !7, size: 32, elements: !51)
!50 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!51 = !{!52, !53, !54, !55, !56}
!52 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!55 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!56 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !50, line: 502, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62}
!59 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !64, line: 59, baseType: !7, size: 32, elements: !65)
!64 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!65 = !{!66, !67, !68, !69}
!66 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!67 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!68 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!69 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!70 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !71, line: 54, baseType: !7, size: 32, elements: !72)
!71 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!72 = !{!73, !74, !75}
!73 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !77, line: 296, baseType: !7, size: 32, elements: !78)
!77 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!78 = !{!79, !80, !81, !82, !83, !84}
!79 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!80 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!83 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!84 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !86, line: 9, baseType: !7, size: 32, elements: !87)
!86 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!87 = !{!88, !89, !90, !91, !92}
!88 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!92 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 10, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97}
!96 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vc_intensity", file: !99, line: 26, baseType: !7, size: 32, elements: !100)
!99 = !DIFile(filename: "./include/linux/console_struct.h", directory: "/home/lizy2001/genbc/linux")
!100 = !{!101, !102, !103, !104}
!101 = !DIEnumerator(name: "VCI_HALF_BRIGHT", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "VCI_NORMAL", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "VCI_BOLD", value: 2, isUnsigned: true)
!104 = !DIEnumerator(name: "VCI_MASK", value: 3, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 30, baseType: !107, size: 64, elements: !108)
!106 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!107 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!108 = !{!109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137}
!109 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!110 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!111 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!112 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!113 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!114 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!115 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!116 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!117 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!118 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!119 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!120 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!121 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!122 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!123 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!124 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!125 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!126 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!127 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!128 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!129 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!130 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!131 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!132 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!133 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!134 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!135 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!136 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!137 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !139, line: 651, baseType: !7, size: 32, elements: !140)
!139 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!140 = !{!141, !142}
!141 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !144, line: 305, baseType: !7, size: 32, elements: !145)
!144 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!145 = !{!146, !147, !148, !149}
!146 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!149 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!150 = !{!151, !153, !7, !154, !155, !157, !158, !159, !160, !161, !163, !165, !166, !167, !107}
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !152, line: 148, baseType: !7)
!152 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!154 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!156 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !156)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !107)
!165 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !169, line: 56, size: 1344, elements: !170)
!169 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!170 = !{!171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !168, file: !169, line: 61, baseType: !158, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !168, file: !169, line: 62, baseType: !158, size: 64, offset: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !168, file: !169, line: 63, baseType: !158, size: 64, offset: 128)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !168, file: !169, line: 64, baseType: !158, size: 64, offset: 192)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !168, file: !169, line: 65, baseType: !158, size: 64, offset: 256)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !168, file: !169, line: 66, baseType: !158, size: 64, offset: 320)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !168, file: !169, line: 68, baseType: !158, size: 64, offset: 384)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !168, file: !169, line: 69, baseType: !158, size: 64, offset: 448)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !168, file: !169, line: 70, baseType: !158, size: 64, offset: 512)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !168, file: !169, line: 71, baseType: !158, size: 64, offset: 576)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !168, file: !169, line: 72, baseType: !158, size: 64, offset: 640)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !168, file: !169, line: 73, baseType: !158, size: 64, offset: 704)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !168, file: !169, line: 74, baseType: !158, size: 64, offset: 768)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !168, file: !169, line: 75, baseType: !158, size: 64, offset: 832)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !168, file: !169, line: 76, baseType: !158, size: 64, offset: 896)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !168, file: !169, line: 81, baseType: !158, size: 64, offset: 960)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !168, file: !169, line: 83, baseType: !158, size: 64, offset: 1024)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !168, file: !169, line: 84, baseType: !158, size: 64, offset: 1088)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !168, file: !169, line: 85, baseType: !158, size: 64, offset: 1152)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !168, file: !169, line: 86, baseType: !158, size: 64, offset: 1216)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !168, file: !169, line: 87, baseType: !158, size: 64, offset: 1280)
!192 = !{!0, !193, !199, !265, !270, !272, !274, !279, !306, !309, !324, !326, !358, !379, !382, !384, !389, !394, !399, !401, !406, !408, !410, !413, !415, !4512, !4514, !4520, !4522, !4524, !4638, !4645, !4651, !4654, !4656, !4662, !4666, !4668, !4670, !4673, !4675, !4677, !4682, !4684, !4687, !4692, !4694}
!193 = !DIGlobalVariableExpression(var: !194, expr: !DIExpression())
!194 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_brl_timeout232", scope: !2, file: !3, line: 927, type: !195, isLocal: true, isDefinition: true, align: 8)
!195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 760, elements: !197)
!196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!197 = !{!198}
!198 = !DISubrange(count: 95)
!199 = !DIGlobalVariableExpression(var: !200, expr: !DIExpression())
!200 = distinct !DIGlobalVariable(name: "__param_brl_timeout", scope: !2, file: !3, line: 928, type: !201, isLocal: true, isDefinition: true, align: 64)
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !203, line: 69, size: 320, elements: !204)
!203 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!204 = !{!205, !207, !211, !230, !237, !241, !244}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 70, baseType: !206, size: 64)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !202, file: !203, line: 71, baseType: !208, size: 64, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!209 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !210, line: 76, flags: DIFlagFwdDecl)
!210 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!211 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !202, file: !203, line: 72, baseType: !212, size: 64, offset: 128)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !214)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !203, line: 47, size: 256, elements: !215)
!215 = !{!216, !217, !222, !226}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !214, file: !203, line: 49, baseType: !7, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !214, file: !203, line: 51, baseType: !218, size: 64, offset: 64)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 64)
!219 = !DISubroutineType(types: !220)
!220 = !{!165, !206, !221}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !214, file: !203, line: 53, baseType: !223, size: 64, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!224 = !DISubroutineType(types: !225)
!225 = !{!165, !155, !221}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !214, file: !203, line: 55, baseType: !227, size: 64, offset: 192)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!228 = !DISubroutineType(types: !229)
!229 = !{null, !153}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !202, file: !203, line: 73, baseType: !231, size: 16, offset: 192)
!231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !233, line: 19, baseType: !234)
!233 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !235, line: 24, baseType: !236)
!235 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!236 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 74, baseType: !238, size: 8, offset: 208)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !233, line: 16, baseType: !239)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !235, line: 20, baseType: !240)
!240 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !202, file: !203, line: 75, baseType: !242, size: 8, offset: 216)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !233, line: 17, baseType: !243)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !235, line: 21, baseType: !154)
!244 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !203, line: 76, baseType: !245, size: 64, offset: 256)
!245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !202, file: !203, line: 76, size: 64, elements: !246)
!246 = !{!247, !248, !255}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !245, file: !203, line: 77, baseType: !153, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !245, file: !203, line: 78, baseType: !249, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !251)
!251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !203, line: 86, size: 128, elements: !252)
!252 = !{!253, !254}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !251, file: !203, line: 87, baseType: !7, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !251, file: !203, line: 88, baseType: !155, size: 64, offset: 64)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !245, file: !203, line: 79, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !258)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !203, line: 92, size: 256, elements: !259)
!259 = !{!260, !261, !262, !263, !264}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !258, file: !203, line: 94, baseType: !7, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !258, file: !203, line: 95, baseType: !7, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !258, file: !203, line: 96, baseType: !159, size: 64, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !258, file: !203, line: 97, baseType: !212, size: 64, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !258, file: !203, line: 98, baseType: !153, size: 64, offset: 192)
!265 = !DIGlobalVariableExpression(var: !266, expr: !DIExpression())
!266 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_brl_timeouttype233", scope: !2, file: !3, line: 928, type: !267, isLocal: true, isDefinition: true, align: 8)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 280, elements: !268)
!268 = !{!269}
!269 = !DISubrange(count: 35)
!270 = !DIGlobalVariableExpression(var: !271, expr: !DIExpression())
!271 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_brl_nbchords234", scope: !2, file: !3, line: 931, type: !195, isLocal: true, isDefinition: true, align: 8)
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(name: "__param_brl_nbchords", scope: !2, file: !3, line: 932, type: !201, isLocal: true, isDefinition: true, align: 64)
!274 = !DIGlobalVariableExpression(var: !275, expr: !DIExpression())
!275 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_brl_nbchordstype235", scope: !2, file: !3, line: 932, type: !276, isLocal: true, isDefinition: true, align: 8)
!276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 288, elements: !277)
!277 = !{!278}
!278 = !DISubrange(count: 36)
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "keyboard_tasklet", scope: !2, file: !3, line: 1245, type: !281, isLocal: false, isDefinition: true)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !139, line: 609, size: 320, elements: !282)
!282 = !{!283, !285, !286, !291, !294, !305}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !281, file: !139, line: 611, baseType: !284, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !281, file: !139, line: 612, baseType: !158, size: 64, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !281, file: !139, line: 613, baseType: !287, size: 32, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !152, line: 168, baseType: !288)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !152, line: 166, size: 32, elements: !289)
!289 = !{!290}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !288, file: !152, line: 167, baseType: !165, size: 32)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !281, file: !139, line: 614, baseType: !292, size: 8, offset: 160)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !152, line: 30, baseType: !293)
!293 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!294 = !DIDerivedType(tag: DW_TAG_member, scope: !281, file: !139, line: 615, baseType: !295, size: 64, offset: 192)
!295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !281, file: !139, line: 615, size: 64, elements: !296)
!296 = !{!297, !301}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !295, file: !139, line: 616, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = !DISubroutineType(types: !300)
!300 = !{null, !158}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !295, file: !139, line: 617, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DISubroutineType(types: !304)
!304 = !{null, !284}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !281, file: !139, line: 619, baseType: !158, size: 64, offset: 256)
!306 = !DIGlobalVariableExpression(var: !307, expr: !DIExpression(DW_OP_constu, 15, DW_OP_stack_value))
!307 = distinct !DIGlobalVariable(name: "NR_TYPES", scope: !2, file: !3, line: 122, type: !308, isLocal: true, isDefinition: true)
!308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(name: "kbd_table", scope: !2, file: !3, line: 112, type: !311, isLocal: true, isDefinition: true)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 2520, elements: !322)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbd_struct", file: !313, line: 25, size: 40, elements: !314)
!313 = !DIFile(filename: "./include/linux/kbd_kern.h", directory: "/home/lizy2001/genbc/linux")
!314 = !{!315, !316, !317, !318, !319, !320, !321}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "lockstate", scope: !312, file: !313, line: 27, baseType: !154, size: 8)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "slockstate", scope: !312, file: !313, line: 38, baseType: !154, size: 8, offset: 8)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "ledmode", scope: !312, file: !313, line: 40, baseType: !154, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "ledflagstate", scope: !312, file: !313, line: 44, baseType: !154, size: 4, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "default_ledflagstate", scope: !312, file: !313, line: 45, baseType: !154, size: 4, offset: 24, flags: DIFlagBitField, extraData: i64 24)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "kbdmode", scope: !312, file: !313, line: 51, baseType: !154, size: 3, offset: 28, flags: DIFlagBitField, extraData: i64 24)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "modeflags", scope: !312, file: !313, line: 58, baseType: !154, size: 5, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!322 = !{!323}
!323 = !DISubrange(count: 63)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "ledioctl", scope: !2, file: !3, line: 142, type: !154, isLocal: true, isDefinition: true)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "keyboard_notifier_list", scope: !2, file: !3, line: 147, type: !328, isLocal: true, isDefinition: true)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "atomic_notifier_head", file: !329, line: 60, size: 64, elements: !330)
!329 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!330 = !{!331, !347}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !328, file: !329, line: 61, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !333, line: 83, baseType: !334)
!333 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !333, line: 71, elements: !335)
!335 = !{!336}
!336 = !DIDerivedType(tag: DW_TAG_member, scope: !334, file: !333, line: 72, baseType: !337)
!337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !334, file: !333, line: 72, elements: !338)
!338 = !{!339}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !337, file: !333, line: 73, baseType: !340)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !333, line: 20, elements: !341)
!341 = !{!342}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !340, file: !333, line: 21, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !344, line: 25, baseType: !345)
!344 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !344, line: 25, elements: !346)
!346 = !{}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !328, file: !329, line: 62, baseType: !348, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !329, line: 54, size: 192, elements: !350)
!350 = !{!351, !356, !357}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !349, file: !329, line: 55, baseType: !352, size: 64)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !329, line: 51, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DISubroutineType(types: !355)
!355 = !{!165, !348, !158, !153}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !349, file: !329, line: 56, baseType: !348, size: 64, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !349, file: !329, line: 57, baseType: !165, size: 32, offset: 128)
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "kd_mksound_timer", scope: !2, file: !3, line: 260, type: !360, isLocal: true, isDefinition: true)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !361, line: 11, size: 320, elements: !362)
!361 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!362 = !{!363, !370, !371, !376}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !360, file: !361, line: 16, baseType: !364, size: 128)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !152, line: 186, size: 128, elements: !365)
!365 = !{!366, !368}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !364, file: !152, line: 187, baseType: !367, size: 64)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !364, file: !152, line: 187, baseType: !369, size: 64, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !360, file: !361, line: 17, baseType: !158, size: 64, offset: 128)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !360, file: !361, line: 18, baseType: !372, size: 64, offset: 192)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = !DISubroutineType(types: !374)
!374 = !{null, !375}
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !360, file: !361, line: 19, baseType: !377, size: 32, offset: 256)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !233, line: 21, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !235, line: 27, baseType: !7)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "zero", scope: !381, file: !3, line: 255, type: !7, isLocal: true, isDefinition: true)
!381 = distinct !DISubprogram(name: "kd_nosound", scope: !3, file: !3, line: 253, type: !373, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!382 = !DIGlobalVariableExpression(var: !383, expr: !DIExpression())
!383 = distinct !DIGlobalVariable(name: "kbd_event_lock", scope: !2, file: !3, line: 125, type: !332, isLocal: true, isDefinition: true)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(name: "shift_down", scope: !2, file: !3, line: 129, type: !386, isLocal: true, isDefinition: true)
!386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 72, elements: !387)
!387 = !{!388}
!388 = !DISubrange(count: 9)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "key_down", scope: !2, file: !3, line: 128, type: !391, isLocal: true, isDefinition: true)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 768, elements: !392)
!392 = !{!393}
!393 = !DISubrange(count: 12)
!394 = !DIGlobalVariableExpression(var: !395, expr: !DIExpression())
!395 = distinct !DIGlobalVariable(name: "__param_str_brl_timeout", scope: !2, file: !3, line: 928, type: !396, isLocal: true, isDefinition: true)
!396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 168, elements: !397)
!397 = !{!398}
!398 = !DISubrange(count: 21)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "brl_timeout", scope: !2, file: !3, line: 926, type: !7, isLocal: true, isDefinition: true)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "__param_str_brl_nbchords", scope: !2, file: !3, line: 932, type: !403, isLocal: true, isDefinition: true)
!403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 176, elements: !404)
!404 = !{!405}
!405 = !DISubrange(count: 22)
!406 = !DIGlobalVariableExpression(var: !407, expr: !DIExpression())
!407 = distinct !DIGlobalVariable(name: "brl_nbchords", scope: !2, file: !3, line: 930, type: !7, isLocal: true, isDefinition: true)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "led_lock", scope: !2, file: !3, line: 126, type: !332, isLocal: true, isDefinition: true)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "kbd", scope: !2, file: !3, line: 113, type: !412, isLocal: true, isDefinition: true)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "ledstate", scope: !2, file: !3, line: 141, type: !7, isLocal: true, isDefinition: true)
!415 = !DIGlobalVariableExpression(var: !416, expr: !DIExpression())
!416 = distinct !DIGlobalVariable(name: "kbd_handler", scope: !2, file: !3, line: 1609, type: !417, isLocal: true, isDefinition: true)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handler", file: !418, line: 302, size: 960, elements: !419)
!418 = !DIFile(filename: "./include/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!419 = !{!420, !421, !4460, !4466, !4470, !4474, !4501, !4505, !4506, !4507, !4508, !4509, !4510, !4511}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !417, file: !418, line: 304, baseType: !153, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !417, file: !418, line: 306, baseType: !422, size: 64, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DISubroutineType(types: !424)
!424 = !{null, !425, !7, !7, !165}
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handle", file: !418, line: 337, size: 576, elements: !427)
!427 = !{!428, !429, !430, !431, !4456, !4458, !4459}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !426, file: !418, line: 339, baseType: !153, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !426, file: !418, line: 341, baseType: !165, size: 32, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !426, file: !418, line: 342, baseType: !206, size: 64, offset: 128)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !426, file: !418, line: 344, baseType: !432, size: 64, offset: 192)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev", file: !418, line: 131, size: 10432, elements: !434)
!434 = !{!435, !436, !437, !438, !446, !450, !451, !452, !453, !454, !455, !456, !457, !461, !462, !463, !464, !465, !466, !482, !487, !4396, !4399, !4400, !4401, !4403, !4406, !4416, !4417, !4418, !4419, !4420, !4424, !4428, !4432, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4453, !4454}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !433, file: !418, line: 132, baseType: !206, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !433, file: !418, line: 133, baseType: !206, size: 64, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "uniq", scope: !433, file: !418, line: 134, baseType: !206, size: 64, offset: 128)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !433, file: !418, line: 135, baseType: !439, size: 64, offset: 192)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_id", file: !440, line: 59, size: 64, elements: !441)
!440 = !DIFile(filename: "./include/uapi/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!441 = !{!442, !443, !444, !445}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !439, file: !440, line: 60, baseType: !234, size: 16)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !439, file: !440, line: 61, baseType: !234, size: 16, offset: 16)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !439, file: !440, line: 62, baseType: !234, size: 16, offset: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !439, file: !440, line: 63, baseType: !234, size: 16, offset: 48)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !433, file: !418, line: 137, baseType: !447, size: 64, offset: 256)
!447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 64, elements: !448)
!448 = !{!449}
!449 = !DISubrange(count: 1)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !433, file: !418, line: 139, baseType: !447, size: 64, offset: 320)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !433, file: !418, line: 140, baseType: !391, size: 768, offset: 384)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !433, file: !418, line: 141, baseType: !447, size: 64, offset: 1152)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !433, file: !418, line: 142, baseType: !447, size: 64, offset: 1216)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !433, file: !418, line: 143, baseType: !447, size: 64, offset: 1280)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !433, file: !418, line: 144, baseType: !447, size: 64, offset: 1344)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !433, file: !418, line: 145, baseType: !447, size: 64, offset: 1408)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !433, file: !418, line: 146, baseType: !458, size: 128, offset: 1472)
!458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 128, elements: !459)
!459 = !{!460}
!460 = !DISubrange(count: 2)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !433, file: !418, line: 147, baseType: !447, size: 64, offset: 1600)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "hint_events_per_packet", scope: !433, file: !418, line: 149, baseType: !7, size: 32, offset: 1664)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "keycodemax", scope: !433, file: !418, line: 151, baseType: !7, size: 32, offset: 1696)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "keycodesize", scope: !433, file: !418, line: 152, baseType: !7, size: 32, offset: 1728)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !433, file: !418, line: 153, baseType: !153, size: 64, offset: 1792)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "setkeycode", scope: !433, file: !418, line: 155, baseType: !467, size: 64, offset: 1856)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DISubroutineType(types: !469)
!469 = !{!165, !432, !470, !159}
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_keymap_entry", file: !440, line: 114, size: 320, elements: !473)
!473 = !{!474, !475, !476, !477, !478}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !472, file: !440, line: 116, baseType: !243, size: 8)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !472, file: !440, line: 117, baseType: !243, size: 8, offset: 8)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !472, file: !440, line: 118, baseType: !234, size: 16, offset: 16)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !472, file: !440, line: 119, baseType: !378, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "scancode", scope: !472, file: !440, line: 120, baseType: !479, size: 256, offset: 64)
!479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 256, elements: !480)
!480 = !{!481}
!481 = !DISubrange(count: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "getkeycode", scope: !433, file: !418, line: 158, baseType: !483, size: 64, offset: 1920)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DISubroutineType(types: !485)
!485 = !{!165, !432, !486}
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "ff", scope: !433, file: !418, line: 161, baseType: !488, size: 64, offset: 1984)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_device", file: !418, line: 534, size: 896, elements: !490)
!490 = !{!491, !560, !564, !568, !572, !573, !577, !578, !579, !600, !601, !602}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "upload", scope: !489, file: !418, line: 535, baseType: !492, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!165, !432, !495, !495}
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_effect", file: !440, line: 450, size: 384, elements: !497)
!497 = !{!498, !499, !502, !503, !508, !513}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !496, file: !440, line: 451, baseType: !234, size: 16)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !496, file: !440, line: 452, baseType: !500, size: 16, offset: 16)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !235, line: 23, baseType: !501)
!501 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !496, file: !440, line: 453, baseType: !234, size: 16, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !496, file: !440, line: 454, baseType: !504, size: 32, offset: 48)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_trigger", file: !440, line: 316, size: 32, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !504, file: !440, line: 317, baseType: !234, size: 16)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !504, file: !440, line: 318, baseType: !234, size: 16, offset: 16)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !496, file: !440, line: 455, baseType: !509, size: 32, offset: 80)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_replay", file: !440, line: 306, size: 32, elements: !510)
!510 = !{!511, !512}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !509, file: !440, line: 307, baseType: !234, size: 16)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !509, file: !440, line: 308, baseType: !234, size: 16, offset: 16)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !496, file: !440, line: 463, baseType: !514, size: 256, offset: 128)
!514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !496, file: !440, line: 457, size: 256, elements: !515)
!515 = !{!516, !527, !533, !545, !555}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !514, file: !440, line: 458, baseType: !517, size: 80)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_constant_effect", file: !440, line: 345, size: 80, elements: !518)
!518 = !{!519, !520}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !517, file: !440, line: 346, baseType: !500, size: 16)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !517, file: !440, line: 347, baseType: !521, size: 64, offset: 16)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_envelope", file: !440, line: 333, size: 64, elements: !522)
!522 = !{!523, !524, !525, !526}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "attack_length", scope: !521, file: !440, line: 334, baseType: !234, size: 16)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "attack_level", scope: !521, file: !440, line: 335, baseType: !234, size: 16, offset: 16)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "fade_length", scope: !521, file: !440, line: 336, baseType: !234, size: 16, offset: 32)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "fade_level", scope: !521, file: !440, line: 337, baseType: !234, size: 16, offset: 48)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "ramp", scope: !514, file: !440, line: 459, baseType: !528, size: 96)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_ramp_effect", file: !440, line: 356, size: 96, elements: !529)
!529 = !{!530, !531, !532}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "start_level", scope: !528, file: !440, line: 357, baseType: !500, size: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "end_level", scope: !528, file: !440, line: 358, baseType: !500, size: 16, offset: 16)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !528, file: !440, line: 359, baseType: !521, size: 64, offset: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "periodic", scope: !514, file: !440, line: 460, baseType: !534, size: 256)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_periodic_effect", file: !440, line: 401, size: 256, elements: !535)
!535 = !{!536, !537, !538, !539, !540, !541, !542, !543}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "waveform", scope: !534, file: !440, line: 402, baseType: !234, size: 16)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !534, file: !440, line: 403, baseType: !234, size: 16, offset: 16)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "magnitude", scope: !534, file: !440, line: 404, baseType: !500, size: 16, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !534, file: !440, line: 405, baseType: !500, size: 16, offset: 48)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !534, file: !440, line: 406, baseType: !234, size: 16, offset: 64)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !534, file: !440, line: 408, baseType: !521, size: 64, offset: 80)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "custom_len", scope: !534, file: !440, line: 410, baseType: !378, size: 32, offset: 160)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !534, file: !440, line: 411, baseType: !544, size: 64, offset: 192)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !514, file: !440, line: 461, baseType: !546, size: 192)
!546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !547, size: 192, elements: !459)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_condition_effect", file: !440, line: 372, size: 96, elements: !548)
!548 = !{!549, !550, !551, !552, !553, !554}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "right_saturation", scope: !547, file: !440, line: 373, baseType: !234, size: 16)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "left_saturation", scope: !547, file: !440, line: 374, baseType: !234, size: 16, offset: 16)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "right_coeff", scope: !547, file: !440, line: 376, baseType: !500, size: 16, offset: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "left_coeff", scope: !547, file: !440, line: 377, baseType: !500, size: 16, offset: 48)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "deadband", scope: !547, file: !440, line: 379, baseType: !234, size: 16, offset: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !547, file: !440, line: 380, baseType: !500, size: 16, offset: 80)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "rumble", scope: !514, file: !440, line: 462, baseType: !556, size: 32)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_rumble_effect", file: !440, line: 422, size: 32, elements: !557)
!557 = !{!558, !559}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "strong_magnitude", scope: !556, file: !440, line: 423, baseType: !234, size: 16)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "weak_magnitude", scope: !556, file: !440, line: 424, baseType: !234, size: 16, offset: 16)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "erase", scope: !489, file: !418, line: 537, baseType: !561, size: 64, offset: 64)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DISubroutineType(types: !563)
!563 = !{!165, !432, !165}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "playback", scope: !489, file: !418, line: 539, baseType: !565, size: 64, offset: 128)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DISubroutineType(types: !567)
!567 = !{!165, !432, !165, !165}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "set_gain", scope: !489, file: !418, line: 540, baseType: !569, size: 64, offset: 192)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DISubroutineType(types: !571)
!571 = !{null, !432, !232}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "set_autocenter", scope: !489, file: !418, line: 541, baseType: !569, size: 64, offset: 256)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !489, file: !418, line: 543, baseType: !574, size: 64, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{null, !488}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !489, file: !418, line: 545, baseType: !153, size: 64, offset: 384)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !489, file: !418, line: 547, baseType: !458, size: 128, offset: 448)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !489, file: !418, line: 549, baseType: !580, size: 192, offset: 576)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !581, line: 53, size: 192, elements: !582)
!581 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!582 = !{!583, !593, !594}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !580, file: !581, line: 54, baseType: !584, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !585, line: 13, baseType: !586)
!585 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !152, line: 175, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !152, line: 173, size: 64, elements: !588)
!588 = !{!589}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !587, file: !152, line: 174, baseType: !590, size: 64)
!590 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !233, line: 22, baseType: !591)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !235, line: 30, baseType: !592)
!592 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !580, file: !581, line: 55, baseType: !332, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !580, file: !581, line: 59, baseType: !595, size: 128, offset: 64)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !152, line: 178, size: 128, elements: !596)
!596 = !{!597, !599}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !595, file: !152, line: 179, baseType: !598, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !595, file: !152, line: 179, baseType: !598, size: 64, offset: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "max_effects", scope: !489, file: !418, line: 551, baseType: !165, size: 32, offset: 768)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "effects", scope: !489, file: !418, line: 552, baseType: !495, size: 64, offset: 832)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "effect_owners", scope: !489, file: !418, line: 553, baseType: !603, offset: 896)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !604, elements: !3016)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !77, line: 916, size: 1856, align: 32, elements: !606)
!606 = !{!607, !625, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4379, !4380, !4389, !4390, !4391, !4392, !4393, !4394, !4395}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !605, file: !77, line: 920, baseType: !608, size: 128)
!608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !605, file: !77, line: 917, size: 128, elements: !609)
!609 = !{!610, !616}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !608, file: !77, line: 918, baseType: !611, size: 64)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !612, line: 58, size: 64, elements: !613)
!612 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!613 = !{!614}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !611, file: !612, line: 59, baseType: !615, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !608, file: !77, line: 919, baseType: !617, size: 128, align: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !152, line: 216, size: 128, align: 64, elements: !618)
!618 = !{!619, !621}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !617, file: !152, line: 217, baseType: !620, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !617, file: !152, line: 218, baseType: !622, size: 64, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DISubroutineType(types: !624)
!624 = !{null, !620}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !605, file: !77, line: 921, baseType: !626, size: 128, offset: 128)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !627, line: 8, size: 128, elements: !628)
!627 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!628 = !{!629, !633}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !626, file: !627, line: 9, baseType: !630, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !632, line: 18, flags: DIFlagFwdDecl)
!632 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!633 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !626, file: !627, line: 10, baseType: !634, size: 64, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !632, line: 89, size: 1536, elements: !636)
!636 = !{!637, !638, !648, !656, !657, !675, !4329, !4331, !4343, !4344, !4345, !4346, !4347, !4353, !4354, !4355}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !635, file: !632, line: 91, baseType: !7, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !635, file: !632, line: 92, baseType: !639, size: 32, offset: 32)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !640, line: 277, baseType: !641)
!640 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !640, line: 277, size: 32, elements: !642)
!642 = !{!643}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !641, file: !640, line: 277, baseType: !644, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !640, line: 70, baseType: !645)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !640, line: 65, size: 32, elements: !646)
!646 = !{!647}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !645, file: !640, line: 66, baseType: !7, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !635, file: !632, line: 93, baseType: !649, size: 128, offset: 64)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !650, line: 38, size: 128, elements: !651)
!650 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!651 = !{!652, !654}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !649, file: !650, line: 39, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !649, file: !650, line: 39, baseType: !655, size: 64, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !635, file: !632, line: 94, baseType: !634, size: 64, offset: 192)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !635, file: !632, line: 95, baseType: !658, size: 128, offset: 256)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !632, line: 47, size: 128, elements: !659)
!659 = !{!660, !672}
!660 = !DIDerivedType(tag: DW_TAG_member, scope: !658, file: !632, line: 48, baseType: !661, size: 64)
!661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !658, file: !632, line: 48, size: 64, elements: !662)
!662 = !{!663, !668}
!663 = !DIDerivedType(tag: DW_TAG_member, scope: !661, file: !632, line: 49, baseType: !664, size: 64)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !661, file: !632, line: 49, size: 64, elements: !665)
!665 = !{!666, !667}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !664, file: !632, line: 50, baseType: !377, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !664, file: !632, line: 50, baseType: !377, size: 32, offset: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !661, file: !632, line: 52, baseType: !669, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !233, line: 23, baseType: !670)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !235, line: 31, baseType: !671)
!671 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !658, file: !632, line: 54, baseType: !673, size: 64, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !154)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !635, file: !632, line: 96, baseType: !676, size: 64, offset: 384)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !77, line: 610, size: 4224, elements: !678)
!678 = !{!679, !681, !682, !691, !698, !699, !846, !4264, !4265, !4266, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4307, !4315, !4316, !4317, !4325, !4326, !4327, !4328}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !677, file: !77, line: 611, baseType: !680, size: 16)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !152, line: 19, baseType: !236)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !677, file: !77, line: 612, baseType: !236, size: 16, offset: 16)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !677, file: !77, line: 613, baseType: !683, size: 32, offset: 32)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !684, line: 23, baseType: !685)
!684 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !684, line: 21, size: 32, elements: !686)
!686 = !{!687}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !685, file: !684, line: 22, baseType: !688, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !152, line: 32, baseType: !689)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !690, line: 49, baseType: !7)
!690 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!691 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !677, file: !77, line: 614, baseType: !692, size: 32, offset: 64)
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !684, line: 28, baseType: !693)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !684, line: 26, size: 32, elements: !694)
!694 = !{!695}
!695 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !693, file: !684, line: 27, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !152, line: 33, baseType: !697)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !690, line: 50, baseType: !7)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !677, file: !77, line: 615, baseType: !7, size: 32, offset: 96)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !677, file: !77, line: 622, baseType: !700, size: 64, offset: 128)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !77, line: 1864, size: 1536, align: 512, elements: !703)
!703 = !{!704, !708, !718, !722, !728, !732, !736, !740, !744, !748, !752, !753, !759, !763, !787, !816, !826, !832, !837, !841, !842}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !702, file: !77, line: 1865, baseType: !705, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DISubroutineType(types: !707)
!707 = !{!634, !676, !634, !7}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !702, file: !77, line: 1866, baseType: !709, size: 64, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DISubroutineType(types: !711)
!711 = !{!206, !634, !676, !712}
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !714, line: 10, size: 128, elements: !715)
!714 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!715 = !{!716, !717}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !713, file: !714, line: 11, baseType: !227, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !713, file: !714, line: 12, baseType: !153, size: 64, offset: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !702, file: !77, line: 1867, baseType: !719, size: 64, offset: 128)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DISubroutineType(types: !721)
!721 = !{!165, !676, !165}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !702, file: !77, line: 1868, baseType: !723, size: 64, offset: 192)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DISubroutineType(types: !725)
!725 = !{!726, !676, !165}
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !77, line: 581, flags: DIFlagFwdDecl)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !702, file: !77, line: 1870, baseType: !729, size: 64, offset: 256)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{!165, !634, !155, !165}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !702, file: !77, line: 1872, baseType: !733, size: 64, offset: 320)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!165, !676, !634, !680, !292}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !702, file: !77, line: 1873, baseType: !737, size: 64, offset: 384)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{!165, !634, !676, !634}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !702, file: !77, line: 1874, baseType: !741, size: 64, offset: 448)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DISubroutineType(types: !743)
!743 = !{!165, !676, !634}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !702, file: !77, line: 1875, baseType: !745, size: 64, offset: 512)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DISubroutineType(types: !747)
!747 = !{!165, !676, !634, !206}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !702, file: !77, line: 1876, baseType: !749, size: 64, offset: 576)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DISubroutineType(types: !751)
!751 = !{!165, !676, !634, !680}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !702, file: !77, line: 1877, baseType: !741, size: 64, offset: 640)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !702, file: !77, line: 1878, baseType: !754, size: 64, offset: 704)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DISubroutineType(types: !756)
!756 = !{!165, !676, !634, !680, !757}
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !152, line: 16, baseType: !758)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !152, line: 13, baseType: !377)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !702, file: !77, line: 1879, baseType: !760, size: 64, offset: 768)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DISubroutineType(types: !762)
!762 = !{!165, !676, !634, !676, !634, !7}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !702, file: !77, line: 1881, baseType: !764, size: 64, offset: 832)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DISubroutineType(types: !766)
!766 = !{!165, !634, !767}
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !77, line: 219, size: 640, elements: !769)
!769 = !{!770, !771, !772, !773, !774, !777, !784, !785, !786}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !768, file: !77, line: 220, baseType: !7, size: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !768, file: !77, line: 221, baseType: !680, size: 16, offset: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !768, file: !77, line: 222, baseType: !683, size: 32, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !768, file: !77, line: 223, baseType: !692, size: 32, offset: 96)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !768, file: !77, line: 224, baseType: !775, size: 64, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !152, line: 46, baseType: !776)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !690, line: 88, baseType: !592)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !768, file: !77, line: 225, baseType: !778, size: 128, offset: 192)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !779, line: 13, size: 128, elements: !780)
!779 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!780 = !{!781, !783}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !778, file: !779, line: 14, baseType: !782, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !779, line: 8, baseType: !591)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !778, file: !779, line: 15, baseType: !107, size: 64, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !768, file: !77, line: 226, baseType: !778, size: 128, offset: 320)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !768, file: !77, line: 227, baseType: !778, size: 128, offset: 448)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !768, file: !77, line: 234, baseType: !604, size: 64, offset: 576)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !702, file: !77, line: 1882, baseType: !788, size: 64, offset: 896)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{!165, !791, !793, !377, !7}
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !626)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !795, line: 22, size: 1152, elements: !796)
!795 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!796 = !{!797, !798, !799, !800, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !794, file: !795, line: 23, baseType: !377, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !794, file: !795, line: 24, baseType: !680, size: 16, offset: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !794, file: !795, line: 25, baseType: !7, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !794, file: !795, line: 26, baseType: !801, size: 32, offset: 96)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !152, line: 104, baseType: !377)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !794, file: !795, line: 27, baseType: !669, size: 64, offset: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !794, file: !795, line: 28, baseType: !669, size: 64, offset: 192)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !794, file: !795, line: 37, baseType: !669, size: 64, offset: 256)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !794, file: !795, line: 38, baseType: !757, size: 32, offset: 320)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !794, file: !795, line: 39, baseType: !757, size: 32, offset: 352)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !794, file: !795, line: 40, baseType: !683, size: 32, offset: 384)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !794, file: !795, line: 41, baseType: !692, size: 32, offset: 416)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !794, file: !795, line: 42, baseType: !775, size: 64, offset: 448)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !794, file: !795, line: 43, baseType: !778, size: 128, offset: 512)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !794, file: !795, line: 44, baseType: !778, size: 128, offset: 640)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !794, file: !795, line: 45, baseType: !778, size: 128, offset: 768)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !794, file: !795, line: 46, baseType: !778, size: 128, offset: 896)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !794, file: !795, line: 47, baseType: !669, size: 64, offset: 1024)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !794, file: !795, line: 48, baseType: !669, size: 64, offset: 1088)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !702, file: !77, line: 1883, baseType: !817, size: 64, offset: 960)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DISubroutineType(types: !819)
!819 = !{!820, !634, !155, !823}
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !152, line: 60, baseType: !821)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !690, line: 73, baseType: !822)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !690, line: 15, baseType: !107)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !152, line: 55, baseType: !824)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !690, line: 72, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !690, line: 16, baseType: !158)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !702, file: !77, line: 1884, baseType: !827, size: 64, offset: 1024)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!165, !676, !830, !669, !669}
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !77, line: 50, flags: DIFlagFwdDecl)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !702, file: !77, line: 1886, baseType: !833, size: 64, offset: 1088)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{!165, !676, !836, !165}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !702, file: !77, line: 1887, baseType: !838, size: 64, offset: 1152)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!165, !676, !634, !604, !7, !680}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !702, file: !77, line: 1890, baseType: !749, size: 64, offset: 1216)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !702, file: !77, line: 1891, baseType: !843, size: 64, offset: 1280)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DISubroutineType(types: !845)
!845 = !{!165, !676, !726, !165}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !677, file: !77, line: 623, baseType: !847, size: 64, offset: 192)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !77, line: 1416, size: 9472, elements: !849)
!849 = !{!850, !851, !852, !853, !854, !855, !898, !3873, !3955, !4038, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4054, !4058, !4059, !4062, !4063, !4066, !4067, !4068, !4109, !4135, !4136, !4137, !4138, !4139, !4140, !4143, !4144, !4151, !4152, !4154, !4155, !4156, !4215, !4216, !4231, !4232, !4233, !4234, !4235, !4238, !4239, !4240, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !848, file: !77, line: 1417, baseType: !595, size: 128)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !848, file: !77, line: 1418, baseType: !757, size: 32, offset: 128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !848, file: !77, line: 1419, baseType: !154, size: 8, offset: 160)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !848, file: !77, line: 1420, baseType: !158, size: 64, offset: 192)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !848, file: !77, line: 1421, baseType: !775, size: 64, offset: 256)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !848, file: !77, line: 1422, baseType: !856, size: 64, offset: 320)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !77, line: 2228, size: 576, elements: !858)
!858 = !{!859, !860, !861, !868, !872, !876, !880, !881, !882, !886, !889, !890, !891, !895, !896, !897}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !857, file: !77, line: 2229, baseType: !206, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !857, file: !77, line: 2230, baseType: !165, size: 32, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !857, file: !77, line: 2238, baseType: !862, size: 64, offset: 128)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{!165, !865}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !867, line: 28, flags: DIFlagFwdDecl)
!867 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!868 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !857, file: !77, line: 2239, baseType: !869, size: 64, offset: 192)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !871)
!871 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !77, line: 70, flags: DIFlagFwdDecl)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !857, file: !77, line: 2240, baseType: !873, size: 64, offset: 256)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{!634, !856, !165, !206, !153}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !857, file: !77, line: 2242, baseType: !877, size: 64, offset: 320)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DISubroutineType(types: !879)
!879 = !{null, !847}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !857, file: !77, line: 2243, baseType: !208, size: 64, offset: 384)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !857, file: !77, line: 2244, baseType: !856, size: 64, offset: 448)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !857, file: !77, line: 2245, baseType: !883, size: 64, offset: 512)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !152, line: 182, size: 64, elements: !884)
!884 = !{!885}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !883, file: !152, line: 183, baseType: !367, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !857, file: !77, line: 2247, baseType: !887, offset: 576)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !888, line: 187, elements: !346)
!888 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!889 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !857, file: !77, line: 2248, baseType: !887, offset: 576)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !857, file: !77, line: 2249, baseType: !887, offset: 576)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !857, file: !77, line: 2250, baseType: !892, offset: 576)
!892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !887, elements: !893)
!893 = !{!894}
!894 = !DISubrange(count: 3)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !857, file: !77, line: 2252, baseType: !887, offset: 576)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !857, file: !77, line: 2253, baseType: !887, offset: 576)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !857, file: !77, line: 2254, baseType: !887, offset: 576)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !848, file: !77, line: 1423, baseType: !899, size: 64, offset: 384)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !901)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !77, line: 1935, size: 1472, elements: !902)
!902 = !{!903, !907, !911, !912, !916, !922, !926, !927, !928, !932, !936, !937, !938, !939, !945, !950, !951, !994, !995, !996, !997, !3857, !3872}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !901, file: !77, line: 1936, baseType: !904, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!676, !847}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !901, file: !77, line: 1937, baseType: !908, size: 64, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{null, !676}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !901, file: !77, line: 1938, baseType: !908, size: 64, offset: 128)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !901, file: !77, line: 1940, baseType: !913, size: 64, offset: 192)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{null, !676, !165}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !901, file: !77, line: 1941, baseType: !917, size: 64, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!165, !676, !920}
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !77, line: 289, flags: DIFlagFwdDecl)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !901, file: !77, line: 1942, baseType: !923, size: 64, offset: 320)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{!165, !676}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !901, file: !77, line: 1943, baseType: !908, size: 64, offset: 384)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !901, file: !77, line: 1944, baseType: !877, size: 64, offset: 448)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !901, file: !77, line: 1945, baseType: !929, size: 64, offset: 512)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!165, !847, !165}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !901, file: !77, line: 1946, baseType: !933, size: 64, offset: 576)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DISubroutineType(types: !935)
!935 = !{!165, !847}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !901, file: !77, line: 1947, baseType: !933, size: 64, offset: 640)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !901, file: !77, line: 1948, baseType: !933, size: 64, offset: 704)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !901, file: !77, line: 1949, baseType: !933, size: 64, offset: 768)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !901, file: !77, line: 1950, baseType: !940, size: 64, offset: 832)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!165, !634, !943}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !77, line: 57, flags: DIFlagFwdDecl)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !901, file: !77, line: 1951, baseType: !946, size: 64, offset: 896)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{!165, !847, !949, !155}
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !901, file: !77, line: 1952, baseType: !877, size: 64, offset: 960)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !901, file: !77, line: 1954, baseType: !952, size: 64, offset: 1024)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DISubroutineType(types: !954)
!954 = !{!165, !955, !634}
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !957, line: 16, size: 896, elements: !958)
!957 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!958 = !{!959, !960, !961, !962, !963, !964, !965, !966, !967, !989, !990, !993}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !956, file: !957, line: 17, baseType: !155, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !956, file: !957, line: 18, baseType: !823, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !956, file: !957, line: 19, baseType: !823, size: 64, offset: 128)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !956, file: !957, line: 20, baseType: !823, size: 64, offset: 192)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !956, file: !957, line: 21, baseType: !823, size: 64, offset: 256)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !956, file: !957, line: 22, baseType: !775, size: 64, offset: 320)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !956, file: !957, line: 23, baseType: !775, size: 64, offset: 384)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !956, file: !957, line: 24, baseType: !580, size: 192, offset: 448)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !956, file: !957, line: 25, baseType: !968, size: 64, offset: 640)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !957, line: 31, size: 256, elements: !971)
!971 = !{!972, !977, !981, !985}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !970, file: !957, line: 32, baseType: !973, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{!153, !955, !976}
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !970, file: !957, line: 33, baseType: !978, size: 64, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{null, !955, !153}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !970, file: !957, line: 34, baseType: !982, size: 64, offset: 128)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DISubroutineType(types: !984)
!984 = !{!153, !955, !153, !976}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !970, file: !957, line: 35, baseType: !986, size: 64, offset: 192)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DISubroutineType(types: !988)
!988 = !{!165, !955, !153}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !956, file: !957, line: 26, baseType: !165, size: 32, offset: 704)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !956, file: !957, line: 27, baseType: !991, size: 64, offset: 768)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !605)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !956, file: !957, line: 28, baseType: !153, size: 64, offset: 832)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !901, file: !77, line: 1955, baseType: !952, size: 64, offset: 1088)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !901, file: !77, line: 1956, baseType: !952, size: 64, offset: 1152)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !901, file: !77, line: 1957, baseType: !952, size: 64, offset: 1216)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !901, file: !77, line: 1963, baseType: !998, size: 64, offset: 1280)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!165, !847, !1001, !151}
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1003, line: 68, size: 512, align: 128, elements: !1004)
!1003 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1004 = !{!1005, !1006, !3849, !3856}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1002, file: !1003, line: 69, baseType: !158, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, scope: !1002, file: !1003, line: 77, baseType: !1007, size: 320, offset: 64)
!1007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1002, file: !1003, line: 77, size: 320, elements: !1008)
!1008 = !{!1009, !1183, !1188, !1216, !1224, !1230, !3780, !3848}
!1009 = !DIDerivedType(tag: DW_TAG_member, scope: !1007, file: !1003, line: 78, baseType: !1010, size: 320)
!1010 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1007, file: !1003, line: 78, size: 320, elements: !1011)
!1011 = !{!1012, !1013, !1181, !1182}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1010, file: !1003, line: 84, baseType: !595, size: 128)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1010, file: !1003, line: 86, baseType: !1014, size: 64, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !77, line: 451, size: 1216, align: 64, elements: !1016)
!1016 = !{!1017, !1018, !1025, !1026, !1027, !1042, !1051, !1052, !1053, !1054, !1174, !1175, !1178, !1179, !1180}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1015, file: !77, line: 452, baseType: !676, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1015, file: !77, line: 453, baseType: !1019, size: 128, offset: 64)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1020, line: 292, size: 128, elements: !1021)
!1020 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1021 = !{!1022, !1023, !1024}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1019, file: !1020, line: 293, baseType: !332)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1019, file: !1020, line: 295, baseType: !151, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1019, file: !1020, line: 296, baseType: !153, size: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1015, file: !77, line: 454, baseType: !151, size: 32, offset: 192)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1015, file: !77, line: 455, baseType: !287, size: 32, offset: 224)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1015, file: !77, line: 460, baseType: !1028, size: 128, offset: 256)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1029, line: 125, size: 128, elements: !1030)
!1029 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1030 = !{!1031, !1041}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1028, file: !1029, line: 126, baseType: !1032, size: 64)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1029, line: 31, size: 64, elements: !1033)
!1033 = !{!1034}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1032, file: !1029, line: 32, baseType: !1035, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1029, line: 24, size: 192, align: 64, elements: !1037)
!1037 = !{!1038, !1039, !1040}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1036, file: !1029, line: 25, baseType: !158, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1036, file: !1029, line: 26, baseType: !1035, size: 64, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1036, file: !1029, line: 27, baseType: !1035, size: 64, offset: 128)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1028, file: !1029, line: 127, baseType: !1035, size: 64, offset: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1015, file: !77, line: 461, baseType: !1043, size: 256, offset: 384)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1044, line: 35, size: 256, elements: !1045)
!1044 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1045 = !{!1046, !1047, !1048, !1050}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1043, file: !1044, line: 36, baseType: !584, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1043, file: !1044, line: 42, baseType: !584, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1043, file: !1044, line: 46, baseType: !1049, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !333, line: 29, baseType: !340)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1043, file: !1044, line: 47, baseType: !595, size: 128, offset: 128)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1015, file: !77, line: 462, baseType: !158, size: 64, offset: 640)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1015, file: !77, line: 463, baseType: !158, size: 64, offset: 704)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1015, file: !77, line: 464, baseType: !158, size: 64, offset: 768)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1015, file: !77, line: 465, baseType: !1055, size: 64, offset: 832)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !77, line: 367, size: 1408, elements: !1058)
!1058 = !{!1059, !1063, !1067, !1071, !1075, !1079, !1085, !1091, !1095, !1100, !1104, !1108, !1112, !1138, !1142, !1148, !1149, !1150, !1154, !1159, !1163, !1170}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1057, file: !77, line: 368, baseType: !1060, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!165, !1001, !920}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1057, file: !77, line: 369, baseType: !1064, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!165, !604, !1001}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1057, file: !77, line: 372, baseType: !1068, size: 64, offset: 128)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!165, !1014, !920}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1057, file: !77, line: 375, baseType: !1072, size: 64, offset: 192)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!165, !1001}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1057, file: !77, line: 381, baseType: !1076, size: 64, offset: 256)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!165, !604, !1014, !598, !7}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1057, file: !77, line: 383, baseType: !1080, size: 64, offset: 320)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !1083}
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !77, line: 290, flags: DIFlagFwdDecl)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1057, file: !77, line: 385, baseType: !1086, size: 64, offset: 384)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!165, !604, !1014, !775, !7, !7, !1089, !1090}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1057, file: !77, line: 388, baseType: !1092, size: 64, offset: 448)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!165, !604, !1014, !775, !7, !7, !1001, !153}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1057, file: !77, line: 393, baseType: !1096, size: 64, offset: 512)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!1099, !1014, !1099}
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !152, line: 125, baseType: !669)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1057, file: !77, line: 394, baseType: !1101, size: 64, offset: 576)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{null, !1001, !7, !7}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1057, file: !77, line: 395, baseType: !1105, size: 64, offset: 640)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!165, !1001, !151}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1057, file: !77, line: 396, baseType: !1109, size: 64, offset: 704)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !1001}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1057, file: !77, line: 397, baseType: !1113, size: 64, offset: 768)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!820, !1116, !1136}
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !77, line: 320, size: 384, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1125, !1126, !1127, !1128, !1129}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1117, file: !77, line: 321, baseType: !604, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1117, file: !77, line: 326, baseType: !775, size: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1117, file: !77, line: 327, baseType: !1122, size: 64, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{null, !1116, !107, !107}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1117, file: !77, line: 328, baseType: !153, size: 64, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1117, file: !77, line: 329, baseType: !165, size: 32, offset: 256)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1117, file: !77, line: 330, baseType: !232, size: 16, offset: 288)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1117, file: !77, line: 331, baseType: !232, size: 16, offset: 304)
!1129 = !DIDerivedType(tag: DW_TAG_member, scope: !1117, file: !77, line: 332, baseType: !1130, size: 64, offset: 320)
!1130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1117, file: !77, line: 332, size: 64, elements: !1131)
!1131 = !{!1132, !1133}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1130, file: !77, line: 333, baseType: !7, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1130, file: !77, line: 334, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !77, line: 334, flags: DIFlagFwdDecl)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !77, line: 64, flags: DIFlagFwdDecl)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1057, file: !77, line: 402, baseType: !1139, size: 64, offset: 832)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!165, !1014, !1001, !1001, !5}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1057, file: !77, line: 404, baseType: !1143, size: 64, offset: 896)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!292, !1001, !1146}
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1147, line: 305, baseType: !7)
!1147 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1057, file: !77, line: 405, baseType: !1109, size: 64, offset: 960)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1057, file: !77, line: 406, baseType: !1072, size: 64, offset: 1024)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1057, file: !77, line: 407, baseType: !1151, size: 64, offset: 1088)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!165, !1001, !158, !158}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1057, file: !77, line: 409, baseType: !1155, size: 64, offset: 1152)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{null, !1001, !1158, !1158}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1057, file: !77, line: 410, baseType: !1160, size: 64, offset: 1216)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!165, !1014, !1001}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1057, file: !77, line: 413, baseType: !1164, size: 64, offset: 1280)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!165, !1167, !604, !1169}
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !77, line: 61, flags: DIFlagFwdDecl)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1057, file: !77, line: 415, baseType: !1171, size: 64, offset: 1344)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{null, !604}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1015, file: !77, line: 466, baseType: !158, size: 64, offset: 896)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1015, file: !77, line: 467, baseType: !1176, size: 32, offset: 960)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1177, line: 8, baseType: !377)
!1177 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1015, file: !77, line: 468, baseType: !332, offset: 992)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1015, file: !77, line: 469, baseType: !595, size: 128, offset: 1024)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1015, file: !77, line: 470, baseType: !153, size: 64, offset: 1152)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1010, file: !1003, line: 87, baseType: !158, size: 64, offset: 192)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1010, file: !1003, line: 94, baseType: !158, size: 64, offset: 256)
!1183 = !DIDerivedType(tag: DW_TAG_member, scope: !1007, file: !1003, line: 96, baseType: !1184, size: 64)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1007, file: !1003, line: 96, size: 64, elements: !1185)
!1185 = !{!1186}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1184, file: !1003, line: 101, baseType: !1187, size: 64)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !152, line: 143, baseType: !669)
!1188 = !DIDerivedType(tag: DW_TAG_member, scope: !1007, file: !1003, line: 103, baseType: !1189, size: 320)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1007, file: !1003, line: 103, size: 320, elements: !1190)
!1190 = !{!1191, !1201, !1204, !1205}
!1191 = !DIDerivedType(tag: DW_TAG_member, scope: !1189, file: !1003, line: 104, baseType: !1192, size: 128)
!1192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1189, file: !1003, line: 104, size: 128, elements: !1193)
!1193 = !{!1194, !1195}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1192, file: !1003, line: 105, baseType: !595, size: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, scope: !1192, file: !1003, line: 106, baseType: !1196, size: 128)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1192, file: !1003, line: 106, size: 128, elements: !1197)
!1197 = !{!1198, !1199, !1200}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1196, file: !1003, line: 107, baseType: !1001, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1196, file: !1003, line: 109, baseType: !165, size: 32, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1196, file: !1003, line: 110, baseType: !165, size: 32, offset: 96)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1189, file: !1003, line: 117, baseType: !1202, size: 64, offset: 128)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1003, line: 117, flags: DIFlagFwdDecl)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1189, file: !1003, line: 119, baseType: !153, size: 64, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_member, scope: !1189, file: !1003, line: 120, baseType: !1206, size: 64, offset: 256)
!1206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1189, file: !1003, line: 120, size: 64, elements: !1207)
!1207 = !{!1208, !1209, !1210}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1206, file: !1003, line: 121, baseType: !153, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1206, file: !1003, line: 122, baseType: !158, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1206, file: !1003, line: 123, baseType: !1211, size: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1206, file: !1003, line: 123, size: 32, elements: !1212)
!1212 = !{!1213, !1214, !1215}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1211, file: !1003, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1211, file: !1003, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1211, file: !1003, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1216 = !DIDerivedType(tag: DW_TAG_member, scope: !1007, file: !1003, line: 130, baseType: !1217, size: 192)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1007, file: !1003, line: 130, size: 192, elements: !1218)
!1218 = !{!1219, !1220, !1221, !1222, !1223}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1217, file: !1003, line: 131, baseType: !158, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1217, file: !1003, line: 134, baseType: !154, size: 8, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1217, file: !1003, line: 135, baseType: !154, size: 8, offset: 72)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1217, file: !1003, line: 136, baseType: !287, size: 32, offset: 96)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1217, file: !1003, line: 137, baseType: !7, size: 32, offset: 128)
!1224 = !DIDerivedType(tag: DW_TAG_member, scope: !1007, file: !1003, line: 139, baseType: !1225, size: 256)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1007, file: !1003, line: 139, size: 256, elements: !1226)
!1226 = !{!1227, !1228, !1229}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1225, file: !1003, line: 140, baseType: !158, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1225, file: !1003, line: 141, baseType: !287, size: 32, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1225, file: !1003, line: 143, baseType: !595, size: 128, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, scope: !1007, file: !1003, line: 145, baseType: !1231, size: 256)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1007, file: !1003, line: 145, size: 256, elements: !1232)
!1232 = !{!1233, !1234, !1237, !1238, !3779}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1231, file: !1003, line: 146, baseType: !158, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1231, file: !1003, line: 147, baseType: !1235, size: 64, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1236, line: 509, baseType: !1001)
!1236 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1231, file: !1003, line: 148, baseType: !158, size: 64, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, scope: !1231, file: !1003, line: 149, baseType: !1239, size: 64, offset: 192)
!1239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1231, file: !1003, line: 149, size: 64, elements: !1240)
!1240 = !{!1241, !3778}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1239, file: !1003, line: 150, baseType: !1242, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1003, line: 388, size: 7296, elements: !1244)
!1244 = !{!1245, !3777}
!1245 = !DIDerivedType(tag: DW_TAG_member, scope: !1243, file: !1003, line: 389, baseType: !1246, size: 7296)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1243, file: !1003, line: 389, size: 7296, elements: !1247)
!1247 = !{!1248, !1366, !1367, !1368, !1372, !1373, !1374, !1375, !1376, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1417, !1425, !1428, !1466, !1467, !3761, !3762, !3765, !3766, !3767, !3770, !3771, !3772, !3775, !3776}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1246, file: !1003, line: 390, baseType: !1249, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1003, line: 305, size: 1472, elements: !1251)
!1251 = !{!1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1266, !1267, !1272, !1273, !1276, !1360, !1361, !1362, !1363, !1364}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1250, file: !1003, line: 308, baseType: !158, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1250, file: !1003, line: 309, baseType: !158, size: 64, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1250, file: !1003, line: 313, baseType: !1249, size: 64, offset: 128)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1250, file: !1003, line: 313, baseType: !1249, size: 64, offset: 192)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1250, file: !1003, line: 315, baseType: !1036, size: 192, align: 64, offset: 256)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1250, file: !1003, line: 323, baseType: !158, size: 64, offset: 448)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1250, file: !1003, line: 327, baseType: !1242, size: 64, offset: 512)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1250, file: !1003, line: 333, baseType: !1260, size: 64, offset: 576)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1236, line: 284, baseType: !1261)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1236, line: 284, size: 64, elements: !1262)
!1262 = !{!1263}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1261, file: !1236, line: 284, baseType: !1264, size: 64)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1265, line: 19, baseType: !158)
!1265 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1250, file: !1003, line: 334, baseType: !158, size: 64, offset: 640)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1250, file: !1003, line: 343, baseType: !1268, size: 256, offset: 704)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1250, file: !1003, line: 340, size: 256, elements: !1269)
!1269 = !{!1270, !1271}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1268, file: !1003, line: 341, baseType: !1036, size: 192, align: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1268, file: !1003, line: 342, baseType: !158, size: 64, offset: 192)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1250, file: !1003, line: 351, baseType: !595, size: 128, offset: 960)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1250, file: !1003, line: 353, baseType: !1274, size: 64, offset: 1088)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1003, line: 353, flags: DIFlagFwdDecl)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1250, file: !1003, line: 356, baseType: !1277, size: 64, offset: 1152)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1279)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1280)
!1280 = !{!1281, !1285, !1286, !1290, !1294, !1334, !1338, !1342, !1346, !1347, !1348, !1352, !1356}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1279, file: !14, line: 558, baseType: !1282, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{null, !1249}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1279, file: !14, line: 559, baseType: !1282, size: 64, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1279, file: !14, line: 560, baseType: !1287, size: 64, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DISubroutineType(types: !1289)
!1289 = !{!165, !1249, !158}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1279, file: !14, line: 561, baseType: !1291, size: 64, offset: 192)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!165, !1249}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1279, file: !14, line: 562, baseType: !1295, size: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 64)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1003, line: 682, baseType: !7)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1301)
!1301 = !{!1302, !1303, !1304, !1305, !1306, !1307, !1314, !1321, !1327, !1328, !1329, !1331, !1333}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1300, file: !14, line: 509, baseType: !1249, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1300, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1300, file: !14, line: 511, baseType: !151, size: 32, offset: 96)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1300, file: !14, line: 512, baseType: !158, size: 64, offset: 128)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1300, file: !14, line: 513, baseType: !158, size: 64, offset: 192)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1300, file: !14, line: 514, baseType: !1308, size: 64, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1236, line: 385, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1236, line: 385, size: 64, elements: !1311)
!1311 = !{!1312}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1310, file: !1236, line: 385, baseType: !1313, size: 64)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1265, line: 15, baseType: !158)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1300, file: !14, line: 516, baseType: !1315, size: 64, offset: 320)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1236, line: 359, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1236, line: 359, size: 64, elements: !1318)
!1318 = !{!1319}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1317, file: !1236, line: 359, baseType: !1320, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1265, line: 16, baseType: !158)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1300, file: !14, line: 519, baseType: !1322, size: 64, offset: 384)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1265, line: 21, baseType: !1323)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1265, line: 21, size: 64, elements: !1324)
!1324 = !{!1325}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1323, file: !1265, line: 21, baseType: !1326, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1265, line: 14, baseType: !158)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1300, file: !14, line: 521, baseType: !1001, size: 64, offset: 448)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1300, file: !14, line: 522, baseType: !1001, size: 64, offset: 512)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1300, file: !14, line: 528, baseType: !1330, size: 64, offset: 576)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1300, file: !14, line: 532, baseType: !1332, size: 64, offset: 640)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1300, file: !14, line: 536, baseType: !1235, size: 64, offset: 704)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1279, file: !14, line: 563, baseType: !1335, size: 64, offset: 320)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!1298, !1299, !13}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1279, file: !14, line: 565, baseType: !1339, size: 64, offset: 384)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DISubroutineType(types: !1341)
!1341 = !{null, !1299, !158, !158}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1279, file: !14, line: 567, baseType: !1343, size: 64, offset: 448)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!158, !1249}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1279, file: !14, line: 571, baseType: !1295, size: 64, offset: 512)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1279, file: !14, line: 574, baseType: !1295, size: 64, offset: 576)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1279, file: !14, line: 579, baseType: !1349, size: 64, offset: 640)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DISubroutineType(types: !1351)
!1351 = !{!165, !1249, !158, !153, !165, !165}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1279, file: !14, line: 585, baseType: !1353, size: 64, offset: 704)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{!206, !1249}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1279, file: !14, line: 615, baseType: !1357, size: 64, offset: 768)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!1001, !1249, !158}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1250, file: !1003, line: 359, baseType: !158, size: 64, offset: 1216)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1250, file: !1003, line: 361, baseType: !604, size: 64, offset: 1280)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1250, file: !1003, line: 362, baseType: !153, size: 64, offset: 1344)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1250, file: !1003, line: 365, baseType: !584, size: 64, offset: 1408)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1250, file: !1003, line: 373, baseType: !1365, offset: 1472)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1003, line: 296, elements: !346)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1246, file: !1003, line: 391, baseType: !1032, size: 64, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1246, file: !1003, line: 392, baseType: !669, size: 64, offset: 128)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1246, file: !1003, line: 394, baseType: !1369, size: 64, offset: 192)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!158, !604, !158, !158, !158, !158}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1246, file: !1003, line: 398, baseType: !158, size: 64, offset: 256)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1246, file: !1003, line: 399, baseType: !158, size: 64, offset: 320)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1246, file: !1003, line: 405, baseType: !158, size: 64, offset: 384)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1246, file: !1003, line: 406, baseType: !158, size: 64, offset: 448)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1246, file: !1003, line: 407, baseType: !1377, size: 64, offset: 512)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1236, line: 286, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1236, line: 286, size: 64, elements: !1380)
!1380 = !{!1381}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1379, file: !1236, line: 286, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1265, line: 18, baseType: !158)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1246, file: !1003, line: 416, baseType: !287, size: 32, offset: 576)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1246, file: !1003, line: 428, baseType: !287, size: 32, offset: 608)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1246, file: !1003, line: 437, baseType: !287, size: 32, offset: 640)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1246, file: !1003, line: 447, baseType: !287, size: 32, offset: 672)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1246, file: !1003, line: 450, baseType: !584, size: 64, offset: 704)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1246, file: !1003, line: 452, baseType: !165, size: 32, offset: 768)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1246, file: !1003, line: 454, baseType: !332, offset: 800)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1246, file: !1003, line: 457, baseType: !1043, size: 256, offset: 832)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1246, file: !1003, line: 459, baseType: !595, size: 128, offset: 1088)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1246, file: !1003, line: 466, baseType: !158, size: 64, offset: 1216)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1246, file: !1003, line: 467, baseType: !158, size: 64, offset: 1280)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1246, file: !1003, line: 469, baseType: !158, size: 64, offset: 1344)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1246, file: !1003, line: 470, baseType: !158, size: 64, offset: 1408)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1246, file: !1003, line: 471, baseType: !586, size: 64, offset: 1472)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1246, file: !1003, line: 472, baseType: !158, size: 64, offset: 1536)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1246, file: !1003, line: 473, baseType: !158, size: 64, offset: 1600)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1246, file: !1003, line: 474, baseType: !158, size: 64, offset: 1664)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1246, file: !1003, line: 475, baseType: !158, size: 64, offset: 1728)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1246, file: !1003, line: 477, baseType: !332, offset: 1792)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1246, file: !1003, line: 478, baseType: !158, size: 64, offset: 1792)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1246, file: !1003, line: 478, baseType: !158, size: 64, offset: 1856)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1246, file: !1003, line: 478, baseType: !158, size: 64, offset: 1920)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1246, file: !1003, line: 478, baseType: !158, size: 64, offset: 1984)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1246, file: !1003, line: 479, baseType: !158, size: 64, offset: 2048)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1246, file: !1003, line: 479, baseType: !158, size: 64, offset: 2112)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1246, file: !1003, line: 479, baseType: !158, size: 64, offset: 2176)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1246, file: !1003, line: 480, baseType: !158, size: 64, offset: 2240)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1246, file: !1003, line: 480, baseType: !158, size: 64, offset: 2304)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1246, file: !1003, line: 480, baseType: !158, size: 64, offset: 2368)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1246, file: !1003, line: 480, baseType: !158, size: 64, offset: 2432)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1246, file: !1003, line: 482, baseType: !1414, size: 2816, offset: 2496)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 2816, elements: !1415)
!1415 = !{!1416}
!1416 = !DISubrange(count: 44)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1246, file: !1003, line: 488, baseType: !1418, size: 256, offset: 5312)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1419, line: 60, size: 256, elements: !1420)
!1419 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1420 = !{!1421}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1418, file: !1419, line: 61, baseType: !1422, size: 256)
!1422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 256, elements: !1423)
!1423 = !{!1424}
!1424 = !DISubrange(count: 4)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1246, file: !1003, line: 490, baseType: !1426, size: 64, offset: 5568)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1003, line: 490, flags: DIFlagFwdDecl)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1246, file: !1003, line: 493, baseType: !1429, size: 896, offset: 5632)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1430, line: 53, baseType: !1431)
!1430 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1430, line: 13, size: 896, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436, !1439, !1440, !1441, !1442, !1462, !1463, !1464}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1431, file: !1430, line: 18, baseType: !669, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1431, file: !1430, line: 28, baseType: !586, size: 64, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1431, file: !1430, line: 31, baseType: !1043, size: 256, offset: 128)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1431, file: !1430, line: 32, baseType: !1437, size: 64, offset: 384)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1430, line: 32, flags: DIFlagFwdDecl)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1431, file: !1430, line: 37, baseType: !236, size: 16, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1431, file: !1430, line: 40, baseType: !580, size: 192, offset: 512)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1431, file: !1430, line: 41, baseType: !153, size: 64, offset: 704)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1431, file: !1430, line: 42, baseType: !1443, size: 64, offset: 768)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1445)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1446, line: 13, size: 896, elements: !1447)
!1446 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1447 = !{!1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1445, file: !1446, line: 14, baseType: !153, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1445, file: !1446, line: 15, baseType: !158, size: 64, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1445, file: !1446, line: 17, baseType: !158, size: 64, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1445, file: !1446, line: 17, baseType: !158, size: 64, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1445, file: !1446, line: 19, baseType: !107, size: 64, offset: 256)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1445, file: !1446, line: 21, baseType: !107, size: 64, offset: 320)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1445, file: !1446, line: 22, baseType: !107, size: 64, offset: 384)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1445, file: !1446, line: 23, baseType: !107, size: 64, offset: 448)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1445, file: !1446, line: 24, baseType: !107, size: 64, offset: 512)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1445, file: !1446, line: 25, baseType: !107, size: 64, offset: 576)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1445, file: !1446, line: 26, baseType: !107, size: 64, offset: 640)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1445, file: !1446, line: 27, baseType: !107, size: 64, offset: 704)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1445, file: !1446, line: 28, baseType: !107, size: 64, offset: 768)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1445, file: !1446, line: 29, baseType: !107, size: 64, offset: 832)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1431, file: !1430, line: 44, baseType: !287, size: 32, offset: 832)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1431, file: !1430, line: 50, baseType: !232, size: 16, offset: 864)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1431, file: !1430, line: 51, baseType: !1465, size: 16, offset: 880)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !233, line: 18, baseType: !500)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1246, file: !1003, line: 495, baseType: !158, size: 64, offset: 6528)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1246, file: !1003, line: 497, baseType: !1468, size: 64, offset: 6592)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1003, line: 381, size: 384, elements: !1470)
!1470 = !{!1471, !1472, !3760}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1469, file: !1003, line: 382, baseType: !287, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1469, file: !1003, line: 383, baseType: !1473, size: 128, offset: 64)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1003, line: 376, size: 128, elements: !1474)
!1474 = !{!1475, !3758}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1473, file: !1003, line: 377, baseType: !1476, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1478, line: 640, size: 48640, elements: !1479)
!1478 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1479 = !{!1480, !1486, !1487, !1488, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1505, !1523, !1534, !1617, !1618, !1619, !1627, !1628, !1630, !1631, !1632, !1633, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1712, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1750, !1752, !1753, !1754, !1766, !1767, !1768, !1769, !1770, !1771, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1795, !1800, !1982, !1983, !1984, !1985, !1989, !1992, !1995, !1998, !2001, !2005, !3355, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3401, !3402, !3403, !3404, !3405, !3410, !3411, !3412, !3415, !3416, !3419, !3422, !3425, !3428, !3460, !3463, !3464, !3543, !3544, !3547, !3548, !3551, !3552, !3553, !3557, !3558, !3559, !3572, !3573, !3574, !3584, !3589, !3590, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1477, file: !1478, line: 646, baseType: !1481, size: 128)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1482, line: 56, size: 128, elements: !1483)
!1482 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1483 = !{!1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1481, file: !1482, line: 57, baseType: !158, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1481, file: !1482, line: 58, baseType: !377, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1477, file: !1478, line: 649, baseType: !164, size: 64, offset: 128)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1477, file: !1478, line: 657, baseType: !153, size: 64, offset: 192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1477, file: !1478, line: 658, baseType: !1489, size: 32, offset: 256)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1490, line: 113, baseType: !1491)
!1490 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1490, line: 111, size: 32, elements: !1492)
!1492 = !{!1493}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1491, file: !1490, line: 112, baseType: !287, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1477, file: !1478, line: 660, baseType: !7, size: 32, offset: 288)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1477, file: !1478, line: 661, baseType: !7, size: 32, offset: 320)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1477, file: !1478, line: 684, baseType: !165, size: 32, offset: 352)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1477, file: !1478, line: 686, baseType: !165, size: 32, offset: 384)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1477, file: !1478, line: 687, baseType: !165, size: 32, offset: 416)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1477, file: !1478, line: 688, baseType: !165, size: 32, offset: 448)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1477, file: !1478, line: 689, baseType: !7, size: 32, offset: 480)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1477, file: !1478, line: 691, baseType: !1502, size: 64, offset: 512)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1504)
!1504 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1478, line: 691, flags: DIFlagFwdDecl)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1477, file: !1478, line: 692, baseType: !1506, size: 832, offset: 576)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1478, line: 451, size: 832, elements: !1507)
!1507 = !{!1508, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1506, file: !1478, line: 453, baseType: !1509, size: 128)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1478, line: 325, size: 128, elements: !1510)
!1510 = !{!1511, !1512}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1509, file: !1478, line: 326, baseType: !158, size: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1509, file: !1478, line: 327, baseType: !377, size: 32, offset: 64)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1506, file: !1478, line: 454, baseType: !1036, size: 192, align: 64, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1506, file: !1478, line: 455, baseType: !595, size: 128, offset: 320)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1506, file: !1478, line: 456, baseType: !7, size: 32, offset: 448)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1506, file: !1478, line: 458, baseType: !669, size: 64, offset: 512)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1506, file: !1478, line: 459, baseType: !669, size: 64, offset: 576)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1506, file: !1478, line: 460, baseType: !669, size: 64, offset: 640)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1506, file: !1478, line: 461, baseType: !669, size: 64, offset: 704)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1506, file: !1478, line: 463, baseType: !669, size: 64, offset: 768)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1506, file: !1478, line: 465, baseType: !1522, offset: 832)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1478, line: 415, elements: !346)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1477, file: !1478, line: 693, baseType: !1524, size: 384, offset: 1408)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1478, line: 489, size: 384, elements: !1525)
!1525 = !{!1526, !1527, !1528, !1529, !1530, !1531, !1532}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1524, file: !1478, line: 490, baseType: !595, size: 128)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1524, file: !1478, line: 491, baseType: !158, size: 64, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1524, file: !1478, line: 492, baseType: !158, size: 64, offset: 192)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1524, file: !1478, line: 493, baseType: !7, size: 32, offset: 256)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1524, file: !1478, line: 494, baseType: !236, size: 16, offset: 288)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1524, file: !1478, line: 495, baseType: !236, size: 16, offset: 304)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1524, file: !1478, line: 497, baseType: !1533, size: 64, offset: 320)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1477, file: !1478, line: 697, baseType: !1535, size: 1792, offset: 1792)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1478, line: 507, size: 1792, elements: !1536)
!1536 = !{!1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1614, !1615}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1535, file: !1478, line: 508, baseType: !1036, size: 192, align: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1535, file: !1478, line: 515, baseType: !669, size: 64, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1535, file: !1478, line: 516, baseType: !669, size: 64, offset: 256)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1535, file: !1478, line: 517, baseType: !669, size: 64, offset: 320)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1535, file: !1478, line: 518, baseType: !669, size: 64, offset: 384)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1535, file: !1478, line: 519, baseType: !669, size: 64, offset: 448)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1535, file: !1478, line: 526, baseType: !590, size: 64, offset: 512)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1535, file: !1478, line: 527, baseType: !669, size: 64, offset: 576)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1535, file: !1478, line: 528, baseType: !7, size: 32, offset: 640)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1535, file: !1478, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1535, file: !1478, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1535, file: !1478, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1535, file: !1478, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1535, file: !1478, line: 563, baseType: !1551, size: 512, offset: 704)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1552)
!1552 = !{!1553, !1561, !1562, !1567, !1610, !1611, !1612, !1613}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1551, file: !20, line: 119, baseType: !1554, size: 256)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1555, line: 9, size: 256, elements: !1556)
!1555 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1556 = !{!1557, !1558}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1554, file: !1555, line: 10, baseType: !1036, size: 192, align: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1554, file: !1555, line: 11, baseType: !1559, size: 64, offset: 192)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1560, line: 29, baseType: !590)
!1560 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1551, file: !20, line: 120, baseType: !1559, size: 64, offset: 256)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1551, file: !20, line: 121, baseType: !1563, size: 64, offset: 320)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!19, !1566}
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1551, file: !20, line: 122, baseType: !1568, size: 64, offset: 384)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1570)
!1570 = !{!1571, !1591, !1592, !1595, !1600, !1601, !1605, !1609}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1569, file: !20, line: 160, baseType: !1572, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1573, file: !20, line: 215, baseType: !1049)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1573, file: !20, line: 216, baseType: !7, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1573, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1573, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1573, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1573, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1573, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1573, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1573, file: !20, line: 233, baseType: !1559, size: 64, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1573, file: !20, line: 234, baseType: !1566, size: 64, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1573, file: !20, line: 235, baseType: !1559, size: 64, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1573, file: !20, line: 236, baseType: !1566, size: 64, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1573, file: !20, line: 237, baseType: !1588, size: 4096, offset: 512)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1569, size: 4096, elements: !1589)
!1589 = !{!1590}
!1590 = !DISubrange(count: 8)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1569, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1569, file: !20, line: 162, baseType: !1593, size: 32, offset: 96)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !152, line: 27, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !690, line: 96, baseType: !165)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1569, file: !20, line: 163, baseType: !1596, size: 32, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !640, line: 276, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !640, line: 276, size: 32, elements: !1598)
!1598 = !{!1599}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1597, file: !640, line: 276, baseType: !644, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1569, file: !20, line: 164, baseType: !1566, size: 64, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1569, file: !20, line: 165, baseType: !1602, size: 128, offset: 256)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1555, line: 14, size: 128, elements: !1603)
!1603 = !{!1604}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1602, file: !1555, line: 15, baseType: !1028, size: 128)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1569, file: !20, line: 166, baseType: !1606, size: 64, offset: 384)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!1559}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1569, file: !20, line: 167, baseType: !1559, size: 64, offset: 448)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1551, file: !20, line: 123, baseType: !242, size: 8, offset: 448)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1551, file: !20, line: 124, baseType: !242, size: 8, offset: 456)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1551, file: !20, line: 125, baseType: !242, size: 8, offset: 464)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1551, file: !20, line: 126, baseType: !242, size: 8, offset: 472)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1535, file: !1478, line: 572, baseType: !1551, size: 512, offset: 1216)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1535, file: !1478, line: 580, baseType: !1616, size: 64, offset: 1728)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1477, file: !1478, line: 721, baseType: !7, size: 32, offset: 3584)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1477, file: !1478, line: 722, baseType: !165, size: 32, offset: 3616)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1477, file: !1478, line: 723, baseType: !1620, size: 64, offset: 3648)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1622)
!1622 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1623, line: 17, baseType: !1624)
!1623 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1623, line: 17, size: 64, elements: !1625)
!1625 = !{!1626}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1624, file: !1623, line: 17, baseType: !447, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1477, file: !1478, line: 724, baseType: !1622, size: 64, offset: 3712)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1477, file: !1478, line: 749, baseType: !1629, offset: 3776)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1478, line: 290, elements: !346)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1477, file: !1478, line: 751, baseType: !595, size: 128, offset: 3776)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1477, file: !1478, line: 757, baseType: !1242, size: 64, offset: 3904)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1477, file: !1478, line: 758, baseType: !1242, size: 64, offset: 3968)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1477, file: !1478, line: 761, baseType: !1634, size: 320, offset: 4032)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1419, line: 34, size: 320, elements: !1635)
!1635 = !{!1636, !1637}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1634, file: !1419, line: 35, baseType: !669, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1634, file: !1419, line: 36, baseType: !1638, size: 256, offset: 64)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1249, size: 256, elements: !1423)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1477, file: !1478, line: 766, baseType: !165, size: 32, offset: 4352)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1477, file: !1478, line: 767, baseType: !165, size: 32, offset: 4384)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1477, file: !1478, line: 768, baseType: !165, size: 32, offset: 4416)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1477, file: !1478, line: 770, baseType: !165, size: 32, offset: 4448)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1477, file: !1478, line: 772, baseType: !158, size: 64, offset: 4480)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1477, file: !1478, line: 775, baseType: !7, size: 32, offset: 4544)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1477, file: !1478, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1477, file: !1478, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1477, file: !1478, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1477, file: !1478, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1477, file: !1478, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1477, file: !1478, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1477, file: !1478, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1477, file: !1478, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1477, file: !1478, line: 831, baseType: !158, size: 64, offset: 4672)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1477, file: !1478, line: 833, baseType: !1655, size: 384, offset: 4736)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1656)
!1656 = !{!1657, !1662}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1655, file: !25, line: 26, baseType: !1658, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!107, !1661}
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, scope: !1655, file: !25, line: 27, baseType: !1663, size: 320, offset: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1655, file: !25, line: 27, size: 320, elements: !1664)
!1664 = !{!1665, !1675, !1702}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1663, file: !25, line: 36, baseType: !1666, size: 320)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1663, file: !25, line: 29, size: 320, elements: !1667)
!1667 = !{!1668, !1670, !1671, !1672, !1673, !1674}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1666, file: !25, line: 30, baseType: !1669, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1666, file: !25, line: 31, baseType: !377, size: 32, offset: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1666, file: !25, line: 32, baseType: !377, size: 32, offset: 96)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1666, file: !25, line: 33, baseType: !377, size: 32, offset: 128)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1666, file: !25, line: 34, baseType: !669, size: 64, offset: 192)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1666, file: !25, line: 35, baseType: !1669, size: 64, offset: 256)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1663, file: !25, line: 46, baseType: !1676, size: 192)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1663, file: !25, line: 38, size: 192, elements: !1677)
!1677 = !{!1678, !1679, !1680, !1701}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1676, file: !25, line: 39, baseType: !1593, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1676, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, scope: !1676, file: !25, line: 41, baseType: !1681, size: 64, offset: 64)
!1681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1676, file: !25, line: 41, size: 64, elements: !1682)
!1682 = !{!1683, !1691}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1681, file: !25, line: 42, baseType: !1684, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1686, line: 7, size: 128, elements: !1687)
!1686 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1687 = !{!1688, !1690}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1685, file: !1686, line: 8, baseType: !1689, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !690, line: 93, baseType: !592)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1685, file: !1686, line: 9, baseType: !592, size: 64, offset: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1681, file: !25, line: 43, baseType: !1692, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1694, line: 7, size: 64, elements: !1695)
!1694 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1695 = !{!1696, !1700}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1693, file: !1694, line: 8, baseType: !1697, size: 32)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1694, line: 5, baseType: !1698)
!1698 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !233, line: 20, baseType: !1699)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !235, line: 26, baseType: !165)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1693, file: !1694, line: 9, baseType: !1698, size: 32, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1676, file: !25, line: 45, baseType: !669, size: 64, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1663, file: !25, line: 54, baseType: !1703, size: 256)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1663, file: !25, line: 48, size: 256, elements: !1704)
!1704 = !{!1705, !1708, !1709, !1710, !1711}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1703, file: !25, line: 49, baseType: !1706, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1703, file: !25, line: 50, baseType: !165, size: 32, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1703, file: !25, line: 51, baseType: !165, size: 32, offset: 96)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1703, file: !25, line: 52, baseType: !158, size: 64, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1703, file: !25, line: 53, baseType: !158, size: 64, offset: 192)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1477, file: !1478, line: 835, baseType: !1713, size: 32, offset: 5120)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !152, line: 22, baseType: !1714)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !690, line: 28, baseType: !165)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1477, file: !1478, line: 836, baseType: !1713, size: 32, offset: 5152)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1477, file: !1478, line: 840, baseType: !158, size: 64, offset: 5184)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1477, file: !1478, line: 849, baseType: !1476, size: 64, offset: 5248)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1477, file: !1478, line: 852, baseType: !1476, size: 64, offset: 5312)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1477, file: !1478, line: 857, baseType: !595, size: 128, offset: 5376)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1477, file: !1478, line: 858, baseType: !595, size: 128, offset: 5504)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1477, file: !1478, line: 859, baseType: !1476, size: 64, offset: 5632)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1477, file: !1478, line: 867, baseType: !595, size: 128, offset: 5696)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1477, file: !1478, line: 868, baseType: !595, size: 128, offset: 5824)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1477, file: !1478, line: 871, baseType: !1725, size: 64, offset: 5952)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !86, line: 59, size: 768, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731, !1733, !1734, !1741, !1742}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1726, file: !86, line: 61, baseType: !1489, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1726, file: !86, line: 62, baseType: !7, size: 32, offset: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1726, file: !86, line: 63, baseType: !332, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1726, file: !86, line: 65, baseType: !1732, size: 256, offset: 64)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !883, size: 256, elements: !1423)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1726, file: !86, line: 66, baseType: !883, size: 64, offset: 320)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1726, file: !86, line: 68, baseType: !1735, size: 128, offset: 384)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1736, line: 40, baseType: !1737)
!1736 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1736, line: 36, size: 128, elements: !1738)
!1738 = !{!1739, !1740}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1737, file: !1736, line: 37, baseType: !332)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1737, file: !1736, line: 38, baseType: !595, size: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1726, file: !86, line: 69, baseType: !617, size: 128, align: 64, offset: 512)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1726, file: !86, line: 70, baseType: !1743, size: 128, offset: 640)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1744, size: 128, elements: !448)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !86, line: 54, size: 128, elements: !1745)
!1745 = !{!1746, !1747}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1744, file: !86, line: 55, baseType: !165, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1744, file: !86, line: 56, baseType: !1748, size: 64, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !86, line: 56, flags: DIFlagFwdDecl)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1477, file: !1478, line: 872, baseType: !1751, size: 512, offset: 6016)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 512, elements: !1423)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1477, file: !1478, line: 873, baseType: !595, size: 128, offset: 6528)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1477, file: !1478, line: 874, baseType: !595, size: 128, offset: 6656)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1477, file: !1478, line: 876, baseType: !1755, size: 64, offset: 6784)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1757, line: 26, size: 192, elements: !1758)
!1757 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1758 = !{!1759, !1760}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1756, file: !1757, line: 27, baseType: !7, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1756, file: !1757, line: 28, baseType: !1761, size: 128, offset: 64)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1762, line: 43, size: 128, elements: !1763)
!1762 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1761, file: !1762, line: 44, baseType: !1049)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1761, file: !1762, line: 45, baseType: !595, size: 128)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1477, file: !1478, line: 879, baseType: !949, size: 64, offset: 6848)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1477, file: !1478, line: 882, baseType: !949, size: 64, offset: 6912)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1477, file: !1478, line: 884, baseType: !669, size: 64, offset: 6976)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1477, file: !1478, line: 885, baseType: !669, size: 64, offset: 7040)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1477, file: !1478, line: 890, baseType: !669, size: 64, offset: 7104)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1477, file: !1478, line: 891, baseType: !1772, size: 128, offset: 7168)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1478, line: 242, size: 128, elements: !1773)
!1773 = !{!1774, !1775, !1776}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1772, file: !1478, line: 244, baseType: !669, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1772, file: !1478, line: 245, baseType: !669, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1772, file: !1478, line: 246, baseType: !1049, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1477, file: !1478, line: 900, baseType: !158, size: 64, offset: 7296)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1477, file: !1478, line: 901, baseType: !158, size: 64, offset: 7360)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1477, file: !1478, line: 904, baseType: !669, size: 64, offset: 7424)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1477, file: !1478, line: 907, baseType: !669, size: 64, offset: 7488)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1477, file: !1478, line: 910, baseType: !158, size: 64, offset: 7552)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1477, file: !1478, line: 911, baseType: !158, size: 64, offset: 7616)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1477, file: !1478, line: 914, baseType: !1784, size: 640, offset: 7680)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1785, line: 123, size: 640, elements: !1786)
!1785 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1786 = !{!1787, !1793, !1794}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1784, file: !1785, line: 124, baseType: !1788, size: 576)
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1789, size: 576, elements: !893)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1785, line: 108, size: 192, elements: !1790)
!1790 = !{!1791, !1792}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1789, file: !1785, line: 109, baseType: !669, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1789, file: !1785, line: 110, baseType: !1602, size: 128, offset: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1784, file: !1785, line: 125, baseType: !7, size: 32, offset: 576)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1784, file: !1785, line: 126, baseType: !7, size: 32, offset: 608)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1477, file: !1478, line: 917, baseType: !1796, size: 192, offset: 8320)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1785, line: 134, size: 192, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1796, file: !1785, line: 135, baseType: !617, size: 128, align: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1796, file: !1785, line: 136, baseType: !7, size: 32, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1477, file: !1478, line: 923, baseType: !1801, size: 64, offset: 8512)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1804, line: 111, size: 1280, elements: !1805)
!1804 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1805 = !{!1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1823, !1824, !1825, !1826, !1827, !1828, !1935, !1936, !1937, !1938, !1964, !1967, !1977}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1803, file: !1804, line: 112, baseType: !287, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1803, file: !1804, line: 120, baseType: !683, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1803, file: !1804, line: 121, baseType: !692, size: 32, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1803, file: !1804, line: 122, baseType: !683, size: 32, offset: 96)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1803, file: !1804, line: 123, baseType: !692, size: 32, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1803, file: !1804, line: 124, baseType: !683, size: 32, offset: 160)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1803, file: !1804, line: 125, baseType: !692, size: 32, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1803, file: !1804, line: 126, baseType: !683, size: 32, offset: 224)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1803, file: !1804, line: 127, baseType: !692, size: 32, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1803, file: !1804, line: 128, baseType: !7, size: 32, offset: 288)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1803, file: !1804, line: 129, baseType: !1817, size: 64, offset: 320)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1818, line: 26, baseType: !1819)
!1818 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1818, line: 24, size: 64, elements: !1820)
!1820 = !{!1821}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1819, file: !1818, line: 25, baseType: !1822, size: 64)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 64, elements: !459)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1803, file: !1804, line: 130, baseType: !1817, size: 64, offset: 384)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1803, file: !1804, line: 131, baseType: !1817, size: 64, offset: 448)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1803, file: !1804, line: 132, baseType: !1817, size: 64, offset: 512)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1803, file: !1804, line: 133, baseType: !1817, size: 64, offset: 576)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1803, file: !1804, line: 135, baseType: !154, size: 8, offset: 640)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1803, file: !1804, line: 137, baseType: !1829, size: 64, offset: 704)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1831, line: 189, size: 1664, elements: !1832)
!1831 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1832 = !{!1833, !1834, !1837, !1842, !1843, !1846, !1847, !1852, !1853, !1854, !1855, !1857, !1858, !1859, !1860, !1861, !1899, !1920}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1830, file: !1831, line: 190, baseType: !1489, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1830, file: !1831, line: 191, baseType: !1835, size: 32, offset: 32)
!1835 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1831, line: 28, baseType: !1836)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !152, line: 98, baseType: !1698)
!1837 = !DIDerivedType(tag: DW_TAG_member, scope: !1830, file: !1831, line: 192, baseType: !1838, size: 192, offset: 64)
!1838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1830, file: !1831, line: 192, size: 192, elements: !1839)
!1839 = !{!1840, !1841}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1838, file: !1831, line: 193, baseType: !595, size: 128)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1838, file: !1831, line: 194, baseType: !1036, size: 192, align: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1830, file: !1831, line: 199, baseType: !1043, size: 256, offset: 256)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1830, file: !1831, line: 200, baseType: !1844, size: 64, offset: 512)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1831, line: 200, flags: DIFlagFwdDecl)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1830, file: !1831, line: 201, baseType: !153, size: 64, offset: 576)
!1847 = !DIDerivedType(tag: DW_TAG_member, scope: !1830, file: !1831, line: 202, baseType: !1848, size: 64, offset: 640)
!1848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1830, file: !1831, line: 202, size: 64, elements: !1849)
!1849 = !{!1850, !1851}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1848, file: !1831, line: 203, baseType: !782, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1848, file: !1831, line: 204, baseType: !782, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1830, file: !1831, line: 206, baseType: !782, size: 64, offset: 704)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1830, file: !1831, line: 207, baseType: !683, size: 32, offset: 768)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1830, file: !1831, line: 208, baseType: !692, size: 32, offset: 800)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1830, file: !1831, line: 209, baseType: !1856, size: 32, offset: 832)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1831, line: 31, baseType: !801)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1830, file: !1831, line: 210, baseType: !236, size: 16, offset: 864)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1830, file: !1831, line: 211, baseType: !236, size: 16, offset: 880)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1830, file: !1831, line: 215, baseType: !501, size: 16, offset: 896)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1830, file: !1831, line: 222, baseType: !158, size: 64, offset: 960)
!1861 = !DIDerivedType(tag: DW_TAG_member, scope: !1830, file: !1831, line: 239, baseType: !1862, size: 320, offset: 1024)
!1862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1830, file: !1831, line: 239, size: 320, elements: !1863)
!1863 = !{!1864, !1891}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1862, file: !1831, line: 240, baseType: !1865, size: 320)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1831, line: 108, size: 320, elements: !1866)
!1866 = !{!1867, !1868, !1880, !1883, !1890}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1865, file: !1831, line: 110, baseType: !158, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, scope: !1865, file: !1831, line: 111, baseType: !1869, size: 64, offset: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1865, file: !1831, line: 111, size: 64, elements: !1870)
!1870 = !{!1871, !1879}
!1871 = !DIDerivedType(tag: DW_TAG_member, scope: !1869, file: !1831, line: 112, baseType: !1872, size: 64)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1869, file: !1831, line: 112, size: 64, elements: !1873)
!1873 = !{!1874, !1875}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1872, file: !1831, line: 114, baseType: !232, size: 16)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1872, file: !1831, line: 115, baseType: !1876, size: 48, offset: 16)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 48, elements: !1877)
!1877 = !{!1878}
!1878 = !DISubrange(count: 6)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1869, file: !1831, line: 121, baseType: !158, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1865, file: !1831, line: 123, baseType: !1881, size: 64, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1831, line: 96, flags: DIFlagFwdDecl)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1865, file: !1831, line: 124, baseType: !1884, size: 64, offset: 192)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1831, line: 102, size: 192, elements: !1886)
!1886 = !{!1887, !1888, !1889}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1885, file: !1831, line: 103, baseType: !617, size: 128, align: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1885, file: !1831, line: 104, baseType: !1489, size: 32, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1885, file: !1831, line: 105, baseType: !292, size: 8, offset: 160)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1865, file: !1831, line: 125, baseType: !206, size: 64, offset: 256)
!1891 = !DIDerivedType(tag: DW_TAG_member, scope: !1862, file: !1831, line: 241, baseType: !1892, size: 320)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1862, file: !1831, line: 241, size: 320, elements: !1893)
!1893 = !{!1894, !1895, !1896, !1897, !1898}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1892, file: !1831, line: 242, baseType: !158, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1892, file: !1831, line: 243, baseType: !158, size: 64, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1892, file: !1831, line: 244, baseType: !1881, size: 64, offset: 128)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1892, file: !1831, line: 245, baseType: !1884, size: 64, offset: 192)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1892, file: !1831, line: 246, baseType: !155, size: 64, offset: 256)
!1899 = !DIDerivedType(tag: DW_TAG_member, scope: !1830, file: !1831, line: 254, baseType: !1900, size: 256, offset: 1344)
!1900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1830, file: !1831, line: 254, size: 256, elements: !1901)
!1901 = !{!1902, !1908}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1900, file: !1831, line: 255, baseType: !1903, size: 256)
!1903 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1831, line: 128, size: 256, elements: !1904)
!1904 = !{!1905, !1906}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1903, file: !1831, line: 129, baseType: !153, size: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1903, file: !1831, line: 130, baseType: !1907, size: 256)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 256, elements: !1423)
!1908 = !DIDerivedType(tag: DW_TAG_member, scope: !1900, file: !1831, line: 256, baseType: !1909, size: 256)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1900, file: !1831, line: 256, size: 256, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1909, file: !1831, line: 258, baseType: !595, size: 128)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1909, file: !1831, line: 259, baseType: !1913, size: 128, offset: 128)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1914, line: 22, size: 128, elements: !1915)
!1914 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1915 = !{!1916, !1919}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1913, file: !1914, line: 23, baseType: !1917, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1914, line: 23, flags: DIFlagFwdDecl)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1913, file: !1914, line: 24, baseType: !158, size: 64, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1830, file: !1831, line: 274, baseType: !1921, size: 64, offset: 1600)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1831, line: 170, size: 192, elements: !1923)
!1923 = !{!1924, !1933, !1934}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1922, file: !1831, line: 171, baseType: !1925, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1831, line: 165, baseType: !1926)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!165, !1829, !1929, !1931, !1829}
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1882)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1922, file: !1831, line: 172, baseType: !1829, size: 64, offset: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1922, file: !1831, line: 173, baseType: !1881, size: 64, offset: 128)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1803, file: !1804, line: 138, baseType: !1829, size: 64, offset: 768)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1803, file: !1804, line: 139, baseType: !1829, size: 64, offset: 832)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1803, file: !1804, line: 140, baseType: !1829, size: 64, offset: 896)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1803, file: !1804, line: 145, baseType: !1939, size: 64, offset: 960)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1941, line: 13, size: 896, elements: !1942)
!1941 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1942 = !{!1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1940, file: !1941, line: 14, baseType: !1489, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1940, file: !1941, line: 15, baseType: !287, size: 32, offset: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1940, file: !1941, line: 16, baseType: !287, size: 32, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1940, file: !1941, line: 21, baseType: !584, size: 64, offset: 128)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1940, file: !1941, line: 27, baseType: !158, size: 64, offset: 192)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1940, file: !1941, line: 28, baseType: !158, size: 64, offset: 256)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1940, file: !1941, line: 29, baseType: !584, size: 64, offset: 320)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1940, file: !1941, line: 32, baseType: !364, size: 128, offset: 384)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1940, file: !1941, line: 33, baseType: !683, size: 32, offset: 512)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1940, file: !1941, line: 37, baseType: !584, size: 64, offset: 576)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1940, file: !1941, line: 44, baseType: !1954, size: 256, offset: 640)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1955, line: 15, size: 256, elements: !1956)
!1955 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1954, file: !1955, line: 16, baseType: !1049)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1954, file: !1955, line: 18, baseType: !165, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1954, file: !1955, line: 19, baseType: !165, size: 32, offset: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1954, file: !1955, line: 20, baseType: !165, size: 32, offset: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1954, file: !1955, line: 21, baseType: !165, size: 32, offset: 96)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1954, file: !1955, line: 22, baseType: !158, size: 64, offset: 128)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1954, file: !1955, line: 23, baseType: !158, size: 64, offset: 192)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1803, file: !1804, line: 146, baseType: !1965, size: 64, offset: 1024)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !684, line: 18, flags: DIFlagFwdDecl)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1803, file: !1804, line: 147, baseType: !1968, size: 64, offset: 1088)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1804, line: 25, size: 64, elements: !1970)
!1970 = !{!1971, !1972, !1973}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1969, file: !1804, line: 26, baseType: !287, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1969, file: !1804, line: 27, baseType: !165, size: 32, offset: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1969, file: !1804, line: 28, baseType: !1974, offset: 64)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !692, elements: !1975)
!1975 = !{!1976}
!1976 = !DISubrange(count: 0)
!1977 = !DIDerivedType(tag: DW_TAG_member, scope: !1803, file: !1804, line: 149, baseType: !1978, size: 128, offset: 1152)
!1978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1803, file: !1804, line: 149, size: 128, elements: !1979)
!1979 = !{!1980, !1981}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1978, file: !1804, line: 150, baseType: !165, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1978, file: !1804, line: 151, baseType: !617, size: 128, align: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1477, file: !1478, line: 926, baseType: !1801, size: 64, offset: 8576)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1477, file: !1478, line: 929, baseType: !1801, size: 64, offset: 8640)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1477, file: !1478, line: 933, baseType: !1829, size: 64, offset: 8704)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1477, file: !1478, line: 943, baseType: !1986, size: 128, offset: 8768)
!1986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 128, elements: !1987)
!1987 = !{!1988}
!1988 = !DISubrange(count: 16)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1477, file: !1478, line: 945, baseType: !1990, size: 64, offset: 8896)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1478, line: 49, flags: DIFlagFwdDecl)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1477, file: !1478, line: 956, baseType: !1993, size: 64, offset: 8960)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1478, line: 45, flags: DIFlagFwdDecl)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1477, file: !1478, line: 959, baseType: !1996, size: 64, offset: 9024)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1478, line: 959, flags: DIFlagFwdDecl)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1477, file: !1478, line: 962, baseType: !1999, size: 64, offset: 9088)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1478, line: 66, flags: DIFlagFwdDecl)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1477, file: !1478, line: 966, baseType: !2002, size: 64, offset: 9152)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2004, line: 35, flags: DIFlagFwdDecl)
!2004 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1477, file: !1478, line: 969, baseType: !2006, size: 64, offset: 9216)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2008, line: 82, size: 7296, elements: !2009)
!2008 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2009 = !{!2010, !2011, !2012, !2013, !2014, !2015, !2016, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2045, !2054, !2055, !2057, !2058, !2059, !3311, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3341, !3342, !3349, !3350, !3351, !3352, !3353, !3354}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2007, file: !2008, line: 83, baseType: !1489, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2007, file: !2008, line: 84, baseType: !287, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2007, file: !2008, line: 85, baseType: !165, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2007, file: !2008, line: 86, baseType: !595, size: 128, offset: 128)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2007, file: !2008, line: 88, baseType: !1735, size: 128, offset: 256)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2007, file: !2008, line: 91, baseType: !1476, size: 64, offset: 384)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2007, file: !2008, line: 94, baseType: !2017, size: 192, offset: 448)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2018, line: 30, size: 192, elements: !2019)
!2018 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2017, file: !2018, line: 31, baseType: !595, size: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2017, file: !2018, line: 32, baseType: !2022, size: 64, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2023, line: 25, baseType: !2024)
!2023 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2023, line: 23, size: 64, elements: !2025)
!2025 = !{!2026}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2024, file: !2023, line: 24, baseType: !447, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2007, file: !2008, line: 97, baseType: !883, size: 64, offset: 640)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2007, file: !2008, line: 100, baseType: !165, size: 32, offset: 704)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2007, file: !2008, line: 106, baseType: !165, size: 32, offset: 736)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2007, file: !2008, line: 107, baseType: !1476, size: 64, offset: 768)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2007, file: !2008, line: 110, baseType: !165, size: 32, offset: 832)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2007, file: !2008, line: 111, baseType: !7, size: 32, offset: 864)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2007, file: !2008, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2007, file: !2008, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2007, file: !2008, line: 128, baseType: !165, size: 32, offset: 928)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2007, file: !2008, line: 129, baseType: !595, size: 128, offset: 960)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2007, file: !2008, line: 132, baseType: !1551, size: 512, offset: 1088)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2007, file: !2008, line: 133, baseType: !1559, size: 64, offset: 1600)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2007, file: !2008, line: 140, baseType: !2040, size: 256, offset: 1664)
!2040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2041, size: 256, elements: !459)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2008, line: 38, size: 128, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2041, file: !2008, line: 39, baseType: !669, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2041, file: !2008, line: 40, baseType: !669, size: 64, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2007, file: !2008, line: 146, baseType: !2046, size: 192, offset: 1920)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2008, line: 66, size: 192, elements: !2047)
!2047 = !{!2048}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2046, file: !2008, line: 67, baseType: !2049, size: 192)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2008, line: 47, size: 192, elements: !2050)
!2050 = !{!2051, !2052, !2053}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2049, file: !2008, line: 48, baseType: !586, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2049, file: !2008, line: 49, baseType: !586, size: 64, offset: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2049, file: !2008, line: 50, baseType: !586, size: 64, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2007, file: !2008, line: 150, baseType: !1784, size: 640, offset: 2112)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2007, file: !2008, line: 153, baseType: !2056, size: 256, offset: 2752)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1725, size: 256, elements: !1423)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2007, file: !2008, line: 159, baseType: !1725, size: 64, offset: 3008)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2007, file: !2008, line: 162, baseType: !165, size: 32, offset: 3072)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2007, file: !2008, line: 164, baseType: !2060, size: 64, offset: 3136)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2062, line: 285, size: 5056, elements: !2063)
!2062 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!2063 = !{!2064, !2065, !2070, !2720, !3210, !3211, !3212, !3221, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2061, file: !2062, line: 286, baseType: !165, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2061, file: !2062, line: 287, baseType: !2066, size: 32, offset: 32)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2067, line: 19, size: 32, elements: !2068)
!2067 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2068 = !{!2069}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2066, file: !2067, line: 20, baseType: !1489, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2061, file: !2062, line: 288, baseType: !2071, size: 64, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !43, line: 461, size: 5568, elements: !2073)
!2073 = !{!2074, !2363, !2364, !2367, !2368, !2419, !2509, !2510, !2511, !2512, !2513, !2522, !2626, !2639, !2642, !2643, !2647, !2649, !2650, !2651, !2655, !2661, !2662, !2665, !2669, !2672, !2673, !2674, !2675, !2676, !2708, !2709, !2710, !2713, !2716, !2717, !2718, !2719}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2072, file: !43, line: 462, baseType: !2075, size: 512)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !2076, line: 64, size: 512, elements: !2077)
!2076 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!2077 = !{!2078, !2079, !2080, !2082, !2124, !2226, !2357, !2358, !2359, !2360, !2361, !2362}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2075, file: !2076, line: 65, baseType: !206, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2075, file: !2076, line: 66, baseType: !595, size: 128, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2075, file: !2076, line: 67, baseType: !2081, size: 64, offset: 192)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !2075, file: !2076, line: 68, baseType: !2083, size: 64, offset: 256)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !2076, line: 192, size: 704, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2089}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2084, file: !2076, line: 193, baseType: !595, size: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2084, file: !2076, line: 194, baseType: !332, offset: 128)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2084, file: !2076, line: 195, baseType: !2075, size: 512, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !2084, file: !2076, line: 196, baseType: !2090, size: 64, offset: 640)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2092)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !2076, line: 156, size: 192, elements: !2093)
!2093 = !{!2094, !2099, !2104}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2092, file: !2076, line: 157, baseType: !2095, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2096)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{!165, !2083, !2081}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2092, file: !2076, line: 158, baseType: !2100, size: 64, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2101)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{!206, !2083, !2081}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2092, file: !2076, line: 159, baseType: !2105, size: 64, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2106)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{!165, !2083, !2081, !2109}
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !2076, line: 148, size: 20736, elements: !2111)
!2111 = !{!2112, !2114, !2118, !2119, !2123}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !2110, file: !2076, line: 149, baseType: !2113, size: 192)
!2113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 192, elements: !893)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !2110, file: !2076, line: 150, baseType: !2115, size: 4096, offset: 192)
!2115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 4096, elements: !2116)
!2116 = !{!2117}
!2117 = !DISubrange(count: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !2110, file: !2076, line: 151, baseType: !165, size: 32, offset: 4288)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2110, file: !2076, line: 152, baseType: !2120, size: 16384, offset: 4320)
!2120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 16384, elements: !2121)
!2121 = !{!2122}
!2122 = !DISubrange(count: 2048)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !2110, file: !2076, line: 153, baseType: !165, size: 32, offset: 20704)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !2075, file: !2076, line: 69, baseType: !2125, size: 64, offset: 320)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !2076, line: 138, size: 448, elements: !2127)
!2127 = !{!2128, !2132, !2151, !2153, !2186, !2216, !2220}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2126, file: !2076, line: 139, baseType: !2129, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !2081}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !2126, file: !2076, line: 140, baseType: !2133, size: 64, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2135)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !2136, line: 230, size: 128, elements: !2137)
!2136 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!2137 = !{!2138, !2147}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2135, file: !2136, line: 231, baseType: !2139, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!820, !2081, !2142, !155}
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !2136, line: 30, size: 128, elements: !2144)
!2144 = !{!2145, !2146}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2143, file: !2136, line: 31, baseType: !206, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2143, file: !2136, line: 32, baseType: !680, size: 16, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2135, file: !2136, line: 232, baseType: !2148, size: 64, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DISubroutineType(types: !2150)
!2150 = !{!820, !2081, !2142, !206, !823}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !2126, file: !2076, line: 141, baseType: !2152, size: 64, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !2126, file: !2076, line: 142, baseType: !2154, size: 64, offset: 192)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2157)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !2136, line: 84, size: 320, elements: !2158)
!2158 = !{!2159, !2160, !2164, !2183, !2184}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2157, file: !2136, line: 85, baseType: !206, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !2157, file: !2136, line: 86, baseType: !2161, size: 64, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DISubroutineType(types: !2163)
!2163 = !{!680, !2081, !2142, !165}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !2157, file: !2136, line: 88, baseType: !2165, size: 64, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!680, !2081, !2168, !165}
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !2136, line: 168, size: 448, elements: !2170)
!2170 = !{!2171, !2172, !2173, !2174, !2178, !2179}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2169, file: !2136, line: 169, baseType: !2143, size: 128)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2169, file: !2136, line: 170, baseType: !823, size: 64, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2169, file: !2136, line: 171, baseType: !153, size: 64, offset: 192)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2169, file: !2136, line: 172, baseType: !2175, size: 64, offset: 256)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!820, !604, !2081, !2168, !155, !775, !823}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2169, file: !2136, line: 174, baseType: !2175, size: 64, offset: 320)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2169, file: !2136, line: 176, baseType: !2180, size: 64, offset: 384)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = !DISubroutineType(types: !2182)
!2182 = !{!165, !604, !2081, !2168, !1249}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2157, file: !2136, line: 90, baseType: !2152, size: 64, offset: 192)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !2157, file: !2136, line: 91, baseType: !2185, size: 64, offset: 256)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !2126, file: !2076, line: 143, baseType: !2187, size: 64, offset: 256)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!2190, !2081}
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !31, line: 39, size: 384, elements: !2193)
!2193 = !{!2194, !2195, !2199, !2203, !2211, !2215}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2192, file: !31, line: 40, baseType: !30, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !2192, file: !31, line: 41, baseType: !2196, size: 64, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = !DISubroutineType(types: !2198)
!2198 = !{!292}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !2192, file: !31, line: 42, baseType: !2200, size: 64, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!153}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !2192, file: !31, line: 43, baseType: !2204, size: 64, offset: 192)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{!2207, !2209}
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !31, line: 19, flags: DIFlagFwdDecl)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !2192, file: !31, line: 44, baseType: !2212, size: 64, offset: 256)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!2207}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !2192, file: !31, line: 45, baseType: !227, size: 64, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2126, file: !2076, line: 144, baseType: !2217, size: 64, offset: 320)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!2207, !2081}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2126, file: !2076, line: 145, baseType: !2221, size: 64, offset: 384)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{null, !2081, !2224, !2225}
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !2075, file: !2076, line: 70, baseType: !2227, size: 64, offset: 384)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !867, line: 123, size: 1024, elements: !2229)
!2229 = !{!2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2350, !2351, !2352, !2353, !2354}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2228, file: !867, line: 124, baseType: !287, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2228, file: !867, line: 125, baseType: !287, size: 32, offset: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2228, file: !867, line: 135, baseType: !2227, size: 64, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2228, file: !867, line: 136, baseType: !206, size: 64, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2228, file: !867, line: 138, baseType: !1036, size: 192, align: 64, offset: 192)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2228, file: !867, line: 140, baseType: !2207, size: 64, offset: 384)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2228, file: !867, line: 141, baseType: !7, size: 32, offset: 448)
!2237 = !DIDerivedType(tag: DW_TAG_member, scope: !2228, file: !867, line: 142, baseType: !2238, size: 256, offset: 512)
!2238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2228, file: !867, line: 142, size: 256, elements: !2239)
!2239 = !{!2240, !2286, !2290}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2238, file: !867, line: 143, baseType: !2241, size: 192)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !867, line: 91, size: 192, elements: !2242)
!2242 = !{!2243, !2244, !2245}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !2241, file: !867, line: 92, baseType: !158, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2241, file: !867, line: 94, baseType: !1032, size: 64, offset: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2241, file: !867, line: 100, baseType: !2246, size: 64, offset: 128)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !867, line: 180, size: 704, elements: !2248)
!2248 = !{!2249, !2250, !2251, !2258, !2259, !2260, !2284, !2285}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2247, file: !867, line: 182, baseType: !2227, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2247, file: !867, line: 183, baseType: !7, size: 32, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !2247, file: !867, line: 186, baseType: !2252, size: 192, offset: 128)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2253, line: 19, size: 192, elements: !2254)
!2253 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2254 = !{!2255, !2256, !2257}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2252, file: !2253, line: 20, baseType: !1019, size: 128)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2252, file: !2253, line: 21, baseType: !7, size: 32, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2252, file: !2253, line: 22, baseType: !7, size: 32, offset: 160)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !2247, file: !867, line: 187, baseType: !377, size: 32, offset: 320)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !2247, file: !867, line: 188, baseType: !377, size: 32, offset: 352)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !2247, file: !867, line: 189, baseType: !2261, size: 64, offset: 384)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !867, line: 168, size: 320, elements: !2263)
!2263 = !{!2264, !2268, !2272, !2276, !2280}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !2262, file: !867, line: 169, baseType: !2265, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{!165, !955, !2246}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !2262, file: !867, line: 171, baseType: !2269, size: 64, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{!165, !2227, !206, !680}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !2262, file: !867, line: 173, baseType: !2273, size: 64, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DISubroutineType(types: !2275)
!2275 = !{!165, !2227}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !2262, file: !867, line: 174, baseType: !2277, size: 64, offset: 192)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{!165, !2227, !2227, !206}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !2262, file: !867, line: 176, baseType: !2281, size: 64, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!165, !955, !2227, !2246}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !2247, file: !867, line: 192, baseType: !595, size: 128, offset: 448)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !2247, file: !867, line: 194, baseType: !1735, size: 128, offset: 576)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !2238, file: !867, line: 144, baseType: !2287, size: 64)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !867, line: 103, size: 64, elements: !2288)
!2288 = !{!2289}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !2287, file: !867, line: 104, baseType: !2227, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2238, file: !867, line: 145, baseType: !2291, size: 256)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !867, line: 107, size: 256, elements: !2292)
!2292 = !{!2293, !2345, !2348, !2349}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2291, file: !867, line: 108, baseType: !2294, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2296)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !867, line: 217, size: 768, elements: !2297)
!2297 = !{!2298, !2318, !2322, !2323, !2324, !2325, !2326, !2330, !2331, !2332, !2333, !2341}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2296, file: !867, line: 222, baseType: !2299, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{!165, !2302}
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !867, line: 197, size: 1088, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2303, file: !867, line: 199, baseType: !2227, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2303, file: !867, line: 200, baseType: !604, size: 64, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !2303, file: !867, line: 201, baseType: !955, size: 64, offset: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2303, file: !867, line: 202, baseType: !153, size: 64, offset: 192)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2303, file: !867, line: 205, baseType: !580, size: 192, offset: 256)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !2303, file: !867, line: 206, baseType: !580, size: 192, offset: 448)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2303, file: !867, line: 207, baseType: !165, size: 32, offset: 640)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2303, file: !867, line: 208, baseType: !595, size: 128, offset: 704)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !2303, file: !867, line: 209, baseType: !155, size: 64, offset: 832)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2303, file: !867, line: 211, baseType: !823, size: 64, offset: 896)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !2303, file: !867, line: 212, baseType: !292, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !2303, file: !867, line: 213, baseType: !292, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2303, file: !867, line: 214, baseType: !1277, size: 64, offset: 1024)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2296, file: !867, line: 223, baseType: !2319, size: 64, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{null, !2302}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !2296, file: !867, line: 236, baseType: !986, size: 64, offset: 128)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !2296, file: !867, line: 238, baseType: !973, size: 64, offset: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !2296, file: !867, line: 239, baseType: !982, size: 64, offset: 256)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !2296, file: !867, line: 240, baseType: !978, size: 64, offset: 320)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2296, file: !867, line: 242, baseType: !2327, size: 64, offset: 384)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{!820, !2302, !155, !823, !775}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2296, file: !867, line: 252, baseType: !823, size: 64, offset: 448)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !2296, file: !867, line: 259, baseType: !292, size: 8, offset: 512)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2296, file: !867, line: 260, baseType: !2327, size: 64, offset: 576)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2296, file: !867, line: 263, baseType: !2334, size: 64, offset: 640)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DISubroutineType(types: !2336)
!2336 = !{!2337, !2302, !2339}
!2337 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2338, line: 52, baseType: !7)
!2338 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64)
!2340 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !867, line: 27, flags: DIFlagFwdDecl)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2296, file: !867, line: 266, baseType: !2342, size: 64, offset: 704)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = !DISubroutineType(types: !2344)
!2344 = !{!165, !2302, !1249}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2291, file: !867, line: 109, baseType: !2346, size: 64, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !867, line: 31, flags: DIFlagFwdDecl)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2291, file: !867, line: 110, baseType: !775, size: 64, offset: 128)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !2291, file: !867, line: 111, baseType: !2227, size: 64, offset: 192)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2228, file: !867, line: 148, baseType: !153, size: 64, offset: 768)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2228, file: !867, line: 154, baseType: !669, size: 64, offset: 832)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2228, file: !867, line: 156, baseType: !236, size: 16, offset: 896)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2228, file: !867, line: 157, baseType: !680, size: 16, offset: 912)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !2228, file: !867, line: 158, baseType: !2355, size: 64, offset: 960)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !867, line: 32, flags: DIFlagFwdDecl)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2075, file: !2076, line: 71, baseType: !2066, size: 32, offset: 448)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !2075, file: !2076, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !2075, file: !2076, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !2075, file: !2076, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !2075, file: !2076, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !2075, file: !2076, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2072, file: !43, line: 463, baseType: !2071, size: 64, offset: 512)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2072, file: !43, line: 465, baseType: !2365, size: 64, offset: 576)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !43, line: 36, flags: DIFlagFwdDecl)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !2072, file: !43, line: 467, baseType: !206, size: 64, offset: 640)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2072, file: !43, line: 468, baseType: !2369, size: 64, offset: 704)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2371)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !43, line: 87, size: 384, elements: !2372)
!2372 = !{!2373, !2374, !2375, !2379, !2384, !2388}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2371, file: !43, line: 88, baseType: !206, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2371, file: !43, line: 89, baseType: !2154, size: 64, offset: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2371, file: !43, line: 90, baseType: !2376, size: 64, offset: 128)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{!165, !2071, !2109}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2371, file: !43, line: 91, baseType: !2380, size: 64, offset: 192)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{!155, !2071, !2383, !2224, !2225}
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2371, file: !43, line: 93, baseType: !2385, size: 64, offset: 256)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{null, !2071}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2371, file: !43, line: 95, baseType: !2389, size: 64, offset: 320)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2391)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !50, line: 278, size: 1472, elements: !2392)
!2392 = !{!2393, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !2391, file: !50, line: 279, baseType: !2394, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{!165, !2071}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2391, file: !50, line: 280, baseType: !2385, size: 64, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2391, file: !50, line: 281, baseType: !2394, size: 64, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2391, file: !50, line: 282, baseType: !2394, size: 64, offset: 192)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !2391, file: !50, line: 283, baseType: !2394, size: 64, offset: 256)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !2391, file: !50, line: 284, baseType: !2394, size: 64, offset: 320)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !2391, file: !50, line: 285, baseType: !2394, size: 64, offset: 384)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !2391, file: !50, line: 286, baseType: !2394, size: 64, offset: 448)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !2391, file: !50, line: 287, baseType: !2394, size: 64, offset: 512)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !2391, file: !50, line: 288, baseType: !2394, size: 64, offset: 576)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !2391, file: !50, line: 289, baseType: !2394, size: 64, offset: 640)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !2391, file: !50, line: 290, baseType: !2394, size: 64, offset: 704)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !2391, file: !50, line: 291, baseType: !2394, size: 64, offset: 768)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !2391, file: !50, line: 292, baseType: !2394, size: 64, offset: 832)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !2391, file: !50, line: 293, baseType: !2394, size: 64, offset: 896)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !2391, file: !50, line: 294, baseType: !2394, size: 64, offset: 960)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !2391, file: !50, line: 295, baseType: !2394, size: 64, offset: 1024)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !2391, file: !50, line: 296, baseType: !2394, size: 64, offset: 1088)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !2391, file: !50, line: 297, baseType: !2394, size: 64, offset: 1152)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !2391, file: !50, line: 298, baseType: !2394, size: 64, offset: 1216)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2391, file: !50, line: 299, baseType: !2394, size: 64, offset: 1280)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2391, file: !50, line: 300, baseType: !2394, size: 64, offset: 1344)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !2391, file: !50, line: 301, baseType: !2394, size: 64, offset: 1408)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2072, file: !43, line: 470, baseType: !2420, size: 64, offset: 768)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !2422, line: 82, size: 1408, elements: !2423)
!2422 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!2423 = !{!2424, !2425, !2426, !2427, !2428, !2429, !2430, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2504, !2507, !2508}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2421, file: !2422, line: 83, baseType: !206, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2421, file: !2422, line: 84, baseType: !206, size: 64, offset: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !2421, file: !2422, line: 85, baseType: !2071, size: 64, offset: 128)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !2421, file: !2422, line: 86, baseType: !2154, size: 64, offset: 192)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2421, file: !2422, line: 87, baseType: !2154, size: 64, offset: 256)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !2421, file: !2422, line: 88, baseType: !2154, size: 64, offset: 320)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !2421, file: !2422, line: 90, baseType: !2431, size: 64, offset: 384)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = !DISubroutineType(types: !2433)
!2433 = !{!165, !2071, !2434}
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !37, line: 95, size: 1152, elements: !2436)
!2436 = !{!2437, !2438, !2439, !2440, !2441, !2442, !2443, !2457, !2468, !2469, !2470, !2471, !2472, !2480, !2481, !2482, !2483, !2484, !2485}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2435, file: !37, line: 96, baseType: !206, size: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2435, file: !37, line: 97, baseType: !2420, size: 64, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2435, file: !37, line: 99, baseType: !208, size: 64, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !2435, file: !37, line: 100, baseType: !206, size: 64, offset: 192)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !2435, file: !37, line: 102, baseType: !292, size: 8, offset: 256)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !2435, file: !37, line: 103, baseType: !36, size: 32, offset: 288)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !2435, file: !37, line: 105, baseType: !2444, size: 64, offset: 320)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2446)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !2447, line: 262, size: 1600, elements: !2448)
!2447 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!2448 = !{!2449, !2451, !2452, !2456}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2446, file: !2447, line: 263, baseType: !2450, size: 256)
!2450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 256, elements: !480)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2446, file: !2447, line: 264, baseType: !2450, size: 256, offset: 256)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !2446, file: !2447, line: 265, baseType: !2453, size: 1024, offset: 512)
!2453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 1024, elements: !2454)
!2454 = !{!2455}
!2455 = !DISubrange(count: 128)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2446, file: !2447, line: 266, baseType: !2207, size: 64, offset: 1536)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !2435, file: !37, line: 106, baseType: !2458, size: 64, offset: 384)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2460)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !2447, line: 210, size: 256, elements: !2461)
!2461 = !{!2462, !2464, !2466, !2467}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2460, file: !2447, line: 211, baseType: !2463, size: 72)
!2463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 72, elements: !387)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2460, file: !2447, line: 212, baseType: !2465, size: 64, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !2447, line: 14, baseType: !158)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !2460, file: !2447, line: 213, baseType: !378, size: 32, offset: 192)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !2460, file: !2447, line: 214, baseType: !378, size: 32, offset: 224)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2435, file: !37, line: 108, baseType: !2394, size: 64, offset: 448)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2435, file: !37, line: 109, baseType: !2385, size: 64, offset: 512)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2435, file: !37, line: 110, baseType: !2394, size: 64, offset: 576)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2435, file: !37, line: 111, baseType: !2385, size: 64, offset: 640)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2435, file: !37, line: 112, baseType: !2473, size: 64, offset: 704)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!165, !2071, !2476}
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !50, line: 52, baseType: !2477)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !50, line: 50, size: 32, elements: !2478)
!2478 = !{!2479}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2477, file: !50, line: 51, baseType: !165, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2435, file: !37, line: 113, baseType: !2394, size: 64, offset: 768)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2435, file: !37, line: 114, baseType: !2154, size: 64, offset: 832)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2435, file: !37, line: 115, baseType: !2154, size: 64, offset: 896)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2435, file: !37, line: 117, baseType: !2389, size: 64, offset: 960)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !2435, file: !37, line: 118, baseType: !2385, size: 64, offset: 1024)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2435, file: !37, line: 120, baseType: !2486, size: 64, offset: 1088)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 64)
!2487 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !37, line: 120, flags: DIFlagFwdDecl)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2421, file: !2422, line: 91, baseType: !2376, size: 64, offset: 448)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2421, file: !2422, line: 92, baseType: !2394, size: 64, offset: 512)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2421, file: !2422, line: 93, baseType: !2385, size: 64, offset: 576)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2421, file: !2422, line: 94, baseType: !2394, size: 64, offset: 640)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2421, file: !2422, line: 95, baseType: !2385, size: 64, offset: 704)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !2421, file: !2422, line: 97, baseType: !2394, size: 64, offset: 768)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2421, file: !2422, line: 98, baseType: !2394, size: 64, offset: 832)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2421, file: !2422, line: 100, baseType: !2473, size: 64, offset: 896)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2421, file: !2422, line: 101, baseType: !2394, size: 64, offset: 960)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !2421, file: !2422, line: 103, baseType: !2394, size: 64, offset: 1024)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !2421, file: !2422, line: 105, baseType: !2394, size: 64, offset: 1088)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2421, file: !2422, line: 107, baseType: !2389, size: 64, offset: 1152)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !2421, file: !2422, line: 109, baseType: !2501, size: 64, offset: 1216)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2503)
!2503 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !2422, line: 109, flags: DIFlagFwdDecl)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2421, file: !2422, line: 111, baseType: !2505, size: 64, offset: 1280)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !2422, line: 111, flags: DIFlagFwdDecl)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !2421, file: !2422, line: 112, baseType: !887, offset: 1344)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !2421, file: !2422, line: 114, baseType: !292, size: 8, offset: 1344)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !2072, file: !43, line: 471, baseType: !2434, size: 64, offset: 832)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !2072, file: !43, line: 473, baseType: !153, size: 64, offset: 896)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2072, file: !43, line: 475, baseType: !153, size: 64, offset: 960)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2072, file: !43, line: 480, baseType: !580, size: 192, offset: 1024)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2072, file: !43, line: 484, baseType: !2514, size: 576, offset: 1216)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !43, line: 361, size: 576, elements: !2515)
!2515 = !{!2516, !2517, !2518, !2519, !2520, !2521}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !2514, file: !43, line: 362, baseType: !595, size: 128)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !2514, file: !43, line: 363, baseType: !595, size: 128, offset: 128)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !2514, file: !43, line: 364, baseType: !595, size: 128, offset: 256)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !2514, file: !43, line: 365, baseType: !595, size: 128, offset: 384)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !2514, file: !43, line: 366, baseType: !292, size: 8, offset: 512)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2514, file: !43, line: 367, baseType: !42, size: 32, offset: 544)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !2072, file: !43, line: 485, baseType: !2523, size: 2304, offset: 1792)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !50, line: 565, size: 2304, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2619, !2623}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !2523, file: !50, line: 566, baseType: !2476, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !2523, file: !50, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !2523, file: !50, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !2523, file: !50, line: 569, baseType: !292, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !2523, file: !50, line: 570, baseType: !292, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !2523, file: !50, line: 571, baseType: !292, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !2523, file: !50, line: 572, baseType: !292, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !2523, file: !50, line: 573, baseType: !292, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !2523, file: !50, line: 574, baseType: !292, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !2523, file: !50, line: 575, baseType: !292, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !2523, file: !50, line: 576, baseType: !292, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !2523, file: !50, line: 577, baseType: !377, size: 32, offset: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2523, file: !50, line: 578, baseType: !332, offset: 96)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2523, file: !50, line: 580, baseType: !595, size: 128, offset: 128)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2523, file: !50, line: 581, baseType: !1756, size: 192, offset: 256)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !2523, file: !50, line: 582, baseType: !2541, size: 64, offset: 448)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !2543, line: 43, size: 1472, elements: !2544)
!2543 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!2544 = !{!2545, !2546, !2547, !2548, !2549, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2542, file: !2543, line: 44, baseType: !206, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2542, file: !2543, line: 45, baseType: !165, size: 32, offset: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2542, file: !2543, line: 46, baseType: !595, size: 128, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2542, file: !2543, line: 47, baseType: !332, offset: 256)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2542, file: !2543, line: 48, baseType: !2550, size: 64, offset: 256)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !50, line: 533, flags: DIFlagFwdDecl)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2542, file: !2543, line: 49, baseType: !360, size: 320, offset: 320)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2542, file: !2543, line: 50, baseType: !158, size: 64, offset: 640)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !2542, file: !2543, line: 51, baseType: !1559, size: 64, offset: 704)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !2542, file: !2543, line: 52, baseType: !1559, size: 64, offset: 768)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !2542, file: !2543, line: 53, baseType: !1559, size: 64, offset: 832)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !2542, file: !2543, line: 54, baseType: !1559, size: 64, offset: 896)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !2542, file: !2543, line: 55, baseType: !1559, size: 64, offset: 960)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !2542, file: !2543, line: 56, baseType: !158, size: 64, offset: 1024)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !2542, file: !2543, line: 57, baseType: !158, size: 64, offset: 1088)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !2542, file: !2543, line: 58, baseType: !158, size: 64, offset: 1152)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !2542, file: !2543, line: 59, baseType: !158, size: 64, offset: 1216)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !2542, file: !2543, line: 60, baseType: !158, size: 64, offset: 1280)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2542, file: !2543, line: 61, baseType: !2071, size: 64, offset: 1344)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2542, file: !2543, line: 62, baseType: !292, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !2542, file: !2543, line: 63, baseType: !292, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !2523, file: !50, line: 583, baseType: !292, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !2523, file: !50, line: 584, baseType: !292, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !2523, file: !50, line: 585, baseType: !292, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !2523, file: !50, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !2523, file: !50, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !2523, file: !50, line: 592, baseType: !1551, size: 512, offset: 576)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2523, file: !50, line: 593, baseType: !669, size: 64, offset: 1088)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2523, file: !50, line: 594, baseType: !2575, size: 256, offset: 1152)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !106, line: 102, size: 256, elements: !2576)
!2576 = !{!2577, !2578, !2579}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2575, file: !106, line: 103, baseType: !584, size: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2575, file: !106, line: 104, baseType: !595, size: 128, offset: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2575, file: !106, line: 105, baseType: !2580, size: 64, offset: 192)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !106, line: 21, baseType: !2581)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = !DISubroutineType(types: !2583)
!2583 = !{null, !2584}
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !2523, file: !50, line: 595, baseType: !1735, size: 128, offset: 1408)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2523, file: !50, line: 596, baseType: !2550, size: 64, offset: 1536)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !2523, file: !50, line: 597, baseType: !287, size: 32, offset: 1600)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !2523, file: !50, line: 598, baseType: !287, size: 32, offset: 1632)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !2523, file: !50, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !2523, file: !50, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !2523, file: !50, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !2523, file: !50, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !2523, file: !50, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !2523, file: !50, line: 604, baseType: !292, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !2523, file: !50, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !2523, file: !50, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !2523, file: !50, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !2523, file: !50, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !2523, file: !50, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !2523, file: !50, line: 610, baseType: !7, size: 32, offset: 1696)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2523, file: !50, line: 611, baseType: !49, size: 32, offset: 1728)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !2523, file: !50, line: 612, baseType: !57, size: 32, offset: 1760)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !2523, file: !50, line: 613, baseType: !165, size: 32, offset: 1792)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !2523, file: !50, line: 614, baseType: !165, size: 32, offset: 1824)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !2523, file: !50, line: 615, baseType: !669, size: 64, offset: 1856)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !2523, file: !50, line: 616, baseType: !669, size: 64, offset: 1920)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !2523, file: !50, line: 617, baseType: !669, size: 64, offset: 1984)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !2523, file: !50, line: 618, baseType: !669, size: 64, offset: 2048)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !2523, file: !50, line: 620, baseType: !2610, size: 64, offset: 2112)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !50, line: 536, size: 256, elements: !2612)
!2612 = !{!2613, !2614, !2615, !2616}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2611, file: !50, line: 537, baseType: !332)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2611, file: !50, line: 538, baseType: !7, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !2611, file: !50, line: 540, baseType: !595, size: 128, offset: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !2611, file: !50, line: 543, baseType: !2617, size: 64, offset: 192)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2618 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !50, line: 534, flags: DIFlagFwdDecl)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !2523, file: !50, line: 621, baseType: !2620, size: 64, offset: 2176)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{null, !2071, !1698}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !2523, file: !50, line: 622, baseType: !2624, size: 64, offset: 2240)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2625 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !50, line: 622, flags: DIFlagFwdDecl)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !2072, file: !43, line: 486, baseType: !2627, size: 64, offset: 4096)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !50, line: 642, size: 1792, elements: !2629)
!2629 = !{!2630, !2631, !2632, !2636, !2637, !2638}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2628, file: !50, line: 643, baseType: !2391, size: 1472)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2628, file: !50, line: 644, baseType: !2394, size: 64, offset: 1472)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !2628, file: !50, line: 645, baseType: !2633, size: 64, offset: 1536)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{null, !2071, !292}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2628, file: !50, line: 646, baseType: !2394, size: 64, offset: 1600)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !2628, file: !50, line: 647, baseType: !2385, size: 64, offset: 1664)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !2628, file: !50, line: 648, baseType: !2385, size: 64, offset: 1728)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !2072, file: !43, line: 493, baseType: !2640, size: 64, offset: 4160)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !43, line: 493, flags: DIFlagFwdDecl)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !2072, file: !43, line: 499, baseType: !595, size: 128, offset: 4224)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !2072, file: !43, line: 502, baseType: !2644, size: 64, offset: 4352)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2646)
!2646 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !43, line: 502, flags: DIFlagFwdDecl)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !2072, file: !43, line: 504, baseType: !2648, size: 64, offset: 4416)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !2072, file: !43, line: 505, baseType: !669, size: 64, offset: 4480)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !2072, file: !43, line: 510, baseType: !669, size: 64, offset: 4544)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !2072, file: !43, line: 511, baseType: !2652, size: 64, offset: 4608)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2654)
!2654 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !43, line: 511, flags: DIFlagFwdDecl)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !2072, file: !43, line: 513, baseType: !2656, size: 64, offset: 4672)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !43, line: 288, size: 128, elements: !2658)
!2658 = !{!2659, !2660}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2657, file: !43, line: 293, baseType: !7, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !2657, file: !43, line: 294, baseType: !158, size: 64, offset: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !2072, file: !43, line: 515, baseType: !595, size: 128, offset: 4736)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !2072, file: !43, line: 526, baseType: !2663, offset: 4864)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !2664, line: 5, elements: !346)
!2664 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !2072, file: !43, line: 528, baseType: !2666, size: 64, offset: 4864)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !2668, line: 14, flags: DIFlagFwdDecl)
!2668 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2072, file: !43, line: 529, baseType: !2670, size: 64, offset: 4928)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !2422, line: 22, flags: DIFlagFwdDecl)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !2072, file: !43, line: 534, baseType: !757, size: 32, offset: 4992)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2072, file: !43, line: 535, baseType: !377, size: 32, offset: 5024)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !2072, file: !43, line: 537, baseType: !332, offset: 5056)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !2072, file: !43, line: 538, baseType: !595, size: 128, offset: 5056)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !2072, file: !43, line: 540, baseType: !2677, size: 64, offset: 5184)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !2679, line: 54, size: 960, elements: !2680)
!2679 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!2680 = !{!2681, !2682, !2683, !2684, !2685, !2686, !2687, !2691, !2695, !2696, !2697, !2698, !2702, !2706, !2707}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2678, file: !2679, line: 55, baseType: !206, size: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2678, file: !2679, line: 56, baseType: !208, size: 64, offset: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !2678, file: !2679, line: 58, baseType: !2154, size: 64, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2678, file: !2679, line: 59, baseType: !2154, size: 64, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !2678, file: !2679, line: 60, baseType: !2081, size: 64, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !2678, file: !2679, line: 62, baseType: !2376, size: 64, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2678, file: !2679, line: 63, baseType: !2688, size: 64, offset: 384)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{!155, !2071, !2383}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !2678, file: !2679, line: 65, baseType: !2692, size: 64, offset: 448)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{null, !2677}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !2678, file: !2679, line: 66, baseType: !2385, size: 64, offset: 512)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !2678, file: !2679, line: 68, baseType: !2394, size: 64, offset: 576)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !2678, file: !2679, line: 70, baseType: !2190, size: 64, offset: 640)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2678, file: !2679, line: 71, baseType: !2699, size: 64, offset: 704)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = !DISubroutineType(types: !2701)
!2701 = !{!2207, !2071}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2678, file: !2679, line: 73, baseType: !2703, size: 64, offset: 768)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{null, !2071, !2224, !2225}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2678, file: !2679, line: 75, baseType: !2389, size: 64, offset: 832)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2678, file: !2679, line: 77, baseType: !2505, size: 64, offset: 896)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2072, file: !43, line: 541, baseType: !2154, size: 64, offset: 5248)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2072, file: !43, line: 543, baseType: !2385, size: 64, offset: 5312)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !2072, file: !43, line: 544, baseType: !2711, size: 64, offset: 5376)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !43, line: 45, flags: DIFlagFwdDecl)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !2072, file: !43, line: 545, baseType: !2714, size: 64, offset: 5440)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !43, line: 47, flags: DIFlagFwdDecl)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !2072, file: !43, line: 547, baseType: !292, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2072, file: !43, line: 548, baseType: !292, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !2072, file: !43, line: 549, baseType: !292, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !2072, file: !43, line: 550, baseType: !292, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !2061, file: !2062, line: 289, baseType: !2721, size: 64, offset: 128)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !2723, line: 302, size: 1472, elements: !2724)
!2723 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!2724 = !{!2725, !2726, !2727, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2985, !2986, !2989, !2990, !2992, !3080, !3083, !3084, !3209}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2722, file: !2723, line: 303, baseType: !165, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2722, file: !2723, line: 304, baseType: !2066, size: 32, offset: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !2722, file: !2723, line: 305, baseType: !2728, size: 64, offset: 64)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !2731, line: 14, size: 832, elements: !2732)
!2731 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!2732 = !{!2733, !2734, !2735, !2955, !2956, !2957}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2730, file: !2731, line: 15, baseType: !2075, size: 512)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2730, file: !2731, line: 16, baseType: !208, size: 64, offset: 512)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2730, file: !2731, line: 17, baseType: !2736, size: 64, offset: 576)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2738)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !77, line: 1822, size: 2048, elements: !2739)
!2739 = !{!2740, !2741, !2745, !2749, !2753, !2754, !2755, !2759, !2772, !2773, !2777, !2781, !2782, !2786, !2787, !2791, !2796, !2797, !2801, !2805, !2913, !2917, !2918, !2922, !2923, !2929, !2933, !2938, !2942, !2946, !2950, !2954}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2738, file: !77, line: 1823, baseType: !208, size: 64)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2738, file: !77, line: 1824, baseType: !2742, size: 64, offset: 64)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{!775, !604, !775, !165}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2738, file: !77, line: 1825, baseType: !2746, size: 64, offset: 128)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DISubroutineType(types: !2748)
!2748 = !{!820, !604, !155, !823, !976}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2738, file: !77, line: 1826, baseType: !2750, size: 64, offset: 192)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!820, !604, !206, !823, !976}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2738, file: !77, line: 1827, baseType: !1113, size: 64, offset: 256)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2738, file: !77, line: 1828, baseType: !1113, size: 64, offset: 320)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2738, file: !77, line: 1829, baseType: !2756, size: 64, offset: 384)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{!165, !1116, !292}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2738, file: !77, line: 1830, baseType: !2760, size: 64, offset: 448)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{!165, !604, !2763}
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !77, line: 1776, size: 128, elements: !2765)
!2765 = !{!2766, !2771}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2764, file: !77, line: 1777, baseType: !2767, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !77, line: 1773, baseType: !2768)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DISubroutineType(types: !2770)
!2770 = !{!165, !2763, !206, !165, !775, !669, !7}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2764, file: !77, line: 1778, baseType: !775, size: 64, offset: 64)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2738, file: !77, line: 1831, baseType: !2760, size: 64, offset: 512)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2738, file: !77, line: 1832, baseType: !2774, size: 64, offset: 576)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 64)
!2775 = !DISubroutineType(types: !2776)
!2776 = !{!2337, !604, !2339}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2738, file: !77, line: 1833, baseType: !2778, size: 64, offset: 640)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = !DISubroutineType(types: !2780)
!2780 = !{!107, !604, !7, !158}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2738, file: !77, line: 1834, baseType: !2778, size: 64, offset: 704)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2738, file: !77, line: 1835, baseType: !2783, size: 64, offset: 768)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DISubroutineType(types: !2785)
!2785 = !{!165, !604, !1249}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2738, file: !77, line: 1836, baseType: !158, size: 64, offset: 832)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2738, file: !77, line: 1837, baseType: !2788, size: 64, offset: 896)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!165, !676, !604}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2738, file: !77, line: 1838, baseType: !2792, size: 64, offset: 960)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{!165, !604, !2795}
!2795 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !77, line: 1007, baseType: !153)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2738, file: !77, line: 1839, baseType: !2788, size: 64, offset: 1024)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2738, file: !77, line: 1840, baseType: !2798, size: 64, offset: 1088)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{!165, !604, !775, !775, !165}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2738, file: !77, line: 1841, baseType: !2802, size: 64, offset: 1152)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{!165, !165, !604, !165}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2738, file: !77, line: 1842, baseType: !2806, size: 64, offset: 1216)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!165, !604, !165, !2809}
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !77, line: 1062, size: 1664, elements: !2811)
!2811 = !{!2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2843, !2844, !2845, !2858, !2889}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2810, file: !77, line: 1063, baseType: !2809, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2810, file: !77, line: 1064, baseType: !595, size: 128, offset: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2810, file: !77, line: 1065, baseType: !364, size: 128, offset: 192)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2810, file: !77, line: 1066, baseType: !595, size: 128, offset: 320)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2810, file: !77, line: 1069, baseType: !595, size: 128, offset: 448)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2810, file: !77, line: 1072, baseType: !2795, size: 64, offset: 576)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2810, file: !77, line: 1073, baseType: !7, size: 32, offset: 640)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2810, file: !77, line: 1074, baseType: !154, size: 8, offset: 672)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2810, file: !77, line: 1075, baseType: !7, size: 32, offset: 704)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2810, file: !77, line: 1076, baseType: !165, size: 32, offset: 736)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2810, file: !77, line: 1077, baseType: !1735, size: 128, offset: 768)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2810, file: !77, line: 1078, baseType: !604, size: 64, offset: 896)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2810, file: !77, line: 1079, baseType: !775, size: 64, offset: 960)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2810, file: !77, line: 1080, baseType: !775, size: 64, offset: 1024)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2810, file: !77, line: 1082, baseType: !2827, size: 64, offset: 1088)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !77, line: 1314, size: 320, elements: !2829)
!2829 = !{!2830, !2838, !2839, !2840, !2841, !2842}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2828, file: !77, line: 1315, baseType: !2831)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2832, line: 20, baseType: !2833)
!2832 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2832, line: 11, elements: !2834)
!2834 = !{!2835}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2833, file: !2832, line: 12, baseType: !2836)
!2836 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !344, line: 33, baseType: !2837)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !344, line: 31, elements: !346)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2828, file: !77, line: 1316, baseType: !165, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2828, file: !77, line: 1317, baseType: !165, size: 32, offset: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2828, file: !77, line: 1318, baseType: !2827, size: 64, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2828, file: !77, line: 1319, baseType: !604, size: 64, offset: 128)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2828, file: !77, line: 1320, baseType: !617, size: 128, align: 64, offset: 192)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2810, file: !77, line: 1084, baseType: !158, size: 64, offset: 1152)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2810, file: !77, line: 1085, baseType: !158, size: 64, offset: 1216)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2810, file: !77, line: 1087, baseType: !2846, size: 64, offset: 1280)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2848)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !77, line: 1011, size: 128, elements: !2849)
!2849 = !{!2850, !2854}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2848, file: !77, line: 1012, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DISubroutineType(types: !2853)
!2853 = !{null, !2809, !2809}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2848, file: !77, line: 1013, baseType: !2855, size: 64, offset: 64)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DISubroutineType(types: !2857)
!2857 = !{null, !2809}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2810, file: !77, line: 1088, baseType: !2859, size: 64, offset: 1344)
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2861)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !77, line: 1016, size: 512, elements: !2862)
!2862 = !{!2863, !2867, !2871, !2872, !2876, !2880, !2884, !2888}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2861, file: !77, line: 1017, baseType: !2864, size: 64)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!2795, !2795}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2861, file: !77, line: 1018, baseType: !2868, size: 64, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{null, !2795}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2861, file: !77, line: 1019, baseType: !2855, size: 64, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2861, file: !77, line: 1020, baseType: !2873, size: 64, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!165, !2809, !165}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2861, file: !77, line: 1021, baseType: !2877, size: 64, offset: 256)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = !DISubroutineType(types: !2879)
!2879 = !{!292, !2809}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2861, file: !77, line: 1022, baseType: !2881, size: 64, offset: 320)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{!165, !2809, !165, !598}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2861, file: !77, line: 1023, baseType: !2885, size: 64, offset: 384)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = !DISubroutineType(types: !2887)
!2887 = !{null, !2809, !1090}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2861, file: !77, line: 1024, baseType: !2877, size: 64, offset: 448)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2810, file: !77, line: 1097, baseType: !2890, size: 256, offset: 1408)
!2890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2810, file: !77, line: 1089, size: 256, elements: !2891)
!2891 = !{!2892, !2901, !2907}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2890, file: !77, line: 1090, baseType: !2893, size: 256)
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2894, line: 10, size: 256, elements: !2895)
!2894 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2895 = !{!2896, !2897, !2900}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2893, file: !2894, line: 11, baseType: !377, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2893, file: !2894, line: 12, baseType: !2898, size: 64, offset: 64)
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 64)
!2899 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2894, line: 5, flags: DIFlagFwdDecl)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2893, file: !2894, line: 13, baseType: !595, size: 128, offset: 128)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2890, file: !77, line: 1091, baseType: !2902, size: 64)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2894, line: 17, size: 64, elements: !2903)
!2903 = !{!2904}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2902, file: !2894, line: 18, baseType: !2905, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2894, line: 16, flags: DIFlagFwdDecl)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2890, file: !77, line: 1096, baseType: !2908, size: 192)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2890, file: !77, line: 1092, size: 192, elements: !2909)
!2909 = !{!2910, !2911, !2912}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2908, file: !77, line: 1093, baseType: !595, size: 128)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2908, file: !77, line: 1094, baseType: !165, size: 32, offset: 128)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2908, file: !77, line: 1095, baseType: !7, size: 32, offset: 160)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2738, file: !77, line: 1843, baseType: !2914, size: 64, offset: 1280)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!820, !604, !1001, !165, !823, !976, !165}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2738, file: !77, line: 1844, baseType: !1369, size: 64, offset: 1344)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2738, file: !77, line: 1845, baseType: !2919, size: 64, offset: 1408)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!165, !165}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2738, file: !77, line: 1846, baseType: !2806, size: 64, offset: 1472)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2738, file: !77, line: 1847, baseType: !2924, size: 64, offset: 1536)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!820, !2927, !604, !976, !823, !7}
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1478, line: 53, flags: DIFlagFwdDecl)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2738, file: !77, line: 1848, baseType: !2930, size: 64, offset: 1600)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{!820, !604, !976, !2927, !823, !7}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2738, file: !77, line: 1849, baseType: !2934, size: 64, offset: 1664)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DISubroutineType(types: !2936)
!2936 = !{!165, !604, !107, !2937, !1090}
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2738, file: !77, line: 1850, baseType: !2939, size: 64, offset: 1728)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!107, !604, !165, !775, !775}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2738, file: !77, line: 1852, baseType: !2943, size: 64, offset: 1792)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !955, !604}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2738, file: !77, line: 1856, baseType: !2947, size: 64, offset: 1856)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = !DISubroutineType(types: !2949)
!2949 = !{!820, !604, !775, !604, !775, !823, !7}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2738, file: !77, line: 1858, baseType: !2951, size: 64, offset: 1920)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{!775, !604, !775, !604, !775, !775, !7}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2738, file: !77, line: 1861, baseType: !2798, size: 64, offset: 1984)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2730, file: !2731, line: 18, baseType: !595, size: 128, offset: 640)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2730, file: !2731, line: 19, baseType: !757, size: 32, offset: 768)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2730, file: !2731, line: 20, baseType: !7, size: 32, offset: 800)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2722, file: !2723, line: 306, baseType: !208, size: 64, offset: 128)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !2722, file: !2723, line: 307, baseType: !206, size: 64, offset: 192)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2722, file: !2723, line: 308, baseType: !206, size: 64, offset: 256)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !2722, file: !2723, line: 309, baseType: !165, size: 32, offset: 320)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2722, file: !2723, line: 310, baseType: !165, size: 32, offset: 352)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !2722, file: !2723, line: 311, baseType: !165, size: 32, offset: 384)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2722, file: !2723, line: 312, baseType: !7, size: 32, offset: 416)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2722, file: !2723, line: 313, baseType: !501, size: 16, offset: 448)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !2722, file: !2723, line: 314, baseType: !501, size: 16, offset: 464)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !2722, file: !2723, line: 315, baseType: !2968, size: 352, offset: 480)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !2969, line: 32, size: 352, elements: !2970)
!2969 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!2970 = !{!2971, !2973, !2974, !2975, !2976, !2978, !2982, !2984}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !2968, file: !2969, line: 33, baseType: !2972, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !2969, line: 9, baseType: !7)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !2968, file: !2969, line: 34, baseType: !2972, size: 32, offset: 32)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !2968, file: !2969, line: 35, baseType: !2972, size: 32, offset: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !2968, file: !2969, line: 36, baseType: !2972, size: 32, offset: 96)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !2968, file: !2969, line: 37, baseType: !2977, size: 8, offset: 128)
!2977 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !2969, line: 7, baseType: !154)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !2968, file: !2969, line: 38, baseType: !2979, size: 152, offset: 136)
!2979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2977, size: 152, elements: !2980)
!2980 = !{!2981}
!2981 = !DISubrange(count: 19)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !2968, file: !2969, line: 39, baseType: !2983, size: 32, offset: 288)
!2983 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !2969, line: 8, baseType: !7)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !2968, file: !2969, line: 40, baseType: !2983, size: 32, offset: 320)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2722, file: !2723, line: 316, baseType: !158, size: 64, offset: 832)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !2722, file: !2723, line: 317, baseType: !2987, size: 64, offset: 896)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !2723, line: 317, flags: DIFlagFwdDecl)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2722, file: !2723, line: 318, baseType: !2721, size: 64, offset: 960)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !2722, file: !2723, line: 323, baseType: !2991, size: 64, offset: 1024)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !2722, file: !2723, line: 324, baseType: !2993, size: 64, offset: 1088)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !2062, line: 230, size: 2432, elements: !2996)
!2996 = !{!2997, !3029, !3030, !3031, !3053, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2995, file: !2062, line: 231, baseType: !2998, size: 1024)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !2062, line: 85, size: 1024, elements: !2999)
!2999 = !{!3000, !3018, !3019, !3020, !3021, !3022, !3026, !3027, !3028}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2998, file: !2062, line: 86, baseType: !3001, size: 64)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !2062, line: 58, size: 256, elements: !3003)
!3003 = !{!3004, !3009, !3010, !3011, !3012, !3013, !3014}
!3004 = !DIDerivedType(tag: DW_TAG_member, scope: !3002, file: !2062, line: 59, baseType: !3005, size: 64)
!3005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3002, file: !2062, line: 59, size: 64, elements: !3006)
!3006 = !{!3007, !3008}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3005, file: !2062, line: 60, baseType: !3001, size: 64)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3005, file: !2062, line: 61, baseType: !611, size: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !3002, file: !2062, line: 63, baseType: !165, size: 32, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3002, file: !2062, line: 64, baseType: !165, size: 32, offset: 96)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !3002, file: !2062, line: 65, baseType: !165, size: 32, offset: 128)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3002, file: !2062, line: 66, baseType: !165, size: 32, offset: 160)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3002, file: !2062, line: 67, baseType: !165, size: 32, offset: 192)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3002, file: !2062, line: 69, baseType: !3015, offset: 256)
!3015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, elements: !3016)
!3016 = !{!3017}
!3017 = !DISubrange(count: -1)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2998, file: !2062, line: 87, baseType: !2575, size: 256, offset: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2998, file: !2062, line: 88, baseType: !580, size: 192, offset: 320)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2998, file: !2062, line: 89, baseType: !287, size: 32, offset: 512)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !2998, file: !2062, line: 90, baseType: !3002, size: 256, offset: 576)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2998, file: !2062, line: 91, baseType: !3023, size: 64, offset: 832)
!3023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !612, line: 54, size: 64, elements: !3024)
!3024 = !{!3025}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3023, file: !612, line: 55, baseType: !615, size: 64)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !2998, file: !2062, line: 92, baseType: !287, size: 32, offset: 896)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !2998, file: !2062, line: 93, baseType: !165, size: 32, offset: 928)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2998, file: !2062, line: 94, baseType: !3001, size: 64, offset: 960)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2995, file: !2062, line: 232, baseType: !2060, size: 64, offset: 1024)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !2995, file: !2062, line: 233, baseType: !2060, size: 64, offset: 1088)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2995, file: !2062, line: 234, baseType: !3032, size: 64, offset: 1152)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3034)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !2062, line: 205, size: 320, elements: !3035)
!3035 = !{!3036, !3040, !3044, !3048, !3052}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !3034, file: !2062, line: 207, baseType: !3037, size: 64)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{!165, !2994}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !3034, file: !2062, line: 209, baseType: !3041, size: 64, offset: 64)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{null, !2994, !165}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3034, file: !2062, line: 213, baseType: !3045, size: 64, offset: 128)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{null, !2994}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3034, file: !2062, line: 218, baseType: !3049, size: 64, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!165, !2994, !2060}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !3034, file: !2062, line: 220, baseType: !3045, size: 64, offset: 256)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !2995, file: !2062, line: 235, baseType: !3054, size: 64, offset: 1216)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3056)
!3056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !2062, line: 223, size: 128, elements: !3057)
!3057 = !{!3058, !3062}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !3056, file: !2062, line: 224, baseType: !3059, size: 64)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!165, !2994, !673, !673, !823}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !3056, file: !2062, line: 225, baseType: !3045, size: 64, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2995, file: !2062, line: 236, baseType: !332, offset: 1280)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !2995, file: !2062, line: 237, baseType: !165, size: 32, offset: 1280)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2995, file: !2062, line: 238, baseType: !165, size: 32, offset: 1312)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !2995, file: !2062, line: 239, baseType: !1735, size: 128, offset: 1344)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !2995, file: !2062, line: 240, baseType: !1735, size: 128, offset: 1472)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2995, file: !2062, line: 241, baseType: !158, size: 64, offset: 1600)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !2995, file: !2062, line: 242, baseType: !158, size: 64, offset: 1664)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !2995, file: !2062, line: 243, baseType: !154, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !2995, file: !2062, line: 244, baseType: !154, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2995, file: !2062, line: 245, baseType: !580, size: 192, offset: 1792)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !2995, file: !2062, line: 246, baseType: !580, size: 192, offset: 1984)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !2995, file: !2062, line: 247, baseType: !160, size: 64, offset: 2176)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !2995, file: !2062, line: 248, baseType: !7, size: 32, offset: 2240)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !2995, file: !2062, line: 249, baseType: !7, size: 32, offset: 2272)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !2995, file: !2062, line: 250, baseType: !165, size: 32, offset: 2304)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2995, file: !2062, line: 253, baseType: !2066, size: 32, offset: 2336)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !2995, file: !2062, line: 254, baseType: !153, size: 64, offset: 2368)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !2722, file: !2723, line: 325, baseType: !3081, size: 64, offset: 1152)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2968, size: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !2722, file: !2723, line: 326, baseType: !153, size: 64, offset: 1216)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2722, file: !2723, line: 332, baseType: !3085, size: 64, offset: 1280)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3087)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !2723, line: 254, size: 2176, elements: !3088)
!3088 = !{!3089, !3093, !3097, !3101, !3105, !3109, !3113, !3114, !3118, !3122, !3123, !3127, !3128, !3132, !3136, !3140, !3141, !3142, !3143, !3144, !3145, !3149, !3150, !3151, !3155, !3159, !3160, !3164, !3176, !3191, !3197, !3203, !3204, !3208}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !3087, file: !2723, line: 255, baseType: !3090, size: 64)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!2060, !2721, !604, !165}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !3087, file: !2723, line: 257, baseType: !3094, size: 64, offset: 64)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!165, !2721, !2060}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3087, file: !2723, line: 258, baseType: !3098, size: 64, offset: 128)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{null, !2721, !2060}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3087, file: !2723, line: 259, baseType: !3102, size: 64, offset: 192)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!165, !2060, !604}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3087, file: !2723, line: 260, baseType: !3106, size: 64, offset: 256)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = !DISubroutineType(types: !3108)
!3108 = !{null, !2060, !604}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3087, file: !2723, line: 261, baseType: !3110, size: 64, offset: 320)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{null, !2060}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3087, file: !2723, line: 262, baseType: !3110, size: 64, offset: 384)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3087, file: !2723, line: 263, baseType: !3115, size: 64, offset: 448)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = !DISubroutineType(types: !3117)
!3117 = !{!165, !2060, !673, !165}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !3087, file: !2723, line: 265, baseType: !3119, size: 64, offset: 512)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!165, !2060, !154}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !3087, file: !2723, line: 266, baseType: !3110, size: 64, offset: 576)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !3087, file: !2723, line: 267, baseType: !3124, size: 64, offset: 640)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!165, !2060}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !3087, file: !2723, line: 268, baseType: !3124, size: 64, offset: 704)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3087, file: !2723, line: 269, baseType: !3129, size: 64, offset: 768)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!165, !2060, !7, !158}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3087, file: !2723, line: 271, baseType: !3133, size: 64, offset: 832)
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 64)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{!107, !2060, !7, !158}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !3087, file: !2723, line: 273, baseType: !3137, size: 64, offset: 896)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{null, !2060, !3082}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !3087, file: !2723, line: 274, baseType: !3110, size: 64, offset: 960)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !3087, file: !2723, line: 275, baseType: !3110, size: 64, offset: 1024)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !3087, file: !2723, line: 276, baseType: !3110, size: 64, offset: 1088)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3087, file: !2723, line: 277, baseType: !3110, size: 64, offset: 1152)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !3087, file: !2723, line: 278, baseType: !3110, size: 64, offset: 1216)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !3087, file: !2723, line: 279, baseType: !3146, size: 64, offset: 1280)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = !DISubroutineType(types: !3148)
!3148 = !{!165, !2060, !165}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !3087, file: !2723, line: 280, baseType: !3110, size: 64, offset: 1344)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !3087, file: !2723, line: 281, baseType: !3110, size: 64, offset: 1408)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !3087, file: !2723, line: 282, baseType: !3152, size: 64, offset: 1472)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{null, !2060, !165}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !3087, file: !2723, line: 283, baseType: !3156, size: 64, offset: 1536)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{null, !2060, !156}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !3087, file: !2723, line: 284, baseType: !3124, size: 64, offset: 1600)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !3087, file: !2723, line: 285, baseType: !3161, size: 64, offset: 1664)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = !DISubroutineType(types: !3163)
!3163 = !{!165, !2060, !7, !7}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !3087, file: !2723, line: 287, baseType: !3165, size: 64, offset: 1728)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!165, !2060, !3168}
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 64)
!3169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !3170, line: 15, size: 64, elements: !3171)
!3170 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!3171 = !{!3172, !3173, !3174, !3175}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !3169, file: !3170, line: 16, baseType: !236, size: 16)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !3169, file: !3170, line: 17, baseType: !236, size: 16, offset: 16)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !3169, file: !3170, line: 18, baseType: !236, size: 16, offset: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !3169, file: !3170, line: 19, baseType: !236, size: 16, offset: 48)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !3087, file: !2723, line: 288, baseType: !3177, size: 64, offset: 1792)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{!165, !2060, !3180}
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 64)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !3182, line: 10, size: 128, elements: !3183)
!3182 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!3183 = !{!3184, !3185, !3186, !3190}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !3181, file: !3182, line: 12, baseType: !234, size: 16)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !3181, file: !3182, line: 13, baseType: !234, size: 16, offset: 16)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !3181, file: !3182, line: 14, baseType: !3187, size: 80, offset: 32)
!3187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !234, size: 80, elements: !3188)
!3188 = !{!3189}
!3189 = !DISubrange(count: 5)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !3181, file: !3182, line: 15, baseType: !234, size: 16, offset: 112)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !3087, file: !2723, line: 289, baseType: !3192, size: 64, offset: 1856)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{!165, !2060, !3195}
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3196 = !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !2723, line: 251, flags: DIFlagFwdDecl)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !3087, file: !2723, line: 291, baseType: !3198, size: 64, offset: 1920)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!165, !2060, !3201}
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !2723, line: 252, flags: DIFlagFwdDecl)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !3087, file: !2723, line: 292, baseType: !3198, size: 64, offset: 1984)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3087, file: !2723, line: 293, baseType: !3205, size: 64, offset: 2048)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{null, !2060, !955}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !3087, file: !2723, line: 299, baseType: !986, size: 64, offset: 2112)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !2722, file: !2723, line: 333, baseType: !595, size: 128, offset: 1344)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2061, file: !2062, line: 290, baseType: !3085, size: 64, offset: 192)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2061, file: !2062, line: 291, baseType: !165, size: 32, offset: 256)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !2061, file: !2062, line: 294, baseType: !3213, size: 384, offset: 320)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !3214, line: 133, size: 384, elements: !3215)
!3214 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!3215 = !{!3216, !3217, !3218, !3219, !3220}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3213, file: !3214, line: 134, baseType: !584, size: 64)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !3213, file: !3214, line: 135, baseType: !1049, offset: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !3213, file: !3214, line: 136, baseType: !7, size: 32, offset: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !3213, file: !3214, line: 137, baseType: !595, size: 128, offset: 128)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !3213, file: !3214, line: 138, baseType: !595, size: 128, offset: 256)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !2061, file: !2062, line: 295, baseType: !3222, size: 64, offset: 704)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !3214, line: 215, size: 128, elements: !3224)
!3224 = !{!3225, !3270}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3223, file: !3214, line: 216, baseType: !3226, size: 64)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !3214, line: 175, size: 1216, elements: !3228)
!3228 = !{!3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3240, !3244, !3248, !3249, !3250, !3254, !3255, !3259, !3260, !3264, !3268, !3269}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3227, file: !3214, line: 176, baseType: !165, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3227, file: !3214, line: 177, baseType: !155, size: 64, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3227, file: !3214, line: 178, baseType: !165, size: 32, offset: 128)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3227, file: !3214, line: 179, baseType: !165, size: 32, offset: 160)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3227, file: !3214, line: 184, baseType: !3124, size: 64, offset: 192)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3227, file: !3214, line: 185, baseType: !3110, size: 64, offset: 256)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !3227, file: !3214, line: 186, baseType: !3110, size: 64, offset: 320)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3227, file: !3214, line: 187, baseType: !3237, size: 64, offset: 384)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{!820, !2060, !604, !160, !823}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3227, file: !3214, line: 189, baseType: !3241, size: 64, offset: 448)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!820, !2060, !604, !673, !823}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3227, file: !3214, line: 191, baseType: !3245, size: 64, offset: 512)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{!165, !2060, !604, !7, !158}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3227, file: !3214, line: 193, baseType: !3245, size: 64, offset: 576)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !3227, file: !3214, line: 195, baseType: !3137, size: 64, offset: 640)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3227, file: !3214, line: 196, baseType: !3251, size: 64, offset: 704)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!2337, !2060, !604, !2339}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !3227, file: !3214, line: 198, baseType: !3124, size: 64, offset: 768)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !3227, file: !3214, line: 203, baseType: !3256, size: 64, offset: 832)
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 64)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{null, !2060, !673, !155, !165}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !3227, file: !3214, line: 205, baseType: !3110, size: 64, offset: 896)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !3227, file: !3214, line: 206, baseType: !3261, size: 64, offset: 960)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{null, !2060, !7}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !3227, file: !3214, line: 207, baseType: !3265, size: 64, offset: 1024)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!165, !2060, !673, !155, !165}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3227, file: !3214, line: 210, baseType: !208, size: 64, offset: 1088)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3227, file: !3214, line: 212, baseType: !165, size: 32, offset: 1152)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3223, file: !3214, line: 217, baseType: !2060, size: 64, offset: 64)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !2061, file: !2062, line: 297, baseType: !580, size: 192, offset: 768)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !2061, file: !2062, line: 298, baseType: !580, size: 192, offset: 960)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !2061, file: !2062, line: 299, baseType: !580, size: 192, offset: 1152)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !2061, file: !2062, line: 300, baseType: !1043, size: 256, offset: 1344)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !2061, file: !2062, line: 301, baseType: !580, size: 192, offset: 1600)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !2061, file: !2062, line: 302, baseType: !332, offset: 1792)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !2061, file: !2062, line: 303, baseType: !332, offset: 1792)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !2061, file: !2062, line: 305, baseType: !2968, size: 352, offset: 1792)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !2061, file: !2062, line: 305, baseType: !2968, size: 352, offset: 2144)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !2061, file: !2062, line: 306, baseType: !3180, size: 64, offset: 2496)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2061, file: !2062, line: 307, baseType: !3282, size: 512, offset: 2560)
!3282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 512, elements: !2116)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !2061, file: !2062, line: 308, baseType: !1725, size: 64, offset: 3072)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !2061, file: !2062, line: 313, baseType: !1725, size: 64, offset: 3136)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2061, file: !2062, line: 314, baseType: !158, size: 64, offset: 3200)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2061, file: !2062, line: 315, baseType: !165, size: 32, offset: 3264)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !2061, file: !2062, line: 316, baseType: !3169, size: 64, offset: 3296)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !2061, file: !2062, line: 317, baseType: !158, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !2061, file: !2062, line: 318, baseType: !158, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2061, file: !2062, line: 319, baseType: !158, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !2061, file: !2062, line: 320, baseType: !165, size: 32, offset: 3456)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !2061, file: !2062, line: 321, baseType: !158, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2061, file: !2062, line: 322, baseType: !158, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !2061, file: !2062, line: 323, baseType: !158, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !2061, file: !2062, line: 324, baseType: !7, size: 32, offset: 3584)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !2061, file: !2062, line: 325, baseType: !165, size: 32, offset: 3616)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2061, file: !2062, line: 327, baseType: !2060, size: 64, offset: 3648)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2061, file: !2062, line: 328, baseType: !2827, size: 64, offset: 3712)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !2061, file: !2062, line: 329, baseType: !1735, size: 128, offset: 3776)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !2061, file: !2062, line: 330, baseType: !1735, size: 128, offset: 3904)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !2061, file: !2062, line: 331, baseType: !2575, size: 256, offset: 4032)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !2061, file: !2062, line: 332, baseType: !153, size: 64, offset: 4288)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2061, file: !2062, line: 333, baseType: !153, size: 64, offset: 4352)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !2061, file: !2062, line: 334, baseType: !332, offset: 4416)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !2061, file: !2062, line: 335, baseType: !595, size: 128, offset: 4416)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !2061, file: !2062, line: 339, baseType: !165, size: 32, offset: 4544)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !2061, file: !2062, line: 340, baseType: !160, size: 64, offset: 4608)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !2061, file: !2062, line: 341, baseType: !165, size: 32, offset: 4672)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !2061, file: !2062, line: 343, baseType: !2575, size: 256, offset: 4736)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2061, file: !2062, line: 344, baseType: !2994, size: 64, offset: 4992)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2007, file: !2008, line: 175, baseType: !3312, size: 32, offset: 3200)
!3312 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !640, line: 805, baseType: !3313)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !640, line: 798, size: 32, elements: !3314)
!3314 = !{!3315, !3316}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3313, file: !640, line: 803, baseType: !639, size: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3313, file: !640, line: 804, baseType: !332, offset: 32)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2007, file: !2008, line: 176, baseType: !669, size: 64, offset: 3264)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2007, file: !2008, line: 176, baseType: !669, size: 64, offset: 3328)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2007, file: !2008, line: 176, baseType: !669, size: 64, offset: 3392)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2007, file: !2008, line: 176, baseType: !669, size: 64, offset: 3456)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2007, file: !2008, line: 177, baseType: !669, size: 64, offset: 3520)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2007, file: !2008, line: 178, baseType: !669, size: 64, offset: 3584)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2007, file: !2008, line: 179, baseType: !1772, size: 128, offset: 3648)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2007, file: !2008, line: 180, baseType: !158, size: 64, offset: 3776)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2007, file: !2008, line: 180, baseType: !158, size: 64, offset: 3840)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2007, file: !2008, line: 180, baseType: !158, size: 64, offset: 3904)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2007, file: !2008, line: 180, baseType: !158, size: 64, offset: 3968)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2007, file: !2008, line: 181, baseType: !158, size: 64, offset: 4032)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2007, file: !2008, line: 181, baseType: !158, size: 64, offset: 4096)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2007, file: !2008, line: 181, baseType: !158, size: 64, offset: 4160)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2007, file: !2008, line: 181, baseType: !158, size: 64, offset: 4224)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2007, file: !2008, line: 182, baseType: !158, size: 64, offset: 4288)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2007, file: !2008, line: 182, baseType: !158, size: 64, offset: 4352)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2007, file: !2008, line: 182, baseType: !158, size: 64, offset: 4416)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2007, file: !2008, line: 182, baseType: !158, size: 64, offset: 4480)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2007, file: !2008, line: 183, baseType: !158, size: 64, offset: 4544)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2007, file: !2008, line: 183, baseType: !158, size: 64, offset: 4608)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2007, file: !2008, line: 184, baseType: !3339, offset: 4672)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3340, line: 12, elements: !346)
!3340 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2007, file: !2008, line: 192, baseType: !671, size: 64, offset: 4672)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2007, file: !2008, line: 203, baseType: !3343, size: 2048, offset: 4736)
!3343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3344, size: 2048, elements: !1987)
!3344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3345, line: 43, size: 128, elements: !3346)
!3345 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3346 = !{!3347, !3348}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3344, file: !3345, line: 44, baseType: !825, size: 64)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3344, file: !3345, line: 45, baseType: !825, size: 64, offset: 64)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2007, file: !2008, line: 220, baseType: !292, size: 8, offset: 6784)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2007, file: !2008, line: 221, baseType: !501, size: 16, offset: 6800)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2007, file: !2008, line: 222, baseType: !501, size: 16, offset: 6816)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2007, file: !2008, line: 224, baseType: !1242, size: 64, offset: 6848)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2007, file: !2008, line: 227, baseType: !580, size: 192, offset: 6912)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2007, file: !2008, line: 233, baseType: !580, size: 192, offset: 7104)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1477, file: !1478, line: 970, baseType: !3356, size: 64, offset: 9280)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2008, line: 20, size: 16576, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3362}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3357, file: !2008, line: 21, baseType: !332)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3357, file: !2008, line: 22, baseType: !1489, size: 32)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3357, file: !2008, line: 23, baseType: !1735, size: 128, offset: 64)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3357, file: !2008, line: 24, baseType: !3363, size: 16384, offset: 192)
!3363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3364, size: 16384, elements: !2116)
!3364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2018, line: 49, size: 256, elements: !3365)
!3365 = !{!3366}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3364, file: !2018, line: 50, baseType: !3367, size: 256)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2018, line: 35, size: 256, elements: !3368)
!3368 = !{!3369, !3376, !3377, !3383}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3367, file: !2018, line: 37, baseType: !3370, size: 64)
!3370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3371, line: 19, baseType: !3372)
!3371 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3371, line: 18, baseType: !3374)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{null, !165}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3367, file: !2018, line: 38, baseType: !158, size: 64, offset: 64)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3367, file: !2018, line: 44, baseType: !3378, size: 64, offset: 128)
!3378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3371, line: 22, baseType: !3379)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3371, line: 21, baseType: !3381)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{null}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3367, file: !2018, line: 46, baseType: !2022, size: 64, offset: 192)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1477, file: !1478, line: 971, baseType: !2022, size: 64, offset: 9344)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1477, file: !1478, line: 972, baseType: !2022, size: 64, offset: 9408)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1477, file: !1478, line: 974, baseType: !2022, size: 64, offset: 9472)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1477, file: !1478, line: 975, baseType: !2017, size: 192, offset: 9536)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1477, file: !1478, line: 976, baseType: !158, size: 64, offset: 9728)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1477, file: !1478, line: 977, baseType: !823, size: 64, offset: 9792)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1477, file: !1478, line: 978, baseType: !7, size: 32, offset: 9856)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1477, file: !1478, line: 980, baseType: !620, size: 64, offset: 9920)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1477, file: !1478, line: 989, baseType: !3393, size: 128, offset: 9984)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3394, line: 35, size: 128, elements: !3395)
!3394 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3395 = !{!3396, !3397, !3398}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3393, file: !3394, line: 36, baseType: !165, size: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3393, file: !3394, line: 37, baseType: !287, size: 32, offset: 32)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3393, file: !3394, line: 38, baseType: !3399, size: 64, offset: 64)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 64)
!3400 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3394, line: 23, flags: DIFlagFwdDecl)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1477, file: !1478, line: 992, baseType: !669, size: 64, offset: 10112)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1477, file: !1478, line: 993, baseType: !669, size: 64, offset: 10176)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1477, file: !1478, line: 996, baseType: !332, offset: 10240)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1477, file: !1478, line: 999, baseType: !1049, offset: 10240)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1477, file: !1478, line: 1001, baseType: !3406, size: 64, offset: 10240)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1478, line: 636, size: 64, elements: !3407)
!3407 = !{!3408}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3406, file: !1478, line: 637, baseType: !3409, size: 64)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1477, file: !1478, line: 1005, baseType: !1028, size: 128, offset: 10304)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1477, file: !1478, line: 1007, baseType: !1476, size: 64, offset: 10432)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1477, file: !1478, line: 1009, baseType: !3413, size: 64, offset: 10496)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1478, line: 1009, flags: DIFlagFwdDecl)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1477, file: !1478, line: 1043, baseType: !153, size: 64, offset: 10560)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1477, file: !1478, line: 1046, baseType: !3417, size: 64, offset: 10624)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1478, line: 41, flags: DIFlagFwdDecl)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1477, file: !1478, line: 1050, baseType: !3420, size: 64, offset: 10688)
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1478, line: 42, flags: DIFlagFwdDecl)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1477, file: !1478, line: 1054, baseType: !3423, size: 64, offset: 10752)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1478, line: 55, flags: DIFlagFwdDecl)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1477, file: !1478, line: 1056, baseType: !3426, size: 64, offset: 10816)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1478, line: 40, flags: DIFlagFwdDecl)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1477, file: !1478, line: 1058, baseType: !3429, size: 64, offset: 10880)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3431, line: 99, size: 704, elements: !3432)
!3431 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3432 = !{!3433, !3434, !3435, !3436, !3437, !3438, !3439, !3458, !3459}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3430, file: !3431, line: 100, baseType: !584, size: 64)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3430, file: !3431, line: 101, baseType: !287, size: 32, offset: 64)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3430, file: !3431, line: 102, baseType: !287, size: 32, offset: 96)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3430, file: !3431, line: 105, baseType: !332, offset: 128)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3430, file: !3431, line: 107, baseType: !236, size: 16, offset: 128)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3430, file: !3431, line: 109, baseType: !1019, size: 128, offset: 192)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3430, file: !3431, line: 110, baseType: !3440, size: 64, offset: 320)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3431, line: 73, size: 448, elements: !3442)
!3442 = !{!3443, !3446, !3447, !3452, !3457}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3441, file: !3431, line: 74, baseType: !3444, size: 64)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3431, line: 74, flags: DIFlagFwdDecl)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3441, file: !3431, line: 75, baseType: !3429, size: 64, offset: 64)
!3447 = !DIDerivedType(tag: DW_TAG_member, scope: !3441, file: !3431, line: 83, baseType: !3448, size: 128, offset: 128)
!3448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3441, file: !3431, line: 83, size: 128, elements: !3449)
!3449 = !{!3450, !3451}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3448, file: !3431, line: 84, baseType: !595, size: 128)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3448, file: !3431, line: 85, baseType: !1202, size: 64)
!3452 = !DIDerivedType(tag: DW_TAG_member, scope: !3441, file: !3431, line: 87, baseType: !3453, size: 128, offset: 256)
!3453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3441, file: !3431, line: 87, size: 128, elements: !3454)
!3454 = !{!3455, !3456}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3453, file: !3431, line: 88, baseType: !364, size: 128)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3453, file: !3431, line: 89, baseType: !617, size: 128, align: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3441, file: !3431, line: 92, baseType: !7, size: 32, offset: 384)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3430, file: !3431, line: 111, baseType: !883, size: 64, offset: 384)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3430, file: !3431, line: 113, baseType: !2575, size: 256, offset: 448)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1477, file: !1478, line: 1061, baseType: !3461, size: 64, offset: 10944)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1478, line: 43, flags: DIFlagFwdDecl)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1477, file: !1478, line: 1064, baseType: !158, size: 64, offset: 11008)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1477, file: !1478, line: 1065, baseType: !3465, size: 64, offset: 11072)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2018, line: 14, baseType: !3467)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2018, line: 12, size: 384, elements: !3468)
!3468 = !{!3469}
!3469 = !DIDerivedType(tag: DW_TAG_member, scope: !3467, file: !2018, line: 13, baseType: !3470, size: 384)
!3470 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3467, file: !2018, line: 13, size: 384, elements: !3471)
!3471 = !{!3472, !3473, !3474, !3475}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3470, file: !2018, line: 13, baseType: !165, size: 32)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3470, file: !2018, line: 13, baseType: !165, size: 32, offset: 32)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3470, file: !2018, line: 13, baseType: !165, size: 32, offset: 64)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3470, file: !2018, line: 13, baseType: !3476, size: 256, offset: 128)
!3476 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3477, line: 32, size: 256, elements: !3478)
!3477 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3478 = !{!3479, !3484, !3497, !3503, !3512, !3532, !3537}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3476, file: !3477, line: 37, baseType: !3480, size: 64)
!3480 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3476, file: !3477, line: 34, size: 64, elements: !3481)
!3481 = !{!3482, !3483}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3480, file: !3477, line: 35, baseType: !1714, size: 32)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3480, file: !3477, line: 36, baseType: !689, size: 32, offset: 32)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3476, file: !3477, line: 45, baseType: !3485, size: 192)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3476, file: !3477, line: 40, size: 192, elements: !3486)
!3486 = !{!3487, !3489, !3490, !3496}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3485, file: !3477, line: 41, baseType: !3488, size: 32)
!3488 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !690, line: 95, baseType: !165)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3485, file: !3477, line: 42, baseType: !165, size: 32, offset: 32)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3485, file: !3477, line: 43, baseType: !3491, size: 64, offset: 64)
!3491 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3477, line: 11, baseType: !3492)
!3492 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3477, line: 8, size: 64, elements: !3493)
!3493 = !{!3494, !3495}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3492, file: !3477, line: 9, baseType: !165, size: 32)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3492, file: !3477, line: 10, baseType: !153, size: 64)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3485, file: !3477, line: 44, baseType: !165, size: 32, offset: 128)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3476, file: !3477, line: 52, baseType: !3498, size: 128)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3476, file: !3477, line: 48, size: 128, elements: !3499)
!3499 = !{!3500, !3501, !3502}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3498, file: !3477, line: 49, baseType: !1714, size: 32)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3498, file: !3477, line: 50, baseType: !689, size: 32, offset: 32)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3498, file: !3477, line: 51, baseType: !3491, size: 64, offset: 64)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3476, file: !3477, line: 61, baseType: !3504, size: 256)
!3504 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3476, file: !3477, line: 55, size: 256, elements: !3505)
!3505 = !{!3506, !3507, !3508, !3509, !3511}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3504, file: !3477, line: 56, baseType: !1714, size: 32)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3504, file: !3477, line: 57, baseType: !689, size: 32, offset: 32)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3504, file: !3477, line: 58, baseType: !165, size: 32, offset: 64)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3504, file: !3477, line: 59, baseType: !3510, size: 64, offset: 128)
!3510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !690, line: 94, baseType: !822)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3504, file: !3477, line: 60, baseType: !3510, size: 64, offset: 192)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3476, file: !3477, line: 95, baseType: !3513, size: 256)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3476, file: !3477, line: 64, size: 256, elements: !3514)
!3514 = !{!3515, !3516}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3513, file: !3477, line: 65, baseType: !153, size: 64)
!3516 = !DIDerivedType(tag: DW_TAG_member, scope: !3513, file: !3477, line: 77, baseType: !3517, size: 192, offset: 64)
!3517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3513, file: !3477, line: 77, size: 192, elements: !3518)
!3518 = !{!3519, !3520, !3527}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3517, file: !3477, line: 82, baseType: !501, size: 16)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3517, file: !3477, line: 88, baseType: !3521, size: 192)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3517, file: !3477, line: 84, size: 192, elements: !3522)
!3522 = !{!3523, !3525, !3526}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3521, file: !3477, line: 85, baseType: !3524, size: 64)
!3524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 64, elements: !1589)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3521, file: !3477, line: 86, baseType: !153, size: 64, offset: 64)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3521, file: !3477, line: 87, baseType: !153, size: 64, offset: 128)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3517, file: !3477, line: 93, baseType: !3528, size: 96)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3517, file: !3477, line: 90, size: 96, elements: !3529)
!3529 = !{!3530, !3531}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3528, file: !3477, line: 91, baseType: !3524, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3528, file: !3477, line: 92, baseType: !378, size: 32, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3476, file: !3477, line: 101, baseType: !3533, size: 128)
!3533 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3476, file: !3477, line: 98, size: 128, elements: !3534)
!3534 = !{!3535, !3536}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3533, file: !3477, line: 99, baseType: !107, size: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3533, file: !3477, line: 100, baseType: !165, size: 32, offset: 64)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3476, file: !3477, line: 108, baseType: !3538, size: 128)
!3538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3476, file: !3477, line: 104, size: 128, elements: !3539)
!3539 = !{!3540, !3541, !3542}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3538, file: !3477, line: 105, baseType: !153, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3538, file: !3477, line: 106, baseType: !165, size: 32, offset: 64)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3538, file: !3477, line: 107, baseType: !7, size: 32, offset: 96)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1477, file: !1478, line: 1067, baseType: !3339, offset: 11136)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1477, file: !1478, line: 1099, baseType: !3545, size: 64, offset: 11136)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1478, line: 56, flags: DIFlagFwdDecl)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1477, file: !1478, line: 1103, baseType: !595, size: 128, offset: 11200)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1477, file: !1478, line: 1104, baseType: !3549, size: 64, offset: 11328)
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 64)
!3550 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1478, line: 46, flags: DIFlagFwdDecl)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1477, file: !1478, line: 1105, baseType: !580, size: 192, offset: 11392)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1477, file: !1478, line: 1106, baseType: !7, size: 32, offset: 11584)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1477, file: !1478, line: 1109, baseType: !3554, size: 128, offset: 11648)
!3554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3555, size: 128, elements: !459)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1478, line: 51, flags: DIFlagFwdDecl)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1477, file: !1478, line: 1110, baseType: !580, size: 192, offset: 11776)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1477, file: !1478, line: 1111, baseType: !595, size: 128, offset: 11968)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1477, file: !1478, line: 1173, baseType: !3560, size: 64, offset: 12096)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3562, line: 62, size: 256, align: 256, elements: !3563)
!3562 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3563 = !{!3564, !3565, !3566, !3571}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3561, file: !3562, line: 75, baseType: !378, size: 32)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3561, file: !3562, line: 90, baseType: !378, size: 32, offset: 32)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3561, file: !3562, line: 124, baseType: !3567, size: 64, offset: 64)
!3567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3561, file: !3562, line: 109, size: 64, elements: !3568)
!3568 = !{!3569, !3570}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3567, file: !3562, line: 110, baseType: !670, size: 64)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3567, file: !3562, line: 112, baseType: !670, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3561, file: !3562, line: 144, baseType: !378, size: 32, offset: 128)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1477, file: !1478, line: 1174, baseType: !377, size: 32, offset: 12160)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1477, file: !1478, line: 1179, baseType: !158, size: 64, offset: 12224)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1477, file: !1478, line: 1182, baseType: !3575, size: 128, offset: 12288)
!3575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1419, line: 76, size: 128, elements: !3576)
!3576 = !{!3577, !3582, !3583}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3575, file: !1419, line: 85, baseType: !3578, size: 64)
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3579, line: 7, size: 64, elements: !3580)
!3579 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3580 = !{!3581}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3578, file: !3579, line: 12, baseType: !1624, size: 64)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3575, file: !1419, line: 88, baseType: !292, size: 8, offset: 64)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3575, file: !1419, line: 95, baseType: !292, size: 8, offset: 72)
!3584 = !DIDerivedType(tag: DW_TAG_member, scope: !1477, file: !1478, line: 1184, baseType: !3585, size: 128, offset: 12416)
!3585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1477, file: !1478, line: 1184, size: 128, elements: !3586)
!3586 = !{!3587, !3588}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3585, file: !1478, line: 1185, baseType: !1489, size: 32)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3585, file: !1478, line: 1186, baseType: !617, size: 128, align: 64)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1477, file: !1478, line: 1190, baseType: !2927, size: 64, offset: 12544)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1477, file: !1478, line: 1192, baseType: !3591, size: 128, offset: 12608)
!3591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1419, line: 64, size: 128, elements: !3592)
!3592 = !{!3593, !3594, !3595}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3591, file: !1419, line: 65, baseType: !1001, size: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3591, file: !1419, line: 67, baseType: !378, size: 32, offset: 64)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3591, file: !1419, line: 68, baseType: !378, size: 32, offset: 96)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1477, file: !1478, line: 1206, baseType: !165, size: 32, offset: 12736)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1477, file: !1478, line: 1207, baseType: !165, size: 32, offset: 12768)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1477, file: !1478, line: 1209, baseType: !158, size: 64, offset: 12800)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1477, file: !1478, line: 1219, baseType: !669, size: 64, offset: 12864)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1477, file: !1478, line: 1220, baseType: !669, size: 64, offset: 12928)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1477, file: !1478, line: 1317, baseType: !165, size: 32, offset: 12992)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1477, file: !1478, line: 1319, baseType: !1476, size: 64, offset: 13056)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1477, file: !1478, line: 1322, baseType: !3604, size: 64, offset: 13120)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !1478, line: 1322, flags: DIFlagFwdDecl)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1477, file: !1478, line: 1326, baseType: !1489, size: 32, offset: 13184)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1477, file: !1478, line: 1342, baseType: !153, size: 64, offset: 13248)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1477, file: !1478, line: 1343, baseType: !670, size: 64, offset: 13312)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1477, file: !1478, line: 1344, baseType: !669, size: 64, offset: 13376)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1477, file: !1478, line: 1345, baseType: !670, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1477, file: !1478, line: 1346, baseType: !670, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1477, file: !1478, line: 1347, baseType: !670, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1477, file: !1478, line: 1348, baseType: !617, size: 128, align: 64, offset: 13504)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1477, file: !1478, line: 1358, baseType: !3615, size: 34816, offset: 13824)
!3615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3616, line: 485, size: 34816, elements: !3617)
!3616 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3617 = !{!3618, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3647, !3648, !3649, !3650, !3651, !3652, !3655, !3656, !3657}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3615, file: !3616, line: 487, baseType: !3619, size: 192)
!3619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3620, size: 192, elements: !893)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3621, line: 16, size: 64, elements: !3622)
!3621 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3622 = !{!3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3620, file: !3621, line: 17, baseType: !232, size: 16)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3620, file: !3621, line: 18, baseType: !232, size: 16, offset: 16)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3620, file: !3621, line: 19, baseType: !232, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3620, file: !3621, line: 19, baseType: !232, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3620, file: !3621, line: 19, baseType: !232, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3620, file: !3621, line: 19, baseType: !232, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3620, file: !3621, line: 19, baseType: !232, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3620, file: !3621, line: 20, baseType: !232, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3620, file: !3621, line: 20, baseType: !232, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3620, file: !3621, line: 20, baseType: !232, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3620, file: !3621, line: 20, baseType: !232, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3620, file: !3621, line: 20, baseType: !232, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3620, file: !3621, line: 20, baseType: !232, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3615, file: !3616, line: 491, baseType: !158, size: 64, offset: 192)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3615, file: !3616, line: 495, baseType: !236, size: 16, offset: 256)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3615, file: !3616, line: 496, baseType: !236, size: 16, offset: 272)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3615, file: !3616, line: 497, baseType: !236, size: 16, offset: 288)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3615, file: !3616, line: 498, baseType: !236, size: 16, offset: 304)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3615, file: !3616, line: 502, baseType: !158, size: 64, offset: 320)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3615, file: !3616, line: 503, baseType: !158, size: 64, offset: 384)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3615, file: !3616, line: 514, baseType: !3644, size: 256, offset: 448)
!3644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3645, size: 256, elements: !1423)
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 64)
!3646 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3616, line: 483, flags: DIFlagFwdDecl)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3615, file: !3616, line: 516, baseType: !158, size: 64, offset: 704)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3615, file: !3616, line: 518, baseType: !158, size: 64, offset: 768)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3615, file: !3616, line: 520, baseType: !158, size: 64, offset: 832)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3615, file: !3616, line: 521, baseType: !158, size: 64, offset: 896)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3615, file: !3616, line: 522, baseType: !158, size: 64, offset: 960)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3615, file: !3616, line: 528, baseType: !3653, size: 64, offset: 1024)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3616, line: 10, flags: DIFlagFwdDecl)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3615, file: !3616, line: 535, baseType: !158, size: 64, offset: 1088)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3615, file: !3616, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3615, file: !3616, line: 540, baseType: !3658, size: 33280, offset: 1536)
!3658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3659, line: 317, size: 33280, elements: !3660)
!3659 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3660 = !{!3661, !3662, !3663}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3658, file: !3659, line: 330, baseType: !7, size: 32)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3658, file: !3659, line: 337, baseType: !158, size: 64, offset: 64)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3658, file: !3659, line: 348, baseType: !3664, size: 32768, offset: 512)
!3664 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3659, line: 304, size: 32768, elements: !3665)
!3665 = !{!3666, !3681, !3716, !3741, !3754}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3664, file: !3659, line: 305, baseType: !3667, size: 896)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3659, line: 12, size: 896, elements: !3668)
!3668 = !{!3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3680}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3667, file: !3659, line: 13, baseType: !377, size: 32)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3667, file: !3659, line: 14, baseType: !377, size: 32, offset: 32)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3667, file: !3659, line: 15, baseType: !377, size: 32, offset: 64)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3667, file: !3659, line: 16, baseType: !377, size: 32, offset: 96)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3667, file: !3659, line: 17, baseType: !377, size: 32, offset: 128)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3667, file: !3659, line: 18, baseType: !377, size: 32, offset: 160)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3667, file: !3659, line: 19, baseType: !377, size: 32, offset: 192)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3667, file: !3659, line: 22, baseType: !3677, size: 640, offset: 224)
!3677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 640, elements: !3678)
!3678 = !{!3679}
!3679 = !DISubrange(count: 20)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3667, file: !3659, line: 25, baseType: !377, size: 32, offset: 864)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3664, file: !3659, line: 306, baseType: !3682, size: 4096, align: 128)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3659, line: 34, size: 4096, align: 128, elements: !3683)
!3683 = !{!3684, !3685, !3686, !3687, !3688, !3703, !3704, !3705, !3707, !3709, !3711}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3682, file: !3659, line: 35, baseType: !232, size: 16)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3682, file: !3659, line: 36, baseType: !232, size: 16, offset: 16)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3682, file: !3659, line: 37, baseType: !232, size: 16, offset: 32)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3682, file: !3659, line: 38, baseType: !232, size: 16, offset: 48)
!3688 = !DIDerivedType(tag: DW_TAG_member, scope: !3682, file: !3659, line: 39, baseType: !3689, size: 128, offset: 64)
!3689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3682, file: !3659, line: 39, size: 128, elements: !3690)
!3690 = !{!3691, !3696}
!3691 = !DIDerivedType(tag: DW_TAG_member, scope: !3689, file: !3659, line: 40, baseType: !3692, size: 128)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3689, file: !3659, line: 40, size: 128, elements: !3693)
!3693 = !{!3694, !3695}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3692, file: !3659, line: 41, baseType: !669, size: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3692, file: !3659, line: 42, baseType: !669, size: 64, offset: 64)
!3696 = !DIDerivedType(tag: DW_TAG_member, scope: !3689, file: !3659, line: 44, baseType: !3697, size: 128)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3689, file: !3659, line: 44, size: 128, elements: !3698)
!3698 = !{!3699, !3700, !3701, !3702}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3697, file: !3659, line: 45, baseType: !377, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3697, file: !3659, line: 46, baseType: !377, size: 32, offset: 32)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3697, file: !3659, line: 47, baseType: !377, size: 32, offset: 64)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3697, file: !3659, line: 48, baseType: !377, size: 32, offset: 96)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3682, file: !3659, line: 51, baseType: !377, size: 32, offset: 192)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3682, file: !3659, line: 52, baseType: !377, size: 32, offset: 224)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3682, file: !3659, line: 55, baseType: !3706, size: 1024, offset: 256)
!3706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 1024, elements: !480)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3682, file: !3659, line: 58, baseType: !3708, size: 2048, offset: 1280)
!3708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 2048, elements: !2116)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3682, file: !3659, line: 60, baseType: !3710, size: 384, offset: 3328)
!3710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 384, elements: !392)
!3711 = !DIDerivedType(tag: DW_TAG_member, scope: !3682, file: !3659, line: 62, baseType: !3712, size: 384, offset: 3712)
!3712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3682, file: !3659, line: 62, size: 384, elements: !3713)
!3713 = !{!3714, !3715}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3712, file: !3659, line: 63, baseType: !3710, size: 384)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3712, file: !3659, line: 64, baseType: !3710, size: 384)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3664, file: !3659, line: 307, baseType: !3717, size: 1088)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3659, line: 79, size: 1088, elements: !3718)
!3718 = !{!3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3740}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3717, file: !3659, line: 80, baseType: !377, size: 32)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3717, file: !3659, line: 81, baseType: !377, size: 32, offset: 32)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3717, file: !3659, line: 82, baseType: !377, size: 32, offset: 64)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3717, file: !3659, line: 83, baseType: !377, size: 32, offset: 96)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3717, file: !3659, line: 84, baseType: !377, size: 32, offset: 128)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3717, file: !3659, line: 85, baseType: !377, size: 32, offset: 160)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3717, file: !3659, line: 86, baseType: !377, size: 32, offset: 192)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3717, file: !3659, line: 88, baseType: !3677, size: 640, offset: 224)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3717, file: !3659, line: 89, baseType: !242, size: 8, offset: 864)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3717, file: !3659, line: 90, baseType: !242, size: 8, offset: 872)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3717, file: !3659, line: 91, baseType: !242, size: 8, offset: 880)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3717, file: !3659, line: 92, baseType: !242, size: 8, offset: 888)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3717, file: !3659, line: 93, baseType: !242, size: 8, offset: 896)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3717, file: !3659, line: 94, baseType: !242, size: 8, offset: 904)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3717, file: !3659, line: 95, baseType: !3734, size: 64, offset: 960)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3736, line: 11, size: 128, elements: !3737)
!3736 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3737 = !{!3738, !3739}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3735, file: !3736, line: 12, baseType: !107, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3735, file: !3736, line: 13, baseType: !167, size: 64, offset: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3717, file: !3659, line: 96, baseType: !377, size: 32, offset: 1024)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3664, file: !3659, line: 308, baseType: !3742, size: 4608, align: 512)
!3742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3659, line: 289, size: 4608, align: 512, elements: !3743)
!3743 = !{!3744, !3745, !3752}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3742, file: !3659, line: 290, baseType: !3682, size: 4096, align: 128)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3742, file: !3659, line: 291, baseType: !3746, size: 512, offset: 4096)
!3746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3659, line: 268, size: 512, elements: !3747)
!3747 = !{!3748, !3749, !3750}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3746, file: !3659, line: 269, baseType: !669, size: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3746, file: !3659, line: 270, baseType: !669, size: 64, offset: 64)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3746, file: !3659, line: 271, baseType: !3751, size: 384, offset: 128)
!3751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !669, size: 384, elements: !1877)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3742, file: !3659, line: 292, baseType: !3753, offset: 4608)
!3753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, elements: !1975)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3664, file: !3659, line: 309, baseType: !3755, size: 32768)
!3755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 32768, elements: !3756)
!3756 = !{!3757}
!3757 = !DISubrange(count: 4096)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1473, file: !1003, line: 378, baseType: !3759, size: 64, offset: 64)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1469, file: !1003, line: 384, baseType: !1756, size: 192, offset: 192)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1246, file: !1003, line: 500, baseType: !332, offset: 6656)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1246, file: !1003, line: 501, baseType: !3763, size: 64, offset: 6656)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1003, line: 387, flags: DIFlagFwdDecl)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1246, file: !1003, line: 516, baseType: !1965, size: 64, offset: 6720)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1246, file: !1003, line: 519, baseType: !604, size: 64, offset: 6784)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1246, file: !1003, line: 521, baseType: !3768, size: 64, offset: 6848)
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!3769 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1003, line: 521, flags: DIFlagFwdDecl)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1246, file: !1003, line: 545, baseType: !287, size: 32, offset: 6912)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1246, file: !1003, line: 548, baseType: !292, size: 8, offset: 6944)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1246, file: !1003, line: 550, baseType: !3773, offset: 6952)
!3773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3774, line: 142, elements: !346)
!3774 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1246, file: !1003, line: 554, baseType: !2575, size: 256, offset: 6976)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1246, file: !1003, line: 557, baseType: !377, size: 32, offset: 7232)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1243, file: !1003, line: 565, baseType: !3015, offset: 7296)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1239, file: !1003, line: 151, baseType: !287, size: 32)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1231, file: !1003, line: 156, baseType: !332, offset: 256)
!3780 = !DIDerivedType(tag: DW_TAG_member, scope: !1007, file: !1003, line: 159, baseType: !3781, size: 128)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1007, file: !1003, line: 159, size: 128, elements: !3782)
!3782 = !{!3783, !3847}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3781, file: !1003, line: 161, baseType: !3784, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !64, line: 110, size: 1152, elements: !3786)
!3786 = !{!3787, !3797, !3818, !3819, !3820, !3821, !3822, !3834, !3835, !3836}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3785, file: !64, line: 111, baseType: !3788, size: 384)
!3788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !64, line: 19, size: 384, elements: !3789)
!3789 = !{!3790, !3792, !3793, !3794, !3795, !3796}
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3788, file: !64, line: 20, baseType: !3791, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3788, file: !64, line: 21, baseType: !3791, size: 64, offset: 64)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3788, file: !64, line: 22, baseType: !3791, size: 64, offset: 128)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3788, file: !64, line: 23, baseType: !158, size: 64, offset: 192)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3788, file: !64, line: 24, baseType: !158, size: 64, offset: 256)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3788, file: !64, line: 25, baseType: !158, size: 64, offset: 320)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3785, file: !64, line: 112, baseType: !3798, size: 64, offset: 384)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3800, line: 105, size: 128, elements: !3801)
!3800 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3801 = !{!3802, !3803}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3799, file: !3800, line: 110, baseType: !158, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3799, file: !3800, line: 118, baseType: !3804, size: 64, offset: 64)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3800, line: 95, size: 448, elements: !3806)
!3806 = !{!3807, !3808, !3813, !3814, !3815, !3816, !3817}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3805, file: !3800, line: 96, baseType: !584, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3805, file: !3800, line: 97, baseType: !3809, size: 64, offset: 64)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3800, line: 60, baseType: !3811)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{null, !3798}
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3805, file: !3800, line: 98, baseType: !3809, size: 64, offset: 128)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3805, file: !3800, line: 99, baseType: !292, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3805, file: !3800, line: 100, baseType: !292, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3805, file: !3800, line: 101, baseType: !617, size: 128, align: 64, offset: 256)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3805, file: !3800, line: 102, baseType: !3798, size: 64, offset: 384)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3785, file: !64, line: 113, baseType: !3799, size: 128, offset: 448)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3785, file: !64, line: 114, baseType: !1756, size: 192, offset: 576)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3785, file: !64, line: 115, baseType: !63, size: 32, offset: 768)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3785, file: !64, line: 116, baseType: !7, size: 32, offset: 800)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3785, file: !64, line: 117, baseType: !3823, size: 64, offset: 832)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3825)
!3825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !64, line: 67, size: 256, elements: !3826)
!3826 = !{!3827, !3828, !3832, !3833}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3825, file: !64, line: 73, baseType: !1109, size: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3825, file: !64, line: 78, baseType: !3829, size: 64, offset: 64)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{null, !3784}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3825, file: !64, line: 83, baseType: !3829, size: 64, offset: 128)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3825, file: !64, line: 89, baseType: !1295, size: 64, offset: 192)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3785, file: !64, line: 118, baseType: !153, size: 64, offset: 896)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3785, file: !64, line: 119, baseType: !165, size: 32, offset: 960)
!3836 = !DIDerivedType(tag: DW_TAG_member, scope: !3785, file: !64, line: 120, baseType: !3837, size: 128, offset: 1024)
!3837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3785, file: !64, line: 120, size: 128, elements: !3838)
!3838 = !{!3839, !3845}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3837, file: !64, line: 121, baseType: !3840, size: 128)
!3840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3841, line: 6, size: 128, elements: !3842)
!3841 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3842 = !{!3843, !3844}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3840, file: !3841, line: 7, baseType: !669, size: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3840, file: !3841, line: 8, baseType: !669, size: 64, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3837, file: !64, line: 122, baseType: !3846)
!3846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3840, elements: !1975)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3781, file: !1003, line: 162, baseType: !153, size: 64, offset: 64)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1007, file: !1003, line: 176, baseType: !617, size: 128, align: 64)
!3849 = !DIDerivedType(tag: DW_TAG_member, scope: !1002, file: !1003, line: 179, baseType: !3850, size: 32, offset: 384)
!3850 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1002, file: !1003, line: 179, size: 32, elements: !3851)
!3851 = !{!3852, !3853, !3854, !3855}
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3850, file: !1003, line: 184, baseType: !287, size: 32)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3850, file: !1003, line: 192, baseType: !7, size: 32)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3850, file: !1003, line: 194, baseType: !7, size: 32)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3850, file: !1003, line: 195, baseType: !165, size: 32)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1002, file: !1003, line: 199, baseType: !287, size: 32, offset: 416)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !901, file: !77, line: 1964, baseType: !3858, size: 64, offset: 1344)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!107, !847, !3861}
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!3862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3863, line: 12, size: 256, elements: !3864)
!3863 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3864 = !{!3865, !3866, !3867, !3868, !3869}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3862, file: !3863, line: 13, baseType: !151, size: 32)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3862, file: !3863, line: 16, baseType: !165, size: 32, offset: 32)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3862, file: !3863, line: 23, baseType: !158, size: 64, offset: 64)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3862, file: !3863, line: 30, baseType: !158, size: 64, offset: 128)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3862, file: !3863, line: 33, baseType: !3870, size: 64, offset: 192)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1003, line: 27, flags: DIFlagFwdDecl)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !901, file: !77, line: 1966, baseType: !3858, size: 64, offset: 1408)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !848, file: !77, line: 1424, baseType: !3874, size: 64, offset: 448)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3876)
!3876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !71, line: 322, size: 704, elements: !3877)
!3877 = !{!3878, !3924, !3928, !3932, !3933, !3934, !3935, !3936, !3941, !3946, !3950}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3876, file: !71, line: 323, baseType: !3879, size: 64)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{!165, !3882}
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !71, line: 294, size: 1600, elements: !3884)
!3884 = !{!3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3909, !3910, !3911}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3883, file: !71, line: 295, baseType: !364, size: 128)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3883, file: !71, line: 296, baseType: !595, size: 128, offset: 128)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3883, file: !71, line: 297, baseType: !595, size: 128, offset: 256)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3883, file: !71, line: 298, baseType: !595, size: 128, offset: 384)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3883, file: !71, line: 299, baseType: !580, size: 192, offset: 512)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3883, file: !71, line: 300, baseType: !332, offset: 704)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3883, file: !71, line: 301, baseType: !287, size: 32, offset: 704)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3883, file: !71, line: 302, baseType: !847, size: 64, offset: 768)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3883, file: !71, line: 303, baseType: !3894, size: 64, offset: 832)
!3894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !71, line: 68, size: 64, elements: !3895)
!3895 = !{!3896, !3908}
!3896 = !DIDerivedType(tag: DW_TAG_member, scope: !3894, file: !71, line: 69, baseType: !3897, size: 32)
!3897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3894, file: !71, line: 69, size: 32, elements: !3898)
!3898 = !{!3899, !3900, !3901}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3897, file: !71, line: 70, baseType: !683, size: 32)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3897, file: !71, line: 71, baseType: !692, size: 32)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3897, file: !71, line: 72, baseType: !3902, size: 32)
!3902 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3903, line: 24, baseType: !3904)
!3903 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3903, line: 22, size: 32, elements: !3905)
!3905 = !{!3906}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3904, file: !3903, line: 23, baseType: !3907, size: 32)
!3907 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3903, line: 20, baseType: !689)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3894, file: !71, line: 74, baseType: !70, size: 32, offset: 32)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3883, file: !71, line: 304, baseType: !775, size: 64, offset: 896)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3883, file: !71, line: 305, baseType: !158, size: 64, offset: 960)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3883, file: !71, line: 306, baseType: !3912, size: 576, offset: 1024)
!3912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !71, line: 205, size: 576, elements: !3913)
!3913 = !{!3914, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3912, file: !71, line: 206, baseType: !3915, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !71, line: 66, baseType: !592)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3912, file: !71, line: 207, baseType: !3915, size: 64, offset: 64)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3912, file: !71, line: 208, baseType: !3915, size: 64, offset: 128)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3912, file: !71, line: 209, baseType: !3915, size: 64, offset: 192)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3912, file: !71, line: 210, baseType: !3915, size: 64, offset: 256)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3912, file: !71, line: 211, baseType: !3915, size: 64, offset: 320)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3912, file: !71, line: 212, baseType: !3915, size: 64, offset: 384)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3912, file: !71, line: 213, baseType: !782, size: 64, offset: 448)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3912, file: !71, line: 214, baseType: !782, size: 64, offset: 512)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3876, file: !71, line: 324, baseType: !3925, size: 64, offset: 64)
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3926, size: 64)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{!3882, !847, !165}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3876, file: !71, line: 325, baseType: !3929, size: 64, offset: 128)
!3929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3930, size: 64)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{null, !3882}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3876, file: !71, line: 326, baseType: !3879, size: 64, offset: 192)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3876, file: !71, line: 327, baseType: !3879, size: 64, offset: 256)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3876, file: !71, line: 328, baseType: !3879, size: 64, offset: 320)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3876, file: !71, line: 329, baseType: !929, size: 64, offset: 384)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3876, file: !71, line: 332, baseType: !3937, size: 64, offset: 448)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{!3940, !676}
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3876, file: !71, line: 333, baseType: !3942, size: 64, offset: 512)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!165, !676, !3945}
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3876, file: !71, line: 335, baseType: !3947, size: 64, offset: 576)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3948, size: 64)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!165, !676, !3940}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3876, file: !71, line: 337, baseType: !3951, size: 64, offset: 640)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{!165, !847, !3954}
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !848, file: !77, line: 1425, baseType: !3956, size: 64, offset: 512)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3958)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !71, line: 428, size: 704, elements: !3959)
!3959 = !{!3960, !3964, !3965, !3969, !3970, !3971, !3986, !4009, !4013, !4014, !4037}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3958, file: !71, line: 429, baseType: !3961, size: 64)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!165, !847, !165, !165, !791}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3958, file: !71, line: 430, baseType: !929, size: 64, offset: 64)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3958, file: !71, line: 431, baseType: !3966, size: 64, offset: 128)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!165, !847, !7}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3958, file: !71, line: 432, baseType: !3966, size: 64, offset: 192)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3958, file: !71, line: 433, baseType: !929, size: 64, offset: 256)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3958, file: !71, line: 434, baseType: !3972, size: 64, offset: 320)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!165, !847, !165, !3975}
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !71, line: 415, size: 256, elements: !3977)
!3977 = !{!3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3976, file: !71, line: 416, baseType: !165, size: 32)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3976, file: !71, line: 417, baseType: !7, size: 32, offset: 32)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3976, file: !71, line: 418, baseType: !7, size: 32, offset: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3976, file: !71, line: 420, baseType: !7, size: 32, offset: 96)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3976, file: !71, line: 421, baseType: !7, size: 32, offset: 128)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3976, file: !71, line: 422, baseType: !7, size: 32, offset: 160)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3976, file: !71, line: 423, baseType: !7, size: 32, offset: 192)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3976, file: !71, line: 424, baseType: !7, size: 32, offset: 224)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3958, file: !71, line: 435, baseType: !3987, size: 64, offset: 384)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!165, !847, !3894, !3990}
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !71, line: 343, size: 960, elements: !3992)
!3992 = !{!3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3991, file: !71, line: 344, baseType: !165, size: 32)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3991, file: !71, line: 345, baseType: !669, size: 64, offset: 64)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3991, file: !71, line: 346, baseType: !669, size: 64, offset: 128)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3991, file: !71, line: 347, baseType: !669, size: 64, offset: 192)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3991, file: !71, line: 348, baseType: !669, size: 64, offset: 256)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3991, file: !71, line: 349, baseType: !669, size: 64, offset: 320)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3991, file: !71, line: 350, baseType: !669, size: 64, offset: 384)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3991, file: !71, line: 351, baseType: !590, size: 64, offset: 448)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3991, file: !71, line: 353, baseType: !590, size: 64, offset: 512)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3991, file: !71, line: 354, baseType: !165, size: 32, offset: 576)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3991, file: !71, line: 355, baseType: !165, size: 32, offset: 608)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3991, file: !71, line: 356, baseType: !669, size: 64, offset: 640)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3991, file: !71, line: 357, baseType: !669, size: 64, offset: 704)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3991, file: !71, line: 358, baseType: !669, size: 64, offset: 768)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3991, file: !71, line: 359, baseType: !590, size: 64, offset: 832)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3991, file: !71, line: 360, baseType: !165, size: 32, offset: 896)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3958, file: !71, line: 436, baseType: !4010, size: 64, offset: 448)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!165, !847, !3954, !3990}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3958, file: !71, line: 438, baseType: !3987, size: 64, offset: 512)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3958, file: !71, line: 439, baseType: !4015, size: 64, offset: 576)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!165, !847, !4018}
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !71, line: 409, size: 1408, elements: !4020)
!4020 = !{!4021, !4022}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4019, file: !71, line: 410, baseType: !7, size: 32)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4019, file: !71, line: 411, baseType: !4023, size: 1344, offset: 64)
!4023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4024, size: 1344, elements: !893)
!4024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !71, line: 395, size: 448, elements: !4025)
!4025 = !{!4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4036}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4024, file: !71, line: 396, baseType: !7, size: 32)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4024, file: !71, line: 397, baseType: !7, size: 32, offset: 32)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4024, file: !71, line: 399, baseType: !7, size: 32, offset: 64)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4024, file: !71, line: 400, baseType: !7, size: 32, offset: 96)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4024, file: !71, line: 401, baseType: !7, size: 32, offset: 128)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4024, file: !71, line: 402, baseType: !7, size: 32, offset: 160)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4024, file: !71, line: 403, baseType: !7, size: 32, offset: 192)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4024, file: !71, line: 404, baseType: !671, size: 64, offset: 256)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4024, file: !71, line: 405, baseType: !4035, size: 64, offset: 320)
!4035 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !152, line: 126, baseType: !669)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4024, file: !71, line: 406, baseType: !4035, size: 64, offset: 384)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3958, file: !71, line: 440, baseType: !3966, size: 64, offset: 640)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !848, file: !77, line: 1426, baseType: !4039, size: 64, offset: 576)
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64)
!4040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4041)
!4041 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !77, line: 49, flags: DIFlagFwdDecl)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !848, file: !77, line: 1427, baseType: !158, size: 64, offset: 640)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !848, file: !77, line: 1428, baseType: !158, size: 64, offset: 704)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !848, file: !77, line: 1429, baseType: !158, size: 64, offset: 768)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !848, file: !77, line: 1430, baseType: !634, size: 64, offset: 832)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !848, file: !77, line: 1431, baseType: !1043, size: 256, offset: 896)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !848, file: !77, line: 1432, baseType: !165, size: 32, offset: 1152)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !848, file: !77, line: 1433, baseType: !287, size: 32, offset: 1184)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !848, file: !77, line: 1437, baseType: !4050, size: 64, offset: 1216)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4053)
!4053 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !77, line: 1437, flags: DIFlagFwdDecl)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !848, file: !77, line: 1449, baseType: !4055, size: 64, offset: 1280)
!4055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !650, line: 34, size: 64, elements: !4056)
!4056 = !{!4057}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4055, file: !650, line: 35, baseType: !653, size: 64)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !848, file: !77, line: 1450, baseType: !595, size: 128, offset: 1344)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !848, file: !77, line: 1451, baseType: !4060, size: 64, offset: 1472)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !77, line: 699, flags: DIFlagFwdDecl)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !848, file: !77, line: 1452, baseType: !3426, size: 64, offset: 1536)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !848, file: !77, line: 1453, baseType: !4064, size: 64, offset: 1600)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !77, line: 1453, flags: DIFlagFwdDecl)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !848, file: !77, line: 1454, baseType: !364, size: 128, offset: 1664)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !848, file: !77, line: 1455, baseType: !7, size: 32, offset: 1792)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !848, file: !77, line: 1456, baseType: !4069, size: 2432, offset: 1856)
!4069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !71, line: 518, size: 2432, elements: !4070)
!4070 = !{!4071, !4072, !4073, !4075, !4107}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4069, file: !71, line: 519, baseType: !7, size: 32)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4069, file: !71, line: 520, baseType: !1043, size: 256, offset: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4069, file: !71, line: 521, baseType: !4074, size: 192, offset: 320)
!4074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !676, size: 192, elements: !893)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4069, file: !71, line: 522, baseType: !4076, size: 1728, offset: 512)
!4076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4077, size: 1728, elements: !893)
!4077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !71, line: 222, size: 576, elements: !4078)
!4078 = !{!4079, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4077, file: !71, line: 223, baseType: !4080, size: 64)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !71, line: 443, size: 256, elements: !4082)
!4082 = !{!4083, !4084, !4097, !4098}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4081, file: !71, line: 444, baseType: !165, size: 32)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4081, file: !71, line: 445, baseType: !4085, size: 64, offset: 64)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4087)
!4087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !71, line: 310, size: 512, elements: !4088)
!4088 = !{!4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4087, file: !71, line: 311, baseType: !929, size: 64)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4087, file: !71, line: 312, baseType: !929, size: 64, offset: 64)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4087, file: !71, line: 313, baseType: !929, size: 64, offset: 128)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4087, file: !71, line: 314, baseType: !929, size: 64, offset: 192)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4087, file: !71, line: 315, baseType: !3879, size: 64, offset: 256)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4087, file: !71, line: 316, baseType: !3879, size: 64, offset: 320)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4087, file: !71, line: 317, baseType: !3879, size: 64, offset: 384)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4087, file: !71, line: 318, baseType: !3951, size: 64, offset: 448)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4081, file: !71, line: 446, baseType: !208, size: 64, offset: 128)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4081, file: !71, line: 447, baseType: !4080, size: 64, offset: 192)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4077, file: !71, line: 224, baseType: !165, size: 32, offset: 64)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4077, file: !71, line: 226, baseType: !595, size: 128, offset: 128)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4077, file: !71, line: 227, baseType: !158, size: 64, offset: 256)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4077, file: !71, line: 228, baseType: !7, size: 32, offset: 320)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4077, file: !71, line: 229, baseType: !7, size: 32, offset: 352)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4077, file: !71, line: 230, baseType: !3915, size: 64, offset: 384)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4077, file: !71, line: 231, baseType: !3915, size: 64, offset: 448)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4077, file: !71, line: 232, baseType: !153, size: 64, offset: 512)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4069, file: !71, line: 523, baseType: !4108, size: 192, offset: 2240)
!4108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4085, size: 192, elements: !893)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !848, file: !77, line: 1458, baseType: !4110, size: 2112, offset: 4288)
!4110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !77, line: 1410, size: 2112, elements: !4111)
!4111 = !{!4112, !4113, !4114}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4110, file: !77, line: 1411, baseType: !165, size: 32)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4110, file: !77, line: 1412, baseType: !1735, size: 128, offset: 64)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4110, file: !77, line: 1413, baseType: !4115, size: 1920, offset: 192)
!4115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4116, size: 1920, elements: !893)
!4116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4117, line: 12, size: 640, elements: !4118)
!4117 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4118 = !{!4119, !4127, !4128, !4133, !4134}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4116, file: !4117, line: 13, baseType: !4120, size: 320)
!4120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4121, line: 17, size: 320, elements: !4122)
!4121 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4122 = !{!4123, !4124, !4125, !4126}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4120, file: !4121, line: 18, baseType: !165, size: 32)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4120, file: !4121, line: 19, baseType: !165, size: 32, offset: 32)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4120, file: !4121, line: 20, baseType: !1735, size: 128, offset: 64)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4120, file: !4121, line: 22, baseType: !617, size: 128, align: 64, offset: 192)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4116, file: !4117, line: 14, baseType: !159, size: 64, offset: 320)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4116, file: !4117, line: 15, baseType: !4129, size: 64, offset: 384)
!4129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4130, line: 16, size: 64, elements: !4131)
!4130 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4131 = !{!4132}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4129, file: !4130, line: 17, baseType: !1476, size: 64)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4116, file: !4117, line: 16, baseType: !1735, size: 128, offset: 448)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4116, file: !4117, line: 17, baseType: !287, size: 32, offset: 576)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !848, file: !77, line: 1465, baseType: !153, size: 64, offset: 6400)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !848, file: !77, line: 1468, baseType: !377, size: 32, offset: 6464)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !848, file: !77, line: 1470, baseType: !782, size: 64, offset: 6528)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !848, file: !77, line: 1471, baseType: !782, size: 64, offset: 6592)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !848, file: !77, line: 1473, baseType: !378, size: 32, offset: 6656)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !848, file: !77, line: 1474, baseType: !4141, size: 64, offset: 6720)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !77, line: 603, flags: DIFlagFwdDecl)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !848, file: !77, line: 1477, baseType: !2450, size: 256, offset: 6784)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !848, file: !77, line: 1478, baseType: !4145, size: 128, offset: 7040)
!4145 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4146, line: 18, baseType: !4147)
!4146 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4146, line: 16, size: 128, elements: !4148)
!4148 = !{!4149}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4147, file: !4146, line: 17, baseType: !4150, size: 128)
!4150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 128, elements: !1987)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !848, file: !77, line: 1480, baseType: !7, size: 32, offset: 7168)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !848, file: !77, line: 1481, baseType: !4153, size: 32, offset: 7200)
!4153 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !152, line: 150, baseType: !7)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !848, file: !77, line: 1487, baseType: !580, size: 192, offset: 7232)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !848, file: !77, line: 1493, baseType: !206, size: 64, offset: 7424)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !848, file: !77, line: 1495, baseType: !4157, size: 64, offset: 7488)
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4159)
!4159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !632, line: 135, size: 1024, align: 512, elements: !4160)
!4160 = !{!4161, !4165, !4166, !4173, !4179, !4183, !4187, !4191, !4192, !4196, !4200, !4205, !4209}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4159, file: !632, line: 136, baseType: !4162, size: 64)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!165, !634, !7}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4159, file: !632, line: 137, baseType: !4162, size: 64, offset: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4159, file: !632, line: 138, baseType: !4167, size: 64, offset: 128)
!4167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4168, size: 64)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{!165, !4170, !4172}
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4171, size: 64)
!4171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !635)
!4172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4159, file: !632, line: 139, baseType: !4174, size: 64, offset: 192)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!165, !4170, !7, !206, !4177}
!4177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4178, size: 64)
!4178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !658)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4159, file: !632, line: 141, baseType: !4180, size: 64, offset: 256)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!165, !4170}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4159, file: !632, line: 142, baseType: !4184, size: 64, offset: 320)
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4185, size: 64)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!165, !634}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4159, file: !632, line: 143, baseType: !4188, size: 64, offset: 384)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{null, !634}
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4159, file: !632, line: 144, baseType: !4188, size: 64, offset: 448)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4159, file: !632, line: 145, baseType: !4193, size: 64, offset: 512)
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4194, size: 64)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{null, !634, !676}
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4159, file: !632, line: 146, baseType: !4197, size: 64, offset: 576)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!155, !634, !155, !165}
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4159, file: !632, line: 147, baseType: !4201, size: 64, offset: 640)
!4201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4202, size: 64)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!630, !4204}
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4159, file: !632, line: 148, baseType: !4206, size: 64, offset: 704)
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64)
!4207 = !DISubroutineType(types: !4208)
!4208 = !{!165, !791, !292}
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4159, file: !632, line: 149, baseType: !4210, size: 64, offset: 768)
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4211, size: 64)
!4211 = !DISubroutineType(types: !4212)
!4212 = !{!634, !634, !4213}
!4213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4214, size: 64)
!4214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !677)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !848, file: !77, line: 1500, baseType: !165, size: 32, offset: 7552)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !848, file: !77, line: 1502, baseType: !4217, size: 448, offset: 7616)
!4217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3863, line: 60, size: 448, elements: !4218)
!4218 = !{!4219, !4224, !4225, !4226, !4227, !4228, !4229}
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4217, file: !3863, line: 61, baseType: !4220, size: 64)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{!158, !4223, !3861}
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 64)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4217, file: !3863, line: 63, baseType: !4220, size: 64, offset: 64)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4217, file: !3863, line: 66, baseType: !107, size: 64, offset: 128)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4217, file: !3863, line: 67, baseType: !165, size: 32, offset: 192)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4217, file: !3863, line: 68, baseType: !7, size: 32, offset: 224)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4217, file: !3863, line: 71, baseType: !595, size: 128, offset: 256)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4217, file: !3863, line: 77, baseType: !4230, size: 64, offset: 384)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !848, file: !77, line: 1505, baseType: !584, size: 64, offset: 8064)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !848, file: !77, line: 1508, baseType: !584, size: 64, offset: 8128)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !848, file: !77, line: 1511, baseType: !165, size: 32, offset: 8192)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !848, file: !77, line: 1514, baseType: !1176, size: 32, offset: 8224)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !848, file: !77, line: 1517, baseType: !4236, size: 64, offset: 8256)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !106, line: 18, flags: DIFlagFwdDecl)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !848, file: !77, line: 1518, baseType: !883, size: 64, offset: 8320)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !848, file: !77, line: 1525, baseType: !1965, size: 64, offset: 8384)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !848, file: !77, line: 1532, baseType: !4241, size: 64, offset: 8448)
!4241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4242, line: 52, size: 64, elements: !4243)
!4242 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4243 = !{!4244}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4241, file: !4242, line: 53, baseType: !4245, size: 64)
!4245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4246, size: 64)
!4246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4242, line: 40, size: 256, elements: !4247)
!4247 = !{!4248, !4249, !4254}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4246, file: !4242, line: 42, baseType: !332)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4246, file: !4242, line: 44, baseType: !4250, size: 192)
!4250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4242, line: 28, size: 192, elements: !4251)
!4251 = !{!4252, !4253}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4250, file: !4242, line: 29, baseType: !595, size: 128)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4250, file: !4242, line: 31, baseType: !107, size: 64, offset: 128)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4246, file: !4242, line: 49, baseType: !107, size: 64, offset: 192)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !848, file: !77, line: 1533, baseType: !4241, size: 64, offset: 8512)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !848, file: !77, line: 1534, baseType: !617, size: 128, align: 64, offset: 8576)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !848, file: !77, line: 1535, baseType: !2575, size: 256, offset: 8704)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !848, file: !77, line: 1537, baseType: !580, size: 192, offset: 8960)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !848, file: !77, line: 1542, baseType: !165, size: 32, offset: 9152)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !848, file: !77, line: 1545, baseType: !332, offset: 9184)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !848, file: !77, line: 1546, baseType: !595, size: 128, offset: 9216)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !848, file: !77, line: 1548, baseType: !332, offset: 9344)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !848, file: !77, line: 1549, baseType: !595, size: 128, offset: 9344)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !677, file: !77, line: 624, baseType: !1014, size: 64, offset: 256)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !677, file: !77, line: 631, baseType: !158, size: 64, offset: 320)
!4266 = !DIDerivedType(tag: DW_TAG_member, scope: !677, file: !77, line: 639, baseType: !4267, size: 32, offset: 384)
!4267 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !677, file: !77, line: 639, size: 32, elements: !4268)
!4268 = !{!4269, !4271}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4267, file: !77, line: 640, baseType: !4270, size: 32)
!4270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4267, file: !77, line: 641, baseType: !7, size: 32)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !677, file: !77, line: 643, baseType: !757, size: 32, offset: 416)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !677, file: !77, line: 644, baseType: !775, size: 64, offset: 448)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !677, file: !77, line: 645, baseType: !778, size: 128, offset: 512)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !677, file: !77, line: 646, baseType: !778, size: 128, offset: 640)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !677, file: !77, line: 647, baseType: !778, size: 128, offset: 768)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !677, file: !77, line: 648, baseType: !332, offset: 896)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !677, file: !77, line: 649, baseType: !236, size: 16, offset: 896)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !677, file: !77, line: 650, baseType: !242, size: 8, offset: 912)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !677, file: !77, line: 651, baseType: !242, size: 8, offset: 920)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !677, file: !77, line: 652, baseType: !4035, size: 64, offset: 960)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !677, file: !77, line: 659, baseType: !158, size: 64, offset: 1024)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !677, file: !77, line: 660, baseType: !1043, size: 256, offset: 1088)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !677, file: !77, line: 662, baseType: !158, size: 64, offset: 1344)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !677, file: !77, line: 663, baseType: !158, size: 64, offset: 1408)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !677, file: !77, line: 665, baseType: !364, size: 128, offset: 1472)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !677, file: !77, line: 666, baseType: !595, size: 128, offset: 1600)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !677, file: !77, line: 675, baseType: !595, size: 128, offset: 1728)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !677, file: !77, line: 676, baseType: !595, size: 128, offset: 1856)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !677, file: !77, line: 677, baseType: !595, size: 128, offset: 1984)
!4291 = !DIDerivedType(tag: DW_TAG_member, scope: !677, file: !77, line: 678, baseType: !4292, size: 128, offset: 2112)
!4292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !677, file: !77, line: 678, size: 128, elements: !4293)
!4293 = !{!4294, !4295}
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4292, file: !77, line: 679, baseType: !883, size: 64)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4292, file: !77, line: 680, baseType: !617, size: 128, align: 64)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !677, file: !77, line: 682, baseType: !586, size: 64, offset: 2240)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !677, file: !77, line: 683, baseType: !586, size: 64, offset: 2304)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !677, file: !77, line: 684, baseType: !287, size: 32, offset: 2368)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !677, file: !77, line: 685, baseType: !287, size: 32, offset: 2400)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !677, file: !77, line: 686, baseType: !287, size: 32, offset: 2432)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !677, file: !77, line: 688, baseType: !287, size: 32, offset: 2464)
!4302 = !DIDerivedType(tag: DW_TAG_member, scope: !677, file: !77, line: 690, baseType: !4303, size: 64, offset: 2496)
!4303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !677, file: !77, line: 690, size: 64, elements: !4304)
!4304 = !{!4305, !4306}
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4303, file: !77, line: 691, baseType: !2736, size: 64)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4303, file: !77, line: 692, baseType: !908, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !677, file: !77, line: 694, baseType: !4308, size: 64, offset: 2560)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 64)
!4309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !77, line: 1100, size: 384, elements: !4310)
!4310 = !{!4311, !4312, !4313, !4314}
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4309, file: !77, line: 1101, baseType: !332)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4309, file: !77, line: 1102, baseType: !595, size: 128)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4309, file: !77, line: 1103, baseType: !595, size: 128, offset: 128)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4309, file: !77, line: 1104, baseType: !595, size: 128, offset: 256)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !677, file: !77, line: 695, baseType: !1015, size: 1216, align: 64, offset: 2624)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !677, file: !77, line: 696, baseType: !595, size: 128, offset: 3840)
!4317 = !DIDerivedType(tag: DW_TAG_member, scope: !677, file: !77, line: 697, baseType: !4318, size: 64, offset: 3968)
!4318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !677, file: !77, line: 697, size: 64, elements: !4319)
!4319 = !{!4320, !4321, !4322, !4323, !4324}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4318, file: !77, line: 698, baseType: !2927, size: 64)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4318, file: !77, line: 699, baseType: !4060, size: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4318, file: !77, line: 700, baseType: !2729, size: 64)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4318, file: !77, line: 701, baseType: !155, size: 64)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4318, file: !77, line: 702, baseType: !7, size: 32)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !677, file: !77, line: 705, baseType: !378, size: 32, offset: 4032)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !677, file: !77, line: 708, baseType: !378, size: 32, offset: 4064)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !677, file: !77, line: 709, baseType: !4141, size: 64, offset: 4096)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !677, file: !77, line: 720, baseType: !153, size: 64, offset: 4160)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !635, file: !632, line: 98, baseType: !4330, size: 256, offset: 448)
!4330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 256, elements: !480)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !635, file: !632, line: 101, baseType: !4332, size: 32, offset: 704)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4333, line: 25, size: 32, elements: !4334)
!4333 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4334 = !{!4335}
!4335 = !DIDerivedType(tag: DW_TAG_member, scope: !4332, file: !4333, line: 26, baseType: !4336, size: 32)
!4336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4332, file: !4333, line: 26, size: 32, elements: !4337)
!4337 = !{!4338}
!4338 = !DIDerivedType(tag: DW_TAG_member, scope: !4336, file: !4333, line: 30, baseType: !4339, size: 32)
!4339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4336, file: !4333, line: 30, size: 32, elements: !4340)
!4340 = !{!4341, !4342}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4339, file: !4333, line: 31, baseType: !332)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4339, file: !4333, line: 32, baseType: !165, size: 32)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !635, file: !632, line: 102, baseType: !4157, size: 64, offset: 768)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !635, file: !632, line: 103, baseType: !847, size: 64, offset: 832)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !635, file: !632, line: 104, baseType: !158, size: 64, offset: 896)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !635, file: !632, line: 105, baseType: !153, size: 64, offset: 960)
!4347 = !DIDerivedType(tag: DW_TAG_member, scope: !635, file: !632, line: 107, baseType: !4348, size: 128, offset: 1024)
!4348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !635, file: !632, line: 107, size: 128, elements: !4349)
!4349 = !{!4350, !4351}
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4348, file: !632, line: 108, baseType: !595, size: 128)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4348, file: !632, line: 109, baseType: !4352, size: 64)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !635, file: !632, line: 111, baseType: !595, size: 128, offset: 1152)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !635, file: !632, line: 112, baseType: !595, size: 128, offset: 1280)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !635, file: !632, line: 120, baseType: !4356, size: 128, offset: 1408)
!4356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !635, file: !632, line: 116, size: 128, elements: !4357)
!4357 = !{!4358, !4359, !4360}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4356, file: !632, line: 117, baseType: !364, size: 128)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4356, file: !632, line: 118, baseType: !649, size: 128)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4356, file: !632, line: 119, baseType: !617, size: 128, align: 64)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !605, file: !77, line: 922, baseType: !676, size: 64, offset: 256)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !605, file: !77, line: 923, baseType: !2736, size: 64, offset: 320)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !605, file: !77, line: 929, baseType: !332, offset: 384)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !605, file: !77, line: 930, baseType: !76, size: 32, offset: 384)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !605, file: !77, line: 931, baseType: !584, size: 64, offset: 448)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !605, file: !77, line: 932, baseType: !7, size: 32, offset: 512)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !605, file: !77, line: 933, baseType: !4153, size: 32, offset: 544)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !605, file: !77, line: 934, baseType: !580, size: 192, offset: 576)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !605, file: !77, line: 935, baseType: !775, size: 64, offset: 768)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !605, file: !77, line: 936, baseType: !4371, size: 192, offset: 832)
!4371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !77, line: 885, size: 192, elements: !4372)
!4372 = !{!4373, !4374, !4375, !4376, !4377, !4378}
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4371, file: !77, line: 886, baseType: !2831)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4371, file: !77, line: 887, baseType: !1725, size: 64)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4371, file: !77, line: 888, baseType: !85, size: 32, offset: 64)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4371, file: !77, line: 889, baseType: !683, size: 32, offset: 96)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4371, file: !77, line: 889, baseType: !683, size: 32, offset: 128)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4371, file: !77, line: 890, baseType: !165, size: 32, offset: 160)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !605, file: !77, line: 937, baseType: !1801, size: 64, offset: 1024)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !605, file: !77, line: 938, baseType: !4381, size: 256, offset: 1088)
!4381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !77, line: 896, size: 256, elements: !4382)
!4382 = !{!4383, !4384, !4385, !4386, !4387, !4388}
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4381, file: !77, line: 897, baseType: !158, size: 64)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4381, file: !77, line: 898, baseType: !7, size: 32, offset: 64)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4381, file: !77, line: 899, baseType: !7, size: 32, offset: 96)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4381, file: !77, line: 902, baseType: !7, size: 32, offset: 128)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4381, file: !77, line: 903, baseType: !7, size: 32, offset: 160)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4381, file: !77, line: 904, baseType: !775, size: 64, offset: 192)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !605, file: !77, line: 940, baseType: !669, size: 64, offset: 1344)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !605, file: !77, line: 945, baseType: !153, size: 64, offset: 1408)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !605, file: !77, line: 949, baseType: !595, size: 128, offset: 1472)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !605, file: !77, line: 950, baseType: !595, size: 128, offset: 1600)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !605, file: !77, line: 952, baseType: !1014, size: 64, offset: 1728)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !605, file: !77, line: 953, baseType: !1176, size: 32, offset: 1792)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !605, file: !77, line: 954, baseType: !1176, size: 32, offset: 1824)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "poller", scope: !433, file: !418, line: 163, baseType: !4397, size: 64, offset: 2048)
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev_poller", file: !418, line: 24, flags: DIFlagFwdDecl)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_key", scope: !433, file: !418, line: 165, baseType: !7, size: 32, offset: 2112)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !433, file: !418, line: 166, baseType: !360, size: 320, offset: 2176)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "rep", scope: !433, file: !418, line: 168, baseType: !4402, size: 64, offset: 2496)
!4402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 64, elements: !459)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !433, file: !418, line: 170, baseType: !4404, size: 64, offset: 2560)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_mt", file: !418, line: 170, flags: DIFlagFwdDecl)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "absinfo", scope: !433, file: !418, line: 172, baseType: !4407, size: 64, offset: 2624)
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 64)
!4408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_absinfo", file: !440, line: 90, size: 192, elements: !4409)
!4409 = !{!4410, !4411, !4412, !4413, !4414, !4415}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4408, file: !440, line: 91, baseType: !1699, size: 32)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !4408, file: !440, line: 92, baseType: !1699, size: 32, offset: 32)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !4408, file: !440, line: 93, baseType: !1699, size: 32, offset: 64)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !4408, file: !440, line: 94, baseType: !1699, size: 32, offset: 96)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !4408, file: !440, line: 95, baseType: !1699, size: 32, offset: 128)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !4408, file: !440, line: 96, baseType: !1699, size: 32, offset: 160)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !433, file: !418, line: 174, baseType: !391, size: 768, offset: 2688)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !433, file: !418, line: 175, baseType: !447, size: 64, offset: 3456)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "snd", scope: !433, file: !418, line: 176, baseType: !447, size: 64, offset: 3520)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !433, file: !418, line: 177, baseType: !447, size: 64, offset: 3584)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !433, file: !418, line: 179, baseType: !4421, size: 64, offset: 3648)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!4422 = !DISubroutineType(types: !4423)
!4423 = !{!165, !432}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !433, file: !418, line: 180, baseType: !4425, size: 64, offset: 3712)
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{null, !432}
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !433, file: !418, line: 181, baseType: !4429, size: 64, offset: 3776)
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{!165, !432, !604}
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !433, file: !418, line: 182, baseType: !4433, size: 64, offset: 3840)
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{!165, !432, !7, !7, !165}
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "grab", scope: !433, file: !418, line: 184, baseType: !425, size: 64, offset: 3904)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !433, file: !418, line: 186, baseType: !332, offset: 3968)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !433, file: !418, line: 187, baseType: !580, size: 192, offset: 3968)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !433, file: !418, line: 189, baseType: !7, size: 32, offset: 4160)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "going_away", scope: !433, file: !418, line: 190, baseType: !292, size: 8, offset: 4192)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !418, line: 192, baseType: !2072, size: 5568, offset: 4224)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !433, file: !418, line: 194, baseType: !595, size: 128, offset: 9792)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !433, file: !418, line: 195, baseType: !595, size: 128, offset: 9920)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "num_vals", scope: !433, file: !418, line: 197, baseType: !7, size: 32, offset: 10048)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "max_vals", scope: !433, file: !418, line: 198, baseType: !7, size: 32, offset: 10080)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "vals", scope: !433, file: !418, line: 199, baseType: !4447, size: 64, offset: 10112)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_value", file: !418, line: 32, size: 64, elements: !4449)
!4449 = !{!4450, !4451, !4452}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4448, file: !418, line: 33, baseType: !234, size: 16)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !4448, file: !418, line: 34, baseType: !234, size: 16, offset: 16)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4448, file: !418, line: 35, baseType: !1699, size: 32, offset: 32)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "devres_managed", scope: !433, file: !418, line: 201, baseType: !292, size: 8, offset: 10176)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !433, file: !418, line: 203, baseType: !4455, size: 192, offset: 10240)
!4455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1559, size: 192, elements: !893)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !426, file: !418, line: 345, baseType: !4457, size: 64, offset: 256)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "d_node", scope: !426, file: !418, line: 347, baseType: !595, size: 128, offset: 320)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "h_node", scope: !426, file: !418, line: 348, baseType: !595, size: 128, offset: 448)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !417, file: !418, line: 307, baseType: !4461, size: 64, offset: 128)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{null, !425, !4464, !7}
!4464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4465, size: 64)
!4465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4448)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !417, file: !418, line: 309, baseType: !4467, size: 64, offset: 192)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{!292, !425, !7, !7, !165}
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !417, file: !418, line: 310, baseType: !4471, size: 64, offset: 256)
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4472, size: 64)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{!292, !4457, !432}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !417, file: !418, line: 311, baseType: !4475, size: 64, offset: 320)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 64)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!165, !4457, !432, !4478}
!4478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 64)
!4479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4480)
!4480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_device_id", file: !2447, line: 342, size: 1600, elements: !4481)
!4481 = !{!4482, !4483, !4484, !4485, !4486, !4487, !4489, !4491, !4492, !4493, !4494, !4495, !4496, !4498, !4499, !4500}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4480, file: !2447, line: 344, baseType: !2465, size: 64)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !4480, file: !2447, line: 346, baseType: !234, size: 16, offset: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4480, file: !2447, line: 347, baseType: !234, size: 16, offset: 80)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !4480, file: !2447, line: 348, baseType: !234, size: 16, offset: 96)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4480, file: !2447, line: 349, baseType: !234, size: 16, offset: 112)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !4480, file: !2447, line: 351, baseType: !4488, size: 64, offset: 128)
!4488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2465, size: 64, elements: !448)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !4480, file: !2447, line: 352, baseType: !4490, size: 768, offset: 192)
!4490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2465, size: 768, elements: !392)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !4480, file: !2447, line: 353, baseType: !4488, size: 64, offset: 960)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !4480, file: !2447, line: 354, baseType: !4488, size: 64, offset: 1024)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !4480, file: !2447, line: 355, baseType: !4488, size: 64, offset: 1088)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !4480, file: !2447, line: 356, baseType: !4488, size: 64, offset: 1152)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !4480, file: !2447, line: 357, baseType: !4488, size: 64, offset: 1216)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !4480, file: !2447, line: 358, baseType: !4497, size: 128, offset: 1280)
!4497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2465, size: 128, elements: !459)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !4480, file: !2447, line: 359, baseType: !4488, size: 64, offset: 1408)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !4480, file: !2447, line: 360, baseType: !4488, size: 64, offset: 1472)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !4480, file: !2447, line: 362, baseType: !2465, size: 64, offset: 1536)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !417, file: !418, line: 312, baseType: !4502, size: 64, offset: 384)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 64)
!4503 = !DISubroutineType(types: !4504)
!4504 = !{null, !425}
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !417, file: !418, line: 313, baseType: !4502, size: 64, offset: 448)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_minors", scope: !417, file: !418, line: 315, baseType: !292, size: 8, offset: 512)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !417, file: !418, line: 316, baseType: !165, size: 32, offset: 544)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !417, file: !418, line: 317, baseType: !206, size: 64, offset: 576)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !417, file: !418, line: 319, baseType: !4478, size: 64, offset: 640)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !417, file: !418, line: 321, baseType: !595, size: 128, offset: 704)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !417, file: !418, line: 322, baseType: !595, size: 128, offset: 832)
!4512 = !DIGlobalVariableExpression(var: !4513, expr: !DIExpression())
!4513 = distinct !DIGlobalVariable(name: "rep", scope: !2, file: !3, line: 137, type: !156, isLocal: true, isDefinition: true)
!4514 = !DIGlobalVariableExpression(var: !4515, expr: !DIExpression())
!4515 = distinct !DIGlobalVariable(name: "x86_keycodes", scope: !2, file: !3, line: 1255, type: !4516, isLocal: true, isDefinition: true)
!4516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4517, size: 4096, elements: !4518)
!4517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !236)
!4518 = !{!4519}
!4519 = !DISubrange(count: 256)
!4520 = !DIGlobalVariableExpression(var: !4521, expr: !DIExpression())
!4521 = distinct !DIGlobalVariable(name: "diacr", scope: !2, file: !3, line: 136, type: !7, isLocal: true, isDefinition: true)
!4522 = !DIGlobalVariableExpression(var: !4523, expr: !DIExpression())
!4523 = distinct !DIGlobalVariable(name: "dead_key_next", scope: !2, file: !3, line: 130, type: !292, isLocal: true, isDefinition: true)
!4524 = !DIGlobalVariableExpression(var: !4525, expr: !DIExpression())
!4525 = distinct !DIGlobalVariable(name: "k_handler", scope: !2, file: !3, line: 84, type: !4526, isLocal: true, isDefinition: true)
!4526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4527, size: 1024, elements: !1987)
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 64)
!4528 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_handler_fn", file: !3, line: 81, baseType: !4529)
!4529 = !DISubroutineType(types: !4530)
!4530 = !{null, !4531, !154, !156}
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4532, size: 64)
!4532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vc_data", file: !99, line: 94, size: 5952, elements: !4533)
!4533 = !{!4534, !4535, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560, !4564, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4586, !4587, !4588, !4589, !4591, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4619, !4623, !4624, !4625, !4626, !4627, !4628, !4630, !4633, !4635}
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4532, file: !99, line: 95, baseType: !2995, size: 2432)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4532, file: !99, line: 97, baseType: !4536, size: 160, offset: 2432)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vc_state", file: !99, line: 46, size: 160, elements: !4537)
!4537 = !{!4538, !4539, !4540, !4541, !4543, !4544, !4545, !4546, !4547, !4548}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4536, file: !99, line: 47, baseType: !7, size: 32)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4536, file: !99, line: 47, baseType: !7, size: 32, offset: 32)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !4536, file: !99, line: 49, baseType: !154, size: 8, offset: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "Gx_charset", scope: !4536, file: !99, line: 51, baseType: !4542, size: 16, offset: 72)
!4542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 16, elements: !459)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "charset", scope: !4536, file: !99, line: 52, baseType: !7, size: 1, offset: 88, flags: DIFlagBitField, extraData: i64 88)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !4536, file: !99, line: 55, baseType: !98, size: 32, offset: 96)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "italic", scope: !4536, file: !99, line: 56, baseType: !292, size: 8, offset: 128)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "underline", scope: !4536, file: !99, line: 57, baseType: !292, size: 8, offset: 136)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "blink", scope: !4536, file: !99, line: 58, baseType: !292, size: 8, offset: 144)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !4536, file: !99, line: 59, baseType: !292, size: 8, offset: 152)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "saved_state", scope: !4532, file: !99, line: 97, baseType: !4536, size: 160, offset: 2592)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "vc_num", scope: !4532, file: !99, line: 99, baseType: !236, size: 16, offset: 2752)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "vc_cols", scope: !4532, file: !99, line: 100, baseType: !7, size: 32, offset: 2784)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "vc_rows", scope: !4532, file: !99, line: 101, baseType: !7, size: 32, offset: 2816)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "vc_size_row", scope: !4532, file: !99, line: 102, baseType: !7, size: 32, offset: 2848)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "vc_scan_lines", scope: !4532, file: !99, line: 103, baseType: !7, size: 32, offset: 2880)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "vc_origin", scope: !4532, file: !99, line: 104, baseType: !158, size: 64, offset: 2944)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "vc_scr_end", scope: !4532, file: !99, line: 105, baseType: !158, size: 64, offset: 3008)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "vc_visible_origin", scope: !4532, file: !99, line: 106, baseType: !158, size: 64, offset: 3072)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "vc_top", scope: !4532, file: !99, line: 107, baseType: !7, size: 32, offset: 3136)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "vc_bottom", scope: !4532, file: !99, line: 107, baseType: !7, size: 32, offset: 3168)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "vc_sw", scope: !4532, file: !99, line: 108, baseType: !4561, size: 64, offset: 3200)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4562, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4563)
!4563 = !DICompositeType(tag: DW_TAG_structure_type, name: "consw", file: !99, line: 108, flags: DIFlagFwdDecl)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "vc_screenbuf", scope: !4532, file: !99, line: 109, baseType: !4565, size: 64, offset: 3264)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "vc_screenbuf_size", scope: !4532, file: !99, line: 110, baseType: !7, size: 32, offset: 3328)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "vc_mode", scope: !4532, file: !99, line: 111, baseType: !154, size: 8, offset: 3360)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "vc_attr", scope: !4532, file: !99, line: 113, baseType: !154, size: 8, offset: 3368)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "vc_def_color", scope: !4532, file: !99, line: 114, baseType: !154, size: 8, offset: 3376)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "vc_ulcolor", scope: !4532, file: !99, line: 115, baseType: !154, size: 8, offset: 3384)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "vc_itcolor", scope: !4532, file: !99, line: 116, baseType: !154, size: 8, offset: 3392)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "vc_halfcolor", scope: !4532, file: !99, line: 117, baseType: !154, size: 8, offset: 3400)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "vc_cursor_type", scope: !4532, file: !99, line: 119, baseType: !7, size: 32, offset: 3424)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "vc_complement_mask", scope: !4532, file: !99, line: 120, baseType: !236, size: 16, offset: 3456)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "vc_s_complement_mask", scope: !4532, file: !99, line: 121, baseType: !236, size: 16, offset: 3472)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "vc_pos", scope: !4532, file: !99, line: 122, baseType: !158, size: 64, offset: 3520)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "vc_hi_font_mask", scope: !4532, file: !99, line: 124, baseType: !236, size: 16, offset: 3584)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "vc_font", scope: !4532, file: !99, line: 125, baseType: !4579, size: 192, offset: 3648)
!4579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console_font", file: !4580, line: 167, size: 192, elements: !4581)
!4580 = !DIFile(filename: "./include/uapi/linux/kd.h", directory: "/home/lizy2001/genbc/linux")
!4581 = !{!4582, !4583, !4584, !4585}
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4579, file: !4580, line: 168, baseType: !7, size: 32)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4579, file: !4580, line: 168, baseType: !7, size: 32, offset: 32)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "charcount", scope: !4579, file: !4580, line: 169, baseType: !7, size: 32, offset: 64)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4579, file: !4580, line: 170, baseType: !160, size: 64, offset: 128)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "vc_video_erase_char", scope: !4532, file: !99, line: 126, baseType: !236, size: 16, offset: 3840)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "vc_state", scope: !4532, file: !99, line: 128, baseType: !7, size: 32, offset: 3872)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "vc_npar", scope: !4532, file: !99, line: 129, baseType: !7, size: 32, offset: 3904)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "vc_par", scope: !4532, file: !99, line: 129, baseType: !4590, size: 512, offset: 3936)
!4590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 512, elements: !1987)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "vt_mode", scope: !4532, file: !99, line: 131, baseType: !4592, size: 64, offset: 4448)
!4592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vt_mode", file: !4593, line: 19, size: 64, elements: !4594)
!4593 = !DIFile(filename: "./include/uapi/linux/vt.h", directory: "/home/lizy2001/genbc/linux")
!4594 = !{!4595, !4596, !4597, !4598, !4599}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4592, file: !4593, line: 20, baseType: !156, size: 8)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "waitv", scope: !4592, file: !4593, line: 21, baseType: !156, size: 8, offset: 8)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "relsig", scope: !4592, file: !4593, line: 22, baseType: !501, size: 16, offset: 16)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "acqsig", scope: !4592, file: !4593, line: 23, baseType: !501, size: 16, offset: 32)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "frsig", scope: !4592, file: !4593, line: 24, baseType: !501, size: 16, offset: 48)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "vt_pid", scope: !4532, file: !99, line: 132, baseType: !1725, size: 64, offset: 4544)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "vt_newvt", scope: !4532, file: !99, line: 133, baseType: !165, size: 32, offset: 4608)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "paste_wait", scope: !4532, file: !99, line: 134, baseType: !1735, size: 128, offset: 4672)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "vc_disp_ctrl", scope: !4532, file: !99, line: 136, baseType: !7, size: 1, offset: 4800, flags: DIFlagBitField, extraData: i64 4800)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "vc_toggle_meta", scope: !4532, file: !99, line: 137, baseType: !7, size: 1, offset: 4801, flags: DIFlagBitField, extraData: i64 4800)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decscnm", scope: !4532, file: !99, line: 138, baseType: !7, size: 1, offset: 4802, flags: DIFlagBitField, extraData: i64 4800)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decom", scope: !4532, file: !99, line: 139, baseType: !7, size: 1, offset: 4803, flags: DIFlagBitField, extraData: i64 4800)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decawm", scope: !4532, file: !99, line: 140, baseType: !7, size: 1, offset: 4804, flags: DIFlagBitField, extraData: i64 4800)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "vc_deccm", scope: !4532, file: !99, line: 141, baseType: !7, size: 1, offset: 4805, flags: DIFlagBitField, extraData: i64 4800)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "vc_decim", scope: !4532, file: !99, line: 142, baseType: !7, size: 1, offset: 4806, flags: DIFlagBitField, extraData: i64 4800)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "vc_priv", scope: !4532, file: !99, line: 144, baseType: !7, size: 3, offset: 4807, flags: DIFlagBitField, extraData: i64 4800)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "vc_need_wrap", scope: !4532, file: !99, line: 145, baseType: !7, size: 1, offset: 4810, flags: DIFlagBitField, extraData: i64 4800)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "vc_can_do_color", scope: !4532, file: !99, line: 146, baseType: !7, size: 1, offset: 4811, flags: DIFlagBitField, extraData: i64 4800)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "vc_report_mouse", scope: !4532, file: !99, line: 147, baseType: !7, size: 2, offset: 4812, flags: DIFlagBitField, extraData: i64 4800)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "vc_utf", scope: !4532, file: !99, line: 148, baseType: !154, size: 1, offset: 4814, flags: DIFlagBitField, extraData: i64 4800)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "vc_utf_count", scope: !4532, file: !99, line: 149, baseType: !154, size: 8, offset: 4816)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "vc_utf_char", scope: !4532, file: !99, line: 150, baseType: !165, size: 32, offset: 4832)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "vc_tab_stop", scope: !4532, file: !99, line: 151, baseType: !4618, size: 256, offset: 4864)
!4618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !158, size: 256, elements: !1423)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "vc_palette", scope: !4532, file: !99, line: 152, baseType: !4620, size: 384, offset: 5120)
!4620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 384, elements: !4621)
!4621 = !{!4622}
!4622 = !DISubrange(count: 48)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "vc_translate", scope: !4532, file: !99, line: 153, baseType: !4565, size: 64, offset: 5504)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "vc_resize_user", scope: !4532, file: !99, line: 154, baseType: !7, size: 32, offset: 5568)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "vc_bell_pitch", scope: !4532, file: !99, line: 155, baseType: !7, size: 32, offset: 5600)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "vc_bell_duration", scope: !4532, file: !99, line: 156, baseType: !7, size: 32, offset: 5632)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "vc_cur_blink_ms", scope: !4532, file: !99, line: 157, baseType: !236, size: 16, offset: 5664)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "vc_display_fg", scope: !4532, file: !99, line: 158, baseType: !4629, size: 64, offset: 5696)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "vc_uni_pagedir", scope: !4532, file: !99, line: 159, baseType: !4631, size: 64, offset: 5760)
!4631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 64)
!4632 = !DICompositeType(tag: DW_TAG_structure_type, name: "uni_pagedir", file: !99, line: 20, flags: DIFlagFwdDecl)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "vc_uni_pagedir_loc", scope: !4532, file: !99, line: 160, baseType: !4634, size: 64, offset: 5824)
!4634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 64)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "vc_uni_screen", scope: !4532, file: !99, line: 161, baseType: !4636, size: 64, offset: 5888)
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4637, size: 64)
!4637 = !DICompositeType(tag: DW_TAG_structure_type, name: "uni_screen", file: !99, line: 21, flags: DIFlagFwdDecl)
!4638 = !DIGlobalVariableExpression(var: !4639, expr: !DIExpression())
!4639 = distinct !DIGlobalVariable(name: "fn_handler", scope: !2, file: !3, line: 95, type: !4640, isLocal: true, isDefinition: true)
!4640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4641, size: 1280, elements: !3678)
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = !DIDerivedType(tag: DW_TAG_typedef, name: "fn_handler_fn", file: !3, line: 93, baseType: !4643)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{null, !4531}
!4645 = !DIGlobalVariableExpression(var: !4646, expr: !DIExpression())
!4646 = distinct !DIGlobalVariable(name: "buf", scope: !4647, file: !3, line: 328, type: !4650, isLocal: true, isDefinition: true)
!4647 = distinct !DISubprogram(name: "applkey", scope: !3, file: !3, line: 326, type: !4648, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{null, !4531, !165, !156}
!4650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 32, elements: !1423)
!4651 = !DIGlobalVariableExpression(var: !4652, expr: !DIExpression())
!4652 = distinct !DIGlobalVariable(name: "pad_chars", scope: !4653, file: !3, line: 769, type: !403, isLocal: true, isDefinition: true)
!4653 = distinct !DISubprogram(name: "k_pad", scope: !3, file: !3, line: 767, type: !4529, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4654 = !DIGlobalVariableExpression(var: !4655, expr: !DIExpression())
!4655 = distinct !DIGlobalVariable(name: "app_map", scope: !4653, file: !3, line: 770, type: !403, isLocal: true, isDefinition: true)
!4656 = !DIGlobalVariableExpression(var: !4657, expr: !DIExpression())
!4657 = distinct !DIGlobalVariable(name: "ret_diacr", scope: !4658, file: !3, line: 699, type: !4659, isLocal: true, isDefinition: true)
!4658 = distinct !DISubprogram(name: "k_dead", scope: !3, file: !3, line: 697, type: !4529, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !674, size: 216, elements: !4660)
!4660 = !{!4661}
!4661 = !DISubrange(count: 27)
!4662 = !DIGlobalVariableExpression(var: !4663, expr: !DIExpression())
!4663 = distinct !DIGlobalVariable(name: "cur_chars", scope: !4664, file: !3, line: 759, type: !4665, isLocal: true, isDefinition: true)
!4664 = distinct !DISubprogram(name: "k_cur", scope: !3, file: !3, line: 757, type: !4529, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 40, elements: !3188)
!4666 = !DIGlobalVariableExpression(var: !4667, expr: !DIExpression())
!4667 = distinct !DIGlobalVariable(name: "npadch_active", scope: !2, file: !3, line: 133, type: !292, isLocal: true, isDefinition: true)
!4668 = !DIGlobalVariableExpression(var: !4669, expr: !DIExpression())
!4669 = distinct !DIGlobalVariable(name: "npadch_value", scope: !2, file: !3, line: 134, type: !7, isLocal: true, isDefinition: true)
!4670 = !DIGlobalVariableExpression(var: !4671, expr: !DIExpression())
!4671 = distinct !DIGlobalVariable(name: "pressed", scope: !4672, file: !3, line: 954, type: !7, isLocal: true, isDefinition: true)
!4672 = distinct !DISubprogram(name: "k_brl", scope: !3, file: !3, line: 952, type: !4529, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4673 = !DIGlobalVariableExpression(var: !4674, expr: !DIExpression())
!4674 = distinct !DIGlobalVariable(name: "committing", scope: !4672, file: !3, line: 954, type: !7, isLocal: true, isDefinition: true)
!4675 = !DIGlobalVariableExpression(var: !4676, expr: !DIExpression())
!4676 = distinct !DIGlobalVariable(name: "releasestart", scope: !4672, file: !3, line: 955, type: !158, isLocal: true, isDefinition: true)
!4677 = !DIGlobalVariableExpression(var: !4678, expr: !DIExpression())
!4678 = distinct !DIGlobalVariable(name: "chords", scope: !4679, file: !3, line: 936, type: !158, isLocal: true, isDefinition: true)
!4679 = distinct !DISubprogram(name: "k_brlcommit", scope: !3, file: !3, line: 934, type: !4680, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{null, !4531, !7, !156}
!4682 = !DIGlobalVariableExpression(var: !4683, expr: !DIExpression())
!4683 = distinct !DIGlobalVariable(name: "committed", scope: !4679, file: !3, line: 937, type: !7, isLocal: true, isDefinition: true)
!4684 = !DIGlobalVariableExpression(var: !4685, expr: !DIExpression())
!4685 = distinct !DIGlobalVariable(name: "kbd_ids", scope: !2, file: !3, line: 1593, type: !4686, isLocal: true, isDefinition: true)
!4686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4479, size: 4800, elements: !893)
!4687 = !DIGlobalVariableExpression(var: !4688, expr: !DIExpression())
!4688 = distinct !DIGlobalVariable(name: "max_vals", scope: !2, file: !3, line: 116, type: !4689, isLocal: true, isDefinition: true)
!4689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 480, elements: !4690)
!4690 = !{!4691}
!4691 = !DISubrange(count: 15)
!4692 = !DIGlobalVariableExpression(var: !4693, expr: !DIExpression())
!4693 = distinct !DIGlobalVariable(name: "func_buf_lock", scope: !2, file: !3, line: 127, type: !332, isLocal: true, isDefinition: true)
!4694 = !DIGlobalVariableExpression(var: !4695, expr: !DIExpression())
!4695 = distinct !DIGlobalVariable(name: "shift_state", scope: !2, file: !3, line: 139, type: !165, isLocal: true, isDefinition: true)
!4696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vt_spawn_console", file: !4697, line: 140, size: 128, elements: !4698)
!4697 = !DIFile(filename: "./include/linux/vt_kern.h", directory: "/home/lizy2001/genbc/linux")
!4698 = !{!4699, !4700, !4701}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4696, file: !4697, line: 141, baseType: !332)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4696, file: !4697, line: 142, baseType: !1725, size: 64)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !4696, file: !4697, line: 143, baseType: !165, size: 32, offset: 64)
!4702 = !{!"rsp"}
!4703 = !{i32 7, !"Dwarf Version", i32 4}
!4704 = !{i32 2, !"Debug Info Version", i32 3}
!4705 = !{i32 1, !"wchar_size", i32 2}
!4706 = !{i32 1, !"Code Model", i32 2}
!4707 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4708 = distinct !DISubprogram(name: "register_keyboard_notifier", scope: !3, file: !3, line: 149, type: !4709, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{!165, !348}
!4711 = !DILocalVariable(name: "nb", arg: 1, scope: !4708, file: !3, line: 149, type: !348)
!4712 = !DILocation(line: 149, column: 55, scope: !4708)
!4713 = !DILocation(line: 151, column: 65, scope: !4708)
!4714 = !DILocation(line: 151, column: 9, scope: !4708)
!4715 = !DILocation(line: 151, column: 2, scope: !4708)
!4716 = distinct !DISubprogram(name: "unregister_keyboard_notifier", scope: !3, file: !3, line: 155, type: !4709, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4717 = !DILocalVariable(name: "nb", arg: 1, scope: !4716, file: !3, line: 155, type: !348)
!4718 = !DILocation(line: 155, column: 57, scope: !4716)
!4719 = !DILocation(line: 157, column: 67, scope: !4716)
!4720 = !DILocation(line: 157, column: 9, scope: !4716)
!4721 = !DILocation(line: 157, column: 2, scope: !4716)
!4722 = distinct !DISubprogram(name: "kd_mksound", scope: !3, file: !3, line: 262, type: !4723, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{null, !7, !7}
!4725 = !DILocalVariable(name: "hz", arg: 1, scope: !4722, file: !3, line: 262, type: !7)
!4726 = !DILocation(line: 262, column: 30, scope: !4722)
!4727 = !DILocalVariable(name: "ticks", arg: 2, scope: !4722, file: !3, line: 262, type: !7)
!4728 = !DILocation(line: 262, column: 47, scope: !4722)
!4729 = !DILocation(line: 264, column: 2, scope: !4722)
!4730 = !DILocation(line: 266, column: 46, scope: !4722)
!4731 = !DILocation(line: 266, column: 2, scope: !4722)
!4732 = !DILocation(line: 268, column: 6, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 268, column: 6)
!4734 = !DILocation(line: 268, column: 9, scope: !4733)
!4735 = !DILocation(line: 268, column: 12, scope: !4733)
!4736 = !DILocation(line: 268, column: 6, scope: !4722)
!4737 = !DILocation(line: 269, column: 32, scope: !4733)
!4738 = !DILocation(line: 269, column: 42, scope: !4733)
!4739 = !DILocation(line: 269, column: 40, scope: !4733)
!4740 = !DILocation(line: 269, column: 3, scope: !4733)
!4741 = !DILocation(line: 270, column: 1, scope: !4722)
!4742 = distinct !DISubprogram(name: "kd_sound_helper", scope: !3, file: !3, line: 235, type: !4743, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4743 = !DISubroutineType(types: !4744)
!4744 = !{!165, !425, !153}
!4745 = !DILocalVariable(name: "handle", arg: 1, scope: !4742, file: !3, line: 235, type: !425)
!4746 = !DILocation(line: 235, column: 49, scope: !4742)
!4747 = !DILocalVariable(name: "data", arg: 2, scope: !4742, file: !3, line: 235, type: !153)
!4748 = !DILocation(line: 235, column: 63, scope: !4742)
!4749 = !DILocalVariable(name: "hz", scope: !4742, file: !3, line: 237, type: !159)
!4750 = !DILocation(line: 237, column: 16, scope: !4742)
!4751 = !DILocation(line: 237, column: 21, scope: !4742)
!4752 = !DILocalVariable(name: "dev", scope: !4742, file: !3, line: 238, type: !432)
!4753 = !DILocation(line: 238, column: 20, scope: !4742)
!4754 = !DILocation(line: 238, column: 26, scope: !4742)
!4755 = !DILocation(line: 238, column: 34, scope: !4742)
!4756 = !DILocation(line: 240, column: 23, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 240, column: 6)
!4758 = !DILocation(line: 240, column: 28, scope: !4757)
!4759 = !DILocation(line: 240, column: 6, scope: !4757)
!4760 = !DILocation(line: 240, column: 6, scope: !4742)
!4761 = !DILocation(line: 241, column: 26, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 241, column: 7)
!4763 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 240, column: 36)
!4764 = !DILocation(line: 241, column: 31, scope: !4762)
!4765 = !DILocation(line: 241, column: 7, scope: !4762)
!4766 = !DILocation(line: 241, column: 7, scope: !4763)
!4767 = !DILocation(line: 242, column: 23, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 241, column: 40)
!4769 = !DILocation(line: 242, column: 50, scope: !4768)
!4770 = !DILocation(line: 242, column: 49, scope: !4768)
!4771 = !DILocation(line: 242, column: 4, scope: !4768)
!4772 = !DILocation(line: 243, column: 9, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 243, column: 8)
!4774 = !DILocation(line: 243, column: 8, scope: !4773)
!4775 = !DILocation(line: 243, column: 8, scope: !4768)
!4776 = !DILocation(line: 244, column: 5, scope: !4773)
!4777 = !DILocation(line: 245, column: 3, scope: !4768)
!4778 = !DILocation(line: 246, column: 26, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 246, column: 7)
!4780 = !DILocation(line: 246, column: 31, scope: !4779)
!4781 = !DILocation(line: 246, column: 7, scope: !4779)
!4782 = !DILocation(line: 246, column: 7, scope: !4763)
!4783 = !DILocation(line: 247, column: 23, scope: !4779)
!4784 = !DILocation(line: 247, column: 50, scope: !4779)
!4785 = !DILocation(line: 247, column: 49, scope: !4779)
!4786 = !DILocation(line: 247, column: 4, scope: !4779)
!4787 = !DILocation(line: 248, column: 2, scope: !4763)
!4788 = !DILocation(line: 250, column: 2, scope: !4742)
!4789 = !DILocation(line: 251, column: 1, scope: !4742)
!4790 = distinct !DISubprogram(name: "kbd_rate", scope: !3, file: !3, line: 298, type: !4791, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4791 = !DISubroutineType(types: !4792)
!4792 = !{!165, !4793}
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbd_repeat", file: !4580, line: 148, size: 64, elements: !4795)
!4795 = !{!4796, !4797}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !4794, file: !4580, line: 149, baseType: !165, size: 32)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4794, file: !4580, line: 150, baseType: !165, size: 32, offset: 32)
!4798 = !DILocalVariable(name: "rpt", arg: 1, scope: !4790, file: !3, line: 298, type: !4793)
!4799 = !DILocation(line: 298, column: 33, scope: !4790)
!4800 = !DILocalVariable(name: "data", scope: !4790, file: !3, line: 300, type: !4801)
!4801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4794, size: 128, elements: !459)
!4802 = !DILocation(line: 300, column: 20, scope: !4790)
!4803 = !DILocation(line: 300, column: 30, scope: !4790)
!4804 = !DILocation(line: 300, column: 33, scope: !4790)
!4805 = !DILocation(line: 300, column: 32, scope: !4790)
!4806 = !DILocation(line: 302, column: 46, scope: !4790)
!4807 = !DILocation(line: 302, column: 2, scope: !4790)
!4808 = !DILocation(line: 303, column: 3, scope: !4790)
!4809 = !DILocation(line: 303, column: 9, scope: !4790)
!4810 = !DILocation(line: 305, column: 2, scope: !4790)
!4811 = distinct !DISubprogram(name: "kbd_rate_helper", scope: !3, file: !3, line: 277, type: !4743, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4812 = !DILocalVariable(name: "handle", arg: 1, scope: !4811, file: !3, line: 277, type: !425)
!4813 = !DILocation(line: 277, column: 49, scope: !4811)
!4814 = !DILocalVariable(name: "data", arg: 2, scope: !4811, file: !3, line: 277, type: !153)
!4815 = !DILocation(line: 277, column: 63, scope: !4811)
!4816 = !DILocalVariable(name: "dev", scope: !4811, file: !3, line: 279, type: !432)
!4817 = !DILocation(line: 279, column: 20, scope: !4811)
!4818 = !DILocation(line: 279, column: 26, scope: !4811)
!4819 = !DILocation(line: 279, column: 34, scope: !4811)
!4820 = !DILocalVariable(name: "rpt", scope: !4811, file: !3, line: 280, type: !4793)
!4821 = !DILocation(line: 280, column: 21, scope: !4811)
!4822 = !DILocation(line: 280, column: 27, scope: !4811)
!4823 = !DILocation(line: 282, column: 23, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 282, column: 6)
!4825 = !DILocation(line: 282, column: 28, scope: !4824)
!4826 = !DILocation(line: 282, column: 6, scope: !4824)
!4827 = !DILocation(line: 282, column: 6, scope: !4811)
!4828 = !DILocation(line: 284, column: 7, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 284, column: 7)
!4830 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 282, column: 36)
!4831 = !DILocation(line: 284, column: 14, scope: !4829)
!4832 = !DILocation(line: 284, column: 20, scope: !4829)
!4833 = !DILocation(line: 284, column: 7, scope: !4830)
!4834 = !DILocation(line: 285, column: 23, scope: !4829)
!4835 = !DILocation(line: 286, column: 28, scope: !4829)
!4836 = !DILocation(line: 286, column: 35, scope: !4829)
!4837 = !DILocation(line: 285, column: 4, scope: !4829)
!4838 = !DILocation(line: 287, column: 7, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 287, column: 7)
!4840 = !DILocation(line: 287, column: 14, scope: !4839)
!4841 = !DILocation(line: 287, column: 21, scope: !4839)
!4842 = !DILocation(line: 287, column: 7, scope: !4830)
!4843 = !DILocation(line: 288, column: 23, scope: !4839)
!4844 = !DILocation(line: 289, column: 29, scope: !4839)
!4845 = !DILocation(line: 289, column: 36, scope: !4839)
!4846 = !DILocation(line: 288, column: 4, scope: !4839)
!4847 = !DILocation(line: 291, column: 18, scope: !4830)
!4848 = !DILocation(line: 291, column: 23, scope: !4830)
!4849 = !DILocation(line: 291, column: 3, scope: !4830)
!4850 = !DILocation(line: 291, column: 10, scope: !4830)
!4851 = !DILocation(line: 291, column: 16, scope: !4830)
!4852 = !DILocation(line: 292, column: 19, scope: !4830)
!4853 = !DILocation(line: 292, column: 24, scope: !4830)
!4854 = !DILocation(line: 292, column: 3, scope: !4830)
!4855 = !DILocation(line: 292, column: 10, scope: !4830)
!4856 = !DILocation(line: 292, column: 17, scope: !4830)
!4857 = !DILocation(line: 293, column: 2, scope: !4830)
!4858 = !DILocation(line: 295, column: 2, scope: !4811)
!4859 = distinct !DISubprogram(name: "compute_shiftstate", scope: !3, file: !3, line: 397, type: !3381, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4860 = !DILocalVariable(name: "lock", arg: 1, scope: !4861, file: !4862, line: 407, type: !1332)
!4861 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4862, file: !4862, line: 407, type: !4863, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4862 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4863 = !DISubroutineType(types: !4864)
!4864 = !{null, !1332, !158}
!4865 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !4866)
!4866 = distinct !DILocation(line: 402, column: 2, scope: !4859)
!4867 = !DILocalVariable(name: "flags", arg: 2, scope: !4861, file: !4862, line: 407, type: !158)
!4868 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !4866)
!4869 = !DILocalVariable(name: "lock", arg: 1, scope: !4870, file: !4862, line: 327, type: !1332)
!4870 = distinct !DISubprogram(name: "spinlock_check", scope: !4862, file: !4862, line: 327, type: !4871, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{!4873, !1332}
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!4874 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !4875)
!4875 = distinct !DILocation(line: 400, column: 2, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 400, column: 2)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 400, column: 2)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 400, column: 2)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 400, column: 2)
!4880 = distinct !DILexicalBlock(scope: !4859, file: !3, line: 400, column: 2)
!4881 = !DILocalVariable(name: "flags", scope: !4859, file: !3, line: 399, type: !158)
!4882 = !DILocation(line: 399, column: 16, scope: !4859)
!4883 = !DILocation(line: 400, column: 2, scope: !4859)
!4884 = !DILocation(line: 400, column: 2, scope: !4880)
!4885 = !DILocalVariable(name: "__dummy", scope: !4886, file: !3, line: 400, type: !158)
!4886 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 400, column: 2)
!4887 = !DILocation(line: 400, column: 2, scope: !4886)
!4888 = !DILocalVariable(name: "__dummy2", scope: !4886, file: !3, line: 400, type: !158)
!4889 = !DILocation(line: 400, column: 2, scope: !4879)
!4890 = !DILocation(line: 400, column: 2, scope: !4878)
!4891 = !DILocation(line: 400, column: 2, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 400, column: 2)
!4893 = !DILocalVariable(name: "__dummy", scope: !4894, file: !3, line: 400, type: !158)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 400, column: 2)
!4895 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 400, column: 2)
!4896 = !DILocation(line: 400, column: 2, scope: !4894)
!4897 = !DILocalVariable(name: "__dummy2", scope: !4894, file: !3, line: 400, type: !158)
!4898 = !DILocation(line: 400, column: 2, scope: !4895)
!4899 = !DILocation(line: 400, column: 2, scope: !4877)
!4900 = !{i32 -2141846779}
!4901 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !4875)
!4902 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !4875)
!4903 = !DILocation(line: 400, column: 2, scope: !4876)
!4904 = !DILocation(line: 401, column: 2, scope: !4859)
!4905 = !DILocation(line: 402, column: 42, scope: !4859)
!4906 = !DILocalVariable(name: "__dummy", scope: !4907, file: !4862, line: 409, type: !158)
!4907 = distinct !DILexicalBlock(scope: !4908, file: !4862, line: 409, column: 2)
!4908 = distinct !DILexicalBlock(scope: !4861, file: !4862, line: 409, column: 2)
!4909 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !4866)
!4910 = !DILocalVariable(name: "__dummy2", scope: !4907, file: !4862, line: 409, type: !158)
!4911 = !DILocalVariable(name: "__dummy", scope: !4912, file: !4862, line: 409, type: !158)
!4912 = distinct !DILexicalBlock(scope: !4913, file: !4862, line: 409, column: 2)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !4862, line: 409, column: 2)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !4862, line: 409, column: 2)
!4915 = distinct !DILexicalBlock(scope: !4908, file: !4862, line: 409, column: 2)
!4916 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !4866)
!4917 = !DILocalVariable(name: "__dummy2", scope: !4912, file: !4862, line: 409, type: !158)
!4918 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !4866)
!4919 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !4866)
!4920 = distinct !DILexicalBlock(scope: !4915, file: !4862, line: 409, column: 2)
!4921 = !{i32 -2145421998}
!4922 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !4866)
!4923 = distinct !DILexicalBlock(scope: !4920, file: !4862, line: 409, column: 2)
!4924 = !DILocation(line: 403, column: 1, scope: !4859)
!4925 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !4926, file: !4926, line: 666, type: !4927, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4926 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!4927 = !DISubroutineType(types: !4928)
!4928 = !{!158}
!4929 = !DILocalVariable(name: "f", scope: !4925, file: !4926, line: 668, type: !158)
!4930 = !DILocation(line: 668, column: 16, scope: !4925)
!4931 = !DILocation(line: 670, column: 6, scope: !4925)
!4932 = !DILocation(line: 670, column: 4, scope: !4925)
!4933 = !DILocation(line: 671, column: 2, scope: !4925)
!4934 = !DILocation(line: 672, column: 9, scope: !4925)
!4935 = !DILocation(line: 672, column: 2, scope: !4925)
!4936 = distinct !DISubprogram(name: "do_compute_shiftstate", scope: !3, file: !3, line: 375, type: !3381, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4937 = !DILocalVariable(name: "k", scope: !4936, file: !3, line: 377, type: !7)
!4938 = !DILocation(line: 377, column: 15, scope: !4936)
!4939 = !DILocalVariable(name: "sym", scope: !4936, file: !3, line: 377, type: !7)
!4940 = !DILocation(line: 377, column: 18, scope: !4936)
!4941 = !DILocalVariable(name: "val", scope: !4936, file: !3, line: 377, type: !7)
!4942 = !DILocation(line: 377, column: 23, scope: !4936)
!4943 = !DILocation(line: 379, column: 14, scope: !4936)
!4944 = !DILocation(line: 380, column: 2, scope: !4936)
!4945 = !DILocation(line: 382, column: 2, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 382, column: 2)
!4947 = !DILocation(line: 382, column: 2, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4946, file: !3, line: 382, column: 2)
!4949 = !DILocation(line: 383, column: 9, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 382, column: 55)
!4951 = !DILocation(line: 383, column: 7, scope: !4950)
!4952 = !DILocation(line: 384, column: 7, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 384, column: 7)
!4954 = !DILocation(line: 384, column: 17, scope: !4953)
!4955 = !DILocation(line: 384, column: 29, scope: !4953)
!4956 = !DILocation(line: 384, column: 32, scope: !4953)
!4957 = !DILocation(line: 384, column: 42, scope: !4953)
!4958 = !DILocation(line: 384, column: 7, scope: !4950)
!4959 = !DILocation(line: 385, column: 4, scope: !4953)
!4960 = !DILocation(line: 387, column: 9, scope: !4950)
!4961 = !DILocation(line: 387, column: 7, scope: !4950)
!4962 = !DILocation(line: 388, column: 7, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 388, column: 7)
!4964 = !DILocation(line: 388, column: 11, scope: !4963)
!4965 = !DILocation(line: 388, column: 7, scope: !4950)
!4966 = !DILocation(line: 389, column: 8, scope: !4963)
!4967 = !DILocation(line: 389, column: 4, scope: !4963)
!4968 = !DILocation(line: 391, column: 14, scope: !4950)
!4969 = !DILocation(line: 391, column: 3, scope: !4950)
!4970 = !DILocation(line: 391, column: 18, scope: !4950)
!4971 = !DILocation(line: 392, column: 18, scope: !4950)
!4972 = !DILocation(line: 392, column: 15, scope: !4950)
!4973 = !DILocation(line: 393, column: 2, scope: !4950)
!4974 = distinct !{!4974, !4945, !4975}
!4975 = !DILocation(line: 393, column: 2, scope: !4946)
!4976 = !DILocation(line: 394, column: 1, scope: !4936)
!4977 = distinct !DISubprogram(name: "setledstate", scope: !3, file: !3, line: 1124, type: !4978, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{null, !412, !7}
!4980 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !4981)
!4981 = distinct !DILocation(line: 1135, column: 2, scope: !4977)
!4982 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !4981)
!4983 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !4984)
!4984 = distinct !DILocation(line: 1127, column: 9, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 1127, column: 9)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 1127, column: 9)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 1127, column: 9)
!4988 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1127, column: 9)
!4989 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 1127, column: 9)
!4990 = !DILocalVariable(name: "kb", arg: 1, scope: !4977, file: !3, line: 1124, type: !412)
!4991 = !DILocation(line: 1124, column: 37, scope: !4977)
!4992 = !DILocalVariable(name: "led", arg: 2, scope: !4977, file: !3, line: 1124, type: !7)
!4993 = !DILocation(line: 1124, column: 54, scope: !4977)
!4994 = !DILocalVariable(name: "flags", scope: !4977, file: !3, line: 1126, type: !158)
!4995 = !DILocation(line: 1126, column: 23, scope: !4977)
!4996 = !DILocation(line: 1127, column: 9, scope: !4977)
!4997 = !DILocation(line: 1127, column: 9, scope: !4989)
!4998 = !DILocalVariable(name: "__dummy", scope: !4999, file: !3, line: 1127, type: !158)
!4999 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 1127, column: 9)
!5000 = !DILocation(line: 1127, column: 9, scope: !4999)
!5001 = !DILocalVariable(name: "__dummy2", scope: !4999, file: !3, line: 1127, type: !158)
!5002 = !DILocation(line: 1127, column: 9, scope: !4988)
!5003 = !DILocation(line: 1127, column: 9, scope: !4987)
!5004 = !DILocation(line: 1127, column: 9, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 1127, column: 9)
!5006 = !DILocalVariable(name: "__dummy", scope: !5007, file: !3, line: 1127, type: !158)
!5007 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 1127, column: 9)
!5008 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 1127, column: 9)
!5009 = !DILocation(line: 1127, column: 9, scope: !5007)
!5010 = !DILocalVariable(name: "__dummy2", scope: !5007, file: !3, line: 1127, type: !158)
!5011 = !DILocation(line: 1127, column: 9, scope: !5008)
!5012 = !DILocation(line: 1127, column: 9, scope: !4986)
!5013 = !{i32 -2141831620}
!5014 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !4984)
!5015 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !4984)
!5016 = !DILocation(line: 1127, column: 9, scope: !4985)
!5017 = !DILocation(line: 1128, column: 8, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 1128, column: 6)
!5019 = !DILocation(line: 1128, column: 12, scope: !5018)
!5020 = !DILocation(line: 1128, column: 6, scope: !4977)
!5021 = !DILocation(line: 1129, column: 14, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5018, file: !3, line: 1128, column: 19)
!5023 = !DILocation(line: 1129, column: 12, scope: !5022)
!5024 = !DILocation(line: 1130, column: 3, scope: !5022)
!5025 = !DILocation(line: 1130, column: 7, scope: !5022)
!5026 = !DILocation(line: 1130, column: 15, scope: !5022)
!5027 = !DILocation(line: 1131, column: 2, scope: !5022)
!5028 = !DILocation(line: 1132, column: 3, scope: !5018)
!5029 = !DILocation(line: 1132, column: 7, scope: !5018)
!5030 = !DILocation(line: 1132, column: 15, scope: !5018)
!5031 = !DILocation(line: 1134, column: 2, scope: !4977)
!5032 = !DILocation(line: 1135, column: 36, scope: !4977)
!5033 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !4981)
!5034 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !4981)
!5035 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !4981)
!5036 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !4981)
!5037 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !4981)
!5038 = !DILocation(line: 1136, column: 1, scope: !4977)
!5039 = distinct !DISubprogram(name: "set_leds", scope: !313, file: !313, line: 78, type: !3381, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5040 = !DILocation(line: 80, column: 2, scope: !5039)
!5041 = !DILocation(line: 81, column: 1, scope: !5039)
!5042 = distinct !DISubprogram(name: "vt_get_leds", scope: !3, file: !3, line: 1155, type: !5043, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{!165, !165, !165}
!5045 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !5046)
!5046 = distinct !DILocation(line: 1163, column: 2, scope: !5042)
!5047 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !5046)
!5048 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !5049)
!5049 = distinct !DILocation(line: 1161, column: 2, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 1161, column: 2)
!5051 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 1161, column: 2)
!5052 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 1161, column: 2)
!5053 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 1161, column: 2)
!5054 = distinct !DILexicalBlock(scope: !5042, file: !3, line: 1161, column: 2)
!5055 = !DILocalVariable(name: "console", arg: 1, scope: !5042, file: !3, line: 1155, type: !165)
!5056 = !DILocation(line: 1155, column: 21, scope: !5042)
!5057 = !DILocalVariable(name: "flag", arg: 2, scope: !5042, file: !3, line: 1155, type: !165)
!5058 = !DILocation(line: 1155, column: 34, scope: !5042)
!5059 = !DILocalVariable(name: "kb", scope: !5042, file: !3, line: 1157, type: !412)
!5060 = !DILocation(line: 1157, column: 21, scope: !5042)
!5061 = !DILocation(line: 1157, column: 38, scope: !5042)
!5062 = !DILocation(line: 1157, column: 36, scope: !5042)
!5063 = !DILocalVariable(name: "ret", scope: !5042, file: !3, line: 1158, type: !165)
!5064 = !DILocation(line: 1158, column: 6, scope: !5042)
!5065 = !DILocalVariable(name: "flags", scope: !5042, file: !3, line: 1159, type: !158)
!5066 = !DILocation(line: 1159, column: 16, scope: !5042)
!5067 = !DILocation(line: 1161, column: 2, scope: !5042)
!5068 = !DILocation(line: 1161, column: 2, scope: !5054)
!5069 = !DILocalVariable(name: "__dummy", scope: !5070, file: !3, line: 1161, type: !158)
!5070 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 1161, column: 2)
!5071 = !DILocation(line: 1161, column: 2, scope: !5070)
!5072 = !DILocalVariable(name: "__dummy2", scope: !5070, file: !3, line: 1161, type: !158)
!5073 = !DILocation(line: 1161, column: 2, scope: !5053)
!5074 = !DILocation(line: 1161, column: 2, scope: !5052)
!5075 = !DILocation(line: 1161, column: 2, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 1161, column: 2)
!5077 = !DILocalVariable(name: "__dummy", scope: !5078, file: !3, line: 1161, type: !158)
!5078 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 1161, column: 2)
!5079 = distinct !DILexicalBlock(scope: !5076, file: !3, line: 1161, column: 2)
!5080 = !DILocation(line: 1161, column: 2, scope: !5078)
!5081 = !DILocalVariable(name: "__dummy2", scope: !5078, file: !3, line: 1161, type: !158)
!5082 = !DILocation(line: 1161, column: 2, scope: !5079)
!5083 = !DILocation(line: 1161, column: 2, scope: !5051)
!5084 = !{i32 -2141830444}
!5085 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !5049)
!5086 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !5049)
!5087 = !DILocation(line: 1161, column: 2, scope: !5050)
!5088 = !DILocation(line: 1162, column: 19, scope: !5042)
!5089 = !DILocation(line: 1162, column: 23, scope: !5042)
!5090 = !DILocation(line: 1162, column: 8, scope: !5042)
!5091 = !DILocation(line: 1162, column: 6, scope: !5042)
!5092 = !DILocation(line: 1163, column: 36, scope: !5042)
!5093 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !5046)
!5094 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !5046)
!5095 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !5046)
!5096 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !5046)
!5097 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !5046)
!5098 = !DILocation(line: 1165, column: 9, scope: !5042)
!5099 = !DILocation(line: 1165, column: 2, scope: !5042)
!5100 = distinct !DISubprogram(name: "vc_kbd_led", scope: !313, file: !313, line: 88, type: !5101, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!165, !412, !165}
!5103 = !DILocalVariable(name: "kbd", arg: 1, scope: !5100, file: !313, line: 88, type: !412)
!5104 = !DILocation(line: 88, column: 50, scope: !5100)
!5105 = !DILocalVariable(name: "flag", arg: 2, scope: !5100, file: !313, line: 88, type: !165)
!5106 = !DILocation(line: 88, column: 59, scope: !5100)
!5107 = !DILocation(line: 90, column: 11, scope: !5100)
!5108 = !DILocation(line: 90, column: 16, scope: !5100)
!5109 = !DILocation(line: 90, column: 32, scope: !5100)
!5110 = !DILocation(line: 90, column: 29, scope: !5100)
!5111 = !DILocation(line: 90, column: 38, scope: !5100)
!5112 = !DILocation(line: 90, column: 2, scope: !5100)
!5113 = distinct !DISubprogram(name: "vt_set_led_state", scope: !3, file: !3, line: 1177, type: !5114, scopeLine: 1178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{null, !165, !165}
!5116 = !DILocalVariable(name: "console", arg: 1, scope: !5113, file: !3, line: 1177, type: !165)
!5117 = !DILocation(line: 1177, column: 27, scope: !5113)
!5118 = !DILocalVariable(name: "leds", arg: 2, scope: !5113, file: !3, line: 1177, type: !165)
!5119 = !DILocation(line: 1177, column: 40, scope: !5113)
!5120 = !DILocalVariable(name: "kb", scope: !5113, file: !3, line: 1179, type: !412)
!5121 = !DILocation(line: 1179, column: 21, scope: !5113)
!5122 = !DILocation(line: 1179, column: 38, scope: !5113)
!5123 = !DILocation(line: 1179, column: 36, scope: !5113)
!5124 = !DILocation(line: 1180, column: 14, scope: !5113)
!5125 = !DILocation(line: 1180, column: 18, scope: !5113)
!5126 = !DILocation(line: 1180, column: 2, scope: !5113)
!5127 = !DILocation(line: 1181, column: 1, scope: !5113)
!5128 = distinct !DISubprogram(name: "vt_kbd_con_start", scope: !3, file: !3, line: 1196, type: !3374, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5129 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !5130)
!5130 = distinct !DILocation(line: 1203, column: 2, scope: !5128)
!5131 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !5130)
!5132 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !5133)
!5133 = distinct !DILocation(line: 1200, column: 2, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 1200, column: 2)
!5135 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 1200, column: 2)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1200, column: 2)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1200, column: 2)
!5138 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 1200, column: 2)
!5139 = !DILocalVariable(name: "console", arg: 1, scope: !5128, file: !3, line: 1196, type: !165)
!5140 = !DILocation(line: 1196, column: 27, scope: !5128)
!5141 = !DILocalVariable(name: "kb", scope: !5128, file: !3, line: 1198, type: !412)
!5142 = !DILocation(line: 1198, column: 21, scope: !5128)
!5143 = !DILocation(line: 1198, column: 38, scope: !5128)
!5144 = !DILocation(line: 1198, column: 36, scope: !5128)
!5145 = !DILocalVariable(name: "flags", scope: !5128, file: !3, line: 1199, type: !158)
!5146 = !DILocation(line: 1199, column: 16, scope: !5128)
!5147 = !DILocation(line: 1200, column: 2, scope: !5128)
!5148 = !DILocation(line: 1200, column: 2, scope: !5138)
!5149 = !DILocalVariable(name: "__dummy", scope: !5150, file: !3, line: 1200, type: !158)
!5150 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1200, column: 2)
!5151 = !DILocation(line: 1200, column: 2, scope: !5150)
!5152 = !DILocalVariable(name: "__dummy2", scope: !5150, file: !3, line: 1200, type: !158)
!5153 = !DILocation(line: 1200, column: 2, scope: !5137)
!5154 = !DILocation(line: 1200, column: 2, scope: !5136)
!5155 = !DILocation(line: 1200, column: 2, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 1200, column: 2)
!5157 = !DILocalVariable(name: "__dummy", scope: !5158, file: !3, line: 1200, type: !158)
!5158 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 1200, column: 2)
!5159 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 1200, column: 2)
!5160 = !DILocation(line: 1200, column: 2, scope: !5158)
!5161 = !DILocalVariable(name: "__dummy2", scope: !5158, file: !3, line: 1200, type: !158)
!5162 = !DILocation(line: 1200, column: 2, scope: !5159)
!5163 = !DILocation(line: 1200, column: 2, scope: !5135)
!5164 = !{i32 -2141829350}
!5165 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !5133)
!5166 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !5133)
!5167 = !DILocation(line: 1200, column: 2, scope: !5134)
!5168 = !DILocation(line: 1201, column: 17, scope: !5128)
!5169 = !DILocation(line: 1201, column: 2, scope: !5128)
!5170 = !DILocation(line: 1202, column: 2, scope: !5128)
!5171 = !DILocation(line: 1203, column: 36, scope: !5128)
!5172 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !5130)
!5173 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !5130)
!5174 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !5130)
!5175 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !5130)
!5176 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !5130)
!5177 = !DILocation(line: 1204, column: 1, scope: !5128)
!5178 = distinct !DISubprogram(name: "clr_vc_kbd_led", scope: !313, file: !313, line: 108, type: !5179, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5179 = !DISubroutineType(types: !5180)
!5180 = !{null, !412, !165}
!5181 = !DILocalVariable(name: "kbd", arg: 1, scope: !5178, file: !313, line: 108, type: !412)
!5182 = !DILocation(line: 108, column: 55, scope: !5178)
!5183 = !DILocalVariable(name: "flag", arg: 2, scope: !5178, file: !313, line: 108, type: !165)
!5184 = !DILocation(line: 108, column: 64, scope: !5178)
!5185 = !DILocation(line: 110, column: 30, scope: !5178)
!5186 = !DILocation(line: 110, column: 27, scope: !5178)
!5187 = !DILocation(line: 110, column: 23, scope: !5178)
!5188 = !DILocation(line: 110, column: 2, scope: !5178)
!5189 = !DILocation(line: 110, column: 7, scope: !5178)
!5190 = !DILocation(line: 110, column: 20, scope: !5178)
!5191 = !DILocation(line: 111, column: 1, scope: !5178)
!5192 = distinct !DISubprogram(name: "vt_kbd_con_stop", scope: !3, file: !3, line: 1213, type: !3374, scopeLine: 1214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5193 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !5194)
!5194 = distinct !DILocation(line: 1220, column: 2, scope: !5192)
!5195 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !5194)
!5196 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !5197)
!5197 = distinct !DILocation(line: 1217, column: 2, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5199, file: !3, line: 1217, column: 2)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 1217, column: 2)
!5200 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 1217, column: 2)
!5201 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 1217, column: 2)
!5202 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 1217, column: 2)
!5203 = !DILocalVariable(name: "console", arg: 1, scope: !5192, file: !3, line: 1213, type: !165)
!5204 = !DILocation(line: 1213, column: 26, scope: !5192)
!5205 = !DILocalVariable(name: "kb", scope: !5192, file: !3, line: 1215, type: !412)
!5206 = !DILocation(line: 1215, column: 21, scope: !5192)
!5207 = !DILocation(line: 1215, column: 38, scope: !5192)
!5208 = !DILocation(line: 1215, column: 36, scope: !5192)
!5209 = !DILocalVariable(name: "flags", scope: !5192, file: !3, line: 1216, type: !158)
!5210 = !DILocation(line: 1216, column: 16, scope: !5192)
!5211 = !DILocation(line: 1217, column: 2, scope: !5192)
!5212 = !DILocation(line: 1217, column: 2, scope: !5202)
!5213 = !DILocalVariable(name: "__dummy", scope: !5214, file: !3, line: 1217, type: !158)
!5214 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 1217, column: 2)
!5215 = !DILocation(line: 1217, column: 2, scope: !5214)
!5216 = !DILocalVariable(name: "__dummy2", scope: !5214, file: !3, line: 1217, type: !158)
!5217 = !DILocation(line: 1217, column: 2, scope: !5201)
!5218 = !DILocation(line: 1217, column: 2, scope: !5200)
!5219 = !DILocation(line: 1217, column: 2, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 1217, column: 2)
!5221 = !DILocalVariable(name: "__dummy", scope: !5222, file: !3, line: 1217, type: !158)
!5222 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 1217, column: 2)
!5223 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 1217, column: 2)
!5224 = !DILocation(line: 1217, column: 2, scope: !5222)
!5225 = !DILocalVariable(name: "__dummy2", scope: !5222, file: !3, line: 1217, type: !158)
!5226 = !DILocation(line: 1217, column: 2, scope: !5223)
!5227 = !DILocation(line: 1217, column: 2, scope: !5199)
!5228 = !{i32 -2141828343}
!5229 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !5197)
!5230 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !5197)
!5231 = !DILocation(line: 1217, column: 2, scope: !5198)
!5232 = !DILocation(line: 1218, column: 17, scope: !5192)
!5233 = !DILocation(line: 1218, column: 2, scope: !5192)
!5234 = !DILocation(line: 1219, column: 2, scope: !5192)
!5235 = !DILocation(line: 1220, column: 36, scope: !5192)
!5236 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !5194)
!5237 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !5194)
!5238 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !5194)
!5239 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !5194)
!5240 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !5194)
!5241 = !DILocation(line: 1221, column: 1, scope: !5192)
!5242 = distinct !DISubprogram(name: "set_vc_kbd_led", scope: !313, file: !313, line: 98, type: !5179, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5243 = !DILocalVariable(name: "kbd", arg: 1, scope: !5242, file: !313, line: 98, type: !412)
!5244 = !DILocation(line: 98, column: 55, scope: !5242)
!5245 = !DILocalVariable(name: "flag", arg: 2, scope: !5242, file: !313, line: 98, type: !165)
!5246 = !DILocation(line: 98, column: 64, scope: !5242)
!5247 = !DILocation(line: 100, column: 28, scope: !5242)
!5248 = !DILocation(line: 100, column: 25, scope: !5242)
!5249 = !DILocation(line: 100, column: 2, scope: !5242)
!5250 = !DILocation(line: 100, column: 7, scope: !5242)
!5251 = !DILocation(line: 100, column: 20, scope: !5242)
!5252 = !DILocation(line: 101, column: 1, scope: !5242)
!5253 = distinct !DISubprogram(name: "kbd_bh", scope: !3, file: !3, line: 1229, type: !299, scopeLine: 1230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5254 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !5255)
!5255 = distinct !DILocation(line: 1237, column: 2, scope: !5253)
!5256 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !5255)
!5257 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !5258)
!5258 = distinct !DILocation(line: 1234, column: 2, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 1234, column: 2)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 1234, column: 2)
!5261 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 1234, column: 2)
!5262 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 1234, column: 2)
!5263 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 1234, column: 2)
!5264 = !DILocalVariable(name: "dummy", arg: 1, scope: !5253, file: !3, line: 1229, type: !158)
!5265 = !DILocation(line: 1229, column: 34, scope: !5253)
!5266 = !DILocalVariable(name: "leds", scope: !5253, file: !3, line: 1231, type: !7)
!5267 = !DILocation(line: 1231, column: 15, scope: !5253)
!5268 = !DILocalVariable(name: "flags", scope: !5253, file: !3, line: 1232, type: !158)
!5269 = !DILocation(line: 1232, column: 16, scope: !5253)
!5270 = !DILocation(line: 1234, column: 2, scope: !5253)
!5271 = !DILocation(line: 1234, column: 2, scope: !5263)
!5272 = !DILocalVariable(name: "__dummy", scope: !5273, file: !3, line: 1234, type: !158)
!5273 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 1234, column: 2)
!5274 = !DILocation(line: 1234, column: 2, scope: !5273)
!5275 = !DILocalVariable(name: "__dummy2", scope: !5273, file: !3, line: 1234, type: !158)
!5276 = !DILocation(line: 1234, column: 2, scope: !5262)
!5277 = !DILocation(line: 1234, column: 2, scope: !5261)
!5278 = !DILocation(line: 1234, column: 2, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 1234, column: 2)
!5280 = !DILocalVariable(name: "__dummy", scope: !5281, file: !3, line: 1234, type: !158)
!5281 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 1234, column: 2)
!5282 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1234, column: 2)
!5283 = !DILocation(line: 1234, column: 2, scope: !5281)
!5284 = !DILocalVariable(name: "__dummy2", scope: !5281, file: !3, line: 1234, type: !158)
!5285 = !DILocation(line: 1234, column: 2, scope: !5282)
!5286 = !DILocation(line: 1234, column: 2, scope: !5260)
!5287 = !{i32 -2141827336}
!5288 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !5258)
!5289 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !5258)
!5290 = !DILocation(line: 1234, column: 2, scope: !5259)
!5291 = !DILocation(line: 1235, column: 9, scope: !5253)
!5292 = !DILocation(line: 1235, column: 7, scope: !5253)
!5293 = !DILocation(line: 1236, column: 24, scope: !5253)
!5294 = !DILocation(line: 1236, column: 29, scope: !5253)
!5295 = !DILocation(line: 1236, column: 10, scope: !5253)
!5296 = !DILocation(line: 1236, column: 39, scope: !5253)
!5297 = !DILocation(line: 1236, column: 7, scope: !5253)
!5298 = !DILocation(line: 1237, column: 36, scope: !5253)
!5299 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !5255)
!5300 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !5255)
!5301 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !5255)
!5302 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !5255)
!5303 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !5255)
!5304 = !DILocation(line: 1239, column: 6, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 1239, column: 6)
!5306 = !DILocation(line: 1239, column: 14, scope: !5305)
!5307 = !DILocation(line: 1239, column: 11, scope: !5305)
!5308 = !DILocation(line: 1239, column: 6, scope: !5253)
!5309 = !DILocation(line: 1240, column: 27, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 1239, column: 24)
!5311 = !DILocation(line: 1240, column: 37, scope: !5310)
!5312 = !DILocation(line: 1240, column: 3, scope: !5310)
!5313 = !DILocation(line: 1241, column: 14, scope: !5310)
!5314 = !DILocation(line: 1241, column: 12, scope: !5310)
!5315 = !DILocation(line: 1242, column: 2, scope: !5310)
!5316 = !DILocation(line: 1243, column: 1, scope: !5253)
!5317 = distinct !DISubprogram(name: "kbd_init", scope: !3, file: !3, line: 1619, type: !5318, scopeLine: 1620, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!165}
!5320 = !DILocalVariable(name: "i", scope: !5317, file: !3, line: 1621, type: !165)
!5321 = !DILocation(line: 1621, column: 6, scope: !5317)
!5322 = !DILocalVariable(name: "error", scope: !5317, file: !3, line: 1622, type: !165)
!5323 = !DILocation(line: 1622, column: 6, scope: !5317)
!5324 = !DILocation(line: 1624, column: 9, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1624, column: 2)
!5326 = !DILocation(line: 1624, column: 7, scope: !5325)
!5327 = !DILocation(line: 1624, column: 14, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 1624, column: 2)
!5329 = !DILocation(line: 1624, column: 16, scope: !5328)
!5330 = !DILocation(line: 1624, column: 2, scope: !5325)
!5331 = !DILocation(line: 1625, column: 31, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5328, file: !3, line: 1624, column: 40)
!5333 = !DILocation(line: 1625, column: 13, scope: !5332)
!5334 = !DILocation(line: 1625, column: 3, scope: !5332)
!5335 = !DILocation(line: 1625, column: 16, scope: !5332)
!5336 = !DILocation(line: 1625, column: 29, scope: !5332)
!5337 = !DILocation(line: 1626, column: 39, scope: !5332)
!5338 = !DILocation(line: 1626, column: 13, scope: !5332)
!5339 = !DILocation(line: 1626, column: 3, scope: !5332)
!5340 = !DILocation(line: 1626, column: 16, scope: !5332)
!5341 = !DILocation(line: 1626, column: 37, scope: !5332)
!5342 = !DILocation(line: 1627, column: 13, scope: !5332)
!5343 = !DILocation(line: 1627, column: 3, scope: !5332)
!5344 = !DILocation(line: 1627, column: 16, scope: !5332)
!5345 = !DILocation(line: 1627, column: 24, scope: !5332)
!5346 = !DILocation(line: 1628, column: 13, scope: !5332)
!5347 = !DILocation(line: 1628, column: 3, scope: !5332)
!5348 = !DILocation(line: 1628, column: 16, scope: !5332)
!5349 = !DILocation(line: 1628, column: 26, scope: !5332)
!5350 = !DILocation(line: 1629, column: 13, scope: !5332)
!5351 = !DILocation(line: 1629, column: 3, scope: !5332)
!5352 = !DILocation(line: 1629, column: 16, scope: !5332)
!5353 = !DILocation(line: 1629, column: 27, scope: !5332)
!5354 = !DILocation(line: 1630, column: 13, scope: !5332)
!5355 = !DILocation(line: 1630, column: 3, scope: !5332)
!5356 = !DILocation(line: 1630, column: 16, scope: !5332)
!5357 = !DILocation(line: 1630, column: 26, scope: !5332)
!5358 = !DILocation(line: 1631, column: 26, scope: !5332)
!5359 = !DILocation(line: 1631, column: 13, scope: !5332)
!5360 = !DILocation(line: 1631, column: 3, scope: !5332)
!5361 = !DILocation(line: 1631, column: 16, scope: !5332)
!5362 = !DILocation(line: 1631, column: 24, scope: !5332)
!5363 = !DILocation(line: 1632, column: 2, scope: !5332)
!5364 = !DILocation(line: 1624, column: 36, scope: !5328)
!5365 = !DILocation(line: 1624, column: 2, scope: !5328)
!5366 = distinct !{!5366, !5330, !5367}
!5367 = !DILocation(line: 1632, column: 2, scope: !5325)
!5368 = !DILocation(line: 1634, column: 2, scope: !5317)
!5369 = !DILocation(line: 1636, column: 10, scope: !5317)
!5370 = !DILocation(line: 1636, column: 8, scope: !5317)
!5371 = !DILocation(line: 1637, column: 6, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1637, column: 6)
!5373 = !DILocation(line: 1637, column: 6, scope: !5317)
!5374 = !DILocation(line: 1638, column: 10, scope: !5372)
!5375 = !DILocation(line: 1638, column: 3, scope: !5372)
!5376 = !DILocation(line: 1640, column: 2, scope: !5317)
!5377 = !DILocation(line: 1641, column: 2, scope: !5317)
!5378 = !DILocation(line: 1643, column: 2, scope: !5317)
!5379 = !DILocation(line: 1644, column: 1, scope: !5317)
!5380 = distinct !DISubprogram(name: "kbd_defleds", scope: !5381, file: !5381, line: 13, type: !5318, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5381 = !DIFile(filename: "./arch/x86/include/asm/kbdleds.h", directory: "/home/lizy2001/genbc/linux")
!5382 = !DILocation(line: 15, column: 21, scope: !5380)
!5383 = !DILocation(line: 15, column: 9, scope: !5380)
!5384 = !DILocation(line: 15, column: 32, scope: !5380)
!5385 = !DILocation(line: 15, column: 2, scope: !5380)
!5386 = distinct !DISubprogram(name: "kbd_init_leds", scope: !3, file: !3, line: 1108, type: !3381, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5387 = !DILocation(line: 1110, column: 1, scope: !5386)
!5388 = distinct !DISubprogram(name: "tasklet_enable", scope: !139, file: !139, line: 708, type: !303, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5389 = !DILocalVariable(name: "v", arg: 1, scope: !5390, file: !5391, line: 106, type: !5394)
!5390 = distinct !DISubprogram(name: "arch_atomic_dec", scope: !5391, file: !5391, line: 106, type: !5392, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5391 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!5392 = !DISubroutineType(types: !5393)
!5393 = !{null, !5394}
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!5395 = !DILocation(line: 106, column: 55, scope: !5390, inlinedAt: !5396)
!5396 = distinct !DILocation(line: 331, column: 2, scope: !5397, inlinedAt: !5399)
!5397 = distinct !DISubprogram(name: "atomic_dec", scope: !5398, file: !5398, line: 328, type: !5392, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5398 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5399 = distinct !DILocation(line: 711, column: 2, scope: !5388)
!5400 = !DILocalVariable(name: "v", arg: 1, scope: !5401, file: !5402, line: 99, type: !5405)
!5401 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5402, file: !5402, line: 99, type: !5403, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5402 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5403 = !DISubroutineType(types: !5404)
!5404 = !{null, !5405, !823}
!5405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5406, size: 64)
!5406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5407)
!5407 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5408 = !DILocation(line: 99, column: 79, scope: !5401, inlinedAt: !5409)
!5409 = distinct !DILocation(line: 330, column: 2, scope: !5397, inlinedAt: !5399)
!5410 = !DILocalVariable(name: "size", arg: 2, scope: !5401, file: !5402, line: 99, type: !823)
!5411 = !DILocation(line: 99, column: 89, scope: !5401, inlinedAt: !5409)
!5412 = !DILocalVariable(name: "v", arg: 1, scope: !5397, file: !5398, line: 328, type: !5394)
!5413 = !DILocation(line: 328, column: 22, scope: !5397, inlinedAt: !5399)
!5414 = !DILocalVariable(name: "t", arg: 1, scope: !5388, file: !139, line: 708, type: !284)
!5415 = !DILocation(line: 708, column: 58, scope: !5388)
!5416 = !DILocation(line: 710, column: 2, scope: !5388)
!5417 = !{i32 -2142022025}
!5418 = !DILocation(line: 711, column: 14, scope: !5388)
!5419 = !DILocation(line: 711, column: 17, scope: !5388)
!5420 = !DILocation(line: 330, column: 31, scope: !5397, inlinedAt: !5399)
!5421 = !DILocation(line: 101, column: 20, scope: !5401, inlinedAt: !5409)
!5422 = !DILocation(line: 101, column: 23, scope: !5401, inlinedAt: !5409)
!5423 = !DILocation(line: 101, column: 2, scope: !5401, inlinedAt: !5409)
!5424 = !DILocation(line: 102, column: 2, scope: !5401, inlinedAt: !5409)
!5425 = !DILocation(line: 331, column: 18, scope: !5397, inlinedAt: !5399)
!5426 = !DILocation(line: 109, column: 16, scope: !5390, inlinedAt: !5396)
!5427 = !DILocation(line: 109, column: 19, scope: !5390, inlinedAt: !5396)
!5428 = !DILocation(line: 108, column: 2, scope: !5390, inlinedAt: !5396)
!5429 = !{i32 -2146575495}
!5430 = !DILocation(line: 712, column: 1, scope: !5388)
!5431 = distinct !DISubprogram(name: "tasklet_schedule", scope: !139, file: !139, line: 681, type: !303, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5432 = !DILocalVariable(name: "t", arg: 1, scope: !5431, file: !139, line: 681, type: !284)
!5433 = !DILocation(line: 681, column: 60, scope: !5431)
!5434 = !DILocation(line: 683, column: 46, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5431, file: !139, line: 683, column: 6)
!5436 = !DILocation(line: 683, column: 49, scope: !5435)
!5437 = !DILocation(line: 683, column: 7, scope: !5435)
!5438 = !DILocation(line: 683, column: 6, scope: !5431)
!5439 = !DILocation(line: 684, column: 22, scope: !5435)
!5440 = !DILocation(line: 684, column: 3, scope: !5435)
!5441 = !DILocation(line: 685, column: 1, scope: !5431)
!5442 = distinct !DISubprogram(name: "vt_do_diacrit", scope: !3, file: !3, line: 1657, type: !5443, scopeLine: 1658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5443 = !DISubroutineType(types: !5444)
!5444 = !{!165, !7, !153, !165}
!5445 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !5446)
!5446 = distinct !DILocation(line: 1785, column: 3, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 1785, column: 3)
!5448 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 1785, column: 3)
!5449 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 1785, column: 3)
!5450 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 1785, column: 3)
!5451 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1785, column: 3)
!5452 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 1765, column: 2)
!5453 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 1663, column: 15)
!5454 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !5455)
!5455 = distinct !DILocation(line: 1759, column: 3, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 1727, column: 2)
!5457 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !5455)
!5458 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !5459)
!5459 = distinct !DILocation(line: 1749, column: 3, scope: !5460)
!5460 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1749, column: 3)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 1749, column: 3)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 1749, column: 3)
!5463 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 1749, column: 3)
!5464 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1749, column: 3)
!5465 = !DILocalVariable(name: "addr", arg: 1, scope: !5466, file: !5467, line: 138, type: !2207)
!5466 = distinct !DISubprogram(name: "check_copy_size", scope: !5467, file: !5467, line: 138, type: !5468, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5467 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!5468 = !DISubroutineType(types: !5469)
!5469 = !{!292, !2207, !823, !292}
!5470 = !DILocation(line: 138, column: 29, scope: !5466, inlinedAt: !5471)
!5471 = distinct !DILocation(line: 199, column: 6, scope: !5472, inlinedAt: !5477)
!5472 = distinct !DILexicalBlock(scope: !5474, file: !5473, line: 199, column: 6)
!5473 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!5474 = distinct !DISubprogram(name: "copy_to_user", scope: !5473, file: !5473, line: 197, type: !5475, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!5475 = !DISubroutineType(types: !5476)
!5476 = !{!158, !153, !2207, !158}
!5477 = distinct !DILocation(line: 1719, column: 12, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 1719, column: 12)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 1717, column: 7)
!5480 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 1699, column: 2)
!5481 = !DILocalVariable(name: "bytes", arg: 2, scope: !5466, file: !5467, line: 138, type: !823)
!5482 = !DILocation(line: 138, column: 42, scope: !5466, inlinedAt: !5471)
!5483 = !DILocalVariable(name: "is_source", arg: 3, scope: !5466, file: !5467, line: 138, type: !292)
!5484 = !DILocation(line: 138, column: 54, scope: !5466, inlinedAt: !5471)
!5485 = !DILocalVariable(name: "sz", scope: !5466, file: !5467, line: 140, type: !165)
!5486 = !DILocation(line: 140, column: 6, scope: !5466, inlinedAt: !5471)
!5487 = !DILocalVariable(name: "__ret_warn_on", scope: !5488, file: !5467, line: 150, type: !165)
!5488 = distinct !DILexicalBlock(scope: !5489, file: !5467, line: 150, column: 6)
!5489 = distinct !DILexicalBlock(scope: !5466, file: !5467, line: 150, column: 6)
!5490 = !DILocation(line: 150, column: 6, scope: !5488, inlinedAt: !5471)
!5491 = !DILocalVariable(name: "to", arg: 1, scope: !5474, file: !5473, line: 197, type: !153)
!5492 = !DILocation(line: 197, column: 27, scope: !5474, inlinedAt: !5477)
!5493 = !DILocalVariable(name: "from", arg: 2, scope: !5474, file: !5473, line: 197, type: !2207)
!5494 = !DILocation(line: 197, column: 43, scope: !5474, inlinedAt: !5477)
!5495 = !DILocalVariable(name: "n", arg: 3, scope: !5474, file: !5473, line: 197, type: !158)
!5496 = !DILocation(line: 197, column: 63, scope: !5474, inlinedAt: !5477)
!5497 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !5498)
!5498 = distinct !DILocation(line: 1715, column: 3, scope: !5480)
!5499 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !5498)
!5500 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !5501)
!5501 = distinct !DILocation(line: 1710, column: 3, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !3, line: 1710, column: 3)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 1710, column: 3)
!5504 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 1710, column: 3)
!5505 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 1710, column: 3)
!5506 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 1710, column: 3)
!5507 = !DILocation(line: 138, column: 29, scope: !5466, inlinedAt: !5508)
!5508 = distinct !DILocation(line: 199, column: 6, scope: !5472, inlinedAt: !5509)
!5509 = distinct !DILocation(line: 1692, column: 13, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 1692, column: 13)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 1690, column: 7)
!5512 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 1665, column: 2)
!5513 = !DILocation(line: 138, column: 42, scope: !5466, inlinedAt: !5508)
!5514 = !DILocation(line: 138, column: 54, scope: !5466, inlinedAt: !5508)
!5515 = !DILocation(line: 140, column: 6, scope: !5466, inlinedAt: !5508)
!5516 = !DILocation(line: 150, column: 6, scope: !5488, inlinedAt: !5508)
!5517 = !DILocation(line: 197, column: 27, scope: !5474, inlinedAt: !5509)
!5518 = !DILocation(line: 197, column: 43, scope: !5474, inlinedAt: !5509)
!5519 = !DILocation(line: 197, column: 63, scope: !5474, inlinedAt: !5509)
!5520 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !5521)
!5521 = distinct !DILocation(line: 1688, column: 3, scope: !5512)
!5522 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !5521)
!5523 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !5524)
!5524 = distinct !DILocation(line: 1790, column: 3, scope: !5452)
!5525 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !5524)
!5526 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !5527)
!5527 = distinct !DILocation(line: 1677, column: 3, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 1677, column: 3)
!5529 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 1677, column: 3)
!5530 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 1677, column: 3)
!5531 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 1677, column: 3)
!5532 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 1677, column: 3)
!5533 = !DILocalVariable(name: "cmd", arg: 1, scope: !5442, file: !3, line: 1657, type: !7)
!5534 = !DILocation(line: 1657, column: 32, scope: !5442)
!5535 = !DILocalVariable(name: "udp", arg: 2, scope: !5442, file: !3, line: 1657, type: !153)
!5536 = !DILocation(line: 1657, column: 50, scope: !5442)
!5537 = !DILocalVariable(name: "perm", arg: 3, scope: !5442, file: !3, line: 1657, type: !165)
!5538 = !DILocation(line: 1657, column: 59, scope: !5442)
!5539 = !DILocalVariable(name: "flags", scope: !5442, file: !3, line: 1659, type: !158)
!5540 = !DILocation(line: 1659, column: 16, scope: !5442)
!5541 = !DILocalVariable(name: "asize", scope: !5442, file: !3, line: 1660, type: !165)
!5542 = !DILocation(line: 1660, column: 6, scope: !5442)
!5543 = !DILocalVariable(name: "ret", scope: !5442, file: !3, line: 1661, type: !165)
!5544 = !DILocation(line: 1661, column: 6, scope: !5442)
!5545 = !DILocation(line: 1663, column: 10, scope: !5442)
!5546 = !DILocation(line: 1663, column: 2, scope: !5442)
!5547 = !DILocalVariable(name: "a", scope: !5512, file: !3, line: 1666, type: !5548)
!5548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5549, size: 64)
!5549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbdiacrs", file: !4580, line: 123, size: 6176, elements: !5550)
!5550 = !{!5551, !5552}
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "kb_cnt", scope: !5549, file: !4580, line: 124, baseType: !7, size: 32)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "kbdiacr", scope: !5549, file: !4580, line: 125, baseType: !5553, size: 6144, offset: 32)
!5553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5554, size: 6144, elements: !4518)
!5554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbdiacr", file: !4580, line: 120, size: 24, elements: !5555)
!5555 = !{!5556, !5557, !5558}
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "diacr", scope: !5554, file: !4580, line: 121, baseType: !154, size: 8)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5554, file: !4580, line: 121, baseType: !154, size: 8, offset: 8)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5554, file: !4580, line: 121, baseType: !154, size: 8, offset: 16)
!5559 = !DILocation(line: 1666, column: 27, scope: !5512)
!5560 = !DILocation(line: 1666, column: 31, scope: !5512)
!5561 = !DILocalVariable(name: "dia", scope: !5512, file: !3, line: 1667, type: !5562)
!5562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5554, size: 64)
!5563 = !DILocation(line: 1667, column: 19, scope: !5512)
!5564 = !DILocalVariable(name: "i", scope: !5512, file: !3, line: 1668, type: !165)
!5565 = !DILocation(line: 1668, column: 7, scope: !5512)
!5566 = !DILocation(line: 1670, column: 9, scope: !5512)
!5567 = !DILocation(line: 1670, column: 7, scope: !5512)
!5568 = !DILocation(line: 1672, column: 8, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 1672, column: 7)
!5570 = !DILocation(line: 1672, column: 7, scope: !5512)
!5571 = !DILocation(line: 1673, column: 4, scope: !5569)
!5572 = !DILocation(line: 1677, column: 3, scope: !5512)
!5573 = !DILocation(line: 1677, column: 3, scope: !5532)
!5574 = !DILocalVariable(name: "__dummy", scope: !5575, file: !3, line: 1677, type: !158)
!5575 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 1677, column: 3)
!5576 = !DILocation(line: 1677, column: 3, scope: !5575)
!5577 = !DILocalVariable(name: "__dummy2", scope: !5575, file: !3, line: 1677, type: !158)
!5578 = !DILocation(line: 1677, column: 3, scope: !5531)
!5579 = !DILocation(line: 1677, column: 3, scope: !5530)
!5580 = !DILocation(line: 1677, column: 3, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 1677, column: 3)
!5582 = !DILocalVariable(name: "__dummy", scope: !5583, file: !3, line: 1677, type: !158)
!5583 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 1677, column: 3)
!5584 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 1677, column: 3)
!5585 = !DILocation(line: 1677, column: 3, scope: !5583)
!5586 = !DILocalVariable(name: "__dummy2", scope: !5583, file: !3, line: 1677, type: !158)
!5587 = !DILocation(line: 1677, column: 3, scope: !5584)
!5588 = !DILocation(line: 1677, column: 3, scope: !5529)
!5589 = !{i32 -2141824184}
!5590 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !5527)
!5591 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !5527)
!5592 = !DILocation(line: 1677, column: 3, scope: !5528)
!5593 = !DILocation(line: 1679, column: 11, scope: !5512)
!5594 = !DILocation(line: 1679, column: 9, scope: !5512)
!5595 = !DILocation(line: 1680, column: 10, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 1680, column: 3)
!5597 = !DILocation(line: 1680, column: 8, scope: !5596)
!5598 = !DILocation(line: 1680, column: 15, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 1680, column: 3)
!5600 = !DILocation(line: 1680, column: 19, scope: !5599)
!5601 = !DILocation(line: 1680, column: 17, scope: !5599)
!5602 = !DILocation(line: 1680, column: 3, scope: !5596)
!5603 = !DILocation(line: 1682, column: 20, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 1680, column: 31)
!5605 = !DILocation(line: 1682, column: 7, scope: !5604)
!5606 = !DILocation(line: 1682, column: 23, scope: !5604)
!5607 = !DILocation(line: 1681, column: 19, scope: !5604)
!5608 = !DILocation(line: 1681, column: 4, scope: !5604)
!5609 = !DILocation(line: 1681, column: 8, scope: !5604)
!5610 = !DILocation(line: 1681, column: 11, scope: !5604)
!5611 = !DILocation(line: 1681, column: 17, scope: !5604)
!5612 = !DILocation(line: 1684, column: 20, scope: !5604)
!5613 = !DILocation(line: 1684, column: 7, scope: !5604)
!5614 = !DILocation(line: 1684, column: 23, scope: !5604)
!5615 = !DILocation(line: 1683, column: 18, scope: !5604)
!5616 = !DILocation(line: 1683, column: 4, scope: !5604)
!5617 = !DILocation(line: 1683, column: 8, scope: !5604)
!5618 = !DILocation(line: 1683, column: 11, scope: !5604)
!5619 = !DILocation(line: 1683, column: 16, scope: !5604)
!5620 = !DILocation(line: 1686, column: 20, scope: !5604)
!5621 = !DILocation(line: 1686, column: 7, scope: !5604)
!5622 = !DILocation(line: 1686, column: 23, scope: !5604)
!5623 = !DILocation(line: 1685, column: 20, scope: !5604)
!5624 = !DILocation(line: 1685, column: 4, scope: !5604)
!5625 = !DILocation(line: 1685, column: 8, scope: !5604)
!5626 = !DILocation(line: 1685, column: 11, scope: !5604)
!5627 = !DILocation(line: 1685, column: 18, scope: !5604)
!5628 = !DILocation(line: 1687, column: 3, scope: !5604)
!5629 = !DILocation(line: 1680, column: 27, scope: !5599)
!5630 = !DILocation(line: 1680, column: 3, scope: !5599)
!5631 = distinct !{!5631, !5602, !5632}
!5632 = !DILocation(line: 1687, column: 3, scope: !5596)
!5633 = !DILocation(line: 1688, column: 43, scope: !5512)
!5634 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !5521)
!5635 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !5521)
!5636 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !5521)
!5637 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !5521)
!5638 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !5521)
!5639 = !DILocation(line: 1690, column: 7, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 1690, column: 7)
!5641 = !DILocalVariable(name: "__ret_pu", scope: !5642, file: !3, line: 1690, type: !165)
!5642 = distinct !DILexicalBlock(scope: !5640, file: !3, line: 1690, column: 7)
!5643 = !DILocation(line: 1690, column: 7, scope: !5642)
!5644 = !DILocalVariable(name: "__ptr_pu", scope: !5642, file: !3, line: 1690, type: !153)
!5645 = !DILocalVariable(name: "__val_pu", scope: !5642, file: !3, line: 1690, type: !7)
!5646 = !{i32 -2141823750}
!5647 = !DILocation(line: 1690, column: 7, scope: !5511)
!5648 = !DILocation(line: 1690, column: 7, scope: !5512)
!5649 = !DILocation(line: 1691, column: 8, scope: !5511)
!5650 = !DILocation(line: 1691, column: 4, scope: !5511)
!5651 = !DILocation(line: 1692, column: 26, scope: !5510)
!5652 = !DILocation(line: 1692, column: 29, scope: !5510)
!5653 = !DILocation(line: 1692, column: 38, scope: !5510)
!5654 = !DILocation(line: 1693, column: 5, scope: !5510)
!5655 = !DILocation(line: 1693, column: 11, scope: !5510)
!5656 = !DILocation(line: 199, column: 6, scope: !5472, inlinedAt: !5509)
!5657 = !DILocation(line: 141, column: 6, scope: !5658, inlinedAt: !5508)
!5658 = distinct !DILexicalBlock(scope: !5466, file: !5467, line: 141, column: 6)
!5659 = !DILocation(line: 0, scope: !5658, inlinedAt: !5508)
!5660 = !DILocation(line: 141, column: 6, scope: !5466, inlinedAt: !5508)
!5661 = !DILocation(line: 142, column: 29, scope: !5662, inlinedAt: !5508)
!5662 = distinct !DILexicalBlock(scope: !5663, file: !5467, line: 142, column: 7)
!5663 = distinct !DILexicalBlock(scope: !5658, file: !5467, line: 141, column: 39)
!5664 = !DILocation(line: 142, column: 8, scope: !5662, inlinedAt: !5508)
!5665 = !DILocation(line: 142, column: 7, scope: !5663, inlinedAt: !5508)
!5666 = !DILocation(line: 143, column: 18, scope: !5662, inlinedAt: !5508)
!5667 = !DILocation(line: 143, column: 22, scope: !5662, inlinedAt: !5508)
!5668 = !DILocation(line: 143, column: 4, scope: !5662, inlinedAt: !5508)
!5669 = !DILocation(line: 144, column: 12, scope: !5670, inlinedAt: !5508)
!5670 = distinct !DILexicalBlock(scope: !5662, file: !5467, line: 144, column: 12)
!5671 = !DILocation(line: 144, column: 12, scope: !5662, inlinedAt: !5508)
!5672 = !DILocation(line: 145, column: 4, scope: !5670, inlinedAt: !5508)
!5673 = !DILocation(line: 147, column: 4, scope: !5670, inlinedAt: !5508)
!5674 = !DILocation(line: 148, column: 3, scope: !5663, inlinedAt: !5508)
!5675 = !DILocation(line: 150, column: 6, scope: !5676, inlinedAt: !5508)
!5676 = distinct !DILexicalBlock(scope: !5488, file: !5467, line: 150, column: 6)
!5677 = !DILocation(line: 150, column: 6, scope: !5678, inlinedAt: !5508)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !5467, line: 150, column: 6)
!5679 = distinct !DILexicalBlock(scope: !5676, file: !5467, line: 150, column: 6)
!5680 = !{i32 -2145504440, i32 -2145504411, i32 -2145504365, i32 -2145504307, i32 -2145504253, i32 -2145504199, i32 -2145504144, i32 -2145504113}
!5681 = !DILocation(line: 150, column: 6, scope: !5682, inlinedAt: !5508)
!5682 = distinct !DILexicalBlock(scope: !5679, file: !5467, line: 150, column: 6)
!5683 = !{i32 -2145503693, i32 -2145503686, i32 -2145503634, i32 -2145503603, i32 -2145503573}
!5684 = !DILocation(line: 150, column: 6, scope: !5679, inlinedAt: !5508)
!5685 = !DILocation(line: 150, column: 6, scope: !5489, inlinedAt: !5508)
!5686 = !DILocation(line: 150, column: 6, scope: !5466, inlinedAt: !5508)
!5687 = !DILocation(line: 151, column: 3, scope: !5489, inlinedAt: !5508)
!5688 = !DILocation(line: 152, column: 20, scope: !5466, inlinedAt: !5508)
!5689 = !DILocation(line: 152, column: 26, scope: !5466, inlinedAt: !5508)
!5690 = !DILocation(line: 152, column: 33, scope: !5466, inlinedAt: !5508)
!5691 = !DILocation(line: 152, column: 2, scope: !5466, inlinedAt: !5508)
!5692 = !DILocation(line: 153, column: 2, scope: !5466, inlinedAt: !5508)
!5693 = !DILocation(line: 154, column: 1, scope: !5466, inlinedAt: !5508)
!5694 = !DILocation(line: 199, column: 6, scope: !5474, inlinedAt: !5509)
!5695 = !DILocation(line: 200, column: 21, scope: !5472, inlinedAt: !5509)
!5696 = !DILocation(line: 200, column: 25, scope: !5472, inlinedAt: !5509)
!5697 = !DILocation(line: 200, column: 31, scope: !5472, inlinedAt: !5509)
!5698 = !DILocation(line: 200, column: 7, scope: !5472, inlinedAt: !5509)
!5699 = !DILocation(line: 200, column: 5, scope: !5472, inlinedAt: !5509)
!5700 = !DILocation(line: 200, column: 3, scope: !5472, inlinedAt: !5509)
!5701 = !DILocation(line: 201, column: 9, scope: !5474, inlinedAt: !5509)
!5702 = !DILocation(line: 1692, column: 13, scope: !5510)
!5703 = !DILocation(line: 1692, column: 13, scope: !5511)
!5704 = !DILocation(line: 1694, column: 8, scope: !5510)
!5705 = !DILocation(line: 1694, column: 4, scope: !5510)
!5706 = !DILocation(line: 1695, column: 9, scope: !5512)
!5707 = !DILocation(line: 1695, column: 3, scope: !5512)
!5708 = !DILocation(line: 1696, column: 10, scope: !5512)
!5709 = !DILocation(line: 1696, column: 3, scope: !5512)
!5710 = !DILocalVariable(name: "a", scope: !5480, file: !3, line: 1700, type: !5711)
!5711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5712, size: 64)
!5712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbdiacrsuc", file: !4580, line: 133, size: 24608, elements: !5713)
!5713 = !{!5714, !5715}
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "kb_cnt", scope: !5712, file: !4580, line: 134, baseType: !7, size: 32)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "kbdiacruc", scope: !5712, file: !4580, line: 135, baseType: !5716, size: 24576, offset: 32)
!5716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5717, size: 24576, elements: !4518)
!5717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbdiacruc", file: !4580, line: 130, size: 96, elements: !5718)
!5718 = !{!5719, !5720, !5721}
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "diacr", scope: !5717, file: !4580, line: 131, baseType: !7, size: 32)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5717, file: !4580, line: 131, baseType: !7, size: 32, offset: 32)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5717, file: !4580, line: 131, baseType: !7, size: 32, offset: 64)
!5722 = !DILocation(line: 1700, column: 29, scope: !5480)
!5723 = !DILocation(line: 1700, column: 33, scope: !5480)
!5724 = !DILocalVariable(name: "buf", scope: !5480, file: !3, line: 1701, type: !153)
!5725 = !DILocation(line: 1701, column: 9, scope: !5480)
!5726 = !DILocation(line: 1703, column: 9, scope: !5480)
!5727 = !DILocation(line: 1703, column: 7, scope: !5480)
!5728 = !DILocation(line: 1705, column: 7, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 1705, column: 7)
!5730 = !DILocation(line: 1705, column: 11, scope: !5729)
!5731 = !DILocation(line: 1705, column: 7, scope: !5480)
!5732 = !DILocation(line: 1706, column: 4, scope: !5729)
!5733 = !DILocation(line: 1710, column: 3, scope: !5480)
!5734 = !DILocation(line: 1710, column: 3, scope: !5506)
!5735 = !DILocalVariable(name: "__dummy", scope: !5736, file: !3, line: 1710, type: !158)
!5736 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 1710, column: 3)
!5737 = !DILocation(line: 1710, column: 3, scope: !5736)
!5738 = !DILocalVariable(name: "__dummy2", scope: !5736, file: !3, line: 1710, type: !158)
!5739 = !DILocation(line: 1710, column: 3, scope: !5505)
!5740 = !DILocation(line: 1710, column: 3, scope: !5504)
!5741 = !DILocation(line: 1710, column: 3, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 1710, column: 3)
!5743 = !DILocalVariable(name: "__dummy", scope: !5744, file: !3, line: 1710, type: !158)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 1710, column: 3)
!5745 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 1710, column: 3)
!5746 = !DILocation(line: 1710, column: 3, scope: !5744)
!5747 = !DILocalVariable(name: "__dummy2", scope: !5744, file: !3, line: 1710, type: !158)
!5748 = !DILocation(line: 1710, column: 3, scope: !5745)
!5749 = !DILocation(line: 1710, column: 3, scope: !5503)
!5750 = !{i32 -2141822146}
!5751 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !5501)
!5752 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !5501)
!5753 = !DILocation(line: 1710, column: 3, scope: !5502)
!5754 = !DILocation(line: 1712, column: 11, scope: !5480)
!5755 = !DILocation(line: 1712, column: 9, scope: !5480)
!5756 = !DILocation(line: 1713, column: 10, scope: !5480)
!5757 = !DILocation(line: 1713, column: 29, scope: !5480)
!5758 = !DILocation(line: 1713, column: 35, scope: !5480)
!5759 = !DILocation(line: 1713, column: 3, scope: !5480)
!5760 = !DILocation(line: 1715, column: 43, scope: !5480)
!5761 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !5498)
!5762 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !5498)
!5763 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !5498)
!5764 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !5498)
!5765 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !5498)
!5766 = !DILocation(line: 1717, column: 7, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 1717, column: 7)
!5768 = !DILocalVariable(name: "__ret_pu", scope: !5769, file: !3, line: 1717, type: !165)
!5769 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 1717, column: 7)
!5770 = !DILocation(line: 1717, column: 7, scope: !5769)
!5771 = !DILocalVariable(name: "__ptr_pu", scope: !5769, file: !3, line: 1717, type: !153)
!5772 = !DILocalVariable(name: "__val_pu", scope: !5769, file: !3, line: 1717, type: !7)
!5773 = !{i32 -2141821712}
!5774 = !DILocation(line: 1717, column: 7, scope: !5479)
!5775 = !DILocation(line: 1717, column: 7, scope: !5480)
!5776 = !DILocation(line: 1718, column: 8, scope: !5479)
!5777 = !DILocation(line: 1718, column: 4, scope: !5479)
!5778 = !DILocation(line: 1719, column: 25, scope: !5478)
!5779 = !DILocation(line: 1719, column: 28, scope: !5478)
!5780 = !DILocation(line: 1719, column: 39, scope: !5478)
!5781 = !DILocation(line: 1720, column: 5, scope: !5478)
!5782 = !DILocation(line: 1720, column: 10, scope: !5478)
!5783 = !DILocation(line: 199, column: 6, scope: !5472, inlinedAt: !5477)
!5784 = !DILocation(line: 141, column: 6, scope: !5658, inlinedAt: !5471)
!5785 = !DILocation(line: 0, scope: !5658, inlinedAt: !5471)
!5786 = !DILocation(line: 141, column: 6, scope: !5466, inlinedAt: !5471)
!5787 = !DILocation(line: 142, column: 29, scope: !5662, inlinedAt: !5471)
!5788 = !DILocation(line: 142, column: 8, scope: !5662, inlinedAt: !5471)
!5789 = !DILocation(line: 142, column: 7, scope: !5663, inlinedAt: !5471)
!5790 = !DILocation(line: 143, column: 18, scope: !5662, inlinedAt: !5471)
!5791 = !DILocation(line: 143, column: 22, scope: !5662, inlinedAt: !5471)
!5792 = !DILocation(line: 143, column: 4, scope: !5662, inlinedAt: !5471)
!5793 = !DILocation(line: 144, column: 12, scope: !5670, inlinedAt: !5471)
!5794 = !DILocation(line: 144, column: 12, scope: !5662, inlinedAt: !5471)
!5795 = !DILocation(line: 145, column: 4, scope: !5670, inlinedAt: !5471)
!5796 = !DILocation(line: 147, column: 4, scope: !5670, inlinedAt: !5471)
!5797 = !DILocation(line: 148, column: 3, scope: !5663, inlinedAt: !5471)
!5798 = !DILocation(line: 150, column: 6, scope: !5676, inlinedAt: !5471)
!5799 = !DILocation(line: 150, column: 6, scope: !5678, inlinedAt: !5471)
!5800 = !DILocation(line: 150, column: 6, scope: !5682, inlinedAt: !5471)
!5801 = !DILocation(line: 150, column: 6, scope: !5679, inlinedAt: !5471)
!5802 = !DILocation(line: 150, column: 6, scope: !5489, inlinedAt: !5471)
!5803 = !DILocation(line: 150, column: 6, scope: !5466, inlinedAt: !5471)
!5804 = !DILocation(line: 151, column: 3, scope: !5489, inlinedAt: !5471)
!5805 = !DILocation(line: 152, column: 20, scope: !5466, inlinedAt: !5471)
!5806 = !DILocation(line: 152, column: 26, scope: !5466, inlinedAt: !5471)
!5807 = !DILocation(line: 152, column: 33, scope: !5466, inlinedAt: !5471)
!5808 = !DILocation(line: 152, column: 2, scope: !5466, inlinedAt: !5471)
!5809 = !DILocation(line: 153, column: 2, scope: !5466, inlinedAt: !5471)
!5810 = !DILocation(line: 154, column: 1, scope: !5466, inlinedAt: !5471)
!5811 = !DILocation(line: 199, column: 6, scope: !5474, inlinedAt: !5477)
!5812 = !DILocation(line: 200, column: 21, scope: !5472, inlinedAt: !5477)
!5813 = !DILocation(line: 200, column: 25, scope: !5472, inlinedAt: !5477)
!5814 = !DILocation(line: 200, column: 31, scope: !5472, inlinedAt: !5477)
!5815 = !DILocation(line: 200, column: 7, scope: !5472, inlinedAt: !5477)
!5816 = !DILocation(line: 200, column: 5, scope: !5472, inlinedAt: !5477)
!5817 = !DILocation(line: 200, column: 3, scope: !5472, inlinedAt: !5477)
!5818 = !DILocation(line: 201, column: 9, scope: !5474, inlinedAt: !5477)
!5819 = !DILocation(line: 1719, column: 12, scope: !5478)
!5820 = !DILocation(line: 1719, column: 12, scope: !5479)
!5821 = !DILocation(line: 1721, column: 8, scope: !5478)
!5822 = !DILocation(line: 1721, column: 4, scope: !5478)
!5823 = !DILocation(line: 1722, column: 9, scope: !5480)
!5824 = !DILocation(line: 1722, column: 3, scope: !5480)
!5825 = !DILocation(line: 1723, column: 10, scope: !5480)
!5826 = !DILocation(line: 1723, column: 3, scope: !5480)
!5827 = !DILocalVariable(name: "a", scope: !5456, file: !3, line: 1728, type: !5548)
!5828 = !DILocation(line: 1728, column: 27, scope: !5456)
!5829 = !DILocation(line: 1728, column: 31, scope: !5456)
!5830 = !DILocalVariable(name: "dia", scope: !5456, file: !3, line: 1729, type: !5562)
!5831 = !DILocation(line: 1729, column: 19, scope: !5456)
!5832 = !DILocalVariable(name: "ct", scope: !5456, file: !3, line: 1730, type: !7)
!5833 = !DILocation(line: 1730, column: 16, scope: !5456)
!5834 = !DILocalVariable(name: "i", scope: !5456, file: !3, line: 1731, type: !165)
!5835 = !DILocation(line: 1731, column: 7, scope: !5456)
!5836 = !DILocation(line: 1733, column: 8, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1733, column: 7)
!5838 = !DILocation(line: 1733, column: 7, scope: !5456)
!5839 = !DILocation(line: 1734, column: 4, scope: !5837)
!5840 = !DILocation(line: 1735, column: 7, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1735, column: 7)
!5842 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1735, column: 7)
!5843 = !DILocalVariable(name: "__ret_gu", scope: !5844, file: !3, line: 1735, type: !165)
!5844 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 1735, column: 7)
!5845 = !DILocation(line: 1735, column: 7, scope: !5844)
!5846 = !DILocalVariable(name: "__val_gu", scope: !5844, file: !3, line: 1735, type: !7)
!5847 = !{i32 -2141820993}
!5848 = !DILocation(line: 1735, column: 7, scope: !5842)
!5849 = !DILocation(line: 1735, column: 7, scope: !5456)
!5850 = !DILocation(line: 1736, column: 4, scope: !5842)
!5851 = !DILocation(line: 1737, column: 7, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1737, column: 7)
!5853 = !DILocation(line: 1737, column: 10, scope: !5852)
!5854 = !DILocation(line: 1737, column: 7, scope: !5456)
!5855 = !DILocation(line: 1738, column: 4, scope: !5852)
!5856 = !DILocation(line: 1740, column: 7, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1740, column: 7)
!5858 = !DILocation(line: 1740, column: 7, scope: !5456)
!5859 = !DILocation(line: 1742, column: 22, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 1740, column: 11)
!5861 = !DILocation(line: 1742, column: 25, scope: !5860)
!5862 = !DILocation(line: 1743, column: 31, scope: !5860)
!5863 = !DILocation(line: 1743, column: 29, scope: !5860)
!5864 = !DILocation(line: 1742, column: 10, scope: !5860)
!5865 = !DILocation(line: 1742, column: 8, scope: !5860)
!5866 = !DILocation(line: 1744, column: 15, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 1744, column: 8)
!5868 = !DILocation(line: 1744, column: 8, scope: !5867)
!5869 = !DILocation(line: 1744, column: 8, scope: !5860)
!5870 = !DILocation(line: 1745, column: 20, scope: !5867)
!5871 = !DILocation(line: 1745, column: 12, scope: !5867)
!5872 = !DILocation(line: 1745, column: 5, scope: !5867)
!5873 = !DILocation(line: 1747, column: 3, scope: !5860)
!5874 = !DILocation(line: 1749, column: 3, scope: !5456)
!5875 = !DILocation(line: 1749, column: 3, scope: !5464)
!5876 = !DILocalVariable(name: "__dummy", scope: !5877, file: !3, line: 1749, type: !158)
!5877 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 1749, column: 3)
!5878 = !DILocation(line: 1749, column: 3, scope: !5877)
!5879 = !DILocalVariable(name: "__dummy2", scope: !5877, file: !3, line: 1749, type: !158)
!5880 = !DILocation(line: 1749, column: 3, scope: !5463)
!5881 = !DILocation(line: 1749, column: 3, scope: !5462)
!5882 = !DILocation(line: 1749, column: 3, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 1749, column: 3)
!5884 = !DILocalVariable(name: "__dummy", scope: !5885, file: !3, line: 1749, type: !158)
!5885 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 1749, column: 3)
!5886 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 1749, column: 3)
!5887 = !DILocation(line: 1749, column: 3, scope: !5885)
!5888 = !DILocalVariable(name: "__dummy2", scope: !5885, file: !3, line: 1749, type: !158)
!5889 = !DILocation(line: 1749, column: 3, scope: !5886)
!5890 = !DILocation(line: 1749, column: 3, scope: !5461)
!5891 = !{i32 -2141818509}
!5892 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !5459)
!5893 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !5459)
!5894 = !DILocation(line: 1749, column: 3, scope: !5460)
!5895 = !DILocation(line: 1750, column: 23, scope: !5456)
!5896 = !DILocation(line: 1750, column: 21, scope: !5456)
!5897 = !DILocation(line: 1751, column: 10, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 1751, column: 3)
!5899 = !DILocation(line: 1751, column: 8, scope: !5898)
!5900 = !DILocation(line: 1751, column: 15, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 1751, column: 3)
!5902 = !DILocation(line: 1751, column: 19, scope: !5901)
!5903 = !DILocation(line: 1751, column: 17, scope: !5901)
!5904 = !DILocation(line: 1751, column: 3, scope: !5898)
!5905 = !DILocation(line: 1753, column: 23, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 1751, column: 28)
!5907 = !DILocation(line: 1753, column: 27, scope: !5906)
!5908 = !DILocation(line: 1753, column: 30, scope: !5906)
!5909 = !DILocation(line: 1753, column: 6, scope: !5906)
!5910 = !DILocation(line: 1752, column: 17, scope: !5906)
!5911 = !DILocation(line: 1752, column: 4, scope: !5906)
!5912 = !DILocation(line: 1752, column: 20, scope: !5906)
!5913 = !DILocation(line: 1752, column: 26, scope: !5906)
!5914 = !DILocation(line: 1755, column: 23, scope: !5906)
!5915 = !DILocation(line: 1755, column: 27, scope: !5906)
!5916 = !DILocation(line: 1755, column: 30, scope: !5906)
!5917 = !DILocation(line: 1755, column: 6, scope: !5906)
!5918 = !DILocation(line: 1754, column: 17, scope: !5906)
!5919 = !DILocation(line: 1754, column: 4, scope: !5906)
!5920 = !DILocation(line: 1754, column: 20, scope: !5906)
!5921 = !DILocation(line: 1754, column: 25, scope: !5906)
!5922 = !DILocation(line: 1757, column: 23, scope: !5906)
!5923 = !DILocation(line: 1757, column: 27, scope: !5906)
!5924 = !DILocation(line: 1757, column: 30, scope: !5906)
!5925 = !DILocation(line: 1757, column: 6, scope: !5906)
!5926 = !DILocation(line: 1756, column: 17, scope: !5906)
!5927 = !DILocation(line: 1756, column: 4, scope: !5906)
!5928 = !DILocation(line: 1756, column: 20, scope: !5906)
!5929 = !DILocation(line: 1756, column: 27, scope: !5906)
!5930 = !DILocation(line: 1758, column: 3, scope: !5906)
!5931 = !DILocation(line: 1751, column: 24, scope: !5901)
!5932 = !DILocation(line: 1751, column: 3, scope: !5901)
!5933 = distinct !{!5933, !5904, !5934}
!5934 = !DILocation(line: 1758, column: 3, scope: !5898)
!5935 = !DILocation(line: 1759, column: 43, scope: !5456)
!5936 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !5455)
!5937 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !5455)
!5938 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !5455)
!5939 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !5455)
!5940 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !5455)
!5941 = !DILocation(line: 1760, column: 9, scope: !5456)
!5942 = !DILocation(line: 1760, column: 3, scope: !5456)
!5943 = !DILocation(line: 1761, column: 3, scope: !5456)
!5944 = !DILocalVariable(name: "a", scope: !5452, file: !3, line: 1766, type: !5711)
!5945 = !DILocation(line: 1766, column: 29, scope: !5452)
!5946 = !DILocation(line: 1766, column: 33, scope: !5452)
!5947 = !DILocalVariable(name: "ct", scope: !5452, file: !3, line: 1767, type: !7)
!5948 = !DILocation(line: 1767, column: 16, scope: !5452)
!5949 = !DILocalVariable(name: "buf", scope: !5452, file: !3, line: 1768, type: !153)
!5950 = !DILocation(line: 1768, column: 9, scope: !5452)
!5951 = !DILocation(line: 1770, column: 8, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1770, column: 7)
!5953 = !DILocation(line: 1770, column: 7, scope: !5452)
!5954 = !DILocation(line: 1771, column: 4, scope: !5952)
!5955 = !DILocation(line: 1773, column: 7, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 1773, column: 7)
!5957 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1773, column: 7)
!5958 = !DILocalVariable(name: "__ret_gu", scope: !5959, file: !3, line: 1773, type: !165)
!5959 = distinct !DILexicalBlock(scope: !5956, file: !3, line: 1773, column: 7)
!5960 = !DILocation(line: 1773, column: 7, scope: !5959)
!5961 = !DILocalVariable(name: "__val_gu", scope: !5959, file: !3, line: 1773, type: !7)
!5962 = !{i32 -2141818140}
!5963 = !DILocation(line: 1773, column: 7, scope: !5957)
!5964 = !DILocation(line: 1773, column: 7, scope: !5452)
!5965 = !DILocation(line: 1774, column: 4, scope: !5957)
!5966 = !DILocation(line: 1776, column: 7, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1776, column: 7)
!5968 = !DILocation(line: 1776, column: 10, scope: !5967)
!5969 = !DILocation(line: 1776, column: 7, scope: !5452)
!5970 = !DILocation(line: 1777, column: 4, scope: !5967)
!5971 = !DILocation(line: 1779, column: 7, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1779, column: 7)
!5973 = !DILocation(line: 1779, column: 7, scope: !5452)
!5974 = !DILocation(line: 1780, column: 22, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 1779, column: 11)
!5976 = !DILocation(line: 1780, column: 25, scope: !5975)
!5977 = !DILocation(line: 1781, column: 8, scope: !5975)
!5978 = !DILocation(line: 1781, column: 11, scope: !5975)
!5979 = !DILocation(line: 1780, column: 10, scope: !5975)
!5980 = !DILocation(line: 1780, column: 8, scope: !5975)
!5981 = !DILocation(line: 1782, column: 15, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 1782, column: 8)
!5983 = !DILocation(line: 1782, column: 8, scope: !5982)
!5984 = !DILocation(line: 1782, column: 8, scope: !5975)
!5985 = !DILocation(line: 1783, column: 20, scope: !5982)
!5986 = !DILocation(line: 1783, column: 12, scope: !5982)
!5987 = !DILocation(line: 1783, column: 5, scope: !5982)
!5988 = !DILocation(line: 1784, column: 3, scope: !5975)
!5989 = !DILocation(line: 1785, column: 3, scope: !5452)
!5990 = !DILocation(line: 1785, column: 3, scope: !5451)
!5991 = !DILocalVariable(name: "__dummy", scope: !5992, file: !3, line: 1785, type: !158)
!5992 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 1785, column: 3)
!5993 = !DILocation(line: 1785, column: 3, scope: !5992)
!5994 = !DILocalVariable(name: "__dummy2", scope: !5992, file: !3, line: 1785, type: !158)
!5995 = !DILocation(line: 1785, column: 3, scope: !5450)
!5996 = !DILocation(line: 1785, column: 3, scope: !5449)
!5997 = !DILocation(line: 1785, column: 3, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 1785, column: 3)
!5999 = !DILocalVariable(name: "__dummy", scope: !6000, file: !3, line: 1785, type: !158)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 1785, column: 3)
!6001 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 1785, column: 3)
!6002 = !DILocation(line: 1785, column: 3, scope: !6000)
!6003 = !DILocalVariable(name: "__dummy2", scope: !6000, file: !3, line: 1785, type: !158)
!6004 = !DILocation(line: 1785, column: 3, scope: !6001)
!6005 = !DILocation(line: 1785, column: 3, scope: !5448)
!6006 = !{i32 -2141815656}
!6007 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !5446)
!6008 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !5446)
!6009 = !DILocation(line: 1785, column: 3, scope: !5447)
!6010 = !DILocation(line: 1786, column: 7, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1786, column: 7)
!6012 = !DILocation(line: 1786, column: 7, scope: !5452)
!6013 = !DILocation(line: 1787, column: 25, scope: !6011)
!6014 = !DILocation(line: 1788, column: 6, scope: !6011)
!6015 = !DILocation(line: 1788, column: 9, scope: !6011)
!6016 = !DILocation(line: 1787, column: 4, scope: !6011)
!6017 = !DILocation(line: 1789, column: 23, scope: !5452)
!6018 = !DILocation(line: 1789, column: 21, scope: !5452)
!6019 = !DILocation(line: 1790, column: 43, scope: !5452)
!6020 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !5524)
!6021 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !5524)
!6022 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !5524)
!6023 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !5524)
!6024 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !5524)
!6025 = !DILocation(line: 1791, column: 9, scope: !5452)
!6026 = !DILocation(line: 1791, column: 3, scope: !5452)
!6027 = !DILocation(line: 1792, column: 3, scope: !5452)
!6028 = !DILocation(line: 1795, column: 9, scope: !5442)
!6029 = !DILocation(line: 1795, column: 2, scope: !5442)
!6030 = !DILocation(line: 1796, column: 1, scope: !5442)
!6031 = distinct !DISubprogram(name: "kmalloc_array", scope: !144, file: !144, line: 584, type: !6032, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6032 = !DISubroutineType(types: !6033)
!6033 = !{!153, !823, !823, !151}
!6034 = !DILocalVariable(name: "s", arg: 1, scope: !6035, file: !144, line: 445, type: !1202)
!6035 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !144, file: !144, line: 445, type: !6036, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{!153, !1202, !151, !823}
!6038 = !DILocation(line: 445, column: 72, scope: !6035, inlinedAt: !6039)
!6039 = distinct !DILocation(line: 552, column: 10, scope: !6040, inlinedAt: !6045)
!6040 = distinct !DILexicalBlock(scope: !6041, file: !144, line: 540, column: 34)
!6041 = distinct !DILexicalBlock(scope: !6042, file: !144, line: 540, column: 6)
!6042 = distinct !DISubprogram(name: "kmalloc", scope: !144, file: !144, line: 538, type: !6043, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6043 = !DISubroutineType(types: !6044)
!6044 = !{!153, !823, !151}
!6045 = distinct !DILocation(line: 591, column: 10, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6031, file: !144, line: 590, column: 6)
!6047 = !DILocalVariable(name: "flags", arg: 2, scope: !6035, file: !144, line: 446, type: !151)
!6048 = !DILocation(line: 446, column: 9, scope: !6035, inlinedAt: !6039)
!6049 = !DILocalVariable(name: "size", arg: 3, scope: !6035, file: !144, line: 446, type: !823)
!6050 = !DILocation(line: 446, column: 23, scope: !6035, inlinedAt: !6039)
!6051 = !DILocalVariable(name: "ret", scope: !6035, file: !144, line: 448, type: !153)
!6052 = !DILocation(line: 448, column: 8, scope: !6035, inlinedAt: !6039)
!6053 = !DILocalVariable(name: "flags", arg: 1, scope: !6054, file: !144, line: 318, type: !151)
!6054 = distinct !DISubprogram(name: "kmalloc_type", scope: !144, file: !144, line: 318, type: !6055, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6055 = !DISubroutineType(types: !6056)
!6056 = !{!143, !151}
!6057 = !DILocation(line: 318, column: 67, scope: !6054, inlinedAt: !6058)
!6058 = distinct !DILocation(line: 553, column: 20, scope: !6040, inlinedAt: !6045)
!6059 = !DILocalVariable(name: "size", arg: 1, scope: !6060, file: !144, line: 346, type: !823)
!6060 = distinct !DISubprogram(name: "kmalloc_index", scope: !144, file: !144, line: 346, type: !6061, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{!7, !823}
!6063 = !DILocation(line: 346, column: 58, scope: !6060, inlinedAt: !6064)
!6064 = distinct !DILocation(line: 547, column: 11, scope: !6040, inlinedAt: !6045)
!6065 = !DILocalVariable(name: "size", arg: 1, scope: !6066, file: !144, line: 472, type: !823)
!6066 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !144, file: !144, line: 472, type: !6067, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6067 = !DISubroutineType(types: !6068)
!6068 = !{!153, !823, !151, !7}
!6069 = !DILocation(line: 472, column: 28, scope: !6066, inlinedAt: !6070)
!6070 = distinct !DILocation(line: 481, column: 9, scope: !6071, inlinedAt: !6072)
!6071 = distinct !DISubprogram(name: "kmalloc_large", scope: !144, file: !144, line: 478, type: !6043, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6072 = distinct !DILocation(line: 545, column: 11, scope: !6073, inlinedAt: !6045)
!6073 = distinct !DILexicalBlock(scope: !6040, file: !144, line: 544, column: 7)
!6074 = !DILocalVariable(name: "flags", arg: 2, scope: !6066, file: !144, line: 472, type: !151)
!6075 = !DILocation(line: 472, column: 40, scope: !6066, inlinedAt: !6070)
!6076 = !DILocalVariable(name: "order", arg: 3, scope: !6066, file: !144, line: 472, type: !7)
!6077 = !DILocation(line: 472, column: 60, scope: !6066, inlinedAt: !6070)
!6078 = !DILocalVariable(name: "size", arg: 1, scope: !6071, file: !144, line: 478, type: !823)
!6079 = !DILocation(line: 478, column: 51, scope: !6071, inlinedAt: !6072)
!6080 = !DILocalVariable(name: "flags", arg: 2, scope: !6071, file: !144, line: 478, type: !151)
!6081 = !DILocation(line: 478, column: 63, scope: !6071, inlinedAt: !6072)
!6082 = !DILocalVariable(name: "order", scope: !6071, file: !144, line: 480, type: !7)
!6083 = !DILocation(line: 480, column: 15, scope: !6071, inlinedAt: !6072)
!6084 = !DILocalVariable(name: "size", arg: 1, scope: !6042, file: !144, line: 538, type: !823)
!6085 = !DILocation(line: 538, column: 45, scope: !6042, inlinedAt: !6045)
!6086 = !DILocalVariable(name: "flags", arg: 2, scope: !6042, file: !144, line: 538, type: !151)
!6087 = !DILocation(line: 538, column: 57, scope: !6042, inlinedAt: !6045)
!6088 = !DILocalVariable(name: "index", scope: !6040, file: !144, line: 542, type: !7)
!6089 = !DILocation(line: 542, column: 16, scope: !6040, inlinedAt: !6045)
!6090 = !DILocalVariable(name: "n", arg: 1, scope: !6031, file: !144, line: 584, type: !823)
!6091 = !DILocation(line: 584, column: 42, scope: !6031)
!6092 = !DILocalVariable(name: "size", arg: 2, scope: !6031, file: !144, line: 584, type: !823)
!6093 = !DILocation(line: 584, column: 52, scope: !6031)
!6094 = !DILocalVariable(name: "flags", arg: 3, scope: !6031, file: !144, line: 584, type: !151)
!6095 = !DILocation(line: 584, column: 64, scope: !6031)
!6096 = !DILocalVariable(name: "bytes", scope: !6031, file: !144, line: 586, type: !823)
!6097 = !DILocation(line: 586, column: 9, scope: !6031)
!6098 = !DILocalVariable(name: "__a", scope: !6099, file: !144, line: 588, type: !823)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !144, line: 588, column: 6)
!6100 = distinct !DILexicalBlock(scope: !6031, file: !144, line: 588, column: 6)
!6101 = !DILocation(line: 588, column: 6, scope: !6099)
!6102 = !DILocalVariable(name: "__b", scope: !6099, file: !144, line: 588, type: !823)
!6103 = !DILocalVariable(name: "__d", scope: !6099, file: !144, line: 588, type: !6104)
!6104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!6105 = !DILocation(line: 588, column: 6, scope: !6100)
!6106 = !DILocation(line: 588, column: 6, scope: !6031)
!6107 = !DILocation(line: 589, column: 3, scope: !6100)
!6108 = !DILocation(line: 590, column: 27, scope: !6046)
!6109 = !DILocation(line: 590, column: 6, scope: !6046)
!6110 = !DILocation(line: 590, column: 30, scope: !6046)
!6111 = !DILocation(line: 590, column: 54, scope: !6046)
!6112 = !DILocation(line: 590, column: 33, scope: !6046)
!6113 = !DILocation(line: 590, column: 6, scope: !6031)
!6114 = !DILocation(line: 591, column: 18, scope: !6046)
!6115 = !DILocation(line: 591, column: 25, scope: !6046)
!6116 = !DILocation(line: 540, column: 27, scope: !6041, inlinedAt: !6045)
!6117 = !DILocation(line: 540, column: 6, scope: !6041, inlinedAt: !6045)
!6118 = !DILocation(line: 540, column: 6, scope: !6042, inlinedAt: !6045)
!6119 = !DILocation(line: 544, column: 7, scope: !6073, inlinedAt: !6045)
!6120 = !DILocation(line: 544, column: 12, scope: !6073, inlinedAt: !6045)
!6121 = !DILocation(line: 544, column: 7, scope: !6040, inlinedAt: !6045)
!6122 = !DILocation(line: 545, column: 25, scope: !6073, inlinedAt: !6045)
!6123 = !DILocation(line: 545, column: 31, scope: !6073, inlinedAt: !6045)
!6124 = !DILocation(line: 480, column: 33, scope: !6071, inlinedAt: !6072)
!6125 = !DILocation(line: 480, column: 23, scope: !6071, inlinedAt: !6072)
!6126 = !DILocation(line: 481, column: 29, scope: !6071, inlinedAt: !6072)
!6127 = !DILocation(line: 481, column: 35, scope: !6071, inlinedAt: !6072)
!6128 = !DILocation(line: 481, column: 42, scope: !6071, inlinedAt: !6072)
!6129 = !DILocation(line: 474, column: 23, scope: !6066, inlinedAt: !6070)
!6130 = !DILocation(line: 474, column: 29, scope: !6066, inlinedAt: !6070)
!6131 = !DILocation(line: 474, column: 36, scope: !6066, inlinedAt: !6070)
!6132 = !DILocation(line: 474, column: 9, scope: !6066, inlinedAt: !6070)
!6133 = !DILocation(line: 545, column: 4, scope: !6073, inlinedAt: !6045)
!6134 = !DILocation(line: 547, column: 25, scope: !6040, inlinedAt: !6045)
!6135 = !DILocation(line: 348, column: 7, scope: !6136, inlinedAt: !6064)
!6136 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 348, column: 6)
!6137 = !DILocation(line: 348, column: 6, scope: !6060, inlinedAt: !6064)
!6138 = !DILocation(line: 349, column: 3, scope: !6136, inlinedAt: !6064)
!6139 = !DILocation(line: 351, column: 6, scope: !6140, inlinedAt: !6064)
!6140 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 351, column: 6)
!6141 = !DILocation(line: 351, column: 11, scope: !6140, inlinedAt: !6064)
!6142 = !DILocation(line: 351, column: 6, scope: !6060, inlinedAt: !6064)
!6143 = !DILocation(line: 352, column: 3, scope: !6140, inlinedAt: !6064)
!6144 = !DILocation(line: 354, column: 32, scope: !6145, inlinedAt: !6064)
!6145 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 354, column: 6)
!6146 = !DILocation(line: 354, column: 37, scope: !6145, inlinedAt: !6064)
!6147 = !DILocation(line: 354, column: 42, scope: !6145, inlinedAt: !6064)
!6148 = !DILocation(line: 354, column: 45, scope: !6145, inlinedAt: !6064)
!6149 = !DILocation(line: 354, column: 50, scope: !6145, inlinedAt: !6064)
!6150 = !DILocation(line: 354, column: 6, scope: !6060, inlinedAt: !6064)
!6151 = !DILocation(line: 355, column: 3, scope: !6145, inlinedAt: !6064)
!6152 = !DILocation(line: 356, column: 32, scope: !6153, inlinedAt: !6064)
!6153 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 356, column: 6)
!6154 = !DILocation(line: 356, column: 37, scope: !6153, inlinedAt: !6064)
!6155 = !DILocation(line: 356, column: 43, scope: !6153, inlinedAt: !6064)
!6156 = !DILocation(line: 356, column: 46, scope: !6153, inlinedAt: !6064)
!6157 = !DILocation(line: 356, column: 51, scope: !6153, inlinedAt: !6064)
!6158 = !DILocation(line: 356, column: 6, scope: !6060, inlinedAt: !6064)
!6159 = !DILocation(line: 357, column: 3, scope: !6153, inlinedAt: !6064)
!6160 = !DILocation(line: 358, column: 6, scope: !6161, inlinedAt: !6064)
!6161 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 358, column: 6)
!6162 = !DILocation(line: 358, column: 11, scope: !6161, inlinedAt: !6064)
!6163 = !DILocation(line: 358, column: 6, scope: !6060, inlinedAt: !6064)
!6164 = !DILocation(line: 358, column: 26, scope: !6161, inlinedAt: !6064)
!6165 = !DILocation(line: 359, column: 6, scope: !6166, inlinedAt: !6064)
!6166 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 359, column: 6)
!6167 = !DILocation(line: 359, column: 11, scope: !6166, inlinedAt: !6064)
!6168 = !DILocation(line: 359, column: 6, scope: !6060, inlinedAt: !6064)
!6169 = !DILocation(line: 359, column: 26, scope: !6166, inlinedAt: !6064)
!6170 = !DILocation(line: 360, column: 6, scope: !6171, inlinedAt: !6064)
!6171 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 360, column: 6)
!6172 = !DILocation(line: 360, column: 11, scope: !6171, inlinedAt: !6064)
!6173 = !DILocation(line: 360, column: 6, scope: !6060, inlinedAt: !6064)
!6174 = !DILocation(line: 360, column: 26, scope: !6171, inlinedAt: !6064)
!6175 = !DILocation(line: 361, column: 6, scope: !6176, inlinedAt: !6064)
!6176 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 361, column: 6)
!6177 = !DILocation(line: 361, column: 11, scope: !6176, inlinedAt: !6064)
!6178 = !DILocation(line: 361, column: 6, scope: !6060, inlinedAt: !6064)
!6179 = !DILocation(line: 361, column: 26, scope: !6176, inlinedAt: !6064)
!6180 = !DILocation(line: 362, column: 6, scope: !6181, inlinedAt: !6064)
!6181 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 362, column: 6)
!6182 = !DILocation(line: 362, column: 11, scope: !6181, inlinedAt: !6064)
!6183 = !DILocation(line: 362, column: 6, scope: !6060, inlinedAt: !6064)
!6184 = !DILocation(line: 362, column: 26, scope: !6181, inlinedAt: !6064)
!6185 = !DILocation(line: 363, column: 6, scope: !6186, inlinedAt: !6064)
!6186 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 363, column: 6)
!6187 = !DILocation(line: 363, column: 11, scope: !6186, inlinedAt: !6064)
!6188 = !DILocation(line: 363, column: 6, scope: !6060, inlinedAt: !6064)
!6189 = !DILocation(line: 363, column: 26, scope: !6186, inlinedAt: !6064)
!6190 = !DILocation(line: 364, column: 6, scope: !6191, inlinedAt: !6064)
!6191 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 364, column: 6)
!6192 = !DILocation(line: 364, column: 11, scope: !6191, inlinedAt: !6064)
!6193 = !DILocation(line: 364, column: 6, scope: !6060, inlinedAt: !6064)
!6194 = !DILocation(line: 364, column: 26, scope: !6191, inlinedAt: !6064)
!6195 = !DILocation(line: 365, column: 6, scope: !6196, inlinedAt: !6064)
!6196 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 365, column: 6)
!6197 = !DILocation(line: 365, column: 11, scope: !6196, inlinedAt: !6064)
!6198 = !DILocation(line: 365, column: 6, scope: !6060, inlinedAt: !6064)
!6199 = !DILocation(line: 365, column: 26, scope: !6196, inlinedAt: !6064)
!6200 = !DILocation(line: 366, column: 6, scope: !6201, inlinedAt: !6064)
!6201 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 366, column: 6)
!6202 = !DILocation(line: 366, column: 11, scope: !6201, inlinedAt: !6064)
!6203 = !DILocation(line: 366, column: 6, scope: !6060, inlinedAt: !6064)
!6204 = !DILocation(line: 366, column: 26, scope: !6201, inlinedAt: !6064)
!6205 = !DILocation(line: 367, column: 6, scope: !6206, inlinedAt: !6064)
!6206 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 367, column: 6)
!6207 = !DILocation(line: 367, column: 11, scope: !6206, inlinedAt: !6064)
!6208 = !DILocation(line: 367, column: 6, scope: !6060, inlinedAt: !6064)
!6209 = !DILocation(line: 367, column: 26, scope: !6206, inlinedAt: !6064)
!6210 = !DILocation(line: 368, column: 6, scope: !6211, inlinedAt: !6064)
!6211 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 368, column: 6)
!6212 = !DILocation(line: 368, column: 11, scope: !6211, inlinedAt: !6064)
!6213 = !DILocation(line: 368, column: 6, scope: !6060, inlinedAt: !6064)
!6214 = !DILocation(line: 368, column: 26, scope: !6211, inlinedAt: !6064)
!6215 = !DILocation(line: 369, column: 6, scope: !6216, inlinedAt: !6064)
!6216 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 369, column: 6)
!6217 = !DILocation(line: 369, column: 11, scope: !6216, inlinedAt: !6064)
!6218 = !DILocation(line: 369, column: 6, scope: !6060, inlinedAt: !6064)
!6219 = !DILocation(line: 369, column: 26, scope: !6216, inlinedAt: !6064)
!6220 = !DILocation(line: 370, column: 6, scope: !6221, inlinedAt: !6064)
!6221 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 370, column: 6)
!6222 = !DILocation(line: 370, column: 11, scope: !6221, inlinedAt: !6064)
!6223 = !DILocation(line: 370, column: 6, scope: !6060, inlinedAt: !6064)
!6224 = !DILocation(line: 370, column: 26, scope: !6221, inlinedAt: !6064)
!6225 = !DILocation(line: 371, column: 6, scope: !6226, inlinedAt: !6064)
!6226 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 371, column: 6)
!6227 = !DILocation(line: 371, column: 11, scope: !6226, inlinedAt: !6064)
!6228 = !DILocation(line: 371, column: 6, scope: !6060, inlinedAt: !6064)
!6229 = !DILocation(line: 371, column: 26, scope: !6226, inlinedAt: !6064)
!6230 = !DILocation(line: 372, column: 6, scope: !6231, inlinedAt: !6064)
!6231 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 372, column: 6)
!6232 = !DILocation(line: 372, column: 11, scope: !6231, inlinedAt: !6064)
!6233 = !DILocation(line: 372, column: 6, scope: !6060, inlinedAt: !6064)
!6234 = !DILocation(line: 372, column: 26, scope: !6231, inlinedAt: !6064)
!6235 = !DILocation(line: 373, column: 6, scope: !6236, inlinedAt: !6064)
!6236 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 373, column: 6)
!6237 = !DILocation(line: 373, column: 11, scope: !6236, inlinedAt: !6064)
!6238 = !DILocation(line: 373, column: 6, scope: !6060, inlinedAt: !6064)
!6239 = !DILocation(line: 373, column: 26, scope: !6236, inlinedAt: !6064)
!6240 = !DILocation(line: 374, column: 6, scope: !6241, inlinedAt: !6064)
!6241 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 374, column: 6)
!6242 = !DILocation(line: 374, column: 11, scope: !6241, inlinedAt: !6064)
!6243 = !DILocation(line: 374, column: 6, scope: !6060, inlinedAt: !6064)
!6244 = !DILocation(line: 374, column: 26, scope: !6241, inlinedAt: !6064)
!6245 = !DILocation(line: 375, column: 6, scope: !6246, inlinedAt: !6064)
!6246 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 375, column: 6)
!6247 = !DILocation(line: 375, column: 11, scope: !6246, inlinedAt: !6064)
!6248 = !DILocation(line: 375, column: 6, scope: !6060, inlinedAt: !6064)
!6249 = !DILocation(line: 375, column: 27, scope: !6246, inlinedAt: !6064)
!6250 = !DILocation(line: 376, column: 6, scope: !6251, inlinedAt: !6064)
!6251 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 376, column: 6)
!6252 = !DILocation(line: 376, column: 11, scope: !6251, inlinedAt: !6064)
!6253 = !DILocation(line: 376, column: 6, scope: !6060, inlinedAt: !6064)
!6254 = !DILocation(line: 376, column: 32, scope: !6251, inlinedAt: !6064)
!6255 = !DILocation(line: 377, column: 6, scope: !6256, inlinedAt: !6064)
!6256 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 377, column: 6)
!6257 = !DILocation(line: 377, column: 11, scope: !6256, inlinedAt: !6064)
!6258 = !DILocation(line: 377, column: 6, scope: !6060, inlinedAt: !6064)
!6259 = !DILocation(line: 377, column: 32, scope: !6256, inlinedAt: !6064)
!6260 = !DILocation(line: 378, column: 6, scope: !6261, inlinedAt: !6064)
!6261 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 378, column: 6)
!6262 = !DILocation(line: 378, column: 11, scope: !6261, inlinedAt: !6064)
!6263 = !DILocation(line: 378, column: 6, scope: !6060, inlinedAt: !6064)
!6264 = !DILocation(line: 378, column: 32, scope: !6261, inlinedAt: !6064)
!6265 = !DILocation(line: 379, column: 6, scope: !6266, inlinedAt: !6064)
!6266 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 379, column: 6)
!6267 = !DILocation(line: 379, column: 11, scope: !6266, inlinedAt: !6064)
!6268 = !DILocation(line: 379, column: 6, scope: !6060, inlinedAt: !6064)
!6269 = !DILocation(line: 379, column: 33, scope: !6266, inlinedAt: !6064)
!6270 = !DILocation(line: 380, column: 6, scope: !6271, inlinedAt: !6064)
!6271 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 380, column: 6)
!6272 = !DILocation(line: 380, column: 11, scope: !6271, inlinedAt: !6064)
!6273 = !DILocation(line: 380, column: 6, scope: !6060, inlinedAt: !6064)
!6274 = !DILocation(line: 380, column: 33, scope: !6271, inlinedAt: !6064)
!6275 = !DILocation(line: 381, column: 6, scope: !6276, inlinedAt: !6064)
!6276 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 381, column: 6)
!6277 = !DILocation(line: 381, column: 11, scope: !6276, inlinedAt: !6064)
!6278 = !DILocation(line: 381, column: 6, scope: !6060, inlinedAt: !6064)
!6279 = !DILocation(line: 381, column: 33, scope: !6276, inlinedAt: !6064)
!6280 = !DILocation(line: 382, column: 2, scope: !6281, inlinedAt: !6064)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !144, line: 382, column: 2)
!6282 = distinct !DILexicalBlock(scope: !6060, file: !144, line: 382, column: 2)
!6283 = !{i32 -2142124802, i32 -2142124773, i32 -2142124727, i32 -2142124669, i32 -2142124615, i32 -2142124561, i32 -2142124506, i32 -2142124475}
!6284 = !DILocation(line: 382, column: 2, scope: !6285, inlinedAt: !6064)
!6285 = distinct !DILexicalBlock(scope: !6286, file: !144, line: 382, column: 2)
!6286 = distinct !DILexicalBlock(scope: !6282, file: !144, line: 382, column: 2)
!6287 = !{i32 -2142124032, i32 -2142124025, i32 -2142123971, i32 -2142123940, i32 -2142123910}
!6288 = !DILocation(line: 382, column: 2, scope: !6286, inlinedAt: !6064)
!6289 = !DILocation(line: 386, column: 1, scope: !6060, inlinedAt: !6064)
!6290 = !DILocation(line: 547, column: 9, scope: !6040, inlinedAt: !6045)
!6291 = !DILocation(line: 549, column: 8, scope: !6292, inlinedAt: !6045)
!6292 = distinct !DILexicalBlock(scope: !6040, file: !144, line: 549, column: 7)
!6293 = !DILocation(line: 549, column: 7, scope: !6040, inlinedAt: !6045)
!6294 = !DILocation(line: 550, column: 4, scope: !6292, inlinedAt: !6045)
!6295 = !DILocation(line: 553, column: 33, scope: !6040, inlinedAt: !6045)
!6296 = !DILocation(line: 325, column: 6, scope: !6297, inlinedAt: !6058)
!6297 = distinct !DILexicalBlock(scope: !6054, file: !144, line: 325, column: 6)
!6298 = !DILocation(line: 325, column: 6, scope: !6054, inlinedAt: !6058)
!6299 = !DILocation(line: 326, column: 3, scope: !6297, inlinedAt: !6058)
!6300 = !DILocation(line: 332, column: 9, scope: !6054, inlinedAt: !6058)
!6301 = !DILocation(line: 332, column: 15, scope: !6054, inlinedAt: !6058)
!6302 = !DILocation(line: 332, column: 2, scope: !6054, inlinedAt: !6058)
!6303 = !DILocation(line: 336, column: 1, scope: !6054, inlinedAt: !6058)
!6304 = !DILocation(line: 553, column: 5, scope: !6040, inlinedAt: !6045)
!6305 = !DILocation(line: 553, column: 41, scope: !6040, inlinedAt: !6045)
!6306 = !DILocation(line: 554, column: 5, scope: !6040, inlinedAt: !6045)
!6307 = !DILocation(line: 554, column: 12, scope: !6040, inlinedAt: !6045)
!6308 = !DILocation(line: 448, column: 31, scope: !6035, inlinedAt: !6039)
!6309 = !DILocation(line: 448, column: 34, scope: !6035, inlinedAt: !6039)
!6310 = !DILocation(line: 448, column: 14, scope: !6035, inlinedAt: !6039)
!6311 = !DILocation(line: 450, column: 22, scope: !6035, inlinedAt: !6039)
!6312 = !DILocation(line: 450, column: 25, scope: !6035, inlinedAt: !6039)
!6313 = !DILocation(line: 450, column: 30, scope: !6035, inlinedAt: !6039)
!6314 = !DILocation(line: 450, column: 36, scope: !6035, inlinedAt: !6039)
!6315 = !DILocation(line: 450, column: 8, scope: !6035, inlinedAt: !6039)
!6316 = !DILocation(line: 450, column: 6, scope: !6035, inlinedAt: !6039)
!6317 = !DILocation(line: 451, column: 9, scope: !6035, inlinedAt: !6039)
!6318 = !DILocation(line: 552, column: 3, scope: !6040, inlinedAt: !6045)
!6319 = !DILocation(line: 557, column: 19, scope: !6042, inlinedAt: !6045)
!6320 = !DILocation(line: 557, column: 25, scope: !6042, inlinedAt: !6045)
!6321 = !DILocation(line: 557, column: 9, scope: !6042, inlinedAt: !6045)
!6322 = !DILocation(line: 557, column: 2, scope: !6042, inlinedAt: !6045)
!6323 = !DILocation(line: 558, column: 1, scope: !6042, inlinedAt: !6045)
!6324 = !DILocation(line: 591, column: 3, scope: !6046)
!6325 = !DILocation(line: 592, column: 19, scope: !6031)
!6326 = !DILocation(line: 592, column: 26, scope: !6031)
!6327 = !DILocation(line: 592, column: 9, scope: !6031)
!6328 = !DILocation(line: 592, column: 2, scope: !6031)
!6329 = !DILocation(line: 593, column: 1, scope: !6031)
!6330 = distinct !DISubprogram(name: "might_fault", scope: !6331, file: !6331, line: 315, type: !3381, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6331 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!6332 = !DILocation(line: 315, column: 40, scope: !6330)
!6333 = distinct !DISubprogram(name: "IS_ERR", scope: !6334, file: !6334, line: 34, type: !6335, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6334 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!292, !2207}
!6337 = !DILocalVariable(name: "ptr", arg: 1, scope: !6333, file: !6334, line: 34, type: !2207)
!6338 = !DILocation(line: 34, column: 60, scope: !6333)
!6339 = !DILocation(line: 36, column: 9, scope: !6333)
!6340 = !DILocation(line: 36, column: 2, scope: !6333)
!6341 = distinct !DISubprogram(name: "PTR_ERR", scope: !6334, file: !6334, line: 29, type: !6342, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6342 = !DISubroutineType(types: !6343)
!6343 = !{!107, !2207}
!6344 = !DILocalVariable(name: "ptr", arg: 1, scope: !6341, file: !6334, line: 29, type: !2207)
!6345 = !DILocation(line: 29, column: 61, scope: !6341)
!6346 = !DILocation(line: 31, column: 16, scope: !6341)
!6347 = !DILocation(line: 31, column: 9, scope: !6341)
!6348 = !DILocation(line: 31, column: 2, scope: !6341)
!6349 = distinct !DISubprogram(name: "vt_do_kdskbmode", scope: !3, file: !3, line: 1806, type: !6350, scopeLine: 1807, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{!165, !165, !7}
!6352 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !6353)
!6353 = distinct !DILocation(line: 1834, column: 2, scope: !6349)
!6354 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !6353)
!6355 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !6356)
!6356 = distinct !DILocation(line: 1812, column: 2, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 1812, column: 2)
!6358 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 1812, column: 2)
!6359 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1812, column: 2)
!6360 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 1812, column: 2)
!6361 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 1812, column: 2)
!6362 = !DILocalVariable(name: "console", arg: 1, scope: !6349, file: !3, line: 1806, type: !165)
!6363 = !DILocation(line: 1806, column: 25, scope: !6349)
!6364 = !DILocalVariable(name: "arg", arg: 2, scope: !6349, file: !3, line: 1806, type: !7)
!6365 = !DILocation(line: 1806, column: 47, scope: !6349)
!6366 = !DILocalVariable(name: "kb", scope: !6349, file: !3, line: 1808, type: !412)
!6367 = !DILocation(line: 1808, column: 21, scope: !6349)
!6368 = !DILocation(line: 1808, column: 38, scope: !6349)
!6369 = !DILocation(line: 1808, column: 36, scope: !6349)
!6370 = !DILocalVariable(name: "ret", scope: !6349, file: !3, line: 1809, type: !165)
!6371 = !DILocation(line: 1809, column: 6, scope: !6349)
!6372 = !DILocalVariable(name: "flags", scope: !6349, file: !3, line: 1810, type: !158)
!6373 = !DILocation(line: 1810, column: 16, scope: !6349)
!6374 = !DILocation(line: 1812, column: 2, scope: !6349)
!6375 = !DILocation(line: 1812, column: 2, scope: !6361)
!6376 = !DILocalVariable(name: "__dummy", scope: !6377, file: !3, line: 1812, type: !158)
!6377 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1812, column: 2)
!6378 = !DILocation(line: 1812, column: 2, scope: !6377)
!6379 = !DILocalVariable(name: "__dummy2", scope: !6377, file: !3, line: 1812, type: !158)
!6380 = !DILocation(line: 1812, column: 2, scope: !6360)
!6381 = !DILocation(line: 1812, column: 2, scope: !6359)
!6382 = !DILocation(line: 1812, column: 2, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 1812, column: 2)
!6384 = !DILocalVariable(name: "__dummy", scope: !6385, file: !3, line: 1812, type: !158)
!6385 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 1812, column: 2)
!6386 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1812, column: 2)
!6387 = !DILocation(line: 1812, column: 2, scope: !6385)
!6388 = !DILocalVariable(name: "__dummy2", scope: !6385, file: !3, line: 1812, type: !158)
!6389 = !DILocation(line: 1812, column: 2, scope: !6386)
!6390 = !DILocation(line: 1812, column: 2, scope: !6358)
!6391 = !{i32 -2141814609}
!6392 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !6356)
!6393 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !6356)
!6394 = !DILocation(line: 1812, column: 2, scope: !6357)
!6395 = !DILocation(line: 1813, column: 9, scope: !6349)
!6396 = !DILocation(line: 1813, column: 2, scope: !6349)
!6397 = !DILocation(line: 1815, column: 3, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 1813, column: 14)
!6399 = !DILocation(line: 1815, column: 7, scope: !6398)
!6400 = !DILocation(line: 1815, column: 15, scope: !6398)
!6401 = !DILocation(line: 1816, column: 3, scope: !6398)
!6402 = !DILocation(line: 1818, column: 3, scope: !6398)
!6403 = !DILocation(line: 1818, column: 7, scope: !6398)
!6404 = !DILocation(line: 1818, column: 15, scope: !6398)
!6405 = !DILocation(line: 1819, column: 3, scope: !6398)
!6406 = !DILocation(line: 1821, column: 3, scope: !6398)
!6407 = !DILocation(line: 1821, column: 7, scope: !6398)
!6408 = !DILocation(line: 1821, column: 15, scope: !6398)
!6409 = !DILocation(line: 1822, column: 3, scope: !6398)
!6410 = !DILocation(line: 1823, column: 3, scope: !6398)
!6411 = !DILocation(line: 1825, column: 3, scope: !6398)
!6412 = !DILocation(line: 1825, column: 7, scope: !6398)
!6413 = !DILocation(line: 1825, column: 15, scope: !6398)
!6414 = !DILocation(line: 1826, column: 3, scope: !6398)
!6415 = !DILocation(line: 1827, column: 3, scope: !6398)
!6416 = !DILocation(line: 1829, column: 3, scope: !6398)
!6417 = !DILocation(line: 1829, column: 7, scope: !6398)
!6418 = !DILocation(line: 1829, column: 15, scope: !6398)
!6419 = !DILocation(line: 1830, column: 3, scope: !6398)
!6420 = !DILocation(line: 1832, column: 7, scope: !6398)
!6421 = !DILocation(line: 1833, column: 2, scope: !6398)
!6422 = !DILocation(line: 1834, column: 42, scope: !6349)
!6423 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !6353)
!6424 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !6353)
!6425 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !6353)
!6426 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !6353)
!6427 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !6353)
!6428 = !DILocation(line: 1835, column: 9, scope: !6349)
!6429 = !DILocation(line: 1835, column: 2, scope: !6349)
!6430 = distinct !DISubprogram(name: "vt_do_kdskbmeta", scope: !3, file: !3, line: 1846, type: !6350, scopeLine: 1847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6431 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !6432)
!6432 = distinct !DILocation(line: 1863, column: 2, scope: !6430)
!6433 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !6432)
!6434 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !6435)
!6435 = distinct !DILocation(line: 1852, column: 2, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 1852, column: 2)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 1852, column: 2)
!6438 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 1852, column: 2)
!6439 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 1852, column: 2)
!6440 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 1852, column: 2)
!6441 = !DILocalVariable(name: "console", arg: 1, scope: !6430, file: !3, line: 1846, type: !165)
!6442 = !DILocation(line: 1846, column: 25, scope: !6430)
!6443 = !DILocalVariable(name: "arg", arg: 2, scope: !6430, file: !3, line: 1846, type: !7)
!6444 = !DILocation(line: 1846, column: 47, scope: !6430)
!6445 = !DILocalVariable(name: "kb", scope: !6430, file: !3, line: 1848, type: !412)
!6446 = !DILocation(line: 1848, column: 21, scope: !6430)
!6447 = !DILocation(line: 1848, column: 38, scope: !6430)
!6448 = !DILocation(line: 1848, column: 36, scope: !6430)
!6449 = !DILocalVariable(name: "ret", scope: !6430, file: !3, line: 1849, type: !165)
!6450 = !DILocation(line: 1849, column: 6, scope: !6430)
!6451 = !DILocalVariable(name: "flags", scope: !6430, file: !3, line: 1850, type: !158)
!6452 = !DILocation(line: 1850, column: 16, scope: !6430)
!6453 = !DILocation(line: 1852, column: 2, scope: !6430)
!6454 = !DILocation(line: 1852, column: 2, scope: !6440)
!6455 = !DILocalVariable(name: "__dummy", scope: !6456, file: !3, line: 1852, type: !158)
!6456 = distinct !DILexicalBlock(scope: !6439, file: !3, line: 1852, column: 2)
!6457 = !DILocation(line: 1852, column: 2, scope: !6456)
!6458 = !DILocalVariable(name: "__dummy2", scope: !6456, file: !3, line: 1852, type: !158)
!6459 = !DILocation(line: 1852, column: 2, scope: !6439)
!6460 = !DILocation(line: 1852, column: 2, scope: !6438)
!6461 = !DILocation(line: 1852, column: 2, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 1852, column: 2)
!6463 = !DILocalVariable(name: "__dummy", scope: !6464, file: !3, line: 1852, type: !158)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 1852, column: 2)
!6465 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 1852, column: 2)
!6466 = !DILocation(line: 1852, column: 2, scope: !6464)
!6467 = !DILocalVariable(name: "__dummy2", scope: !6464, file: !3, line: 1852, type: !158)
!6468 = !DILocation(line: 1852, column: 2, scope: !6465)
!6469 = !DILocation(line: 1852, column: 2, scope: !6437)
!6470 = !{i32 -2141813524}
!6471 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !6435)
!6472 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !6435)
!6473 = !DILocation(line: 1852, column: 2, scope: !6436)
!6474 = !DILocation(line: 1853, column: 9, scope: !6430)
!6475 = !DILocation(line: 1853, column: 2, scope: !6430)
!6476 = !DILocation(line: 1855, column: 19, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 1853, column: 14)
!6478 = !DILocation(line: 1855, column: 3, scope: !6477)
!6479 = !DILocation(line: 1856, column: 3, scope: !6477)
!6480 = !DILocation(line: 1858, column: 19, scope: !6477)
!6481 = !DILocation(line: 1858, column: 3, scope: !6477)
!6482 = !DILocation(line: 1859, column: 3, scope: !6477)
!6483 = !DILocation(line: 1861, column: 7, scope: !6477)
!6484 = !DILocation(line: 1862, column: 2, scope: !6477)
!6485 = !DILocation(line: 1863, column: 42, scope: !6430)
!6486 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !6432)
!6487 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !6432)
!6488 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !6432)
!6489 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !6432)
!6490 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !6432)
!6491 = !DILocation(line: 1864, column: 9, scope: !6430)
!6492 = !DILocation(line: 1864, column: 2, scope: !6430)
!6493 = distinct !DISubprogram(name: "clr_vc_kbd_mode", scope: !313, file: !313, line: 103, type: !5179, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6494 = !DILocalVariable(name: "kbd", arg: 1, scope: !6493, file: !313, line: 103, type: !412)
!6495 = !DILocation(line: 103, column: 56, scope: !6493)
!6496 = !DILocalVariable(name: "flag", arg: 2, scope: !6493, file: !313, line: 103, type: !165)
!6497 = !DILocation(line: 103, column: 65, scope: !6493)
!6498 = !DILocation(line: 105, column: 27, scope: !6493)
!6499 = !DILocation(line: 105, column: 24, scope: !6493)
!6500 = !DILocation(line: 105, column: 20, scope: !6493)
!6501 = !DILocation(line: 105, column: 2, scope: !6493)
!6502 = !DILocation(line: 105, column: 7, scope: !6493)
!6503 = !DILocation(line: 105, column: 17, scope: !6493)
!6504 = !DILocation(line: 106, column: 1, scope: !6493)
!6505 = distinct !DISubprogram(name: "set_vc_kbd_mode", scope: !313, file: !313, line: 93, type: !5179, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6506 = !DILocalVariable(name: "kbd", arg: 1, scope: !6505, file: !313, line: 93, type: !412)
!6507 = !DILocation(line: 93, column: 56, scope: !6505)
!6508 = !DILocalVariable(name: "flag", arg: 2, scope: !6505, file: !313, line: 93, type: !165)
!6509 = !DILocation(line: 93, column: 65, scope: !6505)
!6510 = !DILocation(line: 95, column: 25, scope: !6505)
!6511 = !DILocation(line: 95, column: 22, scope: !6505)
!6512 = !DILocation(line: 95, column: 2, scope: !6505)
!6513 = !DILocation(line: 95, column: 7, scope: !6505)
!6514 = !DILocation(line: 95, column: 17, scope: !6505)
!6515 = !DILocation(line: 96, column: 1, scope: !6505)
!6516 = distinct !DISubprogram(name: "vt_do_kbkeycode_ioctl", scope: !3, file: !3, line: 1867, type: !6517, scopeLine: 1869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6517 = !DISubroutineType(types: !6518)
!6518 = !{!165, !165, !6519, !165}
!6519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6520, size: 64)
!6520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbkeycode", file: !4580, line: 140, size: 64, elements: !6521)
!6521 = !{!6522, !6523}
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "scancode", scope: !6520, file: !4580, line: 141, baseType: !7, size: 32)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !6520, file: !4580, line: 141, baseType: !7, size: 32, offset: 32)
!6524 = !DILocation(line: 138, column: 29, scope: !5466, inlinedAt: !6525)
!6525 = distinct !DILocation(line: 191, column: 6, scope: !6526, inlinedAt: !6528)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !5473, line: 191, column: 6)
!6527 = distinct !DISubprogram(name: "copy_from_user", scope: !5473, file: !5473, line: 189, type: !5475, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6528 = distinct !DILocation(line: 1873, column: 6, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 1873, column: 6)
!6530 = !DILocation(line: 138, column: 42, scope: !5466, inlinedAt: !6525)
!6531 = !DILocation(line: 138, column: 54, scope: !5466, inlinedAt: !6525)
!6532 = !DILocation(line: 140, column: 6, scope: !5466, inlinedAt: !6525)
!6533 = !DILocation(line: 150, column: 6, scope: !5488, inlinedAt: !6525)
!6534 = !DILocalVariable(name: "to", arg: 1, scope: !6527, file: !5473, line: 189, type: !153)
!6535 = !DILocation(line: 189, column: 22, scope: !6527, inlinedAt: !6528)
!6536 = !DILocalVariable(name: "from", arg: 2, scope: !6527, file: !5473, line: 189, type: !2207)
!6537 = !DILocation(line: 189, column: 45, scope: !6527, inlinedAt: !6528)
!6538 = !DILocalVariable(name: "n", arg: 3, scope: !6527, file: !5473, line: 189, type: !158)
!6539 = !DILocation(line: 189, column: 65, scope: !6527, inlinedAt: !6528)
!6540 = !DILocalVariable(name: "cmd", arg: 1, scope: !6516, file: !3, line: 1867, type: !165)
!6541 = !DILocation(line: 1867, column: 31, scope: !6516)
!6542 = !DILocalVariable(name: "user_kbkc", arg: 2, scope: !6516, file: !3, line: 1867, type: !6519)
!6543 = !DILocation(line: 1867, column: 61, scope: !6516)
!6544 = !DILocalVariable(name: "perm", arg: 3, scope: !6516, file: !3, line: 1868, type: !165)
!6545 = !DILocation(line: 1868, column: 13, scope: !6516)
!6546 = !DILocalVariable(name: "tmp", scope: !6516, file: !3, line: 1870, type: !6520)
!6547 = !DILocation(line: 1870, column: 19, scope: !6516)
!6548 = !DILocalVariable(name: "kc", scope: !6516, file: !3, line: 1871, type: !165)
!6549 = !DILocation(line: 1871, column: 6, scope: !6516)
!6550 = !DILocation(line: 1873, column: 21, scope: !6529)
!6551 = !DILocation(line: 1873, column: 27, scope: !6529)
!6552 = !DILocation(line: 191, column: 6, scope: !6526, inlinedAt: !6528)
!6553 = !DILocation(line: 141, column: 6, scope: !5658, inlinedAt: !6525)
!6554 = !DILocation(line: 0, scope: !5658, inlinedAt: !6525)
!6555 = !DILocation(line: 141, column: 6, scope: !5466, inlinedAt: !6525)
!6556 = !DILocation(line: 142, column: 29, scope: !5662, inlinedAt: !6525)
!6557 = !DILocation(line: 142, column: 8, scope: !5662, inlinedAt: !6525)
!6558 = !DILocation(line: 142, column: 7, scope: !5663, inlinedAt: !6525)
!6559 = !DILocation(line: 143, column: 18, scope: !5662, inlinedAt: !6525)
!6560 = !DILocation(line: 143, column: 22, scope: !5662, inlinedAt: !6525)
!6561 = !DILocation(line: 143, column: 4, scope: !5662, inlinedAt: !6525)
!6562 = !DILocation(line: 144, column: 12, scope: !5670, inlinedAt: !6525)
!6563 = !DILocation(line: 144, column: 12, scope: !5662, inlinedAt: !6525)
!6564 = !DILocation(line: 145, column: 4, scope: !5670, inlinedAt: !6525)
!6565 = !DILocation(line: 147, column: 4, scope: !5670, inlinedAt: !6525)
!6566 = !DILocation(line: 148, column: 3, scope: !5663, inlinedAt: !6525)
!6567 = !DILocation(line: 150, column: 6, scope: !5676, inlinedAt: !6525)
!6568 = !DILocation(line: 150, column: 6, scope: !5678, inlinedAt: !6525)
!6569 = !DILocation(line: 150, column: 6, scope: !5682, inlinedAt: !6525)
!6570 = !DILocation(line: 150, column: 6, scope: !5679, inlinedAt: !6525)
!6571 = !DILocation(line: 150, column: 6, scope: !5489, inlinedAt: !6525)
!6572 = !DILocation(line: 150, column: 6, scope: !5466, inlinedAt: !6525)
!6573 = !DILocation(line: 151, column: 3, scope: !5489, inlinedAt: !6525)
!6574 = !DILocation(line: 152, column: 20, scope: !5466, inlinedAt: !6525)
!6575 = !DILocation(line: 152, column: 26, scope: !5466, inlinedAt: !6525)
!6576 = !DILocation(line: 152, column: 33, scope: !5466, inlinedAt: !6525)
!6577 = !DILocation(line: 152, column: 2, scope: !5466, inlinedAt: !6525)
!6578 = !DILocation(line: 153, column: 2, scope: !5466, inlinedAt: !6525)
!6579 = !DILocation(line: 154, column: 1, scope: !5466, inlinedAt: !6525)
!6580 = !DILocation(line: 191, column: 6, scope: !6527, inlinedAt: !6528)
!6581 = !DILocation(line: 192, column: 23, scope: !6526, inlinedAt: !6528)
!6582 = !DILocation(line: 192, column: 27, scope: !6526, inlinedAt: !6528)
!6583 = !DILocation(line: 192, column: 33, scope: !6526, inlinedAt: !6528)
!6584 = !DILocation(line: 192, column: 7, scope: !6526, inlinedAt: !6528)
!6585 = !DILocation(line: 192, column: 5, scope: !6526, inlinedAt: !6528)
!6586 = !DILocation(line: 192, column: 3, scope: !6526, inlinedAt: !6528)
!6587 = !DILocation(line: 193, column: 9, scope: !6527, inlinedAt: !6528)
!6588 = !DILocation(line: 1873, column: 6, scope: !6529)
!6589 = !DILocation(line: 1873, column: 6, scope: !6516)
!6590 = !DILocation(line: 1874, column: 3, scope: !6529)
!6591 = !DILocation(line: 1875, column: 10, scope: !6516)
!6592 = !DILocation(line: 1875, column: 2, scope: !6516)
!6593 = !DILocation(line: 1877, column: 23, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 1875, column: 15)
!6595 = !DILocation(line: 1877, column: 8, scope: !6594)
!6596 = !DILocation(line: 1877, column: 6, scope: !6594)
!6597 = !DILocation(line: 1878, column: 7, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 1878, column: 7)
!6599 = !DILocation(line: 1878, column: 10, scope: !6598)
!6600 = !DILocation(line: 1878, column: 7, scope: !6594)
!6601 = !DILocation(line: 1879, column: 9, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6598, file: !3, line: 1879, column: 9)
!6603 = !DILocalVariable(name: "__ret_pu", scope: !6604, file: !3, line: 1879, type: !165)
!6604 = distinct !DILexicalBlock(scope: !6602, file: !3, line: 1879, column: 9)
!6605 = !DILocation(line: 1879, column: 9, scope: !6604)
!6606 = !DILocalVariable(name: "__ptr_pu", scope: !6604, file: !3, line: 1879, type: !153)
!6607 = !DILocalVariable(name: "__val_pu", scope: !6604, file: !3, line: 1879, type: !7)
!6608 = !{i32 -2141813057}
!6609 = !DILocation(line: 1879, column: 9, scope: !6598)
!6610 = !DILocation(line: 1879, column: 7, scope: !6598)
!6611 = !DILocation(line: 1879, column: 4, scope: !6598)
!6612 = !DILocation(line: 1880, column: 3, scope: !6594)
!6613 = !DILocation(line: 1882, column: 8, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 1882, column: 7)
!6615 = !DILocation(line: 1882, column: 7, scope: !6594)
!6616 = !DILocation(line: 1883, column: 4, scope: !6614)
!6617 = !DILocation(line: 1884, column: 23, scope: !6594)
!6618 = !DILocation(line: 1884, column: 37, scope: !6594)
!6619 = !DILocation(line: 1884, column: 8, scope: !6594)
!6620 = !DILocation(line: 1884, column: 6, scope: !6594)
!6621 = !DILocation(line: 1885, column: 3, scope: !6594)
!6622 = !DILocation(line: 1887, column: 9, scope: !6516)
!6623 = !DILocation(line: 1887, column: 2, scope: !6516)
!6624 = !DILocation(line: 1888, column: 1, scope: !6516)
!6625 = distinct !DISubprogram(name: "getkeycode", scope: !3, file: !3, line: 185, type: !6626, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6626 = !DISubroutineType(types: !6627)
!6627 = !{!165, !7}
!6628 = !DILocalVariable(name: "scancode", arg: 1, scope: !6625, file: !3, line: 185, type: !7)
!6629 = !DILocation(line: 185, column: 36, scope: !6625)
!6630 = !DILocalVariable(name: "d", scope: !6625, file: !3, line: 187, type: !6631)
!6631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "getset_keycode_data", file: !3, line: 171, size: 352, elements: !6632)
!6632 = !{!6633, !6634}
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "ke", scope: !6631, file: !3, line: 172, baseType: !472, size: 320)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !6631, file: !3, line: 173, baseType: !165, size: 32, offset: 320)
!6635 = !DILocation(line: 187, column: 29, scope: !6625)
!6636 = !DILocation(line: 196, column: 11, scope: !6625)
!6637 = !DILocation(line: 196, column: 14, scope: !6625)
!6638 = !DILocation(line: 196, column: 2, scope: !6625)
!6639 = !DILocation(line: 198, column: 46, scope: !6625)
!6640 = !DILocation(line: 198, column: 2, scope: !6625)
!6641 = !DILocation(line: 200, column: 11, scope: !6625)
!6642 = !DILocation(line: 200, column: 9, scope: !6625)
!6643 = !DILocation(line: 200, column: 22, scope: !6625)
!6644 = !DILocation(line: 200, column: 25, scope: !6625)
!6645 = !DILocation(line: 200, column: 2, scope: !6625)
!6646 = distinct !DISubprogram(name: "setkeycode", scope: !3, file: !3, line: 212, type: !6647, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6647 = !DISubroutineType(types: !6648)
!6648 = !{!165, !7, !7}
!6649 = !DILocalVariable(name: "scancode", arg: 1, scope: !6646, file: !3, line: 212, type: !7)
!6650 = !DILocation(line: 212, column: 36, scope: !6646)
!6651 = !DILocalVariable(name: "keycode", arg: 2, scope: !6646, file: !3, line: 212, type: !7)
!6652 = !DILocation(line: 212, column: 59, scope: !6646)
!6653 = !DILocalVariable(name: "d", scope: !6646, file: !3, line: 214, type: !6631)
!6654 = !DILocation(line: 214, column: 29, scope: !6646)
!6655 = !DILocation(line: 214, column: 33, scope: !6646)
!6656 = !DILocation(line: 215, column: 9, scope: !6646)
!6657 = !DILocation(line: 218, column: 15, scope: !6646)
!6658 = !DILocation(line: 223, column: 11, scope: !6646)
!6659 = !DILocation(line: 223, column: 14, scope: !6646)
!6660 = !DILocation(line: 223, column: 2, scope: !6646)
!6661 = !DILocation(line: 225, column: 46, scope: !6646)
!6662 = !DILocation(line: 225, column: 2, scope: !6646)
!6663 = !DILocation(line: 227, column: 11, scope: !6646)
!6664 = !DILocation(line: 227, column: 2, scope: !6646)
!6665 = distinct !DISubprogram(name: "vt_do_kdsk_ioctl", scope: !3, file: !3, line: 1894, type: !6666, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!6666 = !DISubroutineType(types: !6667)
!6667 = !{!165, !165, !6668, !165, !165}
!6668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6669, size: 64)
!6669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbentry", file: !4580, line: 100, size: 32, elements: !6670)
!6670 = !{!6671, !6672, !6673}
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "kb_table", scope: !6669, file: !4580, line: 101, baseType: !154, size: 8)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "kb_index", scope: !6669, file: !4580, line: 102, baseType: !154, size: 8, offset: 8)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "kb_value", scope: !6669, file: !4580, line: 103, baseType: !236, size: 16, offset: 16)
!6674 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !6675)
!6675 = distinct !DILocation(line: 1990, column: 3, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1908, column: 15)
!6677 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !6675)
!6678 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !6679)
!6679 = distinct !DILocation(line: 1983, column: 4, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !3, line: 1982, column: 67)
!6681 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1982, column: 7)
!6682 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !6679)
!6683 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !6684)
!6684 = distinct !DILocation(line: 1963, column: 5, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 1962, column: 36)
!6686 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 1961, column: 8)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 1958, column: 24)
!6688 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1958, column: 7)
!6689 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !6684)
!6690 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !6691)
!6691 = distinct !DILocation(line: 1956, column: 3, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 1956, column: 3)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 1956, column: 3)
!6694 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 1956, column: 3)
!6695 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 1956, column: 3)
!6696 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1956, column: 3)
!6697 = !DILocation(line: 445, column: 72, scope: !6035, inlinedAt: !6698)
!6698 = distinct !DILocation(line: 552, column: 10, scope: !6040, inlinedAt: !6699)
!6699 = distinct !DILocation(line: 1953, column: 13, scope: !6676)
!6700 = !DILocation(line: 446, column: 9, scope: !6035, inlinedAt: !6698)
!6701 = !DILocation(line: 446, column: 23, scope: !6035, inlinedAt: !6698)
!6702 = !DILocation(line: 448, column: 8, scope: !6035, inlinedAt: !6698)
!6703 = !DILocation(line: 318, column: 67, scope: !6054, inlinedAt: !6704)
!6704 = distinct !DILocation(line: 553, column: 20, scope: !6040, inlinedAt: !6699)
!6705 = !DILocation(line: 346, column: 58, scope: !6060, inlinedAt: !6706)
!6706 = distinct !DILocation(line: 547, column: 11, scope: !6040, inlinedAt: !6699)
!6707 = !DILocation(line: 472, column: 28, scope: !6066, inlinedAt: !6708)
!6708 = distinct !DILocation(line: 481, column: 9, scope: !6071, inlinedAt: !6709)
!6709 = distinct !DILocation(line: 545, column: 11, scope: !6073, inlinedAt: !6699)
!6710 = !DILocation(line: 472, column: 40, scope: !6066, inlinedAt: !6708)
!6711 = !DILocation(line: 472, column: 60, scope: !6066, inlinedAt: !6708)
!6712 = !DILocation(line: 478, column: 51, scope: !6071, inlinedAt: !6709)
!6713 = !DILocation(line: 478, column: 63, scope: !6071, inlinedAt: !6709)
!6714 = !DILocation(line: 480, column: 15, scope: !6071, inlinedAt: !6709)
!6715 = !DILocation(line: 538, column: 45, scope: !6042, inlinedAt: !6699)
!6716 = !DILocation(line: 538, column: 57, scope: !6042, inlinedAt: !6699)
!6717 = !DILocation(line: 542, column: 16, scope: !6040, inlinedAt: !6699)
!6718 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !6719)
!6719 = distinct !DILocation(line: 1935, column: 4, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 1924, column: 31)
!6721 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1924, column: 7)
!6722 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !6719)
!6723 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !6724)
!6724 = distinct !DILocation(line: 1925, column: 4, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 1925, column: 4)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 1925, column: 4)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 1925, column: 4)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 1925, column: 4)
!6729 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 1925, column: 4)
!6730 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !6731)
!6731 = distinct !DILocation(line: 1919, column: 3, scope: !6676)
!6732 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !6731)
!6733 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !6734)
!6734 = distinct !DILocation(line: 1911, column: 3, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 1911, column: 3)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 1911, column: 3)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 1911, column: 3)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1911, column: 3)
!6739 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1911, column: 3)
!6740 = !DILocation(line: 138, column: 29, scope: !5466, inlinedAt: !6741)
!6741 = distinct !DILocation(line: 191, column: 6, scope: !6526, inlinedAt: !6742)
!6742 = distinct !DILocation(line: 1902, column: 6, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1902, column: 6)
!6744 = !DILocation(line: 138, column: 42, scope: !5466, inlinedAt: !6741)
!6745 = !DILocation(line: 138, column: 54, scope: !5466, inlinedAt: !6741)
!6746 = !DILocation(line: 140, column: 6, scope: !5466, inlinedAt: !6741)
!6747 = !DILocation(line: 150, column: 6, scope: !5488, inlinedAt: !6741)
!6748 = !DILocation(line: 189, column: 22, scope: !6527, inlinedAt: !6742)
!6749 = !DILocation(line: 189, column: 45, scope: !6527, inlinedAt: !6742)
!6750 = !DILocation(line: 189, column: 65, scope: !6527, inlinedAt: !6742)
!6751 = !DILocalVariable(name: "cmd", arg: 1, scope: !6665, file: !3, line: 1894, type: !165)
!6752 = !DILocation(line: 1894, column: 26, scope: !6665)
!6753 = !DILocalVariable(name: "user_kbe", arg: 2, scope: !6665, file: !3, line: 1894, type: !6668)
!6754 = !DILocation(line: 1894, column: 54, scope: !6665)
!6755 = !DILocalVariable(name: "perm", arg: 3, scope: !6665, file: !3, line: 1894, type: !165)
!6756 = !DILocation(line: 1894, column: 68, scope: !6665)
!6757 = !DILocalVariable(name: "console", arg: 4, scope: !6665, file: !3, line: 1895, type: !165)
!6758 = !DILocation(line: 1895, column: 11, scope: !6665)
!6759 = !DILocalVariable(name: "kb", scope: !6665, file: !3, line: 1897, type: !412)
!6760 = !DILocation(line: 1897, column: 21, scope: !6665)
!6761 = !DILocation(line: 1897, column: 38, scope: !6665)
!6762 = !DILocation(line: 1897, column: 36, scope: !6665)
!6763 = !DILocalVariable(name: "tmp", scope: !6665, file: !3, line: 1898, type: !6669)
!6764 = !DILocation(line: 1898, column: 17, scope: !6665)
!6765 = !DILocalVariable(name: "key_map", scope: !6665, file: !3, line: 1899, type: !6766)
!6766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6767, size: 64)
!6767 = !DIDerivedType(tag: DW_TAG_typedef, name: "ushort", file: !152, line: 86, baseType: !236)
!6768 = !DILocation(line: 1899, column: 10, scope: !6665)
!6769 = !DILocalVariable(name: "new_map", scope: !6665, file: !3, line: 1899, type: !6766)
!6770 = !DILocation(line: 1899, column: 20, scope: !6665)
!6771 = !DILocalVariable(name: "val", scope: !6665, file: !3, line: 1899, type: !6767)
!6772 = !DILocation(line: 1899, column: 29, scope: !6665)
!6773 = !DILocalVariable(name: "ov", scope: !6665, file: !3, line: 1899, type: !6767)
!6774 = !DILocation(line: 1899, column: 34, scope: !6665)
!6775 = !DILocalVariable(name: "flags", scope: !6665, file: !3, line: 1900, type: !158)
!6776 = !DILocation(line: 1900, column: 16, scope: !6665)
!6777 = !DILocation(line: 1902, column: 21, scope: !6743)
!6778 = !DILocation(line: 1902, column: 27, scope: !6743)
!6779 = !DILocation(line: 191, column: 6, scope: !6526, inlinedAt: !6742)
!6780 = !DILocation(line: 141, column: 6, scope: !5658, inlinedAt: !6741)
!6781 = !DILocation(line: 0, scope: !5658, inlinedAt: !6741)
!6782 = !DILocation(line: 141, column: 6, scope: !5466, inlinedAt: !6741)
!6783 = !DILocation(line: 142, column: 29, scope: !5662, inlinedAt: !6741)
!6784 = !DILocation(line: 142, column: 8, scope: !5662, inlinedAt: !6741)
!6785 = !DILocation(line: 142, column: 7, scope: !5663, inlinedAt: !6741)
!6786 = !DILocation(line: 143, column: 18, scope: !5662, inlinedAt: !6741)
!6787 = !DILocation(line: 143, column: 22, scope: !5662, inlinedAt: !6741)
!6788 = !DILocation(line: 143, column: 4, scope: !5662, inlinedAt: !6741)
!6789 = !DILocation(line: 144, column: 12, scope: !5670, inlinedAt: !6741)
!6790 = !DILocation(line: 144, column: 12, scope: !5662, inlinedAt: !6741)
!6791 = !DILocation(line: 145, column: 4, scope: !5670, inlinedAt: !6741)
!6792 = !DILocation(line: 147, column: 4, scope: !5670, inlinedAt: !6741)
!6793 = !DILocation(line: 148, column: 3, scope: !5663, inlinedAt: !6741)
!6794 = !DILocation(line: 150, column: 6, scope: !5676, inlinedAt: !6741)
!6795 = !DILocation(line: 150, column: 6, scope: !5678, inlinedAt: !6741)
!6796 = !DILocation(line: 150, column: 6, scope: !5682, inlinedAt: !6741)
!6797 = !DILocation(line: 150, column: 6, scope: !5679, inlinedAt: !6741)
!6798 = !DILocation(line: 150, column: 6, scope: !5489, inlinedAt: !6741)
!6799 = !DILocation(line: 150, column: 6, scope: !5466, inlinedAt: !6741)
!6800 = !DILocation(line: 151, column: 3, scope: !5489, inlinedAt: !6741)
!6801 = !DILocation(line: 152, column: 20, scope: !5466, inlinedAt: !6741)
!6802 = !DILocation(line: 152, column: 26, scope: !5466, inlinedAt: !6741)
!6803 = !DILocation(line: 152, column: 33, scope: !5466, inlinedAt: !6741)
!6804 = !DILocation(line: 152, column: 2, scope: !5466, inlinedAt: !6741)
!6805 = !DILocation(line: 153, column: 2, scope: !5466, inlinedAt: !6741)
!6806 = !DILocation(line: 154, column: 1, scope: !5466, inlinedAt: !6741)
!6807 = !DILocation(line: 191, column: 6, scope: !6527, inlinedAt: !6742)
!6808 = !DILocation(line: 192, column: 23, scope: !6526, inlinedAt: !6742)
!6809 = !DILocation(line: 192, column: 27, scope: !6526, inlinedAt: !6742)
!6810 = !DILocation(line: 192, column: 33, scope: !6526, inlinedAt: !6742)
!6811 = !DILocation(line: 192, column: 7, scope: !6526, inlinedAt: !6742)
!6812 = !DILocation(line: 192, column: 5, scope: !6526, inlinedAt: !6742)
!6813 = !DILocation(line: 192, column: 3, scope: !6526, inlinedAt: !6742)
!6814 = !DILocation(line: 193, column: 9, scope: !6527, inlinedAt: !6742)
!6815 = !DILocation(line: 1902, column: 6, scope: !6743)
!6816 = !DILocation(line: 1902, column: 6, scope: !6665)
!6817 = !DILocation(line: 1903, column: 3, scope: !6743)
!6818 = !DILocation(line: 1905, column: 7, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1905, column: 6)
!6820 = !DILocation(line: 1905, column: 6, scope: !6665)
!6821 = !DILocation(line: 1906, column: 8, scope: !6819)
!6822 = !DILocation(line: 1906, column: 3, scope: !6819)
!6823 = !DILocation(line: 1908, column: 10, scope: !6665)
!6824 = !DILocation(line: 1908, column: 2, scope: !6665)
!6825 = !DILocation(line: 1911, column: 3, scope: !6676)
!6826 = !DILocation(line: 1911, column: 3, scope: !6739)
!6827 = !DILocalVariable(name: "__dummy", scope: !6828, file: !3, line: 1911, type: !158)
!6828 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 1911, column: 3)
!6829 = !DILocation(line: 1911, column: 3, scope: !6828)
!6830 = !DILocalVariable(name: "__dummy2", scope: !6828, file: !3, line: 1911, type: !158)
!6831 = !DILocation(line: 1911, column: 3, scope: !6738)
!6832 = !DILocation(line: 1911, column: 3, scope: !6737)
!6833 = !DILocation(line: 1911, column: 3, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 1911, column: 3)
!6835 = !DILocalVariable(name: "__dummy", scope: !6836, file: !3, line: 1911, type: !158)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 1911, column: 3)
!6837 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 1911, column: 3)
!6838 = !DILocation(line: 1911, column: 3, scope: !6836)
!6839 = !DILocalVariable(name: "__dummy2", scope: !6836, file: !3, line: 1911, type: !158)
!6840 = !DILocation(line: 1911, column: 3, scope: !6837)
!6841 = !DILocation(line: 1911, column: 3, scope: !6736)
!6842 = !{i32 -2141811611}
!6843 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !6734)
!6844 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !6734)
!6845 = !DILocation(line: 1911, column: 3, scope: !6735)
!6846 = !DILocation(line: 1912, column: 22, scope: !6676)
!6847 = !DILocation(line: 1912, column: 13, scope: !6676)
!6848 = !DILocation(line: 1912, column: 11, scope: !6676)
!6849 = !DILocation(line: 1913, column: 7, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1913, column: 7)
!6851 = !DILocation(line: 1913, column: 7, scope: !6676)
!6852 = !DILocation(line: 1914, column: 13, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 1913, column: 16)
!6854 = !DILocation(line: 1914, column: 11, scope: !6853)
!6855 = !DILocation(line: 1915, column: 11, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 1915, column: 11)
!6857 = !DILocation(line: 1915, column: 15, scope: !6856)
!6858 = !DILocation(line: 1915, column: 23, scope: !6856)
!6859 = !DILocation(line: 1915, column: 37, scope: !6856)
!6860 = !DILocation(line: 1915, column: 40, scope: !6856)
!6861 = !DILocation(line: 1915, column: 50, scope: !6856)
!6862 = !DILocation(line: 1915, column: 11, scope: !6853)
!6863 = !DILocation(line: 1916, column: 8, scope: !6856)
!6864 = !DILocation(line: 1916, column: 4, scope: !6856)
!6865 = !DILocation(line: 1917, column: 3, scope: !6853)
!6866 = !DILocation(line: 1918, column: 14, scope: !6850)
!6867 = !DILocation(line: 1918, column: 13, scope: !6850)
!6868 = !DILocation(line: 1918, column: 11, scope: !6850)
!6869 = !DILocation(line: 1919, column: 43, scope: !6676)
!6870 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !6731)
!6871 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !6731)
!6872 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !6731)
!6873 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !6731)
!6874 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !6731)
!6875 = !DILocation(line: 1920, column: 10, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1920, column: 10)
!6877 = !DILocalVariable(name: "__ret_pu", scope: !6878, file: !3, line: 1920, type: !165)
!6878 = distinct !DILexicalBlock(scope: !6876, file: !3, line: 1920, column: 10)
!6879 = !DILocation(line: 1920, column: 10, scope: !6878)
!6880 = !DILocalVariable(name: "__ptr_pu", scope: !6878, file: !3, line: 1920, type: !153)
!6881 = !DILocalVariable(name: "__val_pu", scope: !6878, file: !3, line: 1920, type: !236)
!6882 = !{i32 -2141810961}
!6883 = !DILocation(line: 1920, column: 10, scope: !6676)
!6884 = !DILocation(line: 1920, column: 3, scope: !6676)
!6885 = !DILocation(line: 1922, column: 8, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1922, column: 7)
!6887 = !DILocation(line: 1922, column: 7, scope: !6676)
!6888 = !DILocation(line: 1923, column: 4, scope: !6886)
!6889 = !DILocation(line: 1924, column: 8, scope: !6721)
!6890 = !DILocation(line: 1924, column: 10, scope: !6721)
!6891 = !DILocation(line: 1924, column: 13, scope: !6721)
!6892 = !DILocation(line: 1924, column: 15, scope: !6721)
!6893 = !DILocation(line: 1924, column: 7, scope: !6676)
!6894 = !DILocation(line: 1925, column: 4, scope: !6720)
!6895 = !DILocation(line: 1925, column: 4, scope: !6729)
!6896 = !DILocalVariable(name: "__dummy", scope: !6897, file: !3, line: 1925, type: !158)
!6897 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 1925, column: 4)
!6898 = !DILocation(line: 1925, column: 4, scope: !6897)
!6899 = !DILocalVariable(name: "__dummy2", scope: !6897, file: !3, line: 1925, type: !158)
!6900 = !DILocation(line: 1925, column: 4, scope: !6728)
!6901 = !DILocation(line: 1925, column: 4, scope: !6727)
!6902 = !DILocation(line: 1925, column: 4, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 1925, column: 4)
!6904 = !DILocalVariable(name: "__dummy", scope: !6905, file: !3, line: 1925, type: !158)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 1925, column: 4)
!6906 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1925, column: 4)
!6907 = !DILocation(line: 1925, column: 4, scope: !6905)
!6908 = !DILocalVariable(name: "__dummy2", scope: !6905, file: !3, line: 1925, type: !158)
!6909 = !DILocation(line: 1925, column: 4, scope: !6906)
!6910 = !DILocation(line: 1925, column: 4, scope: !6726)
!6911 = !{i32 -2141809459}
!6912 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !6724)
!6913 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !6724)
!6914 = !DILocation(line: 1925, column: 4, scope: !6725)
!6915 = !DILocation(line: 1927, column: 23, scope: !6720)
!6916 = !DILocation(line: 1927, column: 14, scope: !6720)
!6917 = !DILocation(line: 1927, column: 12, scope: !6720)
!6918 = !DILocation(line: 1928, column: 8, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 1928, column: 8)
!6920 = !DILocation(line: 1928, column: 10, scope: !6919)
!6921 = !DILocation(line: 1928, column: 13, scope: !6919)
!6922 = !DILocation(line: 1928, column: 8, scope: !6720)
!6923 = !DILocation(line: 1929, column: 17, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 1928, column: 22)
!6925 = !DILocation(line: 1929, column: 8, scope: !6924)
!6926 = !DILocation(line: 1929, column: 20, scope: !6924)
!6927 = !DILocation(line: 1930, column: 12, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 1930, column: 12)
!6929 = !DILocation(line: 1930, column: 23, scope: !6928)
!6930 = !DILocation(line: 1930, column: 12, scope: !6924)
!6931 = !DILocation(line: 1931, column: 12, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 1930, column: 42)
!6933 = !DILocation(line: 1931, column: 6, scope: !6932)
!6934 = !DILocation(line: 1932, column: 18, scope: !6932)
!6935 = !DILocation(line: 1933, column: 8, scope: !6932)
!6936 = !DILocation(line: 1934, column: 4, scope: !6924)
!6937 = !DILocation(line: 1935, column: 44, scope: !6720)
!6938 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !6719)
!6939 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !6719)
!6940 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !6719)
!6941 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !6719)
!6942 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !6719)
!6943 = !DILocation(line: 1936, column: 4, scope: !6720)
!6944 = !DILocation(line: 1939, column: 7, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1939, column: 7)
!6946 = !DILocation(line: 1939, column: 15, scope: !6945)
!6947 = !DILocation(line: 1939, column: 7, scope: !6676)
!6948 = !DILocation(line: 1940, column: 11, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 1940, column: 11)
!6950 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 1939, column: 27)
!6951 = !DILocation(line: 1940, column: 30, scope: !6949)
!6952 = !DILocation(line: 1940, column: 21, scope: !6949)
!6953 = !DILocation(line: 1940, column: 19, scope: !6949)
!6954 = !DILocation(line: 1940, column: 11, scope: !6950)
!6955 = !DILocation(line: 1941, column: 5, scope: !6949)
!6956 = !DILocation(line: 1942, column: 3, scope: !6950)
!6957 = !DILocation(line: 1943, column: 11, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 1943, column: 11)
!6959 = !DILocation(line: 1943, column: 15, scope: !6958)
!6960 = !DILocation(line: 1943, column: 23, scope: !6958)
!6961 = !DILocation(line: 1943, column: 11, scope: !6945)
!6962 = !DILocation(line: 1944, column: 5, scope: !6958)
!6963 = !DILocation(line: 1949, column: 8, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1949, column: 7)
!6965 = !DILocation(line: 1949, column: 7, scope: !6676)
!6966 = !DILocation(line: 1950, column: 4, scope: !6964)
!6967 = !DILocation(line: 540, column: 27, scope: !6041, inlinedAt: !6699)
!6968 = !DILocation(line: 540, column: 6, scope: !6041, inlinedAt: !6699)
!6969 = !DILocation(line: 540, column: 6, scope: !6042, inlinedAt: !6699)
!6970 = !DILocation(line: 544, column: 7, scope: !6073, inlinedAt: !6699)
!6971 = !DILocation(line: 544, column: 12, scope: !6073, inlinedAt: !6699)
!6972 = !DILocation(line: 544, column: 7, scope: !6040, inlinedAt: !6699)
!6973 = !DILocation(line: 545, column: 25, scope: !6073, inlinedAt: !6699)
!6974 = !DILocation(line: 545, column: 31, scope: !6073, inlinedAt: !6699)
!6975 = !DILocation(line: 480, column: 33, scope: !6071, inlinedAt: !6709)
!6976 = !DILocation(line: 480, column: 23, scope: !6071, inlinedAt: !6709)
!6977 = !DILocation(line: 481, column: 29, scope: !6071, inlinedAt: !6709)
!6978 = !DILocation(line: 481, column: 35, scope: !6071, inlinedAt: !6709)
!6979 = !DILocation(line: 481, column: 42, scope: !6071, inlinedAt: !6709)
!6980 = !DILocation(line: 474, column: 23, scope: !6066, inlinedAt: !6708)
!6981 = !DILocation(line: 474, column: 29, scope: !6066, inlinedAt: !6708)
!6982 = !DILocation(line: 474, column: 36, scope: !6066, inlinedAt: !6708)
!6983 = !DILocation(line: 474, column: 9, scope: !6066, inlinedAt: !6708)
!6984 = !DILocation(line: 545, column: 4, scope: !6073, inlinedAt: !6699)
!6985 = !DILocation(line: 547, column: 25, scope: !6040, inlinedAt: !6699)
!6986 = !DILocation(line: 348, column: 7, scope: !6136, inlinedAt: !6706)
!6987 = !DILocation(line: 348, column: 6, scope: !6060, inlinedAt: !6706)
!6988 = !DILocation(line: 349, column: 3, scope: !6136, inlinedAt: !6706)
!6989 = !DILocation(line: 351, column: 6, scope: !6140, inlinedAt: !6706)
!6990 = !DILocation(line: 351, column: 11, scope: !6140, inlinedAt: !6706)
!6991 = !DILocation(line: 351, column: 6, scope: !6060, inlinedAt: !6706)
!6992 = !DILocation(line: 352, column: 3, scope: !6140, inlinedAt: !6706)
!6993 = !DILocation(line: 354, column: 32, scope: !6145, inlinedAt: !6706)
!6994 = !DILocation(line: 354, column: 37, scope: !6145, inlinedAt: !6706)
!6995 = !DILocation(line: 354, column: 42, scope: !6145, inlinedAt: !6706)
!6996 = !DILocation(line: 354, column: 45, scope: !6145, inlinedAt: !6706)
!6997 = !DILocation(line: 354, column: 50, scope: !6145, inlinedAt: !6706)
!6998 = !DILocation(line: 354, column: 6, scope: !6060, inlinedAt: !6706)
!6999 = !DILocation(line: 355, column: 3, scope: !6145, inlinedAt: !6706)
!7000 = !DILocation(line: 356, column: 32, scope: !6153, inlinedAt: !6706)
!7001 = !DILocation(line: 356, column: 37, scope: !6153, inlinedAt: !6706)
!7002 = !DILocation(line: 356, column: 43, scope: !6153, inlinedAt: !6706)
!7003 = !DILocation(line: 356, column: 46, scope: !6153, inlinedAt: !6706)
!7004 = !DILocation(line: 356, column: 51, scope: !6153, inlinedAt: !6706)
!7005 = !DILocation(line: 356, column: 6, scope: !6060, inlinedAt: !6706)
!7006 = !DILocation(line: 357, column: 3, scope: !6153, inlinedAt: !6706)
!7007 = !DILocation(line: 358, column: 6, scope: !6161, inlinedAt: !6706)
!7008 = !DILocation(line: 358, column: 11, scope: !6161, inlinedAt: !6706)
!7009 = !DILocation(line: 358, column: 6, scope: !6060, inlinedAt: !6706)
!7010 = !DILocation(line: 358, column: 26, scope: !6161, inlinedAt: !6706)
!7011 = !DILocation(line: 359, column: 6, scope: !6166, inlinedAt: !6706)
!7012 = !DILocation(line: 359, column: 11, scope: !6166, inlinedAt: !6706)
!7013 = !DILocation(line: 359, column: 6, scope: !6060, inlinedAt: !6706)
!7014 = !DILocation(line: 359, column: 26, scope: !6166, inlinedAt: !6706)
!7015 = !DILocation(line: 360, column: 6, scope: !6171, inlinedAt: !6706)
!7016 = !DILocation(line: 360, column: 11, scope: !6171, inlinedAt: !6706)
!7017 = !DILocation(line: 360, column: 6, scope: !6060, inlinedAt: !6706)
!7018 = !DILocation(line: 360, column: 26, scope: !6171, inlinedAt: !6706)
!7019 = !DILocation(line: 361, column: 6, scope: !6176, inlinedAt: !6706)
!7020 = !DILocation(line: 361, column: 11, scope: !6176, inlinedAt: !6706)
!7021 = !DILocation(line: 361, column: 6, scope: !6060, inlinedAt: !6706)
!7022 = !DILocation(line: 361, column: 26, scope: !6176, inlinedAt: !6706)
!7023 = !DILocation(line: 362, column: 6, scope: !6181, inlinedAt: !6706)
!7024 = !DILocation(line: 362, column: 11, scope: !6181, inlinedAt: !6706)
!7025 = !DILocation(line: 362, column: 6, scope: !6060, inlinedAt: !6706)
!7026 = !DILocation(line: 362, column: 26, scope: !6181, inlinedAt: !6706)
!7027 = !DILocation(line: 363, column: 6, scope: !6186, inlinedAt: !6706)
!7028 = !DILocation(line: 363, column: 11, scope: !6186, inlinedAt: !6706)
!7029 = !DILocation(line: 363, column: 6, scope: !6060, inlinedAt: !6706)
!7030 = !DILocation(line: 363, column: 26, scope: !6186, inlinedAt: !6706)
!7031 = !DILocation(line: 364, column: 6, scope: !6191, inlinedAt: !6706)
!7032 = !DILocation(line: 364, column: 11, scope: !6191, inlinedAt: !6706)
!7033 = !DILocation(line: 364, column: 6, scope: !6060, inlinedAt: !6706)
!7034 = !DILocation(line: 364, column: 26, scope: !6191, inlinedAt: !6706)
!7035 = !DILocation(line: 365, column: 6, scope: !6196, inlinedAt: !6706)
!7036 = !DILocation(line: 365, column: 11, scope: !6196, inlinedAt: !6706)
!7037 = !DILocation(line: 365, column: 6, scope: !6060, inlinedAt: !6706)
!7038 = !DILocation(line: 365, column: 26, scope: !6196, inlinedAt: !6706)
!7039 = !DILocation(line: 366, column: 6, scope: !6201, inlinedAt: !6706)
!7040 = !DILocation(line: 366, column: 11, scope: !6201, inlinedAt: !6706)
!7041 = !DILocation(line: 366, column: 6, scope: !6060, inlinedAt: !6706)
!7042 = !DILocation(line: 366, column: 26, scope: !6201, inlinedAt: !6706)
!7043 = !DILocation(line: 367, column: 6, scope: !6206, inlinedAt: !6706)
!7044 = !DILocation(line: 367, column: 11, scope: !6206, inlinedAt: !6706)
!7045 = !DILocation(line: 367, column: 6, scope: !6060, inlinedAt: !6706)
!7046 = !DILocation(line: 367, column: 26, scope: !6206, inlinedAt: !6706)
!7047 = !DILocation(line: 368, column: 6, scope: !6211, inlinedAt: !6706)
!7048 = !DILocation(line: 368, column: 11, scope: !6211, inlinedAt: !6706)
!7049 = !DILocation(line: 368, column: 6, scope: !6060, inlinedAt: !6706)
!7050 = !DILocation(line: 368, column: 26, scope: !6211, inlinedAt: !6706)
!7051 = !DILocation(line: 369, column: 6, scope: !6216, inlinedAt: !6706)
!7052 = !DILocation(line: 369, column: 11, scope: !6216, inlinedAt: !6706)
!7053 = !DILocation(line: 369, column: 6, scope: !6060, inlinedAt: !6706)
!7054 = !DILocation(line: 369, column: 26, scope: !6216, inlinedAt: !6706)
!7055 = !DILocation(line: 370, column: 6, scope: !6221, inlinedAt: !6706)
!7056 = !DILocation(line: 370, column: 11, scope: !6221, inlinedAt: !6706)
!7057 = !DILocation(line: 370, column: 6, scope: !6060, inlinedAt: !6706)
!7058 = !DILocation(line: 370, column: 26, scope: !6221, inlinedAt: !6706)
!7059 = !DILocation(line: 371, column: 6, scope: !6226, inlinedAt: !6706)
!7060 = !DILocation(line: 371, column: 11, scope: !6226, inlinedAt: !6706)
!7061 = !DILocation(line: 371, column: 6, scope: !6060, inlinedAt: !6706)
!7062 = !DILocation(line: 371, column: 26, scope: !6226, inlinedAt: !6706)
!7063 = !DILocation(line: 372, column: 6, scope: !6231, inlinedAt: !6706)
!7064 = !DILocation(line: 372, column: 11, scope: !6231, inlinedAt: !6706)
!7065 = !DILocation(line: 372, column: 6, scope: !6060, inlinedAt: !6706)
!7066 = !DILocation(line: 372, column: 26, scope: !6231, inlinedAt: !6706)
!7067 = !DILocation(line: 373, column: 6, scope: !6236, inlinedAt: !6706)
!7068 = !DILocation(line: 373, column: 11, scope: !6236, inlinedAt: !6706)
!7069 = !DILocation(line: 373, column: 6, scope: !6060, inlinedAt: !6706)
!7070 = !DILocation(line: 373, column: 26, scope: !6236, inlinedAt: !6706)
!7071 = !DILocation(line: 374, column: 6, scope: !6241, inlinedAt: !6706)
!7072 = !DILocation(line: 374, column: 11, scope: !6241, inlinedAt: !6706)
!7073 = !DILocation(line: 374, column: 6, scope: !6060, inlinedAt: !6706)
!7074 = !DILocation(line: 374, column: 26, scope: !6241, inlinedAt: !6706)
!7075 = !DILocation(line: 375, column: 6, scope: !6246, inlinedAt: !6706)
!7076 = !DILocation(line: 375, column: 11, scope: !6246, inlinedAt: !6706)
!7077 = !DILocation(line: 375, column: 6, scope: !6060, inlinedAt: !6706)
!7078 = !DILocation(line: 375, column: 27, scope: !6246, inlinedAt: !6706)
!7079 = !DILocation(line: 376, column: 6, scope: !6251, inlinedAt: !6706)
!7080 = !DILocation(line: 376, column: 11, scope: !6251, inlinedAt: !6706)
!7081 = !DILocation(line: 376, column: 6, scope: !6060, inlinedAt: !6706)
!7082 = !DILocation(line: 376, column: 32, scope: !6251, inlinedAt: !6706)
!7083 = !DILocation(line: 377, column: 6, scope: !6256, inlinedAt: !6706)
!7084 = !DILocation(line: 377, column: 11, scope: !6256, inlinedAt: !6706)
!7085 = !DILocation(line: 377, column: 6, scope: !6060, inlinedAt: !6706)
!7086 = !DILocation(line: 377, column: 32, scope: !6256, inlinedAt: !6706)
!7087 = !DILocation(line: 378, column: 6, scope: !6261, inlinedAt: !6706)
!7088 = !DILocation(line: 378, column: 11, scope: !6261, inlinedAt: !6706)
!7089 = !DILocation(line: 378, column: 6, scope: !6060, inlinedAt: !6706)
!7090 = !DILocation(line: 378, column: 32, scope: !6261, inlinedAt: !6706)
!7091 = !DILocation(line: 379, column: 6, scope: !6266, inlinedAt: !6706)
!7092 = !DILocation(line: 379, column: 11, scope: !6266, inlinedAt: !6706)
!7093 = !DILocation(line: 379, column: 6, scope: !6060, inlinedAt: !6706)
!7094 = !DILocation(line: 379, column: 33, scope: !6266, inlinedAt: !6706)
!7095 = !DILocation(line: 380, column: 6, scope: !6271, inlinedAt: !6706)
!7096 = !DILocation(line: 380, column: 11, scope: !6271, inlinedAt: !6706)
!7097 = !DILocation(line: 380, column: 6, scope: !6060, inlinedAt: !6706)
!7098 = !DILocation(line: 380, column: 33, scope: !6271, inlinedAt: !6706)
!7099 = !DILocation(line: 381, column: 6, scope: !6276, inlinedAt: !6706)
!7100 = !DILocation(line: 381, column: 11, scope: !6276, inlinedAt: !6706)
!7101 = !DILocation(line: 381, column: 6, scope: !6060, inlinedAt: !6706)
!7102 = !DILocation(line: 381, column: 33, scope: !6276, inlinedAt: !6706)
!7103 = !DILocation(line: 382, column: 2, scope: !6281, inlinedAt: !6706)
!7104 = !DILocation(line: 382, column: 2, scope: !6285, inlinedAt: !6706)
!7105 = !DILocation(line: 382, column: 2, scope: !6286, inlinedAt: !6706)
!7106 = !DILocation(line: 386, column: 1, scope: !6060, inlinedAt: !6706)
!7107 = !DILocation(line: 547, column: 9, scope: !6040, inlinedAt: !6699)
!7108 = !DILocation(line: 549, column: 8, scope: !6292, inlinedAt: !6699)
!7109 = !DILocation(line: 549, column: 7, scope: !6040, inlinedAt: !6699)
!7110 = !DILocation(line: 550, column: 4, scope: !6292, inlinedAt: !6699)
!7111 = !DILocation(line: 553, column: 33, scope: !6040, inlinedAt: !6699)
!7112 = !DILocation(line: 325, column: 6, scope: !6297, inlinedAt: !6704)
!7113 = !DILocation(line: 325, column: 6, scope: !6054, inlinedAt: !6704)
!7114 = !DILocation(line: 326, column: 3, scope: !6297, inlinedAt: !6704)
!7115 = !DILocation(line: 332, column: 9, scope: !6054, inlinedAt: !6704)
!7116 = !DILocation(line: 332, column: 15, scope: !6054, inlinedAt: !6704)
!7117 = !DILocation(line: 332, column: 2, scope: !6054, inlinedAt: !6704)
!7118 = !DILocation(line: 336, column: 1, scope: !6054, inlinedAt: !6704)
!7119 = !DILocation(line: 553, column: 5, scope: !6040, inlinedAt: !6699)
!7120 = !DILocation(line: 553, column: 41, scope: !6040, inlinedAt: !6699)
!7121 = !DILocation(line: 554, column: 5, scope: !6040, inlinedAt: !6699)
!7122 = !DILocation(line: 554, column: 12, scope: !6040, inlinedAt: !6699)
!7123 = !DILocation(line: 448, column: 31, scope: !6035, inlinedAt: !6698)
!7124 = !DILocation(line: 448, column: 34, scope: !6035, inlinedAt: !6698)
!7125 = !DILocation(line: 448, column: 14, scope: !6035, inlinedAt: !6698)
!7126 = !DILocation(line: 450, column: 22, scope: !6035, inlinedAt: !6698)
!7127 = !DILocation(line: 450, column: 25, scope: !6035, inlinedAt: !6698)
!7128 = !DILocation(line: 450, column: 30, scope: !6035, inlinedAt: !6698)
!7129 = !DILocation(line: 450, column: 36, scope: !6035, inlinedAt: !6698)
!7130 = !DILocation(line: 450, column: 8, scope: !6035, inlinedAt: !6698)
!7131 = !DILocation(line: 450, column: 6, scope: !6035, inlinedAt: !6698)
!7132 = !DILocation(line: 451, column: 9, scope: !6035, inlinedAt: !6698)
!7133 = !DILocation(line: 552, column: 3, scope: !6040, inlinedAt: !6699)
!7134 = !DILocation(line: 557, column: 19, scope: !6042, inlinedAt: !6699)
!7135 = !DILocation(line: 557, column: 25, scope: !6042, inlinedAt: !6699)
!7136 = !DILocation(line: 557, column: 9, scope: !6042, inlinedAt: !6699)
!7137 = !DILocation(line: 557, column: 2, scope: !6042, inlinedAt: !6699)
!7138 = !DILocation(line: 558, column: 1, scope: !6042, inlinedAt: !6699)
!7139 = !DILocation(line: 1953, column: 13, scope: !6676)
!7140 = !DILocation(line: 1953, column: 11, scope: !6676)
!7141 = !DILocation(line: 1954, column: 8, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1954, column: 7)
!7143 = !DILocation(line: 1954, column: 7, scope: !6676)
!7144 = !DILocation(line: 1955, column: 4, scope: !7142)
!7145 = !DILocation(line: 1956, column: 3, scope: !6676)
!7146 = !DILocation(line: 1956, column: 3, scope: !6696)
!7147 = !DILocalVariable(name: "__dummy", scope: !7148, file: !3, line: 1956, type: !158)
!7148 = distinct !DILexicalBlock(scope: !6695, file: !3, line: 1956, column: 3)
!7149 = !DILocation(line: 1956, column: 3, scope: !7148)
!7150 = !DILocalVariable(name: "__dummy2", scope: !7148, file: !3, line: 1956, type: !158)
!7151 = !DILocation(line: 1956, column: 3, scope: !6695)
!7152 = !DILocation(line: 1956, column: 3, scope: !6694)
!7153 = !DILocation(line: 1956, column: 3, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 1956, column: 3)
!7155 = !DILocalVariable(name: "__dummy", scope: !7156, file: !3, line: 1956, type: !158)
!7156 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1956, column: 3)
!7157 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 1956, column: 3)
!7158 = !DILocation(line: 1956, column: 3, scope: !7156)
!7159 = !DILocalVariable(name: "__dummy2", scope: !7156, file: !3, line: 1956, type: !158)
!7160 = !DILocation(line: 1956, column: 3, scope: !7157)
!7161 = !DILocation(line: 1956, column: 3, scope: !6693)
!7162 = !{i32 -2141807949}
!7163 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !6691)
!7164 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !6691)
!7165 = !DILocation(line: 1956, column: 3, scope: !6692)
!7166 = !DILocation(line: 1957, column: 22, scope: !6676)
!7167 = !DILocation(line: 1957, column: 13, scope: !6676)
!7168 = !DILocation(line: 1957, column: 11, scope: !6676)
!7169 = !DILocation(line: 1958, column: 7, scope: !6688)
!7170 = !DILocation(line: 1958, column: 15, scope: !6688)
!7171 = !DILocation(line: 1958, column: 7, scope: !6676)
!7172 = !DILocalVariable(name: "j", scope: !6687, file: !3, line: 1959, type: !165)
!7173 = !DILocation(line: 1959, column: 8, scope: !6687)
!7174 = !DILocation(line: 1961, column: 8, scope: !6686)
!7175 = !DILocation(line: 1961, column: 21, scope: !6686)
!7176 = !DILocation(line: 1961, column: 47, scope: !6686)
!7177 = !DILocation(line: 1962, column: 9, scope: !6686)
!7178 = !DILocation(line: 1961, column: 8, scope: !6687)
!7179 = !DILocation(line: 1963, column: 45, scope: !6685)
!7180 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !6684)
!7181 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !6684)
!7182 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !6684)
!7183 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !6684)
!7184 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !6684)
!7185 = !DILocation(line: 1964, column: 11, scope: !6685)
!7186 = !DILocation(line: 1964, column: 5, scope: !6685)
!7187 = !DILocation(line: 1965, column: 5, scope: !6685)
!7188 = !DILocation(line: 1967, column: 18, scope: !6687)
!7189 = !DILocation(line: 1967, column: 13, scope: !6687)
!7190 = !DILocation(line: 1967, column: 4, scope: !6687)
!7191 = !DILocation(line: 1967, column: 16, scope: !6687)
!7192 = !DILocation(line: 1968, column: 14, scope: !6687)
!7193 = !DILocation(line: 1968, column: 12, scope: !6687)
!7194 = !DILocation(line: 1969, column: 4, scope: !6687)
!7195 = !DILocation(line: 1969, column: 15, scope: !6687)
!7196 = !DILocation(line: 1970, column: 11, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !6687, file: !3, line: 1970, column: 4)
!7198 = !DILocation(line: 1970, column: 9, scope: !7197)
!7199 = !DILocation(line: 1970, column: 16, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7197, file: !3, line: 1970, column: 4)
!7201 = !DILocation(line: 1970, column: 18, scope: !7200)
!7202 = !DILocation(line: 1970, column: 4, scope: !7197)
!7203 = !DILocation(line: 1971, column: 5, scope: !7200)
!7204 = !DILocation(line: 1971, column: 13, scope: !7200)
!7205 = !DILocation(line: 1971, column: 16, scope: !7200)
!7206 = !DILocation(line: 1970, column: 30, scope: !7200)
!7207 = !DILocation(line: 1970, column: 4, scope: !7200)
!7208 = distinct !{!7208, !7202, !7209}
!7209 = !DILocation(line: 1971, column: 18, scope: !7197)
!7210 = !DILocation(line: 1972, column: 16, scope: !6687)
!7211 = !DILocation(line: 1973, column: 3, scope: !6687)
!7212 = !DILocation(line: 1974, column: 10, scope: !6688)
!7213 = !DILocation(line: 1974, column: 4, scope: !6688)
!7214 = !DILocation(line: 1976, column: 8, scope: !6676)
!7215 = !DILocation(line: 1976, column: 6, scope: !6676)
!7216 = !DILocation(line: 1977, column: 7, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1977, column: 7)
!7218 = !DILocation(line: 1977, column: 12, scope: !7217)
!7219 = !DILocation(line: 1977, column: 9, scope: !7217)
!7220 = !DILocation(line: 1977, column: 7, scope: !6676)
!7221 = !DILocation(line: 1978, column: 4, scope: !7217)
!7222 = !DILocation(line: 1982, column: 9, scope: !6681)
!7223 = !DILocation(line: 1982, column: 12, scope: !6681)
!7224 = !DILocation(line: 1982, column: 22, scope: !6681)
!7225 = !DILocation(line: 1982, column: 26, scope: !6681)
!7226 = !DILocation(line: 1982, column: 28, scope: !6681)
!7227 = !DILocation(line: 1982, column: 39, scope: !6681)
!7228 = !DILocation(line: 1982, column: 43, scope: !6681)
!7229 = !DILocation(line: 1982, column: 7, scope: !6676)
!7230 = !DILocation(line: 1983, column: 44, scope: !6680)
!7231 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !6679)
!7232 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !6679)
!7233 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !6679)
!7234 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !6679)
!7235 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !6679)
!7236 = !DILocation(line: 1984, column: 4, scope: !6680)
!7237 = !DILocation(line: 1986, column: 16, scope: !6676)
!7238 = !DILocation(line: 1986, column: 3, scope: !6676)
!7239 = !DILocation(line: 1986, column: 11, scope: !6676)
!7240 = !DILocation(line: 1986, column: 14, scope: !6676)
!7241 = !DILocation(line: 1987, column: 8, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 1987, column: 7)
!7243 = !DILocation(line: 1987, column: 10, scope: !7242)
!7244 = !DILocation(line: 1987, column: 14, scope: !7242)
!7245 = !DILocation(line: 1987, column: 23, scope: !7242)
!7246 = !DILocation(line: 1987, column: 35, scope: !7242)
!7247 = !DILocation(line: 1987, column: 38, scope: !7242)
!7248 = !DILocation(line: 1987, column: 46, scope: !7242)
!7249 = !DILocation(line: 1987, column: 7, scope: !6676)
!7250 = !DILocation(line: 1988, column: 4, scope: !7242)
!7251 = !DILocation(line: 1987, column: 57, scope: !7242)
!7252 = !DILabel(scope: !6676, name: "out", file: !3, line: 1989)
!7253 = !DILocation(line: 1989, column: 1, scope: !6676)
!7254 = !DILocation(line: 1990, column: 43, scope: !6676)
!7255 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !6675)
!7256 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !6675)
!7257 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !6675)
!7258 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !6675)
!7259 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !6675)
!7260 = !DILocation(line: 1991, column: 3, scope: !6676)
!7261 = !DILocation(line: 1993, column: 2, scope: !6665)
!7262 = !DILocation(line: 1994, column: 1, scope: !6665)
!7263 = distinct !DISubprogram(name: "vt_do_kdgkb_ioctl", scope: !3, file: !3, line: 2000, type: !7264, scopeLine: 2001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!7264 = !DISubroutineType(types: !7265)
!7265 = !{!165, !165, !7266, !165}
!7266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7267, size: 64)
!7267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbsentry", file: !4580, line: 113, size: 4104, elements: !7268)
!7268 = !{!7269, !7270}
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "kb_func", scope: !7267, file: !4580, line: 114, baseType: !154, size: 8)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "kb_string", scope: !7267, file: !4580, line: 115, baseType: !7271, size: 4096, offset: 8)
!7271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 4096, elements: !7272)
!7272 = !{!7273}
!7273 = !DISubrange(count: 512)
!7274 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !7275)
!7275 = distinct !DILocation(line: 2117, column: 3, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 2028, column: 15)
!7277 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !7275)
!7278 = !DILocation(line: 445, column: 72, scope: !6035, inlinedAt: !7279)
!7279 = distinct !DILocation(line: 552, column: 10, scope: !6040, inlinedAt: !7280)
!7280 = distinct !DILocation(line: 2084, column: 15, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 2081, column: 25)
!7282 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2081, column: 11)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 2077, column: 10)
!7284 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2066, column: 7)
!7285 = !DILocation(line: 446, column: 9, scope: !6035, inlinedAt: !7279)
!7286 = !DILocation(line: 446, column: 23, scope: !6035, inlinedAt: !7279)
!7287 = !DILocation(line: 448, column: 8, scope: !6035, inlinedAt: !7279)
!7288 = !DILocation(line: 318, column: 67, scope: !6054, inlinedAt: !7289)
!7289 = distinct !DILocation(line: 553, column: 20, scope: !6040, inlinedAt: !7280)
!7290 = !DILocation(line: 346, column: 58, scope: !6060, inlinedAt: !7291)
!7291 = distinct !DILocation(line: 547, column: 11, scope: !6040, inlinedAt: !7280)
!7292 = !DILocation(line: 472, column: 28, scope: !6066, inlinedAt: !7293)
!7293 = distinct !DILocation(line: 481, column: 9, scope: !6071, inlinedAt: !7294)
!7294 = distinct !DILocation(line: 545, column: 11, scope: !6073, inlinedAt: !7280)
!7295 = !DILocation(line: 472, column: 40, scope: !6066, inlinedAt: !7293)
!7296 = !DILocation(line: 472, column: 60, scope: !6066, inlinedAt: !7293)
!7297 = !DILocation(line: 478, column: 51, scope: !6071, inlinedAt: !7294)
!7298 = !DILocation(line: 478, column: 63, scope: !6071, inlinedAt: !7294)
!7299 = !DILocation(line: 480, column: 15, scope: !6071, inlinedAt: !7294)
!7300 = !DILocation(line: 538, column: 45, scope: !6042, inlinedAt: !7280)
!7301 = !DILocation(line: 538, column: 57, scope: !6042, inlinedAt: !7280)
!7302 = !DILocation(line: 542, column: 16, scope: !6040, inlinedAt: !7280)
!7303 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !7304)
!7304 = distinct !DILocation(line: 2082, column: 9, scope: !7281)
!7305 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !7304)
!7306 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !7307)
!7307 = distinct !DILocation(line: 2052, column: 3, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !3, line: 2052, column: 3)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 2052, column: 3)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 2052, column: 3)
!7311 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 2052, column: 3)
!7312 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2052, column: 3)
!7313 = !DILocation(line: 138, column: 29, scope: !5466, inlinedAt: !7314)
!7314 = distinct !DILocation(line: 199, column: 6, scope: !5472, inlinedAt: !7315)
!7315 = distinct !DILocation(line: 2037, column: 9, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2029, column: 18)
!7317 = !DILocation(line: 138, column: 42, scope: !5466, inlinedAt: !7314)
!7318 = !DILocation(line: 138, column: 54, scope: !5466, inlinedAt: !7314)
!7319 = !DILocation(line: 140, column: 6, scope: !5466, inlinedAt: !7314)
!7320 = !DILocation(line: 150, column: 6, scope: !5488, inlinedAt: !7314)
!7321 = !DILocation(line: 197, column: 27, scope: !5474, inlinedAt: !7315)
!7322 = !DILocation(line: 197, column: 43, scope: !5474, inlinedAt: !7315)
!7323 = !DILocation(line: 197, column: 63, scope: !5474, inlinedAt: !7315)
!7324 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !7325)
!7325 = distinct !DILocation(line: 2035, column: 3, scope: !7316)
!7326 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !7325)
!7327 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !7328)
!7328 = distinct !DILocation(line: 2033, column: 3, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 2033, column: 3)
!7330 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 2033, column: 3)
!7331 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 2033, column: 3)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 2033, column: 3)
!7333 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 2033, column: 3)
!7334 = !DILocation(line: 138, column: 29, scope: !5466, inlinedAt: !7335)
!7335 = distinct !DILocation(line: 191, column: 6, scope: !6526, inlinedAt: !7336)
!7336 = distinct !DILocation(line: 2021, column: 6, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 2021, column: 6)
!7338 = !DILocation(line: 138, column: 42, scope: !5466, inlinedAt: !7335)
!7339 = !DILocation(line: 138, column: 54, scope: !5466, inlinedAt: !7335)
!7340 = !DILocation(line: 140, column: 6, scope: !5466, inlinedAt: !7335)
!7341 = !DILocation(line: 150, column: 6, scope: !5488, inlinedAt: !7335)
!7342 = !DILocation(line: 189, column: 22, scope: !6527, inlinedAt: !7336)
!7343 = !DILocation(line: 189, column: 45, scope: !6527, inlinedAt: !7336)
!7344 = !DILocation(line: 189, column: 65, scope: !6527, inlinedAt: !7336)
!7345 = !DILocation(line: 445, column: 72, scope: !6035, inlinedAt: !7346)
!7346 = distinct !DILocation(line: 552, column: 10, scope: !6040, inlinedAt: !7347)
!7347 = distinct !DILocation(line: 2014, column: 8, scope: !7263)
!7348 = !DILocation(line: 446, column: 9, scope: !6035, inlinedAt: !7346)
!7349 = !DILocation(line: 446, column: 23, scope: !6035, inlinedAt: !7346)
!7350 = !DILocation(line: 448, column: 8, scope: !6035, inlinedAt: !7346)
!7351 = !DILocation(line: 318, column: 67, scope: !6054, inlinedAt: !7352)
!7352 = distinct !DILocation(line: 553, column: 20, scope: !6040, inlinedAt: !7347)
!7353 = !DILocation(line: 346, column: 58, scope: !6060, inlinedAt: !7354)
!7354 = distinct !DILocation(line: 547, column: 11, scope: !6040, inlinedAt: !7347)
!7355 = !DILocation(line: 472, column: 28, scope: !6066, inlinedAt: !7356)
!7356 = distinct !DILocation(line: 481, column: 9, scope: !6071, inlinedAt: !7357)
!7357 = distinct !DILocation(line: 545, column: 11, scope: !6073, inlinedAt: !7347)
!7358 = !DILocation(line: 472, column: 40, scope: !6066, inlinedAt: !7356)
!7359 = !DILocation(line: 472, column: 60, scope: !6066, inlinedAt: !7356)
!7360 = !DILocation(line: 478, column: 51, scope: !6071, inlinedAt: !7357)
!7361 = !DILocation(line: 478, column: 63, scope: !6071, inlinedAt: !7357)
!7362 = !DILocation(line: 480, column: 15, scope: !6071, inlinedAt: !7357)
!7363 = !DILocation(line: 538, column: 45, scope: !6042, inlinedAt: !7347)
!7364 = !DILocation(line: 538, column: 57, scope: !6042, inlinedAt: !7347)
!7365 = !DILocation(line: 542, column: 16, scope: !6040, inlinedAt: !7347)
!7366 = !DILocalVariable(name: "cmd", arg: 1, scope: !7263, file: !3, line: 2000, type: !165)
!7367 = !DILocation(line: 2000, column: 27, scope: !7263)
!7368 = !DILocalVariable(name: "user_kdgkb", arg: 2, scope: !7263, file: !3, line: 2000, type: !7266)
!7369 = !DILocation(line: 2000, column: 56, scope: !7263)
!7370 = !DILocalVariable(name: "perm", arg: 3, scope: !7263, file: !3, line: 2000, type: !165)
!7371 = !DILocation(line: 2000, column: 72, scope: !7263)
!7372 = !DILocalVariable(name: "kbs", scope: !7263, file: !3, line: 2002, type: !7266)
!7373 = !DILocation(line: 2002, column: 19, scope: !7263)
!7374 = !DILocalVariable(name: "q", scope: !7263, file: !3, line: 2003, type: !7375)
!7375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7376, size: 64)
!7376 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_char", file: !152, line: 79, baseType: !154)
!7377 = !DILocation(line: 2003, column: 10, scope: !7263)
!7378 = !DILocalVariable(name: "sz", scope: !7263, file: !3, line: 2004, type: !165)
!7379 = !DILocation(line: 2004, column: 6, scope: !7263)
!7380 = !DILocalVariable(name: "fnw_sz", scope: !7263, file: !3, line: 2004, type: !165)
!7381 = !DILocation(line: 2004, column: 10, scope: !7263)
!7382 = !DILocalVariable(name: "delta", scope: !7263, file: !3, line: 2005, type: !165)
!7383 = !DILocation(line: 2005, column: 6, scope: !7263)
!7384 = !DILocalVariable(name: "first_free", scope: !7263, file: !3, line: 2006, type: !155)
!7385 = !DILocation(line: 2006, column: 8, scope: !7263)
!7386 = !DILocalVariable(name: "fj", scope: !7263, file: !3, line: 2006, type: !155)
!7387 = !DILocation(line: 2006, column: 21, scope: !7263)
!7388 = !DILocalVariable(name: "fnw", scope: !7263, file: !3, line: 2006, type: !155)
!7389 = !DILocation(line: 2006, column: 26, scope: !7263)
!7390 = !DILocalVariable(name: "i", scope: !7263, file: !3, line: 2007, type: !165)
!7391 = !DILocation(line: 2007, column: 6, scope: !7263)
!7392 = !DILocalVariable(name: "j", scope: !7263, file: !3, line: 2007, type: !165)
!7393 = !DILocation(line: 2007, column: 9, scope: !7263)
!7394 = !DILocalVariable(name: "k", scope: !7263, file: !3, line: 2007, type: !165)
!7395 = !DILocation(line: 2007, column: 12, scope: !7263)
!7396 = !DILocalVariable(name: "ret", scope: !7263, file: !3, line: 2008, type: !165)
!7397 = !DILocation(line: 2008, column: 6, scope: !7263)
!7398 = !DILocalVariable(name: "flags", scope: !7263, file: !3, line: 2009, type: !158)
!7399 = !DILocation(line: 2009, column: 16, scope: !7263)
!7400 = !DILocation(line: 2011, column: 7, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 2011, column: 6)
!7402 = !DILocation(line: 2011, column: 6, scope: !7263)
!7403 = !DILocation(line: 2012, column: 8, scope: !7401)
!7404 = !DILocation(line: 2012, column: 3, scope: !7401)
!7405 = !DILocation(line: 540, column: 27, scope: !6041, inlinedAt: !7347)
!7406 = !DILocation(line: 540, column: 6, scope: !6041, inlinedAt: !7347)
!7407 = !DILocation(line: 540, column: 6, scope: !6042, inlinedAt: !7347)
!7408 = !DILocation(line: 544, column: 7, scope: !6073, inlinedAt: !7347)
!7409 = !DILocation(line: 544, column: 12, scope: !6073, inlinedAt: !7347)
!7410 = !DILocation(line: 544, column: 7, scope: !6040, inlinedAt: !7347)
!7411 = !DILocation(line: 545, column: 25, scope: !6073, inlinedAt: !7347)
!7412 = !DILocation(line: 545, column: 31, scope: !6073, inlinedAt: !7347)
!7413 = !DILocation(line: 480, column: 33, scope: !6071, inlinedAt: !7357)
!7414 = !DILocation(line: 480, column: 23, scope: !6071, inlinedAt: !7357)
!7415 = !DILocation(line: 481, column: 29, scope: !6071, inlinedAt: !7357)
!7416 = !DILocation(line: 481, column: 35, scope: !6071, inlinedAt: !7357)
!7417 = !DILocation(line: 481, column: 42, scope: !6071, inlinedAt: !7357)
!7418 = !DILocation(line: 474, column: 23, scope: !6066, inlinedAt: !7356)
!7419 = !DILocation(line: 474, column: 29, scope: !6066, inlinedAt: !7356)
!7420 = !DILocation(line: 474, column: 36, scope: !6066, inlinedAt: !7356)
!7421 = !DILocation(line: 474, column: 9, scope: !6066, inlinedAt: !7356)
!7422 = !DILocation(line: 545, column: 4, scope: !6073, inlinedAt: !7347)
!7423 = !DILocation(line: 547, column: 25, scope: !6040, inlinedAt: !7347)
!7424 = !DILocation(line: 348, column: 7, scope: !6136, inlinedAt: !7354)
!7425 = !DILocation(line: 348, column: 6, scope: !6060, inlinedAt: !7354)
!7426 = !DILocation(line: 349, column: 3, scope: !6136, inlinedAt: !7354)
!7427 = !DILocation(line: 351, column: 6, scope: !6140, inlinedAt: !7354)
!7428 = !DILocation(line: 351, column: 11, scope: !6140, inlinedAt: !7354)
!7429 = !DILocation(line: 351, column: 6, scope: !6060, inlinedAt: !7354)
!7430 = !DILocation(line: 352, column: 3, scope: !6140, inlinedAt: !7354)
!7431 = !DILocation(line: 354, column: 32, scope: !6145, inlinedAt: !7354)
!7432 = !DILocation(line: 354, column: 37, scope: !6145, inlinedAt: !7354)
!7433 = !DILocation(line: 354, column: 42, scope: !6145, inlinedAt: !7354)
!7434 = !DILocation(line: 354, column: 45, scope: !6145, inlinedAt: !7354)
!7435 = !DILocation(line: 354, column: 50, scope: !6145, inlinedAt: !7354)
!7436 = !DILocation(line: 354, column: 6, scope: !6060, inlinedAt: !7354)
!7437 = !DILocation(line: 355, column: 3, scope: !6145, inlinedAt: !7354)
!7438 = !DILocation(line: 356, column: 32, scope: !6153, inlinedAt: !7354)
!7439 = !DILocation(line: 356, column: 37, scope: !6153, inlinedAt: !7354)
!7440 = !DILocation(line: 356, column: 43, scope: !6153, inlinedAt: !7354)
!7441 = !DILocation(line: 356, column: 46, scope: !6153, inlinedAt: !7354)
!7442 = !DILocation(line: 356, column: 51, scope: !6153, inlinedAt: !7354)
!7443 = !DILocation(line: 356, column: 6, scope: !6060, inlinedAt: !7354)
!7444 = !DILocation(line: 357, column: 3, scope: !6153, inlinedAt: !7354)
!7445 = !DILocation(line: 358, column: 6, scope: !6161, inlinedAt: !7354)
!7446 = !DILocation(line: 358, column: 11, scope: !6161, inlinedAt: !7354)
!7447 = !DILocation(line: 358, column: 6, scope: !6060, inlinedAt: !7354)
!7448 = !DILocation(line: 358, column: 26, scope: !6161, inlinedAt: !7354)
!7449 = !DILocation(line: 359, column: 6, scope: !6166, inlinedAt: !7354)
!7450 = !DILocation(line: 359, column: 11, scope: !6166, inlinedAt: !7354)
!7451 = !DILocation(line: 359, column: 6, scope: !6060, inlinedAt: !7354)
!7452 = !DILocation(line: 359, column: 26, scope: !6166, inlinedAt: !7354)
!7453 = !DILocation(line: 360, column: 6, scope: !6171, inlinedAt: !7354)
!7454 = !DILocation(line: 360, column: 11, scope: !6171, inlinedAt: !7354)
!7455 = !DILocation(line: 360, column: 6, scope: !6060, inlinedAt: !7354)
!7456 = !DILocation(line: 360, column: 26, scope: !6171, inlinedAt: !7354)
!7457 = !DILocation(line: 361, column: 6, scope: !6176, inlinedAt: !7354)
!7458 = !DILocation(line: 361, column: 11, scope: !6176, inlinedAt: !7354)
!7459 = !DILocation(line: 361, column: 6, scope: !6060, inlinedAt: !7354)
!7460 = !DILocation(line: 361, column: 26, scope: !6176, inlinedAt: !7354)
!7461 = !DILocation(line: 362, column: 6, scope: !6181, inlinedAt: !7354)
!7462 = !DILocation(line: 362, column: 11, scope: !6181, inlinedAt: !7354)
!7463 = !DILocation(line: 362, column: 6, scope: !6060, inlinedAt: !7354)
!7464 = !DILocation(line: 362, column: 26, scope: !6181, inlinedAt: !7354)
!7465 = !DILocation(line: 363, column: 6, scope: !6186, inlinedAt: !7354)
!7466 = !DILocation(line: 363, column: 11, scope: !6186, inlinedAt: !7354)
!7467 = !DILocation(line: 363, column: 6, scope: !6060, inlinedAt: !7354)
!7468 = !DILocation(line: 363, column: 26, scope: !6186, inlinedAt: !7354)
!7469 = !DILocation(line: 364, column: 6, scope: !6191, inlinedAt: !7354)
!7470 = !DILocation(line: 364, column: 11, scope: !6191, inlinedAt: !7354)
!7471 = !DILocation(line: 364, column: 6, scope: !6060, inlinedAt: !7354)
!7472 = !DILocation(line: 364, column: 26, scope: !6191, inlinedAt: !7354)
!7473 = !DILocation(line: 365, column: 6, scope: !6196, inlinedAt: !7354)
!7474 = !DILocation(line: 365, column: 11, scope: !6196, inlinedAt: !7354)
!7475 = !DILocation(line: 365, column: 6, scope: !6060, inlinedAt: !7354)
!7476 = !DILocation(line: 365, column: 26, scope: !6196, inlinedAt: !7354)
!7477 = !DILocation(line: 366, column: 6, scope: !6201, inlinedAt: !7354)
!7478 = !DILocation(line: 366, column: 11, scope: !6201, inlinedAt: !7354)
!7479 = !DILocation(line: 366, column: 6, scope: !6060, inlinedAt: !7354)
!7480 = !DILocation(line: 366, column: 26, scope: !6201, inlinedAt: !7354)
!7481 = !DILocation(line: 367, column: 6, scope: !6206, inlinedAt: !7354)
!7482 = !DILocation(line: 367, column: 11, scope: !6206, inlinedAt: !7354)
!7483 = !DILocation(line: 367, column: 6, scope: !6060, inlinedAt: !7354)
!7484 = !DILocation(line: 367, column: 26, scope: !6206, inlinedAt: !7354)
!7485 = !DILocation(line: 368, column: 6, scope: !6211, inlinedAt: !7354)
!7486 = !DILocation(line: 368, column: 11, scope: !6211, inlinedAt: !7354)
!7487 = !DILocation(line: 368, column: 6, scope: !6060, inlinedAt: !7354)
!7488 = !DILocation(line: 368, column: 26, scope: !6211, inlinedAt: !7354)
!7489 = !DILocation(line: 369, column: 6, scope: !6216, inlinedAt: !7354)
!7490 = !DILocation(line: 369, column: 11, scope: !6216, inlinedAt: !7354)
!7491 = !DILocation(line: 369, column: 6, scope: !6060, inlinedAt: !7354)
!7492 = !DILocation(line: 369, column: 26, scope: !6216, inlinedAt: !7354)
!7493 = !DILocation(line: 370, column: 6, scope: !6221, inlinedAt: !7354)
!7494 = !DILocation(line: 370, column: 11, scope: !6221, inlinedAt: !7354)
!7495 = !DILocation(line: 370, column: 6, scope: !6060, inlinedAt: !7354)
!7496 = !DILocation(line: 370, column: 26, scope: !6221, inlinedAt: !7354)
!7497 = !DILocation(line: 371, column: 6, scope: !6226, inlinedAt: !7354)
!7498 = !DILocation(line: 371, column: 11, scope: !6226, inlinedAt: !7354)
!7499 = !DILocation(line: 371, column: 6, scope: !6060, inlinedAt: !7354)
!7500 = !DILocation(line: 371, column: 26, scope: !6226, inlinedAt: !7354)
!7501 = !DILocation(line: 372, column: 6, scope: !6231, inlinedAt: !7354)
!7502 = !DILocation(line: 372, column: 11, scope: !6231, inlinedAt: !7354)
!7503 = !DILocation(line: 372, column: 6, scope: !6060, inlinedAt: !7354)
!7504 = !DILocation(line: 372, column: 26, scope: !6231, inlinedAt: !7354)
!7505 = !DILocation(line: 373, column: 6, scope: !6236, inlinedAt: !7354)
!7506 = !DILocation(line: 373, column: 11, scope: !6236, inlinedAt: !7354)
!7507 = !DILocation(line: 373, column: 6, scope: !6060, inlinedAt: !7354)
!7508 = !DILocation(line: 373, column: 26, scope: !6236, inlinedAt: !7354)
!7509 = !DILocation(line: 374, column: 6, scope: !6241, inlinedAt: !7354)
!7510 = !DILocation(line: 374, column: 11, scope: !6241, inlinedAt: !7354)
!7511 = !DILocation(line: 374, column: 6, scope: !6060, inlinedAt: !7354)
!7512 = !DILocation(line: 374, column: 26, scope: !6241, inlinedAt: !7354)
!7513 = !DILocation(line: 375, column: 6, scope: !6246, inlinedAt: !7354)
!7514 = !DILocation(line: 375, column: 11, scope: !6246, inlinedAt: !7354)
!7515 = !DILocation(line: 375, column: 6, scope: !6060, inlinedAt: !7354)
!7516 = !DILocation(line: 375, column: 27, scope: !6246, inlinedAt: !7354)
!7517 = !DILocation(line: 376, column: 6, scope: !6251, inlinedAt: !7354)
!7518 = !DILocation(line: 376, column: 11, scope: !6251, inlinedAt: !7354)
!7519 = !DILocation(line: 376, column: 6, scope: !6060, inlinedAt: !7354)
!7520 = !DILocation(line: 376, column: 32, scope: !6251, inlinedAt: !7354)
!7521 = !DILocation(line: 377, column: 6, scope: !6256, inlinedAt: !7354)
!7522 = !DILocation(line: 377, column: 11, scope: !6256, inlinedAt: !7354)
!7523 = !DILocation(line: 377, column: 6, scope: !6060, inlinedAt: !7354)
!7524 = !DILocation(line: 377, column: 32, scope: !6256, inlinedAt: !7354)
!7525 = !DILocation(line: 378, column: 6, scope: !6261, inlinedAt: !7354)
!7526 = !DILocation(line: 378, column: 11, scope: !6261, inlinedAt: !7354)
!7527 = !DILocation(line: 378, column: 6, scope: !6060, inlinedAt: !7354)
!7528 = !DILocation(line: 378, column: 32, scope: !6261, inlinedAt: !7354)
!7529 = !DILocation(line: 379, column: 6, scope: !6266, inlinedAt: !7354)
!7530 = !DILocation(line: 379, column: 11, scope: !6266, inlinedAt: !7354)
!7531 = !DILocation(line: 379, column: 6, scope: !6060, inlinedAt: !7354)
!7532 = !DILocation(line: 379, column: 33, scope: !6266, inlinedAt: !7354)
!7533 = !DILocation(line: 380, column: 6, scope: !6271, inlinedAt: !7354)
!7534 = !DILocation(line: 380, column: 11, scope: !6271, inlinedAt: !7354)
!7535 = !DILocation(line: 380, column: 6, scope: !6060, inlinedAt: !7354)
!7536 = !DILocation(line: 380, column: 33, scope: !6271, inlinedAt: !7354)
!7537 = !DILocation(line: 381, column: 6, scope: !6276, inlinedAt: !7354)
!7538 = !DILocation(line: 381, column: 11, scope: !6276, inlinedAt: !7354)
!7539 = !DILocation(line: 381, column: 6, scope: !6060, inlinedAt: !7354)
!7540 = !DILocation(line: 381, column: 33, scope: !6276, inlinedAt: !7354)
!7541 = !DILocation(line: 382, column: 2, scope: !6281, inlinedAt: !7354)
!7542 = !DILocation(line: 382, column: 2, scope: !6285, inlinedAt: !7354)
!7543 = !DILocation(line: 382, column: 2, scope: !6286, inlinedAt: !7354)
!7544 = !DILocation(line: 386, column: 1, scope: !6060, inlinedAt: !7354)
!7545 = !DILocation(line: 547, column: 9, scope: !6040, inlinedAt: !7347)
!7546 = !DILocation(line: 549, column: 8, scope: !6292, inlinedAt: !7347)
!7547 = !DILocation(line: 549, column: 7, scope: !6040, inlinedAt: !7347)
!7548 = !DILocation(line: 550, column: 4, scope: !6292, inlinedAt: !7347)
!7549 = !DILocation(line: 553, column: 33, scope: !6040, inlinedAt: !7347)
!7550 = !DILocation(line: 325, column: 6, scope: !6297, inlinedAt: !7352)
!7551 = !DILocation(line: 325, column: 6, scope: !6054, inlinedAt: !7352)
!7552 = !DILocation(line: 326, column: 3, scope: !6297, inlinedAt: !7352)
!7553 = !DILocation(line: 332, column: 9, scope: !6054, inlinedAt: !7352)
!7554 = !DILocation(line: 332, column: 15, scope: !6054, inlinedAt: !7352)
!7555 = !DILocation(line: 332, column: 2, scope: !6054, inlinedAt: !7352)
!7556 = !DILocation(line: 336, column: 1, scope: !6054, inlinedAt: !7352)
!7557 = !DILocation(line: 553, column: 5, scope: !6040, inlinedAt: !7347)
!7558 = !DILocation(line: 553, column: 41, scope: !6040, inlinedAt: !7347)
!7559 = !DILocation(line: 554, column: 5, scope: !6040, inlinedAt: !7347)
!7560 = !DILocation(line: 554, column: 12, scope: !6040, inlinedAt: !7347)
!7561 = !DILocation(line: 448, column: 31, scope: !6035, inlinedAt: !7346)
!7562 = !DILocation(line: 448, column: 34, scope: !6035, inlinedAt: !7346)
!7563 = !DILocation(line: 448, column: 14, scope: !6035, inlinedAt: !7346)
!7564 = !DILocation(line: 450, column: 22, scope: !6035, inlinedAt: !7346)
!7565 = !DILocation(line: 450, column: 25, scope: !6035, inlinedAt: !7346)
!7566 = !DILocation(line: 450, column: 30, scope: !6035, inlinedAt: !7346)
!7567 = !DILocation(line: 450, column: 36, scope: !6035, inlinedAt: !7346)
!7568 = !DILocation(line: 450, column: 8, scope: !6035, inlinedAt: !7346)
!7569 = !DILocation(line: 450, column: 6, scope: !6035, inlinedAt: !7346)
!7570 = !DILocation(line: 451, column: 9, scope: !6035, inlinedAt: !7346)
!7571 = !DILocation(line: 552, column: 3, scope: !6040, inlinedAt: !7347)
!7572 = !DILocation(line: 557, column: 19, scope: !6042, inlinedAt: !7347)
!7573 = !DILocation(line: 557, column: 25, scope: !6042, inlinedAt: !7347)
!7574 = !DILocation(line: 557, column: 9, scope: !6042, inlinedAt: !7347)
!7575 = !DILocation(line: 557, column: 2, scope: !6042, inlinedAt: !7347)
!7576 = !DILocation(line: 558, column: 1, scope: !6042, inlinedAt: !7347)
!7577 = !DILocation(line: 2014, column: 8, scope: !7263)
!7578 = !DILocation(line: 2014, column: 6, scope: !7263)
!7579 = !DILocation(line: 2015, column: 7, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 2015, column: 6)
!7581 = !DILocation(line: 2015, column: 6, scope: !7263)
!7582 = !DILocation(line: 2016, column: 7, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 2015, column: 12)
!7584 = !DILocation(line: 2017, column: 3, scope: !7583)
!7585 = !DILocation(line: 2021, column: 21, scope: !7337)
!7586 = !DILocation(line: 2021, column: 26, scope: !7337)
!7587 = !DILocation(line: 191, column: 6, scope: !6526, inlinedAt: !7336)
!7588 = !DILocation(line: 141, column: 6, scope: !5658, inlinedAt: !7335)
!7589 = !DILocation(line: 0, scope: !5658, inlinedAt: !7335)
!7590 = !DILocation(line: 141, column: 6, scope: !5466, inlinedAt: !7335)
!7591 = !DILocation(line: 142, column: 29, scope: !5662, inlinedAt: !7335)
!7592 = !DILocation(line: 142, column: 8, scope: !5662, inlinedAt: !7335)
!7593 = !DILocation(line: 142, column: 7, scope: !5663, inlinedAt: !7335)
!7594 = !DILocation(line: 143, column: 18, scope: !5662, inlinedAt: !7335)
!7595 = !DILocation(line: 143, column: 22, scope: !5662, inlinedAt: !7335)
!7596 = !DILocation(line: 143, column: 4, scope: !5662, inlinedAt: !7335)
!7597 = !DILocation(line: 144, column: 12, scope: !5670, inlinedAt: !7335)
!7598 = !DILocation(line: 144, column: 12, scope: !5662, inlinedAt: !7335)
!7599 = !DILocation(line: 145, column: 4, scope: !5670, inlinedAt: !7335)
!7600 = !DILocation(line: 147, column: 4, scope: !5670, inlinedAt: !7335)
!7601 = !DILocation(line: 148, column: 3, scope: !5663, inlinedAt: !7335)
!7602 = !DILocation(line: 150, column: 6, scope: !5676, inlinedAt: !7335)
!7603 = !DILocation(line: 150, column: 6, scope: !5678, inlinedAt: !7335)
!7604 = !DILocation(line: 150, column: 6, scope: !5682, inlinedAt: !7335)
!7605 = !DILocation(line: 150, column: 6, scope: !5679, inlinedAt: !7335)
!7606 = !DILocation(line: 150, column: 6, scope: !5489, inlinedAt: !7335)
!7607 = !DILocation(line: 150, column: 6, scope: !5466, inlinedAt: !7335)
!7608 = !DILocation(line: 151, column: 3, scope: !5489, inlinedAt: !7335)
!7609 = !DILocation(line: 152, column: 20, scope: !5466, inlinedAt: !7335)
!7610 = !DILocation(line: 152, column: 26, scope: !5466, inlinedAt: !7335)
!7611 = !DILocation(line: 152, column: 33, scope: !5466, inlinedAt: !7335)
!7612 = !DILocation(line: 152, column: 2, scope: !5466, inlinedAt: !7335)
!7613 = !DILocation(line: 153, column: 2, scope: !5466, inlinedAt: !7335)
!7614 = !DILocation(line: 154, column: 1, scope: !5466, inlinedAt: !7335)
!7615 = !DILocation(line: 191, column: 6, scope: !6527, inlinedAt: !7336)
!7616 = !DILocation(line: 192, column: 23, scope: !6526, inlinedAt: !7336)
!7617 = !DILocation(line: 192, column: 27, scope: !6526, inlinedAt: !7336)
!7618 = !DILocation(line: 192, column: 33, scope: !6526, inlinedAt: !7336)
!7619 = !DILocation(line: 192, column: 7, scope: !6526, inlinedAt: !7336)
!7620 = !DILocation(line: 192, column: 5, scope: !6526, inlinedAt: !7336)
!7621 = !DILocation(line: 192, column: 3, scope: !6526, inlinedAt: !7336)
!7622 = !DILocation(line: 193, column: 9, scope: !6527, inlinedAt: !7336)
!7623 = !DILocation(line: 2021, column: 6, scope: !7337)
!7624 = !DILocation(line: 2021, column: 6, scope: !7263)
!7625 = !DILocation(line: 2022, column: 7, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 2021, column: 64)
!7627 = !DILocation(line: 2023, column: 3, scope: !7626)
!7628 = !DILocation(line: 2025, column: 2, scope: !7263)
!7629 = !DILocation(line: 2025, column: 7, scope: !7263)
!7630 = !DILocation(line: 2025, column: 43, scope: !7263)
!7631 = !DILocalVariable(name: "_i", scope: !7632, file: !3, line: 2026, type: !154)
!7632 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 2026, column: 6)
!7633 = !DILocation(line: 2026, column: 6, scope: !7632)
!7634 = !DILocalVariable(name: "_s", scope: !7632, file: !3, line: 2026, type: !165)
!7635 = !DILocalVariable(name: "_mask", scope: !7632, file: !3, line: 2026, type: !158)
!7636 = !DILocation(line: 2026, column: 6, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 2026, column: 6)
!7638 = !DILocation(line: 2026, column: 6, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 2026, column: 6)
!7640 = !DILocation(line: 2026, column: 6, scope: !7263)
!7641 = !DILocation(line: 2026, column: 4, scope: !7263)
!7642 = !DILocation(line: 2028, column: 10, scope: !7263)
!7643 = !DILocation(line: 2028, column: 2, scope: !7263)
!7644 = !DILocalVariable(name: "len", scope: !7316, file: !3, line: 2031, type: !820)
!7645 = !DILocation(line: 2031, column: 11, scope: !7316)
!7646 = !DILocation(line: 2033, column: 3, scope: !7316)
!7647 = !DILocation(line: 2033, column: 3, scope: !7333)
!7648 = !DILocalVariable(name: "__dummy", scope: !7649, file: !3, line: 2033, type: !158)
!7649 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 2033, column: 3)
!7650 = !DILocation(line: 2033, column: 3, scope: !7649)
!7651 = !DILocalVariable(name: "__dummy2", scope: !7649, file: !3, line: 2033, type: !158)
!7652 = !DILocation(line: 2033, column: 3, scope: !7332)
!7653 = !DILocation(line: 2033, column: 3, scope: !7331)
!7654 = !DILocation(line: 2033, column: 3, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 2033, column: 3)
!7656 = !DILocalVariable(name: "__dummy", scope: !7657, file: !3, line: 2033, type: !158)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 2033, column: 3)
!7658 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 2033, column: 3)
!7659 = !DILocation(line: 2033, column: 3, scope: !7657)
!7660 = !DILocalVariable(name: "__dummy2", scope: !7657, file: !3, line: 2033, type: !158)
!7661 = !DILocation(line: 2033, column: 3, scope: !7658)
!7662 = !DILocation(line: 2033, column: 3, scope: !7330)
!7663 = !{i32 -2141804727}
!7664 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !7328)
!7665 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !7328)
!7666 = !DILocation(line: 2033, column: 3, scope: !7329)
!7667 = !DILocation(line: 2034, column: 17, scope: !7316)
!7668 = !DILocation(line: 2034, column: 22, scope: !7316)
!7669 = !DILocation(line: 2034, column: 44, scope: !7316)
!7670 = !DILocation(line: 2034, column: 33, scope: !7316)
!7671 = !DILocation(line: 2034, column: 55, scope: !7316)
!7672 = !DILocation(line: 2034, column: 9, scope: !7316)
!7673 = !DILocation(line: 2034, column: 7, scope: !7316)
!7674 = !DILocation(line: 2035, column: 42, scope: !7316)
!7675 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !7325)
!7676 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !7325)
!7677 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !7325)
!7678 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !7325)
!7679 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !7325)
!7680 = !DILocation(line: 2037, column: 22, scope: !7316)
!7681 = !DILocation(line: 2037, column: 34, scope: !7316)
!7682 = !DILocation(line: 2037, column: 45, scope: !7316)
!7683 = !DILocation(line: 2037, column: 50, scope: !7316)
!7684 = !DILocation(line: 2038, column: 5, scope: !7316)
!7685 = !DILocation(line: 2038, column: 9, scope: !7316)
!7686 = !DILocation(line: 199, column: 6, scope: !5472, inlinedAt: !7315)
!7687 = !DILocation(line: 141, column: 6, scope: !5658, inlinedAt: !7314)
!7688 = !DILocation(line: 0, scope: !5658, inlinedAt: !7314)
!7689 = !DILocation(line: 141, column: 6, scope: !5466, inlinedAt: !7314)
!7690 = !DILocation(line: 142, column: 29, scope: !5662, inlinedAt: !7314)
!7691 = !DILocation(line: 142, column: 8, scope: !5662, inlinedAt: !7314)
!7692 = !DILocation(line: 142, column: 7, scope: !5663, inlinedAt: !7314)
!7693 = !DILocation(line: 143, column: 18, scope: !5662, inlinedAt: !7314)
!7694 = !DILocation(line: 143, column: 22, scope: !5662, inlinedAt: !7314)
!7695 = !DILocation(line: 143, column: 4, scope: !5662, inlinedAt: !7314)
!7696 = !DILocation(line: 144, column: 12, scope: !5670, inlinedAt: !7314)
!7697 = !DILocation(line: 144, column: 12, scope: !5662, inlinedAt: !7314)
!7698 = !DILocation(line: 145, column: 4, scope: !5670, inlinedAt: !7314)
!7699 = !DILocation(line: 147, column: 4, scope: !5670, inlinedAt: !7314)
!7700 = !DILocation(line: 148, column: 3, scope: !5663, inlinedAt: !7314)
!7701 = !DILocation(line: 150, column: 6, scope: !5676, inlinedAt: !7314)
!7702 = !DILocation(line: 150, column: 6, scope: !5678, inlinedAt: !7314)
!7703 = !DILocation(line: 150, column: 6, scope: !5682, inlinedAt: !7314)
!7704 = !DILocation(line: 150, column: 6, scope: !5679, inlinedAt: !7314)
!7705 = !DILocation(line: 150, column: 6, scope: !5489, inlinedAt: !7314)
!7706 = !DILocation(line: 150, column: 6, scope: !5466, inlinedAt: !7314)
!7707 = !DILocation(line: 151, column: 3, scope: !5489, inlinedAt: !7314)
!7708 = !DILocation(line: 152, column: 20, scope: !5466, inlinedAt: !7314)
!7709 = !DILocation(line: 152, column: 26, scope: !5466, inlinedAt: !7314)
!7710 = !DILocation(line: 152, column: 33, scope: !5466, inlinedAt: !7314)
!7711 = !DILocation(line: 152, column: 2, scope: !5466, inlinedAt: !7314)
!7712 = !DILocation(line: 153, column: 2, scope: !5466, inlinedAt: !7314)
!7713 = !DILocation(line: 154, column: 1, scope: !5466, inlinedAt: !7314)
!7714 = !DILocation(line: 199, column: 6, scope: !5474, inlinedAt: !7315)
!7715 = !DILocation(line: 200, column: 21, scope: !5472, inlinedAt: !7315)
!7716 = !DILocation(line: 200, column: 25, scope: !5472, inlinedAt: !7315)
!7717 = !DILocation(line: 200, column: 31, scope: !5472, inlinedAt: !7315)
!7718 = !DILocation(line: 200, column: 7, scope: !5472, inlinedAt: !7315)
!7719 = !DILocation(line: 200, column: 5, scope: !5472, inlinedAt: !7315)
!7720 = !DILocation(line: 200, column: 3, scope: !5472, inlinedAt: !7315)
!7721 = !DILocation(line: 201, column: 9, scope: !5474, inlinedAt: !7315)
!7722 = !DILocation(line: 2037, column: 9, scope: !7316)
!7723 = !DILocation(line: 2037, column: 7, scope: !7316)
!7724 = !DILocation(line: 2040, column: 3, scope: !7316)
!7725 = !DILocation(line: 2043, column: 8, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2043, column: 7)
!7727 = !DILocation(line: 2043, column: 7, scope: !7276)
!7728 = !DILocation(line: 2044, column: 8, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 2043, column: 14)
!7730 = !DILocation(line: 2045, column: 4, scope: !7729)
!7731 = !DILocation(line: 2048, column: 7, scope: !7276)
!7732 = !DILocation(line: 2049, column: 10, scope: !7276)
!7733 = !DILocation(line: 2049, column: 3, scope: !7276)
!7734 = !DILabel(scope: !7276, name: "again", file: !3, line: 2051)
!7735 = !DILocation(line: 2051, column: 3, scope: !7276)
!7736 = !DILocation(line: 2052, column: 3, scope: !7276)
!7737 = !DILocation(line: 2052, column: 3, scope: !7312)
!7738 = !DILocalVariable(name: "__dummy", scope: !7739, file: !3, line: 2052, type: !158)
!7739 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 2052, column: 3)
!7740 = !DILocation(line: 2052, column: 3, scope: !7739)
!7741 = !DILocalVariable(name: "__dummy2", scope: !7739, file: !3, line: 2052, type: !158)
!7742 = !DILocation(line: 2052, column: 3, scope: !7311)
!7743 = !DILocation(line: 2052, column: 3, scope: !7310)
!7744 = !DILocation(line: 2052, column: 3, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 2052, column: 3)
!7746 = !DILocalVariable(name: "__dummy", scope: !7747, file: !3, line: 2052, type: !158)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 2052, column: 3)
!7748 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 2052, column: 3)
!7749 = !DILocation(line: 2052, column: 3, scope: !7747)
!7750 = !DILocalVariable(name: "__dummy2", scope: !7747, file: !3, line: 2052, type: !158)
!7751 = !DILocation(line: 2052, column: 3, scope: !7748)
!7752 = !DILocation(line: 2052, column: 3, scope: !7309)
!7753 = !{i32 -2141803663}
!7754 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !7307)
!7755 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !7307)
!7756 = !DILocation(line: 2052, column: 3, scope: !7308)
!7757 = !DILocation(line: 2053, column: 18, scope: !7276)
!7758 = !DILocation(line: 2053, column: 7, scope: !7276)
!7759 = !DILocation(line: 2053, column: 5, scope: !7276)
!7760 = !DILocation(line: 2056, column: 16, scope: !7276)
!7761 = !DILocation(line: 2056, column: 30, scope: !7276)
!7762 = !DILocation(line: 2056, column: 44, scope: !7276)
!7763 = !DILocation(line: 2056, column: 42, scope: !7276)
!7764 = !DILocation(line: 2056, column: 27, scope: !7276)
!7765 = !DILocation(line: 2056, column: 14, scope: !7276)
!7766 = !DILocation(line: 2057, column: 12, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2057, column: 3)
!7768 = !DILocation(line: 2057, column: 13, scope: !7767)
!7769 = !DILocation(line: 2057, column: 10, scope: !7767)
!7770 = !DILocation(line: 2057, column: 8, scope: !7767)
!7771 = !DILocation(line: 2057, column: 17, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 2057, column: 3)
!7773 = !DILocation(line: 2057, column: 19, scope: !7772)
!7774 = !DILocation(line: 2057, column: 33, scope: !7772)
!7775 = !DILocation(line: 2057, column: 48, scope: !7772)
!7776 = !DILocation(line: 2057, column: 37, scope: !7772)
!7777 = !DILocation(line: 2057, column: 36, scope: !7772)
!7778 = !DILocation(line: 0, scope: !7772)
!7779 = !DILocation(line: 2057, column: 3, scope: !7767)
!7780 = !DILocation(line: 2057, column: 53, scope: !7772)
!7781 = !DILocation(line: 2057, column: 3, scope: !7772)
!7782 = distinct !{!7782, !7779, !7783}
!7783 = !DILocation(line: 2058, column: 4, scope: !7767)
!7784 = !DILocation(line: 2059, column: 7, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2059, column: 7)
!7786 = !DILocation(line: 2059, column: 9, scope: !7785)
!7787 = !DILocation(line: 2059, column: 7, scope: !7276)
!7788 = !DILocation(line: 2060, column: 20, scope: !7785)
!7789 = !DILocation(line: 2060, column: 9, scope: !7785)
!7790 = !DILocation(line: 2060, column: 7, scope: !7785)
!7791 = !DILocation(line: 2060, column: 4, scope: !7785)
!7792 = !DILocation(line: 2062, column: 9, scope: !7785)
!7793 = !DILocation(line: 2062, column: 7, scope: !7785)
!7794 = !DILocation(line: 2064, column: 12, scope: !7276)
!7795 = !DILocation(line: 2064, column: 24, scope: !7276)
!7796 = !DILocation(line: 2064, column: 17, scope: !7276)
!7797 = !DILocation(line: 2064, column: 16, scope: !7276)
!7798 = !DILocation(line: 2064, column: 41, scope: !7276)
!7799 = !DILocation(line: 2064, column: 46, scope: !7276)
!7800 = !DILocation(line: 2064, column: 34, scope: !7276)
!7801 = !DILocation(line: 2064, column: 32, scope: !7276)
!7802 = !DILocation(line: 2064, column: 11, scope: !7276)
!7803 = !DILocation(line: 2064, column: 9, scope: !7276)
!7804 = !DILocation(line: 2066, column: 7, scope: !7284)
!7805 = !DILocation(line: 2066, column: 16, scope: !7284)
!7806 = !DILocation(line: 2066, column: 13, scope: !7284)
!7807 = !DILocation(line: 2066, column: 7, scope: !7276)
!7808 = !DILocation(line: 2067, column: 11, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 2067, column: 11)
!7810 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 2066, column: 29)
!7811 = !DILocation(line: 2067, column: 13, scope: !7809)
!7812 = !DILocation(line: 2067, column: 11, scope: !7810)
!7813 = !DILocation(line: 2069, column: 12, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 2067, column: 28)
!7815 = !DILocation(line: 2069, column: 17, scope: !7814)
!7816 = !DILocation(line: 2069, column: 15, scope: !7814)
!7817 = !DILocation(line: 2069, column: 24, scope: !7814)
!7818 = !DILocation(line: 2069, column: 28, scope: !7814)
!7819 = !DILocation(line: 2069, column: 41, scope: !7814)
!7820 = !DILocation(line: 2069, column: 39, scope: !7814)
!7821 = !DILocation(line: 2069, column: 4, scope: !7814)
!7822 = !DILocation(line: 2070, column: 13, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2070, column: 4)
!7824 = !DILocation(line: 2070, column: 11, scope: !7823)
!7825 = !DILocation(line: 2070, column: 9, scope: !7823)
!7826 = !DILocation(line: 2070, column: 16, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 2070, column: 4)
!7828 = !DILocation(line: 2070, column: 18, scope: !7827)
!7829 = !DILocation(line: 2070, column: 4, scope: !7823)
!7830 = !DILocation(line: 2071, column: 23, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 2071, column: 12)
!7832 = !DILocation(line: 2071, column: 12, scope: !7831)
!7833 = !DILocation(line: 2071, column: 12, scope: !7827)
!7834 = !DILocation(line: 2072, column: 22, scope: !7831)
!7835 = !DILocation(line: 2072, column: 16, scope: !7831)
!7836 = !DILocation(line: 2072, column: 5, scope: !7831)
!7837 = !DILocation(line: 2072, column: 19, scope: !7831)
!7838 = !DILocation(line: 2071, column: 24, scope: !7831)
!7839 = !DILocation(line: 2070, column: 34, scope: !7827)
!7840 = !DILocation(line: 2070, column: 4, scope: !7827)
!7841 = distinct !{!7841, !7829, !7842}
!7842 = !DILocation(line: 2072, column: 22, scope: !7823)
!7843 = !DILocation(line: 2073, column: 7, scope: !7814)
!7844 = !DILocation(line: 2074, column: 12, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 2074, column: 11)
!7846 = !DILocation(line: 2074, column: 11, scope: !7810)
!7847 = !DILocation(line: 2075, column: 25, scope: !7845)
!7848 = !DILocation(line: 2075, column: 20, scope: !7845)
!7849 = !DILocation(line: 2075, column: 9, scope: !7845)
!7850 = !DILocation(line: 2075, column: 23, scope: !7845)
!7851 = !DILocation(line: 2076, column: 22, scope: !7810)
!7852 = !DILocation(line: 2076, column: 19, scope: !7810)
!7853 = !DILocation(line: 2077, column: 3, scope: !7810)
!7854 = !DILocation(line: 2078, column: 10, scope: !7283)
!7855 = !DILocation(line: 2079, column: 7, scope: !7283)
!7856 = !DILocation(line: 2079, column: 14, scope: !7283)
!7857 = !DILocation(line: 2079, column: 19, scope: !7283)
!7858 = !DILocation(line: 2079, column: 33, scope: !7283)
!7859 = !DILocation(line: 2079, column: 31, scope: !7283)
!7860 = !DILocation(line: 2079, column: 47, scope: !7283)
!7861 = !DILocation(line: 2079, column: 45, scope: !7283)
!7862 = !DILocation(line: 2079, column: 17, scope: !7283)
!7863 = !DILocation(line: 2080, column: 12, scope: !7283)
!7864 = distinct !{!7864, !7855, !7865}
!7865 = !DILocation(line: 2080, column: 16, scope: !7283)
!7866 = !DILocation(line: 2081, column: 11, scope: !7282)
!7867 = !DILocation(line: 2081, column: 21, scope: !7282)
!7868 = !DILocation(line: 2081, column: 18, scope: !7282)
!7869 = !DILocation(line: 2081, column: 11, scope: !7283)
!7870 = !DILocation(line: 2082, column: 48, scope: !7281)
!7871 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !7304)
!7872 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !7304)
!7873 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !7304)
!7874 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !7304)
!7875 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !7304)
!7876 = !DILocation(line: 2083, column: 15, scope: !7281)
!7877 = !DILocation(line: 2083, column: 9, scope: !7281)
!7878 = !DILocation(line: 2084, column: 23, scope: !7281)
!7879 = !DILocation(line: 540, column: 27, scope: !6041, inlinedAt: !7280)
!7880 = !DILocation(line: 540, column: 6, scope: !6041, inlinedAt: !7280)
!7881 = !DILocation(line: 540, column: 6, scope: !6042, inlinedAt: !7280)
!7882 = !DILocation(line: 544, column: 7, scope: !6073, inlinedAt: !7280)
!7883 = !DILocation(line: 544, column: 12, scope: !6073, inlinedAt: !7280)
!7884 = !DILocation(line: 544, column: 7, scope: !6040, inlinedAt: !7280)
!7885 = !DILocation(line: 545, column: 25, scope: !6073, inlinedAt: !7280)
!7886 = !DILocation(line: 545, column: 31, scope: !6073, inlinedAt: !7280)
!7887 = !DILocation(line: 480, column: 33, scope: !6071, inlinedAt: !7294)
!7888 = !DILocation(line: 480, column: 23, scope: !6071, inlinedAt: !7294)
!7889 = !DILocation(line: 481, column: 29, scope: !6071, inlinedAt: !7294)
!7890 = !DILocation(line: 481, column: 35, scope: !6071, inlinedAt: !7294)
!7891 = !DILocation(line: 481, column: 42, scope: !6071, inlinedAt: !7294)
!7892 = !DILocation(line: 474, column: 23, scope: !6066, inlinedAt: !7293)
!7893 = !DILocation(line: 474, column: 29, scope: !6066, inlinedAt: !7293)
!7894 = !DILocation(line: 474, column: 36, scope: !6066, inlinedAt: !7293)
!7895 = !DILocation(line: 474, column: 9, scope: !6066, inlinedAt: !7293)
!7896 = !DILocation(line: 545, column: 4, scope: !6073, inlinedAt: !7280)
!7897 = !DILocation(line: 547, column: 25, scope: !6040, inlinedAt: !7280)
!7898 = !DILocation(line: 348, column: 7, scope: !6136, inlinedAt: !7291)
!7899 = !DILocation(line: 348, column: 6, scope: !6060, inlinedAt: !7291)
!7900 = !DILocation(line: 349, column: 3, scope: !6136, inlinedAt: !7291)
!7901 = !DILocation(line: 351, column: 6, scope: !6140, inlinedAt: !7291)
!7902 = !DILocation(line: 351, column: 11, scope: !6140, inlinedAt: !7291)
!7903 = !DILocation(line: 351, column: 6, scope: !6060, inlinedAt: !7291)
!7904 = !DILocation(line: 352, column: 3, scope: !6140, inlinedAt: !7291)
!7905 = !DILocation(line: 354, column: 32, scope: !6145, inlinedAt: !7291)
!7906 = !DILocation(line: 354, column: 37, scope: !6145, inlinedAt: !7291)
!7907 = !DILocation(line: 354, column: 42, scope: !6145, inlinedAt: !7291)
!7908 = !DILocation(line: 354, column: 45, scope: !6145, inlinedAt: !7291)
!7909 = !DILocation(line: 354, column: 50, scope: !6145, inlinedAt: !7291)
!7910 = !DILocation(line: 354, column: 6, scope: !6060, inlinedAt: !7291)
!7911 = !DILocation(line: 355, column: 3, scope: !6145, inlinedAt: !7291)
!7912 = !DILocation(line: 356, column: 32, scope: !6153, inlinedAt: !7291)
!7913 = !DILocation(line: 356, column: 37, scope: !6153, inlinedAt: !7291)
!7914 = !DILocation(line: 356, column: 43, scope: !6153, inlinedAt: !7291)
!7915 = !DILocation(line: 356, column: 46, scope: !6153, inlinedAt: !7291)
!7916 = !DILocation(line: 356, column: 51, scope: !6153, inlinedAt: !7291)
!7917 = !DILocation(line: 356, column: 6, scope: !6060, inlinedAt: !7291)
!7918 = !DILocation(line: 357, column: 3, scope: !6153, inlinedAt: !7291)
!7919 = !DILocation(line: 358, column: 6, scope: !6161, inlinedAt: !7291)
!7920 = !DILocation(line: 358, column: 11, scope: !6161, inlinedAt: !7291)
!7921 = !DILocation(line: 358, column: 6, scope: !6060, inlinedAt: !7291)
!7922 = !DILocation(line: 358, column: 26, scope: !6161, inlinedAt: !7291)
!7923 = !DILocation(line: 359, column: 6, scope: !6166, inlinedAt: !7291)
!7924 = !DILocation(line: 359, column: 11, scope: !6166, inlinedAt: !7291)
!7925 = !DILocation(line: 359, column: 6, scope: !6060, inlinedAt: !7291)
!7926 = !DILocation(line: 359, column: 26, scope: !6166, inlinedAt: !7291)
!7927 = !DILocation(line: 360, column: 6, scope: !6171, inlinedAt: !7291)
!7928 = !DILocation(line: 360, column: 11, scope: !6171, inlinedAt: !7291)
!7929 = !DILocation(line: 360, column: 6, scope: !6060, inlinedAt: !7291)
!7930 = !DILocation(line: 360, column: 26, scope: !6171, inlinedAt: !7291)
!7931 = !DILocation(line: 361, column: 6, scope: !6176, inlinedAt: !7291)
!7932 = !DILocation(line: 361, column: 11, scope: !6176, inlinedAt: !7291)
!7933 = !DILocation(line: 361, column: 6, scope: !6060, inlinedAt: !7291)
!7934 = !DILocation(line: 361, column: 26, scope: !6176, inlinedAt: !7291)
!7935 = !DILocation(line: 362, column: 6, scope: !6181, inlinedAt: !7291)
!7936 = !DILocation(line: 362, column: 11, scope: !6181, inlinedAt: !7291)
!7937 = !DILocation(line: 362, column: 6, scope: !6060, inlinedAt: !7291)
!7938 = !DILocation(line: 362, column: 26, scope: !6181, inlinedAt: !7291)
!7939 = !DILocation(line: 363, column: 6, scope: !6186, inlinedAt: !7291)
!7940 = !DILocation(line: 363, column: 11, scope: !6186, inlinedAt: !7291)
!7941 = !DILocation(line: 363, column: 6, scope: !6060, inlinedAt: !7291)
!7942 = !DILocation(line: 363, column: 26, scope: !6186, inlinedAt: !7291)
!7943 = !DILocation(line: 364, column: 6, scope: !6191, inlinedAt: !7291)
!7944 = !DILocation(line: 364, column: 11, scope: !6191, inlinedAt: !7291)
!7945 = !DILocation(line: 364, column: 6, scope: !6060, inlinedAt: !7291)
!7946 = !DILocation(line: 364, column: 26, scope: !6191, inlinedAt: !7291)
!7947 = !DILocation(line: 365, column: 6, scope: !6196, inlinedAt: !7291)
!7948 = !DILocation(line: 365, column: 11, scope: !6196, inlinedAt: !7291)
!7949 = !DILocation(line: 365, column: 6, scope: !6060, inlinedAt: !7291)
!7950 = !DILocation(line: 365, column: 26, scope: !6196, inlinedAt: !7291)
!7951 = !DILocation(line: 366, column: 6, scope: !6201, inlinedAt: !7291)
!7952 = !DILocation(line: 366, column: 11, scope: !6201, inlinedAt: !7291)
!7953 = !DILocation(line: 366, column: 6, scope: !6060, inlinedAt: !7291)
!7954 = !DILocation(line: 366, column: 26, scope: !6201, inlinedAt: !7291)
!7955 = !DILocation(line: 367, column: 6, scope: !6206, inlinedAt: !7291)
!7956 = !DILocation(line: 367, column: 11, scope: !6206, inlinedAt: !7291)
!7957 = !DILocation(line: 367, column: 6, scope: !6060, inlinedAt: !7291)
!7958 = !DILocation(line: 367, column: 26, scope: !6206, inlinedAt: !7291)
!7959 = !DILocation(line: 368, column: 6, scope: !6211, inlinedAt: !7291)
!7960 = !DILocation(line: 368, column: 11, scope: !6211, inlinedAt: !7291)
!7961 = !DILocation(line: 368, column: 6, scope: !6060, inlinedAt: !7291)
!7962 = !DILocation(line: 368, column: 26, scope: !6211, inlinedAt: !7291)
!7963 = !DILocation(line: 369, column: 6, scope: !6216, inlinedAt: !7291)
!7964 = !DILocation(line: 369, column: 11, scope: !6216, inlinedAt: !7291)
!7965 = !DILocation(line: 369, column: 6, scope: !6060, inlinedAt: !7291)
!7966 = !DILocation(line: 369, column: 26, scope: !6216, inlinedAt: !7291)
!7967 = !DILocation(line: 370, column: 6, scope: !6221, inlinedAt: !7291)
!7968 = !DILocation(line: 370, column: 11, scope: !6221, inlinedAt: !7291)
!7969 = !DILocation(line: 370, column: 6, scope: !6060, inlinedAt: !7291)
!7970 = !DILocation(line: 370, column: 26, scope: !6221, inlinedAt: !7291)
!7971 = !DILocation(line: 371, column: 6, scope: !6226, inlinedAt: !7291)
!7972 = !DILocation(line: 371, column: 11, scope: !6226, inlinedAt: !7291)
!7973 = !DILocation(line: 371, column: 6, scope: !6060, inlinedAt: !7291)
!7974 = !DILocation(line: 371, column: 26, scope: !6226, inlinedAt: !7291)
!7975 = !DILocation(line: 372, column: 6, scope: !6231, inlinedAt: !7291)
!7976 = !DILocation(line: 372, column: 11, scope: !6231, inlinedAt: !7291)
!7977 = !DILocation(line: 372, column: 6, scope: !6060, inlinedAt: !7291)
!7978 = !DILocation(line: 372, column: 26, scope: !6231, inlinedAt: !7291)
!7979 = !DILocation(line: 373, column: 6, scope: !6236, inlinedAt: !7291)
!7980 = !DILocation(line: 373, column: 11, scope: !6236, inlinedAt: !7291)
!7981 = !DILocation(line: 373, column: 6, scope: !6060, inlinedAt: !7291)
!7982 = !DILocation(line: 373, column: 26, scope: !6236, inlinedAt: !7291)
!7983 = !DILocation(line: 374, column: 6, scope: !6241, inlinedAt: !7291)
!7984 = !DILocation(line: 374, column: 11, scope: !6241, inlinedAt: !7291)
!7985 = !DILocation(line: 374, column: 6, scope: !6060, inlinedAt: !7291)
!7986 = !DILocation(line: 374, column: 26, scope: !6241, inlinedAt: !7291)
!7987 = !DILocation(line: 375, column: 6, scope: !6246, inlinedAt: !7291)
!7988 = !DILocation(line: 375, column: 11, scope: !6246, inlinedAt: !7291)
!7989 = !DILocation(line: 375, column: 6, scope: !6060, inlinedAt: !7291)
!7990 = !DILocation(line: 375, column: 27, scope: !6246, inlinedAt: !7291)
!7991 = !DILocation(line: 376, column: 6, scope: !6251, inlinedAt: !7291)
!7992 = !DILocation(line: 376, column: 11, scope: !6251, inlinedAt: !7291)
!7993 = !DILocation(line: 376, column: 6, scope: !6060, inlinedAt: !7291)
!7994 = !DILocation(line: 376, column: 32, scope: !6251, inlinedAt: !7291)
!7995 = !DILocation(line: 377, column: 6, scope: !6256, inlinedAt: !7291)
!7996 = !DILocation(line: 377, column: 11, scope: !6256, inlinedAt: !7291)
!7997 = !DILocation(line: 377, column: 6, scope: !6060, inlinedAt: !7291)
!7998 = !DILocation(line: 377, column: 32, scope: !6256, inlinedAt: !7291)
!7999 = !DILocation(line: 378, column: 6, scope: !6261, inlinedAt: !7291)
!8000 = !DILocation(line: 378, column: 11, scope: !6261, inlinedAt: !7291)
!8001 = !DILocation(line: 378, column: 6, scope: !6060, inlinedAt: !7291)
!8002 = !DILocation(line: 378, column: 32, scope: !6261, inlinedAt: !7291)
!8003 = !DILocation(line: 379, column: 6, scope: !6266, inlinedAt: !7291)
!8004 = !DILocation(line: 379, column: 11, scope: !6266, inlinedAt: !7291)
!8005 = !DILocation(line: 379, column: 6, scope: !6060, inlinedAt: !7291)
!8006 = !DILocation(line: 379, column: 33, scope: !6266, inlinedAt: !7291)
!8007 = !DILocation(line: 380, column: 6, scope: !6271, inlinedAt: !7291)
!8008 = !DILocation(line: 380, column: 11, scope: !6271, inlinedAt: !7291)
!8009 = !DILocation(line: 380, column: 6, scope: !6060, inlinedAt: !7291)
!8010 = !DILocation(line: 380, column: 33, scope: !6271, inlinedAt: !7291)
!8011 = !DILocation(line: 381, column: 6, scope: !6276, inlinedAt: !7291)
!8012 = !DILocation(line: 381, column: 11, scope: !6276, inlinedAt: !7291)
!8013 = !DILocation(line: 381, column: 6, scope: !6060, inlinedAt: !7291)
!8014 = !DILocation(line: 381, column: 33, scope: !6276, inlinedAt: !7291)
!8015 = !DILocation(line: 382, column: 2, scope: !6281, inlinedAt: !7291)
!8016 = !DILocation(line: 382, column: 2, scope: !6285, inlinedAt: !7291)
!8017 = !DILocation(line: 382, column: 2, scope: !6286, inlinedAt: !7291)
!8018 = !DILocation(line: 386, column: 1, scope: !6060, inlinedAt: !7291)
!8019 = !DILocation(line: 547, column: 9, scope: !6040, inlinedAt: !7280)
!8020 = !DILocation(line: 549, column: 8, scope: !6292, inlinedAt: !7280)
!8021 = !DILocation(line: 549, column: 7, scope: !6040, inlinedAt: !7280)
!8022 = !DILocation(line: 550, column: 4, scope: !6292, inlinedAt: !7280)
!8023 = !DILocation(line: 553, column: 33, scope: !6040, inlinedAt: !7280)
!8024 = !DILocation(line: 325, column: 6, scope: !6297, inlinedAt: !7289)
!8025 = !DILocation(line: 325, column: 6, scope: !6054, inlinedAt: !7289)
!8026 = !DILocation(line: 326, column: 3, scope: !6297, inlinedAt: !7289)
!8027 = !DILocation(line: 332, column: 9, scope: !6054, inlinedAt: !7289)
!8028 = !DILocation(line: 332, column: 15, scope: !6054, inlinedAt: !7289)
!8029 = !DILocation(line: 332, column: 2, scope: !6054, inlinedAt: !7289)
!8030 = !DILocation(line: 336, column: 1, scope: !6054, inlinedAt: !7289)
!8031 = !DILocation(line: 553, column: 5, scope: !6040, inlinedAt: !7280)
!8032 = !DILocation(line: 553, column: 41, scope: !6040, inlinedAt: !7280)
!8033 = !DILocation(line: 554, column: 5, scope: !6040, inlinedAt: !7280)
!8034 = !DILocation(line: 554, column: 12, scope: !6040, inlinedAt: !7280)
!8035 = !DILocation(line: 448, column: 31, scope: !6035, inlinedAt: !7279)
!8036 = !DILocation(line: 448, column: 34, scope: !6035, inlinedAt: !7279)
!8037 = !DILocation(line: 448, column: 14, scope: !6035, inlinedAt: !7279)
!8038 = !DILocation(line: 450, column: 22, scope: !6035, inlinedAt: !7279)
!8039 = !DILocation(line: 450, column: 25, scope: !6035, inlinedAt: !7279)
!8040 = !DILocation(line: 450, column: 30, scope: !6035, inlinedAt: !7279)
!8041 = !DILocation(line: 450, column: 36, scope: !6035, inlinedAt: !7279)
!8042 = !DILocation(line: 450, column: 8, scope: !6035, inlinedAt: !7279)
!8043 = !DILocation(line: 450, column: 6, scope: !6035, inlinedAt: !7279)
!8044 = !DILocation(line: 451, column: 9, scope: !6035, inlinedAt: !7279)
!8045 = !DILocation(line: 552, column: 3, scope: !6040, inlinedAt: !7280)
!8046 = !DILocation(line: 557, column: 19, scope: !6042, inlinedAt: !7280)
!8047 = !DILocation(line: 557, column: 25, scope: !6042, inlinedAt: !7280)
!8048 = !DILocation(line: 557, column: 9, scope: !6042, inlinedAt: !7280)
!8049 = !DILocation(line: 557, column: 2, scope: !6042, inlinedAt: !7280)
!8050 = !DILocation(line: 558, column: 1, scope: !6042, inlinedAt: !7280)
!8051 = !DILocation(line: 2084, column: 13, scope: !7281)
!8052 = !DILocation(line: 2085, column: 18, scope: !7281)
!8053 = !DILocation(line: 2085, column: 16, scope: !7281)
!8054 = !DILocation(line: 2086, column: 14, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 2086, column: 13)
!8056 = !DILocation(line: 2086, column: 13, scope: !7281)
!8057 = !DILocation(line: 2087, column: 8, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2086, column: 19)
!8059 = !DILocation(line: 2088, column: 4, scope: !8058)
!8060 = !DILocation(line: 2090, column: 9, scope: !7281)
!8061 = !DILocation(line: 2093, column: 12, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2093, column: 11)
!8063 = !DILocation(line: 2093, column: 11, scope: !7283)
!8064 = !DILocation(line: 2094, column: 25, scope: !8062)
!8065 = !DILocation(line: 2094, column: 20, scope: !8062)
!8066 = !DILocation(line: 2094, column: 9, scope: !8062)
!8067 = !DILocation(line: 2094, column: 23, scope: !8062)
!8068 = !DILocation(line: 2096, column: 11, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2096, column: 11)
!8070 = !DILocation(line: 2096, column: 16, scope: !8069)
!8071 = !DILocation(line: 2096, column: 14, scope: !8069)
!8072 = !DILocation(line: 2096, column: 11, scope: !7283)
!8073 = !DILocation(line: 2097, column: 12, scope: !8069)
!8074 = !DILocation(line: 2097, column: 17, scope: !8069)
!8075 = !DILocation(line: 2097, column: 29, scope: !8069)
!8076 = !DILocation(line: 2097, column: 34, scope: !8069)
!8077 = !DILocation(line: 2097, column: 32, scope: !8069)
!8078 = !DILocation(line: 2097, column: 4, scope: !8069)
!8079 = !DILocation(line: 2098, column: 14, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2098, column: 7)
!8081 = !DILocation(line: 2098, column: 12, scope: !8080)
!8082 = !DILocation(line: 2098, column: 19, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 2098, column: 7)
!8084 = !DILocation(line: 2098, column: 23, scope: !8083)
!8085 = !DILocation(line: 2098, column: 21, scope: !8083)
!8086 = !DILocation(line: 2098, column: 7, scope: !8080)
!8087 = !DILocation(line: 2099, column: 24, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2099, column: 13)
!8089 = !DILocation(line: 2099, column: 13, scope: !8088)
!8090 = !DILocation(line: 2099, column: 13, scope: !8083)
!8091 = !DILocation(line: 2100, column: 20, scope: !8088)
!8092 = !DILocation(line: 2100, column: 38, scope: !8088)
!8093 = !DILocation(line: 2100, column: 27, scope: !8088)
!8094 = !DILocation(line: 2100, column: 43, scope: !8088)
!8095 = !DILocation(line: 2100, column: 41, scope: !8088)
!8096 = !DILocation(line: 2100, column: 24, scope: !8088)
!8097 = !DILocation(line: 2100, column: 15, scope: !8088)
!8098 = !DILocation(line: 2100, column: 4, scope: !8088)
!8099 = !DILocation(line: 2100, column: 18, scope: !8088)
!8100 = !DILocation(line: 2099, column: 25, scope: !8088)
!8101 = !DILocation(line: 2098, column: 27, scope: !8083)
!8102 = !DILocation(line: 2098, column: 7, scope: !8083)
!8103 = distinct !{!8103, !8086, !8104}
!8104 = !DILocation(line: 2100, column: 53, scope: !8080)
!8105 = !DILocation(line: 2103, column: 11, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2103, column: 11)
!8107 = !DILocation(line: 2103, column: 24, scope: !8106)
!8108 = !DILocation(line: 2103, column: 22, scope: !8106)
!8109 = !DILocation(line: 2103, column: 11, scope: !7283)
!8110 = !DILocation(line: 2104, column: 12, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8106, file: !3, line: 2103, column: 28)
!8112 = !DILocation(line: 2104, column: 19, scope: !8111)
!8113 = !DILocation(line: 2104, column: 24, scope: !8111)
!8114 = !DILocation(line: 2104, column: 22, scope: !8111)
!8115 = !DILocation(line: 2104, column: 16, scope: !8111)
!8116 = !DILocation(line: 2104, column: 38, scope: !8111)
!8117 = !DILocation(line: 2104, column: 36, scope: !8111)
!8118 = !DILocation(line: 2104, column: 45, scope: !8111)
!8119 = !DILocation(line: 2104, column: 49, scope: !8111)
!8120 = !DILocation(line: 2104, column: 62, scope: !8111)
!8121 = !DILocation(line: 2104, column: 60, scope: !8111)
!8122 = !DILocation(line: 2104, column: 4, scope: !8111)
!8123 = !DILocation(line: 2105, column: 13, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 2105, column: 4)
!8125 = !DILocation(line: 2105, column: 11, scope: !8124)
!8126 = !DILocation(line: 2105, column: 9, scope: !8124)
!8127 = !DILocation(line: 2105, column: 16, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 2105, column: 4)
!8129 = !DILocation(line: 2105, column: 18, scope: !8128)
!8130 = !DILocation(line: 2105, column: 4, scope: !8124)
!8131 = !DILocation(line: 2106, column: 21, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2106, column: 10)
!8133 = !DILocation(line: 2106, column: 10, scope: !8132)
!8134 = !DILocation(line: 2106, column: 10, scope: !8128)
!8135 = !DILocation(line: 2107, column: 24, scope: !8132)
!8136 = !DILocation(line: 2107, column: 42, scope: !8132)
!8137 = !DILocation(line: 2107, column: 31, scope: !8132)
!8138 = !DILocation(line: 2107, column: 47, scope: !8132)
!8139 = !DILocation(line: 2107, column: 45, scope: !8132)
!8140 = !DILocation(line: 2107, column: 28, scope: !8132)
!8141 = !DILocation(line: 2107, column: 61, scope: !8132)
!8142 = !DILocation(line: 2107, column: 59, scope: !8132)
!8143 = !DILocation(line: 2107, column: 19, scope: !8132)
!8144 = !DILocation(line: 2107, column: 8, scope: !8132)
!8145 = !DILocation(line: 2107, column: 22, scope: !8132)
!8146 = !DILocation(line: 2106, column: 22, scope: !8132)
!8147 = !DILocation(line: 2105, column: 34, scope: !8128)
!8148 = !DILocation(line: 2105, column: 4, scope: !8128)
!8149 = distinct !{!8149, !8130, !8150}
!8150 = !DILocation(line: 2107, column: 61, scope: !8124)
!8151 = !DILocation(line: 2108, column: 7, scope: !8111)
!8152 = !DILocation(line: 2109, column: 11, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 2109, column: 11)
!8154 = !DILocation(line: 2109, column: 22, scope: !8153)
!8155 = !DILocation(line: 2109, column: 11, scope: !7283)
!8156 = !DILocation(line: 2110, column: 15, scope: !8153)
!8157 = !DILocation(line: 2110, column: 9, scope: !8153)
!8158 = !DILocation(line: 2111, column: 20, scope: !7283)
!8159 = !DILocation(line: 2111, column: 18, scope: !7283)
!8160 = !DILocation(line: 2112, column: 21, scope: !7283)
!8161 = !DILocation(line: 2112, column: 35, scope: !7283)
!8162 = !DILocation(line: 2112, column: 33, scope: !7283)
!8163 = !DILocation(line: 2112, column: 43, scope: !7283)
!8164 = !DILocation(line: 2112, column: 41, scope: !7283)
!8165 = !DILocation(line: 2112, column: 48, scope: !7283)
!8166 = !DILocation(line: 2112, column: 46, scope: !7283)
!8167 = !DILocation(line: 2112, column: 19, scope: !7283)
!8168 = !DILocation(line: 2113, column: 21, scope: !7283)
!8169 = !DILocation(line: 2113, column: 19, scope: !7283)
!8170 = !DILocation(line: 2116, column: 21, scope: !7276)
!8171 = !DILocation(line: 2116, column: 10, scope: !7276)
!8172 = !DILocation(line: 2116, column: 25, scope: !7276)
!8173 = !DILocation(line: 2116, column: 30, scope: !7276)
!8174 = !DILocation(line: 2116, column: 3, scope: !7276)
!8175 = !DILocation(line: 2117, column: 42, scope: !7276)
!8176 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !7275)
!8177 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !7275)
!8178 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !7275)
!8179 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !7275)
!8180 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !7275)
!8181 = !DILocation(line: 2118, column: 3, scope: !7276)
!8182 = !DILocation(line: 2120, column: 6, scope: !7263)
!8183 = !DILocation(line: 2120, column: 2, scope: !7263)
!8184 = !DILabel(scope: !7263, name: "reterr", file: !3, line: 2121)
!8185 = !DILocation(line: 2121, column: 1, scope: !7263)
!8186 = !DILocation(line: 2122, column: 8, scope: !7263)
!8187 = !DILocation(line: 2122, column: 2, scope: !7263)
!8188 = !DILocation(line: 2123, column: 9, scope: !7263)
!8189 = !DILocation(line: 2123, column: 2, scope: !7263)
!8190 = distinct !DISubprogram(name: "array_index_mask_nospec", scope: !8191, file: !8191, line: 36, type: !8192, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8191 = !DIFile(filename: "./arch/x86/include/asm/barrier.h", directory: "/home/lizy2001/genbc/linux")
!8192 = !DISubroutineType(types: !8193)
!8193 = !{!158, !158, !158}
!8194 = !DILocalVariable(name: "index", arg: 1, scope: !8190, file: !8191, line: 36, type: !158)
!8195 = !DILocation(line: 36, column: 67, scope: !8190)
!8196 = !DILocalVariable(name: "size", arg: 2, scope: !8190, file: !8191, line: 37, type: !158)
!8197 = !DILocation(line: 37, column: 17, scope: !8190)
!8198 = !DILocalVariable(name: "mask", scope: !8190, file: !8191, line: 39, type: !158)
!8199 = !DILocation(line: 39, column: 16, scope: !8190)
!8200 = !DILocation(line: 43, column: 9, scope: !8190)
!8201 = !DILocation(line: 43, column: 20, scope: !8190)
!8202 = !DILocation(line: 41, column: 2, scope: !8190)
!8203 = !{i32 371818}
!8204 = !DILocation(line: 45, column: 9, scope: !8190)
!8205 = !DILocation(line: 45, column: 2, scope: !8190)
!8206 = distinct !DISubprogram(name: "vt_do_kdskled", scope: !3, file: !3, line: 2126, type: !8207, scopeLine: 2127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8207 = !DISubroutineType(types: !8208)
!8208 = !{!165, !165, !165, !158, !165}
!8209 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !8210)
!8210 = distinct !DILocation(line: 2150, column: 17, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 2132, column: 21)
!8212 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !8210)
!8213 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !8214)
!8214 = distinct !DILocation(line: 2146, column: 17, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 2146, column: 17)
!8216 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 2146, column: 17)
!8217 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 2146, column: 17)
!8218 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 2146, column: 17)
!8219 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 2146, column: 17)
!8220 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !8221)
!8221 = distinct !DILocation(line: 2138, column: 17, scope: !8211)
!8222 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !8221)
!8223 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !8224)
!8224 = distinct !DILocation(line: 2136, column: 17, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 2136, column: 17)
!8226 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 2136, column: 17)
!8227 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 2136, column: 17)
!8228 = distinct !DILexicalBlock(scope: !8229, file: !3, line: 2136, column: 17)
!8229 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 2136, column: 17)
!8230 = !DILocalVariable(name: "console", arg: 1, scope: !8206, file: !3, line: 2126, type: !165)
!8231 = !DILocation(line: 2126, column: 23, scope: !8206)
!8232 = !DILocalVariable(name: "cmd", arg: 2, scope: !8206, file: !3, line: 2126, type: !165)
!8233 = !DILocation(line: 2126, column: 36, scope: !8206)
!8234 = !DILocalVariable(name: "arg", arg: 3, scope: !8206, file: !3, line: 2126, type: !158)
!8235 = !DILocation(line: 2126, column: 55, scope: !8206)
!8236 = !DILocalVariable(name: "perm", arg: 4, scope: !8206, file: !3, line: 2126, type: !165)
!8237 = !DILocation(line: 2126, column: 64, scope: !8206)
!8238 = !DILocalVariable(name: "kb", scope: !8206, file: !3, line: 2128, type: !412)
!8239 = !DILocation(line: 2128, column: 21, scope: !8206)
!8240 = !DILocation(line: 2128, column: 38, scope: !8206)
!8241 = !DILocation(line: 2128, column: 36, scope: !8206)
!8242 = !DILocalVariable(name: "flags", scope: !8206, file: !3, line: 2129, type: !158)
!8243 = !DILocation(line: 2129, column: 23, scope: !8206)
!8244 = !DILocalVariable(name: "ucval", scope: !8206, file: !3, line: 2130, type: !154)
!8245 = !DILocation(line: 2130, column: 16, scope: !8206)
!8246 = !DILocation(line: 2132, column: 16, scope: !8206)
!8247 = !DILocation(line: 2132, column: 9, scope: !8206)
!8248 = !DILocation(line: 2136, column: 17, scope: !8211)
!8249 = !DILocation(line: 2136, column: 17, scope: !8229)
!8250 = !DILocalVariable(name: "__dummy", scope: !8251, file: !3, line: 2136, type: !158)
!8251 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 2136, column: 17)
!8252 = !DILocation(line: 2136, column: 17, scope: !8251)
!8253 = !DILocalVariable(name: "__dummy2", scope: !8251, file: !3, line: 2136, type: !158)
!8254 = !DILocation(line: 2136, column: 17, scope: !8228)
!8255 = !DILocation(line: 2136, column: 17, scope: !8227)
!8256 = !DILocation(line: 2136, column: 17, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 2136, column: 17)
!8258 = !DILocalVariable(name: "__dummy", scope: !8259, file: !3, line: 2136, type: !158)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2136, column: 17)
!8260 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 2136, column: 17)
!8261 = !DILocation(line: 2136, column: 17, scope: !8259)
!8262 = !DILocalVariable(name: "__dummy2", scope: !8259, file: !3, line: 2136, type: !158)
!8263 = !DILocation(line: 2136, column: 17, scope: !8260)
!8264 = !DILocation(line: 2136, column: 17, scope: !8226)
!8265 = !{i32 -2141802407}
!8266 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !8224)
!8267 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !8224)
!8268 = !DILocation(line: 2136, column: 17, scope: !8225)
!8269 = !DILocation(line: 2137, column: 11, scope: !8211)
!8270 = !DILocation(line: 2137, column: 15, scope: !8211)
!8271 = !DILocation(line: 2137, column: 31, scope: !8211)
!8272 = !DILocation(line: 2137, column: 35, scope: !8211)
!8273 = !DILocation(line: 2137, column: 56, scope: !8211)
!8274 = !DILocation(line: 2137, column: 28, scope: !8211)
!8275 = !DILocation(line: 2137, column: 9, scope: !8211)
!8276 = !DILocation(line: 2138, column: 57, scope: !8211)
!8277 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !8221)
!8278 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !8221)
!8279 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !8221)
!8280 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !8221)
!8281 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !8221)
!8282 = !DILocation(line: 2139, column: 10, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 2139, column: 10)
!8284 = !DILocalVariable(name: "__ret_pu", scope: !8285, file: !3, line: 2139, type: !165)
!8285 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 2139, column: 10)
!8286 = !DILocation(line: 2139, column: 10, scope: !8285)
!8287 = !DILocalVariable(name: "__ptr_pu", scope: !8285, file: !3, line: 2139, type: !153)
!8288 = !DILocalVariable(name: "__val_pu", scope: !8285, file: !3, line: 2139, type: !156)
!8289 = !{i32 -2141801965}
!8290 = !DILocation(line: 2139, column: 10, scope: !8211)
!8291 = !DILocation(line: 2139, column: 3, scope: !8211)
!8292 = !DILocation(line: 2142, column: 8, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 2142, column: 7)
!8294 = !DILocation(line: 2142, column: 7, scope: !8211)
!8295 = !DILocation(line: 2143, column: 4, scope: !8293)
!8296 = !DILocation(line: 2144, column: 7, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 2144, column: 7)
!8298 = !DILocation(line: 2144, column: 11, scope: !8297)
!8299 = !DILocation(line: 2144, column: 7, scope: !8211)
!8300 = !DILocation(line: 2145, column: 4, scope: !8297)
!8301 = !DILocation(line: 2146, column: 17, scope: !8211)
!8302 = !DILocation(line: 2146, column: 17, scope: !8219)
!8303 = !DILocalVariable(name: "__dummy", scope: !8304, file: !3, line: 2146, type: !158)
!8304 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 2146, column: 17)
!8305 = !DILocation(line: 2146, column: 17, scope: !8304)
!8306 = !DILocalVariable(name: "__dummy2", scope: !8304, file: !3, line: 2146, type: !158)
!8307 = !DILocation(line: 2146, column: 17, scope: !8218)
!8308 = !DILocation(line: 2146, column: 17, scope: !8217)
!8309 = !DILocation(line: 2146, column: 17, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8217, file: !3, line: 2146, column: 17)
!8311 = !DILocalVariable(name: "__dummy", scope: !8312, file: !3, line: 2146, type: !158)
!8312 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2146, column: 17)
!8313 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 2146, column: 17)
!8314 = !DILocation(line: 2146, column: 17, scope: !8312)
!8315 = !DILocalVariable(name: "__dummy2", scope: !8312, file: !3, line: 2146, type: !158)
!8316 = !DILocation(line: 2146, column: 17, scope: !8313)
!8317 = !DILocation(line: 2146, column: 17, scope: !8216)
!8318 = !{i32 -2141800560}
!8319 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !8214)
!8320 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !8214)
!8321 = !DILocation(line: 2146, column: 17, scope: !8215)
!8322 = !DILocation(line: 2147, column: 23, scope: !8211)
!8323 = !DILocation(line: 2147, column: 27, scope: !8211)
!8324 = !DILocation(line: 2147, column: 22, scope: !8211)
!8325 = !DILocation(line: 2147, column: 3, scope: !8211)
!8326 = !DILocation(line: 2147, column: 7, scope: !8211)
!8327 = !DILocation(line: 2147, column: 20, scope: !8211)
!8328 = !DILocation(line: 2148, column: 32, scope: !8211)
!8329 = !DILocation(line: 2148, column: 36, scope: !8211)
!8330 = !DILocation(line: 2148, column: 42, scope: !8211)
!8331 = !DILocation(line: 2148, column: 30, scope: !8211)
!8332 = !DILocation(line: 2148, column: 3, scope: !8211)
!8333 = !DILocation(line: 2148, column: 7, scope: !8211)
!8334 = !DILocation(line: 2148, column: 28, scope: !8211)
!8335 = !DILocation(line: 2149, column: 3, scope: !8211)
!8336 = !DILocation(line: 2150, column: 51, scope: !8211)
!8337 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !8210)
!8338 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !8210)
!8339 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !8210)
!8340 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !8210)
!8341 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !8210)
!8342 = !DILocation(line: 2151, column: 3, scope: !8211)
!8343 = !DILocation(line: 2156, column: 11, scope: !8211)
!8344 = !DILocation(line: 2156, column: 9, scope: !8211)
!8345 = !DILocation(line: 2157, column: 10, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 2157, column: 10)
!8347 = !DILocalVariable(name: "__ret_pu", scope: !8348, file: !3, line: 2157, type: !165)
!8348 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 2157, column: 10)
!8349 = !DILocation(line: 2157, column: 10, scope: !8348)
!8350 = !DILocalVariable(name: "__ptr_pu", scope: !8348, file: !3, line: 2157, type: !153)
!8351 = !DILocalVariable(name: "__val_pu", scope: !8348, file: !3, line: 2157, type: !156)
!8352 = !{i32 -2141800123}
!8353 = !DILocation(line: 2157, column: 10, scope: !8211)
!8354 = !DILocation(line: 2157, column: 3, scope: !8211)
!8355 = !DILocation(line: 2160, column: 8, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 2160, column: 7)
!8357 = !DILocation(line: 2160, column: 7, scope: !8211)
!8358 = !DILocation(line: 2161, column: 4, scope: !8356)
!8359 = !DILocation(line: 2162, column: 15, scope: !8211)
!8360 = !DILocation(line: 2162, column: 19, scope: !8211)
!8361 = !DILocation(line: 2162, column: 3, scope: !8211)
!8362 = !DILocation(line: 2163, column: 3, scope: !8211)
!8363 = !DILocation(line: 2165, column: 9, scope: !8206)
!8364 = !DILocation(line: 2166, column: 1, scope: !8206)
!8365 = distinct !DISubprogram(name: "getledstate", scope: !3, file: !3, line: 1119, type: !8366, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8366 = !DISubroutineType(types: !8367)
!8367 = !{!154}
!8368 = !DILocation(line: 1121, column: 9, scope: !8365)
!8369 = !DILocation(line: 1121, column: 18, scope: !8365)
!8370 = !DILocation(line: 1121, column: 2, scope: !8365)
!8371 = distinct !DISubprogram(name: "vt_do_kdgkbmode", scope: !3, file: !3, line: 2168, type: !2920, scopeLine: 2169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8372 = !DILocalVariable(name: "console", arg: 1, scope: !8371, file: !3, line: 2168, type: !165)
!8373 = !DILocation(line: 2168, column: 25, scope: !8371)
!8374 = !DILocalVariable(name: "kb", scope: !8371, file: !3, line: 2170, type: !412)
!8375 = !DILocation(line: 2170, column: 21, scope: !8371)
!8376 = !DILocation(line: 2170, column: 38, scope: !8371)
!8377 = !DILocation(line: 2170, column: 36, scope: !8371)
!8378 = !DILocation(line: 2172, column: 10, scope: !8371)
!8379 = !DILocation(line: 2172, column: 14, scope: !8371)
!8380 = !DILocation(line: 2172, column: 2, scope: !8371)
!8381 = !DILocation(line: 2174, column: 3, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 2172, column: 23)
!8383 = !DILocation(line: 2176, column: 3, scope: !8382)
!8384 = !DILocation(line: 2178, column: 3, scope: !8382)
!8385 = !DILocation(line: 2180, column: 3, scope: !8382)
!8386 = !DILocation(line: 2182, column: 3, scope: !8382)
!8387 = !DILocation(line: 2184, column: 1, scope: !8371)
!8388 = distinct !DISubprogram(name: "vt_do_kdgkbmeta", scope: !3, file: !3, line: 2192, type: !2920, scopeLine: 2193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8389 = !DILocalVariable(name: "console", arg: 1, scope: !8388, file: !3, line: 2192, type: !165)
!8390 = !DILocation(line: 2192, column: 25, scope: !8388)
!8391 = !DILocalVariable(name: "kb", scope: !8388, file: !3, line: 2194, type: !412)
!8392 = !DILocation(line: 2194, column: 21, scope: !8388)
!8393 = !DILocation(line: 2194, column: 38, scope: !8388)
!8394 = !DILocation(line: 2194, column: 36, scope: !8388)
!8395 = !DILocation(line: 2196, column: 21, scope: !8388)
!8396 = !DILocation(line: 2196, column: 9, scope: !8388)
!8397 = !DILocation(line: 2196, column: 2, scope: !8388)
!8398 = distinct !DISubprogram(name: "vc_kbd_mode", scope: !313, file: !313, line: 83, type: !5101, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8399 = !DILocalVariable(name: "kbd", arg: 1, scope: !8398, file: !313, line: 83, type: !412)
!8400 = !DILocation(line: 83, column: 51, scope: !8398)
!8401 = !DILocalVariable(name: "flag", arg: 2, scope: !8398, file: !313, line: 83, type: !165)
!8402 = !DILocation(line: 83, column: 60, scope: !8398)
!8403 = !DILocation(line: 85, column: 11, scope: !8398)
!8404 = !DILocation(line: 85, column: 16, scope: !8398)
!8405 = !DILocation(line: 85, column: 29, scope: !8398)
!8406 = !DILocation(line: 85, column: 26, scope: !8398)
!8407 = !DILocation(line: 85, column: 35, scope: !8398)
!8408 = !DILocation(line: 85, column: 2, scope: !8398)
!8409 = distinct !DISubprogram(name: "vt_reset_unicode", scope: !3, file: !3, line: 2205, type: !3374, scopeLine: 2206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8410 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !8411)
!8411 = distinct !DILocation(line: 2211, column: 2, scope: !8409)
!8412 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !8411)
!8413 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !8414)
!8414 = distinct !DILocation(line: 2209, column: 2, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 2209, column: 2)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 2209, column: 2)
!8417 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 2209, column: 2)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 2209, column: 2)
!8419 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 2209, column: 2)
!8420 = !DILocalVariable(name: "console", arg: 1, scope: !8409, file: !3, line: 2205, type: !165)
!8421 = !DILocation(line: 2205, column: 27, scope: !8409)
!8422 = !DILocalVariable(name: "flags", scope: !8409, file: !3, line: 2207, type: !158)
!8423 = !DILocation(line: 2207, column: 16, scope: !8409)
!8424 = !DILocation(line: 2209, column: 2, scope: !8409)
!8425 = !DILocation(line: 2209, column: 2, scope: !8419)
!8426 = !DILocalVariable(name: "__dummy", scope: !8427, file: !3, line: 2209, type: !158)
!8427 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 2209, column: 2)
!8428 = !DILocation(line: 2209, column: 2, scope: !8427)
!8429 = !DILocalVariable(name: "__dummy2", scope: !8427, file: !3, line: 2209, type: !158)
!8430 = !DILocation(line: 2209, column: 2, scope: !8418)
!8431 = !DILocation(line: 2209, column: 2, scope: !8417)
!8432 = !DILocation(line: 2209, column: 2, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 2209, column: 2)
!8434 = !DILocalVariable(name: "__dummy", scope: !8435, file: !3, line: 2209, type: !158)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 2209, column: 2)
!8436 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 2209, column: 2)
!8437 = !DILocation(line: 2209, column: 2, scope: !8435)
!8438 = !DILocalVariable(name: "__dummy2", scope: !8435, file: !3, line: 2209, type: !158)
!8439 = !DILocation(line: 2209, column: 2, scope: !8436)
!8440 = !DILocation(line: 2209, column: 2, scope: !8416)
!8441 = !{i32 -2141798642}
!8442 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !8414)
!8443 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !8414)
!8444 = !DILocation(line: 2209, column: 2, scope: !8415)
!8445 = !DILocation(line: 2210, column: 31, scope: !8409)
!8446 = !DILocation(line: 2210, column: 12, scope: !8409)
!8447 = !DILocation(line: 2210, column: 2, scope: !8409)
!8448 = !DILocation(line: 2210, column: 21, scope: !8409)
!8449 = !DILocation(line: 2210, column: 29, scope: !8409)
!8450 = !DILocation(line: 2211, column: 42, scope: !8409)
!8451 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !8411)
!8452 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !8411)
!8453 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !8411)
!8454 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !8411)
!8455 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !8411)
!8456 = !DILocation(line: 2212, column: 1, scope: !8409)
!8457 = distinct !DISubprogram(name: "vt_get_shift_state", scope: !3, file: !3, line: 2220, type: !5318, scopeLine: 2221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8458 = !DILocation(line: 2223, column: 16, scope: !8457)
!8459 = !DILocation(line: 2223, column: 9, scope: !8457)
!8460 = distinct !DISubprogram(name: "vt_reset_keyboard", scope: !3, file: !3, line: 2233, type: !3374, scopeLine: 2234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8461 = !DILocalVariable(name: "lock", arg: 1, scope: !8462, file: !4862, line: 392, type: !1332)
!8462 = distinct !DISubprogram(name: "spin_unlock", scope: !4862, file: !4862, line: 392, type: !8463, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8463 = !DISubroutineType(types: !8464)
!8464 = !{null, !1332}
!8465 = !DILocation(line: 392, column: 53, scope: !8462, inlinedAt: !8466)
!8466 = distinct !DILocation(line: 2248, column: 2, scope: !8460)
!8467 = !DILocalVariable(name: "lock", arg: 1, scope: !8468, file: !4862, line: 352, type: !1332)
!8468 = distinct !DISubprogram(name: "spin_lock", scope: !4862, file: !4862, line: 352, type: !8463, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8469 = !DILocation(line: 352, column: 51, scope: !8468, inlinedAt: !8470)
!8470 = distinct !DILocation(line: 2245, column: 2, scope: !8460)
!8471 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !8472)
!8472 = distinct !DILocation(line: 2251, column: 2, scope: !8460)
!8473 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !8472)
!8474 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !8475)
!8475 = distinct !DILocation(line: 2238, column: 2, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 2238, column: 2)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 2238, column: 2)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 2238, column: 2)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 2238, column: 2)
!8480 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 2238, column: 2)
!8481 = !DILocalVariable(name: "console", arg: 1, scope: !8460, file: !3, line: 2233, type: !165)
!8482 = !DILocation(line: 2233, column: 28, scope: !8460)
!8483 = !DILocalVariable(name: "kb", scope: !8460, file: !3, line: 2235, type: !412)
!8484 = !DILocation(line: 2235, column: 21, scope: !8460)
!8485 = !DILocation(line: 2235, column: 38, scope: !8460)
!8486 = !DILocation(line: 2235, column: 36, scope: !8460)
!8487 = !DILocalVariable(name: "flags", scope: !8460, file: !3, line: 2236, type: !158)
!8488 = !DILocation(line: 2236, column: 16, scope: !8460)
!8489 = !DILocation(line: 2238, column: 2, scope: !8460)
!8490 = !DILocation(line: 2238, column: 2, scope: !8480)
!8491 = !DILocalVariable(name: "__dummy", scope: !8492, file: !3, line: 2238, type: !158)
!8492 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 2238, column: 2)
!8493 = !DILocation(line: 2238, column: 2, scope: !8492)
!8494 = !DILocalVariable(name: "__dummy2", scope: !8492, file: !3, line: 2238, type: !158)
!8495 = !DILocation(line: 2238, column: 2, scope: !8479)
!8496 = !DILocation(line: 2238, column: 2, scope: !8478)
!8497 = !DILocation(line: 2238, column: 2, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 2238, column: 2)
!8499 = !DILocalVariable(name: "__dummy", scope: !8500, file: !3, line: 2238, type: !158)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 2238, column: 2)
!8501 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 2238, column: 2)
!8502 = !DILocation(line: 2238, column: 2, scope: !8500)
!8503 = !DILocalVariable(name: "__dummy2", scope: !8500, file: !3, line: 2238, type: !158)
!8504 = !DILocation(line: 2238, column: 2, scope: !8501)
!8505 = !DILocation(line: 2238, column: 2, scope: !8477)
!8506 = !{i32 -2141797591}
!8507 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !8475)
!8508 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !8475)
!8509 = !DILocation(line: 2238, column: 2, scope: !8476)
!8510 = !DILocation(line: 2239, column: 18, scope: !8460)
!8511 = !DILocation(line: 2239, column: 2, scope: !8460)
!8512 = !DILocation(line: 2240, column: 18, scope: !8460)
!8513 = !DILocation(line: 2240, column: 2, scope: !8460)
!8514 = !DILocation(line: 2241, column: 18, scope: !8460)
!8515 = !DILocation(line: 2241, column: 2, scope: !8460)
!8516 = !DILocation(line: 2242, column: 18, scope: !8460)
!8517 = !DILocation(line: 2242, column: 2, scope: !8460)
!8518 = !DILocation(line: 2243, column: 2, scope: !8460)
!8519 = !DILocation(line: 2243, column: 6, scope: !8460)
!8520 = !DILocation(line: 2243, column: 16, scope: !8460)
!8521 = !DILocation(line: 2244, column: 2, scope: !8460)
!8522 = !DILocation(line: 2244, column: 6, scope: !8460)
!8523 = !DILocation(line: 2244, column: 17, scope: !8460)
!8524 = !DILocation(line: 354, column: 2, scope: !8525, inlinedAt: !8470)
!8525 = distinct !DILexicalBlock(scope: !8468, file: !4862, line: 354, column: 2)
!8526 = !{i32 -2145426685}
!8527 = !DILocation(line: 354, column: 2, scope: !8528, inlinedAt: !8470)
!8528 = distinct !DILexicalBlock(scope: !8525, file: !4862, line: 354, column: 2)
!8529 = !DILocation(line: 2246, column: 2, scope: !8460)
!8530 = !DILocation(line: 2246, column: 6, scope: !8460)
!8531 = !DILocation(line: 2246, column: 14, scope: !8460)
!8532 = !DILocation(line: 2247, column: 21, scope: !8460)
!8533 = !DILocation(line: 2247, column: 25, scope: !8460)
!8534 = !DILocation(line: 2247, column: 2, scope: !8460)
!8535 = !DILocation(line: 2247, column: 6, scope: !8460)
!8536 = !DILocation(line: 2247, column: 19, scope: !8460)
!8537 = !DILocation(line: 394, column: 2, scope: !8538, inlinedAt: !8466)
!8538 = distinct !DILexicalBlock(scope: !8462, file: !4862, line: 394, column: 2)
!8539 = !{i32 -2145424324}
!8540 = !DILocation(line: 394, column: 2, scope: !8541, inlinedAt: !8466)
!8541 = distinct !DILexicalBlock(scope: !8538, file: !4862, line: 394, column: 2)
!8542 = !DILocation(line: 2251, column: 42, scope: !8460)
!8543 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !8472)
!8544 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !8472)
!8545 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !8472)
!8546 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !8472)
!8547 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !8472)
!8548 = !DILocation(line: 2252, column: 1, scope: !8460)
!8549 = distinct !DISubprogram(name: "vt_get_kbd_mode_bit", scope: !3, file: !3, line: 2263, type: !5043, scopeLine: 2264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8550 = !DILocalVariable(name: "console", arg: 1, scope: !8549, file: !3, line: 2263, type: !165)
!8551 = !DILocation(line: 2263, column: 29, scope: !8549)
!8552 = !DILocalVariable(name: "bit", arg: 2, scope: !8549, file: !3, line: 2263, type: !165)
!8553 = !DILocation(line: 2263, column: 42, scope: !8549)
!8554 = !DILocalVariable(name: "kb", scope: !8549, file: !3, line: 2265, type: !412)
!8555 = !DILocation(line: 2265, column: 21, scope: !8549)
!8556 = !DILocation(line: 2265, column: 38, scope: !8549)
!8557 = !DILocation(line: 2265, column: 36, scope: !8549)
!8558 = !DILocation(line: 2266, column: 21, scope: !8549)
!8559 = !DILocation(line: 2266, column: 25, scope: !8549)
!8560 = !DILocation(line: 2266, column: 9, scope: !8549)
!8561 = !DILocation(line: 2266, column: 2, scope: !8549)
!8562 = distinct !DISubprogram(name: "vt_set_kbd_mode_bit", scope: !3, file: !3, line: 2278, type: !5114, scopeLine: 2279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8563 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !8564)
!8564 = distinct !DILocation(line: 2285, column: 2, scope: !8562)
!8565 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !8564)
!8566 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !8567)
!8567 = distinct !DILocation(line: 2283, column: 2, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 2283, column: 2)
!8569 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 2283, column: 2)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 2283, column: 2)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !3, line: 2283, column: 2)
!8572 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 2283, column: 2)
!8573 = !DILocalVariable(name: "console", arg: 1, scope: !8562, file: !3, line: 2278, type: !165)
!8574 = !DILocation(line: 2278, column: 30, scope: !8562)
!8575 = !DILocalVariable(name: "bit", arg: 2, scope: !8562, file: !3, line: 2278, type: !165)
!8576 = !DILocation(line: 2278, column: 43, scope: !8562)
!8577 = !DILocalVariable(name: "kb", scope: !8562, file: !3, line: 2280, type: !412)
!8578 = !DILocation(line: 2280, column: 21, scope: !8562)
!8579 = !DILocation(line: 2280, column: 38, scope: !8562)
!8580 = !DILocation(line: 2280, column: 36, scope: !8562)
!8581 = !DILocalVariable(name: "flags", scope: !8562, file: !3, line: 2281, type: !158)
!8582 = !DILocation(line: 2281, column: 16, scope: !8562)
!8583 = !DILocation(line: 2283, column: 2, scope: !8562)
!8584 = !DILocation(line: 2283, column: 2, scope: !8572)
!8585 = !DILocalVariable(name: "__dummy", scope: !8586, file: !3, line: 2283, type: !158)
!8586 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 2283, column: 2)
!8587 = !DILocation(line: 2283, column: 2, scope: !8586)
!8588 = !DILocalVariable(name: "__dummy2", scope: !8586, file: !3, line: 2283, type: !158)
!8589 = !DILocation(line: 2283, column: 2, scope: !8571)
!8590 = !DILocation(line: 2283, column: 2, scope: !8570)
!8591 = !DILocation(line: 2283, column: 2, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 2283, column: 2)
!8593 = !DILocalVariable(name: "__dummy", scope: !8594, file: !3, line: 2283, type: !158)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 2283, column: 2)
!8595 = distinct !DILexicalBlock(scope: !8592, file: !3, line: 2283, column: 2)
!8596 = !DILocation(line: 2283, column: 2, scope: !8594)
!8597 = !DILocalVariable(name: "__dummy2", scope: !8594, file: !3, line: 2283, type: !158)
!8598 = !DILocation(line: 2283, column: 2, scope: !8595)
!8599 = !DILocation(line: 2283, column: 2, scope: !8569)
!8600 = !{i32 -2141796534}
!8601 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !8567)
!8602 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !8567)
!8603 = !DILocation(line: 2283, column: 2, scope: !8568)
!8604 = !DILocation(line: 2284, column: 18, scope: !8562)
!8605 = !DILocation(line: 2284, column: 22, scope: !8562)
!8606 = !DILocation(line: 2284, column: 2, scope: !8562)
!8607 = !DILocation(line: 2285, column: 42, scope: !8562)
!8608 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !8564)
!8609 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !8564)
!8610 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !8564)
!8611 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !8564)
!8612 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !8564)
!8613 = !DILocation(line: 2286, column: 1, scope: !8562)
!8614 = distinct !DISubprogram(name: "vt_clr_kbd_mode_bit", scope: !3, file: !3, line: 2297, type: !5114, scopeLine: 2298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8615 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !8616)
!8616 = distinct !DILocation(line: 2304, column: 2, scope: !8614)
!8617 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !8616)
!8618 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !8619)
!8619 = distinct !DILocation(line: 2302, column: 2, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8621, file: !3, line: 2302, column: 2)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 2302, column: 2)
!8622 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 2302, column: 2)
!8623 = distinct !DILexicalBlock(scope: !8624, file: !3, line: 2302, column: 2)
!8624 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2302, column: 2)
!8625 = !DILocalVariable(name: "console", arg: 1, scope: !8614, file: !3, line: 2297, type: !165)
!8626 = !DILocation(line: 2297, column: 30, scope: !8614)
!8627 = !DILocalVariable(name: "bit", arg: 2, scope: !8614, file: !3, line: 2297, type: !165)
!8628 = !DILocation(line: 2297, column: 43, scope: !8614)
!8629 = !DILocalVariable(name: "kb", scope: !8614, file: !3, line: 2299, type: !412)
!8630 = !DILocation(line: 2299, column: 21, scope: !8614)
!8631 = !DILocation(line: 2299, column: 38, scope: !8614)
!8632 = !DILocation(line: 2299, column: 36, scope: !8614)
!8633 = !DILocalVariable(name: "flags", scope: !8614, file: !3, line: 2300, type: !158)
!8634 = !DILocation(line: 2300, column: 16, scope: !8614)
!8635 = !DILocation(line: 2302, column: 2, scope: !8614)
!8636 = !DILocation(line: 2302, column: 2, scope: !8624)
!8637 = !DILocalVariable(name: "__dummy", scope: !8638, file: !3, line: 2302, type: !158)
!8638 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 2302, column: 2)
!8639 = !DILocation(line: 2302, column: 2, scope: !8638)
!8640 = !DILocalVariable(name: "__dummy2", scope: !8638, file: !3, line: 2302, type: !158)
!8641 = !DILocation(line: 2302, column: 2, scope: !8623)
!8642 = !DILocation(line: 2302, column: 2, scope: !8622)
!8643 = !DILocation(line: 2302, column: 2, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 2302, column: 2)
!8645 = !DILocalVariable(name: "__dummy", scope: !8646, file: !3, line: 2302, type: !158)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 2302, column: 2)
!8647 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 2302, column: 2)
!8648 = !DILocation(line: 2302, column: 2, scope: !8646)
!8649 = !DILocalVariable(name: "__dummy2", scope: !8646, file: !3, line: 2302, type: !158)
!8650 = !DILocation(line: 2302, column: 2, scope: !8647)
!8651 = !DILocation(line: 2302, column: 2, scope: !8621)
!8652 = !{i32 -2141795487}
!8653 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !8619)
!8654 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !8619)
!8655 = !DILocation(line: 2302, column: 2, scope: !8620)
!8656 = !DILocation(line: 2303, column: 18, scope: !8614)
!8657 = !DILocation(line: 2303, column: 22, scope: !8614)
!8658 = !DILocation(line: 2303, column: 2, scope: !8614)
!8659 = !DILocation(line: 2304, column: 42, scope: !8614)
!8660 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !8616)
!8661 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !8616)
!8662 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !8616)
!8663 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !8616)
!8664 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !8616)
!8665 = !DILocation(line: 2305, column: 1, scope: !8614)
!8666 = !DILocalVariable(name: "unused", arg: 1, scope: !381, file: !3, line: 253, type: !375)
!8667 = !DILocation(line: 253, column: 43, scope: !381)
!8668 = !DILocation(line: 257, column: 2, scope: !381)
!8669 = !DILocation(line: 258, column: 1, scope: !381)
!8670 = distinct !DISubprogram(name: "test_bit", scope: !8671, file: !8671, line: 132, type: !8672, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8671 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8672 = !DISubroutineType(types: !8673)
!8673 = !{!292, !107, !8674}
!8674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8675, size: 64)
!8675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8676)
!8676 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !158)
!8677 = !DILocalVariable(name: "nr", arg: 1, scope: !8678, file: !8679, line: 210, type: !107)
!8678 = distinct !DISubprogram(name: "variable_test_bit", scope: !8679, file: !8679, line: 210, type: !8672, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8679 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8680 = !DILocation(line: 210, column: 52, scope: !8678, inlinedAt: !8681)
!8681 = distinct !DILocation(line: 135, column: 9, scope: !8670)
!8682 = !DILocalVariable(name: "addr", arg: 2, scope: !8678, file: !8679, line: 210, type: !8674)
!8683 = !DILocation(line: 210, column: 86, scope: !8678, inlinedAt: !8681)
!8684 = !DILocalVariable(name: "oldbit", scope: !8678, file: !8679, line: 212, type: !292)
!8685 = !DILocation(line: 212, column: 7, scope: !8678, inlinedAt: !8681)
!8686 = !DILocalVariable(name: "nr", arg: 1, scope: !8687, file: !8679, line: 204, type: !107)
!8687 = distinct !DISubprogram(name: "constant_test_bit", scope: !8679, file: !8679, line: 204, type: !8672, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8688 = !DILocation(line: 204, column: 52, scope: !8687, inlinedAt: !8689)
!8689 = distinct !DILocation(line: 135, column: 9, scope: !8670)
!8690 = !DILocalVariable(name: "addr", arg: 2, scope: !8687, file: !8679, line: 204, type: !8674)
!8691 = !DILocation(line: 204, column: 86, scope: !8687, inlinedAt: !8689)
!8692 = !DILocalVariable(name: "v", arg: 1, scope: !8693, file: !5402, line: 69, type: !5405)
!8693 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5402, file: !5402, line: 69, type: !5403, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8694 = !DILocation(line: 69, column: 73, scope: !8693, inlinedAt: !8695)
!8695 = distinct !DILocation(line: 134, column: 2, scope: !8670)
!8696 = !DILocalVariable(name: "size", arg: 2, scope: !8693, file: !5402, line: 69, type: !823)
!8697 = !DILocation(line: 69, column: 83, scope: !8693, inlinedAt: !8695)
!8698 = !DILocalVariable(name: "nr", arg: 1, scope: !8670, file: !8671, line: 132, type: !107)
!8699 = !DILocation(line: 132, column: 34, scope: !8670)
!8700 = !DILocalVariable(name: "addr", arg: 2, scope: !8670, file: !8671, line: 132, type: !8674)
!8701 = !DILocation(line: 132, column: 68, scope: !8670)
!8702 = !DILocation(line: 134, column: 25, scope: !8670)
!8703 = !DILocation(line: 134, column: 32, scope: !8670)
!8704 = !DILocation(line: 134, column: 30, scope: !8670)
!8705 = !DILocation(line: 71, column: 19, scope: !8693, inlinedAt: !8695)
!8706 = !DILocation(line: 71, column: 22, scope: !8693, inlinedAt: !8695)
!8707 = !DILocation(line: 71, column: 2, scope: !8693, inlinedAt: !8695)
!8708 = !DILocation(line: 72, column: 2, scope: !8693, inlinedAt: !8695)
!8709 = !DILocation(line: 135, column: 9, scope: !8670)
!8710 = !DILocation(line: 206, column: 19, scope: !8687, inlinedAt: !8689)
!8711 = !DILocation(line: 206, column: 22, scope: !8687, inlinedAt: !8689)
!8712 = !DILocation(line: 206, column: 15, scope: !8687, inlinedAt: !8689)
!8713 = !DILocation(line: 207, column: 4, scope: !8687, inlinedAt: !8689)
!8714 = !DILocation(line: 207, column: 9, scope: !8687, inlinedAt: !8689)
!8715 = !DILocation(line: 207, column: 12, scope: !8687, inlinedAt: !8689)
!8716 = !DILocation(line: 206, column: 44, scope: !8687, inlinedAt: !8689)
!8717 = !DILocation(line: 207, column: 37, scope: !8687, inlinedAt: !8689)
!8718 = !DILocation(line: 217, column: 33, scope: !8678, inlinedAt: !8681)
!8719 = !DILocation(line: 217, column: 46, scope: !8678, inlinedAt: !8681)
!8720 = !DILocation(line: 214, column: 2, scope: !8678, inlinedAt: !8681)
!8721 = !{i32 -2147090581, i32 -2147090521}
!8722 = !DILocation(line: 219, column: 9, scope: !8678, inlinedAt: !8681)
!8723 = !DILocation(line: 135, column: 2, scope: !8670)
!8724 = distinct !DISubprogram(name: "kasan_check_read", scope: !8725, file: !8725, line: 34, type: !8726, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8725 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8726 = !DISubroutineType(types: !8727)
!8727 = !{!292, !5405, !7}
!8728 = !DILocalVariable(name: "p", arg: 1, scope: !8724, file: !8725, line: 34, type: !5405)
!8729 = !DILocation(line: 34, column: 58, scope: !8724)
!8730 = !DILocalVariable(name: "size", arg: 2, scope: !8724, file: !8725, line: 34, type: !7)
!8731 = !DILocation(line: 34, column: 74, scope: !8724)
!8732 = !DILocation(line: 36, column: 2, scope: !8724)
!8733 = distinct !DISubprogram(name: "kcsan_check_access", scope: !8734, file: !8734, line: 178, type: !8735, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8734 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8735 = !DISubroutineType(types: !8736)
!8736 = !{null, !5405, !823, !165}
!8737 = !DILocalVariable(name: "ptr", arg: 1, scope: !8733, file: !8734, line: 178, type: !5405)
!8738 = !DILocation(line: 178, column: 60, scope: !8733)
!8739 = !DILocalVariable(name: "size", arg: 2, scope: !8733, file: !8734, line: 178, type: !823)
!8740 = !DILocation(line: 178, column: 72, scope: !8733)
!8741 = !DILocalVariable(name: "type", arg: 3, scope: !8733, file: !8734, line: 179, type: !165)
!8742 = !DILocation(line: 179, column: 15, scope: !8733)
!8743 = !DILocation(line: 179, column: 23, scope: !8733)
!8744 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !4926, file: !4926, line: 646, type: !4927, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8745 = !DILocalVariable(name: "__ret", scope: !8746, file: !4926, line: 648, type: !158)
!8746 = distinct !DILexicalBlock(scope: !8744, file: !4926, line: 648, column: 9)
!8747 = !DILocation(line: 648, column: 9, scope: !8746)
!8748 = !DILocalVariable(name: "__edi", scope: !8746, file: !4926, line: 648, type: !158)
!8749 = !DILocalVariable(name: "__esi", scope: !8746, file: !4926, line: 648, type: !158)
!8750 = !DILocalVariable(name: "__edx", scope: !8746, file: !4926, line: 648, type: !158)
!8751 = !DILocalVariable(name: "__ecx", scope: !8746, file: !4926, line: 648, type: !158)
!8752 = !DILocalVariable(name: "__eax", scope: !8746, file: !4926, line: 648, type: !158)
!8753 = !DILocation(line: 648, column: 9, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !4926, line: 648, column: 9)
!8755 = distinct !DILexicalBlock(scope: !8746, file: !4926, line: 648, column: 9)
!8756 = !{i32 -2145735567, i32 -2145733252, i32 -2145733018, i32 -2145732967, i32 -2145732939, i32 -2145732914, i32 -2145733230, i32 -2145733217, i32 -2145732779, i32 -2145732660, i32 -2145733125, i32 -2145733098, i32 -2145733070, i32 -2145733040}
!8757 = !DILocalVariable(name: "__mask", scope: !8758, file: !4926, line: 648, type: !158)
!8758 = distinct !DILexicalBlock(scope: !8754, file: !4926, line: 648, column: 9)
!8759 = !DILocation(line: 648, column: 9, scope: !8758)
!8760 = !DILocation(line: 648, column: 9, scope: !8755)
!8761 = !DILocation(line: 648, column: 2, scope: !8744)
!8762 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !4926, file: !4926, line: 656, type: !3381, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8763 = !DILocalVariable(name: "__edi", scope: !8764, file: !4926, line: 658, type: !158)
!8764 = distinct !DILexicalBlock(scope: !8762, file: !4926, line: 658, column: 2)
!8765 = !DILocation(line: 658, column: 2, scope: !8764)
!8766 = !DILocalVariable(name: "__esi", scope: !8764, file: !4926, line: 658, type: !158)
!8767 = !DILocalVariable(name: "__edx", scope: !8764, file: !4926, line: 658, type: !158)
!8768 = !DILocalVariable(name: "__ecx", scope: !8764, file: !4926, line: 658, type: !158)
!8769 = !DILocalVariable(name: "__eax", scope: !8764, file: !4926, line: 658, type: !158)
!8770 = !{i32 -2145728473, i32 -2145727741, i32 -2145727507, i32 -2145727456, i32 -2145727428, i32 -2145727403, i32 -2145727719, i32 -2145727706, i32 -2145727268, i32 -2145727149, i32 -2145727614, i32 -2145727587, i32 -2145727559, i32 -2145727529}
!8771 = !DILocation(line: 659, column: 1, scope: !8762)
!8772 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !4926, file: !4926, line: 651, type: !299, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8773 = !DILocalVariable(name: "f", arg: 1, scope: !8772, file: !4926, line: 651, type: !158)
!8774 = !DILocation(line: 651, column: 65, scope: !8772)
!8775 = !DILocalVariable(name: "__edi", scope: !8776, file: !4926, line: 653, type: !158)
!8776 = distinct !DILexicalBlock(scope: !8772, file: !4926, line: 653, column: 2)
!8777 = !DILocation(line: 653, column: 2, scope: !8776)
!8778 = !DILocalVariable(name: "__esi", scope: !8776, file: !4926, line: 653, type: !158)
!8779 = !DILocalVariable(name: "__edx", scope: !8776, file: !4926, line: 653, type: !158)
!8780 = !DILocalVariable(name: "__ecx", scope: !8776, file: !4926, line: 653, type: !158)
!8781 = !DILocalVariable(name: "__eax", scope: !8776, file: !4926, line: 653, type: !158)
!8782 = !{i32 -2145731100, i32 -2145730350, i32 -2145730116, i32 -2145730065, i32 -2145730037, i32 -2145730012, i32 -2145730328, i32 -2145730315, i32 -2145729877, i32 -2145729758, i32 -2145730223, i32 -2145730196, i32 -2145730168, i32 -2145730138}
!8783 = !DILocation(line: 654, column: 1, scope: !8772)
!8784 = distinct !DISubprogram(name: "getleds", scope: !3, file: !3, line: 1138, type: !8366, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8785 = !DILocalVariable(name: "kb", scope: !8784, file: !3, line: 1140, type: !412)
!8786 = !DILocation(line: 1140, column: 21, scope: !8784)
!8787 = !DILocation(line: 1140, column: 38, scope: !8784)
!8788 = !DILocation(line: 1140, column: 36, scope: !8784)
!8789 = !DILocation(line: 1142, column: 6, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 1142, column: 6)
!8791 = !DILocation(line: 1142, column: 10, scope: !8790)
!8792 = !DILocation(line: 1142, column: 18, scope: !8790)
!8793 = !DILocation(line: 1142, column: 6, scope: !8784)
!8794 = !DILocation(line: 1143, column: 10, scope: !8790)
!8795 = !DILocation(line: 1143, column: 3, scope: !8790)
!8796 = !DILocation(line: 1145, column: 9, scope: !8784)
!8797 = !DILocation(line: 1145, column: 13, scope: !8784)
!8798 = !DILocation(line: 1145, column: 2, scope: !8784)
!8799 = !DILocation(line: 1146, column: 1, scope: !8784)
!8800 = distinct !DISubprogram(name: "kbd_propagate_led_state", scope: !3, file: !3, line: 1101, type: !4723, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8801 = !DILocalVariable(name: "old_state", arg: 1, scope: !8800, file: !3, line: 1101, type: !7)
!8802 = !DILocation(line: 1101, column: 50, scope: !8800)
!8803 = !DILocalVariable(name: "new_state", arg: 2, scope: !8800, file: !3, line: 1102, type: !7)
!8804 = !DILocation(line: 1102, column: 22, scope: !8800)
!8805 = !DILocation(line: 1104, column: 46, scope: !8800)
!8806 = !DILocation(line: 1104, column: 2, scope: !8800)
!8807 = !DILocation(line: 1106, column: 1, scope: !8800)
!8808 = distinct !DISubprogram(name: "kbd_update_leds_helper", scope: !3, file: !3, line: 1087, type: !4743, scopeLine: 1088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8809 = !DILocalVariable(name: "handle", arg: 1, scope: !8808, file: !3, line: 1087, type: !425)
!8810 = !DILocation(line: 1087, column: 56, scope: !8808)
!8811 = !DILocalVariable(name: "data", arg: 2, scope: !8808, file: !3, line: 1087, type: !153)
!8812 = !DILocation(line: 1087, column: 70, scope: !8808)
!8813 = !DILocalVariable(name: "leds", scope: !8808, file: !3, line: 1089, type: !7)
!8814 = !DILocation(line: 1089, column: 15, scope: !8808)
!8815 = !DILocation(line: 1089, column: 39, scope: !8808)
!8816 = !DILocation(line: 1089, column: 23, scope: !8808)
!8817 = !DILocation(line: 1089, column: 22, scope: !8808)
!8818 = !DILocation(line: 1091, column: 23, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 1091, column: 6)
!8820 = !DILocation(line: 1091, column: 31, scope: !8819)
!8821 = !DILocation(line: 1091, column: 36, scope: !8819)
!8822 = !DILocation(line: 1091, column: 6, scope: !8819)
!8823 = !DILocation(line: 1091, column: 6, scope: !8808)
!8824 = !DILocation(line: 1092, column: 22, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 1091, column: 44)
!8826 = !DILocation(line: 1092, column: 54, scope: !8825)
!8827 = !DILocation(line: 1092, column: 59, scope: !8825)
!8828 = !DILocation(line: 1092, column: 52, scope: !8825)
!8829 = !DILocation(line: 1092, column: 51, scope: !8825)
!8830 = !DILocation(line: 1092, column: 3, scope: !8825)
!8831 = !DILocation(line: 1093, column: 22, scope: !8825)
!8832 = !DILocation(line: 1093, column: 54, scope: !8825)
!8833 = !DILocation(line: 1093, column: 59, scope: !8825)
!8834 = !DILocation(line: 1093, column: 52, scope: !8825)
!8835 = !DILocation(line: 1093, column: 51, scope: !8825)
!8836 = !DILocation(line: 1093, column: 3, scope: !8825)
!8837 = !DILocation(line: 1094, column: 22, scope: !8825)
!8838 = !DILocation(line: 1094, column: 54, scope: !8825)
!8839 = !DILocation(line: 1094, column: 59, scope: !8825)
!8840 = !DILocation(line: 1094, column: 52, scope: !8825)
!8841 = !DILocation(line: 1094, column: 51, scope: !8825)
!8842 = !DILocation(line: 1094, column: 3, scope: !8825)
!8843 = !DILocation(line: 1095, column: 22, scope: !8825)
!8844 = !DILocation(line: 1095, column: 3, scope: !8825)
!8845 = !DILocation(line: 1096, column: 2, scope: !8825)
!8846 = !DILocation(line: 1098, column: 2, scope: !8808)
!8847 = distinct !DISubprogram(name: "kbd_event", scope: !3, file: !3, line: 1498, type: !423, scopeLine: 1500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8848 = !DILocation(line: 392, column: 53, scope: !8462, inlinedAt: !8849)
!8849 = distinct !DILocation(line: 1509, column: 2, scope: !8847)
!8850 = !DILocation(line: 352, column: 51, scope: !8468, inlinedAt: !8851)
!8851 = distinct !DILocation(line: 1502, column: 2, scope: !8847)
!8852 = !DILocalVariable(name: "handle", arg: 1, scope: !8847, file: !3, line: 1498, type: !425)
!8853 = !DILocation(line: 1498, column: 44, scope: !8847)
!8854 = !DILocalVariable(name: "event_type", arg: 2, scope: !8847, file: !3, line: 1498, type: !7)
!8855 = !DILocation(line: 1498, column: 65, scope: !8847)
!8856 = !DILocalVariable(name: "event_code", arg: 3, scope: !8847, file: !3, line: 1499, type: !7)
!8857 = !DILocation(line: 1499, column: 22, scope: !8847)
!8858 = !DILocalVariable(name: "value", arg: 4, scope: !8847, file: !3, line: 1499, type: !165)
!8859 = !DILocation(line: 1499, column: 38, scope: !8847)
!8860 = !DILocation(line: 354, column: 2, scope: !8525, inlinedAt: !8851)
!8861 = !DILocation(line: 354, column: 2, scope: !8528, inlinedAt: !8851)
!8862 = !DILocation(line: 1504, column: 6, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8847, file: !3, line: 1504, column: 6)
!8864 = !DILocation(line: 1504, column: 17, scope: !8863)
!8865 = !DILocation(line: 1504, column: 27, scope: !8863)
!8866 = !DILocation(line: 1504, column: 30, scope: !8863)
!8867 = !DILocation(line: 1504, column: 41, scope: !8863)
!8868 = !DILocation(line: 1504, column: 52, scope: !8863)
!8869 = !DILocation(line: 1504, column: 55, scope: !8863)
!8870 = !DILocation(line: 1504, column: 6, scope: !8847)
!8871 = !DILocation(line: 1505, column: 15, scope: !8863)
!8872 = !DILocation(line: 1505, column: 3, scope: !8863)
!8873 = !DILocation(line: 1506, column: 6, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8847, file: !3, line: 1506, column: 6)
!8875 = !DILocation(line: 1506, column: 17, scope: !8874)
!8876 = !DILocation(line: 1506, column: 27, scope: !8874)
!8877 = !DILocation(line: 1506, column: 30, scope: !8874)
!8878 = !DILocation(line: 1506, column: 41, scope: !8874)
!8879 = !DILocation(line: 1506, column: 6, scope: !8847)
!8880 = !DILocation(line: 1507, column: 15, scope: !8874)
!8881 = !DILocation(line: 1507, column: 27, scope: !8874)
!8882 = !DILocation(line: 1507, column: 34, scope: !8874)
!8883 = !DILocation(line: 0, scope: !8874)
!8884 = !DILocation(line: 1507, column: 3, scope: !8874)
!8885 = !DILocation(line: 394, column: 2, scope: !8538, inlinedAt: !8849)
!8886 = !DILocation(line: 394, column: 2, scope: !8541, inlinedAt: !8849)
!8887 = !DILocation(line: 1511, column: 2, scope: !8847)
!8888 = !DILocation(line: 1512, column: 26, scope: !8847)
!8889 = !DILocation(line: 1513, column: 2, scope: !8847)
!8890 = !DILocation(line: 1514, column: 1, scope: !8847)
!8891 = distinct !DISubprogram(name: "kbd_match", scope: !3, file: !3, line: 1516, type: !4472, scopeLine: 1517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8892 = !DILocalVariable(name: "handler", arg: 1, scope: !8891, file: !3, line: 1516, type: !4457)
!8893 = !DILocation(line: 1516, column: 45, scope: !8891)
!8894 = !DILocalVariable(name: "dev", arg: 2, scope: !8891, file: !3, line: 1516, type: !432)
!8895 = !DILocation(line: 1516, column: 72, scope: !8891)
!8896 = !DILocalVariable(name: "i", scope: !8891, file: !3, line: 1518, type: !165)
!8897 = !DILocation(line: 1518, column: 6, scope: !8891)
!8898 = !DILocation(line: 1520, column: 23, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 1520, column: 6)
!8900 = !DILocation(line: 1520, column: 28, scope: !8899)
!8901 = !DILocation(line: 1520, column: 6, scope: !8899)
!8902 = !DILocation(line: 1520, column: 6, scope: !8891)
!8903 = !DILocation(line: 1521, column: 3, scope: !8899)
!8904 = !DILocation(line: 1523, column: 23, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 1523, column: 6)
!8906 = !DILocation(line: 1523, column: 28, scope: !8905)
!8907 = !DILocation(line: 1523, column: 6, scope: !8905)
!8908 = !DILocation(line: 1523, column: 6, scope: !8891)
!8909 = !DILocation(line: 1524, column: 10, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8911, file: !3, line: 1524, column: 3)
!8911 = distinct !DILexicalBlock(scope: !8905, file: !3, line: 1523, column: 36)
!8912 = !DILocation(line: 1524, column: 8, scope: !8910)
!8913 = !DILocation(line: 1524, column: 26, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 1524, column: 3)
!8915 = !DILocation(line: 1524, column: 28, scope: !8914)
!8916 = !DILocation(line: 1524, column: 3, scope: !8910)
!8917 = !DILocation(line: 1525, column: 17, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 1525, column: 8)
!8919 = !DILocation(line: 1525, column: 20, scope: !8918)
!8920 = !DILocation(line: 1525, column: 25, scope: !8918)
!8921 = !DILocation(line: 1525, column: 8, scope: !8918)
!8922 = !DILocation(line: 1525, column: 8, scope: !8914)
!8923 = !DILocation(line: 1526, column: 5, scope: !8918)
!8924 = !DILocation(line: 1525, column: 31, scope: !8918)
!8925 = !DILocation(line: 1524, column: 41, scope: !8914)
!8926 = !DILocation(line: 1524, column: 3, scope: !8914)
!8927 = distinct !{!8927, !8916, !8928}
!8928 = !DILocation(line: 1526, column: 12, scope: !8910)
!8929 = !DILocation(line: 1527, column: 10, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8911, file: !3, line: 1527, column: 3)
!8931 = !DILocation(line: 1527, column: 8, scope: !8930)
!8932 = !DILocation(line: 1527, column: 26, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 1527, column: 3)
!8934 = !DILocation(line: 1527, column: 28, scope: !8933)
!8935 = !DILocation(line: 1527, column: 3, scope: !8930)
!8936 = !DILocation(line: 1528, column: 17, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 1528, column: 8)
!8938 = !DILocation(line: 1528, column: 20, scope: !8937)
!8939 = !DILocation(line: 1528, column: 25, scope: !8937)
!8940 = !DILocation(line: 1528, column: 8, scope: !8937)
!8941 = !DILocation(line: 1528, column: 8, scope: !8933)
!8942 = !DILocation(line: 1529, column: 5, scope: !8937)
!8943 = !DILocation(line: 1528, column: 31, scope: !8937)
!8944 = !DILocation(line: 1527, column: 47, scope: !8933)
!8945 = !DILocation(line: 1527, column: 3, scope: !8933)
!8946 = distinct !{!8946, !8935, !8947}
!8947 = !DILocation(line: 1529, column: 12, scope: !8930)
!8948 = !DILocation(line: 1530, column: 2, scope: !8911)
!8949 = !DILocation(line: 1532, column: 2, scope: !8891)
!8950 = !DILocation(line: 1533, column: 1, scope: !8891)
!8951 = distinct !DISubprogram(name: "kbd_connect", scope: !3, file: !3, line: 1541, type: !4476, scopeLine: 1543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!8952 = !DILocalVariable(name: "handler", arg: 1, scope: !8951, file: !3, line: 1541, type: !4457)
!8953 = !DILocation(line: 1541, column: 46, scope: !8951)
!8954 = !DILocalVariable(name: "dev", arg: 2, scope: !8951, file: !3, line: 1541, type: !432)
!8955 = !DILocation(line: 1541, column: 73, scope: !8951)
!8956 = !DILocalVariable(name: "id", arg: 3, scope: !8951, file: !3, line: 1542, type: !4478)
!8957 = !DILocation(line: 1542, column: 34, scope: !8951)
!8958 = !DILocalVariable(name: "handle", scope: !8951, file: !3, line: 1544, type: !425)
!8959 = !DILocation(line: 1544, column: 23, scope: !8951)
!8960 = !DILocalVariable(name: "error", scope: !8951, file: !3, line: 1545, type: !165)
!8961 = !DILocation(line: 1545, column: 6, scope: !8951)
!8962 = !DILocation(line: 1547, column: 11, scope: !8951)
!8963 = !DILocation(line: 1547, column: 9, scope: !8951)
!8964 = !DILocation(line: 1548, column: 7, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 1548, column: 6)
!8966 = !DILocation(line: 1548, column: 6, scope: !8951)
!8967 = !DILocation(line: 1549, column: 3, scope: !8965)
!8968 = !DILocation(line: 1551, column: 16, scope: !8951)
!8969 = !DILocation(line: 1551, column: 2, scope: !8951)
!8970 = !DILocation(line: 1551, column: 10, scope: !8951)
!8971 = !DILocation(line: 1551, column: 14, scope: !8951)
!8972 = !DILocation(line: 1552, column: 20, scope: !8951)
!8973 = !DILocation(line: 1552, column: 2, scope: !8951)
!8974 = !DILocation(line: 1552, column: 10, scope: !8951)
!8975 = !DILocation(line: 1552, column: 18, scope: !8951)
!8976 = !DILocation(line: 1553, column: 2, scope: !8951)
!8977 = !DILocation(line: 1553, column: 10, scope: !8951)
!8978 = !DILocation(line: 1553, column: 15, scope: !8951)
!8979 = !DILocation(line: 1555, column: 32, scope: !8951)
!8980 = !DILocation(line: 1555, column: 10, scope: !8951)
!8981 = !DILocation(line: 1555, column: 8, scope: !8951)
!8982 = !DILocation(line: 1556, column: 6, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 1556, column: 6)
!8984 = !DILocation(line: 1556, column: 6, scope: !8951)
!8985 = !DILocation(line: 1557, column: 3, scope: !8983)
!8986 = !DILocation(line: 1559, column: 28, scope: !8951)
!8987 = !DILocation(line: 1559, column: 10, scope: !8951)
!8988 = !DILocation(line: 1559, column: 8, scope: !8951)
!8989 = !DILocation(line: 1560, column: 6, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 1560, column: 6)
!8991 = !DILocation(line: 1560, column: 6, scope: !8951)
!8992 = !DILocation(line: 1561, column: 3, scope: !8990)
!8993 = !DILocation(line: 1563, column: 2, scope: !8951)
!8994 = !DILabel(scope: !8951, name: "err_unregister_handle", file: !3, line: 1565)
!8995 = !DILocation(line: 1565, column: 2, scope: !8951)
!8996 = !DILocation(line: 1566, column: 26, scope: !8951)
!8997 = !DILocation(line: 1566, column: 2, scope: !8951)
!8998 = !DILabel(scope: !8951, name: "err_free_handle", file: !3, line: 1567)
!8999 = !DILocation(line: 1567, column: 2, scope: !8951)
!9000 = !DILocation(line: 1568, column: 8, scope: !8951)
!9001 = !DILocation(line: 1568, column: 2, scope: !8951)
!9002 = !DILocation(line: 1569, column: 9, scope: !8951)
!9003 = !DILocation(line: 1569, column: 2, scope: !8951)
!9004 = !DILocation(line: 1570, column: 1, scope: !8951)
!9005 = distinct !DISubprogram(name: "kbd_disconnect", scope: !3, file: !3, line: 1572, type: !4503, scopeLine: 1573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9006 = !DILocalVariable(name: "handle", arg: 1, scope: !9005, file: !3, line: 1572, type: !425)
!9007 = !DILocation(line: 1572, column: 49, scope: !9005)
!9008 = !DILocation(line: 1574, column: 21, scope: !9005)
!9009 = !DILocation(line: 1574, column: 2, scope: !9005)
!9010 = !DILocation(line: 1575, column: 26, scope: !9005)
!9011 = !DILocation(line: 1575, column: 2, scope: !9005)
!9012 = !DILocation(line: 1576, column: 8, scope: !9005)
!9013 = !DILocation(line: 1576, column: 2, scope: !9005)
!9014 = !DILocation(line: 1577, column: 1, scope: !9005)
!9015 = distinct !DISubprogram(name: "kbd_start", scope: !3, file: !3, line: 1583, type: !4503, scopeLine: 1584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9016 = !DILocalVariable(name: "handle", arg: 1, scope: !9015, file: !3, line: 1583, type: !425)
!9017 = !DILocation(line: 1583, column: 44, scope: !9015)
!9018 = !DILocation(line: 1585, column: 2, scope: !9015)
!9019 = !DILocation(line: 1587, column: 6, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 1587, column: 6)
!9021 = !DILocation(line: 1587, column: 15, scope: !9020)
!9022 = !DILocation(line: 1587, column: 6, scope: !9015)
!9023 = !DILocation(line: 1588, column: 26, scope: !9020)
!9024 = !DILocation(line: 1588, column: 3, scope: !9020)
!9025 = !DILocation(line: 1590, column: 2, scope: !9015)
!9026 = !DILocation(line: 1591, column: 1, scope: !9015)
!9027 = distinct !DISubprogram(name: "kbd_rawcode", scope: !3, file: !3, line: 1350, type: !9028, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9028 = !DISubroutineType(types: !9029)
!9029 = !{null, !154}
!9030 = !DILocalVariable(name: "data", arg: 1, scope: !9027, file: !3, line: 1350, type: !154)
!9031 = !DILocation(line: 1350, column: 39, scope: !9027)
!9032 = !DILocalVariable(name: "vc", scope: !9027, file: !3, line: 1352, type: !4531)
!9033 = !DILocation(line: 1352, column: 18, scope: !9027)
!9034 = !DILocation(line: 1352, column: 31, scope: !9027)
!9035 = !DILocation(line: 1352, column: 23, scope: !9027)
!9036 = !DILocation(line: 1352, column: 43, scope: !9027)
!9037 = !DILocation(line: 1354, column: 20, scope: !9027)
!9038 = !DILocation(line: 1354, column: 24, scope: !9027)
!9039 = !DILocation(line: 1354, column: 18, scope: !9027)
!9040 = !DILocation(line: 1354, column: 6, scope: !9027)
!9041 = !DILocation(line: 1355, column: 6, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9027, file: !3, line: 1355, column: 6)
!9043 = !DILocation(line: 1355, column: 11, scope: !9042)
!9044 = !DILocation(line: 1355, column: 19, scope: !9042)
!9045 = !DILocation(line: 1355, column: 6, scope: !9027)
!9046 = !DILocation(line: 1356, column: 13, scope: !9042)
!9047 = !DILocation(line: 1356, column: 17, scope: !9042)
!9048 = !DILocation(line: 1356, column: 3, scope: !9042)
!9049 = !DILocation(line: 1357, column: 1, scope: !9027)
!9050 = distinct !DISubprogram(name: "kbd_keycode", scope: !3, file: !3, line: 1359, type: !9051, scopeLine: 1360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{null, !7, !165, !165}
!9053 = !DILocalVariable(name: "keycode", arg: 1, scope: !9050, file: !3, line: 1359, type: !7)
!9054 = !DILocation(line: 1359, column: 38, scope: !9050)
!9055 = !DILocalVariable(name: "down", arg: 2, scope: !9050, file: !3, line: 1359, type: !165)
!9056 = !DILocation(line: 1359, column: 51, scope: !9050)
!9057 = !DILocalVariable(name: "hw_raw", arg: 3, scope: !9050, file: !3, line: 1359, type: !165)
!9058 = !DILocation(line: 1359, column: 61, scope: !9050)
!9059 = !DILocalVariable(name: "vc", scope: !9050, file: !3, line: 1361, type: !4531)
!9060 = !DILocation(line: 1361, column: 18, scope: !9050)
!9061 = !DILocation(line: 1361, column: 31, scope: !9050)
!9062 = !DILocation(line: 1361, column: 23, scope: !9050)
!9063 = !DILocation(line: 1361, column: 43, scope: !9050)
!9064 = !DILocalVariable(name: "keysym", scope: !9050, file: !3, line: 1362, type: !236)
!9065 = !DILocation(line: 1362, column: 17, scope: !9050)
!9066 = !DILocalVariable(name: "key_map", scope: !9050, file: !3, line: 1362, type: !4565)
!9067 = !DILocation(line: 1362, column: 26, scope: !9050)
!9068 = !DILocalVariable(name: "type", scope: !9050, file: !3, line: 1363, type: !154)
!9069 = !DILocation(line: 1363, column: 16, scope: !9050)
!9070 = !DILocalVariable(name: "raw_mode", scope: !9050, file: !3, line: 1364, type: !292)
!9071 = !DILocation(line: 1364, column: 7, scope: !9050)
!9072 = !DILocalVariable(name: "tty", scope: !9050, file: !3, line: 1365, type: !2060)
!9073 = !DILocation(line: 1365, column: 21, scope: !9050)
!9074 = !DILocalVariable(name: "shift_final", scope: !9050, file: !3, line: 1366, type: !165)
!9075 = !DILocation(line: 1366, column: 6, scope: !9050)
!9076 = !DILocalVariable(name: "param", scope: !9050, file: !3, line: 1367, type: !9077)
!9077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyboard_notifier_param", file: !9078, line: 11, size: 192, elements: !9079)
!9078 = !DIFile(filename: "./include/linux/keyboard.h", directory: "/home/lizy2001/genbc/linux")
!9079 = !{!9080, !9081, !9082, !9083, !9084}
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "vc", scope: !9077, file: !9078, line: 12, baseType: !4531, size: 64)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "down", scope: !9077, file: !9078, line: 13, baseType: !165, size: 32, offset: 64)
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !9077, file: !9078, line: 14, baseType: !165, size: 32, offset: 96)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "ledstate", scope: !9077, file: !9078, line: 15, baseType: !165, size: 32, offset: 128)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9077, file: !9078, line: 16, baseType: !7, size: 32, offset: 160)
!9085 = !DILocation(line: 1367, column: 33, scope: !9050)
!9086 = !DILocation(line: 1367, column: 41, scope: !9050)
!9087 = !DILocation(line: 1367, column: 49, scope: !9050)
!9088 = !DILocation(line: 1367, column: 79, scope: !9050)
!9089 = !DILocation(line: 1367, column: 62, scope: !9050)
!9090 = !DILocalVariable(name: "rc", scope: !9050, file: !3, line: 1368, type: !165)
!9091 = !DILocation(line: 1368, column: 6, scope: !9050)
!9092 = !DILocation(line: 1370, column: 8, scope: !9050)
!9093 = !DILocation(line: 1370, column: 12, scope: !9050)
!9094 = !DILocation(line: 1370, column: 17, scope: !9050)
!9095 = !DILocation(line: 1370, column: 6, scope: !9050)
!9096 = !DILocation(line: 1372, column: 6, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1372, column: 6)
!9098 = !DILocation(line: 1372, column: 10, scope: !9097)
!9099 = !DILocation(line: 1372, column: 15, scope: !9097)
!9100 = !DILocation(line: 1372, column: 20, scope: !9097)
!9101 = !DILocation(line: 1372, column: 6, scope: !9050)
!9102 = !DILocation(line: 1374, column: 22, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 1372, column: 34)
!9104 = !DILocation(line: 1374, column: 3, scope: !9103)
!9105 = !DILocation(line: 1374, column: 8, scope: !9103)
!9106 = !DILocation(line: 1374, column: 20, scope: !9103)
!9107 = !DILocation(line: 1375, column: 2, scope: !9103)
!9108 = !DILocation(line: 1377, column: 20, scope: !9050)
!9109 = !DILocation(line: 1377, column: 24, scope: !9050)
!9110 = !DILocation(line: 1377, column: 18, scope: !9050)
!9111 = !DILocation(line: 1377, column: 6, scope: !9050)
!9112 = !DILocation(line: 1384, column: 9, scope: !9050)
!9113 = !DILocation(line: 1384, column: 14, scope: !9050)
!9114 = !DILocation(line: 1384, column: 8, scope: !9050)
!9115 = !DILocation(line: 1384, column: 6, scope: !9050)
!9116 = !DILocation(line: 1386, column: 14, scope: !9050)
!9117 = !DILocation(line: 1386, column: 19, scope: !9050)
!9118 = !DILocation(line: 1386, column: 27, scope: !9050)
!9119 = !DILocation(line: 1386, column: 11, scope: !9050)
!9120 = !DILocation(line: 1387, column: 6, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1387, column: 6)
!9122 = !DILocation(line: 1387, column: 15, scope: !9121)
!9123 = !DILocation(line: 1387, column: 19, scope: !9121)
!9124 = !DILocation(line: 1387, column: 6, scope: !9050)
!9125 = !DILocation(line: 1388, column: 19, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9121, file: !3, line: 1388, column: 7)
!9127 = !DILocation(line: 1388, column: 23, scope: !9126)
!9128 = !DILocation(line: 1388, column: 33, scope: !9126)
!9129 = !DILocation(line: 1388, column: 32, scope: !9126)
!9130 = !DILocation(line: 1388, column: 38, scope: !9126)
!9131 = !DILocation(line: 1388, column: 7, scope: !9126)
!9132 = !DILocation(line: 1388, column: 7, scope: !9121)
!9133 = !DILocation(line: 1389, column: 8, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 1389, column: 8)
!9135 = !DILocation(line: 1389, column: 16, scope: !9134)
!9136 = !DILocation(line: 1389, column: 27, scope: !9134)
!9137 = !DILocation(line: 1389, column: 30, scope: !9134)
!9138 = !DILocation(line: 1389, column: 8, scope: !9126)
!9139 = !DILocation(line: 1390, column: 5, scope: !9134)
!9140 = !DILocation(line: 1388, column: 42, scope: !9126)
!9141 = !DILocation(line: 1400, column: 6, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1400, column: 6)
!9143 = !DILocation(line: 1400, column: 11, scope: !9142)
!9144 = !DILocation(line: 1400, column: 19, scope: !9142)
!9145 = !DILocation(line: 1400, column: 6, scope: !9050)
!9146 = !DILocation(line: 1410, column: 7, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 1410, column: 7)
!9148 = distinct !DILexicalBlock(scope: !9142, file: !3, line: 1400, column: 36)
!9149 = !DILocation(line: 1410, column: 15, scope: !9147)
!9150 = !DILocation(line: 1410, column: 7, scope: !9148)
!9151 = !DILocation(line: 1411, column: 14, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 1410, column: 22)
!9153 = !DILocation(line: 1411, column: 18, scope: !9152)
!9154 = !DILocation(line: 1411, column: 30, scope: !9152)
!9155 = !DILocation(line: 1411, column: 29, scope: !9152)
!9156 = !DILocation(line: 1411, column: 35, scope: !9152)
!9157 = !DILocation(line: 1411, column: 26, scope: !9152)
!9158 = !DILocation(line: 1411, column: 4, scope: !9152)
!9159 = !DILocation(line: 1412, column: 3, scope: !9152)
!9160 = !DILocation(line: 1413, column: 14, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 1412, column: 10)
!9162 = !DILocation(line: 1413, column: 19, scope: !9161)
!9163 = !DILocation(line: 1413, column: 18, scope: !9161)
!9164 = !DILocation(line: 1413, column: 24, scope: !9161)
!9165 = !DILocation(line: 1413, column: 4, scope: !9161)
!9166 = !DILocation(line: 1414, column: 14, scope: !9161)
!9167 = !DILocation(line: 1414, column: 19, scope: !9161)
!9168 = !DILocation(line: 1414, column: 27, scope: !9161)
!9169 = !DILocation(line: 1414, column: 33, scope: !9161)
!9170 = !DILocation(line: 1414, column: 4, scope: !9161)
!9171 = !DILocation(line: 1415, column: 14, scope: !9161)
!9172 = !DILocation(line: 1415, column: 18, scope: !9161)
!9173 = !DILocation(line: 1415, column: 26, scope: !9161)
!9174 = !DILocation(line: 1415, column: 4, scope: !9161)
!9175 = !DILocation(line: 1417, column: 12, scope: !9148)
!9176 = !DILocation(line: 1418, column: 2, scope: !9148)
!9177 = !DILocation(line: 1420, column: 6, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1420, column: 6)
!9179 = !DILocation(line: 1420, column: 6, scope: !9050)
!9180 = !DILocation(line: 1421, column: 11, scope: !9178)
!9181 = !DILocation(line: 1421, column: 3, scope: !9178)
!9182 = !DILocation(line: 1423, column: 13, scope: !9178)
!9183 = !DILocation(line: 1423, column: 3, scope: !9178)
!9184 = !DILocation(line: 1425, column: 6, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1425, column: 6)
!9186 = !DILocation(line: 1425, column: 10, scope: !9185)
!9187 = !DILocation(line: 1426, column: 20, scope: !9185)
!9188 = !DILocation(line: 1426, column: 8, scope: !9185)
!9189 = !DILocation(line: 1426, column: 36, scope: !9185)
!9190 = !DILocation(line: 1427, column: 8, scope: !9185)
!9191 = !DILocation(line: 1427, column: 12, scope: !9185)
!9192 = !DILocation(line: 1427, column: 16, scope: !9185)
!9193 = !DILocation(line: 1427, column: 28, scope: !9185)
!9194 = !DILocation(line: 1427, column: 51, scope: !9185)
!9195 = !DILocation(line: 1427, column: 31, scope: !9185)
!9196 = !DILocation(line: 1425, column: 6, scope: !9050)
!9197 = !DILocation(line: 1433, column: 3, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9185, file: !3, line: 1427, column: 59)
!9199 = !DILocation(line: 1436, column: 31, scope: !9050)
!9200 = !DILocation(line: 1436, column: 45, scope: !9050)
!9201 = !DILocation(line: 1436, column: 50, scope: !9050)
!9202 = !DILocation(line: 1436, column: 43, scope: !9050)
!9203 = !DILocation(line: 1436, column: 64, scope: !9050)
!9204 = !DILocation(line: 1436, column: 69, scope: !9050)
!9205 = !DILocation(line: 1436, column: 62, scope: !9050)
!9206 = !DILocation(line: 1436, column: 28, scope: !9050)
!9207 = !DILocation(line: 1436, column: 8, scope: !9050)
!9208 = !DILocation(line: 1436, column: 14, scope: !9050)
!9209 = !DILocation(line: 1437, column: 19, scope: !9050)
!9210 = !DILocation(line: 1437, column: 24, scope: !9050)
!9211 = !DILocation(line: 1437, column: 8, scope: !9050)
!9212 = !DILocation(line: 1437, column: 17, scope: !9050)
!9213 = !DILocation(line: 1438, column: 21, scope: !9050)
!9214 = !DILocation(line: 1438, column: 12, scope: !9050)
!9215 = !DILocation(line: 1438, column: 10, scope: !9050)
!9216 = !DILocation(line: 1441, column: 19, scope: !9050)
!9217 = !DILocation(line: 1440, column: 7, scope: !9050)
!9218 = !DILocation(line: 1440, column: 5, scope: !9050)
!9219 = !DILocation(line: 1442, column: 6, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1442, column: 6)
!9221 = !DILocation(line: 1442, column: 9, scope: !9220)
!9222 = !DILocation(line: 1442, column: 24, scope: !9220)
!9223 = !DILocation(line: 1442, column: 28, scope: !9220)
!9224 = !DILocation(line: 1442, column: 6, scope: !9050)
!9225 = !DILocation(line: 1444, column: 30, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 1442, column: 37)
!9227 = !DILocation(line: 1443, column: 3, scope: !9226)
!9228 = !DILocation(line: 1445, column: 3, scope: !9226)
!9229 = !DILocation(line: 1446, column: 3, scope: !9226)
!9230 = !DILocation(line: 1446, column: 8, scope: !9226)
!9231 = !DILocation(line: 1446, column: 19, scope: !9226)
!9232 = !DILocation(line: 1447, column: 3, scope: !9226)
!9233 = !DILocation(line: 1450, column: 6, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1450, column: 6)
!9235 = !DILocation(line: 1450, column: 14, scope: !9234)
!9236 = !DILocation(line: 1450, column: 6, scope: !9050)
!9237 = !DILocation(line: 1451, column: 12, scope: !9234)
!9238 = !DILocation(line: 1451, column: 20, scope: !9234)
!9239 = !DILocation(line: 1451, column: 10, scope: !9234)
!9240 = !DILocation(line: 1451, column: 3, scope: !9234)
!9241 = !DILocation(line: 1452, column: 11, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 1452, column: 11)
!9243 = !DILocation(line: 1452, column: 19, scope: !9242)
!9244 = !DILocation(line: 1452, column: 35, scope: !9242)
!9245 = !DILocation(line: 1452, column: 38, scope: !9242)
!9246 = !DILocation(line: 1452, column: 46, scope: !9242)
!9247 = !DILocation(line: 1452, column: 11, scope: !9234)
!9248 = !DILocation(line: 1453, column: 12, scope: !9242)
!9249 = !DILocation(line: 1453, column: 10, scope: !9242)
!9250 = !DILocation(line: 1453, column: 3, scope: !9242)
!9251 = !DILocation(line: 1455, column: 3, scope: !9242)
!9252 = !DILocation(line: 1457, column: 9, scope: !9050)
!9253 = !DILocation(line: 1457, column: 7, scope: !9050)
!9254 = !DILocation(line: 1459, column: 6, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1459, column: 6)
!9256 = !DILocation(line: 1459, column: 11, scope: !9255)
!9257 = !DILocation(line: 1459, column: 6, scope: !9050)
!9258 = !DILocation(line: 1460, column: 17, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 1459, column: 19)
!9260 = !DILocation(line: 1460, column: 9, scope: !9259)
!9261 = !DILocation(line: 1460, column: 15, scope: !9259)
!9262 = !DILocation(line: 1462, column: 20, scope: !9259)
!9263 = !DILocation(line: 1461, column: 8, scope: !9259)
!9264 = !DILocation(line: 1461, column: 6, scope: !9259)
!9265 = !DILocation(line: 1463, column: 7, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9259, file: !3, line: 1463, column: 7)
!9267 = !DILocation(line: 1463, column: 10, scope: !9266)
!9268 = !DILocation(line: 1463, column: 7, scope: !9259)
!9269 = !DILocation(line: 1464, column: 8, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9266, file: !3, line: 1464, column: 8)
!9271 = !DILocation(line: 1464, column: 13, scope: !9270)
!9272 = !DILocation(line: 1464, column: 17, scope: !9270)
!9273 = !DILocation(line: 1464, column: 8, scope: !9266)
!9274 = !DILocation(line: 1465, column: 15, scope: !9270)
!9275 = !DILocation(line: 1465, column: 19, scope: !9270)
!9276 = !DILocation(line: 1465, column: 28, scope: !9270)
!9277 = !DILocation(line: 1465, column: 27, scope: !9270)
!9278 = !DILocation(line: 1465, column: 5, scope: !9270)
!9279 = !DILocation(line: 1466, column: 3, scope: !9259)
!9280 = !DILocation(line: 1469, column: 7, scope: !9050)
!9281 = !DILocation(line: 1471, column: 6, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1471, column: 6)
!9283 = !DILocation(line: 1471, column: 11, scope: !9282)
!9284 = !DILocation(line: 1471, column: 6, scope: !9050)
!9285 = !DILocation(line: 1472, column: 8, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 1471, column: 25)
!9287 = !DILocation(line: 1473, column: 18, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 1473, column: 7)
!9289 = !DILocation(line: 1473, column: 7, scope: !9288)
!9290 = !DILocation(line: 1473, column: 7, scope: !9286)
!9291 = !DILocation(line: 1474, column: 23, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 1473, column: 37)
!9293 = !DILocation(line: 1474, column: 35, scope: !9292)
!9294 = !DILocation(line: 1474, column: 14, scope: !9292)
!9295 = !DILocation(line: 1474, column: 12, scope: !9292)
!9296 = !DILocation(line: 1475, column: 8, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 1475, column: 8)
!9298 = !DILocation(line: 1475, column: 8, scope: !9292)
!9299 = !DILocation(line: 1476, column: 14, scope: !9297)
!9300 = !DILocation(line: 1476, column: 22, scope: !9297)
!9301 = !DILocation(line: 1476, column: 12, scope: !9297)
!9302 = !DILocation(line: 1476, column: 5, scope: !9297)
!9303 = !DILocation(line: 1477, column: 3, scope: !9292)
!9304 = !DILocation(line: 1478, column: 2, scope: !9286)
!9305 = !DILocation(line: 1480, column: 16, scope: !9050)
!9306 = !DILocation(line: 1480, column: 8, scope: !9050)
!9307 = !DILocation(line: 1480, column: 14, scope: !9050)
!9308 = !DILocation(line: 1482, column: 18, scope: !9050)
!9309 = !DILocation(line: 1481, column: 7, scope: !9050)
!9310 = !DILocation(line: 1481, column: 5, scope: !9050)
!9311 = !DILocation(line: 1483, column: 6, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1483, column: 6)
!9313 = !DILocation(line: 1483, column: 9, scope: !9312)
!9314 = !DILocation(line: 1483, column: 6, scope: !9050)
!9315 = !DILocation(line: 1484, column: 3, scope: !9312)
!9316 = !DILocation(line: 1486, column: 7, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1486, column: 6)
!9318 = !DILocation(line: 1486, column: 16, scope: !9317)
!9319 = !DILocation(line: 1486, column: 19, scope: !9317)
!9320 = !DILocation(line: 1486, column: 24, scope: !9317)
!9321 = !DILocation(line: 1486, column: 32, scope: !9317)
!9322 = !DILocation(line: 1486, column: 43, scope: !9317)
!9323 = !DILocation(line: 1486, column: 46, scope: !9317)
!9324 = !DILocation(line: 1486, column: 51, scope: !9317)
!9325 = !DILocation(line: 1486, column: 62, scope: !9317)
!9326 = !DILocation(line: 1486, column: 65, scope: !9317)
!9327 = !DILocation(line: 1486, column: 70, scope: !9317)
!9328 = !DILocation(line: 1486, column: 6, scope: !9050)
!9329 = !DILocation(line: 1487, column: 3, scope: !9317)
!9330 = !DILocation(line: 1489, column: 14, scope: !9050)
!9331 = !DILocation(line: 1489, column: 4, scope: !9050)
!9332 = !DILocation(line: 1489, column: 21, scope: !9050)
!9333 = !DILocation(line: 1489, column: 25, scope: !9050)
!9334 = !DILocation(line: 1489, column: 32, scope: !9050)
!9335 = !DILocation(line: 1489, column: 41, scope: !9050)
!9336 = !DILocation(line: 1489, column: 40, scope: !9050)
!9337 = !DILocation(line: 1489, column: 2, scope: !9050)
!9338 = !DILocation(line: 1491, column: 19, scope: !9050)
!9339 = !DILocation(line: 1491, column: 24, scope: !9050)
!9340 = !DILocation(line: 1491, column: 8, scope: !9050)
!9341 = !DILocation(line: 1491, column: 17, scope: !9050)
!9342 = !DILocation(line: 1492, column: 71, scope: !9050)
!9343 = !DILocation(line: 1492, column: 2, scope: !9050)
!9344 = !DILocation(line: 1494, column: 6, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1494, column: 6)
!9346 = !DILocation(line: 1494, column: 11, scope: !9345)
!9347 = !DILocation(line: 1494, column: 6, scope: !9050)
!9348 = !DILocation(line: 1495, column: 3, scope: !9345)
!9349 = !DILocation(line: 1495, column: 8, scope: !9345)
!9350 = !DILocation(line: 1495, column: 19, scope: !9345)
!9351 = !DILocation(line: 1496, column: 1, scope: !9050)
!9352 = distinct !DISubprogram(name: "put_queue", scope: !3, file: !3, line: 311, type: !9353, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9353 = !DISubroutineType(types: !9354)
!9354 = !{null, !4531, !165}
!9355 = !DILocalVariable(name: "vc", arg: 1, scope: !9352, file: !3, line: 311, type: !4531)
!9356 = !DILocation(line: 311, column: 39, scope: !9352)
!9357 = !DILocalVariable(name: "ch", arg: 2, scope: !9352, file: !3, line: 311, type: !165)
!9358 = !DILocation(line: 311, column: 47, scope: !9352)
!9359 = !DILocation(line: 313, column: 24, scope: !9352)
!9360 = !DILocation(line: 313, column: 28, scope: !9352)
!9361 = !DILocation(line: 313, column: 34, scope: !9352)
!9362 = !DILocation(line: 313, column: 2, scope: !9352)
!9363 = !DILocation(line: 314, column: 21, scope: !9352)
!9364 = !DILocation(line: 314, column: 25, scope: !9352)
!9365 = !DILocation(line: 314, column: 2, scope: !9352)
!9366 = !DILocation(line: 315, column: 1, scope: !9352)
!9367 = distinct !DISubprogram(name: "tty_insert_flip_char", scope: !9368, file: !9368, line: 18, type: !9369, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9368 = !DIFile(filename: "./include/linux/tty_flip.h", directory: "/home/lizy2001/genbc/linux")
!9369 = !DISubroutineType(types: !9370)
!9370 = !{!165, !2994, !154, !156}
!9371 = !DILocalVariable(name: "port", arg: 1, scope: !9367, file: !9368, line: 18, type: !2994)
!9372 = !DILocation(line: 18, column: 57, scope: !9367)
!9373 = !DILocalVariable(name: "ch", arg: 2, scope: !9367, file: !9368, line: 19, type: !154)
!9374 = !DILocation(line: 19, column: 20, scope: !9367)
!9375 = !DILocalVariable(name: "flag", arg: 3, scope: !9367, file: !9368, line: 19, type: !156)
!9376 = !DILocation(line: 19, column: 29, scope: !9367)
!9377 = !DILocalVariable(name: "tb", scope: !9367, file: !9368, line: 21, type: !3001)
!9378 = !DILocation(line: 21, column: 21, scope: !9367)
!9379 = !DILocation(line: 21, column: 26, scope: !9367)
!9380 = !DILocation(line: 21, column: 32, scope: !9367)
!9381 = !DILocation(line: 21, column: 36, scope: !9367)
!9382 = !DILocalVariable(name: "change", scope: !9367, file: !9368, line: 22, type: !165)
!9383 = !DILocation(line: 22, column: 6, scope: !9367)
!9384 = !DILocation(line: 24, column: 12, scope: !9367)
!9385 = !DILocation(line: 24, column: 16, scope: !9367)
!9386 = !DILocation(line: 24, column: 22, scope: !9367)
!9387 = !DILocation(line: 24, column: 37, scope: !9367)
!9388 = !DILocation(line: 24, column: 41, scope: !9367)
!9389 = !DILocation(line: 24, column: 46, scope: !9367)
!9390 = !DILocation(line: 0, scope: !9367)
!9391 = !DILocation(line: 24, column: 9, scope: !9367)
!9392 = !DILocation(line: 25, column: 7, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9367, file: !9368, line: 25, column: 6)
!9394 = !DILocation(line: 25, column: 14, scope: !9393)
!9395 = !DILocation(line: 25, column: 17, scope: !9393)
!9396 = !DILocation(line: 25, column: 21, scope: !9393)
!9397 = !DILocation(line: 25, column: 28, scope: !9393)
!9398 = !DILocation(line: 25, column: 32, scope: !9393)
!9399 = !DILocation(line: 25, column: 26, scope: !9393)
!9400 = !DILocation(line: 25, column: 6, scope: !9367)
!9401 = !DILocation(line: 26, column: 8, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9403, file: !9368, line: 26, column: 7)
!9403 = distinct !DILexicalBlock(scope: !9393, file: !9368, line: 25, column: 38)
!9404 = !DILocation(line: 26, column: 12, scope: !9402)
!9405 = !DILocation(line: 26, column: 7, scope: !9402)
!9406 = !DILocation(line: 26, column: 18, scope: !9402)
!9407 = !DILocation(line: 26, column: 7, scope: !9403)
!9408 = !DILocation(line: 27, column: 34, scope: !9402)
!9409 = !DILocation(line: 27, column: 18, scope: !9402)
!9410 = !DILocation(line: 27, column: 22, scope: !9402)
!9411 = !DILocation(line: 27, column: 26, scope: !9402)
!9412 = !DILocation(line: 27, column: 5, scope: !9402)
!9413 = !DILocation(line: 27, column: 32, scope: !9402)
!9414 = !DILocation(line: 27, column: 4, scope: !9402)
!9415 = !DILocation(line: 28, column: 35, scope: !9403)
!9416 = !DILocation(line: 28, column: 17, scope: !9403)
!9417 = !DILocation(line: 28, column: 21, scope: !9403)
!9418 = !DILocation(line: 28, column: 25, scope: !9403)
!9419 = !DILocation(line: 28, column: 29, scope: !9403)
!9420 = !DILocation(line: 28, column: 4, scope: !9403)
!9421 = !DILocation(line: 28, column: 33, scope: !9403)
!9422 = !DILocation(line: 29, column: 3, scope: !9403)
!9423 = !DILocation(line: 31, column: 32, scope: !9367)
!9424 = !DILocation(line: 31, column: 38, scope: !9367)
!9425 = !DILocation(line: 31, column: 42, scope: !9367)
!9426 = !DILocation(line: 31, column: 9, scope: !9367)
!9427 = !DILocation(line: 31, column: 2, scope: !9367)
!9428 = !DILocation(line: 32, column: 1, scope: !9367)
!9429 = distinct !DISubprogram(name: "flag_buf_ptr", scope: !2062, file: !2062, line: 80, type: !9430, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9430 = !DISubroutineType(types: !9431)
!9431 = !{!155, !3001, !165}
!9432 = !DILocalVariable(name: "b", arg: 1, scope: !9429, file: !2062, line: 80, type: !3001)
!9433 = !DILocation(line: 80, column: 53, scope: !9429)
!9434 = !DILocalVariable(name: "ofs", arg: 2, scope: !9429, file: !2062, line: 80, type: !165)
!9435 = !DILocation(line: 80, column: 60, scope: !9429)
!9436 = !DILocation(line: 82, column: 30, scope: !9429)
!9437 = !DILocation(line: 82, column: 33, scope: !9429)
!9438 = !DILocation(line: 82, column: 17, scope: !9429)
!9439 = !DILocation(line: 82, column: 40, scope: !9429)
!9440 = !DILocation(line: 82, column: 43, scope: !9429)
!9441 = !DILocation(line: 82, column: 38, scope: !9429)
!9442 = !DILocation(line: 82, column: 2, scope: !9429)
!9443 = distinct !DISubprogram(name: "char_buf_ptr", scope: !2062, file: !2062, line: 75, type: !9444, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9444 = !DISubroutineType(types: !9445)
!9445 = !{!160, !3001, !165}
!9446 = !DILocalVariable(name: "b", arg: 1, scope: !9443, file: !2062, line: 75, type: !3001)
!9447 = !DILocation(line: 75, column: 62, scope: !9443)
!9448 = !DILocalVariable(name: "ofs", arg: 2, scope: !9443, file: !2062, line: 75, type: !165)
!9449 = !DILocation(line: 75, column: 69, scope: !9443)
!9450 = !DILocation(line: 77, column: 27, scope: !9443)
!9451 = !DILocation(line: 77, column: 30, scope: !9443)
!9452 = !DILocation(line: 77, column: 10, scope: !9443)
!9453 = !DILocation(line: 77, column: 38, scope: !9443)
!9454 = !DILocation(line: 77, column: 36, scope: !9443)
!9455 = !DILocation(line: 77, column: 2, scope: !9443)
!9456 = distinct !DISubprogram(name: "emulate_raw", scope: !3, file: !3, line: 1277, type: !9457, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9457 = !DISubroutineType(types: !9458)
!9458 = !{!165, !4531, !7, !154}
!9459 = !DILocalVariable(name: "vc", arg: 1, scope: !9456, file: !3, line: 1277, type: !4531)
!9460 = !DILocation(line: 1277, column: 40, scope: !9456)
!9461 = !DILocalVariable(name: "keycode", arg: 2, scope: !9456, file: !3, line: 1277, type: !7)
!9462 = !DILocation(line: 1277, column: 57, scope: !9456)
!9463 = !DILocalVariable(name: "up_flag", arg: 3, scope: !9456, file: !3, line: 1278, type: !154)
!9464 = !DILocation(line: 1278, column: 24, scope: !9456)
!9465 = !DILocalVariable(name: "code", scope: !9456, file: !3, line: 1280, type: !165)
!9466 = !DILocation(line: 1280, column: 6, scope: !9456)
!9467 = !DILocation(line: 1282, column: 10, scope: !9456)
!9468 = !DILocation(line: 1282, column: 2, scope: !9456)
!9469 = !DILocation(line: 1285, column: 13, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 1282, column: 19)
!9471 = !DILocation(line: 1285, column: 3, scope: !9470)
!9472 = !DILocation(line: 1286, column: 13, scope: !9470)
!9473 = !DILocation(line: 1286, column: 24, scope: !9470)
!9474 = !DILocation(line: 1286, column: 22, scope: !9470)
!9475 = !DILocation(line: 1286, column: 3, scope: !9470)
!9476 = !DILocation(line: 1287, column: 13, scope: !9470)
!9477 = !DILocation(line: 1287, column: 24, scope: !9470)
!9478 = !DILocation(line: 1287, column: 22, scope: !9470)
!9479 = !DILocation(line: 1287, column: 3, scope: !9470)
!9480 = !DILocation(line: 1288, column: 3, scope: !9470)
!9481 = !DILocation(line: 1291, column: 8, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1291, column: 7)
!9483 = !DILocation(line: 1291, column: 7, scope: !9470)
!9484 = !DILocation(line: 1292, column: 14, scope: !9482)
!9485 = !DILocation(line: 1292, column: 4, scope: !9482)
!9486 = !DILocation(line: 1293, column: 3, scope: !9470)
!9487 = !DILocation(line: 1296, column: 8, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1296, column: 7)
!9489 = !DILocation(line: 1296, column: 7, scope: !9470)
!9490 = !DILocation(line: 1297, column: 14, scope: !9488)
!9491 = !DILocation(line: 1297, column: 4, scope: !9488)
!9492 = !DILocation(line: 1298, column: 3, scope: !9470)
!9493 = !DILocation(line: 1307, column: 7, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1307, column: 7)
!9495 = !DILocation(line: 1307, column: 39, scope: !9494)
!9496 = !DILocation(line: 1308, column: 7, scope: !9494)
!9497 = !DILocation(line: 1307, column: 7, scope: !9470)
!9498 = !DILocation(line: 1309, column: 14, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 1308, column: 41)
!9500 = !DILocation(line: 1309, column: 25, scope: !9499)
!9501 = !DILocation(line: 1309, column: 23, scope: !9499)
!9502 = !DILocation(line: 1309, column: 4, scope: !9499)
!9503 = !DILocation(line: 1310, column: 3, scope: !9499)
!9504 = !DILocation(line: 1311, column: 14, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 1310, column: 10)
!9506 = !DILocation(line: 1311, column: 4, scope: !9505)
!9507 = !DILocation(line: 1312, column: 14, scope: !9505)
!9508 = !DILocation(line: 1312, column: 25, scope: !9505)
!9509 = !DILocation(line: 1312, column: 23, scope: !9505)
!9510 = !DILocation(line: 1312, column: 4, scope: !9505)
!9511 = !DILocation(line: 1313, column: 14, scope: !9505)
!9512 = !DILocation(line: 1313, column: 4, scope: !9505)
!9513 = !DILocation(line: 1314, column: 14, scope: !9505)
!9514 = !DILocation(line: 1314, column: 25, scope: !9505)
!9515 = !DILocation(line: 1314, column: 23, scope: !9505)
!9516 = !DILocation(line: 1314, column: 4, scope: !9505)
!9517 = !DILocation(line: 1316, column: 3, scope: !9470)
!9518 = !DILocation(line: 1319, column: 7, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1319, column: 7)
!9520 = !DILocation(line: 1319, column: 15, scope: !9519)
!9521 = !DILocation(line: 1319, column: 7, scope: !9470)
!9522 = !DILocation(line: 1320, column: 4, scope: !9519)
!9523 = !DILocation(line: 1322, column: 23, scope: !9470)
!9524 = !DILocation(line: 1322, column: 10, scope: !9470)
!9525 = !DILocation(line: 1322, column: 8, scope: !9470)
!9526 = !DILocation(line: 1323, column: 8, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1323, column: 7)
!9528 = !DILocation(line: 1323, column: 7, scope: !9470)
!9529 = !DILocation(line: 1324, column: 4, scope: !9527)
!9530 = !DILocation(line: 1326, column: 7, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1326, column: 7)
!9532 = !DILocation(line: 1326, column: 12, scope: !9531)
!9533 = !DILocation(line: 1326, column: 7, scope: !9470)
!9534 = !DILocation(line: 1327, column: 14, scope: !9531)
!9535 = !DILocation(line: 1327, column: 4, scope: !9531)
!9536 = !DILocation(line: 1328, column: 13, scope: !9470)
!9537 = !DILocation(line: 1328, column: 18, scope: !9470)
!9538 = !DILocation(line: 1328, column: 23, scope: !9470)
!9539 = !DILocation(line: 1328, column: 33, scope: !9470)
!9540 = !DILocation(line: 1328, column: 31, scope: !9470)
!9541 = !DILocation(line: 1328, column: 3, scope: !9470)
!9542 = !DILocation(line: 1330, column: 3, scope: !9470)
!9543 = !DILocation(line: 1333, column: 2, scope: !9456)
!9544 = !DILocation(line: 1334, column: 1, scope: !9456)
!9545 = distinct !DISubprogram(name: "set_bit", scope: !9546, file: !9546, line: 26, type: !9547, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9546 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!9547 = !DISubroutineType(types: !9548)
!9548 = !{null, !107, !9549}
!9549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8676, size: 64)
!9550 = !DILocalVariable(name: "nr", arg: 1, scope: !9551, file: !8679, line: 52, type: !107)
!9551 = distinct !DISubprogram(name: "arch_set_bit", scope: !8679, file: !8679, line: 52, type: !9547, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9552 = !DILocation(line: 52, column: 19, scope: !9551, inlinedAt: !9553)
!9553 = distinct !DILocation(line: 29, column: 2, scope: !9545)
!9554 = !DILocalVariable(name: "addr", arg: 2, scope: !9551, file: !8679, line: 52, type: !9549)
!9555 = !DILocation(line: 52, column: 47, scope: !9551, inlinedAt: !9553)
!9556 = !DILocalVariable(name: "v", arg: 1, scope: !9557, file: !5402, line: 84, type: !5405)
!9557 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5402, file: !5402, line: 84, type: !5403, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9558 = !DILocation(line: 84, column: 74, scope: !9557, inlinedAt: !9559)
!9559 = distinct !DILocation(line: 28, column: 2, scope: !9545)
!9560 = !DILocalVariable(name: "size", arg: 2, scope: !9557, file: !5402, line: 84, type: !823)
!9561 = !DILocation(line: 84, column: 84, scope: !9557, inlinedAt: !9559)
!9562 = !DILocalVariable(name: "nr", arg: 1, scope: !9545, file: !9546, line: 26, type: !107)
!9563 = !DILocation(line: 26, column: 33, scope: !9545)
!9564 = !DILocalVariable(name: "addr", arg: 2, scope: !9545, file: !9546, line: 26, type: !9549)
!9565 = !DILocation(line: 26, column: 61, scope: !9545)
!9566 = !DILocation(line: 28, column: 26, scope: !9545)
!9567 = !DILocation(line: 28, column: 33, scope: !9545)
!9568 = !DILocation(line: 28, column: 31, scope: !9545)
!9569 = !DILocation(line: 86, column: 20, scope: !9557, inlinedAt: !9559)
!9570 = !DILocation(line: 86, column: 23, scope: !9557, inlinedAt: !9559)
!9571 = !DILocation(line: 86, column: 2, scope: !9557, inlinedAt: !9559)
!9572 = !DILocation(line: 87, column: 2, scope: !9557, inlinedAt: !9559)
!9573 = !DILocation(line: 29, column: 15, scope: !9545)
!9574 = !DILocation(line: 29, column: 19, scope: !9545)
!9575 = !DILocation(line: 54, column: 27, scope: !9576, inlinedAt: !9553)
!9576 = distinct !DILexicalBlock(scope: !9551, file: !8679, line: 54, column: 6)
!9577 = !DILocation(line: 54, column: 6, scope: !9576, inlinedAt: !9553)
!9578 = !DILocation(line: 54, column: 6, scope: !9551, inlinedAt: !9553)
!9579 = !DILocation(line: 56, column: 6, scope: !9580, inlinedAt: !9553)
!9580 = distinct !DILexicalBlock(scope: !9576, file: !8679, line: 54, column: 32)
!9581 = !DILocation(line: 57, column: 12, scope: !9580, inlinedAt: !9553)
!9582 = !DILocation(line: 55, column: 3, scope: !9580, inlinedAt: !9553)
!9583 = !{i32 -2147099829}
!9584 = !DILocation(line: 59, column: 2, scope: !9580, inlinedAt: !9553)
!9585 = !DILocation(line: 61, column: 8, scope: !9586, inlinedAt: !9553)
!9586 = distinct !DILexicalBlock(scope: !9576, file: !8679, line: 59, column: 9)
!9587 = !DILocation(line: 61, column: 32, scope: !9586, inlinedAt: !9553)
!9588 = !DILocation(line: 60, column: 3, scope: !9586, inlinedAt: !9553)
!9589 = !{i32 -2147099697}
!9590 = !DILocation(line: 30, column: 1, scope: !9545)
!9591 = distinct !DISubprogram(name: "clear_bit", scope: !9546, file: !9546, line: 39, type: !9547, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9592 = !DILocalVariable(name: "nr", arg: 1, scope: !9593, file: !8679, line: 72, type: !107)
!9593 = distinct !DISubprogram(name: "arch_clear_bit", scope: !8679, file: !8679, line: 72, type: !9547, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9594 = !DILocation(line: 72, column: 21, scope: !9593, inlinedAt: !9595)
!9595 = distinct !DILocation(line: 42, column: 2, scope: !9591)
!9596 = !DILocalVariable(name: "addr", arg: 2, scope: !9593, file: !8679, line: 72, type: !9549)
!9597 = !DILocation(line: 72, column: 49, scope: !9593, inlinedAt: !9595)
!9598 = !DILocation(line: 84, column: 74, scope: !9557, inlinedAt: !9599)
!9599 = distinct !DILocation(line: 41, column: 2, scope: !9591)
!9600 = !DILocation(line: 84, column: 84, scope: !9557, inlinedAt: !9599)
!9601 = !DILocalVariable(name: "nr", arg: 1, scope: !9591, file: !9546, line: 39, type: !107)
!9602 = !DILocation(line: 39, column: 35, scope: !9591)
!9603 = !DILocalVariable(name: "addr", arg: 2, scope: !9591, file: !9546, line: 39, type: !9549)
!9604 = !DILocation(line: 39, column: 63, scope: !9591)
!9605 = !DILocation(line: 41, column: 26, scope: !9591)
!9606 = !DILocation(line: 41, column: 33, scope: !9591)
!9607 = !DILocation(line: 41, column: 31, scope: !9591)
!9608 = !DILocation(line: 86, column: 20, scope: !9557, inlinedAt: !9599)
!9609 = !DILocation(line: 86, column: 23, scope: !9557, inlinedAt: !9599)
!9610 = !DILocation(line: 86, column: 2, scope: !9557, inlinedAt: !9599)
!9611 = !DILocation(line: 87, column: 2, scope: !9557, inlinedAt: !9599)
!9612 = !DILocation(line: 42, column: 17, scope: !9591)
!9613 = !DILocation(line: 42, column: 21, scope: !9591)
!9614 = !DILocation(line: 74, column: 27, scope: !9615, inlinedAt: !9595)
!9615 = distinct !DILexicalBlock(scope: !9593, file: !8679, line: 74, column: 6)
!9616 = !DILocation(line: 74, column: 6, scope: !9615, inlinedAt: !9595)
!9617 = !DILocation(line: 74, column: 6, scope: !9593, inlinedAt: !9595)
!9618 = !DILocation(line: 76, column: 6, scope: !9619, inlinedAt: !9595)
!9619 = distinct !DILexicalBlock(scope: !9615, file: !8679, line: 74, column: 32)
!9620 = !DILocation(line: 77, column: 13, scope: !9619, inlinedAt: !9595)
!9621 = !DILocation(line: 77, column: 12, scope: !9619, inlinedAt: !9595)
!9622 = !DILocation(line: 75, column: 3, scope: !9619, inlinedAt: !9595)
!9623 = !{i32 -2147098875}
!9624 = !DILocation(line: 78, column: 2, scope: !9619, inlinedAt: !9595)
!9625 = !DILocation(line: 80, column: 8, scope: !9626, inlinedAt: !9595)
!9626 = distinct !DILexicalBlock(scope: !9615, file: !8679, line: 78, column: 9)
!9627 = !DILocation(line: 80, column: 32, scope: !9626, inlinedAt: !9595)
!9628 = !DILocation(line: 79, column: 3, scope: !9626, inlinedAt: !9595)
!9629 = !{i32 -2147098743}
!9630 = !DILocation(line: 43, column: 1, scope: !9591)
!9631 = distinct !DISubprogram(name: "k_unicode", scope: !3, file: !3, line: 649, type: !4680, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9632 = !DILocalVariable(name: "vc", arg: 1, scope: !9631, file: !3, line: 649, type: !4531)
!9633 = !DILocation(line: 649, column: 39, scope: !9631)
!9634 = !DILocalVariable(name: "value", arg: 2, scope: !9631, file: !3, line: 649, type: !7)
!9635 = !DILocation(line: 649, column: 56, scope: !9631)
!9636 = !DILocalVariable(name: "up_flag", arg: 3, scope: !9631, file: !3, line: 649, type: !156)
!9637 = !DILocation(line: 649, column: 68, scope: !9631)
!9638 = !DILocation(line: 651, column: 6, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 651, column: 6)
!9640 = !DILocation(line: 651, column: 6, scope: !9631)
!9641 = !DILocation(line: 652, column: 3, scope: !9639)
!9642 = !DILocation(line: 654, column: 6, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 654, column: 6)
!9644 = !DILocation(line: 654, column: 6, scope: !9631)
!9645 = !DILocation(line: 655, column: 24, scope: !9643)
!9646 = !DILocation(line: 655, column: 28, scope: !9643)
!9647 = !DILocation(line: 655, column: 11, scope: !9643)
!9648 = !DILocation(line: 655, column: 9, scope: !9643)
!9649 = !DILocation(line: 655, column: 3, scope: !9643)
!9650 = !DILocation(line: 657, column: 6, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 657, column: 6)
!9652 = !DILocation(line: 657, column: 6, scope: !9631)
!9653 = !DILocation(line: 658, column: 17, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 657, column: 21)
!9655 = !DILocation(line: 659, column: 11, scope: !9654)
!9656 = !DILocation(line: 659, column: 9, scope: !9654)
!9657 = !DILocation(line: 660, column: 3, scope: !9654)
!9658 = !DILocation(line: 662, column: 6, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 662, column: 6)
!9660 = !DILocation(line: 662, column: 11, scope: !9659)
!9661 = !DILocation(line: 662, column: 19, scope: !9659)
!9662 = !DILocation(line: 662, column: 6, scope: !9631)
!9663 = !DILocation(line: 663, column: 11, scope: !9659)
!9664 = !DILocation(line: 663, column: 15, scope: !9659)
!9665 = !DILocation(line: 663, column: 3, scope: !9659)
!9666 = !DILocalVariable(name: "c", scope: !9667, file: !3, line: 665, type: !165)
!9667 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 664, column: 7)
!9668 = !DILocation(line: 665, column: 7, scope: !9667)
!9669 = !DILocation(line: 665, column: 28, scope: !9667)
!9670 = !DILocation(line: 665, column: 11, scope: !9667)
!9671 = !DILocation(line: 666, column: 7, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 666, column: 7)
!9673 = !DILocation(line: 666, column: 9, scope: !9672)
!9674 = !DILocation(line: 666, column: 7, scope: !9667)
!9675 = !DILocation(line: 667, column: 14, scope: !9672)
!9676 = !DILocation(line: 667, column: 18, scope: !9672)
!9677 = !DILocation(line: 667, column: 4, scope: !9672)
!9678 = !DILocation(line: 669, column: 1, scope: !9631)
!9679 = distinct !DISubprogram(name: "kasan_check_write", scope: !8725, file: !8725, line: 38, type: !8726, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9680 = !DILocalVariable(name: "p", arg: 1, scope: !9679, file: !8725, line: 38, type: !5405)
!9681 = !DILocation(line: 38, column: 59, scope: !9679)
!9682 = !DILocalVariable(name: "size", arg: 2, scope: !9679, file: !8725, line: 38, type: !7)
!9683 = !DILocation(line: 38, column: 75, scope: !9679)
!9684 = !DILocation(line: 40, column: 2, scope: !9679)
!9685 = distinct !DISubprogram(name: "handle_diacr", scope: !3, file: !3, line: 412, type: !9686, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9686 = !DISubroutineType(types: !9687)
!9687 = !{!7, !4531, !7}
!9688 = !DILocalVariable(name: "vc", arg: 1, scope: !9685, file: !3, line: 412, type: !4531)
!9689 = !DILocation(line: 412, column: 50, scope: !9685)
!9690 = !DILocalVariable(name: "ch", arg: 2, scope: !9685, file: !3, line: 412, type: !7)
!9691 = !DILocation(line: 412, column: 67, scope: !9685)
!9692 = !DILocalVariable(name: "d", scope: !9685, file: !3, line: 414, type: !7)
!9693 = !DILocation(line: 414, column: 15, scope: !9685)
!9694 = !DILocation(line: 414, column: 19, scope: !9685)
!9695 = !DILocalVariable(name: "i", scope: !9685, file: !3, line: 415, type: !7)
!9696 = !DILocation(line: 415, column: 15, scope: !9685)
!9697 = !DILocation(line: 417, column: 8, scope: !9685)
!9698 = !DILocation(line: 419, column: 7, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 419, column: 6)
!9700 = !DILocation(line: 419, column: 9, scope: !9699)
!9701 = !DILocation(line: 419, column: 18, scope: !9699)
!9702 = !DILocation(line: 419, column: 6, scope: !9685)
!9703 = !DILocation(line: 420, column: 8, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !3, line: 420, column: 7)
!9705 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 419, column: 33)
!9706 = !DILocation(line: 420, column: 11, scope: !9704)
!9707 = !DILocation(line: 420, column: 20, scope: !9704)
!9708 = !DILocation(line: 420, column: 7, scope: !9705)
!9709 = !DILocation(line: 421, column: 11, scope: !9704)
!9710 = !DILocation(line: 421, column: 15, scope: !9704)
!9711 = !DILocation(line: 421, column: 13, scope: !9704)
!9712 = !DILocation(line: 421, column: 4, scope: !9704)
!9713 = !DILocation(line: 422, column: 2, scope: !9705)
!9714 = !DILocation(line: 423, column: 10, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !3, line: 423, column: 3)
!9716 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 422, column: 9)
!9717 = !DILocation(line: 423, column: 8, scope: !9715)
!9718 = !DILocation(line: 423, column: 15, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9715, file: !3, line: 423, column: 3)
!9720 = !DILocation(line: 423, column: 19, scope: !9719)
!9721 = !DILocation(line: 423, column: 17, scope: !9719)
!9722 = !DILocation(line: 423, column: 3, scope: !9715)
!9723 = !DILocation(line: 424, column: 21, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 424, column: 8)
!9725 = !DILocation(line: 424, column: 8, scope: !9724)
!9726 = !DILocation(line: 424, column: 24, scope: !9724)
!9727 = !DILocation(line: 424, column: 33, scope: !9724)
!9728 = !DILocation(line: 424, column: 30, scope: !9724)
!9729 = !DILocation(line: 424, column: 35, scope: !9724)
!9730 = !DILocation(line: 424, column: 51, scope: !9724)
!9731 = !DILocation(line: 424, column: 38, scope: !9724)
!9732 = !DILocation(line: 424, column: 54, scope: !9724)
!9733 = !DILocation(line: 424, column: 62, scope: !9724)
!9734 = !DILocation(line: 424, column: 59, scope: !9724)
!9735 = !DILocation(line: 424, column: 8, scope: !9719)
!9736 = !DILocation(line: 425, column: 25, scope: !9724)
!9737 = !DILocation(line: 425, column: 12, scope: !9724)
!9738 = !DILocation(line: 425, column: 28, scope: !9724)
!9739 = !DILocation(line: 425, column: 5, scope: !9724)
!9740 = !DILocation(line: 423, column: 39, scope: !9719)
!9741 = !DILocation(line: 423, column: 3, scope: !9719)
!9742 = distinct !{!9742, !9722, !9743}
!9743 = !DILocation(line: 425, column: 28, scope: !9715)
!9744 = !DILocation(line: 428, column: 6, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 428, column: 6)
!9746 = !DILocation(line: 428, column: 9, scope: !9745)
!9747 = !DILocation(line: 428, column: 16, scope: !9745)
!9748 = !DILocation(line: 428, column: 19, scope: !9745)
!9749 = !DILocation(line: 428, column: 22, scope: !9745)
!9750 = !DILocation(line: 428, column: 40, scope: !9745)
!9751 = !DILocation(line: 428, column: 43, scope: !9745)
!9752 = !DILocation(line: 428, column: 49, scope: !9745)
!9753 = !DILocation(line: 428, column: 46, scope: !9745)
!9754 = !DILocation(line: 428, column: 6, scope: !9685)
!9755 = !DILocation(line: 429, column: 10, scope: !9745)
!9756 = !DILocation(line: 429, column: 3, scope: !9745)
!9757 = !DILocation(line: 431, column: 6, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 431, column: 6)
!9759 = !DILocation(line: 431, column: 11, scope: !9758)
!9760 = !DILocation(line: 431, column: 19, scope: !9758)
!9761 = !DILocation(line: 431, column: 6, scope: !9685)
!9762 = !DILocation(line: 432, column: 11, scope: !9758)
!9763 = !DILocation(line: 432, column: 15, scope: !9758)
!9764 = !DILocation(line: 432, column: 3, scope: !9758)
!9765 = !DILocalVariable(name: "c", scope: !9766, file: !3, line: 434, type: !165)
!9766 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 433, column: 7)
!9767 = !DILocation(line: 434, column: 7, scope: !9766)
!9768 = !DILocation(line: 434, column: 28, scope: !9766)
!9769 = !DILocation(line: 434, column: 11, scope: !9766)
!9770 = !DILocation(line: 435, column: 7, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 435, column: 7)
!9772 = !DILocation(line: 435, column: 9, scope: !9771)
!9773 = !DILocation(line: 435, column: 7, scope: !9766)
!9774 = !DILocation(line: 436, column: 14, scope: !9771)
!9775 = !DILocation(line: 436, column: 18, scope: !9771)
!9776 = !DILocation(line: 436, column: 4, scope: !9771)
!9777 = !DILocation(line: 439, column: 9, scope: !9685)
!9778 = !DILocation(line: 439, column: 2, scope: !9685)
!9779 = !DILocation(line: 440, column: 1, scope: !9685)
!9780 = distinct !DISubprogram(name: "to_utf8", scope: !3, file: !3, line: 341, type: !9781, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9781 = !DISubroutineType(types: !9782)
!9782 = !{null, !4531, !9783}
!9783 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint", file: !152, line: 87, baseType: !7)
!9784 = !DILocalVariable(name: "vc", arg: 1, scope: !9780, file: !3, line: 341, type: !4531)
!9785 = !DILocation(line: 341, column: 37, scope: !9780)
!9786 = !DILocalVariable(name: "c", arg: 2, scope: !9780, file: !3, line: 341, type: !9783)
!9787 = !DILocation(line: 341, column: 46, scope: !9780)
!9788 = !DILocation(line: 343, column: 6, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 343, column: 6)
!9790 = !DILocation(line: 343, column: 8, scope: !9789)
!9791 = !DILocation(line: 343, column: 6, scope: !9780)
!9792 = !DILocation(line: 345, column: 13, scope: !9789)
!9793 = !DILocation(line: 345, column: 17, scope: !9789)
!9794 = !DILocation(line: 345, column: 3, scope: !9789)
!9795 = !DILocation(line: 346, column: 11, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 346, column: 11)
!9797 = !DILocation(line: 346, column: 13, scope: !9796)
!9798 = !DILocation(line: 346, column: 11, scope: !9789)
!9799 = !DILocation(line: 348, column: 13, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9796, file: !3, line: 346, column: 22)
!9801 = !DILocation(line: 348, column: 25, scope: !9800)
!9802 = !DILocation(line: 348, column: 27, scope: !9800)
!9803 = !DILocation(line: 348, column: 22, scope: !9800)
!9804 = !DILocation(line: 348, column: 3, scope: !9800)
!9805 = !DILocation(line: 349, column: 13, scope: !9800)
!9806 = !DILocation(line: 349, column: 25, scope: !9800)
!9807 = !DILocation(line: 349, column: 27, scope: !9800)
!9808 = !DILocation(line: 349, column: 22, scope: !9800)
!9809 = !DILocation(line: 349, column: 3, scope: !9800)
!9810 = !DILocation(line: 350, column: 2, scope: !9800)
!9811 = !DILocation(line: 350, column: 13, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9796, file: !3, line: 350, column: 13)
!9813 = !DILocation(line: 350, column: 15, scope: !9812)
!9814 = !DILocation(line: 350, column: 13, scope: !9796)
!9815 = !DILocation(line: 351, column: 7, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 351, column: 7)
!9817 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 350, column: 26)
!9818 = !DILocation(line: 351, column: 9, scope: !9816)
!9819 = !DILocation(line: 351, column: 19, scope: !9816)
!9820 = !DILocation(line: 351, column: 22, scope: !9816)
!9821 = !DILocation(line: 351, column: 24, scope: !9816)
!9822 = !DILocation(line: 351, column: 7, scope: !9817)
!9823 = !DILocation(line: 352, column: 4, scope: !9816)
!9824 = !DILocation(line: 353, column: 7, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 353, column: 7)
!9826 = !DILocation(line: 353, column: 9, scope: !9825)
!9827 = !DILocation(line: 353, column: 7, scope: !9817)
!9828 = !DILocation(line: 354, column: 4, scope: !9825)
!9829 = !DILocation(line: 356, column: 13, scope: !9817)
!9830 = !DILocation(line: 356, column: 25, scope: !9817)
!9831 = !DILocation(line: 356, column: 27, scope: !9817)
!9832 = !DILocation(line: 356, column: 22, scope: !9817)
!9833 = !DILocation(line: 356, column: 3, scope: !9817)
!9834 = !DILocation(line: 357, column: 13, scope: !9817)
!9835 = !DILocation(line: 357, column: 26, scope: !9817)
!9836 = !DILocation(line: 357, column: 28, scope: !9817)
!9837 = !DILocation(line: 357, column: 34, scope: !9817)
!9838 = !DILocation(line: 357, column: 22, scope: !9817)
!9839 = !DILocation(line: 357, column: 3, scope: !9817)
!9840 = !DILocation(line: 358, column: 13, scope: !9817)
!9841 = !DILocation(line: 358, column: 25, scope: !9817)
!9842 = !DILocation(line: 358, column: 27, scope: !9817)
!9843 = !DILocation(line: 358, column: 22, scope: !9817)
!9844 = !DILocation(line: 358, column: 3, scope: !9817)
!9845 = !DILocation(line: 359, column: 2, scope: !9817)
!9846 = !DILocation(line: 359, column: 13, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 359, column: 13)
!9848 = !DILocation(line: 359, column: 15, scope: !9847)
!9849 = !DILocation(line: 359, column: 13, scope: !9812)
!9850 = !DILocation(line: 361, column: 13, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 359, column: 27)
!9852 = !DILocation(line: 361, column: 25, scope: !9851)
!9853 = !DILocation(line: 361, column: 27, scope: !9851)
!9854 = !DILocation(line: 361, column: 22, scope: !9851)
!9855 = !DILocation(line: 361, column: 3, scope: !9851)
!9856 = !DILocation(line: 362, column: 13, scope: !9851)
!9857 = !DILocation(line: 362, column: 26, scope: !9851)
!9858 = !DILocation(line: 362, column: 28, scope: !9851)
!9859 = !DILocation(line: 362, column: 35, scope: !9851)
!9860 = !DILocation(line: 362, column: 22, scope: !9851)
!9861 = !DILocation(line: 362, column: 3, scope: !9851)
!9862 = !DILocation(line: 363, column: 13, scope: !9851)
!9863 = !DILocation(line: 363, column: 26, scope: !9851)
!9864 = !DILocation(line: 363, column: 28, scope: !9851)
!9865 = !DILocation(line: 363, column: 34, scope: !9851)
!9866 = !DILocation(line: 363, column: 22, scope: !9851)
!9867 = !DILocation(line: 363, column: 3, scope: !9851)
!9868 = !DILocation(line: 364, column: 13, scope: !9851)
!9869 = !DILocation(line: 364, column: 25, scope: !9851)
!9870 = !DILocation(line: 364, column: 27, scope: !9851)
!9871 = !DILocation(line: 364, column: 22, scope: !9851)
!9872 = !DILocation(line: 364, column: 3, scope: !9851)
!9873 = !DILocation(line: 365, column: 2, scope: !9851)
!9874 = !DILocation(line: 366, column: 1, scope: !9780)
!9875 = distinct !DISubprogram(name: "k_self", scope: !3, file: !3, line: 684, type: !4529, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9876 = !DILocalVariable(name: "vc", arg: 1, scope: !9875, file: !3, line: 684, type: !4531)
!9877 = !DILocation(line: 684, column: 36, scope: !9875)
!9878 = !DILocalVariable(name: "value", arg: 2, scope: !9875, file: !3, line: 684, type: !154)
!9879 = !DILocation(line: 684, column: 54, scope: !9875)
!9880 = !DILocalVariable(name: "up_flag", arg: 3, scope: !9875, file: !3, line: 684, type: !156)
!9881 = !DILocation(line: 684, column: 66, scope: !9875)
!9882 = !DILocation(line: 686, column: 12, scope: !9875)
!9883 = !DILocation(line: 686, column: 33, scope: !9875)
!9884 = !DILocation(line: 686, column: 16, scope: !9875)
!9885 = !DILocation(line: 686, column: 41, scope: !9875)
!9886 = !DILocation(line: 686, column: 2, scope: !9875)
!9887 = !DILocation(line: 687, column: 1, scope: !9875)
!9888 = distinct !DISubprogram(name: "k_fn", scope: !3, file: !3, line: 740, type: !4529, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9889 = !DILocation(line: 407, column: 64, scope: !4861, inlinedAt: !9890)
!9890 = distinct !DILocation(line: 751, column: 3, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 745, column: 48)
!9892 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 745, column: 6)
!9893 = !DILocation(line: 407, column: 84, scope: !4861, inlinedAt: !9890)
!9894 = !DILocation(line: 327, column: 67, scope: !4870, inlinedAt: !9895)
!9895 = distinct !DILocation(line: 748, column: 3, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 748, column: 3)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 748, column: 3)
!9898 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 748, column: 3)
!9899 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 748, column: 3)
!9900 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 748, column: 3)
!9901 = !DILocalVariable(name: "vc", arg: 1, scope: !9888, file: !3, line: 740, type: !4531)
!9902 = !DILocation(line: 740, column: 34, scope: !9888)
!9903 = !DILocalVariable(name: "value", arg: 2, scope: !9888, file: !3, line: 740, type: !154)
!9904 = !DILocation(line: 740, column: 52, scope: !9888)
!9905 = !DILocalVariable(name: "up_flag", arg: 3, scope: !9888, file: !3, line: 740, type: !156)
!9906 = !DILocation(line: 740, column: 64, scope: !9888)
!9907 = !DILocation(line: 742, column: 6, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9888, file: !3, line: 742, column: 6)
!9909 = !DILocation(line: 742, column: 6, scope: !9888)
!9910 = !DILocation(line: 743, column: 3, scope: !9908)
!9911 = !DILocation(line: 745, column: 16, scope: !9892)
!9912 = !DILocation(line: 745, column: 6, scope: !9892)
!9913 = !DILocation(line: 745, column: 22, scope: !9892)
!9914 = !DILocation(line: 745, column: 6, scope: !9888)
!9915 = !DILocalVariable(name: "flags", scope: !9891, file: !3, line: 746, type: !158)
!9916 = !DILocation(line: 746, column: 17, scope: !9891)
!9917 = !DILocation(line: 748, column: 3, scope: !9891)
!9918 = !DILocation(line: 748, column: 3, scope: !9900)
!9919 = !DILocalVariable(name: "__dummy", scope: !9920, file: !3, line: 748, type: !158)
!9920 = distinct !DILexicalBlock(scope: !9899, file: !3, line: 748, column: 3)
!9921 = !DILocation(line: 748, column: 3, scope: !9920)
!9922 = !DILocalVariable(name: "__dummy2", scope: !9920, file: !3, line: 748, type: !158)
!9923 = !DILocation(line: 748, column: 3, scope: !9899)
!9924 = !DILocation(line: 748, column: 3, scope: !9898)
!9925 = !DILocation(line: 748, column: 3, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 748, column: 3)
!9927 = !DILocalVariable(name: "__dummy", scope: !9928, file: !3, line: 748, type: !158)
!9928 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 748, column: 3)
!9929 = distinct !DILexicalBlock(scope: !9926, file: !3, line: 748, column: 3)
!9930 = !DILocation(line: 748, column: 3, scope: !9928)
!9931 = !DILocalVariable(name: "__dummy2", scope: !9928, file: !3, line: 748, type: !158)
!9932 = !DILocation(line: 748, column: 3, scope: !9929)
!9933 = !DILocation(line: 748, column: 3, scope: !9897)
!9934 = !{i32 -2141844675}
!9935 = !DILocation(line: 329, column: 10, scope: !4870, inlinedAt: !9895)
!9936 = !DILocation(line: 329, column: 16, scope: !4870, inlinedAt: !9895)
!9937 = !DILocation(line: 748, column: 3, scope: !9896)
!9938 = !DILocation(line: 749, column: 18, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 749, column: 7)
!9940 = !DILocation(line: 749, column: 7, scope: !9939)
!9941 = !DILocation(line: 749, column: 7, scope: !9891)
!9942 = !DILocation(line: 750, column: 15, scope: !9939)
!9943 = !DILocation(line: 750, column: 30, scope: !9939)
!9944 = !DILocation(line: 750, column: 19, scope: !9939)
!9945 = !DILocation(line: 750, column: 4, scope: !9939)
!9946 = !DILocation(line: 751, column: 42, scope: !9891)
!9947 = !DILocation(line: 409, column: 2, scope: !4907, inlinedAt: !9890)
!9948 = !DILocation(line: 409, column: 2, scope: !4912, inlinedAt: !9890)
!9949 = !DILocation(line: 409, column: 2, scope: !4913, inlinedAt: !9890)
!9950 = !DILocation(line: 409, column: 2, scope: !4920, inlinedAt: !9890)
!9951 = !DILocation(line: 409, column: 2, scope: !4923, inlinedAt: !9890)
!9952 = !DILocation(line: 753, column: 2, scope: !9891)
!9953 = !DILocation(line: 754, column: 3, scope: !9892)
!9954 = !DILocation(line: 755, column: 1, scope: !9888)
!9955 = distinct !DISubprogram(name: "k_spec", scope: !3, file: !3, line: 630, type: !4529, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!9956 = !DILocalVariable(name: "vc", arg: 1, scope: !9955, file: !3, line: 630, type: !4531)
!9957 = !DILocation(line: 630, column: 36, scope: !9955)
!9958 = !DILocalVariable(name: "value", arg: 2, scope: !9955, file: !3, line: 630, type: !154)
!9959 = !DILocation(line: 630, column: 54, scope: !9955)
!9960 = !DILocalVariable(name: "up_flag", arg: 3, scope: !9955, file: !3, line: 630, type: !156)
!9961 = !DILocation(line: 630, column: 66, scope: !9955)
!9962 = !DILocation(line: 632, column: 6, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 632, column: 6)
!9964 = !DILocation(line: 632, column: 6, scope: !9955)
!9965 = !DILocation(line: 633, column: 3, scope: !9963)
!9966 = !DILocation(line: 634, column: 6, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 634, column: 6)
!9968 = !DILocation(line: 634, column: 12, scope: !9967)
!9969 = !DILocation(line: 634, column: 6, scope: !9955)
!9970 = !DILocation(line: 635, column: 3, scope: !9967)
!9971 = !DILocation(line: 636, column: 7, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 636, column: 6)
!9973 = !DILocation(line: 636, column: 12, scope: !9972)
!9974 = !DILocation(line: 636, column: 20, scope: !9972)
!9975 = !DILocation(line: 636, column: 30, scope: !9972)
!9976 = !DILocation(line: 637, column: 7, scope: !9972)
!9977 = !DILocation(line: 637, column: 12, scope: !9972)
!9978 = !DILocation(line: 637, column: 20, scope: !9972)
!9979 = !DILocation(line: 637, column: 36, scope: !9972)
!9980 = !DILocation(line: 638, column: 7, scope: !9972)
!9981 = !DILocation(line: 638, column: 12, scope: !9972)
!9982 = !DILocation(line: 638, column: 20, scope: !9972)
!9983 = !DILocation(line: 638, column: 31, scope: !9972)
!9984 = !DILocation(line: 639, column: 7, scope: !9972)
!9985 = !DILocation(line: 639, column: 13, scope: !9972)
!9986 = !DILocation(line: 636, column: 6, scope: !9955)
!9987 = !DILocation(line: 640, column: 3, scope: !9972)
!9988 = !DILocation(line: 641, column: 13, scope: !9955)
!9989 = !DILocation(line: 641, column: 2, scope: !9955)
!9990 = !DILocation(line: 641, column: 20, scope: !9955)
!9991 = !DILocation(line: 642, column: 1, scope: !9955)
!9992 = !DILocalVariable(name: "vc", arg: 1, scope: !4653, file: !3, line: 767, type: !4531)
!9993 = !DILocation(line: 767, column: 35, scope: !4653)
!9994 = !DILocalVariable(name: "value", arg: 2, scope: !4653, file: !3, line: 767, type: !154)
!9995 = !DILocation(line: 767, column: 53, scope: !4653)
!9996 = !DILocalVariable(name: "up_flag", arg: 3, scope: !4653, file: !3, line: 767, type: !156)
!9997 = !DILocation(line: 767, column: 65, scope: !4653)
!9998 = !DILocation(line: 772, column: 6, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 772, column: 6)
!10000 = !DILocation(line: 772, column: 6, scope: !4653)
!10001 = !DILocation(line: 773, column: 3, scope: !9999)
!10002 = !DILocation(line: 776, column: 18, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 776, column: 6)
!10004 = !DILocation(line: 776, column: 6, scope: !10003)
!10005 = !DILocation(line: 776, column: 34, scope: !10003)
!10006 = !DILocation(line: 776, column: 38, scope: !10003)
!10007 = !DILocation(line: 776, column: 6, scope: !4653)
!10008 = !DILocation(line: 777, column: 11, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 776, column: 60)
!10010 = !DILocation(line: 777, column: 23, scope: !10009)
!10011 = !DILocation(line: 777, column: 15, scope: !10009)
!10012 = !DILocation(line: 777, column: 3, scope: !10009)
!10013 = !DILocation(line: 778, column: 3, scope: !10009)
!10014 = !DILocation(line: 781, column: 18, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 781, column: 6)
!10016 = !DILocation(line: 781, column: 7, scope: !10015)
!10017 = !DILocation(line: 781, column: 6, scope: !4653)
!10018 = !DILocation(line: 783, column: 11, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 781, column: 36)
!10020 = !DILocation(line: 783, column: 3, scope: !10019)
!10021 = !DILocation(line: 786, column: 9, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 783, column: 18)
!10023 = !DILocation(line: 786, column: 4, scope: !10022)
!10024 = !DILocation(line: 787, column: 4, scope: !10022)
!10025 = !DILocation(line: 789, column: 9, scope: !10022)
!10026 = !DILocation(line: 789, column: 4, scope: !10022)
!10027 = !DILocation(line: 790, column: 4, scope: !10022)
!10028 = !DILocation(line: 792, column: 9, scope: !10022)
!10029 = !DILocation(line: 792, column: 4, scope: !10022)
!10030 = !DILocation(line: 793, column: 4, scope: !10022)
!10031 = !DILocation(line: 795, column: 10, scope: !10022)
!10032 = !DILocation(line: 795, column: 4, scope: !10022)
!10033 = !DILocation(line: 796, column: 4, scope: !10022)
!10034 = !DILocation(line: 798, column: 9, scope: !10022)
!10035 = !DILocation(line: 798, column: 4, scope: !10022)
!10036 = !DILocation(line: 799, column: 4, scope: !10022)
!10037 = !DILocation(line: 801, column: 10, scope: !10022)
!10038 = !DILocation(line: 801, column: 4, scope: !10022)
!10039 = !DILocation(line: 802, column: 4, scope: !10022)
!10040 = !DILocation(line: 804, column: 10, scope: !10022)
!10041 = !DILocation(line: 804, column: 4, scope: !10022)
!10042 = !DILocation(line: 805, column: 4, scope: !10022)
!10043 = !DILocation(line: 807, column: 9, scope: !10022)
!10044 = !DILocation(line: 807, column: 4, scope: !10022)
!10045 = !DILocation(line: 808, column: 4, scope: !10022)
!10046 = !DILocation(line: 810, column: 10, scope: !10022)
!10047 = !DILocation(line: 810, column: 4, scope: !10022)
!10048 = !DILocation(line: 811, column: 4, scope: !10022)
!10049 = !DILocation(line: 813, column: 9, scope: !10022)
!10050 = !DILocation(line: 813, column: 4, scope: !10022)
!10051 = !DILocation(line: 814, column: 4, scope: !10022)
!10052 = !DILocation(line: 816, column: 12, scope: !10022)
!10053 = !DILocation(line: 816, column: 33, scope: !10022)
!10054 = !DILocation(line: 816, column: 21, scope: !10022)
!10055 = !DILocation(line: 816, column: 4, scope: !10022)
!10056 = !DILocation(line: 817, column: 4, scope: !10022)
!10057 = !DILocation(line: 819, column: 2, scope: !10019)
!10058 = !DILocation(line: 821, column: 12, scope: !4653)
!10059 = !DILocation(line: 821, column: 26, scope: !4653)
!10060 = !DILocation(line: 821, column: 16, scope: !4653)
!10061 = !DILocation(line: 821, column: 2, scope: !4653)
!10062 = !DILocation(line: 822, column: 6, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 822, column: 6)
!10064 = !DILocation(line: 822, column: 12, scope: !10063)
!10065 = !DILocation(line: 822, column: 30, scope: !10063)
!10066 = !DILocation(line: 822, column: 45, scope: !10063)
!10067 = !DILocation(line: 822, column: 33, scope: !10063)
!10068 = !DILocation(line: 822, column: 6, scope: !4653)
!10069 = !DILocation(line: 823, column: 13, scope: !10063)
!10070 = !DILocation(line: 823, column: 3, scope: !10063)
!10071 = !DILocation(line: 824, column: 1, scope: !4653)
!10072 = !DILocalVariable(name: "vc", arg: 1, scope: !4658, file: !3, line: 697, type: !4531)
!10073 = !DILocation(line: 697, column: 36, scope: !4658)
!10074 = !DILocalVariable(name: "value", arg: 2, scope: !4658, file: !3, line: 697, type: !154)
!10075 = !DILocation(line: 697, column: 54, scope: !4658)
!10076 = !DILocalVariable(name: "up_flag", arg: 3, scope: !4658, file: !3, line: 697, type: !156)
!10077 = !DILocation(line: 697, column: 66, scope: !4658)
!10078 = !DILocation(line: 729, column: 16, scope: !4658)
!10079 = !DILocation(line: 729, column: 30, scope: !4658)
!10080 = !DILocation(line: 729, column: 20, scope: !4658)
!10081 = !DILocation(line: 729, column: 38, scope: !4658)
!10082 = !DILocation(line: 729, column: 2, scope: !4658)
!10083 = !DILocation(line: 730, column: 1, scope: !4658)
!10084 = distinct !DISubprogram(name: "k_cons", scope: !3, file: !3, line: 732, type: !4529, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10085 = !DILocalVariable(name: "vc", arg: 1, scope: !10084, file: !3, line: 732, type: !4531)
!10086 = !DILocation(line: 732, column: 36, scope: !10084)
!10087 = !DILocalVariable(name: "value", arg: 2, scope: !10084, file: !3, line: 732, type: !154)
!10088 = !DILocation(line: 732, column: 54, scope: !10084)
!10089 = !DILocalVariable(name: "up_flag", arg: 3, scope: !10084, file: !3, line: 732, type: !156)
!10090 = !DILocation(line: 732, column: 66, scope: !10084)
!10091 = !DILocation(line: 734, column: 6, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 734, column: 6)
!10093 = !DILocation(line: 734, column: 6, scope: !10084)
!10094 = !DILocation(line: 735, column: 3, scope: !10092)
!10095 = !DILocation(line: 737, column: 14, scope: !10084)
!10096 = !DILocation(line: 737, column: 2, scope: !10084)
!10097 = !DILocation(line: 738, column: 1, scope: !10084)
!10098 = !DILocalVariable(name: "vc", arg: 1, scope: !4664, file: !3, line: 757, type: !4531)
!10099 = !DILocation(line: 757, column: 35, scope: !4664)
!10100 = !DILocalVariable(name: "value", arg: 2, scope: !4664, file: !3, line: 757, type: !154)
!10101 = !DILocation(line: 757, column: 53, scope: !4664)
!10102 = !DILocalVariable(name: "up_flag", arg: 3, scope: !4664, file: !3, line: 757, type: !156)
!10103 = !DILocation(line: 757, column: 65, scope: !4664)
!10104 = !DILocation(line: 761, column: 6, scope: !10105)
!10105 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 761, column: 6)
!10106 = !DILocation(line: 761, column: 6, scope: !4664)
!10107 = !DILocation(line: 762, column: 3, scope: !10105)
!10108 = !DILocation(line: 764, column: 10, scope: !4664)
!10109 = !DILocation(line: 764, column: 24, scope: !4664)
!10110 = !DILocation(line: 764, column: 14, scope: !4664)
!10111 = !DILocation(line: 764, column: 44, scope: !4664)
!10112 = !DILocation(line: 764, column: 32, scope: !4664)
!10113 = !DILocation(line: 764, column: 2, scope: !4664)
!10114 = !DILocation(line: 765, column: 1, scope: !4664)
!10115 = distinct !DISubprogram(name: "k_shift", scope: !3, file: !3, line: 826, type: !4529, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10116 = !DILocalVariable(name: "vc", arg: 1, scope: !10115, file: !3, line: 826, type: !4531)
!10117 = !DILocation(line: 826, column: 37, scope: !10115)
!10118 = !DILocalVariable(name: "value", arg: 2, scope: !10115, file: !3, line: 826, type: !154)
!10119 = !DILocation(line: 826, column: 55, scope: !10115)
!10120 = !DILocalVariable(name: "up_flag", arg: 3, scope: !10115, file: !3, line: 826, type: !156)
!10121 = !DILocation(line: 826, column: 67, scope: !10115)
!10122 = !DILocalVariable(name: "old_state", scope: !10115, file: !3, line: 828, type: !165)
!10123 = !DILocation(line: 828, column: 6, scope: !10115)
!10124 = !DILocation(line: 828, column: 18, scope: !10115)
!10125 = !DILocation(line: 830, column: 6, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 830, column: 6)
!10127 = !DILocation(line: 830, column: 6, scope: !10115)
!10128 = !DILocation(line: 831, column: 3, scope: !10126)
!10129 = !DILocation(line: 836, column: 6, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 836, column: 6)
!10131 = !DILocation(line: 836, column: 12, scope: !10130)
!10132 = !DILocation(line: 836, column: 6, scope: !10115)
!10133 = !DILocation(line: 837, column: 9, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 836, column: 34)
!10135 = !DILocation(line: 838, column: 8, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 838, column: 7)
!10137 = !DILocation(line: 838, column: 7, scope: !10134)
!10138 = !DILocation(line: 839, column: 19, scope: !10136)
!10139 = !DILocation(line: 839, column: 4, scope: !10136)
!10140 = !DILocation(line: 840, column: 2, scope: !10134)
!10141 = !DILocation(line: 842, column: 6, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 842, column: 6)
!10143 = !DILocation(line: 842, column: 6, scope: !10115)
!10144 = !DILocation(line: 847, column: 18, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 847, column: 7)
!10146 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 842, column: 15)
!10147 = !DILocation(line: 847, column: 7, scope: !10145)
!10148 = !DILocation(line: 847, column: 7, scope: !10146)
!10149 = !DILocation(line: 848, column: 15, scope: !10145)
!10150 = !DILocation(line: 848, column: 4, scope: !10145)
!10151 = !DILocation(line: 848, column: 21, scope: !10145)
!10152 = !DILocation(line: 849, column: 2, scope: !10146)
!10153 = !DILocation(line: 850, column: 14, scope: !10142)
!10154 = !DILocation(line: 850, column: 3, scope: !10142)
!10155 = !DILocation(line: 850, column: 20, scope: !10142)
!10156 = !DILocation(line: 852, column: 17, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 852, column: 6)
!10158 = !DILocation(line: 852, column: 6, scope: !10157)
!10159 = !DILocation(line: 852, column: 6, scope: !10115)
!10160 = !DILocation(line: 853, column: 24, scope: !10157)
!10161 = !DILocation(line: 853, column: 21, scope: !10157)
!10162 = !DILocation(line: 853, column: 15, scope: !10157)
!10163 = !DILocation(line: 853, column: 3, scope: !10157)
!10164 = !DILocation(line: 855, column: 25, scope: !10157)
!10165 = !DILocation(line: 855, column: 22, scope: !10157)
!10166 = !DILocation(line: 855, column: 18, scope: !10157)
!10167 = !DILocation(line: 855, column: 15, scope: !10157)
!10168 = !DILocation(line: 858, column: 6, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 858, column: 6)
!10170 = !DILocation(line: 858, column: 14, scope: !10169)
!10171 = !DILocation(line: 858, column: 17, scope: !10169)
!10172 = !DILocation(line: 858, column: 32, scope: !10169)
!10173 = !DILocation(line: 858, column: 29, scope: !10169)
!10174 = !DILocation(line: 858, column: 42, scope: !10169)
!10175 = !DILocation(line: 858, column: 45, scope: !10169)
!10176 = !DILocation(line: 858, column: 6, scope: !10115)
!10177 = !DILocation(line: 859, column: 7, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 859, column: 7)
!10179 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 858, column: 60)
!10180 = !DILocation(line: 859, column: 12, scope: !10178)
!10181 = !DILocation(line: 859, column: 20, scope: !10178)
!10182 = !DILocation(line: 859, column: 7, scope: !10179)
!10183 = !DILocation(line: 860, column: 12, scope: !10178)
!10184 = !DILocation(line: 860, column: 16, scope: !10178)
!10185 = !DILocation(line: 860, column: 4, scope: !10178)
!10186 = !DILocation(line: 862, column: 14, scope: !10178)
!10187 = !DILocation(line: 862, column: 18, scope: !10178)
!10188 = !DILocation(line: 862, column: 31, scope: !10178)
!10189 = !DILocation(line: 862, column: 4, scope: !10178)
!10190 = !DILocation(line: 863, column: 17, scope: !10179)
!10191 = !DILocation(line: 864, column: 2, scope: !10179)
!10192 = !DILocation(line: 865, column: 1, scope: !10115)
!10193 = distinct !DISubprogram(name: "k_meta", scope: !3, file: !3, line: 867, type: !4529, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10194 = !DILocalVariable(name: "vc", arg: 1, scope: !10193, file: !3, line: 867, type: !4531)
!10195 = !DILocation(line: 867, column: 36, scope: !10193)
!10196 = !DILocalVariable(name: "value", arg: 2, scope: !10193, file: !3, line: 867, type: !154)
!10197 = !DILocation(line: 867, column: 54, scope: !10193)
!10198 = !DILocalVariable(name: "up_flag", arg: 3, scope: !10193, file: !3, line: 867, type: !156)
!10199 = !DILocation(line: 867, column: 66, scope: !10193)
!10200 = !DILocation(line: 869, column: 6, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 869, column: 6)
!10202 = !DILocation(line: 869, column: 6, scope: !10193)
!10203 = !DILocation(line: 870, column: 3, scope: !10201)
!10204 = !DILocation(line: 872, column: 18, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 872, column: 6)
!10206 = !DILocation(line: 872, column: 6, scope: !10205)
!10207 = !DILocation(line: 872, column: 6, scope: !10193)
!10208 = !DILocation(line: 873, column: 13, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 872, column: 33)
!10210 = !DILocation(line: 873, column: 3, scope: !10209)
!10211 = !DILocation(line: 874, column: 13, scope: !10209)
!10212 = !DILocation(line: 874, column: 17, scope: !10209)
!10213 = !DILocation(line: 874, column: 3, scope: !10209)
!10214 = !DILocation(line: 875, column: 2, scope: !10209)
!10215 = !DILocation(line: 876, column: 13, scope: !10205)
!10216 = !DILocation(line: 876, column: 17, scope: !10205)
!10217 = !DILocation(line: 876, column: 23, scope: !10205)
!10218 = !DILocation(line: 876, column: 3, scope: !10205)
!10219 = !DILocation(line: 877, column: 1, scope: !10193)
!10220 = distinct !DISubprogram(name: "k_ascii", scope: !3, file: !3, line: 879, type: !4529, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10221 = !DILocalVariable(name: "vc", arg: 1, scope: !10220, file: !3, line: 879, type: !4531)
!10222 = !DILocation(line: 879, column: 37, scope: !10220)
!10223 = !DILocalVariable(name: "value", arg: 2, scope: !10220, file: !3, line: 879, type: !154)
!10224 = !DILocation(line: 879, column: 55, scope: !10220)
!10225 = !DILocalVariable(name: "up_flag", arg: 3, scope: !10220, file: !3, line: 879, type: !156)
!10226 = !DILocation(line: 879, column: 67, scope: !10220)
!10227 = !DILocalVariable(name: "base", scope: !10220, file: !3, line: 881, type: !7)
!10228 = !DILocation(line: 881, column: 15, scope: !10220)
!10229 = !DILocation(line: 883, column: 6, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 883, column: 6)
!10231 = !DILocation(line: 883, column: 6, scope: !10220)
!10232 = !DILocation(line: 884, column: 3, scope: !10230)
!10233 = !DILocation(line: 886, column: 6, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 886, column: 6)
!10235 = !DILocation(line: 886, column: 12, scope: !10234)
!10236 = !DILocation(line: 886, column: 6, scope: !10220)
!10237 = !DILocation(line: 888, column: 8, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 886, column: 18)
!10239 = !DILocation(line: 889, column: 2, scope: !10238)
!10240 = !DILocation(line: 891, column: 9, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 889, column: 9)
!10242 = !DILocation(line: 892, column: 8, scope: !10241)
!10243 = !DILocation(line: 895, column: 7, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 895, column: 6)
!10245 = !DILocation(line: 895, column: 6, scope: !10220)
!10246 = !DILocation(line: 896, column: 16, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10244, file: !3, line: 895, column: 22)
!10248 = !DILocation(line: 897, column: 17, scope: !10247)
!10249 = !DILocation(line: 898, column: 2, scope: !10247)
!10250 = !DILocation(line: 900, column: 17, scope: !10220)
!10251 = !DILocation(line: 900, column: 32, scope: !10220)
!10252 = !DILocation(line: 900, column: 30, scope: !10220)
!10253 = !DILocation(line: 900, column: 39, scope: !10220)
!10254 = !DILocation(line: 900, column: 37, scope: !10220)
!10255 = !DILocation(line: 900, column: 15, scope: !10220)
!10256 = !DILocation(line: 901, column: 1, scope: !10220)
!10257 = distinct !DISubprogram(name: "k_lock", scope: !3, file: !3, line: 903, type: !4529, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10258 = !DILocalVariable(name: "vc", arg: 1, scope: !10257, file: !3, line: 903, type: !4531)
!10259 = !DILocation(line: 903, column: 36, scope: !10257)
!10260 = !DILocalVariable(name: "value", arg: 2, scope: !10257, file: !3, line: 903, type: !154)
!10261 = !DILocation(line: 903, column: 54, scope: !10257)
!10262 = !DILocalVariable(name: "up_flag", arg: 3, scope: !10257, file: !3, line: 903, type: !156)
!10263 = !DILocation(line: 903, column: 66, scope: !10257)
!10264 = !DILocation(line: 905, column: 6, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 905, column: 6)
!10266 = !DILocation(line: 905, column: 14, scope: !10265)
!10267 = !DILocation(line: 905, column: 17, scope: !10265)
!10268 = !DILocation(line: 905, column: 6, scope: !10257)
!10269 = !DILocation(line: 906, column: 3, scope: !10265)
!10270 = !DILocation(line: 908, column: 18, scope: !10257)
!10271 = !DILocation(line: 908, column: 23, scope: !10257)
!10272 = !DILocation(line: 908, column: 2, scope: !10257)
!10273 = !DILocation(line: 909, column: 1, scope: !10257)
!10274 = distinct !DISubprogram(name: "k_lowercase", scope: !3, file: !3, line: 644, type: !4529, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10275 = !DILocalVariable(name: "vc", arg: 1, scope: !10274, file: !3, line: 644, type: !4531)
!10276 = !DILocation(line: 644, column: 41, scope: !10274)
!10277 = !DILocalVariable(name: "value", arg: 2, scope: !10274, file: !3, line: 644, type: !154)
!10278 = !DILocation(line: 644, column: 59, scope: !10274)
!10279 = !DILocalVariable(name: "up_flag", arg: 3, scope: !10274, file: !3, line: 644, type: !156)
!10280 = !DILocation(line: 644, column: 71, scope: !10274)
!10281 = !DILocation(line: 646, column: 2, scope: !10274)
!10282 = !DILocation(line: 647, column: 1, scope: !10274)
!10283 = distinct !DISubprogram(name: "k_slock", scope: !3, file: !3, line: 911, type: !4529, scopeLine: 912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10284 = !DILocalVariable(name: "vc", arg: 1, scope: !10283, file: !3, line: 911, type: !4531)
!10285 = !DILocation(line: 911, column: 37, scope: !10283)
!10286 = !DILocalVariable(name: "value", arg: 2, scope: !10283, file: !3, line: 911, type: !154)
!10287 = !DILocation(line: 911, column: 55, scope: !10283)
!10288 = !DILocalVariable(name: "up_flag", arg: 3, scope: !10283, file: !3, line: 911, type: !156)
!10289 = !DILocation(line: 911, column: 67, scope: !10283)
!10290 = !DILocation(line: 913, column: 10, scope: !10283)
!10291 = !DILocation(line: 913, column: 14, scope: !10283)
!10292 = !DILocation(line: 913, column: 21, scope: !10283)
!10293 = !DILocation(line: 913, column: 2, scope: !10283)
!10294 = !DILocation(line: 914, column: 6, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 914, column: 6)
!10296 = !DILocation(line: 914, column: 14, scope: !10295)
!10297 = !DILocation(line: 914, column: 17, scope: !10295)
!10298 = !DILocation(line: 914, column: 6, scope: !10283)
!10299 = !DILocation(line: 915, column: 3, scope: !10295)
!10300 = !DILocation(line: 917, column: 19, scope: !10283)
!10301 = !DILocation(line: 917, column: 24, scope: !10283)
!10302 = !DILocation(line: 917, column: 2, scope: !10283)
!10303 = !DILocation(line: 919, column: 16, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 919, column: 6)
!10305 = !DILocation(line: 919, column: 21, scope: !10304)
!10306 = !DILocation(line: 919, column: 33, scope: !10304)
!10307 = !DILocation(line: 919, column: 38, scope: !10304)
!10308 = !DILocation(line: 919, column: 31, scope: !10304)
!10309 = !DILocation(line: 919, column: 7, scope: !10304)
!10310 = !DILocation(line: 919, column: 6, scope: !10283)
!10311 = !DILocation(line: 920, column: 3, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 919, column: 51)
!10313 = !DILocation(line: 920, column: 8, scope: !10312)
!10314 = !DILocation(line: 920, column: 19, scope: !10312)
!10315 = !DILocation(line: 921, column: 20, scope: !10312)
!10316 = !DILocation(line: 921, column: 25, scope: !10312)
!10317 = !DILocation(line: 921, column: 3, scope: !10312)
!10318 = !DILocation(line: 922, column: 2, scope: !10312)
!10319 = !DILocation(line: 923, column: 1, scope: !10283)
!10320 = distinct !DISubprogram(name: "k_dead2", scope: !3, file: !3, line: 689, type: !4529, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10321 = !DILocalVariable(name: "vc", arg: 1, scope: !10320, file: !3, line: 689, type: !4531)
!10322 = !DILocation(line: 689, column: 37, scope: !10320)
!10323 = !DILocalVariable(name: "value", arg: 2, scope: !10320, file: !3, line: 689, type: !154)
!10324 = !DILocation(line: 689, column: 55, scope: !10320)
!10325 = !DILocalVariable(name: "up_flag", arg: 3, scope: !10320, file: !3, line: 689, type: !156)
!10326 = !DILocation(line: 689, column: 67, scope: !10320)
!10327 = !DILocation(line: 691, column: 16, scope: !10320)
!10328 = !DILocation(line: 691, column: 20, scope: !10320)
!10329 = !DILocation(line: 691, column: 27, scope: !10320)
!10330 = !DILocation(line: 691, column: 2, scope: !10320)
!10331 = !DILocation(line: 692, column: 1, scope: !10320)
!10332 = !DILocalVariable(name: "m", arg: 1, scope: !10333, file: !10334, line: 363, type: !4270)
!10333 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !10334, file: !10334, line: 363, type: !10335, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10334 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!10335 = !DISubroutineType(types: !10336)
!10336 = !{!158, !4270}
!10337 = !DILocation(line: 363, column: 74, scope: !10333, inlinedAt: !10338)
!10338 = distinct !DILocation(line: 977, column: 7, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10340, file: !3, line: 976, column: 7)
!10340 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 975, column: 26)
!10341 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 975, column: 13)
!10342 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 971, column: 6)
!10343 = !DILocalVariable(name: "vc", arg: 1, scope: !4672, file: !3, line: 952, type: !4531)
!10344 = !DILocation(line: 952, column: 35, scope: !4672)
!10345 = !DILocalVariable(name: "value", arg: 2, scope: !4672, file: !3, line: 952, type: !154)
!10346 = !DILocation(line: 952, column: 53, scope: !4672)
!10347 = !DILocalVariable(name: "up_flag", arg: 3, scope: !4672, file: !3, line: 952, type: !156)
!10348 = !DILocation(line: 952, column: 65, scope: !4672)
!10349 = !DILocation(line: 957, column: 6, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 957, column: 6)
!10351 = !DILocation(line: 957, column: 11, scope: !10350)
!10352 = !DILocation(line: 957, column: 19, scope: !10350)
!10353 = !DILocation(line: 957, column: 6, scope: !4672)
!10354 = !DILocation(line: 958, column: 8, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10356, file: !3, line: 958, column: 7)
!10356 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 957, column: 34)
!10357 = !DILocation(line: 958, column: 7, scope: !10356)
!10358 = !DILocation(line: 959, column: 4, scope: !10355)
!10359 = !DILocation(line: 960, column: 3, scope: !10356)
!10360 = !DILocation(line: 963, column: 7, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 963, column: 6)
!10362 = !DILocation(line: 963, column: 6, scope: !4672)
!10363 = !DILocation(line: 964, column: 13, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 963, column: 14)
!10365 = !DILocation(line: 964, column: 29, scope: !10364)
!10366 = !DILocation(line: 964, column: 3, scope: !10364)
!10367 = !DILocation(line: 965, column: 3, scope: !10364)
!10368 = !DILocation(line: 968, column: 6, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 968, column: 6)
!10370 = !DILocation(line: 968, column: 12, scope: !10369)
!10371 = !DILocation(line: 968, column: 6, scope: !4672)
!10372 = !DILocation(line: 969, column: 3, scope: !10369)
!10373 = !DILocation(line: 971, column: 7, scope: !10342)
!10374 = !DILocation(line: 971, column: 6, scope: !4672)
!10375 = !DILocation(line: 972, column: 20, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 971, column: 16)
!10377 = !DILocation(line: 972, column: 26, scope: !10376)
!10378 = !DILocation(line: 972, column: 16, scope: !10376)
!10379 = !DILocation(line: 972, column: 11, scope: !10376)
!10380 = !DILocation(line: 973, column: 8, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10376, file: !3, line: 973, column: 7)
!10382 = !DILocation(line: 973, column: 7, scope: !10376)
!10383 = !DILocation(line: 974, column: 17, scope: !10381)
!10384 = !DILocation(line: 974, column: 15, scope: !10381)
!10385 = !DILocation(line: 974, column: 4, scope: !10381)
!10386 = !DILocation(line: 975, column: 2, scope: !10376)
!10387 = !DILocation(line: 975, column: 13, scope: !10341)
!10388 = !DILocation(line: 975, column: 13, scope: !10342)
!10389 = !DILocation(line: 976, column: 8, scope: !10339)
!10390 = !DILocation(line: 976, column: 19, scope: !10339)
!10391 = !DILocation(line: 977, column: 7, scope: !10339)
!10392 = !DILocation(line: 365, column: 27, scope: !10393, inlinedAt: !10338)
!10393 = distinct !DILexicalBlock(scope: !10333, file: !10334, line: 365, column: 6)
!10394 = !DILocation(line: 365, column: 6, scope: !10393, inlinedAt: !10338)
!10395 = !DILocation(line: 365, column: 6, scope: !10333, inlinedAt: !10338)
!10396 = !DILocation(line: 366, column: 12, scope: !10397, inlinedAt: !10338)
!10397 = distinct !DILexicalBlock(scope: !10398, file: !10334, line: 366, column: 7)
!10398 = distinct !DILexicalBlock(scope: !10393, file: !10334, line: 365, column: 31)
!10399 = !DILocation(line: 366, column: 14, scope: !10397, inlinedAt: !10338)
!10400 = !DILocation(line: 366, column: 7, scope: !10398, inlinedAt: !10338)
!10401 = !DILocation(line: 367, column: 4, scope: !10397, inlinedAt: !10338)
!10402 = !DILocation(line: 368, column: 28, scope: !10398, inlinedAt: !10338)
!10403 = !DILocation(line: 368, column: 10, scope: !10398, inlinedAt: !10338)
!10404 = !DILocation(line: 368, column: 3, scope: !10398, inlinedAt: !10338)
!10405 = !DILocation(line: 370, column: 29, scope: !10406, inlinedAt: !10338)
!10406 = distinct !DILexicalBlock(scope: !10393, file: !10334, line: 369, column: 9)
!10407 = !DILocation(line: 370, column: 10, scope: !10406, inlinedAt: !10338)
!10408 = !DILocation(line: 370, column: 3, scope: !10406, inlinedAt: !10338)
!10409 = !DILocation(line: 372, column: 1, scope: !10333, inlinedAt: !10338)
!10410 = !DILocation(line: 976, column: 7, scope: !10340)
!10411 = !DILocation(line: 979, column: 17, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 978, column: 58)
!10413 = !DILocation(line: 979, column: 15, scope: !10412)
!10414 = !DILocation(line: 980, column: 19, scope: !10412)
!10415 = !DILocation(line: 980, column: 17, scope: !10412)
!10416 = !DILocation(line: 981, column: 3, scope: !10412)
!10417 = !DILocation(line: 982, column: 22, scope: !10340)
!10418 = !DILocation(line: 982, column: 28, scope: !10340)
!10419 = !DILocation(line: 982, column: 18, scope: !10340)
!10420 = !DILocation(line: 982, column: 14, scope: !10340)
!10421 = !DILocation(line: 982, column: 11, scope: !10340)
!10422 = !DILocation(line: 983, column: 8, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10340, file: !3, line: 983, column: 7)
!10424 = !DILocation(line: 983, column: 16, scope: !10423)
!10425 = !DILocation(line: 983, column: 19, scope: !10423)
!10426 = !DILocation(line: 983, column: 7, scope: !10340)
!10427 = !DILocation(line: 984, column: 16, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 983, column: 31)
!10429 = !DILocation(line: 984, column: 20, scope: !10428)
!10430 = !DILocation(line: 984, column: 4, scope: !10428)
!10431 = !DILocation(line: 985, column: 15, scope: !10428)
!10432 = !DILocation(line: 986, column: 3, scope: !10428)
!10433 = !DILocation(line: 987, column: 2, scope: !10340)
!10434 = !DILocation(line: 988, column: 7, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10436, file: !3, line: 988, column: 7)
!10436 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 987, column: 9)
!10437 = !DILocation(line: 988, column: 7, scope: !10436)
!10438 = !DILocation(line: 989, column: 16, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 988, column: 19)
!10440 = !DILocation(line: 989, column: 20, scope: !10439)
!10441 = !DILocation(line: 989, column: 4, scope: !10439)
!10442 = !DILocation(line: 990, column: 15, scope: !10439)
!10443 = !DILocation(line: 991, column: 3, scope: !10439)
!10444 = !DILocation(line: 992, column: 22, scope: !10436)
!10445 = !DILocation(line: 992, column: 28, scope: !10436)
!10446 = !DILocation(line: 992, column: 18, scope: !10436)
!10447 = !DILocation(line: 992, column: 14, scope: !10436)
!10448 = !DILocation(line: 992, column: 11, scope: !10436)
!10449 = !DILocation(line: 994, column: 1, scope: !4672)
!10450 = distinct !DISubprogram(name: "k_ignore", scope: !3, file: !3, line: 626, type: !4529, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10451 = !DILocalVariable(name: "vc", arg: 1, scope: !10450, file: !3, line: 626, type: !4531)
!10452 = !DILocation(line: 626, column: 38, scope: !10450)
!10453 = !DILocalVariable(name: "value", arg: 2, scope: !10450, file: !3, line: 626, type: !154)
!10454 = !DILocation(line: 626, column: 56, scope: !10450)
!10455 = !DILocalVariable(name: "up_flag", arg: 3, scope: !10450, file: !3, line: 626, type: !156)
!10456 = !DILocation(line: 626, column: 68, scope: !10450)
!10457 = !DILocation(line: 628, column: 1, scope: !10450)
!10458 = distinct !DISubprogram(name: "puts_queue", scope: !3, file: !3, line: 317, type: !10459, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10459 = !DISubroutineType(types: !10460)
!10460 = !{null, !4531, !155}
!10461 = !DILocalVariable(name: "vc", arg: 1, scope: !10458, file: !3, line: 317, type: !4531)
!10462 = !DILocation(line: 317, column: 40, scope: !10458)
!10463 = !DILocalVariable(name: "cp", arg: 2, scope: !10458, file: !3, line: 317, type: !155)
!10464 = !DILocation(line: 317, column: 50, scope: !10458)
!10465 = !DILocation(line: 319, column: 2, scope: !10458)
!10466 = !DILocation(line: 319, column: 10, scope: !10458)
!10467 = !DILocation(line: 319, column: 9, scope: !10458)
!10468 = !DILocation(line: 320, column: 25, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 319, column: 14)
!10470 = !DILocation(line: 320, column: 29, scope: !10469)
!10471 = !DILocation(line: 320, column: 36, scope: !10469)
!10472 = !DILocation(line: 320, column: 35, scope: !10469)
!10473 = !DILocation(line: 320, column: 3, scope: !10469)
!10474 = !DILocation(line: 321, column: 5, scope: !10469)
!10475 = distinct !{!10475, !10465, !10476}
!10476 = !DILocation(line: 322, column: 2, scope: !10458)
!10477 = !DILocation(line: 323, column: 21, scope: !10458)
!10478 = !DILocation(line: 323, column: 25, scope: !10458)
!10479 = !DILocation(line: 323, column: 2, scope: !10458)
!10480 = !DILocation(line: 324, column: 1, scope: !10458)
!10481 = distinct !DISubprogram(name: "fn_null", scope: !3, file: !3, line: 618, type: !4643, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10482 = !DILocalVariable(name: "vc", arg: 1, scope: !10481, file: !3, line: 618, type: !4531)
!10483 = !DILocation(line: 618, column: 37, scope: !10481)
!10484 = !DILocation(line: 620, column: 2, scope: !10481)
!10485 = !DILocation(line: 621, column: 1, scope: !10481)
!10486 = distinct !DISubprogram(name: "fn_enter", scope: !3, file: !3, line: 445, type: !4643, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10487 = !DILocalVariable(name: "vc", arg: 1, scope: !10486, file: !3, line: 445, type: !4531)
!10488 = !DILocation(line: 445, column: 38, scope: !10486)
!10489 = !DILocation(line: 447, column: 6, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10486, file: !3, line: 447, column: 6)
!10491 = !DILocation(line: 447, column: 6, scope: !10486)
!10492 = !DILocation(line: 448, column: 7, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 448, column: 7)
!10494 = distinct !DILexicalBlock(scope: !10490, file: !3, line: 447, column: 13)
!10495 = !DILocation(line: 448, column: 12, scope: !10493)
!10496 = !DILocation(line: 448, column: 20, scope: !10493)
!10497 = !DILocation(line: 448, column: 7, scope: !10494)
!10498 = !DILocation(line: 449, column: 12, scope: !10493)
!10499 = !DILocation(line: 449, column: 16, scope: !10493)
!10500 = !DILocation(line: 449, column: 4, scope: !10493)
!10501 = !DILocalVariable(name: "c", scope: !10502, file: !3, line: 451, type: !165)
!10502 = distinct !DILexicalBlock(scope: !10493, file: !3, line: 450, column: 8)
!10503 = !DILocation(line: 451, column: 8, scope: !10502)
!10504 = !DILocation(line: 451, column: 29, scope: !10502)
!10505 = !DILocation(line: 451, column: 12, scope: !10502)
!10506 = !DILocation(line: 452, column: 8, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10502, file: !3, line: 452, column: 8)
!10508 = !DILocation(line: 452, column: 10, scope: !10507)
!10509 = !DILocation(line: 452, column: 8, scope: !10502)
!10510 = !DILocation(line: 453, column: 15, scope: !10507)
!10511 = !DILocation(line: 453, column: 19, scope: !10507)
!10512 = !DILocation(line: 453, column: 5, scope: !10507)
!10513 = !DILocation(line: 455, column: 9, scope: !10494)
!10514 = !DILocation(line: 456, column: 2, scope: !10494)
!10515 = !DILocation(line: 458, column: 12, scope: !10486)
!10516 = !DILocation(line: 458, column: 2, scope: !10486)
!10517 = !DILocation(line: 459, column: 18, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10486, file: !3, line: 459, column: 6)
!10519 = !DILocation(line: 459, column: 6, scope: !10518)
!10520 = !DILocation(line: 459, column: 6, scope: !10486)
!10521 = !DILocation(line: 460, column: 13, scope: !10518)
!10522 = !DILocation(line: 460, column: 3, scope: !10518)
!10523 = !DILocation(line: 461, column: 1, scope: !10486)
!10524 = distinct !DISubprogram(name: "fn_show_ptregs", scope: !3, file: !3, line: 479, type: !4643, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10525 = !DILocalVariable(name: "vc", arg: 1, scope: !10524, file: !3, line: 479, type: !4531)
!10526 = !DILocation(line: 479, column: 44, scope: !10524)
!10527 = !DILocalVariable(name: "regs", scope: !10524, file: !3, line: 481, type: !167)
!10528 = !DILocation(line: 481, column: 18, scope: !10524)
!10529 = !DILocation(line: 481, column: 25, scope: !10524)
!10530 = !DILocation(line: 483, column: 6, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 483, column: 6)
!10532 = !DILocation(line: 483, column: 6, scope: !10524)
!10533 = !DILocation(line: 484, column: 13, scope: !10531)
!10534 = !DILocation(line: 484, column: 3, scope: !10531)
!10535 = !DILocation(line: 485, column: 1, scope: !10524)
!10536 = distinct !DISubprogram(name: "fn_show_mem", scope: !3, file: !3, line: 581, type: !4643, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10537 = !DILocalVariable(name: "vc", arg: 1, scope: !10536, file: !3, line: 581, type: !4531)
!10538 = !DILocation(line: 581, column: 41, scope: !10536)
!10539 = !DILocation(line: 583, column: 2, scope: !10536)
!10540 = !DILocation(line: 584, column: 1, scope: !10536)
!10541 = distinct !DISubprogram(name: "fn_show_state", scope: !3, file: !3, line: 586, type: !4643, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10542 = !DILocalVariable(name: "vc", arg: 1, scope: !10541, file: !3, line: 586, type: !4531)
!10543 = !DILocation(line: 586, column: 43, scope: !10541)
!10544 = !DILocation(line: 588, column: 2, scope: !10541)
!10545 = !DILocation(line: 589, column: 1, scope: !10541)
!10546 = distinct !DISubprogram(name: "fn_send_intr", scope: !3, file: !3, line: 565, type: !4643, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10547 = !DILocalVariable(name: "vc", arg: 1, scope: !10546, file: !3, line: 565, type: !4531)
!10548 = !DILocation(line: 565, column: 42, scope: !10546)
!10549 = !DILocation(line: 567, column: 24, scope: !10546)
!10550 = !DILocation(line: 567, column: 28, scope: !10546)
!10551 = !DILocation(line: 567, column: 2, scope: !10546)
!10552 = !DILocation(line: 568, column: 21, scope: !10546)
!10553 = !DILocation(line: 568, column: 25, scope: !10546)
!10554 = !DILocation(line: 568, column: 2, scope: !10546)
!10555 = !DILocation(line: 569, column: 1, scope: !10546)
!10556 = distinct !DISubprogram(name: "fn_lastcons", scope: !3, file: !3, line: 525, type: !4643, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10557 = !DILocalVariable(name: "vc", arg: 1, scope: !10556, file: !3, line: 525, type: !4531)
!10558 = !DILocation(line: 525, column: 41, scope: !10556)
!10559 = !DILocation(line: 528, column: 14, scope: !10556)
!10560 = !DILocation(line: 528, column: 2, scope: !10556)
!10561 = !DILocation(line: 529, column: 1, scope: !10556)
!10562 = distinct !DISubprogram(name: "fn_caps_toggle", scope: !3, file: !3, line: 463, type: !4643, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10563 = !DILocalVariable(name: "vc", arg: 1, scope: !10562, file: !3, line: 463, type: !4531)
!10564 = !DILocation(line: 463, column: 44, scope: !10562)
!10565 = !DILocation(line: 465, column: 6, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10562, file: !3, line: 465, column: 6)
!10567 = !DILocation(line: 465, column: 6, scope: !10562)
!10568 = !DILocation(line: 466, column: 3, scope: !10566)
!10569 = !DILocation(line: 468, column: 17, scope: !10562)
!10570 = !DILocation(line: 468, column: 2, scope: !10562)
!10571 = !DILocation(line: 469, column: 1, scope: !10562)
!10572 = distinct !DISubprogram(name: "fn_num", scope: !3, file: !3, line: 505, type: !4643, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10573 = !DILocalVariable(name: "vc", arg: 1, scope: !10572, file: !3, line: 505, type: !4531)
!10574 = !DILocation(line: 505, column: 36, scope: !10572)
!10575 = !DILocation(line: 507, column: 18, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 507, column: 6)
!10577 = !DILocation(line: 507, column: 6, scope: !10576)
!10578 = !DILocation(line: 507, column: 6, scope: !10572)
!10579 = !DILocation(line: 508, column: 11, scope: !10576)
!10580 = !DILocation(line: 508, column: 3, scope: !10576)
!10581 = !DILocation(line: 510, column: 15, scope: !10576)
!10582 = !DILocation(line: 510, column: 3, scope: !10576)
!10583 = !DILocation(line: 511, column: 1, scope: !10572)
!10584 = distinct !DISubprogram(name: "fn_hold", scope: !3, file: !3, line: 487, type: !4643, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10585 = !DILocalVariable(name: "vc", arg: 1, scope: !10584, file: !3, line: 487, type: !4531)
!10586 = !DILocation(line: 487, column: 37, scope: !10584)
!10587 = !DILocalVariable(name: "tty", scope: !10584, file: !3, line: 489, type: !2060)
!10588 = !DILocation(line: 489, column: 21, scope: !10584)
!10589 = !DILocation(line: 489, column: 27, scope: !10584)
!10590 = !DILocation(line: 489, column: 31, scope: !10584)
!10591 = !DILocation(line: 489, column: 36, scope: !10584)
!10592 = !DILocation(line: 491, column: 6, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 491, column: 6)
!10594 = !DILocation(line: 491, column: 10, scope: !10593)
!10595 = !DILocation(line: 491, column: 14, scope: !10593)
!10596 = !DILocation(line: 491, column: 6, scope: !10584)
!10597 = !DILocation(line: 492, column: 3, scope: !10593)
!10598 = !DILocation(line: 499, column: 6, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 499, column: 6)
!10600 = !DILocation(line: 499, column: 11, scope: !10599)
!10601 = !DILocation(line: 499, column: 6, scope: !10584)
!10602 = !DILocation(line: 500, column: 13, scope: !10599)
!10603 = !DILocation(line: 500, column: 3, scope: !10599)
!10604 = !DILocation(line: 502, column: 12, scope: !10599)
!10605 = !DILocation(line: 502, column: 3, scope: !10599)
!10606 = !DILocation(line: 503, column: 1, scope: !10584)
!10607 = distinct !DISubprogram(name: "fn_scroll_forw", scope: !3, file: !3, line: 571, type: !4643, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10608 = !DILocalVariable(name: "vc", arg: 1, scope: !10607, file: !3, line: 571, type: !4531)
!10609 = !DILocation(line: 571, column: 44, scope: !10607)
!10610 = !DILocation(line: 573, column: 14, scope: !10607)
!10611 = !DILocation(line: 573, column: 2, scope: !10607)
!10612 = !DILocation(line: 574, column: 1, scope: !10607)
!10613 = distinct !DISubprogram(name: "fn_scroll_back", scope: !3, file: !3, line: 576, type: !4643, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10614 = !DILocalVariable(name: "vc", arg: 1, scope: !10613, file: !3, line: 576, type: !4531)
!10615 = !DILocation(line: 576, column: 44, scope: !10613)
!10616 = !DILocation(line: 578, column: 13, scope: !10613)
!10617 = !DILocation(line: 578, column: 2, scope: !10613)
!10618 = !DILocation(line: 579, column: 1, scope: !10613)
!10619 = distinct !DISubprogram(name: "fn_boot_it", scope: !3, file: !3, line: 591, type: !4643, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10620 = !DILocalVariable(name: "vc", arg: 1, scope: !10619, file: !3, line: 591, type: !4531)
!10621 = !DILocation(line: 591, column: 40, scope: !10619)
!10622 = !DILocation(line: 593, column: 2, scope: !10619)
!10623 = !DILocation(line: 594, column: 1, scope: !10619)
!10624 = distinct !DISubprogram(name: "fn_caps_on", scope: !3, file: !3, line: 471, type: !4643, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10625 = !DILocalVariable(name: "vc", arg: 1, scope: !10624, file: !3, line: 471, type: !4531)
!10626 = !DILocation(line: 471, column: 40, scope: !10624)
!10627 = !DILocation(line: 473, column: 6, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 473, column: 6)
!10629 = !DILocation(line: 473, column: 6, scope: !10624)
!10630 = !DILocation(line: 474, column: 3, scope: !10628)
!10631 = !DILocation(line: 476, column: 17, scope: !10624)
!10632 = !DILocation(line: 476, column: 2, scope: !10624)
!10633 = !DILocation(line: 477, column: 1, scope: !10624)
!10634 = distinct !DISubprogram(name: "fn_compose", scope: !3, file: !3, line: 596, type: !4643, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10635 = !DILocalVariable(name: "vc", arg: 1, scope: !10634, file: !3, line: 596, type: !4531)
!10636 = !DILocation(line: 596, column: 40, scope: !10634)
!10637 = !DILocation(line: 598, column: 16, scope: !10634)
!10638 = !DILocation(line: 599, column: 1, scope: !10634)
!10639 = distinct !DISubprogram(name: "fn_SAK", scope: !3, file: !3, line: 612, type: !4643, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10640 = !DILocalVariable(name: "vc", arg: 1, scope: !10639, file: !3, line: 612, type: !4531)
!10641 = !DILocation(line: 612, column: 36, scope: !10639)
!10642 = !DILocalVariable(name: "SAK_work", scope: !10639, file: !3, line: 614, type: !2584)
!10643 = !DILocation(line: 614, column: 22, scope: !10639)
!10644 = !DILocation(line: 614, column: 42, scope: !10639)
!10645 = !DILocation(line: 614, column: 34, scope: !10639)
!10646 = !DILocation(line: 614, column: 54, scope: !10639)
!10647 = !DILocation(line: 615, column: 16, scope: !10639)
!10648 = !DILocation(line: 615, column: 2, scope: !10639)
!10649 = !DILocation(line: 616, column: 1, scope: !10639)
!10650 = distinct !DISubprogram(name: "fn_dec_console", scope: !3, file: !3, line: 531, type: !4643, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10651 = !DILocalVariable(name: "vc", arg: 1, scope: !10650, file: !3, line: 531, type: !4531)
!10652 = !DILocation(line: 531, column: 44, scope: !10650)
!10653 = !DILocalVariable(name: "i", scope: !10650, file: !3, line: 533, type: !165)
!10654 = !DILocation(line: 533, column: 6, scope: !10650)
!10655 = !DILocalVariable(name: "cur", scope: !10650, file: !3, line: 533, type: !165)
!10656 = !DILocation(line: 533, column: 9, scope: !10650)
!10657 = !DILocation(line: 533, column: 15, scope: !10650)
!10658 = !DILocation(line: 536, column: 6, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10650, file: !3, line: 536, column: 6)
!10660 = !DILocation(line: 536, column: 19, scope: !10659)
!10661 = !DILocation(line: 536, column: 6, scope: !10650)
!10662 = !DILocation(line: 537, column: 9, scope: !10659)
!10663 = !DILocation(line: 537, column: 7, scope: !10659)
!10664 = !DILocation(line: 537, column: 3, scope: !10659)
!10665 = !DILocation(line: 539, column: 11, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10650, file: !3, line: 539, column: 2)
!10667 = !DILocation(line: 539, column: 15, scope: !10666)
!10668 = !DILocation(line: 539, column: 9, scope: !10666)
!10669 = !DILocation(line: 539, column: 7, scope: !10666)
!10670 = !DILocation(line: 539, column: 20, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 539, column: 2)
!10672 = !DILocation(line: 539, column: 25, scope: !10671)
!10673 = !DILocation(line: 539, column: 22, scope: !10671)
!10674 = !DILocation(line: 539, column: 2, scope: !10666)
!10675 = !DILocation(line: 540, column: 7, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 540, column: 7)
!10677 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 539, column: 35)
!10678 = !DILocation(line: 540, column: 9, scope: !10676)
!10679 = !DILocation(line: 540, column: 7, scope: !10677)
!10680 = !DILocation(line: 541, column: 6, scope: !10676)
!10681 = !DILocation(line: 541, column: 4, scope: !10676)
!10682 = !DILocation(line: 542, column: 25, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10677, file: !3, line: 542, column: 7)
!10684 = !DILocation(line: 542, column: 7, scope: !10683)
!10685 = !DILocation(line: 542, column: 7, scope: !10677)
!10686 = !DILocation(line: 543, column: 4, scope: !10683)
!10687 = !DILocation(line: 544, column: 2, scope: !10677)
!10688 = !DILocation(line: 539, column: 31, scope: !10671)
!10689 = !DILocation(line: 539, column: 2, scope: !10671)
!10690 = distinct !{!10690, !10674, !10691}
!10691 = !DILocation(line: 544, column: 2, scope: !10666)
!10692 = !DILocation(line: 545, column: 14, scope: !10650)
!10693 = !DILocation(line: 545, column: 2, scope: !10650)
!10694 = !DILocation(line: 546, column: 1, scope: !10650)
!10695 = distinct !DISubprogram(name: "fn_inc_console", scope: !3, file: !3, line: 548, type: !4643, scopeLine: 549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10696 = !DILocalVariable(name: "vc", arg: 1, scope: !10695, file: !3, line: 548, type: !4531)
!10697 = !DILocation(line: 548, column: 44, scope: !10695)
!10698 = !DILocalVariable(name: "i", scope: !10695, file: !3, line: 550, type: !165)
!10699 = !DILocation(line: 550, column: 6, scope: !10695)
!10700 = !DILocalVariable(name: "cur", scope: !10695, file: !3, line: 550, type: !165)
!10701 = !DILocation(line: 550, column: 9, scope: !10695)
!10702 = !DILocation(line: 550, column: 15, scope: !10695)
!10703 = !DILocation(line: 553, column: 6, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 553, column: 6)
!10705 = !DILocation(line: 553, column: 19, scope: !10704)
!10706 = !DILocation(line: 553, column: 6, scope: !10695)
!10707 = !DILocation(line: 554, column: 9, scope: !10704)
!10708 = !DILocation(line: 554, column: 7, scope: !10704)
!10709 = !DILocation(line: 554, column: 3, scope: !10704)
!10710 = !DILocation(line: 556, column: 11, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10695, file: !3, line: 556, column: 2)
!10712 = !DILocation(line: 556, column: 14, scope: !10711)
!10713 = !DILocation(line: 556, column: 9, scope: !10711)
!10714 = !DILocation(line: 556, column: 7, scope: !10711)
!10715 = !DILocation(line: 556, column: 18, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 556, column: 2)
!10717 = !DILocation(line: 556, column: 23, scope: !10716)
!10718 = !DILocation(line: 556, column: 20, scope: !10716)
!10719 = !DILocation(line: 556, column: 2, scope: !10711)
!10720 = !DILocation(line: 557, column: 7, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 557, column: 7)
!10722 = distinct !DILexicalBlock(scope: !10716, file: !3, line: 556, column: 33)
!10723 = !DILocation(line: 557, column: 9, scope: !10721)
!10724 = !DILocation(line: 557, column: 7, scope: !10722)
!10725 = !DILocation(line: 558, column: 6, scope: !10721)
!10726 = !DILocation(line: 558, column: 4, scope: !10721)
!10727 = !DILocation(line: 559, column: 25, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 559, column: 7)
!10729 = !DILocation(line: 559, column: 7, scope: !10728)
!10730 = !DILocation(line: 559, column: 7, scope: !10722)
!10731 = !DILocation(line: 560, column: 4, scope: !10728)
!10732 = !DILocation(line: 561, column: 2, scope: !10722)
!10733 = !DILocation(line: 556, column: 29, scope: !10716)
!10734 = !DILocation(line: 556, column: 2, scope: !10716)
!10735 = distinct !{!10735, !10719, !10736}
!10736 = !DILocation(line: 561, column: 2, scope: !10711)
!10737 = !DILocation(line: 562, column: 14, scope: !10695)
!10738 = !DILocation(line: 562, column: 2, scope: !10695)
!10739 = !DILocation(line: 563, column: 1, scope: !10695)
!10740 = distinct !DISubprogram(name: "fn_spawn_con", scope: !3, file: !3, line: 601, type: !4643, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10741 = !DILocation(line: 392, column: 53, scope: !8462, inlinedAt: !10742)
!10742 = distinct !DILocation(line: 609, column: 2, scope: !10740)
!10743 = !DILocation(line: 352, column: 51, scope: !8468, inlinedAt: !10744)
!10744 = distinct !DILocation(line: 603, column: 2, scope: !10740)
!10745 = !DILocalVariable(name: "vc", arg: 1, scope: !10740, file: !3, line: 601, type: !4531)
!10746 = !DILocation(line: 601, column: 42, scope: !10740)
!10747 = !DILocation(line: 354, column: 2, scope: !8525, inlinedAt: !10744)
!10748 = !DILocation(line: 354, column: 2, scope: !8528, inlinedAt: !10744)
!10749 = !DILocation(line: 604, column: 19, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10740, file: !3, line: 604, column: 6)
!10751 = !DILocation(line: 604, column: 6, scope: !10750)
!10752 = !DILocation(line: 604, column: 6, scope: !10740)
!10753 = !DILocation(line: 605, column: 29, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 605, column: 7)
!10755 = !DILocation(line: 605, column: 47, scope: !10754)
!10756 = !DILocation(line: 605, column: 7, scope: !10754)
!10757 = !DILocation(line: 605, column: 7, scope: !10750)
!10758 = !DILocation(line: 606, column: 25, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10754, file: !3, line: 605, column: 56)
!10760 = !DILocation(line: 606, column: 4, scope: !10759)
!10761 = !DILocation(line: 607, column: 21, scope: !10759)
!10762 = !DILocation(line: 608, column: 3, scope: !10759)
!10763 = !DILocation(line: 605, column: 53, scope: !10754)
!10764 = !DILocation(line: 394, column: 2, scope: !8538, inlinedAt: !10742)
!10765 = !DILocation(line: 394, column: 2, scope: !8541, inlinedAt: !10742)
!10766 = !DILocation(line: 610, column: 1, scope: !10740)
!10767 = distinct !DISubprogram(name: "fn_bare_num", scope: !3, file: !3, line: 519, type: !4643, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10768 = !DILocalVariable(name: "vc", arg: 1, scope: !10767, file: !3, line: 519, type: !4531)
!10769 = !DILocation(line: 519, column: 41, scope: !10767)
!10770 = !DILocation(line: 521, column: 7, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 521, column: 6)
!10772 = !DILocation(line: 521, column: 6, scope: !10767)
!10773 = !DILocation(line: 522, column: 18, scope: !10771)
!10774 = !DILocation(line: 522, column: 3, scope: !10771)
!10775 = !DILocation(line: 523, column: 1, scope: !10767)
!10776 = distinct !DISubprogram(name: "get_irq_regs", scope: !10777, file: !10777, line: 19, type: !10778, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10777 = !DIFile(filename: "./include/asm-generic/irq_regs.h", directory: "/home/lizy2001/genbc/linux")
!10778 = !DISubroutineType(types: !10779)
!10779 = !{!167}
!10780 = !DILocation(line: 21, column: 9, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10776, file: !10777, line: 21, column: 9)
!10782 = !DILocalVariable(name: "pscr_ret__", scope: !10783, file: !10777, line: 21, type: !167)
!10783 = distinct !DILexicalBlock(scope: !10781, file: !10777, line: 21, column: 9)
!10784 = !DILocation(line: 21, column: 9, scope: !10783)
!10785 = !DILocalVariable(name: "__vpp_verify", scope: !10786, file: !10777, line: 21, type: !2207)
!10786 = distinct !DILexicalBlock(scope: !10783, file: !10777, line: 21, column: 9)
!10787 = !DILocation(line: 21, column: 9, scope: !10786)
!10788 = !DILocalVariable(name: "pfo_val__", scope: !10789, file: !10777, line: 21, type: !669)
!10789 = distinct !DILexicalBlock(scope: !10783, file: !10777, line: 21, column: 9)
!10790 = !DILocation(line: 21, column: 9, scope: !10789)
!10791 = !{i32 -2141875580}
!10792 = !DILocation(line: 21, column: 2, scope: !10776)
!10793 = distinct !DISubprogram(name: "__this_cpu_preempt_check", scope: !10794, file: !10794, line: 313, type: !10795, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10794 = !DIFile(filename: "./include/linux/percpu-defs.h", directory: "/home/lizy2001/genbc/linux")
!10795 = !DISubroutineType(types: !10796)
!10796 = !{null, !206}
!10797 = !DILocalVariable(name: "op", arg: 1, scope: !10793, file: !10794, line: 313, type: !206)
!10798 = !DILocation(line: 313, column: 57, scope: !10793)
!10799 = !DILocation(line: 313, column: 63, scope: !10793)
!10800 = distinct !DISubprogram(name: "show_state", scope: !10801, file: !10801, line: 19, type: !3381, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10801 = !DIFile(filename: "./include/linux/sched/debug.h", directory: "/home/lizy2001/genbc/linux")
!10802 = !DILocation(line: 21, column: 2, scope: !10800)
!10803 = !DILocation(line: 22, column: 1, scope: !10800)
!10804 = distinct !DISubprogram(name: "chg_vc_kbd_led", scope: !313, file: !313, line: 128, type: !5179, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10805 = !DILocalVariable(name: "kbd", arg: 1, scope: !10804, file: !313, line: 128, type: !412)
!10806 = !DILocation(line: 128, column: 55, scope: !10804)
!10807 = !DILocalVariable(name: "flag", arg: 2, scope: !10804, file: !313, line: 128, type: !165)
!10808 = !DILocation(line: 128, column: 64, scope: !10804)
!10809 = !DILocation(line: 130, column: 28, scope: !10804)
!10810 = !DILocation(line: 130, column: 25, scope: !10804)
!10811 = !DILocation(line: 130, column: 2, scope: !10804)
!10812 = !DILocation(line: 130, column: 7, scope: !10804)
!10813 = !DILocation(line: 130, column: 20, scope: !10804)
!10814 = !DILocation(line: 131, column: 1, scope: !10804)
!10815 = !DILocalVariable(name: "vc", arg: 1, scope: !4647, file: !3, line: 326, type: !4531)
!10816 = !DILocation(line: 326, column: 37, scope: !4647)
!10817 = !DILocalVariable(name: "key", arg: 2, scope: !4647, file: !3, line: 326, type: !165)
!10818 = !DILocation(line: 326, column: 45, scope: !4647)
!10819 = !DILocalVariable(name: "mode", arg: 3, scope: !4647, file: !3, line: 326, type: !156)
!10820 = !DILocation(line: 326, column: 55, scope: !4647)
!10821 = !DILocation(line: 330, column: 12, scope: !4647)
!10822 = !DILocation(line: 330, column: 11, scope: !4647)
!10823 = !DILocation(line: 330, column: 9, scope: !4647)
!10824 = !DILocation(line: 331, column: 11, scope: !4647)
!10825 = !DILocation(line: 331, column: 9, scope: !4647)
!10826 = !DILocation(line: 332, column: 13, scope: !4647)
!10827 = !DILocation(line: 332, column: 2, scope: !4647)
!10828 = !DILocation(line: 333, column: 1, scope: !4647)
!10829 = distinct !DISubprogram(name: "schedule_work", scope: !106, file: !106, line: 566, type: !10830, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10830 = !DISubroutineType(types: !10831)
!10831 = !{!292, !2584}
!10832 = !DILocalVariable(name: "work", arg: 1, scope: !10829, file: !106, line: 566, type: !2584)
!10833 = !DILocation(line: 566, column: 54, scope: !10829)
!10834 = !DILocation(line: 568, column: 20, scope: !10829)
!10835 = !DILocation(line: 568, column: 31, scope: !10829)
!10836 = !DILocation(line: 568, column: 9, scope: !10829)
!10837 = !DILocation(line: 568, column: 2, scope: !10829)
!10838 = distinct !DISubprogram(name: "queue_work", scope: !106, file: !106, line: 504, type: !10839, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10839 = !DISubroutineType(types: !10840)
!10840 = !{!292, !4236, !2584}
!10841 = !DILocalVariable(name: "wq", arg: 1, scope: !10838, file: !106, line: 504, type: !4236)
!10842 = !DILocation(line: 504, column: 56, scope: !10838)
!10843 = !DILocalVariable(name: "work", arg: 2, scope: !10838, file: !106, line: 505, type: !2584)
!10844 = !DILocation(line: 505, column: 30, scope: !10838)
!10845 = !DILocation(line: 507, column: 41, scope: !10838)
!10846 = !DILocation(line: 507, column: 45, scope: !10838)
!10847 = !DILocation(line: 507, column: 9, scope: !10838)
!10848 = !DILocation(line: 507, column: 2, scope: !10838)
!10849 = distinct !DISubprogram(name: "k_deadunicode", scope: !3, file: !3, line: 676, type: !4680, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10850 = !DILocalVariable(name: "vc", arg: 1, scope: !10849, file: !3, line: 676, type: !4531)
!10851 = !DILocation(line: 676, column: 43, scope: !10849)
!10852 = !DILocalVariable(name: "value", arg: 2, scope: !10849, file: !3, line: 676, type: !7)
!10853 = !DILocation(line: 676, column: 60, scope: !10849)
!10854 = !DILocalVariable(name: "up_flag", arg: 3, scope: !10849, file: !3, line: 676, type: !156)
!10855 = !DILocation(line: 676, column: 72, scope: !10849)
!10856 = !DILocation(line: 678, column: 6, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 678, column: 6)
!10858 = !DILocation(line: 678, column: 6, scope: !10849)
!10859 = !DILocation(line: 679, column: 3, scope: !10857)
!10860 = !DILocation(line: 681, column: 11, scope: !10849)
!10861 = !DILocation(line: 681, column: 32, scope: !10849)
!10862 = !DILocation(line: 681, column: 36, scope: !10849)
!10863 = !DILocation(line: 681, column: 19, scope: !10849)
!10864 = !DILocation(line: 681, column: 45, scope: !10849)
!10865 = !DILocation(line: 681, column: 8, scope: !10849)
!10866 = !DILocation(line: 682, column: 1, scope: !10849)
!10867 = distinct !DISubprogram(name: "chg_vc_kbd_lock", scope: !313, file: !313, line: 113, type: !5179, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10868 = !DILocalVariable(name: "kbd", arg: 1, scope: !10867, file: !313, line: 113, type: !412)
!10869 = !DILocation(line: 113, column: 56, scope: !10867)
!10870 = !DILocalVariable(name: "flag", arg: 2, scope: !10867, file: !313, line: 113, type: !165)
!10871 = !DILocation(line: 113, column: 65, scope: !10867)
!10872 = !DILocation(line: 115, column: 25, scope: !10867)
!10873 = !DILocation(line: 115, column: 22, scope: !10867)
!10874 = !DILocation(line: 115, column: 2, scope: !10867)
!10875 = !DILocation(line: 115, column: 7, scope: !10867)
!10876 = !DILocation(line: 115, column: 17, scope: !10867)
!10877 = !DILocation(line: 116, column: 1, scope: !10867)
!10878 = distinct !DISubprogram(name: "chg_vc_kbd_slock", scope: !313, file: !313, line: 118, type: !5179, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10879 = !DILocalVariable(name: "kbd", arg: 1, scope: !10878, file: !313, line: 118, type: !412)
!10880 = !DILocation(line: 118, column: 57, scope: !10878)
!10881 = !DILocalVariable(name: "flag", arg: 2, scope: !10878, file: !313, line: 118, type: !165)
!10882 = !DILocation(line: 118, column: 66, scope: !10878)
!10883 = !DILocation(line: 120, column: 26, scope: !10878)
!10884 = !DILocation(line: 120, column: 23, scope: !10878)
!10885 = !DILocation(line: 120, column: 2, scope: !10878)
!10886 = !DILocation(line: 120, column: 7, scope: !10878)
!10887 = !DILocation(line: 120, column: 18, scope: !10878)
!10888 = !DILocation(line: 121, column: 1, scope: !10878)
!10889 = !DILocalVariable(name: "vc", arg: 1, scope: !4679, file: !3, line: 934, type: !4531)
!10890 = !DILocation(line: 934, column: 41, scope: !4679)
!10891 = !DILocalVariable(name: "pattern", arg: 2, scope: !4679, file: !3, line: 934, type: !7)
!10892 = !DILocation(line: 934, column: 58, scope: !4679)
!10893 = !DILocalVariable(name: "up_flag", arg: 3, scope: !4679, file: !3, line: 934, type: !156)
!10894 = !DILocation(line: 934, column: 72, scope: !4679)
!10895 = !DILocation(line: 939, column: 7, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !4679, file: !3, line: 939, column: 6)
!10897 = !DILocation(line: 939, column: 6, scope: !4679)
!10898 = !DILocation(line: 940, column: 17, scope: !10896)
!10899 = !DILocation(line: 940, column: 34, scope: !10896)
!10900 = !DILocation(line: 940, column: 32, scope: !10896)
!10901 = !DILocation(line: 940, column: 43, scope: !10896)
!10902 = !DILocation(line: 940, column: 3, scope: !10896)
!10903 = !DILocation(line: 942, column: 16, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 941, column: 7)
!10905 = !DILocation(line: 942, column: 13, scope: !10904)
!10906 = !DILocation(line: 943, column: 9, scope: !10904)
!10907 = !DILocation(line: 944, column: 7, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10904, file: !3, line: 944, column: 7)
!10909 = !DILocation(line: 944, column: 17, scope: !10908)
!10910 = !DILocation(line: 944, column: 14, scope: !10908)
!10911 = !DILocation(line: 944, column: 7, scope: !10904)
!10912 = !DILocation(line: 945, column: 14, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 944, column: 31)
!10914 = !DILocation(line: 945, column: 31, scope: !10913)
!10915 = !DILocation(line: 945, column: 29, scope: !10913)
!10916 = !DILocation(line: 945, column: 42, scope: !10913)
!10917 = !DILocation(line: 945, column: 4, scope: !10913)
!10918 = !DILocation(line: 946, column: 11, scope: !10913)
!10919 = !DILocation(line: 947, column: 14, scope: !10913)
!10920 = !DILocation(line: 948, column: 3, scope: !10913)
!10921 = !DILocation(line: 950, column: 1, scope: !4679)
!10922 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !10334, file: !10334, line: 308, type: !10335, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10923 = !DILocalVariable(name: "m", arg: 1, scope: !10922, file: !10334, line: 308, type: !4270)
!10924 = !DILocation(line: 308, column: 66, scope: !10922)
!10925 = !DILocation(line: 310, column: 10, scope: !10922)
!10926 = !DILocation(line: 310, column: 12, scope: !10922)
!10927 = !DILocation(line: 310, column: 34, scope: !10922)
!10928 = !DILocation(line: 310, column: 39, scope: !10922)
!10929 = !DILocation(line: 310, column: 2, scope: !10922)
!10930 = distinct !DISubprogram(name: "kzalloc", scope: !144, file: !144, line: 662, type: !6043, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!10931 = !DILocation(line: 445, column: 72, scope: !6035, inlinedAt: !10932)
!10932 = distinct !DILocation(line: 552, column: 10, scope: !6040, inlinedAt: !10933)
!10933 = distinct !DILocation(line: 664, column: 9, scope: !10930)
!10934 = !DILocation(line: 446, column: 9, scope: !6035, inlinedAt: !10932)
!10935 = !DILocation(line: 446, column: 23, scope: !6035, inlinedAt: !10932)
!10936 = !DILocation(line: 448, column: 8, scope: !6035, inlinedAt: !10932)
!10937 = !DILocation(line: 318, column: 67, scope: !6054, inlinedAt: !10938)
!10938 = distinct !DILocation(line: 553, column: 20, scope: !6040, inlinedAt: !10933)
!10939 = !DILocation(line: 346, column: 58, scope: !6060, inlinedAt: !10940)
!10940 = distinct !DILocation(line: 547, column: 11, scope: !6040, inlinedAt: !10933)
!10941 = !DILocation(line: 472, column: 28, scope: !6066, inlinedAt: !10942)
!10942 = distinct !DILocation(line: 481, column: 9, scope: !6071, inlinedAt: !10943)
!10943 = distinct !DILocation(line: 545, column: 11, scope: !6073, inlinedAt: !10933)
!10944 = !DILocation(line: 472, column: 40, scope: !6066, inlinedAt: !10942)
!10945 = !DILocation(line: 472, column: 60, scope: !6066, inlinedAt: !10942)
!10946 = !DILocation(line: 478, column: 51, scope: !6071, inlinedAt: !10943)
!10947 = !DILocation(line: 478, column: 63, scope: !6071, inlinedAt: !10943)
!10948 = !DILocation(line: 480, column: 15, scope: !6071, inlinedAt: !10943)
!10949 = !DILocation(line: 538, column: 45, scope: !6042, inlinedAt: !10933)
!10950 = !DILocation(line: 538, column: 57, scope: !6042, inlinedAt: !10933)
!10951 = !DILocation(line: 542, column: 16, scope: !6040, inlinedAt: !10933)
!10952 = !DILocalVariable(name: "size", arg: 1, scope: !10930, file: !144, line: 662, type: !823)
!10953 = !DILocation(line: 662, column: 36, scope: !10930)
!10954 = !DILocalVariable(name: "flags", arg: 2, scope: !10930, file: !144, line: 662, type: !151)
!10955 = !DILocation(line: 662, column: 48, scope: !10930)
!10956 = !DILocation(line: 664, column: 17, scope: !10930)
!10957 = !DILocation(line: 664, column: 23, scope: !10930)
!10958 = !DILocation(line: 664, column: 29, scope: !10930)
!10959 = !DILocation(line: 540, column: 27, scope: !6041, inlinedAt: !10933)
!10960 = !DILocation(line: 540, column: 6, scope: !6041, inlinedAt: !10933)
!10961 = !DILocation(line: 540, column: 6, scope: !6042, inlinedAt: !10933)
!10962 = !DILocation(line: 544, column: 7, scope: !6073, inlinedAt: !10933)
!10963 = !DILocation(line: 544, column: 12, scope: !6073, inlinedAt: !10933)
!10964 = !DILocation(line: 544, column: 7, scope: !6040, inlinedAt: !10933)
!10965 = !DILocation(line: 545, column: 25, scope: !6073, inlinedAt: !10933)
!10966 = !DILocation(line: 545, column: 31, scope: !6073, inlinedAt: !10933)
!10967 = !DILocation(line: 480, column: 33, scope: !6071, inlinedAt: !10943)
!10968 = !DILocation(line: 480, column: 23, scope: !6071, inlinedAt: !10943)
!10969 = !DILocation(line: 481, column: 29, scope: !6071, inlinedAt: !10943)
!10970 = !DILocation(line: 481, column: 35, scope: !6071, inlinedAt: !10943)
!10971 = !DILocation(line: 481, column: 42, scope: !6071, inlinedAt: !10943)
!10972 = !DILocation(line: 474, column: 23, scope: !6066, inlinedAt: !10942)
!10973 = !DILocation(line: 474, column: 29, scope: !6066, inlinedAt: !10942)
!10974 = !DILocation(line: 474, column: 36, scope: !6066, inlinedAt: !10942)
!10975 = !DILocation(line: 474, column: 9, scope: !6066, inlinedAt: !10942)
!10976 = !DILocation(line: 545, column: 4, scope: !6073, inlinedAt: !10933)
!10977 = !DILocation(line: 547, column: 25, scope: !6040, inlinedAt: !10933)
!10978 = !DILocation(line: 348, column: 7, scope: !6136, inlinedAt: !10940)
!10979 = !DILocation(line: 348, column: 6, scope: !6060, inlinedAt: !10940)
!10980 = !DILocation(line: 349, column: 3, scope: !6136, inlinedAt: !10940)
!10981 = !DILocation(line: 351, column: 6, scope: !6140, inlinedAt: !10940)
!10982 = !DILocation(line: 351, column: 11, scope: !6140, inlinedAt: !10940)
!10983 = !DILocation(line: 351, column: 6, scope: !6060, inlinedAt: !10940)
!10984 = !DILocation(line: 352, column: 3, scope: !6140, inlinedAt: !10940)
!10985 = !DILocation(line: 354, column: 32, scope: !6145, inlinedAt: !10940)
!10986 = !DILocation(line: 354, column: 37, scope: !6145, inlinedAt: !10940)
!10987 = !DILocation(line: 354, column: 42, scope: !6145, inlinedAt: !10940)
!10988 = !DILocation(line: 354, column: 45, scope: !6145, inlinedAt: !10940)
!10989 = !DILocation(line: 354, column: 50, scope: !6145, inlinedAt: !10940)
!10990 = !DILocation(line: 354, column: 6, scope: !6060, inlinedAt: !10940)
!10991 = !DILocation(line: 355, column: 3, scope: !6145, inlinedAt: !10940)
!10992 = !DILocation(line: 356, column: 32, scope: !6153, inlinedAt: !10940)
!10993 = !DILocation(line: 356, column: 37, scope: !6153, inlinedAt: !10940)
!10994 = !DILocation(line: 356, column: 43, scope: !6153, inlinedAt: !10940)
!10995 = !DILocation(line: 356, column: 46, scope: !6153, inlinedAt: !10940)
!10996 = !DILocation(line: 356, column: 51, scope: !6153, inlinedAt: !10940)
!10997 = !DILocation(line: 356, column: 6, scope: !6060, inlinedAt: !10940)
!10998 = !DILocation(line: 357, column: 3, scope: !6153, inlinedAt: !10940)
!10999 = !DILocation(line: 358, column: 6, scope: !6161, inlinedAt: !10940)
!11000 = !DILocation(line: 358, column: 11, scope: !6161, inlinedAt: !10940)
!11001 = !DILocation(line: 358, column: 6, scope: !6060, inlinedAt: !10940)
!11002 = !DILocation(line: 358, column: 26, scope: !6161, inlinedAt: !10940)
!11003 = !DILocation(line: 359, column: 6, scope: !6166, inlinedAt: !10940)
!11004 = !DILocation(line: 359, column: 11, scope: !6166, inlinedAt: !10940)
!11005 = !DILocation(line: 359, column: 6, scope: !6060, inlinedAt: !10940)
!11006 = !DILocation(line: 359, column: 26, scope: !6166, inlinedAt: !10940)
!11007 = !DILocation(line: 360, column: 6, scope: !6171, inlinedAt: !10940)
!11008 = !DILocation(line: 360, column: 11, scope: !6171, inlinedAt: !10940)
!11009 = !DILocation(line: 360, column: 6, scope: !6060, inlinedAt: !10940)
!11010 = !DILocation(line: 360, column: 26, scope: !6171, inlinedAt: !10940)
!11011 = !DILocation(line: 361, column: 6, scope: !6176, inlinedAt: !10940)
!11012 = !DILocation(line: 361, column: 11, scope: !6176, inlinedAt: !10940)
!11013 = !DILocation(line: 361, column: 6, scope: !6060, inlinedAt: !10940)
!11014 = !DILocation(line: 361, column: 26, scope: !6176, inlinedAt: !10940)
!11015 = !DILocation(line: 362, column: 6, scope: !6181, inlinedAt: !10940)
!11016 = !DILocation(line: 362, column: 11, scope: !6181, inlinedAt: !10940)
!11017 = !DILocation(line: 362, column: 6, scope: !6060, inlinedAt: !10940)
!11018 = !DILocation(line: 362, column: 26, scope: !6181, inlinedAt: !10940)
!11019 = !DILocation(line: 363, column: 6, scope: !6186, inlinedAt: !10940)
!11020 = !DILocation(line: 363, column: 11, scope: !6186, inlinedAt: !10940)
!11021 = !DILocation(line: 363, column: 6, scope: !6060, inlinedAt: !10940)
!11022 = !DILocation(line: 363, column: 26, scope: !6186, inlinedAt: !10940)
!11023 = !DILocation(line: 364, column: 6, scope: !6191, inlinedAt: !10940)
!11024 = !DILocation(line: 364, column: 11, scope: !6191, inlinedAt: !10940)
!11025 = !DILocation(line: 364, column: 6, scope: !6060, inlinedAt: !10940)
!11026 = !DILocation(line: 364, column: 26, scope: !6191, inlinedAt: !10940)
!11027 = !DILocation(line: 365, column: 6, scope: !6196, inlinedAt: !10940)
!11028 = !DILocation(line: 365, column: 11, scope: !6196, inlinedAt: !10940)
!11029 = !DILocation(line: 365, column: 6, scope: !6060, inlinedAt: !10940)
!11030 = !DILocation(line: 365, column: 26, scope: !6196, inlinedAt: !10940)
!11031 = !DILocation(line: 366, column: 6, scope: !6201, inlinedAt: !10940)
!11032 = !DILocation(line: 366, column: 11, scope: !6201, inlinedAt: !10940)
!11033 = !DILocation(line: 366, column: 6, scope: !6060, inlinedAt: !10940)
!11034 = !DILocation(line: 366, column: 26, scope: !6201, inlinedAt: !10940)
!11035 = !DILocation(line: 367, column: 6, scope: !6206, inlinedAt: !10940)
!11036 = !DILocation(line: 367, column: 11, scope: !6206, inlinedAt: !10940)
!11037 = !DILocation(line: 367, column: 6, scope: !6060, inlinedAt: !10940)
!11038 = !DILocation(line: 367, column: 26, scope: !6206, inlinedAt: !10940)
!11039 = !DILocation(line: 368, column: 6, scope: !6211, inlinedAt: !10940)
!11040 = !DILocation(line: 368, column: 11, scope: !6211, inlinedAt: !10940)
!11041 = !DILocation(line: 368, column: 6, scope: !6060, inlinedAt: !10940)
!11042 = !DILocation(line: 368, column: 26, scope: !6211, inlinedAt: !10940)
!11043 = !DILocation(line: 369, column: 6, scope: !6216, inlinedAt: !10940)
!11044 = !DILocation(line: 369, column: 11, scope: !6216, inlinedAt: !10940)
!11045 = !DILocation(line: 369, column: 6, scope: !6060, inlinedAt: !10940)
!11046 = !DILocation(line: 369, column: 26, scope: !6216, inlinedAt: !10940)
!11047 = !DILocation(line: 370, column: 6, scope: !6221, inlinedAt: !10940)
!11048 = !DILocation(line: 370, column: 11, scope: !6221, inlinedAt: !10940)
!11049 = !DILocation(line: 370, column: 6, scope: !6060, inlinedAt: !10940)
!11050 = !DILocation(line: 370, column: 26, scope: !6221, inlinedAt: !10940)
!11051 = !DILocation(line: 371, column: 6, scope: !6226, inlinedAt: !10940)
!11052 = !DILocation(line: 371, column: 11, scope: !6226, inlinedAt: !10940)
!11053 = !DILocation(line: 371, column: 6, scope: !6060, inlinedAt: !10940)
!11054 = !DILocation(line: 371, column: 26, scope: !6226, inlinedAt: !10940)
!11055 = !DILocation(line: 372, column: 6, scope: !6231, inlinedAt: !10940)
!11056 = !DILocation(line: 372, column: 11, scope: !6231, inlinedAt: !10940)
!11057 = !DILocation(line: 372, column: 6, scope: !6060, inlinedAt: !10940)
!11058 = !DILocation(line: 372, column: 26, scope: !6231, inlinedAt: !10940)
!11059 = !DILocation(line: 373, column: 6, scope: !6236, inlinedAt: !10940)
!11060 = !DILocation(line: 373, column: 11, scope: !6236, inlinedAt: !10940)
!11061 = !DILocation(line: 373, column: 6, scope: !6060, inlinedAt: !10940)
!11062 = !DILocation(line: 373, column: 26, scope: !6236, inlinedAt: !10940)
!11063 = !DILocation(line: 374, column: 6, scope: !6241, inlinedAt: !10940)
!11064 = !DILocation(line: 374, column: 11, scope: !6241, inlinedAt: !10940)
!11065 = !DILocation(line: 374, column: 6, scope: !6060, inlinedAt: !10940)
!11066 = !DILocation(line: 374, column: 26, scope: !6241, inlinedAt: !10940)
!11067 = !DILocation(line: 375, column: 6, scope: !6246, inlinedAt: !10940)
!11068 = !DILocation(line: 375, column: 11, scope: !6246, inlinedAt: !10940)
!11069 = !DILocation(line: 375, column: 6, scope: !6060, inlinedAt: !10940)
!11070 = !DILocation(line: 375, column: 27, scope: !6246, inlinedAt: !10940)
!11071 = !DILocation(line: 376, column: 6, scope: !6251, inlinedAt: !10940)
!11072 = !DILocation(line: 376, column: 11, scope: !6251, inlinedAt: !10940)
!11073 = !DILocation(line: 376, column: 6, scope: !6060, inlinedAt: !10940)
!11074 = !DILocation(line: 376, column: 32, scope: !6251, inlinedAt: !10940)
!11075 = !DILocation(line: 377, column: 6, scope: !6256, inlinedAt: !10940)
!11076 = !DILocation(line: 377, column: 11, scope: !6256, inlinedAt: !10940)
!11077 = !DILocation(line: 377, column: 6, scope: !6060, inlinedAt: !10940)
!11078 = !DILocation(line: 377, column: 32, scope: !6256, inlinedAt: !10940)
!11079 = !DILocation(line: 378, column: 6, scope: !6261, inlinedAt: !10940)
!11080 = !DILocation(line: 378, column: 11, scope: !6261, inlinedAt: !10940)
!11081 = !DILocation(line: 378, column: 6, scope: !6060, inlinedAt: !10940)
!11082 = !DILocation(line: 378, column: 32, scope: !6261, inlinedAt: !10940)
!11083 = !DILocation(line: 379, column: 6, scope: !6266, inlinedAt: !10940)
!11084 = !DILocation(line: 379, column: 11, scope: !6266, inlinedAt: !10940)
!11085 = !DILocation(line: 379, column: 6, scope: !6060, inlinedAt: !10940)
!11086 = !DILocation(line: 379, column: 33, scope: !6266, inlinedAt: !10940)
!11087 = !DILocation(line: 380, column: 6, scope: !6271, inlinedAt: !10940)
!11088 = !DILocation(line: 380, column: 11, scope: !6271, inlinedAt: !10940)
!11089 = !DILocation(line: 380, column: 6, scope: !6060, inlinedAt: !10940)
!11090 = !DILocation(line: 380, column: 33, scope: !6271, inlinedAt: !10940)
!11091 = !DILocation(line: 381, column: 6, scope: !6276, inlinedAt: !10940)
!11092 = !DILocation(line: 381, column: 11, scope: !6276, inlinedAt: !10940)
!11093 = !DILocation(line: 381, column: 6, scope: !6060, inlinedAt: !10940)
!11094 = !DILocation(line: 381, column: 33, scope: !6276, inlinedAt: !10940)
!11095 = !DILocation(line: 382, column: 2, scope: !6281, inlinedAt: !10940)
!11096 = !DILocation(line: 382, column: 2, scope: !6285, inlinedAt: !10940)
!11097 = !DILocation(line: 382, column: 2, scope: !6286, inlinedAt: !10940)
!11098 = !DILocation(line: 386, column: 1, scope: !6060, inlinedAt: !10940)
!11099 = !DILocation(line: 547, column: 9, scope: !6040, inlinedAt: !10933)
!11100 = !DILocation(line: 549, column: 8, scope: !6292, inlinedAt: !10933)
!11101 = !DILocation(line: 549, column: 7, scope: !6040, inlinedAt: !10933)
!11102 = !DILocation(line: 550, column: 4, scope: !6292, inlinedAt: !10933)
!11103 = !DILocation(line: 553, column: 33, scope: !6040, inlinedAt: !10933)
!11104 = !DILocation(line: 325, column: 6, scope: !6297, inlinedAt: !10938)
!11105 = !DILocation(line: 325, column: 6, scope: !6054, inlinedAt: !10938)
!11106 = !DILocation(line: 326, column: 3, scope: !6297, inlinedAt: !10938)
!11107 = !DILocation(line: 332, column: 9, scope: !6054, inlinedAt: !10938)
!11108 = !DILocation(line: 332, column: 15, scope: !6054, inlinedAt: !10938)
!11109 = !DILocation(line: 332, column: 2, scope: !6054, inlinedAt: !10938)
!11110 = !DILocation(line: 336, column: 1, scope: !6054, inlinedAt: !10938)
!11111 = !DILocation(line: 553, column: 5, scope: !6040, inlinedAt: !10933)
!11112 = !DILocation(line: 553, column: 41, scope: !6040, inlinedAt: !10933)
!11113 = !DILocation(line: 554, column: 5, scope: !6040, inlinedAt: !10933)
!11114 = !DILocation(line: 554, column: 12, scope: !6040, inlinedAt: !10933)
!11115 = !DILocation(line: 448, column: 31, scope: !6035, inlinedAt: !10932)
!11116 = !DILocation(line: 448, column: 34, scope: !6035, inlinedAt: !10932)
!11117 = !DILocation(line: 448, column: 14, scope: !6035, inlinedAt: !10932)
!11118 = !DILocation(line: 450, column: 22, scope: !6035, inlinedAt: !10932)
!11119 = !DILocation(line: 450, column: 25, scope: !6035, inlinedAt: !10932)
!11120 = !DILocation(line: 450, column: 30, scope: !6035, inlinedAt: !10932)
!11121 = !DILocation(line: 450, column: 36, scope: !6035, inlinedAt: !10932)
!11122 = !DILocation(line: 450, column: 8, scope: !6035, inlinedAt: !10932)
!11123 = !DILocation(line: 450, column: 6, scope: !6035, inlinedAt: !10932)
!11124 = !DILocation(line: 451, column: 9, scope: !6035, inlinedAt: !10932)
!11125 = !DILocation(line: 552, column: 3, scope: !6040, inlinedAt: !10933)
!11126 = !DILocation(line: 557, column: 19, scope: !6042, inlinedAt: !10933)
!11127 = !DILocation(line: 557, column: 25, scope: !6042, inlinedAt: !10933)
!11128 = !DILocation(line: 557, column: 9, scope: !6042, inlinedAt: !10933)
!11129 = !DILocation(line: 557, column: 2, scope: !6042, inlinedAt: !10933)
!11130 = !DILocation(line: 558, column: 1, scope: !6042, inlinedAt: !10933)
!11131 = !DILocation(line: 664, column: 2, scope: !10930)
!11132 = distinct !DISubprogram(name: "tasklet_disable", scope: !139, file: !139, line: 701, type: !303, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11133 = !DILocalVariable(name: "t", arg: 1, scope: !11132, file: !139, line: 701, type: !284)
!11134 = !DILocation(line: 701, column: 59, scope: !11132)
!11135 = !DILocation(line: 703, column: 25, scope: !11132)
!11136 = !DILocation(line: 703, column: 2, scope: !11132)
!11137 = !DILocation(line: 704, column: 2, scope: !11132)
!11138 = !DILocation(line: 704, column: 2, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11132, file: !139, line: 704, column: 2)
!11140 = !DILocation(line: 705, column: 2, scope: !11132)
!11141 = !{i32 -2142022238}
!11142 = !DILocation(line: 706, column: 1, scope: !11132)
!11143 = distinct !DISubprogram(name: "tasklet_disable_nosync", scope: !139, file: !139, line: 695, type: !303, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11144 = !DILocalVariable(name: "v", arg: 1, scope: !11145, file: !5391, line: 93, type: !5394)
!11145 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !5391, file: !5391, line: 93, type: !5392, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11146 = !DILocation(line: 93, column: 55, scope: !11145, inlinedAt: !11147)
!11147 = distinct !DILocation(line: 241, column: 2, scope: !11148, inlinedAt: !11149)
!11148 = distinct !DISubprogram(name: "atomic_inc", scope: !5398, file: !5398, line: 238, type: !5392, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11149 = distinct !DILocation(line: 697, column: 2, scope: !11143)
!11150 = !DILocation(line: 99, column: 79, scope: !5401, inlinedAt: !11151)
!11151 = distinct !DILocation(line: 240, column: 2, scope: !11148, inlinedAt: !11149)
!11152 = !DILocation(line: 99, column: 89, scope: !5401, inlinedAt: !11151)
!11153 = !DILocalVariable(name: "v", arg: 1, scope: !11148, file: !5398, line: 238, type: !5394)
!11154 = !DILocation(line: 238, column: 22, scope: !11148, inlinedAt: !11149)
!11155 = !DILocalVariable(name: "t", arg: 1, scope: !11143, file: !139, line: 695, type: !284)
!11156 = !DILocation(line: 695, column: 66, scope: !11143)
!11157 = !DILocation(line: 697, column: 14, scope: !11143)
!11158 = !DILocation(line: 697, column: 17, scope: !11143)
!11159 = !DILocation(line: 240, column: 31, scope: !11148, inlinedAt: !11149)
!11160 = !DILocation(line: 101, column: 20, scope: !5401, inlinedAt: !11151)
!11161 = !DILocation(line: 101, column: 23, scope: !5401, inlinedAt: !11151)
!11162 = !DILocation(line: 101, column: 2, scope: !5401, inlinedAt: !11151)
!11163 = !DILocation(line: 102, column: 2, scope: !5401, inlinedAt: !11151)
!11164 = !DILocation(line: 241, column: 18, scope: !11148, inlinedAt: !11149)
!11165 = !DILocation(line: 96, column: 16, scope: !11145, inlinedAt: !11147)
!11166 = !DILocation(line: 96, column: 19, scope: !11145, inlinedAt: !11147)
!11167 = !DILocation(line: 95, column: 2, scope: !11145, inlinedAt: !11147)
!11168 = !{i32 -2146575705}
!11169 = !DILocation(line: 698, column: 2, scope: !11143)
!11170 = !{i32 -2142022468}
!11171 = !DILocation(line: 699, column: 1, scope: !11143)
!11172 = distinct !DISubprogram(name: "test_and_set_bit", scope: !9546, file: !9546, line: 68, type: !11173, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11173 = !DISubroutineType(types: !11174)
!11174 = !{!292, !107, !9549}
!11175 = !DILocalVariable(name: "nr", arg: 1, scope: !11176, file: !8679, line: 136, type: !107)
!11176 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !8679, file: !8679, line: 136, type: !11173, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11177 = !DILocation(line: 136, column: 28, scope: !11176, inlinedAt: !11178)
!11178 = distinct !DILocation(line: 71, column: 9, scope: !11172)
!11179 = !DILocalVariable(name: "addr", arg: 2, scope: !11176, file: !8679, line: 136, type: !9549)
!11180 = !DILocation(line: 136, column: 56, scope: !11176, inlinedAt: !11178)
!11181 = !DILocalVariable(name: "c", scope: !11182, file: !8679, line: 138, type: !292)
!11182 = distinct !DILexicalBlock(scope: !11176, file: !8679, line: 138, column: 9)
!11183 = !DILocation(line: 138, column: 9, scope: !11182, inlinedAt: !11178)
!11184 = !DILocation(line: 99, column: 79, scope: !5401, inlinedAt: !11185)
!11185 = distinct !DILocation(line: 70, column: 2, scope: !11172)
!11186 = !DILocation(line: 99, column: 89, scope: !5401, inlinedAt: !11185)
!11187 = !DILocalVariable(name: "nr", arg: 1, scope: !11172, file: !9546, line: 68, type: !107)
!11188 = !DILocation(line: 68, column: 42, scope: !11172)
!11189 = !DILocalVariable(name: "addr", arg: 2, scope: !11172, file: !9546, line: 68, type: !9549)
!11190 = !DILocation(line: 68, column: 70, scope: !11172)
!11191 = !DILocation(line: 70, column: 31, scope: !11172)
!11192 = !DILocation(line: 70, column: 38, scope: !11172)
!11193 = !DILocation(line: 70, column: 36, scope: !11172)
!11194 = !DILocation(line: 101, column: 20, scope: !5401, inlinedAt: !11185)
!11195 = !DILocation(line: 101, column: 23, scope: !5401, inlinedAt: !11185)
!11196 = !DILocation(line: 101, column: 2, scope: !5401, inlinedAt: !11185)
!11197 = !DILocation(line: 102, column: 2, scope: !5401, inlinedAt: !11185)
!11198 = !DILocation(line: 71, column: 31, scope: !11172)
!11199 = !DILocation(line: 71, column: 35, scope: !11172)
!11200 = !{i32 -2147095343, i32 -2147095247}
!11201 = !DILocation(line: 71, column: 2, scope: !11172)
!11202 = distinct !DISubprogram(name: "__must_check_overflow", scope: !11203, file: !11203, line: 52, type: !11204, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11203 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!11204 = !DISubroutineType(types: !11205)
!11205 = !{!292, !292}
!11206 = !DILocalVariable(name: "overflow", arg: 1, scope: !11202, file: !11203, line: 52, type: !292)
!11207 = !DILocation(line: 52, column: 60, scope: !11202)
!11208 = !DILocation(line: 54, column: 9, scope: !11202)
!11209 = !DILocation(line: 54, column: 2, scope: !11202)
!11210 = distinct !DISubprogram(name: "copy_overflow", scope: !5467, file: !5467, line: 132, type: !11211, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11211 = !DISubroutineType(types: !11212)
!11212 = !{null, !165, !158}
!11213 = !DILocalVariable(name: "size", arg: 1, scope: !11210, file: !5467, line: 132, type: !165)
!11214 = !DILocation(line: 132, column: 38, scope: !11210)
!11215 = !DILocalVariable(name: "count", arg: 2, scope: !11210, file: !5467, line: 132, type: !158)
!11216 = !DILocation(line: 132, column: 58, scope: !11210)
!11217 = !DILocalVariable(name: "__ret_warn_on", scope: !11218, file: !5467, line: 134, type: !165)
!11218 = distinct !DILexicalBlock(scope: !11210, file: !5467, line: 134, column: 2)
!11219 = !DILocation(line: 134, column: 2, scope: !11218)
!11220 = !DILocation(line: 134, column: 2, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11218, file: !5467, line: 134, column: 2)
!11222 = !DILocation(line: 134, column: 2, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11221, file: !5467, line: 134, column: 2)
!11224 = !DILocation(line: 134, column: 2, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11223, file: !5467, line: 134, column: 2)
!11226 = !DILocation(line: 134, column: 2, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11223, file: !5467, line: 134, column: 2)
!11228 = !DILocation(line: 134, column: 2, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11227, file: !5467, line: 134, column: 2)
!11230 = !DILocation(line: 134, column: 2, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11227, file: !5467, line: 134, column: 2)
!11232 = !{i32 -2145506264, i32 -2145506235, i32 -2145506189, i32 -2145506131, i32 -2145506077, i32 -2145506023, i32 -2145505968, i32 -2145505937}
!11233 = !DILocation(line: 134, column: 2, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11227, file: !5467, line: 134, column: 2)
!11235 = !{i32 -2145505517, i32 -2145505510, i32 -2145505458, i32 -2145505427, i32 -2145505397}
!11236 = !DILocation(line: 134, column: 2, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11227, file: !5467, line: 134, column: 2)
!11238 = !DILocation(line: 134, column: 2, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11223, file: !5467, line: 134, column: 2)
!11240 = !DILocation(line: 135, column: 1, scope: !11210)
!11241 = distinct !DISubprogram(name: "check_object_size", scope: !5467, file: !5467, line: 122, type: !11242, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11242 = !DISubroutineType(types: !11243)
!11243 = !{null, !2207, !158, !292}
!11244 = !DILocalVariable(name: "ptr", arg: 1, scope: !11241, file: !5467, line: 122, type: !2207)
!11245 = !DILocation(line: 122, column: 50, scope: !11241)
!11246 = !DILocalVariable(name: "n", arg: 2, scope: !11241, file: !5467, line: 122, type: !158)
!11247 = !DILocation(line: 122, column: 69, scope: !11241)
!11248 = !DILocalVariable(name: "to_user", arg: 3, scope: !11241, file: !5467, line: 123, type: !292)
!11249 = !DILocation(line: 123, column: 15, scope: !11241)
!11250 = !DILocation(line: 124, column: 3, scope: !11241)
!11251 = distinct !DISubprogram(name: "getkeycode_helper", scope: !3, file: !3, line: 176, type: !4743, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11252 = !DILocalVariable(name: "handle", arg: 1, scope: !11251, file: !3, line: 176, type: !425)
!11253 = !DILocation(line: 176, column: 51, scope: !11251)
!11254 = !DILocalVariable(name: "data", arg: 2, scope: !11251, file: !3, line: 176, type: !153)
!11255 = !DILocation(line: 176, column: 65, scope: !11251)
!11256 = !DILocalVariable(name: "d", scope: !11251, file: !3, line: 178, type: !11257)
!11257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6631, size: 64)
!11258 = !DILocation(line: 178, column: 30, scope: !11251)
!11259 = !DILocation(line: 178, column: 34, scope: !11251)
!11260 = !DILocation(line: 180, column: 31, scope: !11251)
!11261 = !DILocation(line: 180, column: 39, scope: !11251)
!11262 = !DILocation(line: 180, column: 45, scope: !11251)
!11263 = !DILocation(line: 180, column: 48, scope: !11251)
!11264 = !DILocation(line: 180, column: 13, scope: !11251)
!11265 = !DILocation(line: 180, column: 2, scope: !11251)
!11266 = !DILocation(line: 180, column: 5, scope: !11251)
!11267 = !DILocation(line: 180, column: 11, scope: !11251)
!11268 = !DILocation(line: 182, column: 9, scope: !11251)
!11269 = !DILocation(line: 182, column: 12, scope: !11251)
!11270 = !DILocation(line: 182, column: 18, scope: !11251)
!11271 = !DILocation(line: 182, column: 2, scope: !11251)
!11272 = distinct !DISubprogram(name: "setkeycode_helper", scope: !3, file: !3, line: 203, type: !4743, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11273 = !DILocalVariable(name: "handle", arg: 1, scope: !11272, file: !3, line: 203, type: !425)
!11274 = !DILocation(line: 203, column: 51, scope: !11272)
!11275 = !DILocalVariable(name: "data", arg: 2, scope: !11272, file: !3, line: 203, type: !153)
!11276 = !DILocation(line: 203, column: 65, scope: !11272)
!11277 = !DILocalVariable(name: "d", scope: !11272, file: !3, line: 205, type: !11257)
!11278 = !DILocation(line: 205, column: 30, scope: !11272)
!11279 = !DILocation(line: 205, column: 34, scope: !11272)
!11280 = !DILocation(line: 207, column: 31, scope: !11272)
!11281 = !DILocation(line: 207, column: 39, scope: !11272)
!11282 = !DILocation(line: 207, column: 45, scope: !11272)
!11283 = !DILocation(line: 207, column: 48, scope: !11272)
!11284 = !DILocation(line: 207, column: 13, scope: !11272)
!11285 = !DILocation(line: 207, column: 2, scope: !11272)
!11286 = !DILocation(line: 207, column: 5, scope: !11272)
!11287 = !DILocation(line: 207, column: 11, scope: !11272)
!11288 = !DILocation(line: 209, column: 9, scope: !11272)
!11289 = !DILocation(line: 209, column: 12, scope: !11272)
!11290 = !DILocation(line: 209, column: 18, scope: !11272)
!11291 = !DILocation(line: 209, column: 2, scope: !11272)
!11292 = distinct !DISubprogram(name: "get_order", scope: !11293, file: !11293, line: 29, type: !11294, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11293 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11294 = !DISubroutineType(types: !11295)
!11295 = !{!165, !158}
!11296 = !DILocalVariable(name: "x", arg: 1, scope: !11297, file: !8679, line: 366, type: !670)
!11297 = distinct !DISubprogram(name: "fls64", scope: !8679, file: !8679, line: 366, type: !11298, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11298 = !DISubroutineType(types: !11299)
!11299 = !{!165, !670}
!11300 = !DILocation(line: 366, column: 40, scope: !11297, inlinedAt: !11301)
!11301 = distinct !DILocation(line: 46, column: 9, scope: !11292)
!11302 = !DILocalVariable(name: "bitpos", scope: !11297, file: !8679, line: 368, type: !165)
!11303 = !DILocation(line: 368, column: 6, scope: !11297, inlinedAt: !11301)
!11304 = !DILocalVariable(name: "size", arg: 1, scope: !11292, file: !11293, line: 29, type: !158)
!11305 = !DILocation(line: 29, column: 63, scope: !11292)
!11306 = !DILocation(line: 31, column: 27, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11292, file: !11293, line: 31, column: 6)
!11308 = !DILocation(line: 31, column: 6, scope: !11307)
!11309 = !DILocation(line: 31, column: 6, scope: !11292)
!11310 = !DILocation(line: 32, column: 8, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11312, file: !11293, line: 32, column: 7)
!11312 = distinct !DILexicalBlock(scope: !11307, file: !11293, line: 31, column: 34)
!11313 = !DILocation(line: 32, column: 7, scope: !11312)
!11314 = !DILocation(line: 33, column: 4, scope: !11311)
!11315 = !DILocation(line: 35, column: 7, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11312, file: !11293, line: 35, column: 7)
!11317 = !DILocation(line: 35, column: 12, scope: !11316)
!11318 = !DILocation(line: 35, column: 7, scope: !11312)
!11319 = !DILocation(line: 36, column: 4, scope: !11316)
!11320 = !DILocation(line: 38, column: 10, scope: !11312)
!11321 = !DILocation(line: 38, column: 28, scope: !11312)
!11322 = !DILocation(line: 38, column: 41, scope: !11312)
!11323 = !DILocation(line: 38, column: 3, scope: !11312)
!11324 = !DILocation(line: 41, column: 6, scope: !11292)
!11325 = !DILocation(line: 42, column: 7, scope: !11292)
!11326 = !DILocation(line: 46, column: 15, scope: !11292)
!11327 = !DILocation(line: 374, column: 2, scope: !11297, inlinedAt: !11301)
!11328 = !DILocation(line: 376, column: 14, scope: !11297, inlinedAt: !11301)
!11329 = !{i32 352392}
!11330 = !DILocation(line: 377, column: 9, scope: !11297, inlinedAt: !11301)
!11331 = !DILocation(line: 377, column: 16, scope: !11297, inlinedAt: !11301)
!11332 = !DILocation(line: 46, column: 2, scope: !11292)
!11333 = !DILocation(line: 48, column: 1, scope: !11292)
!11334 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11335, file: !11335, line: 30, type: !11336, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11335 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11336 = !DISubroutineType(types: !11337)
!11337 = !{!165, !669}
!11338 = !DILocation(line: 366, column: 40, scope: !11297, inlinedAt: !11339)
!11339 = distinct !DILocation(line: 32, column: 9, scope: !11334)
!11340 = !DILocation(line: 368, column: 6, scope: !11297, inlinedAt: !11339)
!11341 = !DILocalVariable(name: "n", arg: 1, scope: !11334, file: !11335, line: 30, type: !669)
!11342 = !DILocation(line: 30, column: 21, scope: !11334)
!11343 = !DILocation(line: 32, column: 15, scope: !11334)
!11344 = !DILocation(line: 374, column: 2, scope: !11297, inlinedAt: !11339)
!11345 = !DILocation(line: 376, column: 14, scope: !11297, inlinedAt: !11339)
!11346 = !DILocation(line: 377, column: 9, scope: !11297, inlinedAt: !11339)
!11347 = !DILocation(line: 377, column: 16, scope: !11297, inlinedAt: !11339)
!11348 = !DILocation(line: 32, column: 18, scope: !11334)
!11349 = !DILocation(line: 32, column: 2, scope: !11334)
!11350 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !11351, file: !11351, line: 137, type: !11352, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !346)
!11351 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!11352 = !DISubroutineType(types: !11353)
!11353 = !{!153, !1202, !2207, !823, !151}
!11354 = !DILocalVariable(name: "s", arg: 1, scope: !11350, file: !11351, line: 137, type: !1202)
!11355 = !DILocation(line: 137, column: 54, scope: !11350)
!11356 = !DILocalVariable(name: "object", arg: 2, scope: !11350, file: !11351, line: 137, type: !2207)
!11357 = !DILocation(line: 137, column: 69, scope: !11350)
!11358 = !DILocalVariable(name: "size", arg: 3, scope: !11350, file: !11351, line: 138, type: !823)
!11359 = !DILocation(line: 138, column: 12, scope: !11350)
!11360 = !DILocalVariable(name: "flags", arg: 4, scope: !11350, file: !11351, line: 138, type: !151)
!11361 = !DILocation(line: 138, column: 24, scope: !11350)
!11362 = !DILocation(line: 140, column: 17, scope: !11350)
!11363 = !DILocation(line: 140, column: 2, scope: !11350)
